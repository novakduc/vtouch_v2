

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Jan 17 19:13:04 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=2
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=2
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1,inline
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1,inline
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=2
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=2
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1,group=1
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1,group=1
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1,group=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1
   141                           	psect	text119,global,reloc=2,class=CODE,delta=1
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1
   143                           	psect	text121,global,reloc=2,class=CODE,delta=1
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1
   145                           	psect	text123,global,reloc=2,class=CODE,delta=1
   146                           	psect	text124,global,reloc=2,class=CODE,delta=1
   147                           	psect	text125,global,reloc=2,class=CODE,delta=1
   148                           	psect	text126,global,reloc=2,class=CODE,delta=1
   149                           	psect	text127,global,reloc=2,class=CODE,delta=1
   150                           	psect	text128,global,reloc=2,class=CODE,delta=1
   151                           	psect	text129,global,reloc=2,class=CODE,delta=1
   152                           	psect	text130,global,reloc=2,class=CODE,delta=1
   153                           	psect	text131,global,reloc=2,class=CODE,delta=1
   154                           	psect	text132,global,reloc=2,class=CODE,delta=1
   155                           	psect	text133,global,reloc=2,class=CODE,delta=1
   156                           	psect	text134,global,reloc=2,class=CODE,delta=1
   157                           	psect	text135,global,reloc=2,class=CODE,delta=1
   158                           	psect	text136,global,reloc=2,class=CODE,delta=1
   159                           	psect	text137,global,reloc=2,class=CODE,delta=1
   160                           	psect	text138,global,reloc=2,class=CODE,delta=1
   161                           	psect	text139,global,reloc=2,class=CODE,delta=1
   162                           	psect	text140,global,reloc=4,class=CODE,delta=1
   163                           	psect	text141,global,reloc=2,class=CODE,delta=1
   164                           	psect	text142,global,reloc=2,class=CODE,delta=1
   165                           	psect	text143,global,reloc=2,class=CODE,delta=1
   166                           	psect	text144,global,reloc=4,class=CODE,delta=1
   167                           	psect	text145,global,reloc=2,class=CODE,delta=1
   168                           	psect	text146,global,reloc=2,class=CODE,delta=1
   169                           	psect	text147,global,reloc=2,class=CODE,delta=1
   170                           	psect	text148,global,reloc=2,class=CODE,delta=1
   171                           	psect	text149,global,reloc=2,class=CODE,delta=1
   172                           	psect	text150,global,reloc=2,class=CODE,delta=1
   173                           	psect	text151,global,reloc=4,class=CODE,delta=1
   174                           	psect	text152,global,reloc=2,class=CODE,delta=1
   175                           	psect	text153,global,reloc=2,class=CODE,delta=1
   176                           	psect	text154,global,reloc=2,class=CODE,delta=1
   177                           	psect	text155,global,reloc=2,class=CODE,delta=1
   178                           	psect	text156,global,reloc=2,class=CODE,delta=1
   179                           	psect	text157,global,reloc=2,class=CODE,delta=1
   180                           	psect	text158,global,reloc=2,class=CODE,delta=1,group=1
   181                           	psect	text159,global,reloc=4,class=CODE,delta=1
   182                           	psect	text160,global,reloc=2,class=CODE,delta=1
   183                           	psect	text161,global,reloc=2,class=CODE,delta=1
   184                           	psect	text162,global,reloc=4,class=CODE,delta=1
   185                           	psect	text163,global,reloc=4,class=CODE,delta=1
   186                           	psect	text164,global,reloc=2,class=CODE,delta=1
   187                           	psect	text165,global,reloc=2,class=CODE,delta=1
   188                           	psect	text166,global,reloc=2,class=CODE,delta=1
   189                           	psect	text167,global,reloc=4,class=CODE,delta=1
   190                           	psect	text168,global,reloc=4,class=CODE,delta=1
   191                           	psect	text169,global,reloc=2,class=CODE,delta=1
   192                           	psect	text170,global,reloc=4,class=CODE,delta=1
   193                           	psect	text171,global,reloc=2,class=CODE,delta=1
   194                           	psect	text172,global,reloc=4,class=CODE,delta=1
   195                           	psect	text173,global,reloc=2,class=CODE,delta=1
   196                           	psect	text174,global,reloc=4,class=CODE,delta=1
   197                           	psect	text175,global,reloc=2,class=CODE,delta=1
   198                           	psect	text176,global,reloc=2,class=CODE,delta=1
   199                           	psect	text177,global,reloc=4,class=CODE,delta=1
   200                           	psect	text178,global,reloc=4,class=CODE,delta=1
   201                           	psect	text179,global,reloc=4,class=CODE,delta=1
   202                           	psect	text180,global,reloc=4,class=CODE,delta=1
   203                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   204                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   205                           	psect	text181,global,reloc=4,class=CODE,delta=1
   206                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   207                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   208  0000                     
   209                           ; Version 2.10
   210                           ; Generated 31/07/2019 GMT
   211                           ; 
   212                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   213                           ; All rights reserved.
   214                           ; 
   215                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   216                           ; 
   217                           ; Redistribution and use in source and binary forms, with or without modification, are
   218                           ; permitted provided that the following conditions are met:
   219                           ; 
   220                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   221                           ;        conditions and the following disclaimer.
   222                           ; 
   223                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   224                           ;        of conditions and the following disclaimer in the documentation and/or other
   225                           ;        materials provided with the distribution.
   226                           ; 
   227                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   228                           ;        software without specific prior written permission.
   229                           ; 
   230                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   231                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   232                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   233                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   234                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   235                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   236                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   237                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   238                           ; 
   239                           ; 
   240                           ; Code-generator required, PIC18F57K42 Definitions
   241                           ; 
   242                           ; SFR Addresses
   243  0000                     
   244 ;;_main$3860	offset	0
   245 ;;_main$3856	offset	2
   246 ;;_esr_temp	offset	4
   247 ;;_i_esr	offset	8
   248 ;;_shape	offset	10
   249 ;;_inp_index	offset	11
   250 ;;_k	offset	12
   251 ;;_j	offset	13
   252 ;;_i	offset	14
   253 ;;_mode	offset	15
   254 ;;_i_ror	offset	16
   255 ;;_s	offset=-2 (param)
   256 ;;_c	offset	0
   257 ;;_shape	offset=-1 (param)
   258 ;;_reset	offset=-2 (param)
   259 ;;_set	offset=-1 (param)
   260 ;;_data	offset=-1 (param)
   261 ;;_cmd	offset=-1 (param)
   262 ;;_cmd	offset=-1 (param)
   263 ;;_data	offset=-1 (param)
   264 ;;__this	offset=-2 (param)
   265 ;;_soc	offset	0
   266 ;;_slot	offset	2
   267 ;;_cvoltage	offset=-4 (param)
   268 ;;_h	offset=-2 (param)
   269 ;;_h	offset=-2 (param)
   270 ;;_i	offset=-1 (param)
   271 ;;_fsm	offset=-1 (param)
   272 ;;_channel	offset=-1 (param)
   273 ;;_mode	offset=-1 (param)
   274 ;;_mode	offset=-1 (param)
   275 ;;_cmd	offset=-1 (param)
   276 ;;_i	offset	0
   277 ;;_h	offset=-2 (param)
   278 ;;_flipper	offset=-1 (param)
   279 ;;_f	offset	0
   280 ;;_ap	offset	6
   281 ;;_s	offset=-3 (param)
   282 ;;_fmt	offset=-5 (param)
   283 ;;_line	offset=-1 (param)
   284 ;;_vterm	offset=-2 (param)
   285 ;;_numMilliseconds	offset=-2 (param)
   286 ;;_vterm	offset=-1 (param)
   287 ;;_row	offset	0
   288 ;;_r	offset=-1 (param)
   289 ;;_c	offset=-2 (param)
   290 ;;_strPtr	offset=-4 (param)
   291 ;;_strPtr	offset=-1 (param)
   292 ;;_delay	offset=-4 (param)
   293 ;;_strPtr	offset=-1 (param)
   294 ;;_strPtr	offset=-2 (param)
   295 ;;__this	offset=-2 (param)
   296 ;;_clearBuffer	offset=-3 (param)
   297 ;;_s	offset	0
   298 ;;_k	offset	2
   299 ;;_dest	offset=-2 (param)
   300 ;;_c	offset=-4 (param)
   301 ;;_n	offset=-6 (param)
   302 ;;_ap	offset	0
   303 ;;_fmt	offset=-3 (param)
   304 ;;_cfmt	offset	0
   305 ;;_fp	offset=-2 (param)
   306 ;;_fmt	offset=-4 (param)
   307 ;;_ap	offset=-6 (param)
   308 ;;_vfpfcnvrt$5695	offset	0
   309 ;;_vfpfcnvrt$5706	offset	2
   310 ;;_vfpfcnvrt$5694	offset	4
   311 ;;_llu	offset	6
   312 ;;_ll	offset	14
   313 ;;_f	offset	22
   314 ;;_ct	offset	26
   315 ;;_cp	offset	29
   316 ;;_c	offset	31
   317 ;;_fp	offset=-2 (param)
   318 ;;_fmt	offset=-4 (param)
   319 ;;_ap	offset=-6 (param)
   320 ;;_xtoa$5680	offset	0
   321 ;;_xtoa$5679	offset	2
   322 ;;_n	offset	4
   323 ;;_c	offset	12
   324 ;;_i	offset	14
   325 ;;_w	offset	16
   326 ;;_p	offset	18
   327 ;;_fp	offset=-2 (param)
   328 ;;_d	offset=-10 (param)
   329 ;;_x	offset=-11 (param)
   330 ;;_toupper$6486	offset	0
   331 ;;_c	offset=-2 (param)
   332 ;;_c	offset=-2 (param)
   333 ;;_c	offset=-2 (param)
   334 ;;_n	offset	0
   335 ;;_i	offset	8
   336 ;;_w	offset	10
   337 ;;_p	offset	12
   338 ;;_fp	offset=-2 (param)
   339 ;;_d	offset=-10 (param)
   340 ;;_counter	offset	0
   341 ;;_dividend	offset=-8 (param)
   342 ;;_divisor	offset=-16 (param)
   343 ;;_quotient	offset	0
   344 ;;_counter	offset	8
   345 ;;_dividend	offset=-8 (param)
   346 ;;_divisor	offset=-16 (param)
   347 ;;_r	offset	0
   348 ;;_l	offset	2
   349 ;;__l	offset=-2 (param)
   350 ;;__r	offset=-4 (param)
   351 ;;_n	offset=-6 (param)
   352 ;;_nuls	offset	0
   353 ;;_l	offset	7
   354 ;;_p	offset	9
   355 ;;_cp	offset	11
   356 ;;_w	offset	13
   357 ;;_i	offset	15
   358 ;;_fp	offset=-2 (param)
   359 ;;_s	offset=-4 (param)
   360 ;;_efgtoa$5652	offset	0
   361 ;;_efgtoa$5651	offset	2
   362 ;;_efgtoa$5650	offset	4
   363 ;;_efgtoa$5646	offset	6
   364 ;;_efgtoa$5642	offset	8
   365 ;;_efgtoa$5641	offset	10
   366 ;;_u	offset	12
   367 ;;_g	offset	16
   368 ;;_l	offset	20
   369 ;;_h	offset	24
   370 ;;_ou	offset	28
   371 ;;_n	offset	32
   372 ;;_e	offset	34
   373 ;;_i	offset	36
   374 ;;_w	offset	38
   375 ;;_p	offset	40
   376 ;;_sign	offset	42
   377 ;;_d	offset	44
   378 ;;_ne	offset	46
   379 ;;_m	offset	48
   380 ;;_pp	offset	50
   381 ;;_t	offset	52
   382 ;;_mode	offset	54
   383 ;;_nmode	offset	55
   384 ;;_fp	offset=-2 (param)
   385 ;;_f	offset=-6 (param)
   386 ;;_c	offset=-7 (param)
   387 ;;_tolower$6471	offset	0
   388 ;;_c	offset=-2 (param)
   389 ;;_c	offset=-2 (param)
   390 ;;_d	offset	0
   391 ;;_s	offset	2
   392 ;;_dest	offset=-2 (param)
   393 ;;_src	offset=-4 (param)
   394 ;;_u	offset	0
   395 ;;_m	offset	4
   396 ;;_e	offset	8
   397 ;;_x	offset=-4 (param)
   398 ;;_u	offset	0
   399 ;;_e	offset	4
   400 ;;_x	offset=-4 (param)
   401 ;;_exp1	offset	0
   402 ;;_sign1	offset	1
   403 ;;_f1	offset=-4 (param)
   404 ;;_f1	offset=-4 (param)
   405 ;;_ff1	offset=-4 (param)
   406 ;;_ff2	offset=-8 (param)
   407 ;;_sign	offset	0
   408 ;;_counter	offset	1
   409 ;;_dividend	offset=-2 (param)
   410 ;;_divisor	offset=-4 (param)
   411 ;;_quotient	offset	0
   412 ;;_sign	offset	2
   413 ;;_counter	offset	3
   414 ;;_dividend	offset=-2 (param)
   415 ;;_divisor	offset=-4 (param)
   416 ;;_dtoa$5618	offset	0
   417 ;;_n	offset	2
   418 ;;_i	offset	10
   419 ;;_s	offset	12
   420 ;;_w	offset	14
   421 ;;_p	offset	16
   422 ;;_fp	offset=-2 (param)
   423 ;;_d	offset=-10 (param)
   424 ;;_a	offset=-2 (param)
   425 ;;_sign	offset	0
   426 ;;_counter	offset	1
   427 ;;_dividend	offset=-8 (param)
   428 ;;_divisor	offset=-16 (param)
   429 ;;_quotient	offset	0
   430 ;;_sign	offset	8
   431 ;;_counter	offset	9
   432 ;;_dividend	offset=-8 (param)
   433 ;;_divisor	offset=-16 (param)
   434 ;;_w	offset	0
   435 ;;_fp	offset=-2 (param)
   436 ;;_c	offset=-3 (param)
   437 ;;_w	offset	0
   438 ;;_i	offset	2
   439 ;;_fp	offset=-2 (param)
   440 ;;_buf	offset=-4 (param)
   441 ;;_p	offset=-6 (param)
   442 ;;_a	offset	0
   443 ;;_s	offset=-2 (param)
   444 ;;_i	offset	0
   445 ;;_c	offset	2
   446 ;;_s	offset=-2 (param)
   447 ;;_fp	offset=-4 (param)
   448 ;;_c	offset=-2 (param)
   449 ;;_fp	offset=-4 (param)
   450 ;;_c	offset=-1 (param)
   451 ;;__this	offset=-2 (param)
   452 ;;_c	offset=-3 (param)
   453 ;;_atoi$6202	offset	0
   454 ;;_atoi$6200	offset	2
   455 ;;_atoi$6201	offset	4
   456 ;;_n	offset	5
   457 ;;_neg	offset	7
   458 ;;_s	offset=-2 (param)
   459 ;;_isspace$6251	offset	0
   460 ;;_c	offset=-2 (param)
   461 ;;_c	offset=-2 (param)
   462 ;;_vterm	offset=-1 (param)
   463 ;;_new_response_info	offset=-1 (param)
   464 ;;_new_response_info	offset=-1 (param)
   465 ;;_level	offset=-2 (param)
   466 ;;_dutyValue	offset=-2 (param)
   467 ;;_timer	offset=-1 (param)
   468 ;;_timer	offset=-1 (param)
   469 ;;_count	offset=-3 (param)
   470 ;;_h	offset=-2 (param)
   471 ;;_u	offset	0
   472 ;;_x	offset=-4 (param)
   473 ;;_chan	offset=-1 (param)
   474 ;;_to_what	offset=-2 (param)
   475 ;;_u	offset	0
   476 ;;_s	offset=-2 (param)
   477 ;;_index	offset=-1 (param)
   478 ;;_arg	offset	0
   479 ;;_exp	offset	4
   480 ;;_sign	offset=-1 (param)
   481 ;;_val	offset=-5 (param)
   482 ;;_grs	offset	0
   483 ;;_rem	offset	4
   484 ;;_new_exp	offset	8
   485 ;;_aexp	offset	10
   486 ;;_bexp	offset	11
   487 ;;_sign	offset	12
   488 ;;_b	offset=-4 (param)
   489 ;;_a	offset=-8 (param)
   490 ;;_ff1	offset=-4 (param)
   491 ;;_ff2	offset=-8 (param)
   492 ;;_lp_speed	offset	0
   493 ;;_new	offset=-4 (param)
   494 ;;_bn	offset=-5 (param)
   495 ;;_slow	offset=-6 (param)
   496 ;;_b	offset=-4 (param)
   497 ;;_a	offset=-8 (param)
   498 ;;_grs	offset	0
   499 ;;_bexp	offset	1
   500 ;;_aexp	offset	2
   501 ;;_signs	offset	3
   502 ;;_b	offset=-4 (param)
   503 ;;_a	offset=-8 (param)
   504 ;;_prod	offset	0
   505 ;;_grs	offset	4
   506 ;;_temp	offset	8
   507 ;;_bexp	offset	10
   508 ;;_aexp	offset	11
   509 ;;_sign	offset	12
   510 ;;_b	offset=-4 (param)
   511 ;;_a	offset=-8 (param)
   512 ;;_InterruptHandler	offset=-3 (param)
   513 ;;_InterruptHandler	offset=-3 (param)
   514 ;;_InterruptHandler	offset=-3 (param)
   515 ;;_InterruptHandler	offset=-3 (param)
   516 ;;_InterruptHandler	offset=-3 (param)
   517 ;;_InterruptHandler	offset=-3 (param)
   518 ;;_state	offset	0
   519 ;;_InterruptHandler	offset=-3 (param)
   520 ;;_InterruptHandler	offset=-3 (param)
   521 ;;_InterruptHandler	offset=-3 (param)
   522 ;;_InterruptHandler	offset=-3 (param)
   523 ;;_i	offset	0
   524 ;;_sw_value	offset	1
   525 ;;_timerVal	offset=-2 (param)
   526 ;;_light	offset	0
   527 ;;_mode	offset=-1 (param)
   528 ;;_chan	offset=-1 (param)
   529 ;;_to_what	offset=-2 (param)
   530 ;;_u	offset	0
   531 ;;_s	offset=-2 (param)
   532 ;;_index	offset=-1 (param)
   533 ;;_arg	offset	0
   534 ;;_exp	offset	4
   535 ;;_sign	offset=-1 (param)
   536 ;;_val	offset=-5 (param)
   537 ;;_b	offset=-4 (param)
   538 ;;_a	offset=-8 (param)
   539 ;;_grs	offset	0
   540 ;;_bexp	offset	1
   541 ;;_aexp	offset	2
   542 ;;_signs	offset	3
   543 ;;_b	offset=-4 (param)
   544 ;;_a	offset=-8 (param)
   545 ;;_prod	offset	0
   546 ;;_grs	offset	4
   547 ;;_temp	offset	8
   548 ;;_bexp	offset	10
   549 ;;_aexp	offset	11
   550 ;;_sign	offset	12
   551 ;;_b	offset=-4 (param)
   552 ;;_a	offset=-8 (param)
   553 ;;_grs	offset	0
   554 ;;_rem	offset	4
   555 ;;_new_exp	offset	8
   556 ;;_aexp	offset	10
   557 ;;_bexp	offset	11
   558 ;;_sign	offset	12
   559 ;;_b	offset=-4 (param)
   560 ;;_a	offset=-8 (param)
   561 ;;_ff1	offset=-4 (param)
   562 ;;_ff2	offset=-8 (param)
   563 ;;_timerVal	offset=-2 (param)
   564 ;;_adj	offset	0
   565 ;;_log_ptr	offset	4
   566 ;;_f	offset	0
   567 ;;_ap	offset	6
   568 ;;_s	offset=-3 (param)
   569 ;;_fmt	offset=-5 (param)
   570 ;;_cfmt	offset	0
   571 ;;_fp	offset=-2 (param)
   572 ;;_fmt	offset=-4 (param)
   573 ;;_ap	offset=-6 (param)
   574 ;;_vfpfcnvrt$5695	offset	0
   575 ;;_vfpfcnvrt$5706	offset	2
   576 ;;_vfpfcnvrt$5694	offset	4
   577 ;;_llu	offset	6
   578 ;;_ll	offset	14
   579 ;;_f	offset	22
   580 ;;_ct	offset	26
   581 ;;_cp	offset	29
   582 ;;_c	offset	31
   583 ;;_fp	offset=-2 (param)
   584 ;;_fmt	offset=-4 (param)
   585 ;;_ap	offset=-6 (param)
   586 ;;_xtoa$5680	offset	0
   587 ;;_xtoa$5679	offset	2
   588 ;;_n	offset	4
   589 ;;_c	offset	12
   590 ;;_i	offset	14
   591 ;;_w	offset	16
   592 ;;_p	offset	18
   593 ;;_fp	offset=-2 (param)
   594 ;;_d	offset=-10 (param)
   595 ;;_x	offset=-11 (param)
   596 ;;_toupper$6486	offset	0
   597 ;;_c	offset=-2 (param)
   598 ;;_c	offset=-2 (param)
   599 ;;_c	offset=-2 (param)
   600 ;;_n	offset	0
   601 ;;_i	offset	8
   602 ;;_w	offset	10
   603 ;;_p	offset	12
   604 ;;_fp	offset=-2 (param)
   605 ;;_d	offset=-10 (param)
   606 ;;_counter	offset	0
   607 ;;_dividend	offset=-8 (param)
   608 ;;_divisor	offset=-16 (param)
   609 ;;_quotient	offset	0
   610 ;;_counter	offset	8
   611 ;;_dividend	offset=-8 (param)
   612 ;;_divisor	offset=-16 (param)
   613 ;;_r	offset	0
   614 ;;_l	offset	2
   615 ;;__l	offset=-2 (param)
   616 ;;__r	offset=-4 (param)
   617 ;;_n	offset=-6 (param)
   618 ;;_nuls	offset	0
   619 ;;_l	offset	7
   620 ;;_p	offset	9
   621 ;;_cp	offset	11
   622 ;;_w	offset	13
   623 ;;_i	offset	15
   624 ;;_fp	offset=-2 (param)
   625 ;;_s	offset=-4 (param)
   626 ;;_efgtoa$5652	offset	0
   627 ;;_efgtoa$5651	offset	2
   628 ;;_efgtoa$5650	offset	4
   629 ;;_efgtoa$5646	offset	6
   630 ;;_efgtoa$5642	offset	8
   631 ;;_efgtoa$5641	offset	10
   632 ;;_u	offset	12
   633 ;;_g	offset	16
   634 ;;_l	offset	20
   635 ;;_h	offset	24
   636 ;;_ou	offset	28
   637 ;;_n	offset	32
   638 ;;_e	offset	34
   639 ;;_i	offset	36
   640 ;;_w	offset	38
   641 ;;_p	offset	40
   642 ;;_sign	offset	42
   643 ;;_d	offset	44
   644 ;;_ne	offset	46
   645 ;;_m	offset	48
   646 ;;_pp	offset	50
   647 ;;_t	offset	52
   648 ;;_mode	offset	54
   649 ;;_nmode	offset	55
   650 ;;_fp	offset=-2 (param)
   651 ;;_f	offset=-6 (param)
   652 ;;_c	offset=-7 (param)
   653 ;;_tolower$6471	offset	0
   654 ;;_c	offset=-2 (param)
   655 ;;_c	offset=-2 (param)
   656 ;;_d	offset	0
   657 ;;_s	offset	2
   658 ;;_dest	offset=-2 (param)
   659 ;;_src	offset=-4 (param)
   660 ;;_u	offset	0
   661 ;;_m	offset	4
   662 ;;_e	offset	8
   663 ;;_x	offset=-4 (param)
   664 ;;_u	offset	0
   665 ;;_e	offset	4
   666 ;;_x	offset=-4 (param)
   667 ;;_exp1	offset	0
   668 ;;_sign1	offset	1
   669 ;;_f1	offset=-4 (param)
   670 ;;_f1	offset=-4 (param)
   671 ;;_ff1	offset=-4 (param)
   672 ;;_ff2	offset=-8 (param)
   673 ;;_sign	offset	0
   674 ;;_counter	offset	1
   675 ;;_dividend	offset=-2 (param)
   676 ;;_divisor	offset=-4 (param)
   677 ;;_quotient	offset	0
   678 ;;_sign	offset	2
   679 ;;_counter	offset	3
   680 ;;_dividend	offset=-2 (param)
   681 ;;_divisor	offset=-4 (param)
   682 ;;_dtoa$5618	offset	0
   683 ;;_n	offset	2
   684 ;;_i	offset	10
   685 ;;_s	offset	12
   686 ;;_w	offset	14
   687 ;;_p	offset	16
   688 ;;_fp	offset=-2 (param)
   689 ;;_d	offset=-10 (param)
   690 ;;_a	offset=-2 (param)
   691 ;;_sign	offset	0
   692 ;;_counter	offset	1
   693 ;;_dividend	offset=-8 (param)
   694 ;;_divisor	offset=-16 (param)
   695 ;;_quotient	offset	0
   696 ;;_sign	offset	8
   697 ;;_counter	offset	9
   698 ;;_dividend	offset=-8 (param)
   699 ;;_divisor	offset=-16 (param)
   700 ;;_w	offset	0
   701 ;;_fp	offset=-2 (param)
   702 ;;_c	offset=-3 (param)
   703 ;;_w	offset	0
   704 ;;_i	offset	2
   705 ;;_fp	offset=-2 (param)
   706 ;;_buf	offset=-4 (param)
   707 ;;_p	offset=-6 (param)
   708 ;;_a	offset	0
   709 ;;_s	offset=-2 (param)
   710 ;;_i	offset	0
   711 ;;_c	offset	2
   712 ;;_s	offset=-2 (param)
   713 ;;_fp	offset=-4 (param)
   714 ;;_c	offset=-2 (param)
   715 ;;_fp	offset=-4 (param)
   716 ;;_c	offset=-1 (param)
   717 ;;__this	offset=-2 (param)
   718 ;;_c	offset=-3 (param)
   719 ;;_atoi$6202	offset	0
   720 ;;_atoi$6200	offset	2
   721 ;;_atoi$6201	offset	4
   722 ;;_n	offset	5
   723 ;;_neg	offset	7
   724 ;;_s	offset=-2 (param)
   725 ;;_isspace$6251	offset	0
   726 ;;_c	offset=-2 (param)
   727 ;;_c	offset=-2 (param)
   728 ;;_dsize	offset=-2 (param)
   729 ;;_u	offset	0
   730 ;;_x	offset=-4 (param)
   731 ;;_f1p	offset=-2 (param)
   732 ;;_f2	offset=-6 (param)
   733 ;;_timer	offset=-1 (param)
   734 ;;_count	offset=-3 (param)
   735 ;;_channel	offset=-1 (param)
   736 ;;_i	offset	0
   737                           
   738                           	psect	idataBIGRAM
   739  016B2C                     __pidataBIGRAM:
   740                           	opt callstack 0
   741                           
   742                           ;initializer for _port_data
   743  016B2C  FF                 	db	255
   744  016B2D  00                 	db	0
   745  016B2E  FF                 	db	255
   746  016B2F  00                 	db	0
   747  016B30  FF                 	db	255
   748  016B31  00                 	db	0
   749  016B32  FF                 	db	255
   750  016B33  00                 	db	0
   751  016B34  FF                 	db	255
   752  016B35  00                 	db	0
   753  016B36  FF                 	db	255
   754  016B37  00                 	db	0
   755  016B38  FF                 	db	255
   756  016B39  00                 	db	0
   757  016B3A  FF                 	db	255
   758  016B3B  00                 	db	0
   759  016B3C  00                 	db	0
   760  016B3D  00                 	db	0
   761  016B3E  00                 	db	0
   762  016B3F  00                 	db	0
   763  016B40  00                 	db	0
   764  016B41  00                 	db	0
   765  016B42  00                 	db	0
   766  016B43  00                 	db	0
   767  016B44  00                 	db	0
   768  016B45  00                 	db	0
   769  016B46  00                 	db	0
   770  016B47  00                 	db	0
   771  016B48  00                 	db	0
   772  016B49  00                 	db	0
   773  016B4A  00                 	db	0
   774  016B4B  00                 	db	0
   775  016B4C  00                 	db	0
   776  016B4D  00                 	db	0
   777  016B4E  00                 	db	0
   778  016B4F  00                 	db	0
   779  016B50  00                 	db	0
   780  016B51  00                 	db	0
   781  016B52  00                 	db	0
   782  016B53  00                 	db	0
   783  016B54  00                 	db	0
   784  016B55  00                 	db	0
   785  016B56  00                 	db	0
   786  016B57  00                 	db	0
   787  016B58  00                 	db	0
   788  016B59  00                 	db	0
   789  016B5A  00                 	db	0
   790  016B5B  00                 	db	0
   791  016B5C  00                 	db	0
   792  016B5D  00                 	db	0
   793  016B5E  00                 	db	0
   794  016B5F  00                 	db	0
   795  016B60  00                 	db	0
   796  016B61  00                 	db	0
   797  016B62  00                 	db	0
   798  016B63  00                 	db	0
   799  016B64  00                 	db	0
   800  016B65  00                 	db	0
   801  016B66  00                 	db	0
   802  016B67  00                 	db	0
   803  016B68  00                 	db	0
   804  016B69  00                 	db	0
   805  016B6A  00                 	db	0
   806  016B6B  00                 	db	0
   807  016B6C  00                 	db	0
   808  016B6D  00                 	db	0
   809  016B6E  00                 	db	0
   810  016B6F  00                 	db	0
   811  016B70  00                 	db	0
   812  016B71  00                 	db	0
   813  016B72  00                 	db	0
   814  016B73  00                 	db	0
   815  016B74  00                 	db	0
   816  016B75  00                 	db	0
   817  016B76  00                 	db	0
   818  016B77  00                 	db	0
   819  016B78  00                 	db	0
   820  016B79  00                 	db	0
   821  016B7A  00                 	db	0
   822  016B7B  00                 	db	0
   823  016B7C  00                 	db	0
   824  016B7D  00                 	db	0
   825  016B7E  00                 	db	0
   826  016B7F  00                 	db	0
   827  016B80  00                 	db	0
   828  016B81  00                 	db	0
   829  016B82  00                 	db	0
   830  016B83  00                 	db	0
   831  016B84  00                 	db	0
   832  016B85  00                 	db	0
   833  016B86  00                 	db	0
   834  016B87  00                 	db	0
   835  016B88  00                 	db	0
   836  016B89  00                 	db	0
   837  016B8A  00                 	db	0
   838  016B8B  00                 	db	0
   839  016B8C  00                 	db	0
   840  016B8D  00                 	db	0
   841  016B8E  00                 	db	0
   842  016B8F  00                 	db	0
   843  016B90  00                 	db	0
   844  016B91  00                 	db	0
   845  016B92  00                 	db	0
   846  016B93  00                 	db	0
   847  016B94  00                 	db	0
   848  016B95  00                 	db	0
   849  016B96  00                 	db	0
   850  016B97  00                 	db	0
   851  016B98  00                 	db	0
   852  016B99  00                 	db	0
   853  016B9A  00                 	db	0
   854  016B9B  00                 	db	0
   855  016B9C  00                 	db	0
   856  016B9D  00                 	db	0
   857  016B9E  00                 	db	0
   858  016B9F  00                 	db	0
   859  016BA0  00                 	db	0
   860  016BA1  00                 	db	0
   861  016BA2  00                 	db	0
   862  016BA3  00                 	db	0
   863  016BA4  00                 	db	0
   864  016BA5  00                 	db	0
   865  016BA6  00                 	db	0
   866  016BA7  00                 	db	0
   867  016BA8  00                 	db	0
   868  016BA9  00                 	db	0
   869  016BAA  00                 	db	0
   870  016BAB  00                 	db	0
   871  016BAC  00                 	db	0
   872  016BAD  00                 	db	0
   873  016BAE  00                 	db	0
   874  016BAF  00                 	db	0
   875  016BB0  00                 	db	0
   876  016BB1  00                 	db	0
   877  016BB2  00                 	db	0
   878  016BB3  00                 	db	0
   879  016BB4  00                 	db	0
   880  016BB5  00                 	db	0
   881  016BB6  00                 	db	0
   882  016BB7  00                 	db	0
   883  016BB8  00                 	db	0
   884  016BB9  00                 	db	0
   885  016BBA  00                 	db	0
   886  016BBB  00                 	db	0
   887  016BBC  00                 	db	0
   888  016BBD  00                 	db	0
   889  016BBE  00                 	db	0
   890  016BBF  00                 	db	0
   891  016BC0  00                 	db	0
   892  016BC1  00                 	db	0
   893  016BC2  00                 	db	0
   894  016BC3  00                 	db	0
   895  016BC4  00                 	db	0
   896  016BC5  00                 	db	0
   897  016BC6  00                 	db	0
   898  016BC7  00                 	db	0
   899  016BC8  00                 	db	0
   900  016BC9  00                 	db	0
   901  016BCA  00                 	db	0
   902  016BCB  00                 	db	0
   903  016BCC  00                 	db	0
   904  016BCD  00                 	db	0
   905  016BCE  00                 	db	0
   906  016BCF  00                 	db	0
   907  016BD0  00                 	db	0
   908  016BD1  00                 	db	0
   909  016BD2  00                 	db	0
   910  016BD3  00                 	db	0
   911  016BD4  00                 	db	0
   912  016BD5  00                 	db	0
   913  016BD6  00                 	db	0
   914  016BD7  00                 	db	0
   915  016BD8  00                 	db	0
   916  016BD9  00                 	db	0
   917  016BDA  00                 	db	0
   918  016BDB  00                 	db	0
   919  016BDC  00                 	db	0
   920  016BDD  00                 	db	0
   921  016BDE  00                 	db	0
   922  016BDF  00                 	db	0
   923  016BE0  00                 	db	0
   924  016BE1  00                 	db	0
   925  016BE2  00                 	db	0
   926  016BE3  00                 	db	0
   927  016BE4  00                 	db	0
   928  016BE5  00                 	db	0
   929  016BE6  00                 	db	0
   930  016BE7  00                 	db	0
   931  016BE8  00                 	db	0
   932  016BE9  00                 	db	0
   933  016BEA  00                 	db	0
   934  016BEB  00                 	db	0
   935  016BEC  00                 	db	0
   936  016BED  00                 	db	0
   937  016BEE  00                 	db	0
   938  016BEF  00                 	db	0
   939  016BF0  00                 	db	0
   940  016BF1  00                 	db	0
   941  016BF2  00                 	db	0
   942  016BF3  00                 	db	0
   943  016BF4  00                 	db	0
   944  016BF5  00                 	db	0
   945  016BF6  00                 	db	0
   946  016BF7  00                 	db	0
   947  016BF8  00                 	db	0
   948  016BF9  00                 	db	0
   949  016BFA  00                 	db	0
   950  016BFB  00                 	db	0
   951  016BFC  00                 	db	0
   952  016BFD  00                 	db	0
   953  016BFE  00                 	db	0
   954  016BFF  00                 	db	0
   955  016C00  00                 	db	0
   956  016C01  00                 	db	0
   957  016C02  00                 	db	0
   958  016C03  00                 	db	0
   959  016C04  00                 	db	0
   960  016C05  00                 	db	0
   961  016C06  00                 	db	0
   962  016C07  00                 	db	0
   963  016C08  00                 	db	0
   964  016C09  00                 	db	0
   965  016C0A  00                 	db	0
   966  016C0B  00                 	db	0
   967  016C0C  00                 	db	0
   968  016C0D  00                 	db	0
   969  016C0E  00                 	db	0
   970  016C0F  00                 	db	0
   971  016C10  00                 	db	0
   972  016C11  00                 	db	0
   973  016C12  00                 	db	0
   974  016C13  00                 	db	0
   975  016C14  00                 	db	0
   976  016C15  00                 	db	0
   977  016C16  00                 	db	0
   978  016C17  00                 	db	0
   979  016C18  00                 	db	0
   980  016C19  00                 	db	0
   981  016C1A  00                 	db	0
   982  016C1B  00                 	db	0
   983  016C1C  00                 	db	0
   984  016C1D  00                 	db	0
   985  016C1E  00                 	db	0
   986  016C1F  00                 	db	0
   987  016C20  00                 	db	0
   988  016C21  00                 	db	0
   989  016C22  00                 	db	0
   990  016C23  00                 	db	0
   991  016C24  00                 	db	0
   992  016C25  00                 	db	0
   993  016C26  00                 	db	0
   994  016C27  00                 	db	0
   995  016C28  00                 	db	0
   996  016C29  00                 	db	0
   997  016C2A  00                 	db	0
   998  016C2B  00                 	db	0
   999  016C2C  00                 	db	0
  1000  016C2D  00                 	db	0
  1001  016C2E  00                 	db	0
  1002  016C2F  00                 	db	0
  1003  016C30  00                 	db	0
  1004  016C31  00                 	db	0
  1005  016C32  00                 	db	0
  1006  016C33  00                 	db	0
  1007  016C34  00                 	db	0
  1008  016C35  00                 	db	0
  1009  016C36  00                 	db	0
  1010  016C37  00                 	db	0
  1011  016C38  00                 	db	0
  1012  016C39  00                 	db	0
  1013  016C3A  00                 	db	0
  1014  016C3B  00                 	db	0
  1015  016C3C  00                 	db	0
  1016  016C3D  00                 	db	0
  1017  016C3E  00                 	db	0
  1018  016C3F  00                 	db	0
  1019  016C40  00                 	db	0
  1020  016C41  00                 	db	0
  1021  016C42  00                 	db	0
  1022  016C43  00                 	db	0
  1023  016C44  00                 	db	0
  1024  016C45  00                 	db	0
  1025  016C46  00                 	db	0
  1026  016C47  00                 	db	0
  1027  016C48  00                 	db	0
  1028  016C49  00                 	db	0
  1029  016C4A  00                 	db	0
  1030  016C4B  00                 	db	0
  1031  016C4C  00                 	db	0
  1032  016C4D  00                 	db	0
  1033  016C4E  00                 	db	0
  1034  016C4F  00                 	db	0
  1035  016C50  00                 	db	0
  1036  016C51  00                 	db	0
  1037  016C52  00                 	db	0
  1038  016C53  00                 	db	0
  1039  016C54  00                 	db	0
  1040  016C55  00                 	db	0
  1041  016C56  00                 	db	0
  1042  016C57  00                 	db	0
  1043  016C58  00                 	db	0
  1044  016C59  00                 	db	0
  1045  016C5A  00                 	db	0
  1046  016C5B  00                 	db	0
  1047  016C5C  00                 	db	0
  1048  016C5D  00                 	db	0
  1049  016C5E  00                 	db	0
  1050  016C5F  00                 	db	0
  1051  016C60  00                 	db	0
  1052  016C61  00                 	db	0
  1053  016C62  00                 	db	0
  1054  016C63  00                 	db	0
  1055  016C64  00                 	db	0
  1056  016C65  00                 	db	0
  1057  016C66  00                 	db	0
  1058  016C67  00                 	db	0
  1059  016C68  00                 	db	0
  1060  016C69  00                 	db	0
  1061  016C6A  00                 	db	0
  1062  016C6B  00                 	db	0
  1063  016C6C  00                 	db	0
  1064  016C6D  00                 	db	0
  1065  016C6E  00                 	db	0
  1066  016C6F  00                 	db	0
  1067  016C70  00                 	db	0
  1068  016C71  00                 	db	0
  1069  016C72  00                 	db	0
  1070  016C73  00                 	db	0
  1071  016C74  00                 	db	0
  1072  016C75  00                 	db	0
  1073  016C76  00                 	db	0
  1074  016C77  00                 	db	0
  1075  016C78  00                 	db	0
  1076  016C79  00                 	db	0
  1077  016C7A  00                 	db	0
  1078  016C7B  00                 	db	0
  1079  016C7C  00                 	db	0
  1080  016C7D  00                 	db	0
  1081  016C7E  00                 	db	0
  1082  016C7F  00                 	db	0
  1083  016C80  00                 	db	0
  1084  016C81  00                 	db	0
  1085  016C82  00                 	db	0
  1086  016C83  00                 	db	0
  1087  016C84  00                 	db	0
  1088  016C85  00                 	db	0
  1089  016C86  00                 	db	0
  1090  016C87  00                 	db	0
  1091  016C88  00                 	db	0
  1092  016C89  00                 	db	0
  1093  016C8A  00                 	db	0
  1094  016C8B  00                 	db	0
  1095  016C8C  00                 	db	0
  1096  016C8D  00                 	db	0
  1097  016C8E  00                 	db	0
  1098  016C8F  00                 	db	0
  1099  016C90  00                 	db	0
  1100  016C91  00                 	db	0
  1101  016C92  00                 	db	0
  1102  016C93  00                 	db	0
  1103  016C94  00                 	db	0
  1104  016C95  00                 	db	0
  1105  016C96  00                 	db	0
  1106  016C97  00                 	db	0
  1107  016C98  00                 	db	0
  1108  016C99  00                 	db	0
  1109  016C9A  00                 	db	0
  1110  016C9B  00                 	db	0
  1111  016C9C  00                 	db	0
  1112  016C9D  00                 	db	0
  1113  016C9E  00                 	db	0
  1114  016C9F  00                 	db	0
  1115  016CA0  00                 	db	0
  1116  016CA1  00                 	db	0
  1117  016CA2  00                 	db	0
  1118  016CA3  00                 	db	0
  1119  016CA4  00                 	db	0
  1120  016CA5  00                 	db	0
  1121  016CA6  00                 	db	0
  1122  016CA7  00                 	db	0
  1123  016CA8  00                 	db	0
  1124  016CA9  00                 	db	0
  1125  016CAA  00                 	db	0
  1126  016CAB  00                 	db	0
  1127  016CAC  00                 	db	0
  1128  016CAD  00                 	db	0
  1129  016CAE  00                 	db	0
  1130  016CAF  00                 	db	0
  1131  016CB0  00                 	db	0
  1132  016CB1  00                 	db	0
  1133  016CB2  00                 	db	0
  1134  016CB3  00                 	db	0
  1135  016CB4  00                 	db	0
  1136  016CB5  00                 	db	0
  1137  016CB6  00                 	db	0
  1138  016CB7  00                 	db	0
  1139  016CB8  00                 	db	0
  1140  016CB9  00                 	db	0
  1141  016CBA  00                 	db	0
  1142  016CBB  00                 	db	0
  1143  016CBC  00                 	db	0
  1144  016CBD  00                 	db	0
  1145  016CBE  00                 	db	0
  1146  016CBF  00                 	db	0
  1147  016CC0  00                 	db	0
  1148  016CC1  00                 	db	0
  1149  016CC2  00                 	db	0
  1150  016CC3  00                 	db	0
  1151  016CC4  00                 	db	0
  1152  016CC5  00                 	db	0
  1153  016CC6  00                 	db	0
  1154  016CC7  00                 	db	0
  1155  016CC8  00                 	db	0
  1156  016CC9  00                 	db	0
  1157  016CCA  00                 	db	0
  1158  016CCB  00                 	db	0
  1159  016CCC  00                 	db	0
  1160  016CCD  00                 	db	0
  1161  016CCE  00                 	db	0
  1162  016CCF  00                 	db	0
  1163  016CD0  00                 	db	0
  1164  016CD1  00                 	db	0
  1165  016CD2  00                 	db	0
  1166  016CD3  00                 	db	0
  1167  016CD4  00                 	db	0
  1168  016CD5  00                 	db	0
  1169  016CD6  00                 	db	0
  1170  016CD7  00                 	db	0
  1171  016CD8  00                 	db	0
  1172  016CD9  00                 	db	0
  1173  016CDA  00                 	db	0
  1174  016CDB  00                 	db	0
  1175  016CDC  00                 	db	0
  1176  016CDD  00                 	db	0
  1177  016CDE  00                 	db	0
  1178  016CDF  00                 	db	0
  1179  016CE0  00                 	db	0
  1180  016CE1  00                 	db	0
  1181  016CE2  00                 	db	0
  1182  016CE3  00                 	db	0
  1183  016CE4  00                 	db	0
  1184  016CE5  00                 	db	0
  1185  016CE6  00                 	db	0
  1186  016CE7  00                 	db	0
  1187  016CE8  00                 	db	0
  1188  016CE9  00                 	db	0
  1189  016CEA  00                 	db	0
  1190  016CEB  00                 	db	0
  1191  016CEC  00                 	db	0
  1192  016CED  00                 	db	0
  1193  016CEE  00                 	db	0
  1194  016CEF  00                 	db	0
  1195  016CF0  00                 	db	0
  1196  016CF1  00                 	db	0
  1197  016CF2  00                 	db	0
  1198  016CF3  00                 	db	0
  1199  016CF4  00                 	db	0
  1200  016CF5  00                 	db	0
  1201  016CF6  00                 	db	0
  1202  016CF7  00                 	db	0
  1203  016CF8  00                 	db	0
  1204  016CF9  00                 	db	0
  1205  016CFA  00                 	db	0
  1206  016CFB  00                 	db	0
  1207  016CFC  00                 	db	0
  1208  016CFD  00                 	db	0
  1209  016CFE  00                 	db	0
  1210  016CFF  00                 	db	0
  1211  016D00  00                 	db	0
  1212  016D01  00                 	db	0
  1213  016D02  00                 	db	0
  1214  016D03  00                 	db	0
  1215  016D04  00                 	db	0
  1216  016D05  00                 	db	0
  1217  016D06  00                 	db	0
  1218  016D07  00                 	db	0
  1219  016D08  00                 	db	0
  1220  016D09  00                 	db	0
  1221  016D0A  00                 	db	0
  1222  016D0B  00                 	db	0
  1223  016D0C  00                 	db	0
  1224  016D0D  00                 	db	0
  1225  016D0E  00                 	db	0
  1226  016D0F  00                 	db	0
  1227  016D10  00                 	db	0
  1228  016D11  00                 	db	0
  1229  016D12  00                 	db	0
  1230  016D13  00                 	db	0
  1231  016D14  00                 	db	0
  1232  016D15  00                 	db	0
  1233  016D16  00                 	db	0
  1234  016D17  00                 	db	0
  1235  016D18  00                 	db	0
  1236  016D19  00                 	db	0
  1237  016D1A  00                 	db	0
  1238  016D1B  00                 	db	0
  1239  016D1C  00                 	db	0
  1240  016D1D  00                 	db	0
  1241  016D1E  00                 	db	0
  1242  016D1F  00                 	db	0
  1243  016D20  00                 	db	0
  1244  016D21  00                 	db	0
  1245  016D22  00                 	db	0
  1246  016D23  00                 	db	0
  1247  016D24  00                 	db	0
  1248  016D25  00                 	db	0
  1249  016D26  00                 	db	0
  1250  016D27  00                 	db	0
  1251  016D28  00                 	db	0
  1252  016D29  00                 	db	0
  1253  016D2A  00                 	db	0
  1254  016D2B  00                 	db	0
  1255                           
  1256                           ;initializer for _C
  1257  016D2C  0000               	dw	0
  1258  016D2E  0000               	dw	0
  1259  016D30  0000               	dw	0
  1260  016D32  0000               	dw	0
  1261  016D34  0000               	dw	0
  1262  016D36  0000               	dw	0
  1263  016D38  0000               	dw	0
  1264  016D3A  0000               	dw	0
  1265  016D3C  0000               	dw	0
  1266  016D3E  0000               	dw	0
  1267  016D40  0000               	dw	0
  1268  016D42  0000               	dw	0
  1269  016D44  0000               	dw	0
  1270  016D46  0000               	dw	0
  1271  016D48  0000               	dw	0
  1272  016D4A  0000               	dw	0
  1273  016D4C  0000               	dw	0
  1274  016D4E  0000               	dw	0
  1275  016D50  0000               	dw	0
  1276  016D52  0000               	dw	0
  1277  016D54  0000               	dw	0
  1278  016D56  0000               	dw	0
  1279  016D58  0000               	dw	0
  1280  016D5A  0000               	dw	0
  1281  016D5C  0000               	dw	0
  1282  016D5E  0000               	dw	0
  1283  016D60  0000               	dw	0
  1284  016D62  0000               	dw	0
  1285  016D64  0000               	dw	0
  1286  016D66  0000               	dw	0
  1287  016D68  0000               	dw	0
  1288  016D6A  0000               	dw	0
  1289  016D6C  0000               	dw	0
  1290  016D6E  0000               	dw	0
  1291  016D70  0000               	dw	0
  1292  016D72  0000               	dw	0
  1293  016D74  0000               	dw	0
  1294  016D76  0000               	dw	0
  1295  016D78  0000               	dw	0
  1296  016D7A  0000               	dw	0
  1297  016D7C  0000               	dw	0
  1298  016D7E  0000               	dw	0
  1299  016D80  0000               	dw	0
  1300  016D82  0000               	dw	0
  1301  016D84  0000               	dw	0
  1302  016D86  0000               	dw	0
  1303  016D88  0000               	dw	0
  1304  016D8A  0000               	dw	0
  1305  016D8C  0000               	dw	0
  1306  016D8E  0000               	dw	0
  1307  016D90  0000               	dw	0
  1308  016D92  0000               	dw	0
  1309  016D94  0000               	dw	0
  1310  016D96  0000               	dw	0
  1311  016D98  0000               	dw	0
  1312  016D9A  0000               	dw	0
  1313  016D9C  0000               	dw	0
  1314  016D9E  0000               	dw	0
  1315  016DA0  0000               	dw	0
  1316  016DA2  0000               	dw	0
  1317  016DA4  0000               	dw	0
  1318  016DA6  0000               	dw	0
  1319  016DA8  0000               	dw	0
  1320  016DAA  0000               	dw	0
  1321  016DAC  0000               	dw	0
  1322  016DAE  0000               	dw	0
  1323  016DB0  0000               	dw	0
  1324  016DB2  0000               	dw	0
  1325  016DB4  0000               	dw	0
  1326  016DB6  0000               	dw	0
  1327  016DB8  0000               	dw	0
  1328  016DBA  42FA               	dw	17146
  1329  016DBC  0000               	dw	0
  1330  016DBE  0000               	dw	0
  1331  016DC0  0000               	dw	0
  1332  016DC2  0000               	dw	0
  1333  016DC4  0000               	dw	0
  1334  016DC6  0000               	dw	0
  1335  016DC8  0000               	dw	0
  1336  016DCA  0000               	dw	0
  1337  016DCC  0000               	dw	0
  1338  016DCE  0000               	dw	0
  1339  016DD0  0000               	dw	0
  1340  016DD2  0000               	dw	0
  1341  016DD4  0000               	dw	0
  1342  016DD6  0000               	dw	0
  1343  016DD8  0000               	dw	0
  1344  016DDA  0000               	dw	0
  1345  016DDC  0000               	dw	0
  1346  016DDE  0000               	dw	0
  1347  016DE0  0000               	dw	0
  1348  016DE2  0000               	dw	0
  1349  016DE4  00                 	db	0
  1350  016DE5  01                 	db	1
  1351  016DE6  0000               	dw	0
  1352  016DE8  3F80               	dw	16256
  1353  016DEA  0000               	dw	0
  1354  016DEC  3F80               	dw	16256
  1355  016DEE  00                 	db	0
  1356  016DEF  00                 	db	0
  1357  016DF0  00                 	db	0
  1358  016DF1  00                 	db	0
  1359  016DF2  00                 	db	0
  1360  016DF3  00                 	db	0
  1361  016DF4  00                 	db	0
  1362  016DF5  00                 	db	0
  1363  016DF6  00                 	db	0
  1364  016DF7  00                 	db	0
  1365  016DF8  00                 	db	0
  1366  016DF9  00                 	db	0
  1367  016DFA  00                 	db	0
  1368  016DFB  00                 	db	0
  1369  016DFC  00                 	db	0
  1370  016DFD  00                 	db	0
  1371  016DFE  00                 	db	0
  1372  016DFF  00                 	db	0
  1373  016E00  00                 	db	0
  1374  016E01  00                 	db	0
  1375  016E02  00                 	db	0
  1376  016E03  00                 	db	0
  1377  016E04  00                 	db	0
  1378  016E05  00                 	db	0
  1379  016E06  00                 	db	0
  1380  016E07  00                 	db	0
  1381  016E08  00                 	db	0
  1382  016E09  00                 	db	0
  1383  016E0A  00                 	db	0
  1384  016E0B  00                 	db	0
  1385  016E0C  00                 	db	0
  1386  016E0D  00                 	db	0
  1387  016E0E  00                 	db	0
  1388  016E0F  00                 	db	0
  1389  016E10  00                 	db	0
  1390  016E11  00                 	db	0
  1391  016E12  00                 	db	0
  1392  016E13  00                 	db	0
  1393  016E14  00                 	db	0
  1394  016E15  00                 	db	0
  1395  016E16  00                 	db	0
  1396  016E17  00                 	db	0
  1397  016E18  00                 	db	0
  1398  016E19  00                 	db	0
  1399  016E1A  00                 	db	0
  1400  016E1B  00                 	db	0
  1401  016E1C  00                 	db	0
  1402  016E1D  00                 	db	0
  1403  016E1E  00                 	db	0
  1404  016E1F  00                 	db	0
  1405  016E20  00                 	db	0
  1406  016E21  00                 	db	0
  1407  016E22  00                 	db	0
  1408  016E23  00                 	db	0
  1409  016E24  00                 	db	0
  1410  016E25  00                 	db	0
  1411  016E26  00                 	db	0
  1412  016E27  00                 	db	0
  1413  016E28  00                 	db	0
  1414  016E29  00                 	db	0
  1415  016E2A  00                 	db	0
  1416  016E2B  00                 	db	0
  1417  016E2C  00                 	db	0
  1418  016E2D  00                 	db	0
  1419  016E2E  00                 	db	0
  1420  016E2F  00                 	db	0
  1421  016E30  00                 	db	0
  1422  016E31  00                 	db	0
  1423  016E32  00                 	db	0
  1424  016E33  00                 	db	0
  1425  016E34  00                 	db	0
  1426  016E35  00                 	db	0
  1427  016E36  00                 	db	0
  1428  016E37  00                 	db	0
  1429  016E38  00                 	db	0
  1430  016E39  00                 	db	0
  1431  016E3A  0000               	dw	0
  1432  016E3C  0000               	dw	0
  1433  016E3E  0000               	dw	0
  1434  016E40  0000               	dw	0
  1435  016E42  0000               	dw	0
  1436  016E44  0000               	dw	0
  1437  016E46  0000               	dw	0
  1438  016E48  0000               	dw	0
  1439  016E4A  0000               	dw	0
  1440  016E4C  0000               	dw	0
  1441  016E4E  01                 	db	1
  1442  016E4F  00                 	db	0
  1443  016E50  00                 	db	0
  1444  016E51  00                 	db	0
  1445  016E52  00                 	db	0
  1446  016E53  00                 	db	0
  1447  016E54  00                 	db	0
  1448  016E55  00                 	db	0
  1449  016E56  00                 	db	0
  1450                           
  1451                           	psect	idataBANK0
  1452  01BB60                     __pidataBANK0:
  1453                           	opt callstack 0
  1454                           
  1455                           ;initializer for _R
  1456  01BB60  0000               	dw	0
  1457  01BB62  0000               	dw	0
  1458  01BB64  0000               	dw	0
  1459  01BB66  0000               	dw	0
  1460  01BB68  0000               	dw	0
  1461  01BB6A  0000               	dw	0
  1462  01BB6C  0000               	dw	0
  1463  01BB6E  0000               	dw	0
  1464  01BB70  0000               	dw	0
  1465  01BB72  0000               	dw	0
  1466  01BB74  0000               	dw	0
  1467  01BB76  0000               	dw	0
  1468  01BB78  0000               	dw	0
  1469  01BB7A  0000               	dw	0
  1470  01BB7C  0000               	dw	0
  1471  01BB7E  0000               	dw	0
  1472  01BB80  0FFF               	dw	4095
  1473  01BB82  0777               	dw	1911
  1474  01BB84  0000               	dw	0
  1475  01BB86  0F67               	dw	3943
  1476  01BB88  0F8F               	dw	3983
  1477  01BB8A  0000               	dw	0
  1478  01BB8C  0000               	dw	0
  1479  01BB8E  0000               	dw	0
  1480  01BB90  0000               	dw	0
  1481  01BB92  00                 	db	0
  1482  01BB93  0000               	dw	0
  1483  01BB95  00                 	db	0
  1484                           
  1485                           	psect	idataBANK1
  1486  01A43C                     __pidataBANK1:
  1487                           	opt callstack 0
  1488                           
  1489                           ;initializer for stoa@F1166
  1490  01A43C  28                 	db	40
  1491  01A43D  6E                 	db	110
  1492  01A43E  75                 	db	117
  1493  01A43F  6C                 	db	108
  1494  01A440  6C                 	db	108
  1495  01A441  29                 	db	41
  1496  01A442  00                 	db	0
  1497                           
  1498                           ;initializer for _V
  1499  01A443  00                 	db	0
  1500  01A444  00                 	db	0
  1501  01A445  00                 	db	0
  1502  01A446  00                 	db	0
  1503  01A447  00                 	db	0
  1504  01A448  00                 	db	0
  1505  01A449  00                 	db	0
  1506  01A44A  00                 	db	0
  1507  01A44B  00                 	db	0
  1508  01A44C  00                 	db	0
  1509  01A44D  00                 	db	0
  1510  01A44E  00                 	db	0
  1511  01A44F  00                 	db	0
  1512  01A450  00                 	db	0
  1513  01A451  00                 	db	0
  1514  01A452  00                 	db	0
  1515  01A453  00                 	db	0
  1516  01A454  00                 	db	0
  1517  01A455  00                 	db	0
  1518  01A456  00                 	db	0
  1519  01A457  00                 	db	0
  1520  01A458  00                 	db	0
  1521  01A459  00                 	db	0
  1522  01A45A  00                 	db	0
  1523  01A45B  00                 	db	0
  1524  01A45C  00                 	db	0
  1525  01A45D  00                 	db	0
  1526  01A45E  00                 	db	0
  1527  01A45F  00                 	db	0
  1528  01A460  00                 	db	0
  1529  01A461  00                 	db	0
  1530  01A462  00                 	db	0
  1531  01A463  00                 	db	0
  1532  01A464  00                 	db	0
  1533  01A465  00                 	db	0
  1534  01A466  00                 	db	0
  1535  01A467  00                 	db	0
  1536  01A468  00                 	db	0
  1537  01A469  00                 	db	0
  1538  01A46A  00                 	db	0
  1539  01A46B  00                 	db	0
  1540  01A46C  00                 	db	0
  1541  01A46D  00                 	db	0
  1542  01A46E  00                 	db	0
  1543  01A46F  00                 	db	0
  1544  01A470  00                 	db	0
  1545  01A471  00                 	db	0
  1546  01A472  00                 	db	0
  1547  01A473  00                 	db	0
  1548  01A474  00                 	db	0
  1549  01A475  00                 	db	0
  1550  01A476  00                 	db	0
  1551  01A477  00                 	db	0
  1552  01A478  00                 	db	0
  1553  01A479  00                 	db	0
  1554  01A47A  00                 	db	0
  1555  01A47B  00                 	db	0
  1556  01A47C  00                 	db	0
  1557  01A47D  00                 	db	0
  1558  01A47E  00                 	db	0
  1559  01A47F  00                 	db	0
  1560  01A480  00                 	db	0
  1561  01A481  00                 	db	0
  1562  01A482  00                 	db	0
  1563  01A483  00                 	db	0
  1564  01A484  00                 	db	0
  1565  01A485  00                 	db	0
  1566  01A486  00                 	db	0
  1567  01A487  00                 	db	0
  1568  01A488  00                 	db	0
  1569  01A489  00                 	db	0
  1570  01A48A  00                 	db	0
  1571  01A48B  00                 	db	0
  1572  01A48C  00                 	db	0
  1573  01A48D  00                 	db	0
  1574  01A48E  00                 	db	0
  1575  01A48F  00                 	db	0
  1576  01A490  00                 	db	0
  1577  01A491  00                 	db	0
  1578  01A492  00                 	db	0
  1579  01A493  00                 	db	0
  1580  01A494  00                 	db	0
  1581  01A495  00                 	db	0
  1582  01A496  00                 	db	0
  1583  01A497  00                 	db	0
  1584  01A498  00                 	db	0
  1585  01A499  00                 	db	0
  1586  01A49A  00                 	db	0
  1587  01A49B  00                 	db	0
  1588  01A49C  00                 	db	0
  1589  01A49D  00                 	db	0
  1590  01A49E  00                 	db	0
  1591  01A49F  00                 	db	0
  1592  01A4A0  00                 	db	0
  1593  01A4A1  00                 	db	0
  1594  01A4A2  00                 	db	0
  1595  01A4A3  00                 	db	0
  1596  01A4A4  00                 	db	0
  1597  01A4A5  00                 	db	0
  1598  01A4A6  00                 	db	0
  1599  01A4A7  00                 	db	0
  1600  01A4A8  00                 	db	0
  1601  01A4A9  00                 	db	0
  1602  01A4AA  00                 	db	0
  1603  01A4AB  00                 	db	0
  1604  01A4AC  00                 	db	0
  1605  01A4AD  00                 	db	0
  1606  01A4AE  00                 	db	0
  1607  01A4AF  00                 	db	0
  1608  01A4B0  00                 	db	0
  1609  01A4B1  00                 	db	0
  1610  01A4B2  00                 	db	0
  1611  01A4B3  00                 	db	0
  1612  01A4B4  00                 	db	0
  1613  01A4B5  00                 	db	0
  1614  01A4B6  00                 	db	0
  1615  01A4B7  00                 	db	0
  1616  01A4B8  00                 	db	0
  1617  01A4B9  00                 	db	0
  1618  01A4BA  00                 	db	0
  1619  01A4BB  00                 	db	0
  1620  01A4BC  00                 	db	0
  1621  01A4BD  00                 	db	0
  1622  01A4BE  00                 	db	0
  1623  01A4BF  00                 	db	0
  1624  01A4C0  00                 	db	0
  1625  01A4C1  00                 	db	0
  1626  01A4C2  00                 	db	0
  1627  01A4C3  00                 	db	0
  1628  01A4C4  0000               	dw	0
  1629  01A4C6  0000               	dw	0
  1630  01A4C8  0000               	dw	0
  1631  01A4CA  0000               	dw	0
  1632  01A4CC  00                 	db	0
  1633  01A4CD  00                 	db	0
  1634  01A4CE  00                 	db	0
  1635  01A4CF  00                 	db	0
  1636  01A4D0  00                 	db	0
  1637  01A4D1  00                 	db	0
  1638  01A4D2  0000               	dw	0
  1639  01A4D4  0000               	dw	0
  1640  01A4D6  0000               	dw	0
  1641  01A4D8  0000               	dw	0
  1642  01A4DA  0000               	dw	0
  1643  01A4DC  0000               	dw	0
  1644  01A4DE  00                 	db	0
  1645  01A4DF  00                 	db	0
  1646  01A4E0  00                 	db	0
  1647  01A4E1  00                 	db	0
  1648  01A4E2  00                 	db	0
  1649  01A4E3  00                 	db	0
  1650  01A4E4  00                 	db	0
  1651  01A4E5  00                 	db	0
  1652  01A4E6  00                 	db	0
  1653  01A4E7  00                 	db	0
  1654  01A4E8  00                 	db	0
  1655  01A4E9  0000               	dw	0
  1656  01A4EB  0000               	dw	0
  1657  01A4ED  2D                 	db	45
  1658  01A4EE  00                 	db	0
  1659  01A4EF  00                 	db	0
  1660  01A4F0  00                 	db	0
  1661  01A4F1  00                 	db	0
  1662  01A4F2  0000               	dw	0
  1663  01A4F4  0000               	dw	0
  1664  01A4F6  0000               	dw	0
  1665  01A4F8  0000               	dw	0
  1666  01A4FA  0000               	dw	0
  1667  01A4FC  0000               	dw	0
  1668  01A4FE  0000               	dw	0
  1669  01A500  0000               	dw	0
  1670                           
  1671                           ;initializer for _H
  1672  01A502  00                 	db	0
  1673  01A503  00                 	db	0
  1674  01A504  01                 	db	1
  1675  01A505  00                 	db	0
  1676  01A506  01                 	db	1
  1677  01A507  00                 	db	0
  1678  01A508  00                 	db	0
  1679                           
  1680                           	psect	mediumconst
  1681  00F9EA                     __pmediumconst:
  1682                           	opt callstack 0
  1683  00F9EA  00                 	db	0
  1684  00F9EB                     _BVSOC_TABLE:
  1685                           	opt callstack 0
  1686  00F9EB  59D8               	dw	23000
  1687  00F9ED  0000               	dw	0
  1688  00F9EF  0005               	dw	5
  1689  00F9F1  0000               	dw	0
  1690  00F9F3  5B68               	dw	23400
  1691  00F9F5  0000               	dw	0
  1692  00F9F7  000A               	dw	10
  1693  00F9F9  0000               	dw	0
  1694  00F9FB  5C30               	dw	23600
  1695  00F9FD  0000               	dw	0
  1696  00F9FF  0014               	dw	20
  1697  00FA01  0000               	dw	0
  1698  00FA03  5E38               	dw	24120
  1699  00FA05  0000               	dw	0
  1700  00FA07  0019               	dw	25
  1701  00FA09  0000               	dw	0
  1702  00FA0B  5E88               	dw	24200
  1703  00FA0D  0000               	dw	0
  1704  00FA0F  001E               	dw	30
  1705  00FA11  0000               	dw	0
  1706  00FA13  5F78               	dw	24440
  1707  00FA15  0000               	dw	0
  1708  00FA17  0028               	dw	40
  1709  00FA19  0000               	dw	0
  1710  00FA1B  5FDC               	dw	24540
  1711  00FA1D  0000               	dw	0
  1712  00FA1F  002D               	dw	45
  1713  00FA21  0000               	dw	0
  1714  00FA23  6018               	dw	24600
  1715  00FA25  0000               	dw	0
  1716  00FA27  0032               	dw	50
  1717  00FA29  0000               	dw	0
  1718  00FA2B  6046               	dw	24646
  1719  00FA2D  0000               	dw	0
  1720  00FA2F  0035               	dw	53
  1721  00FA31  0000               	dw	0
  1722  00FA33  607C               	dw	24700
  1723  00FA35  0000               	dw	0
  1724  00FA37  0037               	dw	55
  1725  00FA39  0000               	dw	0
  1726  00FA3B  60AE               	dw	24750
  1727  00FA3D  0000               	dw	0
  1728  00FA3F  0039               	dw	57
  1729  00FA41  0000               	dw	0
  1730  00FA43  60E0               	dw	24800
  1731  00FA45  0000               	dw	0
  1732  00FA47  003C               	dw	60
  1733  00FA49  0000               	dw	0
  1734  00FA4B  6112               	dw	24850
  1735  00FA4D  0000               	dw	0
  1736  00FA4F  003F               	dw	63
  1737  00FA51  0000               	dw	0
  1738  00FA53  615D               	dw	24925
  1739  00FA55  0000               	dw	0
  1740  00FA57  0043               	dw	67
  1741  00FA59  0000               	dw	0
  1742  00FA5B  61A8               	dw	25000
  1743  00FA5D  0000               	dw	0
  1744  00FA5F  0046               	dw	70
  1745  00FA61  0000               	dw	0
  1746  00FA63  61BC               	dw	25020
  1747  00FA65  0000               	dw	0
  1748  00FA67  0048               	dw	72
  1749  00FA69  0000               	dw	0
  1750  00FA6B  61D0               	dw	25040
  1751  00FA6D  0000               	dw	0
  1752  00FA6F  004B               	dw	75
  1753  00FA71  0000               	dw	0
  1754  00FA73  61DA               	dw	25050
  1755  00FA75  0000               	dw	0
  1756  00FA77  0050               	dw	80
  1757  00FA79  0000               	dw	0
  1758  00FA7B  61E4               	dw	25060
  1759  00FA7D  0000               	dw	0
  1760  00FA7F  0055               	dw	85
  1761  00FA81  0000               	dw	0
  1762  00FA83  61F8               	dw	25080
  1763  00FA85  0000               	dw	0
  1764  00FA87  005A               	dw	90
  1765  00FA89  0000               	dw	0
  1766  00FA8B  6208               	dw	25096
  1767  00FA8D  0000               	dw	0
  1768  00FA8F  005C               	dw	92
  1769  00FA91  0000               	dw	0
  1770  00FA93  6222               	dw	25122
  1771  00FA95  0000               	dw	0
  1772  00FA97  005D               	dw	93
  1773  00FA99  0000               	dw	0
  1774  00FA9B  6234               	dw	25140
  1775  00FA9D  0000               	dw	0
  1776  00FA9F  005F               	dw	95
  1777  00FAA1  0000               	dw	0
  1778  00FAA3  6248               	dw	25160
  1779  00FAA5  0000               	dw	0
  1780  00FAA7  0061               	dw	97
  1781  00FAA9  0000               	dw	0
  1782  00FAAB  625C               	dw	25180
  1783  00FAAD  0000               	dw	0
  1784  00FAAF  0064               	dw	100
  1785  00FAB1  0000               	dw	0
  1786  00FAB3  6784               	dw	26500
  1787  00FAB5  0000               	dw	0
  1788  00FAB7  0062               	dw	98
  1789  00FAB9  0000               	dw	0
  1790  00FABB                     __end_of_BVSOC_TABLE:
  1791                           	opt callstack 0
  1792  00FABB                     _T:
  1793                           	opt callstack 0
  1794  00FABB  63                 	db	99
  1795  00FABC  6F                 	db	111
  1796  00FABD  6D                 	db	109
  1797  00FABE  6D                 	db	109
  1798  00FABF  61                 	db	97
  1799  00FAC0  6E                 	db	110
  1800  00FAC1  64                 	db	100
  1801  00FAC2  73                 	db	115
  1802  00FAC3  20                 	db	32
  1803  00FAC4  31                 	db	49
  1804  00FAC5  00                 	db	0
  1805  00FAC6  00                 	db	0
  1806  00FAC7  00                 	db	0
  1807  00FAC8  00                 	db	0
  1808  00FAC9  00                 	db	0
  1809  00FACA  00                 	db	0
  1810  00FACB  00                 	db	0
  1811  00FACC  00                 	db	0
  1812  00FACD  64                 	db	100
  1813  00FACE  69                 	db	105
  1814  00FACF  73                 	db	115
  1815  00FAD0  70                 	db	112
  1816  00FAD1  6C                 	db	108
  1817  00FAD2  61                 	db	97
  1818  00FAD3  79                 	db	121
  1819  00FAD4  73                 	db	115
  1820  00FAD5  20                 	db	32
  1821  00FAD6  31                 	db	49
  1822  00FAD7  00                 	db	0
  1823  00FAD8  00                 	db	0
  1824  00FAD9  00                 	db	0
  1825  00FADA  00                 	db	0
  1826  00FADB  00                 	db	0
  1827  00FADC  00                 	db	0
  1828  00FADD  00                 	db	0
  1829  00FADE  00                 	db	0
  1830  00FADF  63                 	db	99
  1831  00FAE0  6F                 	db	111
  1832  00FAE1  6D                 	db	109
  1833  00FAE2  6D                 	db	109
  1834  00FAE3  61                 	db	97
  1835  00FAE4  6E                 	db	110
  1836  00FAE5  64                 	db	100
  1837  00FAE6  73                 	db	115
  1838  00FAE7  20                 	db	32
  1839  00FAE8  32                 	db	50
  1840  00FAE9  00                 	db	0
  1841  00FAEA  00                 	db	0
  1842  00FAEB  00                 	db	0
  1843  00FAEC  00                 	db	0
  1844  00FAED  00                 	db	0
  1845  00FAEE  00                 	db	0
  1846  00FAEF  00                 	db	0
  1847  00FAF0  00                 	db	0
  1848  00FAF1  64                 	db	100
  1849  00FAF2  69                 	db	105
  1850  00FAF3  73                 	db	115
  1851  00FAF4  70                 	db	112
  1852  00FAF5  6C                 	db	108
  1853  00FAF6  61                 	db	97
  1854  00FAF7  79                 	db	121
  1855  00FAF8  73                 	db	115
  1856  00FAF9  20                 	db	32
  1857  00FAFA  32                 	db	50
  1858  00FAFB  00                 	db	0
  1859  00FAFC  00                 	db	0
  1860  00FAFD  00                 	db	0
  1861  00FAFE  00                 	db	0
  1862  00FAFF  00                 	db	0
  1863  00FB00  00                 	db	0
  1864  00FB01  00                 	db	0
  1865  00FB02  00                 	db	0
  1866  00FB03  63                 	db	99
  1867  00FB04  6F                 	db	111
  1868  00FB05  6D                 	db	109
  1869  00FB06  6D                 	db	109
  1870  00FB07  61                 	db	97
  1871  00FB08  6E                 	db	110
  1872  00FB09  64                 	db	100
  1873  00FB0A  73                 	db	115
  1874  00FB0B  20                 	db	32
  1875  00FB0C  33                 	db	51
  1876  00FB0D  00                 	db	0
  1877  00FB0E  00                 	db	0
  1878  00FB0F  00                 	db	0
  1879  00FB10  00                 	db	0
  1880  00FB11  00                 	db	0
  1881  00FB12  00                 	db	0
  1882  00FB13  00                 	db	0
  1883  00FB14  00                 	db	0
  1884  00FB15  64                 	db	100
  1885  00FB16  69                 	db	105
  1886  00FB17  73                 	db	115
  1887  00FB18  70                 	db	112
  1888  00FB19  6C                 	db	108
  1889  00FB1A  61                 	db	97
  1890  00FB1B  79                 	db	121
  1891  00FB1C  73                 	db	115
  1892  00FB1D  20                 	db	32
  1893  00FB1E  33                 	db	51
  1894  00FB1F  00                 	db	0
  1895  00FB20  00                 	db	0
  1896  00FB21  00                 	db	0
  1897  00FB22  00                 	db	0
  1898  00FB23  00                 	db	0
  1899  00FB24  00                 	db	0
  1900  00FB25  00                 	db	0
  1901  00FB26  00                 	db	0
  1902  00FB27  63                 	db	99
  1903  00FB28  6F                 	db	111
  1904  00FB29  6D                 	db	109
  1905  00FB2A  6D                 	db	109
  1906  00FB2B  61                 	db	97
  1907  00FB2C  6E                 	db	110
  1908  00FB2D  64                 	db	100
  1909  00FB2E  73                 	db	115
  1910  00FB2F  20                 	db	32
  1911  00FB30  34                 	db	52
  1912  00FB31  00                 	db	0
  1913  00FB32  00                 	db	0
  1914  00FB33  00                 	db	0
  1915  00FB34  00                 	db	0
  1916  00FB35  00                 	db	0
  1917  00FB36  00                 	db	0
  1918  00FB37  00                 	db	0
  1919  00FB38  00                 	db	0
  1920  00FB39  64                 	db	100
  1921  00FB3A  69                 	db	105
  1922  00FB3B  73                 	db	115
  1923  00FB3C  70                 	db	112
  1924  00FB3D  6C                 	db	108
  1925  00FB3E  61                 	db	97
  1926  00FB3F  79                 	db	121
  1927  00FB40  73                 	db	115
  1928  00FB41  20                 	db	32
  1929  00FB42  34                 	db	52
  1930  00FB43  00                 	db	0
  1931  00FB44  00                 	db	0
  1932  00FB45  00                 	db	0
  1933  00FB46  00                 	db	0
  1934  00FB47  00                 	db	0
  1935  00FB48  00                 	db	0
  1936  00FB49  00                 	db	0
  1937  00FB4A  00                 	db	0
  1938  00FB4B                     __end_of_T:
  1939                           	opt callstack 0
  1940  00FB4B                     _spin:
  1941                           	opt callstack 0
  1942  00FB4B  7C                 	db	124
  1943  00FB4C  7C                 	db	124
  1944  00FB4D  2F                 	db	47
  1945  00FB4E  2F                 	db	47
  1946  00FB4F  2D                 	db	45
  1947  00FB50  2D                 	db	45
  1948  00FB51  00                 	db	0
  1949  00FB52  00                 	db	0
  1950  00FB53  00                 	db	0
  1951  00FB54  00                 	db	0
  1952  00FB55  00                 	db	0
  1953  00FB56  00                 	db	0
  1954  00FB57  00                 	db	0
  1955  00FB58  00                 	db	0
  1956  00FB59  00                 	db	0
  1957  00FB5A  00                 	db	0
  1958  00FB5B  00                 	db	0
  1959  00FB5C  00                 	db	0
  1960  00FB5D  00                 	db	0
  1961  00FB5E  00                 	db	0
  1962  00FB5F  7C                 	db	124
  1963  00FB60  7C                 	db	124
  1964  00FB61  2F                 	db	47
  1965  00FB62  2F                 	db	47
  1966  00FB63  2D                 	db	45
  1967  00FB64  2D                 	db	45
  1968  00FB65  5C                 	db	92
  1969  00FB66  5C                 	db	92
  1970  00FB67  00                 	db	0
  1971  00FB68  00                 	db	0
  1972  00FB69  00                 	db	0
  1973  00FB6A  00                 	db	0
  1974  00FB6B  00                 	db	0
  1975  00FB6C  00                 	db	0
  1976  00FB6D  00                 	db	0
  1977  00FB6E  00                 	db	0
  1978  00FB6F  00                 	db	0
  1979  00FB70  00                 	db	0
  1980  00FB71  00                 	db	0
  1981  00FB72  00                 	db	0
  1982  00FB73  4F                 	db	79
  1983  00FB74  4F                 	db	79
  1984  00FB75  4F                 	db	79
  1985  00FB76  4F                 	db	79
  1986  00FB77  4F                 	db	79
  1987  00FB78  4F                 	db	79
  1988  00FB79  2D                 	db	45
  1989  00FB7A  2D                 	db	45
  1990  00FB7B  5F                 	db	95
  1991  00FB7C  5F                 	db	95
  1992  00FB7D  2D                 	db	45
  1993  00FB7E  00                 	db	0
  1994  00FB7F  00                 	db	0
  1995  00FB80  00                 	db	0
  1996  00FB81  00                 	db	0
  1997  00FB82  00                 	db	0
  1998  00FB83  00                 	db	0
  1999  00FB84  00                 	db	0
  2000  00FB85  00                 	db	0
  2001  00FB86  00                 	db	0
  2002  00FB87  76                 	db	118
  2003  00FB88  76                 	db	118
  2004  00FB89  3C                 	db	60
  2005  00FB8A  3C                 	db	60
  2006  00FB8B  5E                 	db	94
  2007  00FB8C  5E                 	db	94
  2008  00FB8D  3E                 	db	62
  2009  00FB8E  3E                 	db	62
  2010  00FB8F  00                 	db	0
  2011  00FB90  00                 	db	0
  2012  00FB91  00                 	db	0
  2013  00FB92  00                 	db	0
  2014  00FB93  00                 	db	0
  2015  00FB94  00                 	db	0
  2016  00FB95  00                 	db	0
  2017  00FB96  00                 	db	0
  2018  00FB97  00                 	db	0
  2019  00FB98  00                 	db	0
  2020  00FB99  00                 	db	0
  2021  00FB9A  00                 	db	0
  2022  00FB9B  2E                 	db	46
  2023  00FB9C  2E                 	db	46
  2024  00FB9D  2A                 	db	42
  2025  00FB9E  2A                 	db	42
  2026  00FB9F  78                 	db	120
  2027  00FBA0  23                 	db	35
  2028  00FBA1  78                 	db	120
  2029  00FBA2  23                 	db	35
  2030  00FBA3  58                 	db	88
  2031  00FBA4  58                 	db	88
  2032  00FBA5  7C                 	db	124
  2033  00FBA6  7C                 	db	124
  2034  00FBA7  2D                 	db	45
  2035  00FBA8  2D                 	db	45
  2036  00FBA9  00                 	db	0
  2037  00FBAA  00                 	db	0
  2038  00FBAB  00                 	db	0
  2039  00FBAC  00                 	db	0
  2040  00FBAD  00                 	db	0
  2041  00FBAE  00                 	db	0
  2042  00FBAF  2E                 	db	46
  2043  00FBB0  2E                 	db	46
  2044  00FBB1  6F                 	db	111
  2045  00FBB2  6F                 	db	111
  2046  00FBB3  4F                 	db	79
  2047  00FBB4  4F                 	db	79
  2048  00FBB5  6F                 	db	111
  2049  00FBB6  6F                 	db	111
  2050  00FBB7  00                 	db	0
  2051  00FBB8  00                 	db	0
  2052  00FBB9  00                 	db	0
  2053  00FBBA  00                 	db	0
  2054  00FBBB  00                 	db	0
  2055  00FBBC  00                 	db	0
  2056  00FBBD  00                 	db	0
  2057  00FBBE  00                 	db	0
  2058  00FBBF  00                 	db	0
  2059  00FBC0  00                 	db	0
  2060  00FBC1  00                 	db	0
  2061  00FBC2  00                 	db	0
  2062  00FBC3                     __end_of_spin:
  2063                           	opt callstack 0
  2064  00FBC3  0000               	dw	0
  2065  00FBC5  3F80               	dw	16256
  2066  00FBC7  0000               	dw	0
  2067  00FBC9  3FC0               	dw	16320
  2068  00FBCB                     __end_of_bp:
  2069                           	opt callstack 0
  2070  00FBCB  AA00               	dw	43520
  2071  00FBCD  3FB8               	dw	16312
  2072  00FBCF                     __end_of_ivln2_h:
  2073                           	opt callstack 0
  2074  00FBCF  23C6               	dw	9158
  2075  00FBD1  B8F6               	dw	47350
  2076  00FBD3                     __end_of_cp_l:
  2077                           	opt callstack 0
  2078  00FBD3  4000               	dw	16384
  2079  00FBD5  3F76               	dw	16246
  2080  00FBD7                     __end_of_cp_h:
  2081                           	opt callstack 0
  2082  0000                     _IVTADL	set	14493
  2083  0000                     _IVTADH	set	14494
  2084  0000                     _IVTADU	set	14495
  2085  0000                     _PIR6bits	set	14758
  2086  0000                     _PIR4bits	set	14756
  2087  0000                     _PIE8bits	set	14744
  2088  0000                     _PIR8bits	set	14760
  2089  0000                     _SCANPR	set	14839
  2090  0000                     _DMA2PR	set	14836
  2091  0000                     _DMA1PR	set	14835
  2092  0000                     _MAINPR	set	14834
  2093  0000                     _ISRPR	set	14833
  2094  0000                     _PIE2bits	set	14738
  2095  0000                     _PIR2bits	set	14754
  2096  0000                     _PIE9bits	set	14745
  2097  0000                     _PIR9bits	set	14761
  2098  0000                     _PIE6bits	set	14742
  2099  0000                     _PIE3bits	set	14739
  2100  0000                     _PMD7	set	14791
  2101  0000                     _PMD6	set	14790
  2102  0000                     _PMD5	set	14789
  2103  0000                     _PMD4	set	14788
  2104  0000                     _PMD3	set	14787
  2105  0000                     _PMD2	set	14786
  2106  0000                     _PMD1	set	14785
  2107  0000                     _PMD0	set	14784
  2108  0000                     _OSCTUNE	set	14814
  2109  0000                     _OSCFRQ	set	14815
  2110  0000                     _OSCEN	set	14813
  2111  0000                     _OSCCON3	set	14811
  2112  0000                     _OSCCON1	set	14809
  2113  0000                     _IPR8bits	set	14728
  2114  0000                     _IPR9bits	set	14729
  2115  0000                     _IPR5bits	set	14725
  2116  0000                     _IPR1bits	set	14721
  2117  0000                     _IPR3bits	set	14723
  2118  0000                     _IPR6bits	set	14726
  2119  0000                     _IPR2bits	set	14722
  2120  0000                     _PIE5bits	set	14741
  2121  0000                     _PIE1bits	set	14737
  2122  0000                     _PIR5bits	set	14757
  2123  0000                     _PIR1bits	set	14753
  2124  0000                     _PLLR	set	118496
  2125  0000                     _SPI1SDIPPS	set	15071
  2126  0000                     _U1RXPPS	set	15077
  2127  0000                     _RC6PPS	set	14870
  2128  0000                     _RC5PPS	set	14869
  2129  0000                     _INT1PPS	set	15041
  2130  0000                     _RD1PPS	set	14873
  2131  0000                     _INT0PPS	set	15040
  2132  0000                     _RC3PPS	set	14867
  2133  0000                     _RB6PPS	set	14862
  2134  0000                     _SPI1SCKPPS	set	15070
  2135  0000                     _U2RXPPS	set	15080
  2136  0000                     _SLRCONF	set	14995
  2137  0000                     _SLRCONE	set	14979
  2138  0000                     _SLRCOND	set	14963
  2139  0000                     _SLRCONC	set	14947
  2140  0000                     _SLRCONB	set	14931
  2141  0000                     _SLRCONA	set	14915
  2142  0000                     _ODCOND	set	14962
  2143  0000                     _ODCONC	set	14946
  2144  0000                     _ODCONB	set	14930
  2145  0000                     _ODCONA	set	14914
  2146  0000                     _ODCONF	set	14994
  2147  0000                     _ODCONE	set	14978
  2148  0000                     _WPUC	set	14945
  2149  0000                     _WPUA	set	14913
  2150  0000                     _WPUB	set	14929
  2151  0000                     _WPUE	set	14977
  2152  0000                     _WPUF	set	14993
  2153  0000                     _WPUD	set	14961
  2154  0000                     _ANSELA	set	14912
  2155  0000                     _ANSELF	set	14992
  2156  0000                     _ANSELE	set	14976
  2157  0000                     _ANSELB	set	14928
  2158  0000                     _ANSELC	set	14944
  2159  0000                     _ANSELD	set	14960
  2160  0000                     _DMA2SSA	set	15321
  2161  0000                     _DMA1SSA	set	15353
  2162  0000                     _DMA2DSZ	set	15310
  2163  0000                     _DMA2SSZ	set	15319
  2164  0000                     _DMA2DSA	set	15312
  2165  0000                     _DMA1DSZ	set	15342
  2166  0000                     _DMA1SSZ	set	15351
  2167  0000                     _DMA1DSA	set	15344
  2168  0000                     _DMA2CON0bits	set	15324
  2169  0000                     _DMA2CON1bits	set	15325
  2170  0000                     _DMA1CON0bits	set	15356
  2171  0000                     _DMA1CON1bits	set	15357
  2172  0000                     _DMA2CON0	set	15324
  2173  0000                     _DMA2AIRQ	set	15326
  2174  0000                     _DMA2SIRQ	set	15327
  2175  0000                     _DMA2CON1	set	15325
  2176  0000                     _DMA1CON0	set	15356
  2177  0000                     _DMA1AIRQ	set	15358
  2178  0000                     _DMA1SIRQ	set	15359
  2179  0000                     _DMA1CON1	set	15357
  2180  0000                     _CLKRCON	set	15589
  2181  0000                     _CLKRCLK	set	15590
  2182  0000                     _SPI1INTFbits	set	15642
  2183  0000                     _SPI1CON0bits	set	15636
  2184  0000                     _SPI1RXB	set	15632
  2185  0000                     _SPI1TXB	set	15633
  2186  0000                     _SPI1TCNTL	set	15634
  2187  0000                     _SPI1CON0	set	15636
  2188  0000                     _SPI1CLK	set	15644
  2189  0000                     _SPI1BAUD	set	15641
  2190  0000                     _SPI1CON2	set	15638
  2191  0000                     _SPI1CON1	set	15637
  2192  0000                     _U2RXB	set	15824
  2193  0000                     _U2TXB	set	15826
  2194  0000                     _U2ERRIE	set	15842
  2195  0000                     _U2ERRIR	set	15841
  2196  0000                     _U2UIR	set	15840
  2197  0000                     _U2FIFO	set	15839
  2198  0000                     _U2BRGH	set	15838
  2199  0000                     _U2BRGL	set	15837
  2200  0000                     _U2CON2	set	15836
  2201  0000                     _U2CON1	set	15835
  2202  0000                     _U2CON0	set	15834
  2203  0000                     _U2P3L	set	15832
  2204  0000                     _U2P2L	set	15830
  2205  0000                     _U2P1L	set	15828
  2206  0000                     _U1RXB	set	15848
  2207  0000                     _U1ERRIE	set	15866
  2208  0000                     _U1ERRIR	set	15865
  2209  0000                     _U1UIR	set	15864
  2210  0000                     _U1FIFO	set	15863
  2211  0000                     _U1BRGH	set	15862
  2212  0000                     _U1BRGL	set	15861
  2213  0000                     _U1CON2	set	15860
  2214  0000                     _U1CON1	set	15859
  2215  0000                     _U1CON0	set	15858
  2216  0000                     _U1P3H	set	15857
  2217  0000                     _U1P3L	set	15856
  2218  0000                     _U1P2H	set	15855
  2219  0000                     _U1P2L	set	15854
  2220  0000                     _U1P1H	set	15853
  2221  0000                     _U1P1L	set	15852
  2222  0000                     _FVRCON	set	16065
  2223  0000                     _ADFLTRL	set	16102
  2224  0000                     _ADFLTRH	set	16103
  2225  0000                     _ADCON0bits	set	16120
  2226  0000                     _ADCON0	set	16120
  2227  0000                     _ADCLK	set	16127
  2228  0000                     _ADACT	set	16126
  2229  0000                     _ADREF	set	16125
  2230  0000                     _ADSTAT	set	16124
  2231  0000                     _ADCON3	set	16123
  2232  0000                     _ADCON2	set	16122
  2233  0000                     _ADCON1	set	16121
  2234  0000                     _ADPREH	set	16119
  2235  0000                     _ADPREL	set	16118
  2236  0000                     _ADCAP	set	16117
  2237  0000                     _ADACQH	set	16116
  2238  0000                     _ADACQL	set	16115
  2239  0000                     _ADPCH	set	16113
  2240  0000                     _ADRPT	set	16108
  2241  0000                     _ADACCU	set	16106
  2242  0000                     _ADSTPTH	set	16101
  2243  0000                     _ADSTPTL	set	16100
  2244  0000                     _ADUTHH	set	16097
  2245  0000                     _ADUTHL	set	16096
  2246  0000                     _ADLTHH	set	16095
  2247  0000                     _ADLTHL	set	16094
  2248  0000                     _CCPTMRS1bits	set	16223
  2249  0000                     _PORTFbits	set	16335
  2250  0000                     _LATDbits	set	16317
  2251  0000                     _PORTBbits	set	16331
  2252  0000                     _T3CONbits	set	16294
  2253  0000                     _T3CON	set	16294
  2254  0000                     _TMR3L	set	16292
  2255  0000                     _TMR3H	set	16293
  2256  0000                     _T3CLK	set	16297
  2257  0000                     _T3GATE	set	16296
  2258  0000                     _T3GCON	set	16295
  2259  0000                     _T2CON	set	16300
  2260  0000                     _T2TMR	set	16298
  2261  0000                     _T2PR	set	16299
  2262  0000                     _T2RST	set	16303
  2263  0000                     _T2HLT	set	16301
  2264  0000                     _T2CLKCON	set	16302
  2265  0000                     _PWM8DCL	set	16224
  2266  0000                     _PWM8DCH	set	16225
  2267  0000                     _PWM8CON	set	16226
  2268  0000                     _LATEbits	set	16318
  2269  0000                     _T5CONbits	set	16282
  2270  0000                     _T5CON	set	16282
  2271  0000                     _TMR5L	set	16280
  2272  0000                     _TMR5H	set	16281
  2273  0000                     _T5CLK	set	16285
  2274  0000                     _T5GATE	set	16284
  2275  0000                     _T5GCON	set	16283
  2276  0000                     _LATFbits	set	16319
  2277  0000                     _LATCbits	set	16316
  2278  0000                     _T6CON	set	16276
  2279  0000                     _T6TMR	set	16274
  2280  0000                     _T6PR	set	16275
  2281  0000                     _T6RST	set	16279
  2282  0000                     _T6HLT	set	16277
  2283  0000                     _T6CLKCON	set	16278
  2284  0000                     _TRISD	set	16325
  2285  0000                     _TRISC	set	16324
  2286  0000                     _TRISB	set	16323
  2287  0000                     _TRISA	set	16322
  2288  0000                     _TRISF	set	16327
  2289  0000                     _TRISE	set	16326
  2290  0000                     _LATC	set	16316
  2291  0000                     _LATB	set	16315
  2292  0000                     _LATF	set	16319
  2293  0000                     _LATA	set	16314
  2294  0000                     _LATD	set	16317
  2295  0000                     _LATE	set	16318
  2296  0000                     _IVTLOCKbits	set	16340
  2297  0000                     _IVTLOCK	set	16340
  2298  0000                     _INTCON0bits	set	16338
  2299  0000                     _GIE	set	130711
  2300  00FBD7                     STR_64:
  2301                           
  2302                           ; BSR set to: 57
  2303  00FBD7  20                 	db	32
  2304  00FBD8  25                 	db	37
  2305  00FBD9  63                 	db	99	;'c'
  2306  00FBDA  20                 	db	32
  2307  00FBDB  2C                 	db	44
  2308  00FBDC  25                 	db	37
  2309  00FBDD  6C                 	db	108	;'l'
  2310  00FBDE  75                 	db	117	;'u'
  2311  00FBDF  2C                 	db	44
  2312  00FBE0  25                 	db	37
  2313  00FBE1  34                 	db	52	;'4'
  2314  00FBE2  2E                 	db	46
  2315  00FBE3  34                 	db	52	;'4'
  2316  00FBE4  66                 	db	102	;'f'
  2317  00FBE5  2C                 	db	44
  2318  00FBE6  25                 	db	37
  2319  00FBE7  34                 	db	52	;'4'
  2320  00FBE8  2E                 	db	46
  2321  00FBE9  34                 	db	52	;'4'
  2322  00FBEA  66                 	db	102	;'f'
  2323  00FBEB  2C                 	db	44
  2324  00FBEC  25                 	db	37
  2325  00FBED  34                 	db	52	;'4'
  2326  00FBEE  2E                 	db	46
  2327  00FBEF  34                 	db	52	;'4'
  2328  00FBF0  66                 	db	102	;'f'
  2329  00FBF1  2C                 	db	44
  2330  00FBF2  25                 	db	37
  2331  00FBF3  34                 	db	52	;'4'
  2332  00FBF4  2E                 	db	46
  2333  00FBF5  34                 	db	52	;'4'
  2334  00FBF6  66                 	db	102	;'f'
  2335  00FBF7  2C                 	db	44
  2336  00FBF8  25                 	db	37
  2337  00FBF9  34                 	db	52	;'4'
  2338  00FBFA  2E                 	db	46
  2339  00FBFB  33                 	db	51	;'3'
  2340  00FBFC  66                 	db	102	;'f'
  2341  00FBFD  2C                 	db	44
  2342  00FBFE  25                 	db	37
  2343  00FBFF  34                 	db	52	;'4'
  2344  00FC00  2E                 	db	46
  2345  00FC01  33                 	db	51	;'3'
  2346  00FC02  66                 	db	102	;'f'
  2347  00FC03  2C                 	db	44
  2348  00FC04  25                 	db	37
  2349  00FC05  34                 	db	52	;'4'
  2350  00FC06  2E                 	db	46
  2351  00FC07  33                 	db	51	;'3'
  2352  00FC08  66                 	db	102	;'f'
  2353  00FC09  2C                 	db	44
  2354  00FC0A  25                 	db	37
  2355  00FC0B  34                 	db	52	;'4'
  2356  00FC0C  2E                 	db	46
  2357  00FC0D  33                 	db	51	;'3'
  2358  00FC0E  66                 	db	102	;'f'
  2359  00FC0F  2C                 	db	44
  2360  00FC10  25                 	db	37
  2361  00FC11  34                 	db	52	;'4'
  2362  00FC12  2E                 	db	46
  2363  00FC13  33                 	db	51	;'3'
  2364  00FC14  66                 	db	102	;'f'
  2365  00FC15  2C                 	db	44
  2366  00FC16  25                 	db	37
  2367  00FC17  34                 	db	52	;'4'
  2368  00FC18  2E                 	db	46
  2369  00FC19  33                 	db	51	;'3'
  2370  00FC1A  66                 	db	102	;'f'
  2371  00FC1B  2C                 	db	44
  2372  00FC1C  25                 	db	37
  2373  00FC1D  64                 	db	100	;'d'
  2374  00FC1E  2C                 	db	44
  2375  00FC1F  25                 	db	37
  2376  00FC20  64                 	db	100	;'d'
  2377  00FC21  2C                 	db	44
  2378  00FC22  25                 	db	37
  2379  00FC23  32                 	db	50	;'2'
  2380  00FC24  2E                 	db	46
  2381  00FC25  36                 	db	54	;'6'
  2382  00FC26  66                 	db	102	;'f'
  2383  00FC27  2C                 	db	44
  2384  00FC28  25                 	db	37
  2385  00FC29  34                 	db	52	;'4'
  2386  00FC2A  2E                 	db	46
  2387  00FC2B  33                 	db	51	;'3'
  2388  00FC2C  66                 	db	102	;'f'
  2389  00FC2D  2C                 	db	44
  2390  00FC2E  25                 	db	37
  2391  00FC2F  64                 	db	100	;'d'
  2392  00FC30  2C                 	db	44
  2393  00FC31  25                 	db	37
  2394  00FC32  64                 	db	100	;'d'
  2395  00FC33  2C                 	db	44
  2396  00FC34  25                 	db	37
  2397  00FC35  6C                 	db	108	;'l'
  2398  00FC36  75                 	db	117	;'u'
  2399  00FC37  2C                 	db	44
  2400  00FC38  25                 	db	37
  2401  00FC39  6C                 	db	108	;'l'
  2402  00FC3A  75                 	db	117	;'u'
  2403  00FC3B  2C                 	db	44
  2404  00FC3C  25                 	db	37
  2405  00FC3D  34                 	db	52	;'4'
  2406  00FC3E  2E                 	db	46
  2407  00FC3F  33                 	db	51	;'3'
  2408  00FC40  66                 	db	102	;'f'
  2409  00FC41  2C                 	db	44
  2410  00FC42  25                 	db	37
  2411  00FC43  34                 	db	52	;'4'
  2412  00FC44  2E                 	db	46
  2413  00FC45  33                 	db	51	;'3'
  2414  00FC46  66                 	db	102	;'f'
  2415  00FC47  2C                 	db	44
  2416  00FC48  25                 	db	37
  2417  00FC49  34                 	db	52	;'4'
  2418  00FC4A  2E                 	db	46
  2419  00FC4B  33                 	db	51	;'3'
  2420  00FC4C  66                 	db	102	;'f'
  2421  00FC4D  0D                 	db	13
  2422  00FC4E  0A                 	db	10
  2423  00FC4F  00                 	db	0
  2424  00FC50                     STR_17:
  2425                           
  2426                           ; BSR set to: 57
  2427  00FC50  52                 	db	82	;'R'
  2428  00FC51  31                 	db	49	;'1'
  2429  00FC52  20                 	db	32
  2430  00FC53  25                 	db	37
  2431  00FC54  32                 	db	50	;'2'
  2432  00FC55  2E                 	db	46
  2433  00FC56  33                 	db	51	;'3'
  2434  00FC57  66                 	db	102	;'f'
  2435  00FC58  20                 	db	32
  2436  00FC59  25                 	db	37
  2437  00FC5A  33                 	db	51	;'3'
  2438  00FC5B  2E                 	db	46
  2439  00FC5C  34                 	db	52	;'4'
  2440  00FC5D  66                 	db	102	;'f'
  2441  00FC5E  20                 	db	32
  2442  00FC5F  20                 	db	32
  2443  00FC60  20                 	db	32
  2444  00FC61  20                 	db	32
  2445  00FC62  20                 	db	32
  2446  00FC63  20                 	db	32
  2447  00FC64  20                 	db	32
  2448  00FC65  20                 	db	32
  2449  00FC66  20                 	db	32
  2450  00FC67  20                 	db	32
  2451  00FC68  20                 	db	32
  2452  00FC69  00                 	db	0
  2453  00FC6A                     STR_18:
  2454                           
  2455                           ; BSR set to: 57
  2456  00FC6A  52                 	db	82	;'R'
  2457  00FC6B  32                 	db	50	;'2'
  2458  00FC6C  20                 	db	32
  2459  00FC6D  25                 	db	37
  2460  00FC6E  32                 	db	50	;'2'
  2461  00FC6F  2E                 	db	46
  2462  00FC70  33                 	db	51	;'3'
  2463  00FC71  66                 	db	102	;'f'
  2464  00FC72  20                 	db	32
  2465  00FC73  25                 	db	37
  2466  00FC74  33                 	db	51	;'3'
  2467  00FC75  2E                 	db	46
  2468  00FC76  34                 	db	52	;'4'
  2469  00FC77  66                 	db	102	;'f'
  2470  00FC78  20                 	db	32
  2471  00FC79  20                 	db	32
  2472  00FC7A  20                 	db	32
  2473  00FC7B  20                 	db	32
  2474  00FC7C  20                 	db	32
  2475  00FC7D  20                 	db	32
  2476  00FC7E  20                 	db	32
  2477  00FC7F  20                 	db	32
  2478  00FC80  20                 	db	32
  2479  00FC81  20                 	db	32
  2480  00FC82  20                 	db	32
  2481  00FC83  00                 	db	0
  2482  00FC84                     STR_9:
  2483                           
  2484                           ; BSR set to: 57
  2485  00FC84  53                 	db	83	;'S'
  2486  00FC85  20                 	db	32
  2487  00FC86  53                 	db	83	;'S'
  2488  00FC87  25                 	db	37
  2489  00FC88  63                 	db	99	;'c'
  2490  00FC89  43                 	db	67	;'C'
  2491  00FC8A  20                 	db	32
  2492  00FC8B  25                 	db	37
  2493  00FC8C  64                 	db	100	;'d'
  2494  00FC8D  20                 	db	32
  2495  00FC8E  25                 	db	37
  2496  00FC8F  32                 	db	50	;'2'
  2497  00FC90  2E                 	db	46
  2498  00FC91  34                 	db	52	;'4'
  2499  00FC92  66                 	db	102	;'f'
  2500  00FC93  20                 	db	32
  2501  00FC94  20                 	db	32
  2502  00FC95  20                 	db	32
  2503  00FC96  20                 	db	32
  2504  00FC97  20                 	db	32
  2505  00FC98  20                 	db	32
  2506  00FC99  20                 	db	32
  2507  00FC9A  20                 	db	32
  2508  00FC9B  20                 	db	32
  2509  00FC9C  20                 	db	32
  2510  00FC9D  00                 	db	0
  2511  00FC9E                     
  2512                           ; BSR set to: 57
  2513  00FC9E  20                 	db	32
  2514  00FC9F  4D                 	db	77	;'M'
  2515  00FCA0  65                 	db	101	;'e'
  2516  00FCA1  73                 	db	115	;'s'
  2517  00FCA2  67                 	db	103	;'g'
  2518  00FCA3  20                 	db	32
  2519  00FCA4  25                 	db	37
  2520  00FCA5  64                 	db	100	;'d'
  2521  00FCA6  20                 	db	32
  2522  00FCA7  53                 	db	83	;'S'
  2523  00FCA8  74                 	db	116	;'t'
  2524  00FCA9  61                 	db	97	;'a'
  2525  00FCAA  63                 	db	99	;'c'
  2526  00FCAB  6B                 	db	107	;'k'
  2527  00FCAC  20                 	db	32
  2528  00FCAD  25                 	db	37
  2529  00FCAE  64                 	db	100	;'d'
  2530  00FCAF  20                 	db	32
  2531  00FCB0  20                 	db	32
  2532  00FCB1  20                 	db	32
  2533  00FCB2  20                 	db	32
  2534  00FCB3  20                 	db	32
  2535  00FCB4  20                 	db	32
  2536  00FCB5  00                 	db	0
  2537  00FCB6                     STR_37:
  2538                           
  2539                           ; BSR set to: 57
  2540  00FCB6  45                 	db	69	;'E'
  2541  00FCB7  53                 	db	83	;'S'
  2542  00FCB8  52                 	db	82	;'R'
  2543  00FCB9  20                 	db	32
  2544  00FCBA  20                 	db	32
  2545  00FCBB  25                 	db	37
  2546  00FCBC  32                 	db	50	;'2'
  2547  00FCBD  2E                 	db	46
  2548  00FCBE  36                 	db	54	;'6'
  2549  00FCBF  66                 	db	102	;'f'
  2550  00FCC0  20                 	db	32
  2551  00FCC1  20                 	db	32
  2552  00FCC2  20                 	db	32
  2553  00FCC3  20                 	db	32
  2554  00FCC4  20                 	db	32
  2555  00FCC5  20                 	db	32
  2556  00FCC6  20                 	db	32
  2557  00FCC7  20                 	db	32
  2558  00FCC8  20                 	db	32
  2559  00FCC9  20                 	db	32
  2560  00FCCA  20                 	db	32
  2561  00FCCB  20                 	db	32
  2562  00FCCC  00                 	db	0
  2563  00FCCD                     STR_36:
  2564                           
  2565                           ; BSR set to: 57
  2566  00FCCD  53                 	db	83	;'S'
  2567  00FCCE  25                 	db	37
  2568  00FCCF  63                 	db	99	;'c'
  2569  00FCD0  43                 	db	67	;'C'
  2570  00FCD1  20                 	db	32
  2571  00FCD2  25                 	db	37
  2572  00FCD3  64                 	db	100	;'d'
  2573  00FCD4  20                 	db	32
  2574  00FCD5  52                 	db	82	;'R'
  2575  00FCD6  55                 	db	85	;'U'
  2576  00FCD7  4E                 	db	78	;'N'
  2577  00FCD8  20                 	db	32
  2578  00FCD9  25                 	db	37
  2579  00FCDA  64                 	db	100	;'d'
  2580  00FCDB  20                 	db	32
  2581  00FCDC  20                 	db	32
  2582  00FCDD  20                 	db	32
  2583  00FCDE  20                 	db	32
  2584  00FCDF  20                 	db	32
  2585  00FCE0  20                 	db	32
  2586  00FCE1  20                 	db	32
  2587  00FCE2  20                 	db	32
  2588  00FCE3  00                 	db	0
  2589  00FCE4                     STR_34:
  2590                           
  2591                           ; BSR set to: 57
  2592  00FCE4  42                 	db	66	;'B'
  2593  00FCE5  41                 	db	65	;'A'
  2594  00FCE6  54                 	db	84	;'T'
  2595  00FCE7  54                 	db	84	;'T'
  2596  00FCE8  20                 	db	32
  2597  00FCE9  50                 	db	80	;'P'
  2598  00FCEA  57                 	db	87	;'W'
  2599  00FCEB  52                 	db	82	;'R'
  2600  00FCEC  20                 	db	32
  2601  00FCED  25                 	db	37
  2602  00FCEE  33                 	db	51	;'3'
  2603  00FCEF  2E                 	db	46
  2604  00FCF0  32                 	db	50	;'2'
  2605  00FCF1  66                 	db	102	;'f'
  2606  00FCF2  20                 	db	32
  2607  00FCF3  20                 	db	32
  2608  00FCF4  20                 	db	32
  2609  00FCF5  20                 	db	32
  2610  00FCF6  20                 	db	32
  2611  00FCF7  20                 	db	32
  2612  00FCF8  20                 	db	32
  2613  00FCF9  20                 	db	32
  2614  00FCFA  00                 	db	0
  2615  00FCFB                     STR_38:
  2616                           
  2617                           ; BSR set to: 57
  2618  00FCFB  52                 	db	82	;'R'
  2619  00FCFC  31                 	db	49	;'1'
  2620  00FCFD  20                 	db	32
  2621  00FCFE  25                 	db	37
  2622  00FCFF  32                 	db	50	;'2'
  2623  00FD00  2E                 	db	46
  2624  00FD01  33                 	db	51	;'3'
  2625  00FD02  66                 	db	102	;'f'
  2626  00FD03  20                 	db	32
  2627  00FD04  25                 	db	37
  2628  00FD05  33                 	db	51	;'3'
  2629  00FD06  2E                 	db	46
  2630  00FD07  34                 	db	52	;'4'
  2631  00FD08  66                 	db	102	;'f'
  2632  00FD09  20                 	db	32
  2633  00FD0A  20                 	db	32
  2634  00FD0B  20                 	db	32
  2635  00FD0C  20                 	db	32
  2636  00FD0D  20                 	db	32
  2637  00FD0E  20                 	db	32
  2638  00FD0F  20                 	db	32
  2639  00FD10  20                 	db	32
  2640  00FD11  00                 	db	0
  2641  00FD12                     STR_39:
  2642                           
  2643                           ; BSR set to: 57
  2644  00FD12  52                 	db	82	;'R'
  2645  00FD13  32                 	db	50	;'2'
  2646  00FD14  20                 	db	32
  2647  00FD15  25                 	db	37
  2648  00FD16  32                 	db	50	;'2'
  2649  00FD17  2E                 	db	46
  2650  00FD18  33                 	db	51	;'3'
  2651  00FD19  66                 	db	102	;'f'
  2652  00FD1A  20                 	db	32
  2653  00FD1B  25                 	db	37
  2654  00FD1C  33                 	db	51	;'3'
  2655  00FD1D  2E                 	db	46
  2656  00FD1E  34                 	db	52	;'4'
  2657  00FD1F  66                 	db	102	;'f'
  2658  00FD20  20                 	db	32
  2659  00FD21  20                 	db	32
  2660  00FD22  20                 	db	32
  2661  00FD23  20                 	db	32
  2662  00FD24  20                 	db	32
  2663  00FD25  20                 	db	32
  2664  00FD26  20                 	db	32
  2665  00FD27  20                 	db	32
  2666  00FD28  00                 	db	0
  2667  00FD29                     STR_35:
  2668                           
  2669                           ; BSR set to: 57
  2670  00FD29  42                 	db	66	;'B'
  2671  00FD2A  41                 	db	65	;'A'
  2672  00FD2B  48                 	db	72	;'H'
  2673  00FD2C  20                 	db	32
  2674  00FD2D  25                 	db	37
  2675  00FD2E  33                 	db	51	;'3'
  2676  00FD2F  2E                 	db	46
  2677  00FD30  32                 	db	50	;'2'
  2678  00FD31  66                 	db	102	;'f'
  2679  00FD32  20                 	db	32
  2680  00FD33  50                 	db	80	;'P'
  2681  00FD34  25                 	db	37
  2682  00FD35  33                 	db	51	;'3'
  2683  00FD36  2E                 	db	46
  2684  00FD37  32                 	db	50	;'2'
  2685  00FD38  66                 	db	102	;'f'
  2686  00FD39  20                 	db	32
  2687  00FD3A  20                 	db	32
  2688  00FD3B  20                 	db	32
  2689  00FD3C  20                 	db	32
  2690  00FD3D  20                 	db	32
  2691  00FD3E  20                 	db	32
  2692  00FD3F  00                 	db	0
  2693  00FD40                     STR_16:
  2694                           
  2695                           ; BSR set to: 57
  2696  00FD40  45                 	db	69	;'E'
  2697  00FD41  53                 	db	83	;'S'
  2698  00FD42  52                 	db	82	;'R'
  2699  00FD43  20                 	db	32
  2700  00FD44  20                 	db	32
  2701  00FD45  25                 	db	37
  2702  00FD46  32                 	db	50	;'2'
  2703  00FD47  2E                 	db	46
  2704  00FD48  36                 	db	54	;'6'
  2705  00FD49  66                 	db	102	;'f'
  2706  00FD4A  20                 	db	32
  2707  00FD4B  20                 	db	32
  2708  00FD4C  20                 	db	32
  2709  00FD4D  20                 	db	32
  2710  00FD4E  20                 	db	32
  2711  00FD4F  20                 	db	32
  2712  00FD50  20                 	db	32
  2713  00FD51  20                 	db	32
  2714  00FD52  20                 	db	32
  2715  00FD53  20                 	db	32
  2716  00FD54  20                 	db	32
  2717  00FD55  00                 	db	0
  2718  00FD56                     STR_10:
  2719                           
  2720                           ; BSR set to: 57
  2721  00FD56  53                 	db	83	;'S'
  2722  00FD57  74                 	db	116	;'t'
  2723  00FD58  61                 	db	97	;'a'
  2724  00FD59  74                 	db	116	;'t'
  2725  00FD5A  69                 	db	105	;'i'
  2726  00FD5B  63                 	db	99	;'c'
  2727  00FD5C  20                 	db	32
  2728  00FD5D  53                 	db	83	;'S'
  2729  00FD5E  4F                 	db	79	;'O'
  2730  00FD5F  43                 	db	67	;'C'
  2731  00FD60  20                 	db	32
  2732  00FD61  25                 	db	37
  2733  00FD62  64                 	db	100	;'d'
  2734  00FD63  20                 	db	32
  2735  00FD64  20                 	db	32
  2736  00FD65  20                 	db	32
  2737  00FD66  20                 	db	32
  2738  00FD67  20                 	db	32
  2739  00FD68  20                 	db	32
  2740  00FD69  20                 	db	32
  2741  00FD6A  20                 	db	32
  2742  00FD6B  00                 	db	0
  2743  00FD6C                     STR_31:
  2744                           
  2745                           ; BSR set to: 57
  2746  00FD6C  42                 	db	66	;'B'
  2747  00FD6D  41                 	db	65	;'A'
  2748  00FD6E  54                 	db	84	;'T'
  2749  00FD6F  20                 	db	32
  2750  00FD70  49                 	db	73	;'I'
  2751  00FD71  57                 	db	87	;'W'
  2752  00FD72  48                 	db	72	;'H'
  2753  00FD73  20                 	db	32
  2754  00FD74  25                 	db	37
  2755  00FD75  34                 	db	52	;'4'
  2756  00FD76  2E                 	db	46
  2757  00FD77  31                 	db	49	;'1'
  2758  00FD78  66                 	db	102	;'f'
  2759  00FD79  20                 	db	32
  2760  00FD7A  20                 	db	32
  2761  00FD7B  20                 	db	32
  2762  00FD7C  20                 	db	32
  2763  00FD7D  20                 	db	32
  2764  00FD7E  20                 	db	32
  2765  00FD7F  20                 	db	32
  2766  00FD80  20                 	db	32
  2767  00FD81  00                 	db	0
  2768  00FD82                     STR_32:
  2769                           
  2770                           ; BSR set to: 57
  2771  00FD82  42                 	db	66	;'B'
  2772  00FD83  41                 	db	65	;'A'
  2773  00FD84  54                 	db	84	;'T'
  2774  00FD85  20                 	db	32
  2775  00FD86  4F                 	db	79	;'O'
  2776  00FD87  57                 	db	87	;'W'
  2777  00FD88  48                 	db	72	;'H'
  2778  00FD89  20                 	db	32
  2779  00FD8A  25                 	db	37
  2780  00FD8B  34                 	db	52	;'4'
  2781  00FD8C  2E                 	db	46
  2782  00FD8D  31                 	db	49	;'1'
  2783  00FD8E  66                 	db	102	;'f'
  2784  00FD8F  20                 	db	32
  2785  00FD90  20                 	db	32
  2786  00FD91  20                 	db	32
  2787  00FD92  20                 	db	32
  2788  00FD93  20                 	db	32
  2789  00FD94  20                 	db	32
  2790  00FD95  20                 	db	32
  2791  00FD96  20                 	db	32
  2792  00FD97  00                 	db	0
  2793  00FD98                     STR_33:
  2794                           
  2795                           ; BSR set to: 57
  2796  00FD98  42                 	db	66	;'B'
  2797  00FD99  41                 	db	65	;'A'
  2798  00FD9A  54                 	db	84	;'T'
  2799  00FD9B  20                 	db	32
  2800  00FD9C  54                 	db	84	;'T'
  2801  00FD9D  57                 	db	87	;'W'
  2802  00FD9E  48                 	db	72	;'H'
  2803  00FD9F  20                 	db	32
  2804  00FDA0  25                 	db	37
  2805  00FDA1  34                 	db	52	;'4'
  2806  00FDA2  2E                 	db	46
  2807  00FDA3  31                 	db	49	;'1'
  2808  00FDA4  66                 	db	102	;'f'
  2809  00FDA5  20                 	db	32
  2810  00FDA6  20                 	db	32
  2811  00FDA7  20                 	db	32
  2812  00FDA8  20                 	db	32
  2813  00FDA9  20                 	db	32
  2814  00FDAA  20                 	db	32
  2815  00FDAB  20                 	db	32
  2816  00FDAC  20                 	db	32
  2817  00FDAD  00                 	db	0
  2818  00FDAE                     STR_27:
  2819                           
  2820                           ; BSR set to: 57
  2821  00FDAE  49                 	db	73	;'I'
  2822  00FDAF  4E                 	db	78	;'N'
  2823  00FDB0  56                 	db	86	;'V'
  2824  00FDB1  20                 	db	32
  2825  00FDB2  20                 	db	32
  2826  00FDB3  57                 	db	87	;'W'
  2827  00FDB4  48                 	db	72	;'H'
  2828  00FDB5  20                 	db	32
  2829  00FDB6  25                 	db	37
  2830  00FDB7  33                 	db	51	;'3'
  2831  00FDB8  2E                 	db	46
  2832  00FDB9  32                 	db	50	;'2'
  2833  00FDBA  66                 	db	102	;'f'
  2834  00FDBB  20                 	db	32
  2835  00FDBC  20                 	db	32
  2836  00FDBD  20                 	db	32
  2837  00FDBE  20                 	db	32
  2838  00FDBF  20                 	db	32
  2839  00FDC0  20                 	db	32
  2840  00FDC1  20                 	db	32
  2841  00FDC2  20                 	db	32
  2842  00FDC3  00                 	db	0
  2843  00FDC4                     STR_26:
  2844                           
  2845                           ; BSR set to: 57
  2846  00FDC4  4C                 	db	76	;'L'
  2847  00FDC5  4F                 	db	79	;'O'
  2848  00FDC6  41                 	db	65	;'A'
  2849  00FDC7  44                 	db	68	;'D'
  2850  00FDC8  20                 	db	32
  2851  00FDC9  57                 	db	87	;'W'
  2852  00FDCA  48                 	db	72	;'H'
  2853  00FDCB  20                 	db	32
  2854  00FDCC  25                 	db	37
  2855  00FDCD  33                 	db	51	;'3'
  2856  00FDCE  2E                 	db	46
  2857  00FDCF  32                 	db	50	;'2'
  2858  00FDD0  66                 	db	102	;'f'
  2859  00FDD1  20                 	db	32
  2860  00FDD2  20                 	db	32
  2861  00FDD3  20                 	db	32
  2862  00FDD4  20                 	db	32
  2863  00FDD5  20                 	db	32
  2864  00FDD6  20                 	db	32
  2865  00FDD7  20                 	db	32
  2866  00FDD8  20                 	db	32
  2867  00FDD9  00                 	db	0
  2868  00FDDA                     STR_25:
  2869                           
  2870                           ; BSR set to: 57
  2871  00FDDA  50                 	db	80	;'P'
  2872  00FDDB  56                 	db	86	;'V'
  2873  00FDDC  20                 	db	32
  2874  00FDDD  25                 	db	37
  2875  00FDDE  63                 	db	99	;'c'
  2876  00FDDF  20                 	db	32
  2877  00FDE0  57                 	db	87	;'W'
  2878  00FDE1  48                 	db	72	;'H'
  2879  00FDE2  20                 	db	32
  2880  00FDE3  25                 	db	37
  2881  00FDE4  33                 	db	51	;'3'
  2882  00FDE5  2E                 	db	46
  2883  00FDE6  32                 	db	50	;'2'
  2884  00FDE7  66                 	db	102	;'f'
  2885  00FDE8  20                 	db	32
  2886  00FDE9  20                 	db	32
  2887  00FDEA  20                 	db	32
  2888  00FDEB  20                 	db	32
  2889  00FDEC  20                 	db	32
  2890  00FDED  20                 	db	32
  2891  00FDEE  20                 	db	32
  2892  00FDEF  00                 	db	0
  2893  00FDF0                     STR_24:
  2894                           
  2895                           ; BSR set to: 57
  2896  00FDF0  49                 	db	73	;'I'
  2897  00FDF1  4E                 	db	78	;'N'
  2898  00FDF2  56                 	db	86	;'V'
  2899  00FDF3  20                 	db	32
  2900  00FDF4  20                 	db	32
  2901  00FDF5  50                 	db	80	;'P'
  2902  00FDF6  57                 	db	87	;'W'
  2903  00FDF7  52                 	db	82	;'R'
  2904  00FDF8  20                 	db	32
  2905  00FDF9  25                 	db	37
  2906  00FDFA  33                 	db	51	;'3'
  2907  00FDFB  2E                 	db	46
  2908  00FDFC  32                 	db	50	;'2'
  2909  00FDFD  66                 	db	102	;'f'
  2910  00FDFE  20                 	db	32
  2911  00FDFF  20                 	db	32
  2912  00FE00  20                 	db	32
  2913  00FE01  20                 	db	32
  2914  00FE02  20                 	db	32
  2915  00FE03  20                 	db	32
  2916  00FE04  20                 	db	32
  2917  00FE05  00                 	db	0
  2918  00FE06                     STR_23:
  2919                           
  2920                           ; BSR set to: 57
  2921  00FE06  4C                 	db	76	;'L'
  2922  00FE07  4F                 	db	79	;'O'
  2923  00FE08  41                 	db	65	;'A'
  2924  00FE09  44                 	db	68	;'D'
  2925  00FE0A  20                 	db	32
  2926  00FE0B  50                 	db	80	;'P'
  2927  00FE0C  57                 	db	87	;'W'
  2928  00FE0D  52                 	db	82	;'R'
  2929  00FE0E  20                 	db	32
  2930  00FE0F  25                 	db	37
  2931  00FE10  33                 	db	51	;'3'
  2932  00FE11  2E                 	db	46
  2933  00FE12  32                 	db	50	;'2'
  2934  00FE13  66                 	db	102	;'f'
  2935  00FE14  20                 	db	32
  2936  00FE15  20                 	db	32
  2937  00FE16  20                 	db	32
  2938  00FE17  20                 	db	32
  2939  00FE18  20                 	db	32
  2940  00FE19  20                 	db	32
  2941  00FE1A  20                 	db	32
  2942  00FE1B  00                 	db	0
  2943  00FE1C                     STR_22:
  2944                           
  2945                           ; BSR set to: 57
  2946  00FE1C  50                 	db	80	;'P'
  2947  00FE1D  56                 	db	86	;'V'
  2948  00FE1E  20                 	db	32
  2949  00FE1F  25                 	db	37
  2950  00FE20  63                 	db	99	;'c'
  2951  00FE21  20                 	db	32
  2952  00FE22  50                 	db	80	;'P'
  2953  00FE23  57                 	db	87	;'W'
  2954  00FE24  52                 	db	82	;'R'
  2955  00FE25  20                 	db	32
  2956  00FE26  25                 	db	37
  2957  00FE27  33                 	db	51	;'3'
  2958  00FE28  2E                 	db	46
  2959  00FE29  32                 	db	50	;'2'
  2960  00FE2A  66                 	db	102	;'f'
  2961  00FE2B  20                 	db	32
  2962  00FE2C  20                 	db	32
  2963  00FE2D  20                 	db	32
  2964  00FE2E  20                 	db	32
  2965  00FE2F  20                 	db	32
  2966  00FE30  20                 	db	32
  2967  00FE31  00                 	db	0
  2968  00FE32                     STR_11:
  2969                           
  2970                           ; BSR set to: 57
  2971  00FE32  42                 	db	66	;'B'
  2972  00FE33  61                 	db	97	;'a'
  2973  00FE34  74                 	db	116	;'t'
  2974  00FE35  74                 	db	116	;'t'
  2975  00FE36  65                 	db	101	;'e'
  2976  00FE37  72                 	db	114	;'r'
  2977  00FE38  79                 	db	121	;'y'
  2978  00FE39  20                 	db	32
  2979  00FE3A  41                 	db	65	;'A'
  2980  00FE3B  68                 	db	104	;'h'
  2981  00FE3C  20                 	db	32
  2982  00FE3D  25                 	db	37
  2983  00FE3E  33                 	db	51	;'3'
  2984  00FE3F  2E                 	db	46
  2985  00FE40  32                 	db	50	;'2'
  2986  00FE41  66                 	db	102	;'f'
  2987  00FE42  20                 	db	32
  2988  00FE43  20                 	db	32
  2989  00FE44  20                 	db	32
  2990  00FE45  20                 	db	32
  2991  00FE46  20                 	db	32
  2992  00FE47  00                 	db	0
  2993  00FE48                     STR_29:
  2994                           
  2995                           ; BSR set to: 57
  2996  00FE48  42                 	db	66	;'B'
  2997  00FE49  56                 	db	86	;'V'
  2998  00FE4A  20                 	db	32
  2999  00FE4B  25                 	db	37
  3000  00FE4C  32                 	db	50	;'2'
  3001  00FE4D  2E                 	db	46
  3002  00FE4E  32                 	db	50	;'2'
  3003  00FE4F  66                 	db	102	;'f'
  3004  00FE50  20                 	db	32
  3005  00FE51  42                 	db	66	;'B'
  3006  00FE52  41                 	db	65	;'A'
  3007  00FE53  20                 	db	32
  3008  00FE54  25                 	db	37
  3009  00FE55  32                 	db	50	;'2'
  3010  00FE56  2E                 	db	46
  3011  00FE57  32                 	db	50	;'2'
  3012  00FE58  66                 	db	102	;'f'
  3013  00FE59  20                 	db	32
  3014  00FE5A  20                 	db	32
  3015  00FE5B  20                 	db	32
  3016  00FE5C  20                 	db	32
  3017  00FE5D  00                 	db	0
  3018  00FE5E                     STR_30:
  3019                           
  3020                           ; BSR set to: 57
  3021  00FE5E  43                 	db	67	;'C'
  3022  00FE5F  56                 	db	86	;'V'
  3023  00FE60  20                 	db	32
  3024  00FE61  25                 	db	37
  3025  00FE62  32                 	db	50	;'2'
  3026  00FE63  2E                 	db	46
  3027  00FE64  32                 	db	50	;'2'
  3028  00FE65  66                 	db	102	;'f'
  3029  00FE66  20                 	db	32
  3030  00FE67  4C                 	db	76	;'L'
  3031  00FE68  41                 	db	65	;'A'
  3032  00FE69  20                 	db	32
  3033  00FE6A  25                 	db	37
  3034  00FE6B  32                 	db	50	;'2'
  3035  00FE6C  2E                 	db	46
  3036  00FE6D  32                 	db	50	;'2'
  3037  00FE6E  66                 	db	102	;'f'
  3038  00FE6F  20                 	db	32
  3039  00FE70  20                 	db	32
  3040  00FE71  20                 	db	32
  3041  00FE72  20                 	db	32
  3042  00FE73  00                 	db	0
  3043  00FE74                     STR_28:
  3044                           
  3045                           ; BSR set to: 57
  3046  00FE74  50                 	db	80	;'P'
  3047  00FE75  56                 	db	86	;'V'
  3048  00FE76  20                 	db	32
  3049  00FE77  25                 	db	37
  3050  00FE78  32                 	db	50	;'2'
  3051  00FE79  2E                 	db	46
  3052  00FE7A  32                 	db	50	;'2'
  3053  00FE7B  66                 	db	102	;'f'
  3054  00FE7C  20                 	db	32
  3055  00FE7D  50                 	db	80	;'P'
  3056  00FE7E  41                 	db	65	;'A'
  3057  00FE7F  20                 	db	32
  3058  00FE80  25                 	db	37
  3059  00FE81  32                 	db	50	;'2'
  3060  00FE82  2E                 	db	46
  3061  00FE83  32                 	db	50	;'2'
  3062  00FE84  66                 	db	102	;'f'
  3063  00FE85  20                 	db	32
  3064  00FE86  20                 	db	32
  3065  00FE87  20                 	db	32
  3066  00FE88  20                 	db	32
  3067  00FE89  00                 	db	0
  3068  00FE8A                     STR_40:
  3069                           
  3070                           ; BSR set to: 57
  3071  00FE8A  25                 	db	37
  3072  00FE8B  64                 	db	100	;'d'
  3073  00FE8C  20                 	db	32
  3074  00FE8D  25                 	db	37
  3075  00FE8E  32                 	db	50	;'2'
  3076  00FE8F  2E                 	db	46
  3077  00FE90  34                 	db	52	;'4'
  3078  00FE91  66                 	db	102	;'f'
  3079  00FE92  2C                 	db	44
  3080  00FE93  20                 	db	32
  3081  00FE94  25                 	db	37
  3082  00FE95  64                 	db	100	;'d'
  3083  00FE96  20                 	db	32
  3084  00FE97  20                 	db	32
  3085  00FE98  54                 	db	84	;'T'
  3086  00FE99  52                 	db	82	;'R'
  3087  00FE9A  49                 	db	73	;'I'
  3088  00FE9B  4D                 	db	77	;'M'
  3089  00FE9C  20                 	db	32
  3090  00FE9D  20                 	db	32
  3091  00FE9E  20                 	db	32
  3092  00FE9F  00                 	db	0
  3093  00FEA0                     STR_5:
  3094                           
  3095                           ; BSR set to: 57
  3096  00FEA0  20                 	db	32
  3097  00FEA1  20                 	db	32
  3098  00FEA2  20                 	db	32
  3099  00FEA3  20                 	db	32
  3100  00FEA4  20                 	db	32
  3101  00FEA5  20                 	db	32
  3102  00FEA6  20                 	db	32
  3103  00FEA7  20                 	db	32
  3104  00FEA8  20                 	db	32
  3105  00FEA9  20                 	db	32
  3106  00FEAA  20                 	db	32
  3107  00FEAB  20                 	db	32
  3108  00FEAC  20                 	db	32
  3109  00FEAD  20                 	db	32
  3110  00FEAE  20                 	db	32
  3111  00FEAF  20                 	db	32
  3112  00FEB0  20                 	db	32
  3113  00FEB1  20                 	db	32
  3114  00FEB2  20                 	db	32
  3115  00FEB3  20                 	db	32
  3116  00FEB4  00                 	db	0
  3117  00FEB5                     STR_8:
  3118                           
  3119                           ; BSR set to: 57
  3120  00FEB5  42                 	db	66	;'B'
  3121  00FEB6  56                 	db	86	;'V'
  3122  00FEB7  20                 	db	32
  3123  00FEB8  25                 	db	37
  3124  00FEB9  32                 	db	50	;'2'
  3125  00FEBA  2E                 	db	46
  3126  00FEBB  34                 	db	52	;'4'
  3127  00FEBC  66                 	db	102	;'f'
  3128  00FEBD  20                 	db	32
  3129  00FEBE  20                 	db	32
  3130  00FEBF  20                 	db	32
  3131  00FEC0  20                 	db	32
  3132  00FEC1  20                 	db	32
  3133  00FEC2  20                 	db	32
  3134  00FEC3  20                 	db	32
  3135  00FEC4  20                 	db	32
  3136  00FEC5  20                 	db	32
  3137  00FEC6  20                 	db	32
  3138  00FEC7  20                 	db	32
  3139  00FEC8  20                 	db	32
  3140  00FEC9  00                 	db	0
  3141  00FECA                     STR_4:
  3142                           
  3143                           ; BSR set to: 57
  3144  00FECA  20                 	db	32
  3145  00FECB  4E                 	db	78	;'N'
  3146  00FECC  53                 	db	83	;'S'
  3147  00FECD  41                 	db	65	;'A'
  3148  00FECE  53                 	db	83	;'S'
  3149  00FECF  50                 	db	80	;'P'
  3150  00FED0  4F                 	db	79	;'O'
  3151  00FED1  4F                 	db	79	;'O'
  3152  00FED2  4B                 	db	75	;'K'
  3153  00FED3  20                 	db	32
  3154  00FED4  20                 	db	32
  3155  00FED5  20                 	db	32
  3156  00FED6  20                 	db	32
  3157  00FED7  20                 	db	32
  3158  00FED8  20                 	db	32
  3159  00FED9  20                 	db	32
  3160  00FEDA  20                 	db	32
  3161  00FEDB  20                 	db	32
  3162  00FEDC  20                 	db	32
  3163  00FEDD  20                 	db	32
  3164  00FEDE  00                 	db	0
  3165  00FEDF                     STR_12:
  3166                           
  3167                           ; BSR set to: 57
  3168  00FEDF  42                 	db	66	;'B'
  3169  00FEE0  61                 	db	97	;'a'
  3170  00FEE1  74                 	db	116	;'t'
  3171  00FEE2  74                 	db	116	;'t'
  3172  00FEE3  65                 	db	101	;'e'
  3173  00FEE4  72                 	db	114	;'r'
  3174  00FEE5  79                 	db	121	;'y'
  3175  00FEE6  20                 	db	32
  3176  00FEE7  45                 	db	69	;'E'
  3177  00FEE8  53                 	db	83	;'S'
  3178  00FEE9  52                 	db	82	;'R'
  3179  00FEEA  20                 	db	32
  3180  00FEEB  20                 	db	32
  3181  00FEEC  20                 	db	32
  3182  00FEED  20                 	db	32
  3183  00FEEE  20                 	db	32
  3184  00FEEF  20                 	db	32
  3185  00FEF0  20                 	db	32
  3186  00FEF1  20                 	db	32
  3187  00FEF2  20                 	db	32
  3188  00FEF3  00                 	db	0
  3189  00FEF4                     STR_13:
  3190                           
  3191                           ; BSR set to: 57
  3192  00FEF4  43                 	db	67	;'C'
  3193  00FEF5  61                 	db	97	;'a'
  3194  00FEF6  6C                 	db	108	;'l'
  3195  00FEF7  63                 	db	99	;'c'
  3196  00FEF8  75                 	db	117	;'u'
  3197  00FEF9  6C                 	db	108	;'l'
  3198  00FEFA  61                 	db	97	;'a'
  3199  00FEFB  74                 	db	116	;'t'
  3200  00FEFC  69                 	db	105	;'i'
  3201  00FEFD  6F                 	db	111	;'o'
  3202  00FEFE  6E                 	db	110	;'n'
  3203  00FEFF  20                 	db	32
  3204  00FF00  20                 	db	32
  3205  00FF01  20                 	db	32
  3206  00FF02  20                 	db	32
  3207  00FF03  20                 	db	32
  3208  00FF04  20                 	db	32
  3209  00FF05  20                 	db	32
  3210  00FF06  20                 	db	32
  3211  00FF07  20                 	db	32
  3212  00FF08  00                 	db	0
  3213  00FF09                     STR_2:
  3214                           
  3215                           ; BSR set to: 57
  3216  00FF09  20                 	db	32
  3217  00FF0A  56                 	db	86	;'V'
  3218  00FF0B  65                 	db	101	;'e'
  3219  00FF0C  72                 	db	114	;'r'
  3220  00FF0D  73                 	db	115	;'s'
  3221  00FF0E  69                 	db	105	;'i'
  3222  00FF0F  6F                 	db	111	;'o'
  3223  00FF10  6E                 	db	110	;'n'
  3224  00FF11  20                 	db	32
  3225  00FF12  25                 	db	37
  3226  00FF13  73                 	db	115	;'s'
  3227  00FF14  20                 	db	32
  3228  00FF15  20                 	db	32
  3229  00FF16  20                 	db	32
  3230  00FF17  20                 	db	32
  3231  00FF18  20                 	db	32
  3232  00FF19  20                 	db	32
  3233  00FF1A  20                 	db	32
  3234  00FF1B  20                 	db	32
  3235  00FF1C  20                 	db	32
  3236  00FF1D  00                 	db	0
  3237  00FF1E                     STR_1:
  3238                           
  3239                           ; BSR set to: 57
  3240  00FF1E  20                 	db	32
  3241  00FF1F  4D                 	db	77	;'M'
  3242  00FF20  42                 	db	66	;'B'
  3243  00FF21  4D                 	db	77	;'M'
  3244  00FF22  43                 	db	67	;'C'
  3245  00FF23  20                 	db	32
  3246  00FF24  53                 	db	83	;'S'
  3247  00FF25  4F                 	db	79	;'O'
  3248  00FF26  4C                 	db	76	;'L'
  3249  00FF27  41                 	db	65	;'A'
  3250  00FF28  52                 	db	82	;'R'
  3251  00FF29  4D                 	db	77	;'M'
  3252  00FF2A  4F                 	db	79	;'O'
  3253  00FF2B  4E                 	db	78	;'N'
  3254  00FF2C  20                 	db	32
  3255  00FF2D  20                 	db	32
  3256  00FF2E  20                 	db	32
  3257  00FF2F  20                 	db	32
  3258  00FF30  20                 	db	32
  3259  00FF31  20                 	db	32
  3260  00FF32  00                 	db	0
  3261  00FF33                     STR_15:
  3262                           
  3263                           ; BSR set to: 57
  3264  00FF33  43                 	db	67	;'C'
  3265  00FF34  68                 	db	104	;'h'
  3266  00FF35  65                 	db	101	;'e'
  3267  00FF36  63                 	db	99	;'c'
  3268  00FF37  6B                 	db	107	;'k'
  3269  00FF38  69                 	db	105	;'i'
  3270  00FF39  6E                 	db	110	;'n'
  3271  00FF3A  67                 	db	103	;'g'
  3272  00FF3B  20                 	db	32
  3273  00FF3C  25                 	db	37
  3274  00FF3D  63                 	db	99	;'c'
  3275  00FF3E  20                 	db	32
  3276  00FF3F  25                 	db	37
  3277  00FF40  63                 	db	99	;'c'
  3278  00FF41  20                 	db	32
  3279  00FF42  20                 	db	32
  3280  00FF43  20                 	db	32
  3281  00FF44  20                 	db	32
  3282  00FF45  20                 	db	32
  3283  00FF46  20                 	db	32
  3284  00FF47  00                 	db	0
  3285  00FF48                     STR_14:
  3286                           
  3287                           ; BSR set to: 57
  3288  00FF48  43                 	db	67	;'C'
  3289  00FF49  68                 	db	104	;'h'
  3290  00FF4A  65                 	db	101	;'e'
  3291  00FF4B  63                 	db	99	;'c'
  3292  00FF4C  6B                 	db	107	;'k'
  3293  00FF4D  20                 	db	32
  3294  00FF4E  33                 	db	51	;'3'
  3295  00FF4F  30                 	db	48	;'0'
  3296  00FF50  20                 	db	32
  3297  00FF51  73                 	db	115	;'s'
  3298  00FF52  65                 	db	101	;'e'
  3299  00FF53  63                 	db	99	;'c'
  3300  00FF54  6F                 	db	111	;'o'
  3301  00FF55  6E                 	db	110	;'n'
  3302  00FF56  64                 	db	100	;'d'
  3303  00FF57  73                 	db	115	;'s'
  3304  00FF58  20                 	db	32
  3305  00FF59  20                 	db	32
  3306  00FF5A  20                 	db	32
  3307  00FF5B  20                 	db	32
  3308  00FF5C  00                 	db	0
  3309  00FF5D                     STR_47:
  3310                           
  3311                           ; BSR set to: 57
  3312  00FF5D  48                 	db	72	;'H'
  3313  00FF5E  45                 	db	69	;'E'
  3314  00FF5F  4C                 	db	76	;'L'
  3315  00FF60  50                 	db	80	;'P'
  3316  00FF61  20                 	db	32
  3317  00FF62  25                 	db	37
  3318  00FF63  73                 	db	115	;'s'
  3319  00FF64  20                 	db	32
  3320  00FF65  20                 	db	32
  3321  00FF66  20                 	db	32
  3322  00FF67  20                 	db	32
  3323  00FF68  20                 	db	32
  3324  00FF69  20                 	db	32
  3325  00FF6A  20                 	db	32
  3326  00FF6B  20                 	db	32
  3327  00FF6C  20                 	db	32
  3328  00FF6D  20                 	db	32
  3329  00FF6E  20                 	db	32
  3330  00FF6F  00                 	db	0
  3331  00FF70                     
  3332                           ; BSR set to: 57
  3333  00FF70  44                 	db	68	;'D'
  3334  00FF71  49                 	db	73	;'I'
  3335  00FF72  53                 	db	83	;'S'
  3336  00FF73  50                 	db	80	;'P'
  3337  00FF74  4C                 	db	76	;'L'
  3338  00FF75  41                 	db	65	;'A'
  3339  00FF76  59                 	db	89	;'Y'
  3340  00FF77  20                 	db	32
  3341  00FF78  25                 	db	37
  3342  00FF79  73                 	db	115	;'s'
  3343  00FF7A  20                 	db	32
  3344  00FF7B  20                 	db	32
  3345  00FF7C  20                 	db	32
  3346  00FF7D  20                 	db	32
  3347  00FF7E  20                 	db	32
  3348  00FF7F  20                 	db	32
  3349  00FF80  20                 	db	32
  3350  00FF81  20                 	db	32
  3351  00FF82  00                 	db	0
  3352  00FF83                     
  3353                           ; BSR set to: 57
  3354  00FF83  25                 	db	37
  3355  00FF84  64                 	db	100	;'d'
  3356  00FF85  20                 	db	32
  3357  00FF86  25                 	db	37
  3358  00FF87  32                 	db	50	;'2'
  3359  00FF88  2E                 	db	46
  3360  00FF89  34                 	db	52	;'4'
  3361  00FF8A  66                 	db	102	;'f'
  3362  00FF8B  2C                 	db	44
  3363  00FF8C  20                 	db	32
  3364  00FF8D  25                 	db	37
  3365  00FF8E  64                 	db	100	;'d'
  3366  00FF8F  20                 	db	32
  3367  00FF90  20                 	db	32
  3368  00FF91  20                 	db	32
  3369  00FF92  23                 	db	35
  3370  00FF93  00                 	db	0
  3371  00FF94                     STR_19:
  3372                           
  3373                           ; BSR set to: 57
  3374  00FF94  25                 	db	37
  3375  00FF95  64                 	db	100	;'d'
  3376  00FF96  20                 	db	32
  3377  00FF97  25                 	db	37
  3378  00FF98  32                 	db	50	;'2'
  3379  00FF99  2E                 	db	46
  3380  00FF9A  34                 	db	52	;'4'
  3381  00FF9B  66                 	db	102	;'f'
  3382  00FF9C  20                 	db	32
  3383  00FF9D  20                 	db	32
  3384  00FF9E  20                 	db	32
  3385  00FF9F  25                 	db	37
  3386  00FFA0  64                 	db	100	;'d'
  3387  00FFA1  20                 	db	32
  3388  00FFA2  20                 	db	32
  3389  00FFA3  00                 	db	0
  3390  00FFA4                     STR_51:
  3391                           
  3392                           ; BSR set to: 57
  3393  00FFA4  76                 	db	118	;'v'
  3394  00FFA5  74                 	db	116	;'t'
  3395  00FFA6  65                 	db	101	;'e'
  3396  00FFA7  72                 	db	114	;'r'
  3397  00FFA8  6D                 	db	109	;'m'
  3398  00FFA9  20                 	db	32
  3399  00FFAA  25                 	db	37
  3400  00FFAB  78                 	db	120	;'x'
  3401  00FFAC  3A                 	db	58	;':'
  3402  00FFAD  25                 	db	37
  3403  00FFAE  78                 	db	120	;'x'
  3404  00FFAF  20                 	db	32
  3405  00FFB0  20                 	db	32
  3406  00FFB1  20                 	db	32
  3407  00FFB2  00                 	db	0
  3408  00FFB3                     STR_45:
  3409                           
  3410                           ; BSR set to: 57
  3411  00FFB3  4A                 	db	74	;'J'
  3412  00FFB4  61                 	db	97	;'a'
  3413  00FFB5  6E                 	db	110	;'n'
  3414  00FFB6  20                 	db	32
  3415  00FFB7  31                 	db	49	;'1'
  3416  00FFB8  37                 	db	55	;'7'
  3417  00FFB9  20                 	db	32
  3418  00FFBA  32                 	db	50	;'2'
  3419  00FFBB  30                 	db	48	;'0'
  3420  00FFBC  32                 	db	50	;'2'
  3421  00FFBD  30                 	db	48	;'0'
  3422  00FFBE  00                 	db	0
  3423  00FFBF                     STR_49:
  3424                           
  3425                           ; BSR set to: 57
  3426  00FFBF  25                 	db	37
  3427  00FFC0  73                 	db	115	;'s'
  3428  00FFC1  20                 	db	32
  3429  00FFC2  20                 	db	32
  3430  00FFC3  20                 	db	32
  3431  00FFC4  20                 	db	32
  3432  00FFC5  20                 	db	32
  3433  00FFC6  20                 	db	32
  3434  00FFC7  20                 	db	32
  3435  00FFC8  00                 	db	0
  3436  00FFC9                     STR_46:
  3437                           
  3438                           ; BSR set to: 57
  3439  00FFC9  30                 	db	48	;'0'
  3440  00FFCA  37                 	db	55	;'7'
  3441  00FFCB  3A                 	db	58	;':'
  3442  00FFCC  35                 	db	53	;'5'
  3443  00FFCD  38                 	db	56	;'8'
  3444  00FFCE  3A                 	db	58	;':'
  3445  00FFCF  33                 	db	51	;'3'
  3446  00FFD0  30                 	db	48	;'0'
  3447  00FFD1  00                 	db	0
  3448  00FFD2                     STR_3:
  3449                           
  3450                           ; BSR set to: 57
  3451  00FFD2  31                 	db	49	;'1'
  3452  00FFD3  2E                 	db	46
  3453  00FFD4  31                 	db	49	;'1'
  3454  00FFD5  31                 	db	49	;'1'
  3455  00FFD6  00                 	db	0
  3456  00FFD7                     STR_65:
  3457                           
  3458                           ; BSR set to: 57
  3459  00FFD7  49                 	db	73	;'I'
  3460  00FFD8  4E                 	db	78	;'N'
  3461  00FFD9  46                 	db	70	;'F'
  3462  00FFDA  00                 	db	0
  3463  00FFDB                     STR_69:
  3464                           
  3465                           ; BSR set to: 57
  3466  00FFDB  4E                 	db	78	;'N'
  3467  00FFDC  41                 	db	65	;'A'
  3468  00FFDD  4E                 	db	78	;'N'
  3469  00FFDE  00                 	db	0
  3470  00FFDF                     STR_66:
  3471                           
  3472                           ; BSR set to: 57
  3473  00FFDF  69                 	db	105	;'i'
  3474  00FFE0  6E                 	db	110	;'n'
  3475  00FFE1  66                 	db	102	;'f'
  3476  00FFE2  00                 	db	0
  3477  00FFE3                     STR_70:
  3478                           
  3479                           ; BSR set to: 57
  3480  00FFE3  6E                 	db	110	;'n'
  3481  00FFE4  61                 	db	97	;'a'
  3482  00FFE5  6E                 	db	110	;'n'
  3483  00FFE6  00                 	db	0
  3484  00FFE7                     STR_96:
  3485                           
  3486                           ; BSR set to: 57
  3487  00FFE7  6C                 	db	108	;'l'
  3488  00FFE8  58                 	db	88	;'X'
  3489  00FFE9  00                 	db	0
  3490  00FFEA                     STR_73:
  3491                           
  3492                           ; BSR set to: 57
  3493  00FFEA  6C                 	db	108	;'l'
  3494  00FFEB  64                 	db	100	;'d'
  3495  00FFEC  00                 	db	0
  3496  00FFED                     STR_82:
  3497                           
  3498                           ; BSR set to: 57
  3499  00FFED  6C                 	db	108	;'l'
  3500  00FFEE  66                 	db	102	;'f'
  3501  00FFEF  00                 	db	0
  3502  00FFF0                     STR_77:
  3503                           
  3504                           ; BSR set to: 57
  3505  00FFF0  6C                 	db	108	;'l'
  3506  00FFF1  69                 	db	105	;'i'
  3507  00FFF2  00                 	db	0
  3508  00FFF3                     STR_87:
  3509                           
  3510                           ; BSR set to: 57
  3511  00FFF3  6C                 	db	108	;'l'
  3512  00FFF4  75                 	db	117	;'u'
  3513  00FFF5  00                 	db	0
  3514  00FFF6                     STR_92:
  3515                           
  3516                           ; BSR set to: 57
  3517  00FFF6  6C                 	db	108	;'l'
  3518  00FFF7  78                 	db	120	;'x'
  3519  00FFF8  00                 	db	0
  3520  00FFF9                     STR_44:
  3521                           
  3522                           ; BSR set to: 57
  3523  00FFF9  25                 	db	37
  3524  00FFFA  63                 	db	99	;'c'
  3525  00FFFB  00                 	db	0
  3526  00FFFC                     STR_43:
  3527                           
  3528                           ; BSR set to: 57
  3529  00FFFC  25                 	db	37
  3530  00FFFD  73                 	db	115	;'s'
  3531  00FFFE  00                 	db	0
  3532  0000                     
  3533                           ; #config settings
  3534  00FFFF  00                 	db	0	; dummy byte at the end
  3535  0000                     
  3536                           	psect	cinit
  3537  01A1B6                     __pcinit:
  3538                           	opt callstack 0
  3539  01A1B6                     start_initialization:
  3540                           	opt callstack 0
  3541  01A1B6                     __initialization:
  3542                           	opt callstack 0
  3543                           
  3544                           ; Initialize objects allocated to BIGRAM (811 bytes)
  3545                           ; load TBLPTR registers with __pidataBIGRAM
  3546  01A1B6  0E2C               	movlw	low __pidataBIGRAM
  3547  01A1B8  6EF6               	movwf	tblptrl,c
  3548  01A1BA  0E6B               	movlw	high __pidataBIGRAM
  3549  01A1BC  6EF7               	movwf	tblptrh,c
  3550  01A1BE  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3551  01A1C0  6EF8               	movwf	tblptru,c
  3552  01A1C2  EE01  F0FF         	lfsr	0,__pdataBIGRAM
  3553  01A1C6  EE20 F32B          	lfsr	2,811
  3554  01A1CA                     copy_data0:
  3555  01A1CA  0009               	tblrd		*+
  3556  01A1CC  006F FFD7 FFEE     	movff	tablat,postinc0
  3557  01A1D2  50DD               	movf	postdec2,w,c
  3558  01A1D4  50D9               	movf	fsr2l,w,c
  3559  01A1D6  E1F9               	bnz	copy_data0
  3560  01A1D8  50DA               	movf	fsr2h,w,c
  3561  01A1DA  E1F7               	bnz	copy_data0
  3562                           
  3563                           ; Initialize objects allocated to BANK1 (205 bytes)
  3564                           ; load TBLPTR registers with __pidataBANK1
  3565  01A1DC  0E3C               	movlw	low __pidataBANK1
  3566  01A1DE  6EF6               	movwf	tblptrl,c
  3567  01A1E0  0EA4               	movlw	high __pidataBANK1
  3568  01A1E2  6EF7               	movwf	tblptrh,c
  3569  01A1E4  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3570  01A1E6  6EF8               	movwf	tblptru,c
  3571  01A1E8  EE00  F100         	lfsr	0,__pdataBANK1
  3572  01A1EC  EE20 F0CD          	lfsr	2,205
  3573  01A1F0                     copy_data1:
  3574  01A1F0  0009               	tblrd		*+
  3575  01A1F2  006F FFD7 FFEE     	movff	tablat,postinc0
  3576  01A1F8  50DD               	movf	postdec2,w,c
  3577  01A1FA  50D9               	movf	fsr2l,w,c
  3578  01A1FC  E1F9               	bnz	copy_data1
  3579                           
  3580                           ; Initialize objects allocated to BANK0 (54 bytes)
  3581                           ; load TBLPTR registers with __pidataBANK0
  3582  01A1FE  0E60               	movlw	low __pidataBANK0
  3583  01A200  6EF6               	movwf	tblptrl,c
  3584  01A202  0EBB               	movlw	high __pidataBANK0
  3585  01A204  6EF7               	movwf	tblptrh,c
  3586  01A206  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3587  01A208  6EF8               	movwf	tblptru,c
  3588  01A20A  EE00  F0AF         	lfsr	0,__pdataBANK0
  3589  01A20E  EE20 F036          	lfsr	2,54
  3590  01A212                     copy_data2:
  3591  01A212  0009               	tblrd		*+
  3592  01A214  006F FFD7 FFEE     	movff	tablat,postinc0
  3593  01A21A  50DD               	movf	postdec2,w,c
  3594  01A21C  50D9               	movf	fsr2l,w,c
  3595  01A21E  E1F9               	bnz	copy_data2
  3596                           
  3597                           ; Clear objects allocated to BIGRAM (482 bytes)
  3598  01A220  EE02  F02A         	lfsr	0,__pbssBIGRAM
  3599  01A224  EE20 F1E2          	lfsr	2,482
  3600  01A228                     clear_0:
  3601  01A228  6AEE               	clrf	postinc0,c
  3602  01A22A  50DD               	movf	postdec2,w,c
  3603  01A22C  50D9               	movf	fsr2l,w,c
  3604  01A22E  E1FC               	bnz	clear_0
  3605  01A230  50DA               	movf	fsr2h,w,c
  3606  01A232  E1FA               	bnz	clear_0
  3607                           
  3608                           ; Clear objects allocated to BANK4 (255 bytes)
  3609  01A234  EE01  F000         	lfsr	0,__pbssBANK4
  3610  01A238  EE20 F0FF          	lfsr	2,255
  3611  01A23C                     clear_1:
  3612  01A23C  6AEE               	clrf	postinc0,c
  3613  01A23E  50DD               	movf	postdec2,w,c
  3614  01A240  50D9               	movf	fsr2l,w,c
  3615  01A242  E1FC               	bnz	clear_1
  3616  01A244  50DA               	movf	fsr2h,w,c
  3617  01A246  E1FA               	bnz	clear_1
  3618                           
  3619                           ; Clear objects allocated to BANK3 (198 bytes)
  3620  01A248  EE00  F300         	lfsr	0,__pbssBANK3
  3621  01A24C  0EC6               	movlw	198
  3622  01A24E                     clear_2:
  3623  01A24E  6AEE               	clrf	postinc0,c
  3624  01A250  06E8               	decf	wreg,f,c
  3625  01A252  E1FD               	bnz	clear_2
  3626                           
  3627                           ; Clear objects allocated to BANK2 (231 bytes)
  3628  01A254  EE00  F200         	lfsr	0,__pbssBANK2
  3629  01A258  0EE7               	movlw	231
  3630  01A25A                     clear_3:
  3631  01A25A  6AEE               	clrf	postinc0,c
  3632  01A25C  06E8               	decf	wreg,f,c
  3633  01A25E  E1FD               	bnz	clear_3
  3634                           
  3635                           ; Clear objects allocated to BANK1 (46 bytes)
  3636  01A260  EE00  F1CD         	lfsr	0,__pbssBANK1
  3637  01A264  0E2E               	movlw	46
  3638  01A266                     clear_4:
  3639  01A266  6AEE               	clrf	postinc0,c
  3640  01A268  06E8               	decf	wreg,f,c
  3641  01A26A  E1FD               	bnz	clear_4
  3642                           
  3643                           ; Clear objects allocated to BANK0 (79 bytes)
  3644  01A26C  EE00  F060         	lfsr	0,__pbssBANK0
  3645  01A270  0E4F               	movlw	79
  3646  01A272                     clear_5:
  3647  01A272  6AEE               	clrf	postinc0,c
  3648  01A274  06E8               	decf	wreg,f,c
  3649  01A276  E1FD               	bnz	clear_5
  3650                           
  3651                           ; Clear objects allocated to COMRAM (14 bytes)
  3652  01A278  EE00  F03A         	lfsr	0,__pbssCOMRAM
  3653  01A27C  0E0E               	movlw	14
  3654  01A27E                     clear_6:
  3655  01A27E  6AEE               	clrf	postinc0,c
  3656  01A280  06E8               	decf	wreg,f,c
  3657  01A282  E1FD               	bnz	clear_6
  3658                           
  3659                           ;
  3660                           ; Setup IVTBASE
  3661                           ;
  3662  01A284  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  3663  01A286  6ED5               	movwf	213,c
  3664  01A288  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  3665  01A28A  6ED6               	movwf	214,c
  3666  01A28C  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  3667  01A28E  6ED7               	movwf	215,c
  3668  01A290                     end_of_initialization:
  3669                           	opt callstack 0
  3670  01A290                     __end_of__initialization:
  3671                           	opt callstack 0
  3672  01A290  0100               	movlb	0
  3673  01A292  EF22  F089         	goto	_main	;jump to C main() function
  3674                           
  3675                           	psect	bssCOMRAM
  3676  00003A                     __pbssCOMRAM:
  3677                           	opt callstack 0
  3678  00003A                     _width:
  3679                           	opt callstack 0
  3680  00003A                     	ds	2
  3681  00003C                     _prec:
  3682                           	opt callstack 0
  3683  00003C                     	ds	2
  3684  00003E                     _flags:
  3685                           	opt callstack 0
  3686  00003E                     	ds	2
  3687  000040                     calc_bsoc@log_update_wait:
  3688                           	opt callstack 0
  3689  000040                     	ds	1
  3690  000041                     check_day_time@day_delay:
  3691                           	opt callstack 0
  3692  000041                     	ds	1
  3693  000042                     dac_spi_control@S0:
  3694                           	opt callstack 0
  3695  000042                     	ds	1
  3696  000043                     dac_spi_control@init:
  3697                           	opt callstack 0
  3698  000043                     	ds	1
  3699  000044                     _uart2RxHead:
  3700                           	opt callstack 0
  3701  000044                     	ds	1
  3702  000045                     _uart2TxBufferRemaining:
  3703                           	opt callstack 0
  3704  000045                     	ds	1
  3705  000046                     _uart2TxTail:
  3706                           	opt callstack 0
  3707  000046                     	ds	1
  3708  000047                     _uart1RxHead:
  3709                           	opt callstack 0
  3710  000047                     	ds	1
  3711                           
  3712                           	psect	bssBANK0
  3713  000060                     __pbssBANK0:
  3714                           	opt callstack 0
  3715  000060                     fabsf@F463:
  3716                           	opt callstack 0
  3717  000060                     	ds	4
  3718  000064                     ___fpclassifyf@F463:
  3719                           	opt callstack 0
  3720  000064                     	ds	4
  3721  000068                     calc_ror_data@bcror:
  3722                           	opt callstack 0
  3723  000068                     	ds	4
  3724  00006C                     calc_ror_data@bvror:
  3725                           	opt callstack 0
  3726  00006C                     	ds	4
  3727  000070                     calc_model_data@bcror:
  3728                           	opt callstack 0
  3729  000070                     	ds	4
  3730  000074                     calc_model_data@bvror:
  3731                           	opt callstack 0
  3732  000074                     	ds	4
  3733  000078                     wdtdelay@dcount:
  3734                           	opt callstack 0
  3735  000078                     	ds	4
  3736  00007C                     _TMR3_InterruptHandler:
  3737                           	opt callstack 0
  3738  00007C                     	ds	3
  3739  00007F                     _TMR5_InterruptHandler:
  3740                           	opt callstack 0
  3741  00007F                     	ds	3
  3742  000082                     _TMR6_InterruptHandler:
  3743                           	opt callstack 0
  3744  000082                     	ds	3
  3745  000085                     _ADCC_ADTI_InterruptHandler:
  3746                           	opt callstack 0
  3747  000085                     	ds	3
  3748  000088                     _ADCC_ADI_InterruptHandler:
  3749                           	opt callstack 0
  3750  000088                     	ds	3
  3751  00008B                     _UART1_RxInterruptHandler:
  3752                           	opt callstack 0
  3753  00008B                     	ds	3
  3754  00008E                     _UART2_TxInterruptHandler:
  3755                           	opt callstack 0
  3756  00008E                     	ds	3
  3757  000091                     _UART2_RxInterruptHandler:
  3758                           	opt callstack 0
  3759  000091                     	ds	3
  3760  000094                     _INT1_InterruptHandler:
  3761                           	opt callstack 0
  3762  000094                     	ds	3
  3763  000097                     _INT0_InterruptHandler:
  3764                           	opt callstack 0
  3765  000097                     	ds	3
  3766  00009A                     _nout:
  3767                           	opt callstack 0
  3768  00009A                     	ds	2
  3769  00009C                     TMR3_ISR@CountCallBack:
  3770                           	opt callstack 0
  3771  00009C                     	ds	2
  3772  00009E                     _timer3ReloadVal:
  3773                           	opt callstack 0
  3774  00009E                     	ds	2
  3775  0000A0                     TMR5_ISR@CountCallBack:
  3776                           	opt callstack 0
  3777  0000A0                     	ds	2
  3778  0000A2                     _timer5ReloadVal:
  3779                           	opt callstack 0
  3780  0000A2                     	ds	2
  3781  0000A4                     esr_check@esr_state:
  3782                           	opt callstack 0
  3783  0000A4                     	ds	1
  3784  0000A5                     dac_spi_control@SB:
  3785                           	opt callstack 0
  3786  0000A5                     	ds	1
  3787  0000A6                     dac_spi_control@SC:
  3788                           	opt callstack 0
  3789  0000A6                     	ds	1
  3790  0000A7                     dac_spi_control@S2:
  3791                           	opt callstack 0
  3792  0000A7                     	ds	1
  3793  0000A8                     dac_spi_control@S1:
  3794                           	opt callstack 0
  3795  0000A8                     	ds	1
  3796  0000A9                     _mode_sw:
  3797                           	opt callstack 0
  3798  0000A9                     	ds	1
  3799  0000AA                     _uart2RxCount:
  3800                           	opt callstack 0
  3801  0000AA                     	ds	1
  3802  0000AB                     _uart2RxTail:
  3803                           	opt callstack 0
  3804  0000AB                     	ds	1
  3805  0000AC                     _uart2TxHead:
  3806                           	opt callstack 0
  3807  0000AC                     	ds	1
  3808  0000AD                     _uart1RxCount:
  3809                           	opt callstack 0
  3810  0000AD                     	ds	1
  3811  0000AE                     _uart1RxTail:
  3812                           	opt callstack 0
  3813  0000AE                     	ds	1
  3814                           
  3815                           	psect	dataBANK0
  3816  0000AF                     __pdataBANK0:
  3817                           	opt callstack 0
  3818  0000AF                     _R:
  3819                           	opt callstack 0
  3820  0000AF                     	ds	54
  3821                           
  3822                           	psect	bssBANK1
  3823  0001CD                     __pbssBANK1:
  3824                           	opt callstack 0
  3825  0001CD                     _spi_link:
  3826                           	opt callstack 0
  3827  0001CD                     	ds	12
  3828  0001D9                     _uart1RxBuffer:
  3829                           	opt callstack 0
  3830  0001D9                     	ds	8
  3831  0001E1                     spinners@s:
  3832                           	opt callstack 0
  3833  0001E1                     	ds	6
  3834  0001E7                     floorf@F524:
  3835                           	opt callstack 0
  3836  0001E7                     	ds	4
  3837  0001EB                     _utctime:
  3838                           	opt callstack 0
  3839  0001EB                     	ds	4
  3840  0001EF                     _P:
  3841                           	opt callstack 0
  3842  0001EF                     	ds	4
  3843  0001F3                     _seed:
  3844                           	opt callstack 0
  3845  0001F3                     	ds	8
  3846                           
  3847                           	psect	dataBANK1
  3848  000100                     __pdataBANK1:
  3849                           	opt callstack 0
  3850  000100                     stoa@F1166:
  3851                           	opt callstack 0
  3852  000100                     	ds	7
  3853  000107                     _V:
  3854                           	opt callstack 0
  3855  000107                     	ds	191
  3856  0001C6                     _H:
  3857                           	opt callstack 0
  3858  0001C6                     	ds	7
  3859                           
  3860                           	psect	bssBANK2
  3861  000200                     __pbssBANK2:
  3862                           	opt callstack 0
  3863  000200                     lp_filter@smooth:
  3864                           	opt callstack 0
  3865  000200                     	ds	84
  3866  000254                     _S:
  3867                           	opt callstack 0
  3868  000254                     	ds	41
  3869  00027D                     _tickCount:
  3870                           	opt callstack 0
  3871  00027D                     	ds	26
  3872  000297                     _dbuf:
  3873                           	opt callstack 0
  3874  000297                     	ds	80
  3875                           
  3876                           	psect	bssBANK3
  3877  000300                     __pbssBANK3:
  3878                           	opt callstack 0
  3879  000300                     _uart2TxBuffer:
  3880                           	opt callstack 0
  3881  000300                     	ds	64
  3882  000340                     _ring_buf2:
  3883                           	opt callstack 0
  3884  000340                     	ds	67
  3885  000383                     _ring_buf1:
  3886                           	opt callstack 0
  3887  000383                     	ds	67
  3888                           
  3889                           	psect	bssBANK4
  3890  000400                     __pbssBANK4:
  3891                           	opt callstack 0
  3892  000400                     _uart2RxBuffer:
  3893                           	opt callstack 0
  3894  000400                     	ds	255
  3895                           
  3896                           	psect	bssBIGRAM
  3897  00082A                     __pbssBIGRAM:
  3898                           	opt callstack 0
  3899  00082A                     _D:
  3900                           	opt callstack 0
  3901  00082A                     	ds	482
  3902                           
  3903                           	psect	dataBIGRAM
  3904  0004FF                     __pdataBIGRAM:
  3905                           	opt callstack 0
  3906  0004FF                     _port_data:
  3907                           	opt callstack 0
  3908  0004FF                     	ds	512
  3909  0006FF                     _C:
  3910                           	opt callstack 0
  3911  0006FF                     	ds	299
  3912                           
  3913                           	psect	cstackBANK0
  3914  0000E5                     __pcstackBANK0:
  3915                           	opt callstack 0
  3916  0000E5                     ??_TMR3_ISR:
  3917                           
  3918                           ; 1 bytes @ 0x0
  3919  0000E5                     	ds	25
  3920                           
  3921                           	psect	cstackCOMRAM
  3922  000021                     __pcstackCOMRAM:
  3923                           	opt callstack 0
  3924  000021                     ??_ADCC_ThresholdISR:
  3925  000021                     
  3926                           ; 1 bytes @ 0x0
  3927  000021                     	ds	5
  3928  000026                     ??_TMR6_ISR:
  3929                           
  3930                           ; 1 bytes @ 0x5
  3931  000026                     	ds	1
  3932  000027                     ??_INT1_ISR:
  3933  000027                     
  3934                           ; 1 bytes @ 0x6
  3935  000027                     	ds	4
  3936  00002B                     ??_TMR5_ISR:
  3937                           
  3938                           ; 1 bytes @ 0xA
  3939  00002B                     	ds	15
  3940                           
  3941 ;;
  3942 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  3943 ;;
  3944 ;; *************** function _main *****************
  3945 ;; Defined at:
  3946 ;;		line 187 in file "main.c"
  3947 ;; Parameters:    Size  Location     Type
  3948 ;;		None
  3949 ;; Auto vars:     Size  Location     Type
  3950 ;;  esr_temp        4  [STACK] float 
  3951 ;;  i_esr           2  [STACK] unsigned short 
  3952 ;;  shape           1  [STACK] unsigned char 
  3953 ;;  inp_index       1  [STACK] unsigned char 
  3954 ;;  k               1  [STACK] unsigned char 
  3955 ;;  j               1  [STACK] unsigned char 
  3956 ;;  i               1  [STACK] unsigned char 
  3957 ;;  mode            1  [STACK] enum E17013
  3958 ;;  i_ror           1  [STACK] unsigned char 
  3959 ;; Return value:  Size  Location     Type
  3960 ;;                  1  [STACK] void 
  3961 ;; Registers used:
  3962 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3963 ;; Tracked objects:
  3964 ;;		On entry : 0/0
  3965 ;;		On exit  : 0/0
  3966 ;;		Unchanged: 0/0
  3967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3972 ;;Total ram usage:        0 bytes
  3973 ;; Hardware stack levels required when called:   29
  3974 ;; This function calls:
  3975 ;;		_SYSTEM_Initialize
  3976 ;;		_StartTimer
  3977 ;;		_TimerDone
  3978 ;;		_WaitMs
  3979 ;;		___fladd
  3980 ;;		___flge
  3981 ;;		___fltol
  3982 ;;		_calc_model_data
  3983 ;;		_calc_ror_data
  3984 ;;		_check_adc_scan
  3985 ;;		_check_enter_button
  3986 ;;		_check_help
  3987 ;;		_clear_adc_scan
  3988 ;;		_clear_hid_pflags
  3989 ;;		_conv_raw_result
  3990 ;;		_convert_adc_data
  3991 ;;		_eaDogM_WriteCommand
  3992 ;;		_esr_check
  3993 ;;		_fabsf
  3994 ;;		_get_raw_result
  3995 ;;		_get_switch
  3996 ;;		_get_vterm_ptr
  3997 ;;		_hid_display
  3998 ;;		_init_bsoc
  3999 ;;		_init_display
  4000 ;;		_init_port_dma
  4001 ;;		_lp_filter
  4002 ;;		_mode_lamp_dim
  4003 ;;		_set_dac
  4004 ;;		_set_display_info
  4005 ;;		_set_load_relay_one
  4006 ;;		_set_load_relay_two
  4007 ;;		_set_vterm
  4008 ;;		_spinners
  4009 ;;		_sprintf
  4010 ;;		_srand
  4011 ;;		_start_adc_scan
  4012 ;;		_start_switch_handler
  4013 ;;		_static_soc
  4014 ;;		_update_lcd
  4015 ;;		_wait_lcd_done
  4016 ;; This function is called by:
  4017 ;;		Startup code after reset
  4018 ;; This function uses a reentrant model
  4019 ;;
  4020                           
  4021                           	psect	text0
  4022  011244                     __ptext0:
  4023                           	opt callstack 0
  4024  011244                     _main:
  4025                           	opt callstack 0
  4026                           
  4027                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4028  011244  0E11               	movlw	17
  4029  011246  26E1               	addwf	fsr1l,f,c
  4030  011248  0E00               	movlw	0
  4031  01124A  22E2               	addwfc	fsr1h,f,c
  4032                           
  4033                           ;main.c: 189:  UI_STATES mode;;main.c: 190:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  4034                           ;stkvar	_inp_index @ sp[(-17)+11]
  4035                           
  4036                           ;incstack = 0
  4037  01124C  0EFA               	movlw	-6
  4038  01124E  6AE3               	clrf	plusw1,c
  4039                           
  4040                           ;stkvar	_i @ sp[(-17)+14]
  4041  011250  0EFD               	movlw	-3
  4042  011252  6AE3               	clrf	plusw1,c
  4043                           
  4044                           ;stkvar	_j @ sp[(-17)+13]
  4045  011254  0EFC               	movlw	-4
  4046  011256  6AE3               	clrf	plusw1,c
  4047  011258  2AE3               	incf	plusw1,f,c
  4048                           
  4049                           ;stkvar	_k @ sp[(-17)+12]
  4050  01125A  0EFB               	movlw	-5
  4051  01125C  6AE3               	clrf	plusw1,c
  4052  01125E  82E3               	bsf	plusw1,1,c
  4053                           
  4054                           ;main.c: 193:  SYSTEM_Initialize();
  4055  011260  EC3B  F0DB         	call	_SYSTEM_Initialize	;wreg free
  4056                           
  4057                           ; BSR set to: 60
  4058                           ;main.c: 196:  (INTCON0bits.GIEH = 1);
  4059  011264  8ED2               	bsf	210,7,c	;volatile
  4060                           
  4061                           ; BSR set to: 60
  4062                           ;main.c: 199:  (INTCON0bits.GIEL = 1);
  4063  011266  8CD2               	bsf	210,6,c	;volatile
  4064                           
  4065                           ; BSR set to: 60
  4066                           ;main.c: 201:  V.ui_state = UI_STATE_INIT;
  4067  011268  0101               	movlb	1	; () banked
  4068  01126A  6B07               	clrf	_V& (0+255),b	;volatile
  4069                           
  4070                           ; BSR set to: 1
  4071                           ;main.c: 206:  WaitMs(300);
  4072  01126C  0E2C               	movlw	44
  4073  01126E  6EE6               	movwf	postinc1,c
  4074  011270  0E01               	movlw	1
  4075  011272  6EE6               	movwf	postinc1,c
  4076  011274  ECCB  F0DD         	call	_WaitMs	;wreg free
  4077                           
  4078                           ;main.c: 207:  if (PORTBbits.RB0) {
  4079  011278  A0CB               	btfss	203,0,c	;volatile
  4080  01127A  D004               	goto	l13294
  4081                           
  4082                           ;main.c: 208:   mode = UI_STATE_HOST;
  4083                           ;stkvar	_mode @ sp[(-17)+15]
  4084  01127C  0EFE               	movlw	-2
  4085  01127E  6AE3               	clrf	plusw1,c
  4086  011280  2AE3               	incf	plusw1,f,c
  4087                           
  4088                           ;main.c: 209:  } else {
  4089  011282  D004               	goto	l13296
  4090  011284                     l13294:
  4091                           
  4092                           ;main.c: 210:   mode = UI_STATE_LOG;
  4093                           ;stkvar	_mode @ sp[(-17)+15]
  4094  011284  0EFE               	movlw	-2
  4095  011286  6AE3               	clrf	plusw1,c
  4096  011288  80E3               	bsf	plusw1,0,c
  4097  01128A  82E3               	bsf	plusw1,1,c	;indir
  4098  01128C                     l13296:
  4099                           
  4100                           ;main.c: 213:  if (mode == UI_STATE_HOST) {
  4101                           ;stkvar	_mode @ sp[(-17)+15]
  4102  01128C  0EFE               	movlw	-2
  4103  01128E  04E3               	decf	plusw1,w,c
  4104  011290  A4D8               	btfss	status,2,c
  4105  011292  D007               	goto	l1338
  4106                           
  4107                           ;main.c: 214:   do { LATDbits.LATD0 = 1; } while(0);
  4108  011294  80BD               	bsf	189,0,c	;volatile
  4109                           
  4110                           ;main.c: 215:   V.mode_pwm = 70;
  4111  011296  0E00               	movlw	0
  4112  011298  0101               	movlb	1	; () banked
  4113  01129A  6F9D               	movwf	(_V+150)& (0+255),b	;volatile
  4114  01129C  0E46               	movlw	70
  4115  01129E  6F9C               	movwf	(_V+149)& (0+255),b	;volatile
  4116                           
  4117                           ;main.c: 216:  } else {
  4118  0112A0  D004               	goto	l13300
  4119  0112A2                     l1338:
  4120  0112A2  90BD               	bcf	189,0,c	;volatile
  4121                           
  4122                           ;main.c: 218:   V.mode_pwm = 0;
  4123  0112A4  0101               	movlb	1	; () banked
  4124  0112A6  6B9C               	clrf	(_V+149)& (0+255),b	;volatile
  4125  0112A8  6B9D               	clrf	(_V+150)& (0+255),b	;volatile
  4126  0112AA                     l13300:
  4127                           
  4128                           ; BSR set to: 1
  4129                           ;main.c: 220:  mode_lamp_dim(V.mode_pwm);
  4130  0112AA  0060  F673  FFE6   	movff	_V+149,postinc1
  4131  0112B0  0060  F677  FFE6   	movff	_V+150,postinc1
  4132  0112B6  EC37  F0E1         	call	_mode_lamp_dim	;wreg free
  4133  0112BA  D325               	goto	l13420
  4134  0112BC                     l13302:
  4135                           
  4136                           ; BSR set to: 1
  4137                           ;main.c: 228:    init_port_dma();
  4138  0112BC  EC1A  F0DE         	call	_init_port_dma	;wreg free
  4139                           
  4140                           ; BSR set to: 59
  4141                           ;main.c: 230:    init_display();
  4142  0112C0  ECF4  F0CF         	call	_init_display	;wreg free
  4143                           
  4144                           ; BSR set to: 61
  4145                           ;main.c: 231:    eaDogM_WriteCommand(0b00001100);
  4146  0112C4  0E0C               	movlw	12
  4147  0112C6  6EE6               	movwf	postinc1,c
  4148  0112C8  ECAD  F0E1         	call	_eaDogM_WriteCommand	;wreg free
  4149                           
  4150                           ; BSR set to: 0
  4151                           ;main.c: 235:    set_load_relay_one(1);
  4152  0112CC  0E01               	movlw	1
  4153  0112CE  6EE6               	movwf	postinc1,c
  4154  0112D0  EC95  F0E1         	call	_set_load_relay_one	;wreg free
  4155                           
  4156                           ;main.c: 236:    set_load_relay_two(1);
  4157  0112D4  0E01               	movlw	1
  4158  0112D6  6EE6               	movwf	postinc1,c
  4159  0112D8  EC8D  F0E1         	call	_set_load_relay_two	;wreg free
  4160                           
  4161                           ;main.c: 238:    V.ui_state = mode;
  4162                           ;stkvar	_mode @ sp[(-17)+15]
  4163  0112DC  0EFE               	movlw	-2
  4164  0112DE  006F FF8C  F107    	movff	plusw1,_V	;volatile
  4165                           
  4166                           ;main.c: 239:    srand(1957);
  4167  0112E4  0EA5               	movlw	165
  4168  0112E6  6EE6               	movwf	postinc1,c
  4169  0112E8  0E07               	movlw	7
  4170  0112EA  6EE6               	movwf	postinc1,c
  4171  0112EC  ECE6  F0DD         	call	_srand	;wreg free
  4172                           
  4173                           ; BSR set to: 1
  4174                           ;main.c: 240:    set_vterm(0);
  4175  0112F0  0E00               	movlw	0
  4176  0112F2  6EE6               	movwf	postinc1,c
  4177  0112F4  ECE2  F0E0         	call	_set_vterm	;wreg free
  4178                           
  4179                           ;main.c: 241:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  4180  0112F8  0E1E               	movlw	low STR_1
  4181  0112FA  6EE6               	movwf	postinc1,c
  4182  0112FC  0EFF               	movlw	high STR_1
  4183  0112FE  6EE6               	movwf	postinc1,c
  4184  011300  0E00               	movlw	0
  4185  011302  6EE6               	movwf	postinc1,c
  4186  011304  0E00               	movlw	0
  4187  011306  6EE6               	movwf	postinc1,c
  4188  011308  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  4189  01130C  0060  F007  FFE6   	movff	btemp,postinc1
  4190  011312  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4191  011318  0E04               	movlw	4
  4192  01131A  6EE6               	movwf	postinc1,c
  4193  01131C  ECF4  F0CE         	call	_sprintf	;wreg free
  4194                           
  4195                           ; BSR set to: 0
  4196                           ;main.c: 242:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.11");
  4197  011320  0ED2               	movlw	low STR_3
  4198  011322  6EE6               	movwf	postinc1,c
  4199  011324  0EFF               	movlw	high STR_3
  4200  011326  6EE6               	movwf	postinc1,c
  4201  011328  0E09               	movlw	low STR_2
  4202  01132A  6EE6               	movwf	postinc1,c
  4203  01132C  0EFF               	movlw	high STR_2
  4204  01132E  6EE6               	movwf	postinc1,c
  4205  011330  0E00               	movlw	0
  4206  011332  6EE6               	movwf	postinc1,c
  4207  011334  0E01               	movlw	1
  4208  011336  6EE6               	movwf	postinc1,c
  4209  011338  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  4210  01133C  0060  F007  FFE6   	movff	btemp,postinc1
  4211  011342  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4212  011348  0E06               	movlw	6
  4213  01134A  6EE6               	movwf	postinc1,c
  4214  01134C  ECF4  F0CE         	call	_sprintf	;wreg free
  4215                           
  4216                           ; BSR set to: 0
  4217                           ;main.c: 243:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  4218  011350  0ECA               	movlw	low STR_4
  4219  011352  6EE6               	movwf	postinc1,c
  4220  011354  0EFE               	movlw	high STR_4
  4221  011356  6EE6               	movwf	postinc1,c
  4222  011358  0E00               	movlw	0
  4223  01135A  6EE6               	movwf	postinc1,c
  4224  01135C  0E02               	movlw	2
  4225  01135E  6EE6               	movwf	postinc1,c
  4226  011360  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  4227  011364  0060  F007  FFE6   	movff	btemp,postinc1
  4228  01136A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4229  011370  0E04               	movlw	4
  4230  011372  6EE6               	movwf	postinc1,c
  4231  011374  ECF4  F0CE         	call	_sprintf	;wreg free
  4232                           
  4233                           ; BSR set to: 0
  4234                           ;main.c: 244:    sprintf(get_vterm_ptr(0, 2), "                    ");
  4235  011378  0EA0               	movlw	low STR_5
  4236  01137A  6EE6               	movwf	postinc1,c
  4237  01137C  0EFE               	movlw	high STR_5
  4238  01137E  6EE6               	movwf	postinc1,c
  4239  011380  0E02               	movlw	2
  4240  011382  6EE6               	movwf	postinc1,c
  4241  011384  0E00               	movlw	0
  4242  011386  6EE6               	movwf	postinc1,c
  4243  011388  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  4244  01138C  0060  F007  FFE6   	movff	btemp,postinc1
  4245  011392  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4246  011398  0E04               	movlw	4
  4247  01139A  6EE6               	movwf	postinc1,c
  4248  01139C  ECF4  F0CE         	call	_sprintf	;wreg free
  4249                           
  4250                           ; BSR set to: 0
  4251                           ;main.c: 245:    sprintf(get_vterm_ptr(1, 2), "                    ");
  4252  0113A0  0EA0               	movlw	low STR_5
  4253  0113A2  6EE6               	movwf	postinc1,c
  4254  0113A4  0EFE               	movlw	high STR_5
  4255  0113A6  6EE6               	movwf	postinc1,c
  4256  0113A8  0E02               	movlw	2
  4257  0113AA  6EE6               	movwf	postinc1,c
  4258  0113AC  0E01               	movlw	1
  4259  0113AE  6EE6               	movwf	postinc1,c
  4260  0113B0  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  4261  0113B4  0060  F007  FFE6   	movff	btemp,postinc1
  4262  0113BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4263  0113C0  0E04               	movlw	4
  4264  0113C2  6EE6               	movwf	postinc1,c
  4265  0113C4  ECF4  F0CE         	call	_sprintf	;wreg free
  4266                           
  4267                           ; BSR set to: 0
  4268                           ;main.c: 246:    sprintf(get_vterm_ptr(2, 2), "                    ");
  4269  0113C8  0EA0               	movlw	low STR_5
  4270  0113CA  6EE6               	movwf	postinc1,c
  4271  0113CC  0EFE               	movlw	high STR_5
  4272  0113CE  6EE6               	movwf	postinc1,c
  4273  0113D0  0E02               	movlw	2
  4274  0113D2  6EE6               	movwf	postinc1,c
  4275  0113D4  0E02               	movlw	2
  4276  0113D6  6EE6               	movwf	postinc1,c
  4277  0113D8  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  4278  0113DC  0060  F007  FFE6   	movff	btemp,postinc1
  4279  0113E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4280  0113E8  0E04               	movlw	4
  4281  0113EA  6EE6               	movwf	postinc1,c
  4282  0113EC  ECF4  F0CE         	call	_sprintf	;wreg free
  4283                           
  4284                           ; BSR set to: 0
  4285                           ;main.c: 247:    update_lcd(0);
  4286  0113F0  0E00               	movlw	0
  4287  0113F2  6EE6               	movwf	postinc1,c
  4288  0113F4  EC6C  F0CE         	call	_update_lcd	;wreg free
  4289                           
  4290                           ;main.c: 248:    WaitMs(1000);
  4291  0113F8  0EE8               	movlw	232
  4292  0113FA  6EE6               	movwf	postinc1,c
  4293  0113FC  0E03               	movlw	3
  4294  0113FE  6EE6               	movwf	postinc1,c
  4295  011400  ECCB  F0DD         	call	_WaitMs	;wreg free
  4296                           
  4297                           ;main.c: 249:    StartTimer(TMR_DISPLAY, 250);
  4298  011404  0EFA               	movlw	250
  4299  011406  6EE6               	movwf	postinc1,c
  4300  011408  0E00               	movlw	0
  4301  01140A  6EE6               	movwf	postinc1,c
  4302  01140C  0E0A               	movlw	10
  4303  01140E  6EE6               	movwf	postinc1,c
  4304  011410  ECDC  F0DC         	call	_StartTimer	;wreg free
  4305                           
  4306                           ;main.c: 250:    StartTimer(TMR_ADC, 200);
  4307  011414  0EC8               	movlw	200
  4308  011416  6EE6               	movwf	postinc1,c
  4309  011418  0E00               	movlw	0
  4310  01141A  6EE6               	movwf	postinc1,c
  4311  01141C  0E01               	movlw	1
  4312  01141E  6EE6               	movwf	postinc1,c
  4313  011420  ECDC  F0DC         	call	_StartTimer	;wreg free
  4314                           
  4315                           ;main.c: 251:    StartTimer(TMR_INFO, 3000);
  4316  011424  0EB8               	movlw	184
  4317  011426  6EE6               	movwf	postinc1,c
  4318  011428  0E0B               	movlw	11
  4319  01142A  6EE6               	movwf	postinc1,c
  4320  01142C  0E07               	movlw	7
  4321  01142E  6EE6               	movwf	postinc1,c
  4322  011430  ECDC  F0DC         	call	_StartTimer	;wreg free
  4323                           
  4324                           ;main.c: 252:    StartTimer(TMR_FLIPPER, 1500);
  4325  011434  0EDC               	movlw	220
  4326  011436  6EE6               	movwf	postinc1,c
  4327  011438  0E05               	movlw	5
  4328  01143A  6EE6               	movwf	postinc1,c
  4329  01143C  0E0B               	movlw	11
  4330  01143E  6EE6               	movwf	postinc1,c
  4331  011440  ECDC  F0DC         	call	_StartTimer	;wreg free
  4332                           
  4333                           ;main.c: 253:    StartTimer(TMR_HELPDIS, 3000);
  4334  011444  0EB8               	movlw	184
  4335  011446  6EE6               	movwf	postinc1,c
  4336  011448  0E0B               	movlw	11
  4337  01144A  6EE6               	movwf	postinc1,c
  4338  01144C  0E09               	movlw	9
  4339  01144E  6EE6               	movwf	postinc1,c
  4340  011450  ECDC  F0DC         	call	_StartTimer	;wreg free
  4341                           
  4342                           ;main.c: 255:    start_adc_scan();
  4343  011454  EC52  F0D9         	call	_start_adc_scan	;wreg free
  4344                           
  4345                           ;main.c: 256:    start_switch_handler();
  4346  011458  ECA4  F0E0         	call	_start_switch_handler	;wreg free
  4347                           
  4348                           ; BSR set to: 57
  4349                           ;main.c: 257:    WaitMs(1000);
  4350  01145C  0EE8               	movlw	232
  4351  01145E  6EE6               	movwf	postinc1,c
  4352  011460  0E03               	movlw	3
  4353  011462  6EE6               	movwf	postinc1,c
  4354  011464  ECCB  F0DD         	call	_WaitMs	;wreg free
  4355                           
  4356                           ;main.c: 262:    i_ror = 1;
  4357                           ;stkvar	_i_ror @ sp[(-17)+16]
  4358  011468  0EFF               	movlw	-1
  4359  01146A  6AE3               	clrf	plusw1,c
  4360  01146C  2AE3               	incf	plusw1,f,c
  4361  01146E                     l13352:
  4362                           
  4363                           ;main.c: 264:     calc_ror_data();
  4364  01146E  ECAC  F0C6         	call	_calc_ror_data	;wreg free
  4365                           
  4366                           ;main.c: 265:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f            ", conv_raw_result(V
      +                          _BAT, CONV));
  4367  011472  0E00               	movlw	0
  4368  011474  6EE6               	movwf	postinc1,c
  4369  011476  0E04               	movlw	4
  4370  011478  6EE6               	movwf	postinc1,c
  4371  01147A  EC73  F0A9         	call	_conv_raw_result	;wreg free
  4372  01147E  0060  F007  FFE6   	movff	btemp,postinc1
  4373  011484  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4374  01148A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4375  011490  0060  F013  FFE6   	movff	btemp+3,postinc1
  4376  011496  0EB5               	movlw	low STR_8
  4377  011498  6EE6               	movwf	postinc1,c
  4378  01149A  0EFE               	movlw	high STR_8
  4379  01149C  6EE6               	movwf	postinc1,c
  4380  01149E  0E00               	movlw	0
  4381  0114A0  6EE6               	movwf	postinc1,c
  4382  0114A2  0E01               	movlw	1
  4383  0114A4  6EE6               	movwf	postinc1,c
  4384  0114A6  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  4385  0114AA  0060  F007  FFE6   	movff	btemp,postinc1
  4386  0114B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4387  0114B6  0E08               	movlw	8
  4388  0114B8  6EE6               	movwf	postinc1,c
  4389  0114BA  ECF4  F0CE         	call	_sprintf	;wreg free
  4390                           
  4391                           ; BSR set to: 0
  4392                           ;main.c: 266:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  4393  0114BE  EE21  F36B         	lfsr	2,_C+108	;volatile
  4394  0114C2  006F FF7B FFE6     	movff	postinc2,postinc1
  4395  0114C8  006F FF7B FFE6     	movff	postinc2,postinc1
  4396  0114CE  006F FF7B FFE6     	movff	postinc2,postinc1
  4397  0114D4  006F FF7B FFE6     	movff	postinc2,postinc1
  4398                           
  4399                           ;stkvar	_i_ror @ sp[(-21)+16]
  4400  0114DA  0EFB               	movlw	-5
  4401  0114DC  50E3               	movf	plusw1,w,c
  4402  0114DE  6EE6               	movwf	postinc1,c
  4403  0114E0  0E00               	movlw	0
  4404  0114E2  6EE6               	movwf	postinc1,c
  4405  0114E4  0E00               	movlw	0
  4406  0114E6  6EE6               	movwf	postinc1,c
  4407  0114E8  0E05               	movlw	5
  4408  0114EA  6EE6               	movwf	postinc1,c
  4409  0114EC  EC79  F0CF         	call	_spinners	;wreg free
  4410  0114F0  5001               	movf	btemp^0,w,c
  4411  0114F2  6EE6               	movwf	postinc1,c
  4412  0114F4  0E00               	movlw	0
  4413  0114F6  6EE6               	movwf	postinc1,c
  4414  0114F8  0E84               	movlw	low STR_9
  4415  0114FA  6EE6               	movwf	postinc1,c
  4416  0114FC  0EFC               	movlw	high STR_9
  4417  0114FE  6EE6               	movwf	postinc1,c
  4418  011500  0E00               	movlw	0
  4419  011502  6EE6               	movwf	postinc1,c
  4420  011504  0E02               	movlw	2
  4421  011506  6EE6               	movwf	postinc1,c
  4422  011508  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  4423  01150C  0060  F007  FFE6   	movff	btemp,postinc1
  4424  011512  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4425  011518  0E0C               	movlw	12
  4426  01151A  6EE6               	movwf	postinc1,c
  4427  01151C  ECF4  F0CE         	call	_sprintf	;wreg free
  4428                           
  4429                           ; BSR set to: 0
  4430                           ;main.c: 267:     update_lcd(0);
  4431  011520  0E00               	movlw	0
  4432  011522  6EE6               	movwf	postinc1,c
  4433  011524  EC6C  F0CE         	call	_update_lcd	;wreg free
  4434                           
  4435                           ;main.c: 268:     clear_adc_scan();
  4436  011528  ECF9  F0E1         	call	_clear_adc_scan	;wreg free
  4437                           
  4438                           ; BSR set to: 0
  4439                           ;main.c: 269:     start_adc_scan();
  4440  01152C  EC52  F0D9         	call	_start_adc_scan	;wreg free
  4441                           
  4442                           ;main.c: 270:     WaitMs(2000);
  4443  011530  0ED0               	movlw	208
  4444  011532  6EE6               	movwf	postinc1,c
  4445  011534  0E07               	movlw	7
  4446  011536  6EE6               	movwf	postinc1,c
  4447  011538  ECCB  F0DD         	call	_WaitMs	;wreg free
  4448                           
  4449                           ;main.c: 273:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4450                           ;stkvar	_i_ror @ sp[(-17)+16]
  4451  01153C  0EFF               	movlw	-1
  4452  01153E  006F FF8C  F00C    	movff	plusw1,btemp+11
  4453  011544  2A0C               	incf	(btemp+11)^0,f,c
  4454  011546  0060  F033  FFE3   	movff	btemp+11,plusw1
  4455  01154C  060C               	decf	(btemp+11)^0,f,c
  4456  01154E  0E1E               	movlw	30
  4457  011550  600C               	cpfslt	(btemp+11)^0,c
  4458  011552  D01A               	goto	u12800
  4459  011554  EE21  F36B         	lfsr	2,_C+108	;volatile
  4460  011558  006F FF7B FFE6     	movff	postinc2,postinc1
  4461  01155E  006F FF7B FFE6     	movff	postinc2,postinc1
  4462  011564  006F FF7B FFE6     	movff	postinc2,postinc1
  4463  01156A  006F FF7B FFE6     	movff	postinc2,postinc1
  4464  011570  0E42               	movlw	66
  4465  011572  6EE6               	movwf	postinc1,c
  4466  011574  0E60               	movlw	96
  4467  011576  6EE6               	movwf	postinc1,c
  4468  011578  0E65               	movlw	101
  4469  01157A  6EE6               	movwf	postinc1,c
  4470  01157C  0E3C               	movlw	60
  4471  01157E  6EE6               	movwf	postinc1,c
  4472  011580  ECE8  F0C8         	call	___flge	;wreg free
  4473  011584  A001               	btfss	btemp& (0+255),0,c
  4474  011586  D773               	goto	l13352
  4475  011588                     u12800:
  4476                           
  4477                           ;main.c: 275:    static_soc();
  4478  011588  EC16  F0DA         	call	_static_soc	;wreg free
  4479                           
  4480                           ;main.c: 276:    init_bsoc();
  4481  01158C  ECE7  F0BD         	call	_init_bsoc	;wreg free
  4482                           
  4483                           ;main.c: 277:    set_load_relay_one(0);
  4484  011590  0E00               	movlw	0
  4485  011592  6EE6               	movwf	postinc1,c
  4486  011594  EC95  F0E1         	call	_set_load_relay_one	;wreg free
  4487                           
  4488                           ;main.c: 278:    set_load_relay_two(0);
  4489  011598  0E00               	movlw	0
  4490  01159A  6EE6               	movwf	postinc1,c
  4491  01159C  EC8D  F0E1         	call	_set_load_relay_two	;wreg free
  4492                           
  4493                           ;main.c: 279:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4494  0115A0  EE21  F3B5         	lfsr	2,_C+182	;volatile
  4495  0115A4  006F FF78  F00B    	movff	postinc2,btemp+10
  4496  0115AA  006F FF74  F00C    	movff	postdec2,btemp+11
  4497  0115B0  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4498  0115B6  0060  F033  FFE6   	movff	btemp+11,postinc1
  4499  0115BC  0E56               	movlw	low STR_10
  4500  0115BE  6EE6               	movwf	postinc1,c
  4501  0115C0  0EFD               	movlw	high STR_10
  4502  0115C2  6EE6               	movwf	postinc1,c
  4503  0115C4  0E00               	movlw	0
  4504  0115C6  6EE6               	movwf	postinc1,c
  4505  0115C8  0E00               	movlw	0
  4506  0115CA  6EE6               	movwf	postinc1,c
  4507  0115CC  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  4508  0115D0  0060  F007  FFE6   	movff	btemp,postinc1
  4509  0115D6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4510  0115DC  0E06               	movlw	6
  4511  0115DE  6EE6               	movwf	postinc1,c
  4512  0115E0  ECF4  F0CE         	call	_sprintf	;wreg free
  4513                           
  4514                           ; BSR set to: 0
  4515                           ;main.c: 280:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4516  0115E4  EE21  F38F         	lfsr	2,_C+144	;volatile
  4517  0115E8  006F FF7B FFE6     	movff	postinc2,postinc1
  4518  0115EE  006F FF7B FFE6     	movff	postinc2,postinc1
  4519  0115F4  006F FF7B FFE6     	movff	postinc2,postinc1
  4520  0115FA  006F FF7B FFE6     	movff	postinc2,postinc1
  4521  011600  0E32               	movlw	low STR_11
  4522  011602  6EE6               	movwf	postinc1,c
  4523  011604  0EFE               	movlw	high STR_11
  4524  011606  6EE6               	movwf	postinc1,c
  4525  011608  0E00               	movlw	0
  4526  01160A  6EE6               	movwf	postinc1,c
  4527  01160C  0E01               	movlw	1
  4528  01160E  6EE6               	movwf	postinc1,c
  4529  011610  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  4530  011614  0060  F007  FFE6   	movff	btemp,postinc1
  4531  01161A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4532  011620  0E08               	movlw	8
  4533  011622  6EE6               	movwf	postinc1,c
  4534  011624  ECF4  F0CE         	call	_sprintf	;wreg free
  4535                           
  4536                           ; BSR set to: 0
  4537                           ;main.c: 281:    update_lcd(0);
  4538  011628  0E00               	movlw	0
  4539  01162A  6EE6               	movwf	postinc1,c
  4540  01162C  EC6C  F0CE         	call	_update_lcd	;wreg free
  4541                           
  4542                           ;main.c: 282:    WaitMs(2000);
  4543  011630  0ED0               	movlw	208
  4544  011632  6EE6               	movwf	postinc1,c
  4545  011634  0E07               	movlw	7
  4546  011636  6EE6               	movwf	postinc1,c
  4547  011638  ECCB  F0DD         	call	_WaitMs	;wreg free
  4548                           
  4549                           ;main.c: 283:    sprintf(get_vterm_ptr(0, 0), "Battery ESR         ");
  4550  01163C  0EDF               	movlw	low STR_12
  4551  01163E  6EE6               	movwf	postinc1,c
  4552  011640  0EFE               	movlw	high STR_12
  4553  011642  6EE6               	movwf	postinc1,c
  4554  011644  0E00               	movlw	0
  4555  011646  6EE6               	movwf	postinc1,c
  4556  011648  0E00               	movlw	0
  4557  01164A  6EE6               	movwf	postinc1,c
  4558  01164C  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  4559  011650  0060  F007  FFE6   	movff	btemp,postinc1
  4560  011656  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4561  01165C  0E04               	movlw	4
  4562  01165E  6EE6               	movwf	postinc1,c
  4563  011660  ECF4  F0CE         	call	_sprintf	;wreg free
  4564                           
  4565                           ; BSR set to: 0
  4566                           ;main.c: 284:    sprintf(get_vterm_ptr(1, 0), "Calculation         ");
  4567  011664  0EF4               	movlw	low STR_13
  4568  011666  6EE6               	movwf	postinc1,c
  4569  011668  0EFE               	movlw	high STR_13
  4570  01166A  6EE6               	movwf	postinc1,c
  4571  01166C  0E00               	movlw	0
  4572  01166E  6EE6               	movwf	postinc1,c
  4573  011670  0E01               	movlw	1
  4574  011672  6EE6               	movwf	postinc1,c
  4575  011674  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  4576  011678  0060  F007  FFE6   	movff	btemp,postinc1
  4577  01167E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4578  011684  0E04               	movlw	4
  4579  011686  6EE6               	movwf	postinc1,c
  4580  011688  ECF4  F0CE         	call	_sprintf	;wreg free
  4581                           
  4582                           ; BSR set to: 0
  4583                           ;main.c: 285:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds    ");
  4584  01168C  0E48               	movlw	low STR_14
  4585  01168E  6EE6               	movwf	postinc1,c
  4586  011690  0EFF               	movlw	high STR_14
  4587  011692  6EE6               	movwf	postinc1,c
  4588  011694  0E00               	movlw	0
  4589  011696  6EE6               	movwf	postinc1,c
  4590  011698  0E02               	movlw	2
  4591  01169A  6EE6               	movwf	postinc1,c
  4592  01169C  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  4593  0116A0  0060  F007  FFE6   	movff	btemp,postinc1
  4594  0116A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4595  0116AC  0E04               	movlw	4
  4596  0116AE  6EE6               	movwf	postinc1,c
  4597  0116B0  ECF4  F0CE         	call	_sprintf	;wreg free
  4598                           
  4599                           ; BSR set to: 0
  4600                           ;main.c: 286:    update_lcd(0);
  4601  0116B4  0E00               	movlw	0
  4602  0116B6  6EE6               	movwf	postinc1,c
  4603  0116B8  EC6C  F0CE         	call	_update_lcd	;wreg free
  4604                           
  4605                           ;main.c: 287:    uint16_t i_esr = 1;
  4606  0116BC  0E01               	movlw	1
  4607  0116BE  6E0B               	movwf	(btemp+10)^0,c
  4608  0116C0  0E00               	movlw	0
  4609  0116C2  6E0C               	movwf	(btemp+11)^0,c
  4610                           
  4611                           ;stkvar	_i_esr @ sp[(-17)+8]
  4612  0116C4  0EF7               	movlw	-9
  4613  0116C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4614  0116CC  0EF8               	movlw	-8
  4615  0116CE  0060  F033  FFE3   	movff	btemp+11,plusw1
  4616                           
  4617                           ;main.c: 289:    float esr_temp;;main.c: 290:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  4618  0116D4  D06D               	goto	l13410
  4619  0116D6                     l13398:
  4620                           
  4621                           ;main.c: 291:     WaitMs(110);
  4622  0116D6  0E6E               	movlw	110
  4623  0116D8  6EE6               	movwf	postinc1,c
  4624  0116DA  0E00               	movlw	0
  4625  0116DC  6EE6               	movwf	postinc1,c
  4626  0116DE  ECCB  F0DD         	call	_WaitMs	;wreg free
  4627                           
  4628                           ;main.c: 292:     shape = (uint8_t) fabsf(esr_temp);
  4629                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4630  0116E2  0EF3               	movlw	-13
  4631  0116E4  006F FF8F FFE6     	movff	plusw1,postinc1
  4632  0116EA  006F FF8F FFE6     	movff	plusw1,postinc1
  4633  0116F0  006F FF8F FFE6     	movff	plusw1,postinc1
  4634  0116F6  006F FF8F FFE6     	movff	plusw1,postinc1
  4635  0116FC  ECA0  F0D3         	call	_fabsf	;wreg free
  4636  011700  0060  F007  FFE6   	movff	btemp,postinc1
  4637  011706  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4638  01170C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4639  011712  0060  F013  FFE6   	movff	btemp+3,postinc1
  4640  011718  EC2F  F0C8         	call	___fltol	;wreg free
  4641  01171C  0060  F004  F00C   	movff	btemp,btemp+11
  4642                           
  4643                           ;stkvar	_shape @ sp[(-17)+10]
  4644  011722  0EF9               	movlw	-7
  4645  011724  0060  F033  FFE3   	movff	btemp+11,plusw1
  4646                           
  4647                           ;main.c: 293:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  4648  01172A  0E00               	movlw	0
  4649  01172C  6EE6               	movwf	postinc1,c
  4650                           
  4651                           ;stkvar	_shape @ sp[(-18)+10]
  4652  01172E  0EF8               	movlw	-8
  4653  011730  50E3               	movf	plusw1,w,c
  4654  011732  6EE6               	movwf	postinc1,c
  4655  011734  EC79  F0CF         	call	_spinners	;wreg free
  4656  011738  5001               	movf	btemp^0,w,c
  4657  01173A  6EE6               	movwf	postinc1,c
  4658  01173C  0E00               	movlw	0
  4659  01173E  6EE6               	movwf	postinc1,c
  4660  011740  0E00               	movlw	0
  4661  011742  6EE6               	movwf	postinc1,c
  4662  011744  0E00               	movlw	0
  4663  011746  6EE6               	movwf	postinc1,c
  4664  011748  EC79  F0CF         	call	_spinners	;wreg free
  4665  01174C  5001               	movf	btemp^0,w,c
  4666  01174E  6EE6               	movwf	postinc1,c
  4667  011750  0E00               	movlw	0
  4668  011752  6EE6               	movwf	postinc1,c
  4669  011754  0E33               	movlw	low STR_15
  4670  011756  6EE6               	movwf	postinc1,c
  4671  011758  0EFF               	movlw	high STR_15
  4672  01175A  6EE6               	movwf	postinc1,c
  4673  01175C  0E00               	movlw	0
  4674  01175E  6EE6               	movwf	postinc1,c
  4675  011760  0E02               	movlw	2
  4676  011762  6EE6               	movwf	postinc1,c
  4677  011764  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  4678  011768  0060  F007  FFE6   	movff	btemp,postinc1
  4679  01176E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4680  011774  0E08               	movlw	8
  4681  011776  6EE6               	movwf	postinc1,c
  4682  011778  ECF4  F0CE         	call	_sprintf	;wreg free
  4683                           
  4684                           ; BSR set to: 0
  4685                           ;main.c: 294:     update_lcd(0);
  4686  01177C  0E00               	movlw	0
  4687  01177E  6EE6               	movwf	postinc1,c
  4688  011780  EC6C  F0CE         	call	_update_lcd	;wreg free
  4689                           
  4690                           ;main.c: 296:     if (i_esr++ > 512)
  4691                           ;stkvar	_i_esr @ sp[(-17)+8]
  4692  011784  50E1               	movf	fsr1l,w,c
  4693  011786  0FF7               	addlw	-9
  4694  011788  6ED9               	movwf	fsr2l,c
  4695  01178A  50E2               	movf	fsr1h,w,c
  4696  01178C  6EDA               	movwf	fsr2h,c
  4697  01178E  0EFF               	movlw	255
  4698  011790  22DA               	addwfc	fsr2h,f,c
  4699  011792  006F FF7C  F00B    	movff	indf2,btemp+10
  4700  011798  0E01               	movlw	1
  4701  01179A  26DE               	addwf	postinc2,f,c
  4702  01179C  006F FF7C  F00C    	movff	indf2,btemp+11
  4703  0117A2  0E00               	movlw	0
  4704  0117A4  22DD               	addwfc	postdec2,f,c
  4705  0117A6  040B               	decf	(btemp+10)^0,w,c
  4706  0117A8  0E02               	movlw	2
  4707  0117AA  580C               	subwfb	(btemp+11)^0,w,c
  4708  0117AC  B0D8               	btfsc	status,0,c
  4709  0117AE  D017               	goto	u12820
  4710  0117B0                     l13410:
  4711                           
  4712                           ;main.c: 290:    while ((esr_temp = esr_check(0)) < 0.0) {
  4713  0117B0  0E00               	movlw	0
  4714  0117B2  6EE6               	movwf	postinc1,c
  4715  0117B4  ECA2  F0B8         	call	_esr_check	;wreg free
  4716                           
  4717                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4718  0117B8  0EF3               	movlw	-13
  4719  0117BA  0060  F007  FFE3   	movff	btemp,plusw1
  4720  0117C0  0EF4               	movlw	-12
  4721  0117C2  0060  F00B  FFE3   	movff	btemp+1,plusw1
  4722  0117C8  0EF5               	movlw	-11
  4723  0117CA  0060  F00F  FFE3   	movff	btemp+2,plusw1
  4724  0117D0  0EF6               	movlw	-10
  4725  0117D2  0060  F013  FFE3   	movff	btemp+3,plusw1
  4726  0117D8  0EF6               	movlw	-10
  4727  0117DA  BEE3               	btfsc	plusw1,7,c
  4728  0117DC  D77C               	goto	l13398
  4729  0117DE                     u12820:
  4730                           
  4731                           ;main.c: 299:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  4732  0117DE  EE21  F387         	lfsr	2,_C+136	;volatile
  4733  0117E2  006F FF7B FFE6     	movff	postinc2,postinc1
  4734  0117E8  006F FF7B FFE6     	movff	postinc2,postinc1
  4735  0117EE  006F FF7B FFE6     	movff	postinc2,postinc1
  4736  0117F4  006F FF7B FFE6     	movff	postinc2,postinc1
  4737  0117FA  0E40               	movlw	low STR_16
  4738  0117FC  6EE6               	movwf	postinc1,c
  4739  0117FE  0EFD               	movlw	high STR_16
  4740  011800  6EE6               	movwf	postinc1,c
  4741  011802  0E00               	movlw	0
  4742  011804  6EE6               	movwf	postinc1,c
  4743  011806  0E00               	movlw	0
  4744  011808  6EE6               	movwf	postinc1,c
  4745  01180A  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  4746  01180E  0060  F007  FFE6   	movff	btemp,postinc1
  4747  011814  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4748  01181A  0E08               	movlw	8
  4749  01181C  6EE6               	movwf	postinc1,c
  4750  01181E  ECF4  F0CE         	call	_sprintf	;wreg free
  4751                           
  4752                           ;main.c: 300:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  4753  011822  EE22  F00D         	lfsr	2,_C+270	;volatile
  4754  011826  006F FF7B FFE6     	movff	postinc2,postinc1
  4755  01182C  006F FF7B FFE6     	movff	postinc2,postinc1
  4756  011832  006F FF7B FFE6     	movff	postinc2,postinc1
  4757  011838  006F FF7B FFE6     	movff	postinc2,postinc1
  4758  01183E  EE22  F019         	lfsr	2,_C+282	;volatile
  4759  011842  006F FF7B FFE6     	movff	postinc2,postinc1
  4760  011848  006F FF7B FFE6     	movff	postinc2,postinc1
  4761  01184E  006F FF7B FFE6     	movff	postinc2,postinc1
  4762  011854  006F FF7B FFE6     	movff	postinc2,postinc1
  4763  01185A  0E50               	movlw	low STR_17
  4764  01185C  6EE6               	movwf	postinc1,c
  4765  01185E  0EFC               	movlw	high STR_17
  4766  011860  6EE6               	movwf	postinc1,c
  4767  011862  0E00               	movlw	0
  4768  011864  6EE6               	movwf	postinc1,c
  4769  011866  0E01               	movlw	1
  4770  011868  6EE6               	movwf	postinc1,c
  4771  01186A  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  4772  01186E  0060  F007  FFE6   	movff	btemp,postinc1
  4773  011874  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4774  01187A  0E0C               	movlw	12
  4775  01187C  6EE6               	movwf	postinc1,c
  4776  01187E  ECF4  F0CE         	call	_sprintf	;wreg free
  4777                           
  4778                           ;main.c: 301:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  4779  011882  EE22  F011         	lfsr	2,_C+274	;volatile
  4780  011886  006F FF7B FFE6     	movff	postinc2,postinc1
  4781  01188C  006F FF7B FFE6     	movff	postinc2,postinc1
  4782  011892  006F FF7B FFE6     	movff	postinc2,postinc1
  4783  011898  006F FF7B FFE6     	movff	postinc2,postinc1
  4784  01189E  EE22  F01D         	lfsr	2,_C+286	;volatile
  4785  0118A2  006F FF7B FFE6     	movff	postinc2,postinc1
  4786  0118A8  006F FF7B FFE6     	movff	postinc2,postinc1
  4787  0118AE  006F FF7B FFE6     	movff	postinc2,postinc1
  4788  0118B4  006F FF7B FFE6     	movff	postinc2,postinc1
  4789  0118BA  0E6A               	movlw	low STR_18
  4790  0118BC  6EE6               	movwf	postinc1,c
  4791  0118BE  0EFC               	movlw	high STR_18
  4792  0118C0  6EE6               	movwf	postinc1,c
  4793  0118C2  0E00               	movlw	0
  4794  0118C4  6EE6               	movwf	postinc1,c
  4795  0118C6  0E02               	movlw	2
  4796  0118C8  6EE6               	movwf	postinc1,c
  4797  0118CA  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  4798  0118CE  0060  F007  FFE6   	movff	btemp,postinc1
  4799  0118D4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4800  0118DA  0E0C               	movlw	12
  4801  0118DC  6EE6               	movwf	postinc1,c
  4802  0118DE  ECF4  F0CE         	call	_sprintf	;wreg free
  4803                           
  4804                           ;main.c: 302:    update_lcd(0);
  4805  0118E2  0E00               	movlw	0
  4806  0118E4  6EE6               	movwf	postinc1,c
  4807  0118E6  EC6C  F0CE         	call	_update_lcd	;wreg free
  4808                           
  4809                           ;main.c: 303:    WaitMs(5000);
  4810  0118EA  0E88               	movlw	136
  4811  0118EC  6EE6               	movwf	postinc1,c
  4812  0118EE  0E13               	movlw	19
  4813  0118F0  6EE6               	movwf	postinc1,c
  4814  0118F2  ECCB  F0DD         	call	_WaitMs	;wreg free
  4815                           
  4816                           ;main.c: 304:    V.system_stable = 1;
  4817  0118F6  0E01               	movlw	1
  4818  0118F8  0101               	movlb	1	; () banked
  4819  0118FA  6FB5               	movwf	(_V+174)& (0+255),b	;volatile
  4820                           
  4821                           ;main.c: 305:    break;
  4822  0118FC  D01B               	goto	l13422
  4823  0118FE                     l1354:
  4824                           
  4825                           ; BSR set to: 1
  4826                           ;main.c: 311:    P.SYSTEM_STABLE = 1;
  4827  0118FE  81F0               	bsf	(_P+1)& (0+255),0,b	;volatile
  4828                           
  4829                           ;main.c: 312:    break;
  4830  011900  D019               	goto	l13422
  4831  011902                     l1356:
  4832                           
  4833                           ; BSR set to: 1
  4834                           ;main.c: 315:    V.ui_state = UI_STATE_INIT;
  4835  011902  6B07               	clrf	_V& (0+255),b	;volatile
  4836                           
  4837                           ;main.c: 316:    break;
  4838  011904  D017               	goto	l13422
  4839  011906                     l13420:
  4840  011906  0101               	movlb	1	; () banked
  4841  011908  5107               	movf	_V& (0+255),w,b	;volatile
  4842  01190A  6E0B               	movwf	(btemp+10)^0,c
  4843  01190C  6A0C               	clrf	(btemp+11)^0,c
  4844                           
  4845                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4846                           ; Switch size 1, requested type "simple"
  4847                           ; Number of cases is 1, Range of values is 0 to 0
  4848                           ; switch strategies available:
  4849                           ; Name         Instructions Cycles
  4850                           ; simple_byte            4     3 (average)
  4851                           ;	Chosen strategy is simple_byte
  4852  01190E  500C               	movf	(btemp+11)^0,w,c
  4853  011910  0A00               	xorlw	0	; case 0
  4854  011912  A4D8               	btfss	status,2,c
  4855  011914  D7F6               	goto	l1356
  4856                           
  4857                           ; BSR set to: 1
  4858                           ; Switch size 1, requested type "simple"
  4859                           ; Number of cases is 5, Range of values is 0 to 5
  4860                           ; switch strategies available:
  4861                           ; Name         Instructions Cycles
  4862                           ; simple_byte           16     9 (average)
  4863                           ;	Chosen strategy is simple_byte
  4864  011916  500B               	movf	(btemp+10)^0,w,c
  4865  011918  0A00               	xorlw	0	; case 0
  4866  01191A  B4D8               	btfsc	status,2,c
  4867  01191C  D4CF               	goto	l13302
  4868  01191E  0A01               	xorlw	1	; case 1
  4869  011920  B4D8               	btfsc	status,2,c
  4870  011922  D008               	goto	l13422
  4871  011924  0A02               	xorlw	2	; case 3
  4872  011926  B4D8               	btfsc	status,2,c
  4873  011928  D005               	goto	l13422
  4874  01192A  0A07               	xorlw	7	; case 4
  4875  01192C  B4D8               	btfsc	status,2,c
  4876  01192E  D7E7               	goto	l1354
  4877  011930  0A01               	xorlw	1	; case 5
  4878  011932  D7E7               	goto	l1356
  4879  011934                     l13422:
  4880                           
  4881                           ; BSR set to: 1
  4882                           ;main.c: 319:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  4883  011934  0E01               	movlw	1
  4884  011936  6EE6               	movwf	postinc1,c
  4885  011938  ECFD  F0DE         	call	_TimerDone	;wreg free
  4886  01193C  5001               	movf	btemp^0,w,c
  4887  01193E  B4D8               	btfsc	status,2,c
  4888  011940  D013               	goto	l13434
  4889  011942  ECE9  F0E1         	call	_check_adc_scan	;wreg free
  4890  011946  5001               	movf	btemp^0,w,c
  4891  011948  B4D8               	btfsc	status,2,c
  4892  01194A  D00E               	goto	l13434
  4893                           
  4894                           ;main.c: 323:    convert_adc_data();
  4895  01194C  EC44  F0D3         	call	_convert_adc_data	;wreg free
  4896                           
  4897                           ;main.c: 327:    clear_adc_scan();
  4898  011950  ECF9  F0E1         	call	_clear_adc_scan	;wreg free
  4899                           
  4900                           ; BSR set to: 0
  4901                           ;main.c: 328:    start_adc_scan();
  4902  011954  EC52  F0D9         	call	_start_adc_scan	;wreg free
  4903                           
  4904                           ;main.c: 329:    StartTimer(TMR_ADC, 200);
  4905  011958  0EC8               	movlw	200
  4906  01195A  6EE6               	movwf	postinc1,c
  4907  01195C  0E00               	movlw	0
  4908  01195E  6EE6               	movwf	postinc1,c
  4909  011960  0E01               	movlw	1
  4910  011962  6EE6               	movwf	postinc1,c
  4911  011964  ECDC  F0DC         	call	_StartTimer	;wreg free
  4912  011968                     l13434:
  4913                           
  4914                           ;main.c: 336:   if (TimerDone(TMR_DISPLAY)) {
  4915                           
  4916                           ;main.c: 332:   if (V.ticks) {
  4917  011968  0E0A               	movlw	10
  4918  01196A  6EE6               	movwf	postinc1,c
  4919  01196C  ECFD  F0DE         	call	_TimerDone	;wreg free
  4920  011970  5001               	movf	btemp^0,w,c
  4921  011972  B4D8               	btfsc	status,2,c
  4922  011974  EF47  F091         	goto	l13514
  4923                           
  4924                           ;main.c: 337:    if (TimerDone(TMR_HELPDIS)) {
  4925  011978  0E09               	movlw	9
  4926  01197A  6EE6               	movwf	postinc1,c
  4927  01197C  ECFD  F0DE         	call	_TimerDone	;wreg free
  4928  011980  5001               	movf	btemp^0,w,c
  4929  011982  B4D8               	btfsc	status,2,c
  4930  011984  D004               	goto	l13442
  4931                           
  4932                           ;main.c: 338:     set_display_info(DIS_STR);
  4933  011986  0E00               	movlw	0
  4934  011988  6EE6               	movwf	postinc1,c
  4935  01198A  ECF1  F0E0         	call	_set_display_info	;wreg free
  4936  01198E                     l13442:
  4937                           
  4938                           ;main.c: 340:    calc_model_data();
  4939  01198E  EC3D  F0AE         	call	_calc_model_data	;wreg free
  4940                           
  4941                           ; BSR set to: 57
  4942                           ;main.c: 347:     hid_display(&H);
  4943                           
  4944                           ;main.c: 342:    if (0) {
  4945  011992  0EC6               	movlw	low _H
  4946  011994  6EE6               	movwf	postinc1,c
  4947  011996  0E01               	movlw	high _H
  4948  011998  6EE6               	movwf	postinc1,c
  4949  01199A  EC45  F0C3         	call	_hid_display	;wreg free
  4950                           
  4951                           ;main.c: 348:     switch (H.hid_display) {
  4952  01199E  EFF1  F090         	goto	l13490
  4953  0119A2                     l1364:
  4954                           
  4955                           ; BSR set to: 1
  4956                           ;main.c: 350:      V.calib = 0;
  4957  0119A2  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  4958                           
  4959                           ; BSR set to: 1
  4960                           ;main.c: 351:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f      ", (C.day) ? 'D' :
      +                           ' ', C.p_pv);
  4961  0119A4  EE22  F021         	lfsr	2,_C+290	;volatile
  4962  0119A8  50DF               	movf	indf2,w,c
  4963  0119AA  A4D8               	btfss	status,2,c
  4964  0119AC  D002               	goto	l13452
  4965                           
  4966                           ; BSR set to: 1
  4967  0119AE  0E20               	movlw	32
  4968  0119B0  D001               	goto	L1
  4969  0119B2                     l13452:
  4970                           
  4971                           ; BSR set to: 1
  4972  0119B2  0E44               	movlw	68
  4973  0119B4                     L1:
  4974  0119B4  6E0B               	movwf	(btemp+10)^0,c
  4975  0119B6  0E00               	movlw	0
  4976  0119B8  6E0C               	movwf	(btemp+11)^0,c
  4977                           
  4978                           ;stkvar	_main$3856 @ sp[(-17)+2]
  4979  0119BA  0EF1               	movlw	-15
  4980  0119BC  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4981  0119C2  0EF2               	movlw	-14
  4982  0119C4  0060  F033  FFE3   	movff	btemp+11,plusw1
  4983                           
  4984                           ; BSR set to: 1
  4985  0119CA  EE21  F37B         	lfsr	2,_C+124	;volatile
  4986  0119CE  006F FF7B FFE6     	movff	postinc2,postinc1
  4987  0119D4  006F FF7B FFE6     	movff	postinc2,postinc1
  4988  0119DA  006F FF7B FFE6     	movff	postinc2,postinc1
  4989  0119E0  006F FF7B FFE6     	movff	postinc2,postinc1
  4990                           
  4991                           ;stkvar	_main$3856 @ sp[(-21)+2]
  4992  0119E6  0EED               	movlw	-19
  4993  0119E8  006F FF8F FFE6     	movff	plusw1,postinc1
  4994  0119EE  006F FF8F FFE6     	movff	plusw1,postinc1
  4995  0119F4  0E1C               	movlw	low STR_22
  4996  0119F6  6EE6               	movwf	postinc1,c
  4997  0119F8  0EFE               	movlw	high STR_22
  4998  0119FA  6EE6               	movwf	postinc1,c
  4999  0119FC  0E00               	movlw	0
  5000  0119FE  6EE6               	movwf	postinc1,c
  5001  011A00  0E00               	movlw	0
  5002  011A02  6EE6               	movwf	postinc1,c
  5003  011A04  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  5004  011A08  0060  F007  FFE6   	movff	btemp,postinc1
  5005  011A0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5006  011A14  0E0A               	movlw	10
  5007  011A16  6EE6               	movwf	postinc1,c
  5008  011A18  ECF4  F0CE         	call	_sprintf	;wreg free
  5009                           
  5010                           ; BSR set to: 0
  5011                           ;main.c: 352:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f       ", C.p_load);
  5012  011A1C  EE21  F373         	lfsr	2,_C+116	;volatile
  5013  011A20  006F FF7B FFE6     	movff	postinc2,postinc1
  5014  011A26  006F FF7B FFE6     	movff	postinc2,postinc1
  5015  011A2C  006F FF7B FFE6     	movff	postinc2,postinc1
  5016  011A32  006F FF7B FFE6     	movff	postinc2,postinc1
  5017  011A38  0E06               	movlw	low STR_23
  5018  011A3A  6EE6               	movwf	postinc1,c
  5019  011A3C  0EFE               	movlw	high STR_23
  5020  011A3E  6EE6               	movwf	postinc1,c
  5021  011A40  0E00               	movlw	0
  5022  011A42  6EE6               	movwf	postinc1,c
  5023  011A44  0E01               	movlw	1
  5024  011A46  6EE6               	movwf	postinc1,c
  5025  011A48  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  5026  011A4C  0060  F007  FFE6   	movff	btemp,postinc1
  5027  011A52  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5028  011A58  0E08               	movlw	8
  5029  011A5A  6EE6               	movwf	postinc1,c
  5030  011A5C  ECF4  F0CE         	call	_sprintf	;wreg free
  5031                           
  5032                           ; BSR set to: 0
  5033                           ;main.c: 353:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f       ", C.p_inverter);
  5034  011A60  EE21  F377         	lfsr	2,_C+120	;volatile
  5035  011A64  006F FF7B FFE6     	movff	postinc2,postinc1
  5036  011A6A  006F FF7B FFE6     	movff	postinc2,postinc1
  5037  011A70  006F FF7B FFE6     	movff	postinc2,postinc1
  5038  011A76  006F FF7B FFE6     	movff	postinc2,postinc1
  5039  011A7C  0EF0               	movlw	low STR_24
  5040  011A7E  6EE6               	movwf	postinc1,c
  5041  011A80  0EFD               	movlw	high STR_24
  5042  011A82  6EE6               	movwf	postinc1,c
  5043  011A84  0E00               	movlw	0
  5044  011A86  6EE6               	movwf	postinc1,c
  5045  011A88  0E02               	movlw	2
  5046  011A8A  6EE6               	movwf	postinc1,c
  5047  011A8C  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  5048  011A90  0060  F007  FFE6   	movff	btemp,postinc1
  5049  011A96  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5050  011A9C  0E08               	movlw	8
  5051  011A9E  6EE6               	movwf	postinc1,c
  5052  011AA0  ECF4  F0CE         	call	_sprintf	;wreg free
  5053                           
  5054                           ; BSR set to: 0
  5055                           ;main.c: 355:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f       ", (C.day) ? 'D' :
      +                           ' ', C.pvkw);
  5056  011AA4  EE22  F021         	lfsr	2,_C+290	;volatile
  5057  011AA8  50DF               	movf	indf2,w,c
  5058  011AAA  A4D8               	btfss	status,2,c
  5059  011AAC  D002               	goto	l13464
  5060                           
  5061                           ; BSR set to: 0
  5062  011AAE  0E20               	movlw	32
  5063  011AB0  D001               	goto	L2
  5064  011AB2                     l13464:
  5065                           
  5066                           ; BSR set to: 0
  5067  011AB2  0E44               	movlw	68
  5068  011AB4                     L2:
  5069  011AB4  6E0B               	movwf	(btemp+10)^0,c
  5070  011AB6  0E00               	movlw	0
  5071  011AB8  6E0C               	movwf	(btemp+11)^0,c
  5072                           
  5073                           ;stkvar	_main$3860 @ sp[(-17)+0]
  5074  011ABA  0EEF               	movlw	-17
  5075  011ABC  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5076  011AC2  0EF0               	movlw	-16
  5077  011AC4  0060  F033  FFE3   	movff	btemp+11,plusw1
  5078                           
  5079                           ; BSR set to: 0
  5080  011ACA  EE21  F3A7         	lfsr	2,_C+168	;volatile
  5081  011ACE  006F FF7B FFE6     	movff	postinc2,postinc1
  5082  011AD4  006F FF7B FFE6     	movff	postinc2,postinc1
  5083  011ADA  006F FF7B FFE6     	movff	postinc2,postinc1
  5084  011AE0  006F FF7B FFE6     	movff	postinc2,postinc1
  5085                           
  5086                           ;stkvar	_main$3860 @ sp[(-21)+0]
  5087  011AE6  0EEB               	movlw	-21
  5088  011AE8  006F FF8F FFE6     	movff	plusw1,postinc1
  5089  011AEE  006F FF8F FFE6     	movff	plusw1,postinc1
  5090  011AF4  0EDA               	movlw	low STR_25
  5091  011AF6  6EE6               	movwf	postinc1,c
  5092  011AF8  0EFD               	movlw	high STR_25
  5093  011AFA  6EE6               	movwf	postinc1,c
  5094  011AFC  0E01               	movlw	1
  5095  011AFE  6EE6               	movwf	postinc1,c
  5096  011B00  0E00               	movlw	0
  5097  011B02  6EE6               	movwf	postinc1,c
  5098  011B04  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  5099  011B08  0060  F007  FFE6   	movff	btemp,postinc1
  5100  011B0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5101  011B14  0E0A               	movlw	10
  5102  011B16  6EE6               	movwf	postinc1,c
  5103  011B18  ECF4  F0CE         	call	_sprintf	;wreg free
  5104                           
  5105                           ; BSR set to: 0
  5106                           ;main.c: 356:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f        ", C.loadkw);
  5107  011B1C  EE21  F3AF         	lfsr	2,_C+176	;volatile
  5108  011B20  006F FF7B FFE6     	movff	postinc2,postinc1
  5109  011B26  006F FF7B FFE6     	movff	postinc2,postinc1
  5110  011B2C  006F FF7B FFE6     	movff	postinc2,postinc1
  5111  011B32  006F FF7B FFE6     	movff	postinc2,postinc1
  5112  011B38  0EC4               	movlw	low STR_26
  5113  011B3A  6EE6               	movwf	postinc1,c
  5114  011B3C  0EFD               	movlw	high STR_26
  5115  011B3E  6EE6               	movwf	postinc1,c
  5116  011B40  0E01               	movlw	1
  5117  011B42  6EE6               	movwf	postinc1,c
  5118  011B44  0E01               	movlw	1
  5119  011B46  6EE6               	movwf	postinc1,c
  5120  011B48  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  5121  011B4C  0060  F007  FFE6   	movff	btemp,postinc1
  5122  011B52  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5123  011B58  0E08               	movlw	8
  5124  011B5A  6EE6               	movwf	postinc1,c
  5125  011B5C  ECF4  F0CE         	call	_sprintf	;wreg free
  5126                           
  5127                           ; BSR set to: 0
  5128                           ;main.c: 357:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f        ", C.invkw);
  5129  011B60  EE21  F3AB         	lfsr	2,_C+172	;volatile
  5130  011B64  006F FF7B FFE6     	movff	postinc2,postinc1
  5131  011B6A  006F FF7B FFE6     	movff	postinc2,postinc1
  5132  011B70  006F FF7B FFE6     	movff	postinc2,postinc1
  5133  011B76  006F FF7B FFE6     	movff	postinc2,postinc1
  5134  011B7C  0EAE               	movlw	low STR_27
  5135  011B7E  6EE6               	movwf	postinc1,c
  5136  011B80  0EFD               	movlw	high STR_27
  5137  011B82  6EE6               	movwf	postinc1,c
  5138  011B84  0E01               	movlw	1
  5139  011B86  6EE6               	movwf	postinc1,c
  5140  011B88  0E02               	movlw	2
  5141  011B8A  6EE6               	movwf	postinc1,c
  5142  011B8C  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  5143  011B90  0060  F007  FFE6   	movff	btemp,postinc1
  5144  011B96  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5145  011B9C  0E08               	movlw	8
  5146  011B9E  6EE6               	movwf	postinc1,c
  5147  011BA0  ECF4  F0CE         	call	_sprintf	;wreg free
  5148                           
  5149                           ;main.c: 358:      break;
  5150  011BA4  D334               	goto	l13492
  5151  011BA6                     l1374:
  5152                           
  5153                           ; BSR set to: 1
  5154                           ;main.c: 360:      V.calib = 0;
  5155  011BA6  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5156                           
  5157                           ; BSR set to: 1
  5158                           ;main.c: 361:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f    ", C.calc[V_PV], C
      +                          .calc[C_PV]);
  5159  011BA8  EE21  F303         	lfsr	2,_C+4	;volatile
  5160  011BAC  006F FF7B FFE6     	movff	postinc2,postinc1
  5161  011BB2  006F FF7B FFE6     	movff	postinc2,postinc1
  5162  011BB8  006F FF7B FFE6     	movff	postinc2,postinc1
  5163  011BBE  006F FF7B FFE6     	movff	postinc2,postinc1
  5164  011BC4  EE21  F313         	lfsr	2,_C+20	;volatile
  5165  011BC8  006F FF7B FFE6     	movff	postinc2,postinc1
  5166  011BCE  006F FF7B FFE6     	movff	postinc2,postinc1
  5167  011BD4  006F FF7B FFE6     	movff	postinc2,postinc1
  5168  011BDA  006F FF7B FFE6     	movff	postinc2,postinc1
  5169  011BE0  0E74               	movlw	low STR_28
  5170  011BE2  6EE6               	movwf	postinc1,c
  5171  011BE4  0EFE               	movlw	high STR_28
  5172  011BE6  6EE6               	movwf	postinc1,c
  5173  011BE8  0E00               	movlw	0
  5174  011BEA  6EE6               	movwf	postinc1,c
  5175  011BEC  0E00               	movlw	0
  5176  011BEE  6EE6               	movwf	postinc1,c
  5177  011BF0  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  5178  011BF4  0060  F007  FFE6   	movff	btemp,postinc1
  5179  011BFA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5180  011C00  0E0C               	movlw	12
  5181  011C02  6EE6               	movwf	postinc1,c
  5182  011C04  ECF4  F0CE         	call	_sprintf	;wreg free
  5183                           
  5184                           ;main.c: 362:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f    ", C.calc[V_BAT], 
      +                          C.calc[C_BATT]);
  5185  011C08  EE21  F2FF         	lfsr	2,_C
  5186  011C0C  006F FF7B FFE6     	movff	postinc2,postinc1
  5187  011C12  006F FF7B FFE6     	movff	postinc2,postinc1
  5188  011C18  006F FF7B FFE6     	movff	postinc2,postinc1
  5189  011C1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5190  011C24  EE21  F30F         	lfsr	2,_C+16	;volatile
  5191  011C28  006F FF7B FFE6     	movff	postinc2,postinc1
  5192  011C2E  006F FF7B FFE6     	movff	postinc2,postinc1
  5193  011C34  006F FF7B FFE6     	movff	postinc2,postinc1
  5194  011C3A  006F FF7B FFE6     	movff	postinc2,postinc1
  5195  011C40  0E48               	movlw	low STR_29
  5196  011C42  6EE6               	movwf	postinc1,c
  5197  011C44  0EFE               	movlw	high STR_29
  5198  011C46  6EE6               	movwf	postinc1,c
  5199  011C48  0E00               	movlw	0
  5200  011C4A  6EE6               	movwf	postinc1,c
  5201  011C4C  0E01               	movlw	1
  5202  011C4E  6EE6               	movwf	postinc1,c
  5203  011C50  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  5204  011C54  0060  F007  FFE6   	movff	btemp,postinc1
  5205  011C5A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5206  011C60  0E0C               	movlw	12
  5207  011C62  6EE6               	movwf	postinc1,c
  5208  011C64  ECF4  F0CE         	call	_sprintf	;wreg free
  5209                           
  5210                           ;main.c: 363:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f    ", C.calc[V_CC], C
      +                          .c_load);
  5211  011C68  EE21  F33F         	lfsr	2,_C+64	;volatile
  5212  011C6C  006F FF7B FFE6     	movff	postinc2,postinc1
  5213  011C72  006F FF7B FFE6     	movff	postinc2,postinc1
  5214  011C78  006F FF7B FFE6     	movff	postinc2,postinc1
  5215  011C7E  006F FF7B FFE6     	movff	postinc2,postinc1
  5216  011C84  EE21  F307         	lfsr	2,_C+8	;volatile
  5217  011C88  006F FF7B FFE6     	movff	postinc2,postinc1
  5218  011C8E  006F FF7B FFE6     	movff	postinc2,postinc1
  5219  011C94  006F FF7B FFE6     	movff	postinc2,postinc1
  5220  011C9A  006F FF7B FFE6     	movff	postinc2,postinc1
  5221  011CA0  0E5E               	movlw	low STR_30
  5222  011CA2  6EE6               	movwf	postinc1,c
  5223  011CA4  0EFE               	movlw	high STR_30
  5224  011CA6  6EE6               	movwf	postinc1,c
  5225  011CA8  0E00               	movlw	0
  5226  011CAA  6EE6               	movwf	postinc1,c
  5227  011CAC  0E02               	movlw	2
  5228  011CAE  6EE6               	movwf	postinc1,c
  5229  011CB0  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  5230  011CB4  0060  F007  FFE6   	movff	btemp,postinc1
  5231  011CBA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5232  011CC0  0E0C               	movlw	12
  5233  011CC2  6EE6               	movwf	postinc1,c
  5234  011CC4  ECF4  F0CE         	call	_sprintf	;wreg free
  5235                           
  5236                           ;main.c: 365:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f        ", C.bkwi);
  5237  011CC8  EE21  F39F         	lfsr	2,_C+160	;volatile
  5238  011CCC  006F FF7B FFE6     	movff	postinc2,postinc1
  5239  011CD2  006F FF7B FFE6     	movff	postinc2,postinc1
  5240  011CD8  006F FF7B FFE6     	movff	postinc2,postinc1
  5241  011CDE  006F FF7B FFE6     	movff	postinc2,postinc1
  5242  011CE4  0E6C               	movlw	low STR_31
  5243  011CE6  6EE6               	movwf	postinc1,c
  5244  011CE8  0EFD               	movlw	high STR_31
  5245  011CEA  6EE6               	movwf	postinc1,c
  5246  011CEC  0E01               	movlw	1
  5247  011CEE  6EE6               	movwf	postinc1,c
  5248  011CF0  0E00               	movlw	0
  5249  011CF2  6EE6               	movwf	postinc1,c
  5250  011CF4  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  5251  011CF8  0060  F007  FFE6   	movff	btemp,postinc1
  5252  011CFE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5253  011D04  0E08               	movlw	8
  5254  011D06  6EE6               	movwf	postinc1,c
  5255  011D08  ECF4  F0CE         	call	_sprintf	;wreg free
  5256                           
  5257                           ;main.c: 366:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f        ", C.bkwo);
  5258  011D0C  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5259  011D10  006F FF7B FFE6     	movff	postinc2,postinc1
  5260  011D16  006F FF7B FFE6     	movff	postinc2,postinc1
  5261  011D1C  006F FF7B FFE6     	movff	postinc2,postinc1
  5262  011D22  006F FF7B FFE6     	movff	postinc2,postinc1
  5263  011D28  0E82               	movlw	low STR_32
  5264  011D2A  6EE6               	movwf	postinc1,c
  5265  011D2C  0EFD               	movlw	high STR_32
  5266  011D2E  6EE6               	movwf	postinc1,c
  5267  011D30  0E01               	movlw	1
  5268  011D32  6EE6               	movwf	postinc1,c
  5269  011D34  0E01               	movlw	1
  5270  011D36  6EE6               	movwf	postinc1,c
  5271  011D38  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  5272  011D3C  0060  F007  FFE6   	movff	btemp,postinc1
  5273  011D42  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5274  011D48  0E08               	movlw	8
  5275  011D4A  6EE6               	movwf	postinc1,c
  5276  011D4C  ECF4  F0CE         	call	_sprintf	;wreg free
  5277                           
  5278                           ;main.c: 367:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f        ", C.bkwi + C.bkwo
      +                          );
  5279  011D50  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5280  011D54  006F FF7B FFE6     	movff	postinc2,postinc1
  5281  011D5A  006F FF7B FFE6     	movff	postinc2,postinc1
  5282  011D60  006F FF7B FFE6     	movff	postinc2,postinc1
  5283  011D66  006F FF7B FFE6     	movff	postinc2,postinc1
  5284  011D6C  EE21  F39F         	lfsr	2,_C+160	;volatile
  5285  011D70  006F FF7B FFE6     	movff	postinc2,postinc1
  5286  011D76  006F FF7B FFE6     	movff	postinc2,postinc1
  5287  011D7C  006F FF7B FFE6     	movff	postinc2,postinc1
  5288  011D82  006F FF7B FFE6     	movff	postinc2,postinc1
  5289  011D88  ECD8  F0A2         	call	___fladd	;wreg free
  5290  011D8C  0060  F007  FFE6   	movff	btemp,postinc1
  5291  011D92  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5292  011D98  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5293  011D9E  0060  F013  FFE6   	movff	btemp+3,postinc1
  5294  011DA4  0E98               	movlw	low STR_33
  5295  011DA6  6EE6               	movwf	postinc1,c
  5296  011DA8  0EFD               	movlw	high STR_33
  5297  011DAA  6EE6               	movwf	postinc1,c
  5298  011DAC  0E01               	movlw	1
  5299  011DAE  6EE6               	movwf	postinc1,c
  5300  011DB0  0E02               	movlw	2
  5301  011DB2  6EE6               	movwf	postinc1,c
  5302  011DB4  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  5303  011DB8  0060  F007  FFE6   	movff	btemp,postinc1
  5304  011DBE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5305  011DC4  0E08               	movlw	8
  5306  011DC6  6EE6               	movwf	postinc1,c
  5307  011DC8  ECF4  F0CE         	call	_sprintf	;wreg free
  5308                           
  5309                           ;main.c: 368:      break;
  5310  011DCC  D220               	goto	l13492
  5311  011DCE                     l1375:
  5312                           
  5313                           ; BSR set to: 1
  5314                           ;main.c: 370:      V.calib = 0;
  5315  011DCE  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5316                           
  5317                           ; BSR set to: 1
  5318                           ;main.c: 371:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f        ", C.p_bat);
  5319  011DD0  EE21  F37F         	lfsr	2,_C+128	;volatile
  5320  011DD4  006F FF7B FFE6     	movff	postinc2,postinc1
  5321  011DDA  006F FF7B FFE6     	movff	postinc2,postinc1
  5322  011DE0  006F FF7B FFE6     	movff	postinc2,postinc1
  5323  011DE6  006F FF7B FFE6     	movff	postinc2,postinc1
  5324  011DEC  0EE4               	movlw	low STR_34
  5325  011DEE  6EE6               	movwf	postinc1,c
  5326  011DF0  0EFC               	movlw	high STR_34
  5327  011DF2  6EE6               	movwf	postinc1,c
  5328  011DF4  0E00               	movlw	0
  5329  011DF6  6EE6               	movwf	postinc1,c
  5330  011DF8  0E00               	movlw	0
  5331  011DFA  6EE6               	movwf	postinc1,c
  5332  011DFC  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  5333  011E00  0060  F007  FFE6   	movff	btemp,postinc1
  5334  011E06  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5335  011E0C  0E08               	movlw	8
  5336  011E0E  6EE6               	movwf	postinc1,c
  5337  011E10  ECF4  F0CE         	call	_sprintf	;wreg free
  5338                           
  5339                           ;main.c: 372:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f      ", C.dynamic_ah, 
      +                          C.pv_ah);
  5340  011E14  EE21  F393         	lfsr	2,_C+148	;volatile
  5341  011E18  006F FF7B FFE6     	movff	postinc2,postinc1
  5342  011E1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5343  011E24  006F FF7B FFE6     	movff	postinc2,postinc1
  5344  011E2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5345  011E30  EE21  F38F         	lfsr	2,_C+144	;volatile
  5346  011E34  006F FF7B FFE6     	movff	postinc2,postinc1
  5347  011E3A  006F FF7B FFE6     	movff	postinc2,postinc1
  5348  011E40  006F FF7B FFE6     	movff	postinc2,postinc1
  5349  011E46  006F FF7B FFE6     	movff	postinc2,postinc1
  5350  011E4C  0E29               	movlw	low STR_35
  5351  011E4E  6EE6               	movwf	postinc1,c
  5352  011E50  0EFD               	movlw	high STR_35
  5353  011E52  6EE6               	movwf	postinc1,c
  5354  011E54  0E00               	movlw	0
  5355  011E56  6EE6               	movwf	postinc1,c
  5356  011E58  0E01               	movlw	1
  5357  011E5A  6EE6               	movwf	postinc1,c
  5358  011E5C  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  5359  011E60  0060  F007  FFE6   	movff	btemp,postinc1
  5360  011E66  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5361  011E6C  0E0C               	movlw	12
  5362  011E6E  6EE6               	movwf	postinc1,c
  5363  011E70  ECF4  F0CE         	call	_sprintf	;wreg free
  5364                           
  5365                           ;main.c: 373:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d        ", spinners(5, 0)
      +                          , C.soc, C.runtime);
  5366  011E74  EE21  F3B3         	lfsr	2,_C+180	;volatile
  5367  011E78  006F FF78  F00B    	movff	postinc2,btemp+10
  5368  011E7E  006F FF74  F00C    	movff	postdec2,btemp+11
  5369  011E84  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5370  011E8A  0060  F033  FFE6   	movff	btemp+11,postinc1
  5371  011E90  EE21  F3B5         	lfsr	2,_C+182	;volatile
  5372  011E94  006F FF78  F00B    	movff	postinc2,btemp+10
  5373  011E9A  006F FF74  F00C    	movff	postdec2,btemp+11
  5374  011EA0  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5375  011EA6  0060  F033  FFE6   	movff	btemp+11,postinc1
  5376  011EAC  0E00               	movlw	0
  5377  011EAE  6EE6               	movwf	postinc1,c
  5378  011EB0  0E05               	movlw	5
  5379  011EB2  6EE6               	movwf	postinc1,c
  5380  011EB4  EC79  F0CF         	call	_spinners	;wreg free
  5381  011EB8  5001               	movf	btemp^0,w,c
  5382  011EBA  6EE6               	movwf	postinc1,c
  5383  011EBC  0E00               	movlw	0
  5384  011EBE  6EE6               	movwf	postinc1,c
  5385  011EC0  0ECD               	movlw	low STR_36
  5386  011EC2  6EE6               	movwf	postinc1,c
  5387  011EC4  0EFC               	movlw	high STR_36
  5388  011EC6  6EE6               	movwf	postinc1,c
  5389  011EC8  0E00               	movlw	0
  5390  011ECA  6EE6               	movwf	postinc1,c
  5391  011ECC  0E02               	movlw	2
  5392  011ECE  6EE6               	movwf	postinc1,c
  5393  011ED0  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  5394  011ED4  0060  F007  FFE6   	movff	btemp,postinc1
  5395  011EDA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5396  011EE0  0E0A               	movlw	10
  5397  011EE2  6EE6               	movwf	postinc1,c
  5398  011EE4  ECF4  F0CE         	call	_sprintf	;wreg free
  5399                           
  5400                           ;main.c: 375:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f            ", C.esr);
  5401  011EE8  EE21  F387         	lfsr	2,_C+136	;volatile
  5402  011EEC  006F FF7B FFE6     	movff	postinc2,postinc1
  5403  011EF2  006F FF7B FFE6     	movff	postinc2,postinc1
  5404  011EF8  006F FF7B FFE6     	movff	postinc2,postinc1
  5405  011EFE  006F FF7B FFE6     	movff	postinc2,postinc1
  5406  011F04  0EB6               	movlw	low STR_37
  5407  011F06  6EE6               	movwf	postinc1,c
  5408  011F08  0EFC               	movlw	high STR_37
  5409  011F0A  6EE6               	movwf	postinc1,c
  5410  011F0C  0E01               	movlw	1
  5411  011F0E  6EE6               	movwf	postinc1,c
  5412  011F10  0E00               	movlw	0
  5413  011F12  6EE6               	movwf	postinc1,c
  5414  011F14  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  5415  011F18  0060  F007  FFE6   	movff	btemp,postinc1
  5416  011F1E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5417  011F24  0E08               	movlw	8
  5418  011F26  6EE6               	movwf	postinc1,c
  5419  011F28  ECF4  F0CE         	call	_sprintf	;wreg free
  5420                           
  5421                           ;main.c: 376:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f        ", C.bv_one_load,
      +                           C.load_i1);
  5422  011F2C  EE22  F00D         	lfsr	2,_C+270	;volatile
  5423  011F30  006F FF7B FFE6     	movff	postinc2,postinc1
  5424  011F36  006F FF7B FFE6     	movff	postinc2,postinc1
  5425  011F3C  006F FF7B FFE6     	movff	postinc2,postinc1
  5426  011F42  006F FF7B FFE6     	movff	postinc2,postinc1
  5427  011F48  EE22  F019         	lfsr	2,_C+282	;volatile
  5428  011F4C  006F FF7B FFE6     	movff	postinc2,postinc1
  5429  011F52  006F FF7B FFE6     	movff	postinc2,postinc1
  5430  011F58  006F FF7B FFE6     	movff	postinc2,postinc1
  5431  011F5E  006F FF7B FFE6     	movff	postinc2,postinc1
  5432  011F64  0EFB               	movlw	low STR_38
  5433  011F66  6EE6               	movwf	postinc1,c
  5434  011F68  0EFC               	movlw	high STR_38
  5435  011F6A  6EE6               	movwf	postinc1,c
  5436  011F6C  0E01               	movlw	1
  5437  011F6E  6EE6               	movwf	postinc1,c
  5438  011F70  0E01               	movlw	1
  5439  011F72  6EE6               	movwf	postinc1,c
  5440  011F74  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  5441  011F78  0060  F007  FFE6   	movff	btemp,postinc1
  5442  011F7E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5443  011F84  0E0C               	movlw	12
  5444  011F86  6EE6               	movwf	postinc1,c
  5445  011F88  ECF4  F0CE         	call	_sprintf	;wreg free
  5446                           
  5447                           ;main.c: 377:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f        ", C.bv_full_load
      +                          , C.load_i2);
  5448  011F8C  EE22  F011         	lfsr	2,_C+274	;volatile
  5449  011F90  006F FF7B FFE6     	movff	postinc2,postinc1
  5450  011F96  006F FF7B FFE6     	movff	postinc2,postinc1
  5451  011F9C  006F FF7B FFE6     	movff	postinc2,postinc1
  5452  011FA2  006F FF7B FFE6     	movff	postinc2,postinc1
  5453  011FA8  EE22  F01D         	lfsr	2,_C+286	;volatile
  5454  011FAC  006F FF7B FFE6     	movff	postinc2,postinc1
  5455  011FB2  006F FF7B FFE6     	movff	postinc2,postinc1
  5456  011FB8  006F FF7B FFE6     	movff	postinc2,postinc1
  5457  011FBE  006F FF7B FFE6     	movff	postinc2,postinc1
  5458  011FC4  0E12               	movlw	low STR_39
  5459  011FC6  6EE6               	movwf	postinc1,c
  5460  011FC8  0EFD               	movlw	high STR_39
  5461  011FCA  6EE6               	movwf	postinc1,c
  5462  011FCC  0E01               	movlw	1
  5463  011FCE  6EE6               	movwf	postinc1,c
  5464  011FD0  0E02               	movlw	2
  5465  011FD2  6EE6               	movwf	postinc1,c
  5466  011FD4  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  5467  011FD8  0060  F007  FFE6   	movff	btemp,postinc1
  5468  011FDE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5469  011FE4  0E0C               	movlw	12
  5470  011FE6  6EE6               	movwf	postinc1,c
  5471  011FE8  ECF4  F0CE         	call	_sprintf	;wreg free
  5472                           
  5473                           ;main.c: 378:      break;
  5474  011FEC  D110               	goto	l13492
  5475  011FEE                     l13476:
  5476                           
  5477                           ; BSR set to: 1
  5478                           ;main.c: 380:      if (!V.calib) {
  5479  011FEE  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
  5480  011FF0  A4D8               	btfss	status,2,c
  5481  011FF2  D02D               	goto	l13480
  5482                           
  5483                           ; BSR set to: 1
  5484                           ;main.c: 381:       lp_filter(0.0, i, -1);
  5485  011FF4  0EFF               	movlw	255
  5486  011FF6  6EE6               	movwf	postinc1,c
  5487                           
  5488                           ;stkvar	_i @ sp[(-18)+14]
  5489  011FF8  0EFC               	movlw	-4
  5490  011FFA  50E3               	movf	plusw1,w,c
  5491  011FFC  6EE6               	movwf	postinc1,c
  5492  011FFE  0E00               	movlw	0
  5493  012000  6EE6               	movwf	postinc1,c
  5494  012002  0E00               	movlw	0
  5495  012004  6EE6               	movwf	postinc1,c
  5496  012006  0E00               	movlw	0
  5497  012008  6EE6               	movwf	postinc1,c
  5498  01200A  0E00               	movlw	0
  5499  01200C  6EE6               	movwf	postinc1,c
  5500  01200E  EC33  F0C4         	call	_lp_filter	;wreg free
  5501                           
  5502                           ;main.c: 382:       lp_filter(0.0, j, -1);
  5503  012012  0EFF               	movlw	255
  5504  012014  6EE6               	movwf	postinc1,c
  5505                           
  5506                           ;stkvar	_j @ sp[(-18)+13]
  5507  012016  0EFB               	movlw	-5
  5508  012018  50E3               	movf	plusw1,w,c
  5509  01201A  6EE6               	movwf	postinc1,c
  5510  01201C  0E00               	movlw	0
  5511  01201E  6EE6               	movwf	postinc1,c
  5512  012020  0E00               	movlw	0
  5513  012022  6EE6               	movwf	postinc1,c
  5514  012024  0E00               	movlw	0
  5515  012026  6EE6               	movwf	postinc1,c
  5516  012028  0E00               	movlw	0
  5517  01202A  6EE6               	movwf	postinc1,c
  5518  01202C  EC33  F0C4         	call	_lp_filter	;wreg free
  5519                           
  5520                           ;main.c: 383:       lp_filter(0.0, k, -1);
  5521  012030  0EFF               	movlw	255
  5522  012032  6EE6               	movwf	postinc1,c
  5523                           
  5524                           ;stkvar	_k @ sp[(-18)+12]
  5525  012034  0EFA               	movlw	-6
  5526  012036  50E3               	movf	plusw1,w,c
  5527  012038  6EE6               	movwf	postinc1,c
  5528  01203A  0E00               	movlw	0
  5529  01203C  6EE6               	movwf	postinc1,c
  5530  01203E  0E00               	movlw	0
  5531  012040  6EE6               	movwf	postinc1,c
  5532  012042  0E00               	movlw	0
  5533  012044  6EE6               	movwf	postinc1,c
  5534  012046  0E00               	movlw	0
  5535  012048  6EE6               	movwf	postinc1,c
  5536  01204A  EC33  F0C4         	call	_lp_filter	;wreg free
  5537  01204E                     l13480:
  5538                           
  5539                           ;main.c: 385:      V.calib = 1;
  5540  01204E  0E01               	movlw	1
  5541  012050  0101               	movlb	1	; () banked
  5542  012052  6FB3               	movwf	(_V+172)& (0+255),b	;volatile
  5543                           
  5544                           ; BSR set to: 1
  5545                           ;main.c: 386:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          i), C.calc[i], inp_index + 1);
  5546                           ;stkvar	_inp_index @ sp[(-17)+11]
  5547  012054  0EFA               	movlw	-6
  5548  012056  50E3               	movf	plusw1,w,c
  5549  012058  6E0B               	movwf	(btemp+10)^0,c
  5550  01205A  6A0C               	clrf	(btemp+11)^0,c
  5551  01205C  0E01               	movlw	1
  5552  01205E  260B               	addwf	(btemp+10)^0,f,c
  5553  012060  0E00               	movlw	0
  5554  012062  220C               	addwfc	(btemp+11)^0,f,c
  5555  012064  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5556  01206A  0060  F033  FFE6   	movff	btemp+11,postinc1
  5557                           
  5558                           ;stkvar	_i @ sp[(-19)+14]
  5559  012070  0EFB               	movlw	-5
  5560  012072  50E3               	movf	plusw1,w,c
  5561  012074  0D04               	mullw	4
  5562  012076  0EFF               	movlw	low _C
  5563  012078  24F3               	addwf	243,w,c
  5564  01207A  6ED9               	movwf	fsr2l,c
  5565  01207C  0E06               	movlw	high _C
  5566  01207E  20F4               	addwfc	prodh,w,c
  5567  012080  6EDA               	movwf	fsr2h,c
  5568  012082  006F FF7B FFE6     	movff	postinc2,postinc1
  5569  012088  006F FF7B FFE6     	movff	postinc2,postinc1
  5570  01208E  006F FF7B FFE6     	movff	postinc2,postinc1
  5571  012094  006F FF7B FFE6     	movff	postinc2,postinc1
  5572                           
  5573                           ;stkvar	_i @ sp[(-23)+14]
  5574  01209A  0EF7               	movlw	-9
  5575  01209C  50E3               	movf	plusw1,w,c
  5576  01209E  6EE6               	movwf	postinc1,c
  5577  0120A0  EC00  F0E1         	call	_get_raw_result	;wreg free
  5578  0120A4  0060  F007  FFE6   	movff	btemp,postinc1
  5579  0120AA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5580  0120B0  0E8A               	movlw	low STR_40
  5581  0120B2  6EE6               	movwf	postinc1,c
  5582  0120B4  0EFE               	movlw	high STR_40
  5583  0120B6  6EE6               	movwf	postinc1,c
  5584  0120B8  0E00               	movlw	0
  5585  0120BA  6EE6               	movwf	postinc1,c
  5586  0120BC  0E00               	movlw	0
  5587  0120BE  6EE6               	movwf	postinc1,c
  5588  0120C0  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  5589  0120C4  0060  F007  FFE6   	movff	btemp,postinc1
  5590  0120CA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5591  0120D0  0E0C               	movlw	12
  5592  0120D2  6EE6               	movwf	postinc1,c
  5593  0120D4  ECF4  F0CE         	call	_sprintf	;wreg free
  5594                           
  5595                           ; BSR set to: 0
  5596                           ;main.c: 387:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          j), C.calc[j], inp_index + 2);
  5597                           ;stkvar	_inp_index @ sp[(-17)+11]
  5598  0120D8  0EFA               	movlw	-6
  5599  0120DA  50E3               	movf	plusw1,w,c
  5600  0120DC  6E0B               	movwf	(btemp+10)^0,c
  5601  0120DE  6A0C               	clrf	(btemp+11)^0,c
  5602  0120E0  0E02               	movlw	2
  5603  0120E2  260B               	addwf	(btemp+10)^0,f,c
  5604  0120E4  0E00               	movlw	0
  5605  0120E6  220C               	addwfc	(btemp+11)^0,f,c
  5606  0120E8  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5607  0120EE  0060  F033  FFE6   	movff	btemp+11,postinc1
  5608                           
  5609                           ;stkvar	_j @ sp[(-19)+13]
  5610  0120F4  0EFA               	movlw	-6
  5611  0120F6  50E3               	movf	plusw1,w,c
  5612  0120F8  0D04               	mullw	4
  5613  0120FA  0EFF               	movlw	low _C
  5614  0120FC  24F3               	addwf	243,w,c
  5615  0120FE  6ED9               	movwf	fsr2l,c
  5616  012100  0E06               	movlw	high _C
  5617  012102  20F4               	addwfc	prodh,w,c
  5618  012104  6EDA               	movwf	fsr2h,c
  5619  012106  006F FF7B FFE6     	movff	postinc2,postinc1
  5620  01210C  006F FF7B FFE6     	movff	postinc2,postinc1
  5621  012112  006F FF7B FFE6     	movff	postinc2,postinc1
  5622  012118  006F FF7B FFE6     	movff	postinc2,postinc1
  5623                           
  5624                           ;stkvar	_j @ sp[(-23)+13]
  5625  01211E  0EF6               	movlw	-10
  5626  012120  50E3               	movf	plusw1,w,c
  5627  012122  6EE6               	movwf	postinc1,c
  5628  012124  EC00  F0E1         	call	_get_raw_result	;wreg free
  5629  012128  0060  F007  FFE6   	movff	btemp,postinc1
  5630  01212E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5631  012134  0E8A               	movlw	low STR_40
  5632  012136  6EE6               	movwf	postinc1,c
  5633  012138  0EFE               	movlw	high STR_40
  5634  01213A  6EE6               	movwf	postinc1,c
  5635  01213C  0E00               	movlw	0
  5636  01213E  6EE6               	movwf	postinc1,c
  5637  012140  0E01               	movlw	1
  5638  012142  6EE6               	movwf	postinc1,c
  5639  012144  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  5640  012148  0060  F007  FFE6   	movff	btemp,postinc1
  5641  01214E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5642  012154  0E0C               	movlw	12
  5643  012156  6EE6               	movwf	postinc1,c
  5644  012158  ECF4  F0CE         	call	_sprintf	;wreg free
  5645                           
  5646                           ; BSR set to: 0
  5647                           ;main.c: 388:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          k), C.calc[k], inp_index + 3);
  5648                           ;stkvar	_inp_index @ sp[(-17)+11]
  5649  01215C  0EFA               	movlw	-6
  5650  01215E  50E3               	movf	plusw1,w,c
  5651  012160  6E0B               	movwf	(btemp+10)^0,c
  5652  012162  6A0C               	clrf	(btemp+11)^0,c
  5653  012164  0E03               	movlw	3
  5654  012166  260B               	addwf	(btemp+10)^0,f,c
  5655  012168  0E00               	movlw	0
  5656  01216A  220C               	addwfc	(btemp+11)^0,f,c
  5657  01216C  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5658  012172  0060  F033  FFE6   	movff	btemp+11,postinc1
  5659                           
  5660                           ;stkvar	_k @ sp[(-19)+12]
  5661  012178  0EF9               	movlw	-7
  5662  01217A  50E3               	movf	plusw1,w,c
  5663  01217C  0D04               	mullw	4
  5664  01217E  0EFF               	movlw	low _C
  5665  012180  24F3               	addwf	243,w,c
  5666  012182  6ED9               	movwf	fsr2l,c
  5667  012184  0E06               	movlw	high _C
  5668  012186  20F4               	addwfc	prodh,w,c
  5669  012188  6EDA               	movwf	fsr2h,c
  5670  01218A  006F FF7B FFE6     	movff	postinc2,postinc1
  5671  012190  006F FF7B FFE6     	movff	postinc2,postinc1
  5672  012196  006F FF7B FFE6     	movff	postinc2,postinc1
  5673  01219C  006F FF7B FFE6     	movff	postinc2,postinc1
  5674                           
  5675                           ;stkvar	_k @ sp[(-23)+12]
  5676  0121A2  0EF5               	movlw	-11
  5677  0121A4  50E3               	movf	plusw1,w,c
  5678  0121A6  6EE6               	movwf	postinc1,c
  5679  0121A8  EC00  F0E1         	call	_get_raw_result	;wreg free
  5680  0121AC  0060  F007  FFE6   	movff	btemp,postinc1
  5681  0121B2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5682  0121B8  0E8A               	movlw	low STR_40
  5683  0121BA  6EE6               	movwf	postinc1,c
  5684  0121BC  0EFE               	movlw	high STR_40
  5685  0121BE  6EE6               	movwf	postinc1,c
  5686  0121C0  0E00               	movlw	0
  5687  0121C2  6EE6               	movwf	postinc1,c
  5688  0121C4  0E02               	movlw	2
  5689  0121C6  6EE6               	movwf	postinc1,c
  5690  0121C8  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  5691  0121CC  0060  F007  FFE6   	movff	btemp,postinc1
  5692  0121D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5693  0121D8  0E0C               	movlw	12
  5694  0121DA  6EE6               	movwf	postinc1,c
  5695  0121DC  ECF4  F0CE         	call	_sprintf	;wreg free
  5696                           
  5697                           ;main.c: 389:      break;
  5698  0121E0  D016               	goto	l13492
  5699  0121E2                     l13490:
  5700  0121E2  0101               	movlb	1	; () banked
  5701  0121E4  51C6               	movf	_H& (0+255),w,b
  5702  0121E6  6E0B               	movwf	(btemp+10)^0,c
  5703  0121E8  6A0C               	clrf	(btemp+11)^0,c
  5704                           
  5705                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5706                           ; Switch size 1, requested type "simple"
  5707                           ; Number of cases is 1, Range of values is 0 to 0
  5708                           ; switch strategies available:
  5709                           ; Name         Instructions Cycles
  5710                           ; simple_byte            4     3 (average)
  5711                           ;	Chosen strategy is simple_byte
  5712  0121EA  500C               	movf	(btemp+11)^0,w,c
  5713  0121EC  0A00               	xorlw	0	; case 0
  5714  0121EE  A4D8               	btfss	status,2,c
  5715  0121F0  D00E               	goto	l13492
  5716                           
  5717                           ; BSR set to: 1
  5718                           ; Switch size 1, requested type "simple"
  5719                           ; Number of cases is 4, Range of values is 0 to 3
  5720                           ; switch strategies available:
  5721                           ; Name         Instructions Cycles
  5722                           ; simple_byte           13     7 (average)
  5723                           ;	Chosen strategy is simple_byte
  5724  0121F2  500B               	movf	(btemp+10)^0,w,c
  5725  0121F4  0A00               	xorlw	0	; case 0
  5726  0121F6  B4D8               	btfsc	status,2,c
  5727  0121F8  D4D6               	goto	l1374
  5728  0121FA  0A01               	xorlw	1	; case 1
  5729  0121FC  B4D8               	btfsc	status,2,c
  5730  0121FE  EFD1  F08C         	goto	l1364
  5731  012202  0A03               	xorlw	3	; case 2
  5732  012204  B4D8               	btfsc	status,2,c
  5733  012206  D5E3               	goto	l1375
  5734  012208  0A01               	xorlw	1	; case 3
  5735  01220A  B4D8               	btfsc	status,2,c
  5736  01220C  D6F0               	goto	l13476
  5737  01220E                     l13492:
  5738                           
  5739                           ;main.c: 393:     clear_hid_pflags(&H);
  5740  01220E  0EC6               	movlw	low _H
  5741  012210  6EE6               	movwf	postinc1,c
  5742  012212  0E01               	movlw	high _H
  5743  012214  6EE6               	movwf	postinc1,c
  5744  012216  ECF0  F0DB         	call	_clear_hid_pflags	;wreg free
  5745                           
  5746                           ;main.c: 395:    StartTimer(TMR_DISPLAY, 250);
  5747  01221A  0EFA               	movlw	250
  5748  01221C  6EE6               	movwf	postinc1,c
  5749  01221E  0E00               	movlw	0
  5750  012220  6EE6               	movwf	postinc1,c
  5751  012222  0E0A               	movlw	10
  5752  012224  6EE6               	movwf	postinc1,c
  5753  012226  ECDC  F0DC         	call	_StartTimer	;wreg free
  5754                           
  5755                           ;main.c: 396:    V.enter = check_enter_button(&H);
  5756  01222A  0EC6               	movlw	low _H
  5757  01222C  6EE6               	movwf	postinc1,c
  5758  01222E  0E01               	movlw	high _H
  5759  012230  6EE6               	movwf	postinc1,c
  5760  012232  EC46  F0D8         	call	_check_enter_button	;wreg free
  5761  012236  5001               	movf	btemp^0,w,c
  5762  012238  0101               	movlb	1	; () banked
  5763  01223A  6FB4               	movwf	(_V+173)& (0+255),b	;volatile
  5764                           
  5765                           ; BSR set to: 1
  5766                           ;main.c: 397:    if (V.enter && (H.hid_display != HID_AUX)) {
  5767  01223C  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  5768  01223E  B4D8               	btfsc	status,2,c
  5769  012240  D011               	goto	l13506
  5770                           
  5771                           ; BSR set to: 1
  5772  012242  0E03               	movlw	3
  5773  012244  19C6               	xorwf	_H& (0+255),w,b
  5774  012246  B4D8               	btfsc	status,2,c
  5775  012248  D00D               	goto	l13506
  5776                           
  5777                           ; BSR set to: 1
  5778                           ;main.c: 398:     V.enter = 0;
  5779  01224A  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  5780                           
  5781                           ; BSR set to: 1
  5782                           ;main.c: 399:     V.screen = ~V.screen;
  5783  01224C  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  5784  01224E  D002               	goto	u12920
  5785  012250  0E01               	movlw	1
  5786  012252  D001               	goto	u12926
  5787  012254                     u12920:
  5788  012254  0E00               	movlw	0
  5789  012256                     u12926:
  5790  012256  0AFF               	xorlw	255
  5791  012258  6E0C               	movwf	(btemp+11)^0,c
  5792  01225A  51A3               	movf	(_V+156)& (0+255),w,b	;volatile
  5793  01225C  180C               	xorwf	(btemp+11)^0,w,c
  5794  01225E  0BFE               	andlw	-2
  5795  012260  180C               	xorwf	(btemp+11)^0,w,c
  5796  012262  6FA3               	movwf	(_V+156)& (0+255),b	;volatile
  5797  012264                     l13506:
  5798                           
  5799                           ; BSR set to: 1
  5800                           ;main.c: 401:    set_vterm(V.screen);
  5801  012264  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  5802  012266  D002               	goto	u12930
  5803  012268  0E01               	movlw	1
  5804  01226A  D001               	goto	u12936
  5805  01226C                     u12930:
  5806  01226C  0E00               	movlw	0
  5807  01226E                     u12936:
  5808  01226E  6EE6               	movwf	postinc1,c
  5809  012270  ECE2  F0E0         	call	_set_vterm	;wreg free
  5810                           
  5811                           ;main.c: 402:    update_lcd(V.screen);
  5812  012274  0101               	movlb	1	; () banked
  5813  012276  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  5814  012278  D002               	goto	u12940
  5815  01227A  0E01               	movlw	1
  5816  01227C  D001               	goto	u12946
  5817  01227E                     u12940:
  5818  01227E  0E00               	movlw	0
  5819  012280                     u12946:
  5820  012280  6EE6               	movwf	postinc1,c
  5821  012282  EC6C  F0CE         	call	_update_lcd	;wreg free
  5822                           
  5823                           ;main.c: 404:    wait_lcd_done();
  5824  012286  EC0F  F0E1         	call	_wait_lcd_done	;wreg free
  5825                           
  5826                           ; BSR set to: 0
  5827                           ;main.c: 405:    set_dac();
  5828  01228A  EC49  F0D5         	call	_set_dac	;wreg free
  5829  01228E                     l13514:
  5830                           
  5831                           ;main.c: 411:   check_help(V.flipper);
  5832  01228E  0101               	movlb	1	; () banked
  5833  012290  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  5834  012292  6EE6               	movwf	postinc1,c
  5835  012294  EC3A  F0C1         	call	_check_help	;wreg free
  5836                           
  5837                           ;main.c: 413:   if (V.enter) {
  5838  012298  0101               	movlb	1	; () banked
  5839  01229A  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  5840  01229C  B4D8               	btfsc	status,2,c
  5841  01229E  D062               	goto	l1380
  5842                           
  5843                           ; BSR set to: 1
  5844                           ;main.c: 414:    V.enter = 0;
  5845  0122A0  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  5846                           
  5847                           ;main.c: 415:    V.calib = 0;
  5848  0122A2  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5849                           
  5850                           ; BSR set to: 1
  5851                           ;main.c: 416:    inp_index += 3;
  5852                           ;stkvar	_inp_index @ sp[(-17)+11]
  5853  0122A4  0EFA               	movlw	-6
  5854  0122A6  006F FF8C  F001    	movff	plusw1,btemp
  5855  0122AC  0E03               	movlw	3
  5856  0122AE  2601               	addwf	btemp^0,f,c
  5857  0122B0  0EFA               	movlw	-6
  5858  0122B2  0060  F007  FFE3   	movff	btemp,plusw1
  5859                           
  5860                           ;main.c: 417:    if (inp_index > 9)
  5861                           ;stkvar	_inp_index @ sp[(-17)+11]
  5862  0122B8  0EFA               	movlw	-6
  5863  0122BA  006F FF8C  F001    	movff	plusw1,btemp
  5864  0122C0  0E09               	movlw	9
  5865  0122C2  6401               	cpfsgt	btemp^0,c
  5866  0122C4  D03A               	goto	l13542
  5867                           
  5868                           ; BSR set to: 1
  5869                           ;main.c: 418:     inp_index = 0;
  5870                           ;stkvar	_inp_index @ sp[(-17)+11]
  5871  0122C6  0EFA               	movlw	-6
  5872  0122C8  6AE3               	clrf	plusw1,c
  5873  0122CA  D037               	goto	l13542
  5874  0122CC                     l13524:
  5875                           
  5876                           ; BSR set to: 1
  5877                           ;main.c: 421:     i = C_BATT;
  5878                           ;stkvar	_i @ sp[(-17)+14]
  5879  0122CC  0EFD               	movlw	-3
  5880  0122CE  6AE3               	clrf	plusw1,c
  5881                           
  5882                           ; BSR set to: 1
  5883                           ;main.c: 422:     j = C_PV;
  5884                           ;stkvar	_j @ sp[(-17)+13]
  5885  0122D0  0EFC               	movlw	-4
  5886  0122D2  6AE3               	clrf	plusw1,c
  5887  0122D4  2AE3               	incf	plusw1,f,c
  5888                           
  5889                           ; BSR set to: 1
  5890                           ;main.c: 423:     k = V_CC;
  5891                           ;stkvar	_k @ sp[(-17)+12]
  5892  0122D6  0EFB               	movlw	-5
  5893  0122D8  6AE3               	clrf	plusw1,c
  5894  0122DA  82E3               	bsf	plusw1,1,c
  5895                           
  5896                           ;main.c: 424:     break;
  5897  0122DC  D043               	goto	l1380
  5898  0122DE                     l13530:
  5899                           
  5900                           ; BSR set to: 1
  5901                           ;main.c: 426:     i = V_BAT;
  5902                           ;stkvar	_i @ sp[(-17)+14]
  5903  0122DE  0EFD               	movlw	-3
  5904  0122E0  6AE3               	clrf	plusw1,c
  5905  0122E2  84E3               	bsf	plusw1,2,c
  5906                           
  5907                           ;main.c: 427:     j = V_PV;
  5908                           ;stkvar	_j @ sp[(-17)+13]
  5909  0122E4  0EFC               	movlw	-4
  5910  0122E6  6AE3               	clrf	plusw1,c
  5911  0122E8  80E3               	bsf	plusw1,0,c
  5912  0122EA  84E3               	bsf	plusw1,2,c	;indir
  5913                           
  5914                           ;main.c: 428:     k = V_CBUS;
  5915                           ;stkvar	_k @ sp[(-17)+12]
  5916  0122EC  0EFB               	movlw	-5
  5917  0122EE  6AE3               	clrf	plusw1,c
  5918  0122F0  82E3               	bsf	plusw1,1,c
  5919  0122F2  84E3               	bsf	plusw1,2,c	;indir
  5920                           
  5921                           ;main.c: 429:     break;
  5922  0122F4  D037               	goto	l1380
  5923  0122F6                     l13532:
  5924                           
  5925                           ; BSR set to: 1
  5926                           ;main.c: 431:     i = V_BBAT;
  5927                           ;stkvar	_i @ sp[(-17)+14]
  5928  0122F6  0EFD               	movlw	-3
  5929  0122F8  6AE3               	clrf	plusw1,c
  5930  0122FA  82E3               	bsf	plusw1,1,c
  5931  0122FC  86E3               	bsf	plusw1,3,c	;indir
  5932                           
  5933                           ; BSR set to: 1
  5934                           ;main.c: 432:     j = V_TEMP;
  5935  0122FE  0E0B               	movlw	11
  5936  012300  6E0C               	movwf	(btemp+11)^0,c
  5937                           
  5938                           ;stkvar	_j @ sp[(-17)+13]
  5939  012302  0EFC               	movlw	-4
  5940  012304  0060  F033  FFE3   	movff	btemp+11,plusw1
  5941                           
  5942                           ; BSR set to: 1
  5943                           ;main.c: 433:     k = V_INVERTER;
  5944                           ;stkvar	_k @ sp[(-17)+12]
  5945  01230A  0EFB               	movlw	-5
  5946  01230C  6AE3               	clrf	plusw1,c
  5947  01230E  84E3               	bsf	plusw1,2,c
  5948  012310  86E3               	bsf	plusw1,3,c	;indir
  5949                           
  5950                           ;main.c: 434:     break;
  5951  012312  D028               	goto	l1380
  5952  012314                     l13538:
  5953                           
  5954                           ; BSR set to: 1
  5955                           ;main.c: 436:     i = V_LIGHT_SENSOR;
  5956  012314  0E0D               	movlw	13
  5957  012316  6E0C               	movwf	(btemp+11)^0,c
  5958                           
  5959                           ;stkvar	_i @ sp[(-17)+14]
  5960  012318  0EFD               	movlw	-3
  5961  01231A  0060  F033  FFE3   	movff	btemp+11,plusw1
  5962                           
  5963                           ;main.c: 437:     j = V_LIGHT_SENSOR;
  5964  012320  0E0D               	movlw	13
  5965  012322  6E0C               	movwf	(btemp+11)^0,c
  5966                           
  5967                           ;stkvar	_j @ sp[(-17)+13]
  5968  012324  0EFC               	movlw	-4
  5969  012326  0060  F033  FFE3   	movff	btemp+11,plusw1
  5970                           
  5971                           ;main.c: 438:     k = V_LIGHT_SENSOR;
  5972  01232C  0E0D               	movlw	13
  5973  01232E  6E0C               	movwf	(btemp+11)^0,c
  5974                           
  5975                           ;stkvar	_k @ sp[(-17)+12]
  5976  012330  0EFB               	movlw	-5
  5977  012332  0060  F033  FFE3   	movff	btemp+11,plusw1
  5978                           
  5979                           ;main.c: 439:     break;
  5980  012338  D015               	goto	l1380
  5981  01233A                     l13542:
  5982                           
  5983                           ; BSR set to: 1
  5984                           ;stkvar	_inp_index @ sp[(-17)+11]
  5985  01233A  0EFA               	movlw	-6
  5986  01233C  50E3               	movf	plusw1,w,c
  5987  01233E  6E0B               	movwf	(btemp+10)^0,c
  5988  012340  6A0C               	clrf	(btemp+11)^0,c
  5989                           
  5990                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5991                           ; Switch size 1, requested type "simple"
  5992                           ; Number of cases is 1, Range of values is 0 to 0
  5993                           ; switch strategies available:
  5994                           ; Name         Instructions Cycles
  5995                           ; simple_byte            4     3 (average)
  5996                           ;	Chosen strategy is simple_byte
  5997  012342  500C               	movf	(btemp+11)^0,w,c
  5998  012344  0A00               	xorlw	0	; case 0
  5999  012346  A4D8               	btfss	status,2,c
  6000  012348  D00D               	goto	l1380
  6001                           
  6002                           ; BSR set to: 1
  6003                           ; Switch size 1, requested type "simple"
  6004                           ; Number of cases is 4, Range of values is 0 to 9
  6005                           ; switch strategies available:
  6006                           ; Name         Instructions Cycles
  6007                           ; simple_byte           13     7 (average)
  6008                           ;	Chosen strategy is simple_byte
  6009  01234A  500B               	movf	(btemp+10)^0,w,c
  6010  01234C  0A00               	xorlw	0	; case 0
  6011  01234E  B4D8               	btfsc	status,2,c
  6012  012350  D7BD               	goto	l13524
  6013  012352  0A03               	xorlw	3	; case 3
  6014  012354  B4D8               	btfsc	status,2,c
  6015  012356  D7C3               	goto	l13530
  6016  012358  0A05               	xorlw	5	; case 6
  6017  01235A  B4D8               	btfsc	status,2,c
  6018  01235C  D7CC               	goto	l13532
  6019  01235E  0A0F               	xorlw	15	; case 9
  6020  012360  B4D8               	btfsc	status,2,c
  6021  012362  D7D8               	goto	l13538
  6022  012364                     l1380:
  6023                           
  6024                           ; BSR set to: 1
  6025                           ;main.c: 448:   if (V.set_sequ) {
  6026  012364  A1A2               	btfss	(_V+155)& (0+255),0,b	;volatile
  6027  012366  EF83  F08C         	goto	l13420
  6028                           
  6029                           ; BSR set to: 1
  6030                           ;main.c: 449:    if (TimerDone(TMR_INFO)) {
  6031  01236A  0E07               	movlw	7
  6032  01236C  6EE6               	movwf	postinc1,c
  6033  01236E  ECFD  F0DE         	call	_TimerDone	;wreg free
  6034  012372  5001               	movf	btemp^0,w,c
  6035  012374  B4D8               	btfsc	status,2,c
  6036  012376  D00C               	goto	l13552
  6037                           
  6038                           ;main.c: 450:     V.set_sequ = 0;
  6039  012378  0101               	movlb	1	; () banked
  6040  01237A  91A2               	bcf	(_V+155)& (0+255),0,b	;volatile
  6041                           
  6042                           ; BSR set to: 1
  6043                           ;main.c: 451:     set_vterm(0);
  6044  01237C  0E00               	movlw	0
  6045  01237E  6EE6               	movwf	postinc1,c
  6046  012380  ECE2  F0E0         	call	_set_vterm	;wreg free
  6047                           
  6048                           ;main.c: 452:     update_lcd(0);
  6049  012384  0E00               	movlw	0
  6050  012386  6EE6               	movwf	postinc1,c
  6051  012388  EC6C  F0CE         	call	_update_lcd	;wreg free
  6052                           
  6053                           ;main.c: 453:    } else {
  6054  01238C  EF83  F08C         	goto	l13420
  6055  012390                     l13552:
  6056                           
  6057                           ;main.c: 454:     set_vterm(2);
  6058  012390  0E02               	movlw	2
  6059  012392  6EE6               	movwf	postinc1,c
  6060  012394  ECE2  F0E0         	call	_set_vterm	;wreg free
  6061                           
  6062                           ;main.c: 455:     update_lcd(2);
  6063  012398  0E02               	movlw	2
  6064  01239A  6EE6               	movwf	postinc1,c
  6065  01239C  EC6C  F0CE         	call	_update_lcd	;wreg free
  6066  0123A0  EF83  F08C         	goto	l13420
  6067  0123A4                     __end_of_main:
  6068                           	opt callstack 0
  6069                           
  6070 ;; *************** function _static_soc *****************
  6071 ;; Defined at:
  6072 ;;		line 117 in file "mbmc.c"
  6073 ;; Parameters:    Size  Location     Type
  6074 ;;		None
  6075 ;; Auto vars:     Size  Location     Type
  6076 ;;		None
  6077 ;; Return value:  Size  Location     Type
  6078 ;;                  1  [STACK] void 
  6079 ;; Registers used:
  6080 ;;		wreg, fsr2l, fsr2h
  6081 ;; Tracked objects:
  6082 ;;		On entry : 0/0
  6083 ;;		On exit  : 0/0
  6084 ;;		Unchanged: 0/0
  6085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6090 ;;Total ram usage:        0 bytes
  6091 ;; Hardware stack levels used:    1
  6092 ;; Hardware stack levels required when called:   15
  6093 ;; This function calls:
  6094 ;;		Nothing
  6095 ;; This function is called by:
  6096 ;;		_main
  6097 ;; This function uses a reentrant model
  6098 ;;
  6099                           
  6100                           	psect	text1
  6101  01B42C                     __ptext1:
  6102                           	opt callstack 0
  6103  01B42C                     _static_soc:
  6104                           	opt callstack 15
  6105                           
  6106                           ;mbmc.c: 119:  C.runtime = 120;
  6107                           
  6108                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6109                           ;incstack = 0
  6110  01B42C  0E78               	movlw	120
  6111  01B42E  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
  6112  01B434  0E00               	movlw	0
  6113  01B436  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
  6114                           
  6115                           ;mbmc.c: 120:  C.soc = 100;
  6116  01B43C  0E64               	movlw	100
  6117  01B43E  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
  6118  01B444  0E00               	movlw	0
  6119  01B446  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
  6120                           
  6121                           ;mbmc.c: 121:  C.dynamic_ah = C.bank_ah;
  6122  01B44C  EE21  F38B         	lfsr	2,_C+140	;volatile
  6123  01B450  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
  6124  01B456  006F FF78  F790    	movff	postinc2,_C+145	;volatile
  6125  01B45C  006F FF78  F791    	movff	postinc2,_C+146	;volatile
  6126  01B462  006F FF74  F792    	movff	postdec2,_C+147	;volatile
  6127                           
  6128                           ;mbmc.c: 122:  C.dynamic_ah_adj = C.dynamic_ah;
  6129  01B468  EE21  F38F         	lfsr	2,_C+144	;volatile
  6130  01B46C  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  6131  01B472  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  6132  01B478  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  6133  01B47E  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  6134                           
  6135                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6136  01B484  0012               	return		;funcret
  6137  01B486                     __end_of_static_soc:
  6138                           	opt callstack 0
  6139                           
  6140 ;; *************** function _start_switch_handler *****************
  6141 ;; Defined at:
  6142 ;;		line 122 in file "dio.c"
  6143 ;; Parameters:    Size  Location     Type
  6144 ;;		None
  6145 ;; Auto vars:     Size  Location     Type
  6146 ;;		None
  6147 ;; Return value:  Size  Location     Type
  6148 ;;                  1  [STACK] void 
  6149 ;; Registers used:
  6150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  6151 ;; Tracked objects:
  6152 ;;		On entry : 1/0
  6153 ;;		On exit  : 3F/39
  6154 ;;		Unchanged: 0/0
  6155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6160 ;;Total ram usage:        0 bytes
  6161 ;; Hardware stack levels used:    1
  6162 ;; Hardware stack levels required when called:   16
  6163 ;; This function calls:
  6164 ;;		_INT1_SetInterruptHandler
  6165 ;; This function is called by:
  6166 ;;		_main
  6167 ;; This function uses a reentrant model
  6168 ;;
  6169                           
  6170                           	psect	text2
  6171  01C148                     __ptext2:
  6172                           	opt callstack 0
  6173  01C148                     _start_switch_handler:
  6174                           	opt callstack 14
  6175                           
  6176                           ;dio.c: 124:  (PIE5bits.INT1IE = 0);
  6177                           
  6178                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6179                           ;incstack = 0
  6180  01C148  0139               	movlb	57	; () banked
  6181  01C14A  9195               	bcf	149,0,b	;volatile
  6182                           
  6183                           ; BSR set to: 57
  6184                           ;dio.c: 125:  INT1_SetInterruptHandler(switch_handler);
  6185  01C14C  0E24               	movlw	low _switch_handler
  6186  01C14E  6EE6               	movwf	postinc1,c
  6187  01C150  0E97               	movlw	high _switch_handler
  6188  01C152  6EE6               	movwf	postinc1,c
  6189  01C154  0E01               	movlw	low (_switch_handler shr (0+16))
  6190  01C156  6EE6               	movwf	postinc1,c
  6191  01C158  EC89  F0DF         	call	_INT1_SetInterruptHandler	;wreg free
  6192                           
  6193                           ;dio.c: 126:  S.button[SNULL].sw = SW_INVALID;
  6194  01C15C  0E02               	movlw	2
  6195  01C15E  0102               	movlb	2	; () banked
  6196  01C160  6F77               	movwf	(_S+35)& (0+255),b	;volatile
  6197                           
  6198                           ; BSR set to: 2
  6199                           ;dio.c: 127:  (PIE5bits.INT1IE = 1);
  6200  01C162  0139               	movlb	57	; () banked
  6201  01C164  8195               	bsf	149,0,b	;volatile
  6202                           
  6203                           ; BSR set to: 57
  6204                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  6205  01C166  0012               	return		;funcret
  6206  01C168                     __end_of_start_switch_handler:
  6207                           	opt callstack 0
  6208                           
  6209 ;; *************** function _srand *****************
  6210 ;; Defined at:
  6211 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  6212 ;; Parameters:    Size  Location     Type
  6213 ;;  s               2  [STACK] unsigned int 
  6214 ;; Auto vars:     Size  Location     Type
  6215 ;;		None
  6216 ;; Return value:  Size  Location     Type
  6217 ;;                  1  [STACK] void 
  6218 ;; Registers used:
  6219 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  6220 ;; Tracked objects:
  6221 ;;		On entry : 0/0
  6222 ;;		On exit  : 3F/1
  6223 ;;		Unchanged: 0/0
  6224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6229 ;;Total ram usage:        0 bytes
  6230 ;; Hardware stack levels used:    1
  6231 ;; Hardware stack levels required when called:   15
  6232 ;; This function calls:
  6233 ;;		Nothing
  6234 ;; This function is called by:
  6235 ;;		_main
  6236 ;; This function uses a reentrant model
  6237 ;;
  6238                           
  6239                           	psect	text3
  6240  01BBCC                     __ptext3:
  6241                           	opt callstack 0
  6242  01BBCC                     _srand:
  6243                           	opt callstack 15
  6244                           
  6245                           ;stkvar	_s @ sp[(0)+-2]
  6246                           
  6247                           ; BSR set to: 57
  6248                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6249                           ;incstack = 0
  6250  01BBCC  0EFE               	movlw	-2
  6251  01BBCE  50E3               	movf	plusw1,w,c
  6252  01BBD0  0FFF               	addlw	255
  6253  01BBD2  6E0B               	movwf	(btemp+10)^0,c
  6254  01BBD4  0EFF               	movlw	-1
  6255  01BBD6  006F FF8C  F00C    	movff	plusw1,btemp+11
  6256  01BBDC  0EFF               	movlw	255
  6257  01BBDE  220C               	addwfc	(btemp+11)^0,f,c
  6258  01BBE0  0060  F02C  F1F3   	movff	btemp+10,_seed
  6259  01BBE6  0060  F030  F1F4   	movff	btemp+11,_seed+1
  6260  01BBEC  0101               	movlb	1	; () banked
  6261  01BBEE  6BF5               	clrf	(_seed+2)& (0+255),b
  6262  01BBF0  6BF6               	clrf	(_seed+3)& (0+255),b
  6263  01BBF2  6BF7               	clrf	(_seed+4)& (0+255),b
  6264  01BBF4  6BF8               	clrf	(_seed+5)& (0+255),b
  6265  01BBF6  6BF9               	clrf	(_seed+6)& (0+255),b
  6266  01BBF8  6BFA               	clrf	(_seed+7)& (0+255),b
  6267                           
  6268                           ; BSR set to: 1
  6269                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  6270  01BBFA  52E5               	movf	postdec1,f,c
  6271  01BBFC  52E5               	movf	postdec1,f,c
  6272  01BBFE  0012               	return		;funcret
  6273  01BC00                     __end_of_srand:
  6274                           	opt callstack 0
  6275                           
  6276 ;; *************** function _spinners *****************
  6277 ;; Defined at:
  6278 ;;		line 146 in file "mbmc.c"
  6279 ;; Parameters:    Size  Location     Type
  6280 ;;  shape           1  [STACK] unsigned char 
  6281 ;;  reset           1  [STACK] const unsigned char 
  6282 ;; Auto vars:     Size  Location     Type
  6283 ;;  c               1  [STACK] unsigned char 
  6284 ;; Return value:  Size  Location     Type
  6285 ;;                  1  [STACK] unsigned char 
  6286 ;; Registers used:
  6287 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
  6288 ;; Tracked objects:
  6289 ;;		On entry : 0/0
  6290 ;;		On exit  : 0/0
  6291 ;;		Unchanged: 0/0
  6292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6297 ;;Total ram usage:        0 bytes
  6298 ;; Hardware stack levels used:    1
  6299 ;; Hardware stack levels required when called:   16
  6300 ;; This function calls:
  6301 ;;		_strlen
  6302 ;; This function is called by:
  6303 ;;		_main
  6304 ;; This function uses a reentrant model
  6305 ;;
  6306                           
  6307                           	psect	text4
  6308  019EF2                     __ptext4:
  6309                           	opt callstack 0
  6310  019EF2                     _spinners:
  6311                           	opt callstack 0
  6312                           
  6313                           ; BSR set to: 1
  6314                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6315  019EF2  52E6               	movf	postinc1,f,c
  6316                           
  6317                           ;mbmc.c: 146: char spinners(uint8_t shape, const uint8_t reset);mbmc.c: 147: {;mbmc.c: 1
      +                          48:  static uint8_t s[6];;mbmc.c: 149:  char c;;mbmc.c: 151:  if (shape > (6 - 1))
  6318                           ;stkvar	_shape @ sp[(-1)+-1]
  6319                           
  6320                           ;incstack = 0
  6321  019EF4  0EFE               	movlw	-2
  6322  019EF6  006F FF8C  F001    	movff	plusw1,btemp
  6323  019EFC  0E05               	movlw	5
  6324  019EFE  6401               	cpfsgt	btemp^0,c
  6325  019F00  D002               	goto	l1939
  6326                           
  6327                           ;mbmc.c: 152:   shape = 0;
  6328                           ;stkvar	_shape @ sp[(-1)+-1]
  6329  019F02  0EFE               	movlw	-2
  6330  019F04  6AE3               	clrf	plusw1,c
  6331  019F06                     l1939:
  6332                           
  6333                           ;mbmc.c: 153:  if (reset)
  6334                           ;stkvar	_reset @ sp[(-1)+-2]
  6335  019F06  0EFD               	movlw	-3
  6336  019F08  50E3               	movf	plusw1,w,c
  6337  019F0A  B4D8               	btfsc	status,2,c
  6338  019F0C  D00C               	goto	l11046
  6339                           
  6340                           ;mbmc.c: 154:   s[shape] = 0;
  6341                           ;stkvar	_shape @ sp[(-1)+-1]
  6342  019F0E  0EFE               	movlw	-2
  6343  019F10  50E3               	movf	plusw1,w,c
  6344  019F12  6E0B               	movwf	(btemp+10)^0,c
  6345  019F14  6A0C               	clrf	(btemp+11)^0,c
  6346  019F16  0EE1               	movlw	low spinners@s
  6347  019F18  240B               	addwf	(btemp+10)^0,w,c
  6348  019F1A  6ED9               	movwf	fsr2l,c
  6349  019F1C  0E01               	movlw	high spinners@s
  6350  019F1E  200C               	addwfc	(btemp+11)^0,w,c
  6351  019F20  6EDA               	movwf	fsr2h,c
  6352  019F22  0E00               	movlw	0
  6353  019F24  6EDF               	movwf	indf2,c
  6354  019F26                     l11046:
  6355                           
  6356                           ;mbmc.c: 155:  c = spin[shape][s[shape]];
  6357                           ;stkvar	_shape @ sp[(-1)+-1]
  6358  019F26  0EFE               	movlw	-2
  6359  019F28  50E3               	movf	plusw1,w,c
  6360  019F2A  0D14               	mullw	20
  6361  019F2C  0E4B               	movlw	low _spin
  6362  019F2E  6E0B               	movwf	(btemp+10)^0,c
  6363  019F30  0EFB               	movlw	high _spin
  6364  019F32  6E0C               	movwf	(btemp+11)^0,c
  6365  019F34  50F3               	movf	243,w,c
  6366  019F36  260B               	addwf	(btemp+10)^0,f,c
  6367  019F38  50F4               	movf	244,w,c
  6368  019F3A  220C               	addwfc	(btemp+11)^0,f,c
  6369                           
  6370                           ;stkvar	_shape @ sp[(-1)+-1]
  6371  019F3C  0EFE               	movlw	-2
  6372  019F3E  50E3               	movf	plusw1,w,c
  6373  019F40  6E09               	movwf	(btemp+8)^0,c
  6374  019F42  6A0A               	clrf	(btemp+9)^0,c
  6375  019F44  0EE1               	movlw	low spinners@s
  6376  019F46  2409               	addwf	(btemp+8)^0,w,c
  6377  019F48  6ED9               	movwf	fsr2l,c
  6378  019F4A  0E01               	movlw	high spinners@s
  6379  019F4C  200A               	addwfc	(btemp+9)^0,w,c
  6380  019F4E  6EDA               	movwf	fsr2h,c
  6381  019F50  50DF               	movf	indf2,w,c
  6382  019F52  260B               	addwf	(btemp+10)^0,f,c
  6383  019F54  0E00               	movlw	0
  6384  019F56  220C               	addwfc	(btemp+11)^0,f,c
  6385  019F58  0060  F02F  FFF6   	movff	btemp+10,tblptrl
  6386  019F5E  0060  F033  FFF7   	movff	btemp+11,tblptrh
  6387  019F64                     	if	0	;tblptru may be non-zero
  6388  019F64                     	endif
  6389  019F64                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6390  019F64  0E00               	movlw	low (__mediumconst shr (0+16))
  6391  019F66  6EF8               	movwf	tblptru,c
  6392  019F68                     	endif
  6393                           
  6394                           ;stkvar	_c @ sp[(-1)+0]
  6395  019F68  0008               	tblrd		*
  6396  019F6A  0EFF               	movlw	-1
  6397  019F6C  006F FFD7 FFE3     	movff	tablat,plusw1
  6398                           
  6399                           ;mbmc.c: 156:  if (++s[shape] >= strlen(spin[shape]))
  6400                           ;stkvar	_shape @ sp[(-1)+-1]
  6401  019F72  0EFE               	movlw	-2
  6402  019F74  50E3               	movf	plusw1,w,c
  6403  019F76  0D14               	mullw	20
  6404  019F78  0E4B               	movlw	low _spin
  6405  019F7A  6E0B               	movwf	(btemp+10)^0,c
  6406  019F7C  0EFB               	movlw	high _spin
  6407  019F7E  6E0C               	movwf	(btemp+11)^0,c
  6408  019F80  50F3               	movf	243,w,c
  6409  019F82  260B               	addwf	(btemp+10)^0,f,c
  6410  019F84  50F4               	movf	244,w,c
  6411  019F86  220C               	addwfc	(btemp+11)^0,f,c
  6412  019F88  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6413  019F8E  0060  F033  FFE6   	movff	btemp+11,postinc1
  6414  019F94  EC9A  F0D5         	call	_strlen	;wreg free
  6415                           
  6416                           ;stkvar	_shape @ sp[(-1)+-1]
  6417  019F98  0EFE               	movlw	-2
  6418  019F9A  50E3               	movf	plusw1,w,c
  6419  019F9C  6E0B               	movwf	(btemp+10)^0,c
  6420  019F9E  6A0C               	clrf	(btemp+11)^0,c
  6421  019FA0  0EE1               	movlw	low spinners@s
  6422  019FA2  240B               	addwf	(btemp+10)^0,w,c
  6423  019FA4  6ED9               	movwf	fsr2l,c
  6424  019FA6  0E01               	movlw	high spinners@s
  6425  019FA8  200C               	addwfc	(btemp+11)^0,w,c
  6426  019FAA  6EDA               	movwf	fsr2h,c
  6427  019FAC  2ADF               	incf	indf2,f,c
  6428  019FAE  50DF               	movf	indf2,w,c
  6429  019FB0  6E0B               	movwf	(btemp+10)^0,c
  6430  019FB2  6A0C               	clrf	(btemp+11)^0,c
  6431  019FB4  5001               	movf	btemp^0,w,c
  6432  019FB6  5C0B               	subwf	(btemp+10)^0,w,c
  6433  019FB8  5002               	movf	(btemp+1)^0,w,c
  6434  019FBA  580C               	subwfb	(btemp+11)^0,w,c
  6435  019FBC  A0D8               	btfss	status,0,c
  6436  019FBE  D00C               	goto	l11052
  6437                           
  6438                           ;mbmc.c: 157:   s[shape] = 0;
  6439                           ;stkvar	_shape @ sp[(-1)+-1]
  6440  019FC0  0EFE               	movlw	-2
  6441  019FC2  50E3               	movf	plusw1,w,c
  6442  019FC4  6E0B               	movwf	(btemp+10)^0,c
  6443  019FC6  6A0C               	clrf	(btemp+11)^0,c
  6444  019FC8  0EE1               	movlw	low spinners@s
  6445  019FCA  240B               	addwf	(btemp+10)^0,w,c
  6446  019FCC  6ED9               	movwf	fsr2l,c
  6447  019FCE  0E01               	movlw	high spinners@s
  6448  019FD0  200C               	addwfc	(btemp+11)^0,w,c
  6449  019FD2  6EDA               	movwf	fsr2h,c
  6450  019FD4  0E00               	movlw	0
  6451  019FD6  6EDF               	movwf	indf2,c
  6452  019FD8                     l11052:
  6453                           
  6454                           ;mbmc.c: 158:  return c;
  6455                           ;stkvar	_c @ sp[(-1)+0]
  6456  019FD8  0EFF               	movlw	-1
  6457  019FDA  006F FF8C  F001    	movff	plusw1,btemp
  6458                           
  6459                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  6460  019FE0  52E5               	movf	postdec1,f,c
  6461  019FE2  52E5               	movf	postdec1,f,c
  6462  019FE4  52E5               	movf	postdec1,f,c
  6463  019FE6  0012               	return		;funcret
  6464  019FE8                     __end_of_spinners:
  6465                           	opt callstack 0
  6466                           
  6467 ;; *************** function _set_dac *****************
  6468 ;; Defined at:
  6469 ;;		line 239 in file "daq.c"
  6470 ;; Parameters:    Size  Location     Type
  6471 ;;		None
  6472 ;; Auto vars:     Size  Location     Type
  6473 ;;		None
  6474 ;; Return value:  Size  Location     Type
  6475 ;;                  1  [STACK] void 
  6476 ;; Registers used:
  6477 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+11
  6478 ;; Tracked objects:
  6479 ;;		On entry : 3F/0
  6480 ;;		On exit  : 0/0
  6481 ;;		Unchanged: 0/0
  6482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6487 ;;Total ram usage:        0 bytes
  6488 ;; Hardware stack levels used:    1
  6489 ;; Hardware stack levels required when called:   16
  6490 ;; This function calls:
  6491 ;;		_SPI1_Exchange8bit
  6492 ;;		_dac_spi_control
  6493 ;; This function is called by:
  6494 ;;		_main
  6495 ;; This function uses a reentrant model
  6496 ;;
  6497                           
  6498                           	psect	text5
  6499  01AA92                     __ptext5:
  6500                           	opt callstack 0
  6501  01AA92                     _set_dac:
  6502                           	opt callstack 14
  6503                           
  6504                           ;daq.c: 241:  dac_spi_control(1);
  6505                           
  6506                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6507                           ;incstack = 0
  6508  01AA92  0E01               	movlw	1
  6509  01AA94  6EE6               	movwf	postinc1,c
  6510  01AA96  EC0C  F0D8         	call	_dac_spi_control	;wreg free
  6511                           
  6512                           ;daq.c: 242:  R.max5322_cmd.map.dac0 = R.raw_dac[0]&0xff;
  6513  01AA9A  C0CF  F0D3         	movff	_R+32,_R+36	;volatile
  6514                           
  6515                           ;daq.c: 243:  R.max5322_cmd.map.dac1 = (R.raw_dac[0] > 8) &0xf;
  6516  01AA9E  0100               	movlb	0	; () banked
  6517  01AAA0  51D0               	movf	(_R+33)& (0+255),w,b	;volatile
  6518  01AAA2  E104               	bnz	u10341
  6519  01AAA4  0E09               	movlw	9
  6520  01AAA6  5DCF               	subwf	(_R+32)& (0+255),w,b	;volatile
  6521  01AAA8  A0D8               	btfss	status,0,c
  6522  01AAAA  D003               	goto	u10340
  6523  01AAAC                     u10341:
  6524  01AAAC  6A0C               	clrf	(btemp+11)^0,c
  6525  01AAAE  2A0C               	incf	(btemp+11)^0,f,c
  6526  01AAB0  D001               	goto	u10358
  6527  01AAB2                     u10340:
  6528  01AAB2  6A0C               	clrf	(btemp+11)^0,c
  6529  01AAB4                     u10358:
  6530  01AAB4  0E0F               	movlw	15
  6531  01AAB6  160C               	andwf	(btemp+11)^0,f,c
  6532  01AAB8  0100               	movlb	0	; () banked
  6533  01AABA  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6534  01AABC  180C               	xorwf	(btemp+11)^0,w,c
  6535  01AABE  0BF0               	andlw	-16
  6536  01AAC0  180C               	xorwf	(btemp+11)^0,w,c
  6537  01AAC2  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6538                           
  6539                           ; BSR set to: 0
  6540                           ;daq.c: 244:  R.max5322_cmd.map.cont = 0b0100;
  6541  01AAC4  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6542  01AAC6  0B0F               	andlw	-241
  6543  01AAC8  0940               	iorlw	64
  6544  01AACA  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6545                           
  6546                           ; BSR set to: 0
  6547  01AACC  90BF               	bcf	191,0,c	;volatile
  6548                           
  6549                           ; BSR set to: 0
  6550                           ;daq.c: 246:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  6551  01AACE  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6552  01AAD0  6EE6               	movwf	postinc1,c
  6553  01AAD2  ECC4  F0E0         	call	_SPI1_Exchange8bit	;wreg free
  6554                           
  6555                           ; BSR set to: 57
  6556                           ;daq.c: 247:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  6557  01AAD6  0100               	movlb	0	; () banked
  6558  01AAD8  51D3               	movf	(_R+36)& (0+255),w,b	;volatile
  6559  01AADA  6EE6               	movwf	postinc1,c
  6560  01AADC  ECC4  F0E0         	call	_SPI1_Exchange8bit	;wreg free
  6561                           
  6562                           ; BSR set to: 57
  6563  01AAE0  80BF               	bsf	191,0,c	;volatile
  6564                           
  6565                           ; BSR set to: 57
  6566                           ;daq.c: 249:  R.max5322_cmd.map.dac0 = R.raw_dac[1]&0xff;
  6567  01AAE2  C0D1  F0D3         	movff	_R+34,_R+36	;volatile
  6568                           
  6569                           ; BSR set to: 57
  6570                           ;daq.c: 250:  R.max5322_cmd.map.dac1 = (R.raw_dac[1] > 8) &0xf;
  6571  01AAE6  0100               	movlb	0	; () banked
  6572  01AAE8  51D2               	movf	(_R+35)& (0+255),w,b	;volatile
  6573  01AAEA  E104               	bnz	u10361
  6574  01AAEC  0E09               	movlw	9
  6575  01AAEE  5DD1               	subwf	(_R+34)& (0+255),w,b	;volatile
  6576  01AAF0  A0D8               	btfss	status,0,c
  6577  01AAF2  D003               	goto	u10360
  6578  01AAF4                     u10361:
  6579  01AAF4  6A0C               	clrf	(btemp+11)^0,c
  6580  01AAF6  2A0C               	incf	(btemp+11)^0,f,c
  6581  01AAF8  D001               	goto	u10378
  6582  01AAFA                     u10360:
  6583  01AAFA  6A0C               	clrf	(btemp+11)^0,c
  6584  01AAFC                     u10378:
  6585  01AAFC  0E0F               	movlw	15
  6586  01AAFE  160C               	andwf	(btemp+11)^0,f,c
  6587  01AB00  0100               	movlb	0	; () banked
  6588  01AB02  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6589  01AB04  180C               	xorwf	(btemp+11)^0,w,c
  6590  01AB06  0BF0               	andlw	-16
  6591  01AB08  180C               	xorwf	(btemp+11)^0,w,c
  6592  01AB0A  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6593                           
  6594                           ; BSR set to: 0
  6595                           ;daq.c: 251:  R.max5322_cmd.map.cont = 0b0101;
  6596  01AB0C  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6597  01AB0E  0B0F               	andlw	-241
  6598  01AB10  0950               	iorlw	80
  6599  01AB12  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6600                           
  6601                           ; BSR set to: 0
  6602  01AB14  90BF               	bcf	191,0,c	;volatile
  6603                           
  6604                           ; BSR set to: 0
  6605                           ;daq.c: 253:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  6606  01AB16  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6607  01AB18  6EE6               	movwf	postinc1,c
  6608  01AB1A  ECC4  F0E0         	call	_SPI1_Exchange8bit	;wreg free
  6609                           
  6610                           ; BSR set to: 57
  6611                           ;daq.c: 254:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  6612  01AB1E  0100               	movlb	0	; () banked
  6613  01AB20  51D3               	movf	(_R+36)& (0+255),w,b	;volatile
  6614  01AB22  6EE6               	movwf	postinc1,c
  6615  01AB24  ECC4  F0E0         	call	_SPI1_Exchange8bit	;wreg free
  6616                           
  6617                           ; BSR set to: 57
  6618  01AB28  80BF               	bsf	191,0,c	;volatile
  6619                           
  6620                           ; BSR set to: 57
  6621                           ;daq.c: 256:  dac_spi_control(0);
  6622  01AB2A  0E00               	movlw	0
  6623  01AB2C  6EE6               	movwf	postinc1,c
  6624  01AB2E  EC0C  F0D8         	call	_dac_spi_control	;wreg free
  6625                           
  6626                           ; _set_dac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  6627  01AB32  0012               	return		;funcret
  6628  01AB34                     __end_of_set_dac:
  6629                           	opt callstack 0
  6630                           
  6631 ;; *************** function _dac_spi_control *****************
  6632 ;; Defined at:
  6633 ;;		line 194 in file "daq.c"
  6634 ;; Parameters:    Size  Location     Type
  6635 ;;  set             1  [STACK] _Bool 
  6636 ;; Auto vars:     Size  Location     Type
  6637 ;;		None
  6638 ;; Return value:  Size  Location     Type
  6639 ;;                  1  [STACK] void 
  6640 ;; Registers used:
  6641 ;;		wreg, fsr1l, fsr1h, status,2
  6642 ;; Tracked objects:
  6643 ;;		On entry : 0/0
  6644 ;;		On exit  : 0/0
  6645 ;;		Unchanged: 0/0
  6646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6651 ;;Total ram usage:        0 bytes
  6652 ;; Hardware stack levels used:    1
  6653 ;; Hardware stack levels required when called:   15
  6654 ;; This function calls:
  6655 ;;		Nothing
  6656 ;; This function is called by:
  6657 ;;		_set_dac
  6658 ;; This function uses a reentrant model
  6659 ;;
  6660                           
  6661                           	psect	text6
  6662  01B018                     __ptext6:
  6663                           	opt callstack 0
  6664  01B018                     _dac_spi_control:
  6665                           	opt callstack 14
  6666                           
  6667                           ;daq.c: 194: void dac_spi_control(_Bool set);daq.c: 195: {;daq.c: 196:  static _Bool ini
      +                          t = 0;;daq.c: 197:  static uint8_t S0, S1, S2, SC, SB;;daq.c: 199:  if (set) {
  6668                           ;stkvar	_set @ sp[(0)+-1]
  6669                           
  6670                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6671                           ;incstack = 0
  6672  01B018  0EFF               	movlw	-1
  6673  01B01A  50E3               	movf	plusw1,w,c
  6674  01B01C  B4D8               	btfsc	status,2,c
  6675  01B01E  D01F               	goto	l10662
  6676                           
  6677                           ;daq.c: 200:   SPI1CON0bits.EN = 0;
  6678  01B020  013D               	movlb	61	; () banked
  6679  01B022  9F14               	bcf	20,7,b	;volatile
  6680                           
  6681                           ; BSR set to: 61
  6682                           ;daq.c: 201:   if (!init) {
  6683  01B024  5043               	movf	dac_spi_control@init^0,w,c
  6684  01B026  A4D8               	btfss	status,2,c
  6685  01B028  D011               	goto	l10656
  6686                           
  6687                           ; BSR set to: 61
  6688                           ;daq.c: 202:    init = 1;
  6689  01B02A  0E01               	movlw	1
  6690  01B02C  6E43               	movwf	dac_spi_control@init^0,c
  6691                           
  6692                           ; BSR set to: 61
  6693                           ;daq.c: 203:    S0 = SPI1CON0;
  6694  01B02E  006F F450  F042    	movff	15636,dac_spi_control@S0	;volatile
  6695                           
  6696                           ; BSR set to: 61
  6697                           ;daq.c: 204:    S1 = SPI1CON1;
  6698  01B034  006F F454  F0A8    	movff	15637,dac_spi_control@S1	;volatile
  6699                           
  6700                           ; BSR set to: 61
  6701                           ;daq.c: 205:    S2 = SPI1CON2;
  6702  01B03A  006F F458  F0A7    	movff	15638,dac_spi_control@S2	;volatile
  6703                           
  6704                           ; BSR set to: 61
  6705                           ;daq.c: 206:    SC = SPI1CLK;
  6706  01B040  006F F470  F0A6    	movff	15644,dac_spi_control@SC	;volatile
  6707                           
  6708                           ; BSR set to: 61
  6709                           ;daq.c: 207:    SB = SPI1BAUD;
  6710  01B046  006F F464  F0A5    	movff	15641,dac_spi_control@SB	;volatile
  6711  01B04C                     l10656:
  6712                           
  6713                           ; BSR set to: 61
  6714                           ;daq.c: 213:   SPI1CON1 = 0x00;
  6715  01B04C  6B15               	clrf	21,b	;volatile
  6716                           
  6717                           ;daq.c: 215:   SPI1CON2 = 0x03;
  6718  01B04E  0E03               	movlw	3
  6719  01B050  6F16               	movwf	22,b	;volatile
  6720                           
  6721                           ;daq.c: 217:   SPI1BAUD = 0x0f;
  6722  01B052  0E0F               	movlw	15
  6723  01B054  6F19               	movwf	25,b	;volatile
  6724                           
  6725                           ; BSR set to: 61
  6726                           ;daq.c: 219:   SPI1CLK = 0x00;
  6727  01B056  6B1C               	clrf	28,b	;volatile
  6728                           
  6729                           ;daq.c: 221:   SPI1CON0 = 0x83;
  6730  01B058  0E83               	movlw	131
  6731  01B05A  6F14               	movwf	20,b	;volatile
  6732  01B05C  D014               	goto	L3
  6733  01B05E                     l10662:
  6734                           
  6735                           ;daq.c: 224:   if (init) {
  6736  01B05E  5043               	movf	dac_spi_control@init^0,w,c
  6737  01B060  B4D8               	btfsc	status,2,c
  6738  01B062  D012               	goto	l1851
  6739                           
  6740                           ;daq.c: 228:    SPI1CON0bits.EN = 0;
  6741  01B064  013D               	movlb	61	; () banked
  6742  01B066  9F14               	bcf	20,7,b	;volatile
  6743                           
  6744                           ;daq.c: 229:    SPI1CON1 = S1;
  6745  01B068  0060  F2A3  FD15   	movff	dac_spi_control@S1,15637	;volatile
  6746                           
  6747                           ;daq.c: 230:    SPI1CON2 = S2;
  6748  01B06E  0060  F29F  FD16   	movff	dac_spi_control@S2,15638	;volatile
  6749                           
  6750                           ;daq.c: 231:    SPI1CLK = SC;
  6751  01B074  0060  F29B  FD1C   	movff	dac_spi_control@SC,15644	;volatile
  6752                           
  6753                           ;daq.c: 232:    SPI1BAUD = SB;
  6754  01B07A  0060  F297  FD19   	movff	dac_spi_control@SB,15641	;volatile
  6755                           
  6756                           ;daq.c: 233:    SPI1CON0 = S0;
  6757  01B080  0060  F10B  FD14   	movff	dac_spi_control@S0,15636	;volatile
  6758  01B086                     L3:
  6759                           
  6760                           ;daq.c: 234:    SPI1CON0bits.EN = 1;
  6761  01B086  8F14               	bsf	20,7,b	;volatile
  6762  01B088                     l1851:
  6763                           
  6764                           ; _dac_spi_control: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
  6765  01B088  52E5               	movf	postdec1,f,c
  6766  01B08A  0012               	return		;funcret
  6767  01B08C                     __end_of_dac_spi_control:
  6768                           	opt callstack 0
  6769                           
  6770 ;; *************** function _init_port_dma *****************
  6771 ;; Defined at:
  6772 ;;		line 104 in file "eadog.c"
  6773 ;; Parameters:    Size  Location     Type
  6774 ;;		None
  6775 ;; Auto vars:     Size  Location     Type
  6776 ;;		None
  6777 ;; Return value:  Size  Location     Type
  6778 ;;                  1  [STACK] void 
  6779 ;; Registers used:
  6780 ;;		wreg, status,2
  6781 ;; Tracked objects:
  6782 ;;		On entry : 0/1
  6783 ;;		On exit  : 3F/3B
  6784 ;;		Unchanged: 0/0
  6785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6790 ;;Total ram usage:        0 bytes
  6791 ;; Hardware stack levels used:    1
  6792 ;; Hardware stack levels required when called:   15
  6793 ;; This function calls:
  6794 ;;		Nothing
  6795 ;; This function is called by:
  6796 ;;		_main
  6797 ;; This function uses a reentrant model
  6798 ;;
  6799                           
  6800                           	psect	text7
  6801  01BC34                     __ptext7:
  6802                           	opt callstack 0
  6803  01BC34                     _init_port_dma:
  6804                           	opt callstack 15
  6805                           
  6806                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
  6807                           
  6808                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6809                           ;incstack = 0
  6810  01BC34  0E3F               	movlw	-193
  6811  01BC36  013B               	movlb	59	; () banked
  6812  01BC38  17DD               	andwf	221,f,b	;volatile
  6813                           
  6814                           ; BSR set to: 59
  6815                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
  6816  01BC3A  9BDD               	bcf	221,5,b	;volatile
  6817                           
  6818                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
  6819  01BC3C  51DD               	movf	221,w,b	;volatile
  6820  01BC3E  0BF9               	andlw	-7
  6821  01BC40  0902               	iorlw	2
  6822  01BC42  6FDD               	movwf	221,b	;volatile
  6823                           
  6824                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
  6825  01BC44  0EE7               	movlw	-25
  6826  01BC46  17DD               	andwf	221,f,b	;volatile
  6827                           
  6828                           ; BSR set to: 59
  6829                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
  6830  01BC48  81DD               	bsf	221,0,b	;volatile
  6831                           
  6832                           ; BSR set to: 59
  6833                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
  6834  01BC4A  9DDC               	bcf	220,6,b	;volatile
  6835                           
  6836                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
  6837  01BC4C  0E3D               	movlw	61
  6838  01BC4E  6FD1               	movwf	209,b	;volatile
  6839  01BC50  0EEA               	movlw	234
  6840  01BC52  6FD0               	movwf	208,b	;volatile
  6841                           
  6842                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
  6843  01BC54  0EFF               	movlw	low _port_data
  6844  01BC56  6FD9               	movwf	217,b	;volatile
  6845  01BC58  0E04               	movlw	high _port_data
  6846  01BC5A  6FDA               	movwf	218,b	;volatile
  6847  01BC5C  0E00               	movlw	low (_port_data shr (0+16))
  6848  01BC5E  6FDB               	movwf	219,b	;volatile
  6849                           
  6850                           ; BSR set to: 59
  6851                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
  6852  01BC60  9BDC               	bcf	220,5,b	;volatile
  6853                           
  6854                           ; BSR set to: 59
  6855                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  6856  01BC62  0012               	return		;funcret
  6857  01BC64                     __end_of_init_port_dma:
  6858                           	opt callstack 0
  6859                           
  6860 ;; *************** function _init_display *****************
  6861 ;; Defined at:
  6862 ;;		line 38 in file "eadog.c"
  6863 ;; Parameters:    Size  Location     Type
  6864 ;;		None
  6865 ;; Auto vars:     Size  Location     Type
  6866 ;;		None
  6867 ;; Return value:  Size  Location     Type
  6868 ;;                  1  [STACK] void 
  6869 ;; Registers used:
  6870 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6871 ;; Tracked objects:
  6872 ;;		On entry : 3F/3B
  6873 ;;		On exit  : 3F/3D
  6874 ;;		Unchanged: 0/0
  6875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6880 ;;Total ram usage:        0 bytes
  6881 ;; Hardware stack levels used:    1
  6882 ;; Hardware stack levels required when called:   17
  6883 ;; This function calls:
  6884 ;;		_ringBufS_init
  6885 ;;		_send_lcd_cmd
  6886 ;;		_send_lcd_cmd_long
  6887 ;;		_send_lcd_data
  6888 ;;		_wdtdelay
  6889 ;; This function is called by:
  6890 ;;		_main
  6891 ;; This function uses a reentrant model
  6892 ;;
  6893                           
  6894                           	psect	text8
  6895  019FE8                     __ptext8:
  6896                           	opt callstack 0
  6897  019FE8                     _init_display:
  6898                           	opt callstack 13
  6899                           
  6900                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  6901                           
  6902                           ; BSR set to: 59
  6903                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6904                           ;incstack = 0
  6905  019FE8  0E83               	movlw	low _ring_buf1
  6906  019FEA  0101               	movlb	1	; () banked
  6907  019FEC  6FD3               	movwf	(_spi_link+6)& (0+255),b	;volatile
  6908  019FEE  0E03               	movlw	high _ring_buf1
  6909  019FF0  6FD4               	movwf	(_spi_link+7)& (0+255),b	;volatile
  6910                           
  6911                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  6912  019FF2  0E40               	movlw	low _ring_buf2
  6913  019FF4  6FD1               	movwf	(_spi_link+4)& (0+255),b	;volatile
  6914  019FF6  0E03               	movlw	high _ring_buf2
  6915  019FF8  6FD2               	movwf	(_spi_link+5)& (0+255),b	;volatile
  6916                           
  6917                           ; BSR set to: 1
  6918                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  6919  019FFA  0060  F74F  FFE6   	movff	_spi_link+6,postinc1
  6920  01A000  0060  F753  FFE6   	movff	_spi_link+7,postinc1
  6921  01A006  ECE9  F0DE         	call	_ringBufS_init	;wreg free
  6922                           
  6923                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  6924  01A00A  0060  F747  FFE6   	movff	_spi_link+4,postinc1
  6925  01A010  0060  F74B  FFE6   	movff	_spi_link+5,postinc1
  6926  01A016  ECE9  F0DE         	call	_ringBufS_init	;wreg free
  6927                           
  6928                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  6929  01A01A  84BE               	bsf	190,2,c	;volatile
  6930                           
  6931                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
  6932  01A01C  013D               	movlb	61	; () banked
  6933  01A01E  9F14               	bcf	20,7,b	;volatile
  6934                           
  6935                           ; BSR set to: 61
  6936                           ;eadog.c: 49:  SPI1CON1 = 0x20;
  6937  01A020  0E20               	movlw	32
  6938  01A022  6F15               	movwf	21,b	;volatile
  6939                           
  6940                           ; BSR set to: 61
  6941                           ;eadog.c: 51:  SPI1CON2 = 0x03;
  6942  01A024  0E03               	movlw	3
  6943  01A026  6F16               	movwf	22,b	;volatile
  6944                           
  6945                           ; BSR set to: 61
  6946                           ;eadog.c: 53:  SPI1BAUD = 0x04;
  6947  01A028  0E04               	movlw	4
  6948  01A02A  6F19               	movwf	25,b	;volatile
  6949                           
  6950                           ; BSR set to: 61
  6951                           ;eadog.c: 55:  SPI1CLK = 0x02;
  6952  01A02C  0E02               	movlw	2
  6953  01A02E  6F1C               	movwf	28,b	;volatile
  6954                           
  6955                           ; BSR set to: 61
  6956                           ;eadog.c: 57:  SPI1CON0 = 0x83;
  6957  01A030  0E83               	movlw	131
  6958  01A032  6F14               	movwf	20,b	;volatile
  6959                           
  6960                           ; BSR set to: 61
  6961                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
  6962  01A034  8F14               	bsf	20,7,b	;volatile
  6963                           
  6964                           ; BSR set to: 61
  6965                           ;eadog.c: 60:  wdtdelay(350000);
  6966  01A036  0E30               	movlw	48
  6967  01A038  6EE6               	movwf	postinc1,c
  6968  01A03A  0E57               	movlw	87
  6969  01A03C  6EE6               	movwf	postinc1,c
  6970  01A03E  0E05               	movlw	5
  6971  01A040  6EE6               	movwf	postinc1,c
  6972  01A042  0E00               	movlw	0
  6973  01A044  6EE6               	movwf	postinc1,c
  6974  01A046  EC43  F0DA         	call	_wdtdelay	;wreg free
  6975                           
  6976                           ; BSR set to: 0
  6977                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
  6978  01A04A  0E46               	movlw	70
  6979  01A04C  6EE6               	movwf	postinc1,c
  6980  01A04E  EC9C  F0DC         	call	_send_lcd_cmd_long	;wreg free
  6981                           
  6982                           ; BSR set to: 0
  6983                           ;eadog.c: 62:  send_lcd_cmd(0x41);
  6984  01A052  0E41               	movlw	65
  6985  01A054  6EE6               	movwf	postinc1,c
  6986  01A056  ECBC  F0DC         	call	_send_lcd_cmd	;wreg free
  6987                           
  6988                           ; BSR set to: 0
  6989                           ;eadog.c: 63:  wdtdelay(80);
  6990  01A05A  0E50               	movlw	80
  6991  01A05C  6EE6               	movwf	postinc1,c
  6992  01A05E  0E00               	movlw	0
  6993  01A060  6EE6               	movwf	postinc1,c
  6994  01A062  0E00               	movlw	0
  6995  01A064  6EE6               	movwf	postinc1,c
  6996  01A066  0E00               	movlw	0
  6997  01A068  6EE6               	movwf	postinc1,c
  6998  01A06A  EC43  F0DA         	call	_wdtdelay	;wreg free
  6999                           
  7000                           ; BSR set to: 0
  7001                           ;eadog.c: 64:  send_lcd_cmd(0x53);
  7002  01A06E  0E53               	movlw	83
  7003  01A070  6EE6               	movwf	postinc1,c
  7004  01A072  ECBC  F0DC         	call	_send_lcd_cmd	;wreg free
  7005                           
  7006                           ; BSR set to: 0
  7007                           ;eadog.c: 65:  send_lcd_data(2);
  7008  01A076  0E02               	movlw	2
  7009  01A078  6EE6               	movwf	postinc1,c
  7010  01A07A  EC16  F0E0         	call	_send_lcd_data	;wreg free
  7011                           
  7012                           ; BSR set to: 0
  7013                           ;eadog.c: 66:  wdtdelay(80);
  7014  01A07E  0E50               	movlw	80
  7015  01A080  6EE6               	movwf	postinc1,c
  7016  01A082  0E00               	movlw	0
  7017  01A084  6EE6               	movwf	postinc1,c
  7018  01A086  0E00               	movlw	0
  7019  01A088  6EE6               	movwf	postinc1,c
  7020  01A08A  0E00               	movlw	0
  7021  01A08C  6EE6               	movwf	postinc1,c
  7022  01A08E  EC43  F0DA         	call	_wdtdelay	;wreg free
  7023                           
  7024                           ; BSR set to: 0
  7025                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
  7026  01A092  0E51               	movlw	81
  7027  01A094  6EE6               	movwf	postinc1,c
  7028  01A096  EC9C  F0DC         	call	_send_lcd_cmd_long	;wreg free
  7029                           
  7030                           ; BSR set to: 0
  7031                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
  7032  01A09A  013D               	movlb	61	; () banked
  7033  01A09C  9F14               	bcf	20,7,b	;volatile
  7034                           
  7035                           ; BSR set to: 61
  7036                           ;eadog.c: 69:  SPI1CON2 = 0x02;
  7037  01A09E  0E02               	movlw	2
  7038  01A0A0  6F16               	movwf	22,b	;volatile
  7039                           
  7040                           ; BSR set to: 61
  7041                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
  7042  01A0A2  8F14               	bsf	20,7,b	;volatile
  7043                           
  7044                           ; BSR set to: 61
  7045                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
  7046  01A0A4  931A               	bcf	26,1,b	;volatile
  7047                           
  7048                           ; BSR set to: 61
  7049                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
  7050  01A0A6  0E3F               	movlw	-193
  7051  01A0A8  013B               	movlb	59	; () banked
  7052  01A0AA  17FD               	andwf	253,f,b	;volatile
  7053                           
  7054                           ; BSR set to: 59
  7055                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
  7056  01A0AC  9BFD               	bcf	253,5,b	;volatile
  7057                           
  7058                           ; BSR set to: 59
  7059                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
  7060  01A0AE  51FD               	movf	253,w,b	;volatile
  7061  01A0B0  0BF9               	andlw	-7
  7062  01A0B2  0902               	iorlw	2
  7063  01A0B4  6FFD               	movwf	253,b	;volatile
  7064                           
  7065                           ; BSR set to: 59
  7066                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
  7067  01A0B6  0EE7               	movlw	-25
  7068  01A0B8  17FD               	andwf	253,f,b	;volatile
  7069                           
  7070                           ; BSR set to: 59
  7071                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
  7072  01A0BA  81FD               	bsf	253,0,b	;volatile
  7073                           
  7074                           ; BSR set to: 59
  7075                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
  7076  01A0BC  0E83               	movlw	low _ring_buf1
  7077  01A0BE  6FF9               	movwf	249,b	;volatile
  7078  01A0C0  0E03               	movlw	high _ring_buf1
  7079  01A0C2  6FFA               	movwf	250,b	;volatile
  7080  01A0C4  0E00               	movlw	low (_ring_buf1 shr (0+16))
  7081  01A0C6  6FFB               	movwf	251,b	;volatile
  7082                           
  7083                           ; BSR set to: 59
  7084                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
  7085  01A0C8  9BFC               	bcf	252,5,b	;volatile
  7086                           
  7087                           ; BSR set to: 59
  7088                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
  7089  01A0CA  013D               	movlb	61	; () banked
  7090  01A0CC  831A               	bsf	26,1,b	;volatile
  7091                           
  7092                           ; BSR set to: 61
  7093                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
  7094  01A0CE  94BE               	bcf	190,2,c	;volatile
  7095                           
  7096                           ; BSR set to: 61
  7097                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  7098  01A0D0  0012               	return		;funcret
  7099  01A0D2                     __end_of_init_display:
  7100                           	opt callstack 0
  7101                           
  7102 ;; *************** function _send_lcd_data *****************
  7103 ;; Defined at:
  7104 ;;		line 123 in file "eadog.c"
  7105 ;; Parameters:    Size  Location     Type
  7106 ;;  data            1  [STACK] const unsigned char 
  7107 ;; Auto vars:     Size  Location     Type
  7108 ;;		None
  7109 ;; Return value:  Size  Location     Type
  7110 ;;                  1  [STACK] void 
  7111 ;; Registers used:
  7112 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7113 ;; Tracked objects:
  7114 ;;		On entry : 3F/0
  7115 ;;		On exit  : 3F/0
  7116 ;;		Unchanged: 0/0
  7117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7122 ;;Total ram usage:        0 bytes
  7123 ;; Hardware stack levels used:    1
  7124 ;; Hardware stack levels required when called:   16
  7125 ;; This function calls:
  7126 ;;		_SPI1_Exchange8bit
  7127 ;;		_wdtdelay
  7128 ;; This function is called by:
  7129 ;;		_init_display
  7130 ;; This function uses a reentrant model
  7131 ;;
  7132                           
  7133                           	psect	text9
  7134  01C02C                     __ptext9:
  7135                           	opt callstack 0
  7136  01C02C                     _send_lcd_data:
  7137                           	opt callstack 13
  7138                           
  7139                           ; BSR set to: 61
  7140                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7141                           ;incstack = 0
  7142                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
  7143  01C02C  94BC               	bcf	188,2,c	;volatile
  7144                           
  7145                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
  7146                           ;stkvar	_data @ sp[(0)+-1]
  7147  01C02E  0EFF               	movlw	-1
  7148  01C030  50E3               	movf	plusw1,w,c
  7149  01C032  6EE6               	movwf	postinc1,c
  7150  01C034  ECC4  F0E0         	call	_SPI1_Exchange8bit	;wreg free
  7151                           
  7152                           ; BSR set to: 57
  7153                           ;eadog.c: 127:  wdtdelay(8);
  7154  01C038  0E08               	movlw	8
  7155  01C03A  6EE6               	movwf	postinc1,c
  7156  01C03C  0E00               	movlw	0
  7157  01C03E  6EE6               	movwf	postinc1,c
  7158  01C040  0E00               	movlw	0
  7159  01C042  6EE6               	movwf	postinc1,c
  7160  01C044  0E00               	movlw	0
  7161  01C046  6EE6               	movwf	postinc1,c
  7162  01C048  EC43  F0DA         	call	_wdtdelay	;wreg free
  7163                           
  7164                           ; BSR set to: 0
  7165                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  7166  01C04C  52E5               	movf	postdec1,f,c
  7167  01C04E  0012               	return		;funcret
  7168  01C050                     __end_of_send_lcd_data:
  7169                           	opt callstack 0
  7170                           
  7171 ;; *************** function _send_lcd_cmd_long *****************
  7172 ;; Defined at:
  7173 ;;		line 139 in file "eadog.c"
  7174 ;; Parameters:    Size  Location     Type
  7175 ;;  cmd             1  [STACK] const unsigned char 
  7176 ;; Auto vars:     Size  Location     Type
  7177 ;;		None
  7178 ;; Return value:  Size  Location     Type
  7179 ;;                  1  [STACK] void 
  7180 ;; Registers used:
  7181 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7182 ;; Tracked objects:
  7183 ;;		On entry : 3F/0
  7184 ;;		On exit  : 3F/0
  7185 ;;		Unchanged: 0/0
  7186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7191 ;;Total ram usage:        0 bytes
  7192 ;; Hardware stack levels used:    1
  7193 ;; Hardware stack levels required when called:   16
  7194 ;; This function calls:
  7195 ;;		_SPI1_Exchange8bit
  7196 ;;		_wdtdelay
  7197 ;; This function is called by:
  7198 ;;		_init_display
  7199 ;; This function uses a reentrant model
  7200 ;;
  7201                           
  7202                           	psect	text10
  7203  01B938                     __ptext10:
  7204                           	opt callstack 0
  7205  01B938                     _send_lcd_cmd_long:
  7206                           	opt callstack 13
  7207                           
  7208                           ; BSR set to: 0
  7209                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7210                           ;incstack = 0
  7211                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
  7212  01B938  94BC               	bcf	188,2,c	;volatile
  7213                           
  7214                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
  7215  01B93A  0EFE               	movlw	254
  7216  01B93C  6EE6               	movwf	postinc1,c
  7217  01B93E  ECC4  F0E0         	call	_SPI1_Exchange8bit	;wreg free
  7218                           
  7219                           ; BSR set to: 57
  7220                           ;eadog.c: 143:  wdtdelay(8);
  7221  01B942  0E08               	movlw	8
  7222  01B944  6EE6               	movwf	postinc1,c
  7223  01B946  0E00               	movlw	0
  7224  01B948  6EE6               	movwf	postinc1,c
  7225  01B94A  0E00               	movlw	0
  7226  01B94C  6EE6               	movwf	postinc1,c
  7227  01B94E  0E00               	movlw	0
  7228  01B950  6EE6               	movwf	postinc1,c
  7229  01B952  EC43  F0DA         	call	_wdtdelay	;wreg free
  7230                           
  7231                           ; BSR set to: 0
  7232                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
  7233                           ;stkvar	_cmd @ sp[(0)+-1]
  7234  01B956  0EFF               	movlw	-1
  7235  01B958  50E3               	movf	plusw1,w,c
  7236  01B95A  6EE6               	movwf	postinc1,c
  7237  01B95C  ECC4  F0E0         	call	_SPI1_Exchange8bit	;wreg free
  7238                           
  7239                           ;eadog.c: 145:  wdtdelay(800);
  7240  01B960  0E20               	movlw	32
  7241  01B962  6EE6               	movwf	postinc1,c
  7242  01B964  0E03               	movlw	3
  7243  01B966  6EE6               	movwf	postinc1,c
  7244  01B968  0E00               	movlw	0
  7245  01B96A  6EE6               	movwf	postinc1,c
  7246  01B96C  0E00               	movlw	0
  7247  01B96E  6EE6               	movwf	postinc1,c
  7248  01B970  EC43  F0DA         	call	_wdtdelay	;wreg free
  7249                           
  7250                           ; BSR set to: 0
  7251                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7252  01B974  52E5               	movf	postdec1,f,c
  7253  01B976  0012               	return		;funcret
  7254  01B978                     __end_of_send_lcd_cmd_long:
  7255                           	opt callstack 0
  7256                           
  7257 ;; *************** function _send_lcd_cmd *****************
  7258 ;; Defined at:
  7259 ;;		line 130 in file "eadog.c"
  7260 ;; Parameters:    Size  Location     Type
  7261 ;;  cmd             1  [STACK] const unsigned char 
  7262 ;; Auto vars:     Size  Location     Type
  7263 ;;		None
  7264 ;; Return value:  Size  Location     Type
  7265 ;;                  1  [STACK] void 
  7266 ;; Registers used:
  7267 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7268 ;; Tracked objects:
  7269 ;;		On entry : 3F/0
  7270 ;;		On exit  : 3F/0
  7271 ;;		Unchanged: 0/0
  7272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7277 ;;Total ram usage:        0 bytes
  7278 ;; Hardware stack levels used:    1
  7279 ;; Hardware stack levels required when called:   16
  7280 ;; This function calls:
  7281 ;;		_SPI1_Exchange8bit
  7282 ;;		_wdtdelay
  7283 ;; This function is called by:
  7284 ;;		_init_display
  7285 ;; This function uses a reentrant model
  7286 ;;
  7287                           
  7288                           	psect	text11
  7289  01B978                     __ptext11:
  7290                           	opt callstack 0
  7291  01B978                     _send_lcd_cmd:
  7292                           	opt callstack 13
  7293                           
  7294                           ; BSR set to: 0
  7295                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7296                           ;incstack = 0
  7297                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
  7298  01B978  94BC               	bcf	188,2,c	;volatile
  7299                           
  7300                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
  7301  01B97A  0EFE               	movlw	254
  7302  01B97C  6EE6               	movwf	postinc1,c
  7303  01B97E  ECC4  F0E0         	call	_SPI1_Exchange8bit	;wreg free
  7304                           
  7305                           ; BSR set to: 57
  7306                           ;eadog.c: 134:  wdtdelay(8);
  7307  01B982  0E08               	movlw	8
  7308  01B984  6EE6               	movwf	postinc1,c
  7309  01B986  0E00               	movlw	0
  7310  01B988  6EE6               	movwf	postinc1,c
  7311  01B98A  0E00               	movlw	0
  7312  01B98C  6EE6               	movwf	postinc1,c
  7313  01B98E  0E00               	movlw	0
  7314  01B990  6EE6               	movwf	postinc1,c
  7315  01B992  EC43  F0DA         	call	_wdtdelay	;wreg free
  7316                           
  7317                           ; BSR set to: 0
  7318                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
  7319                           ;stkvar	_cmd @ sp[(0)+-1]
  7320  01B996  0EFF               	movlw	-1
  7321  01B998  50E3               	movf	plusw1,w,c
  7322  01B99A  6EE6               	movwf	postinc1,c
  7323  01B99C  ECC4  F0E0         	call	_SPI1_Exchange8bit	;wreg free
  7324                           
  7325                           ;eadog.c: 136:  wdtdelay(8);
  7326  01B9A0  0E08               	movlw	8
  7327  01B9A2  6EE6               	movwf	postinc1,c
  7328  01B9A4  0E00               	movlw	0
  7329  01B9A6  6EE6               	movwf	postinc1,c
  7330  01B9A8  0E00               	movlw	0
  7331  01B9AA  6EE6               	movwf	postinc1,c
  7332  01B9AC  0E00               	movlw	0
  7333  01B9AE  6EE6               	movwf	postinc1,c
  7334  01B9B0  EC43  F0DA         	call	_wdtdelay	;wreg free
  7335                           
  7336                           ; BSR set to: 0
  7337                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  7338  01B9B4  52E5               	movf	postdec1,f,c
  7339  01B9B6  0012               	return		;funcret
  7340  01B9B8                     __end_of_send_lcd_cmd:
  7341                           	opt callstack 0
  7342                           
  7343 ;; *************** function _SPI1_Exchange8bit *****************
  7344 ;; Defined at:
  7345 ;;		line 79 in file "mcc_generated_files/spi1.c"
  7346 ;; Parameters:    Size  Location     Type
  7347 ;;  data            1  [STACK] unsigned char 
  7348 ;; Auto vars:     Size  Location     Type
  7349 ;;		None
  7350 ;; Return value:  Size  Location     Type
  7351 ;;                  1  [STACK] unsigned char 
  7352 ;; Registers used:
  7353 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  7354 ;; Tracked objects:
  7355 ;;		On entry : 0/0
  7356 ;;		On exit  : 3F/39
  7357 ;;		Unchanged: 0/0
  7358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7363 ;;Total ram usage:        0 bytes
  7364 ;; Hardware stack levels used:    1
  7365 ;; Hardware stack levels required when called:   15
  7366 ;; This function calls:
  7367 ;;		Nothing
  7368 ;; This function is called by:
  7369 ;;		_send_lcd_data
  7370 ;;		_send_lcd_cmd
  7371 ;;		_send_lcd_cmd_long
  7372 ;;		_set_dac
  7373 ;; This function uses a reentrant model
  7374 ;;
  7375                           
  7376                           	psect	text12
  7377  01C188                     __ptext12:
  7378                           	opt callstack 0
  7379  01C188                     _SPI1_Exchange8bit:
  7380                           	opt callstack 14
  7381                           
  7382                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  7383                           
  7384                           ; BSR set to: 0
  7385                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7386                           ;incstack = 0
  7387  01C188  0E01               	movlw	1
  7388  01C18A  013D               	movlb	61	; () banked
  7389  01C18C  6F12               	movwf	18,b	;volatile
  7390                           
  7391                           ; BSR set to: 61
  7392                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  7393                           ;stkvar	_data @ sp[(0)+-1]
  7394  01C18E  0EFF               	movlw	-1
  7395  01C190  006F FF8F FD11     	movff	plusw1,15633	;volatile
  7396  01C196                     l807:
  7397                           
  7398                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  7399  01C196  0139               	movlb	57	; () banked
  7400  01C198  A9A2               	btfss	162,4,b	;volatile
  7401  01C19A  D7FD               	goto	l807
  7402                           
  7403                           ; BSR set to: 57
  7404                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  7405  01C19C  006F F440  F001    	movff	15632,btemp	;volatile
  7406                           
  7407                           ; BSR set to: 57
  7408                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7409  01C1A2  52E5               	movf	postdec1,f,c
  7410  01C1A4  0012               	return		;funcret
  7411  01C1A6                     __end_of_SPI1_Exchange8bit:
  7412                           	opt callstack 0
  7413                           
  7414 ;; *************** function _ringBufS_init *****************
  7415 ;; Defined at:
  7416 ;;		line 22 in file "ringbufs.c"
  7417 ;; Parameters:    Size  Location     Type
  7418 ;;  _this           2  [STACK] PTR volatile struct ring
  7419 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7420 ;; Auto vars:     Size  Location     Type
  7421 ;;		None
  7422 ;; Return value:  Size  Location     Type
  7423 ;;                  1  [STACK] void 
  7424 ;; Registers used:
  7425 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7426 ;; Tracked objects:
  7427 ;;		On entry : 0/1
  7428 ;;		On exit  : 0/0
  7429 ;;		Unchanged: 0/0
  7430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7435 ;;Total ram usage:        0 bytes
  7436 ;; Hardware stack levels used:    1
  7437 ;; Hardware stack levels required when called:   16
  7438 ;; This function calls:
  7439 ;;		_memset
  7440 ;; This function is called by:
  7441 ;;		_init_display
  7442 ;; This function uses a reentrant model
  7443 ;;
  7444                           
  7445                           	psect	text13
  7446  01BDD2                     __ptext13:
  7447                           	opt callstack 0
  7448  01BDD2                     _ringBufS_init:
  7449                           	opt callstack 13
  7450                           
  7451                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  7452                           
  7453                           ; BSR set to: 57
  7454                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7455                           ;incstack = 0
  7456  01BDD2  0E43               	movlw	67
  7457  01BDD4  6EE6               	movwf	postinc1,c
  7458  01BDD6  0E00               	movlw	0
  7459  01BDD8  6EE6               	movwf	postinc1,c
  7460  01BDDA  0E00               	movlw	0
  7461  01BDDC  6EE6               	movwf	postinc1,c
  7462  01BDDE  0E00               	movlw	0
  7463  01BDE0  6EE6               	movwf	postinc1,c
  7464                           
  7465                           ;stkvar	__this @ sp[(-4)+-2]
  7466  01BDE2  0EFA               	movlw	-6
  7467  01BDE4  006F FF8F FFE6     	movff	plusw1,postinc1
  7468  01BDEA  006F FF8F FFE6     	movff	plusw1,postinc1
  7469  01BDF0  EC2C  F0B7         	call	_memset	;wreg free
  7470                           
  7471                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  7472  01BDF4  52E5               	movf	postdec1,f,c
  7473  01BDF6  52E5               	movf	postdec1,f,c
  7474  01BDF8  0012               	return		;funcret
  7475  01BDFA                     __end_of_ringBufS_init:
  7476                           	opt callstack 0
  7477                           
  7478 ;; *************** function _init_bsoc *****************
  7479 ;; Defined at:
  7480 ;;		line 109 in file "bsoc.c"
  7481 ;; Parameters:    Size  Location     Type
  7482 ;;		None
  7483 ;; Auto vars:     Size  Location     Type
  7484 ;;		None
  7485 ;; Return value:  Size  Location     Type
  7486 ;;                  1  [STACK] void 
  7487 ;; Registers used:
  7488 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  7489 ;; Tracked objects:
  7490 ;;		On entry : 0/0
  7491 ;;		On exit  : 0/0
  7492 ;;		Unchanged: 0/0
  7493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7498 ;;Total ram usage:        0 bytes
  7499 ;; Hardware stack levels used:    1
  7500 ;; Hardware stack levels required when called:   18
  7501 ;; This function calls:
  7502 ;;		_TMR3_SetInterruptHandler
  7503 ;;		_Volts_to_SOC
  7504 ;;		___fldiv
  7505 ;;		___flmul
  7506 ;;		___fltol
  7507 ;;		___xxtofl
  7508 ;;		_conv_raw_result
  7509 ;; This function is called by:
  7510 ;;		_main
  7511 ;; This function uses a reentrant model
  7512 ;;
  7513                           
  7514                           	psect	text14
  7515  017BCE                     __ptext14:
  7516                           	opt callstack 0
  7517  017BCE                     _init_bsoc:
  7518                           	opt callstack 12
  7519                           
  7520                           ;bsoc.c: 114:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  7521                           
  7522                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7523                           ;incstack = 0
  7524  017BCE  0E00               	movlw	0
  7525  017BD0  6EE6               	movwf	postinc1,c
  7526  017BD2  0E00               	movlw	0
  7527  017BD4  6EE6               	movwf	postinc1,c
  7528  017BD6  0E7A               	movlw	122
  7529  017BD8  6EE6               	movwf	postinc1,c
  7530  017BDA  0E44               	movlw	68
  7531  017BDC  6EE6               	movwf	postinc1,c
  7532  017BDE  0E00               	movlw	0
  7533  017BE0  6EE6               	movwf	postinc1,c
  7534  017BE2  0E04               	movlw	4
  7535  017BE4  6EE6               	movwf	postinc1,c
  7536  017BE6  EC73  F0A9         	call	_conv_raw_result	;wreg free
  7537  017BEA  0060  F007  FFE6   	movff	btemp,postinc1
  7538  017BF0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7539  017BF6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7540  017BFC  0060  F013  FFE6   	movff	btemp+3,postinc1
  7541  017C02  EC2F  F0C8         	call	___fltol	;wreg free
  7542  017C06  0060  F007  FFE6   	movff	btemp,postinc1
  7543  017C0C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7544  017C12  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7545  017C18  0060  F013  FFE6   	movff	btemp+3,postinc1
  7546  017C1E  0E00               	movlw	0
  7547  017C20  6EE6               	movwf	postinc1,c
  7548  017C22  EC43  F0C2         	call	___xxtofl	;wreg free
  7549  017C26  0060  F007  FFE6   	movff	btemp,postinc1
  7550  017C2C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7551  017C32  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7552  017C38  0060  F013  FFE6   	movff	btemp+3,postinc1
  7553  017C3E  ECC3  F09E         	call	___flmul	;wreg free
  7554  017C42  0060  F007  FFE6   	movff	btemp,postinc1
  7555  017C48  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7556  017C4E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7557  017C54  0060  F013  FFE6   	movff	btemp+3,postinc1
  7558  017C5A  EC2F  F0C8         	call	___fltol	;wreg free
  7559  017C5E  0060  F007  FFE6   	movff	btemp,postinc1
  7560  017C64  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7561  017C6A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7562  017C70  0060  F013  FFE6   	movff	btemp+3,postinc1
  7563  017C76  ECE7  F0D2         	call	_Volts_to_SOC	;wreg free
  7564  017C7A  0060  F004  F7B5   	movff	btemp,_C+182	;volatile
  7565  017C80  0060  F008  F7B6   	movff	btemp+1,_C+183	;volatile
  7566                           
  7567                           ;bsoc.c: 115:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
  7568  017C86  EE21  F38B         	lfsr	2,_C+140	;volatile
  7569  017C8A  006F FF7B FFE6     	movff	postinc2,postinc1
  7570  017C90  006F FF7B FFE6     	movff	postinc2,postinc1
  7571  017C96  006F FF7B FFE6     	movff	postinc2,postinc1
  7572  017C9C  006F FF7B FFE6     	movff	postinc2,postinc1
  7573  017CA2  0E00               	movlw	0
  7574  017CA4  6EE6               	movwf	postinc1,c
  7575  017CA6  0E00               	movlw	0
  7576  017CA8  6EE6               	movwf	postinc1,c
  7577  017CAA  0EC8               	movlw	200
  7578  017CAC  6EE6               	movwf	postinc1,c
  7579  017CAE  0E42               	movlw	66
  7580  017CB0  6EE6               	movwf	postinc1,c
  7581  017CB2  0E00               	movlw	0
  7582  017CB4  6EE6               	movwf	postinc1,c
  7583  017CB6  0E00               	movlw	0
  7584  017CB8  6EE6               	movwf	postinc1,c
  7585  017CBA  0E7A               	movlw	122
  7586  017CBC  6EE6               	movwf	postinc1,c
  7587  017CBE  0E44               	movlw	68
  7588  017CC0  6EE6               	movwf	postinc1,c
  7589  017CC2  0E00               	movlw	0
  7590  017CC4  6EE6               	movwf	postinc1,c
  7591  017CC6  0E04               	movlw	4
  7592  017CC8  6EE6               	movwf	postinc1,c
  7593  017CCA  EC73  F0A9         	call	_conv_raw_result	;wreg free
  7594  017CCE  0060  F007  FFE6   	movff	btemp,postinc1
  7595  017CD4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7596  017CDA  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7597  017CE0  0060  F013  FFE6   	movff	btemp+3,postinc1
  7598  017CE6  EC2F  F0C8         	call	___fltol	;wreg free
  7599  017CEA  0060  F007  FFE6   	movff	btemp,postinc1
  7600  017CF0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7601  017CF6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7602  017CFC  0060  F013  FFE6   	movff	btemp+3,postinc1
  7603  017D02  0E00               	movlw	0
  7604  017D04  6EE6               	movwf	postinc1,c
  7605  017D06  EC43  F0C2         	call	___xxtofl	;wreg free
  7606  017D0A  0060  F007  FFE6   	movff	btemp,postinc1
  7607  017D10  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7608  017D16  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7609  017D1C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7610  017D22  ECC3  F09E         	call	___flmul	;wreg free
  7611  017D26  0060  F007  FFE6   	movff	btemp,postinc1
  7612  017D2C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7613  017D32  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7614  017D38  0060  F013  FFE6   	movff	btemp+3,postinc1
  7615  017D3E  EC2F  F0C8         	call	___fltol	;wreg free
  7616  017D42  0060  F007  FFE6   	movff	btemp,postinc1
  7617  017D48  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7618  017D4E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7619  017D54  0060  F013  FFE6   	movff	btemp+3,postinc1
  7620  017D5A  ECE7  F0D2         	call	_Volts_to_SOC	;wreg free
  7621  017D5E  0060  F004  F00B   	movff	btemp,btemp+10
  7622  017D64  0060  F008  F00C   	movff	btemp+1,btemp+11
  7623  017D6A  500B               	movf	(btemp+10)^0,w,c
  7624  017D6C  6E05               	movwf	(btemp+4)^0,c
  7625  017D6E  500C               	movf	(btemp+11)^0,w,c
  7626  017D70  6E06               	movwf	(btemp+5)^0,c
  7627  017D72  6A07               	clrf	(btemp+6)^0,c
  7628  017D74  6A08               	clrf	(btemp+7)^0,c
  7629  017D76  0060  F017  FFE6   	movff	btemp+4,postinc1
  7630  017D7C  0060  F01B  FFE6   	movff	btemp+5,postinc1
  7631  017D82  0060  F01F  FFE6   	movff	btemp+6,postinc1
  7632  017D88  0060  F023  FFE6   	movff	btemp+7,postinc1
  7633  017D8E  0E00               	movlw	0
  7634  017D90  6EE6               	movwf	postinc1,c
  7635  017D92  EC43  F0C2         	call	___xxtofl	;wreg free
  7636  017D96  0060  F007  FFE6   	movff	btemp,postinc1
  7637  017D9C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7638  017DA2  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7639  017DA8  0060  F013  FFE6   	movff	btemp+3,postinc1
  7640  017DAE  ECB6  F0A6         	call	___fldiv	;wreg free
  7641  017DB2  0060  F007  FFE6   	movff	btemp,postinc1
  7642  017DB8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7643  017DBE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7644  017DC4  0060  F013  FFE6   	movff	btemp+3,postinc1
  7645  017DCA  ECC3  F09E         	call	___flmul	;wreg free
  7646  017DCE  0060  F004  F78F   	movff	btemp,_C+144	;volatile
  7647  017DD4  0060  F008  F790   	movff	btemp+1,_C+145	;volatile
  7648  017DDA  0060  F00C  F791   	movff	btemp+2,_C+146	;volatile
  7649  017DE0  0060  F010  F792   	movff	btemp+3,_C+147	;volatile
  7650                           
  7651                           ;bsoc.c: 116:  C.dynamic_ah_adj = C.dynamic_ah;
  7652  017DE6  EE21  F38F         	lfsr	2,_C+144	;volatile
  7653  017DEA  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  7654  017DF0  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  7655  017DF6  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  7656  017DFC  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  7657                           
  7658                           ;bsoc.c: 117:  TMR3_SetInterruptHandler(calc_bsoc);
  7659  017E02  0E50               	movlw	low _calc_bsoc
  7660  017E04  6EE6               	movwf	postinc1,c
  7661  017E06  0E33               	movlw	high _calc_bsoc
  7662  017E08  6EE6               	movwf	postinc1,c
  7663  017E0A  0E01               	movlw	low (_calc_bsoc shr (0+16))
  7664  017E0C  6EE6               	movwf	postinc1,c
  7665  017E0E  EC75  F0DF         	call	_TMR3_SetInterruptHandler	;wreg free
  7666                           
  7667                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  7668  017E12  0012               	return		;funcret
  7669  017E14                     __end_of_init_bsoc:
  7670                           	opt callstack 0
  7671                           
  7672 ;; *************** function _Volts_to_SOC *****************
  7673 ;; Defined at:
  7674 ;;		line 174 in file "bsoc.c"
  7675 ;; Parameters:    Size  Location     Type
  7676 ;;  cvoltage        4  [STACK] const unsigned long 
  7677 ;; Auto vars:     Size  Location     Type
  7678 ;;  soc             2  [STACK] unsigned short 
  7679 ;;  slot            1  [STACK] unsigned char 
  7680 ;; Return value:  Size  Location     Type
  7681 ;;                  2  [STACK] unsigned short 
  7682 ;; Registers used:
  7683 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  7684 ;; Tracked objects:
  7685 ;;		On entry : 0/0
  7686 ;;		On exit  : 0/0
  7687 ;;		Unchanged: 0/0
  7688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7693 ;;Total ram usage:        0 bytes
  7694 ;; Hardware stack levels used:    1
  7695 ;; Hardware stack levels required when called:   15
  7696 ;; This function calls:
  7697 ;;		Nothing
  7698 ;; This function is called by:
  7699 ;;		_init_bsoc
  7700 ;; This function uses a reentrant model
  7701 ;;
  7702                           
  7703                           	psect	text15
  7704  01A5CE                     __ptext15:
  7705                           	opt callstack 0
  7706  01A5CE                     _Volts_to_SOC:
  7707                           	opt callstack 0
  7708                           
  7709                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7710  01A5CE  52E6               	movf	postinc1,f,c
  7711  01A5D0  52E6               	movf	postinc1,f,c
  7712  01A5D2  52E6               	movf	postinc1,f,c
  7713                           
  7714                           ;bsoc.c: 174: uint16_t Volts_to_SOC(const uint32_t cvoltage);bsoc.c: 175: {;bsoc.c: 176:
      +                            uint8_t slot;;bsoc.c: 177:  uint16_t soc = 0;
  7715                           ;stkvar	_soc @ sp[(-3)+0]
  7716                           
  7717                           ;incstack = 0
  7718  01A5D4  0EFD               	movlw	-3
  7719  01A5D6  6AE3               	clrf	plusw1,c
  7720  01A5D8  0EFE               	movlw	-2
  7721  01A5DA  6AE3               	clrf	plusw1,c
  7722                           
  7723                           ;bsoc.c: 182:  for (slot = 0; slot < 26; slot++) {
  7724                           ;stkvar	_slot @ sp[(-3)+2]
  7725  01A5DC  0EFF               	movlw	-1
  7726  01A5DE  6AE3               	clrf	plusw1,c
  7727  01A5E0                     l10818:
  7728                           
  7729                           ;bsoc.c: 183:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  7730                           ;stkvar	_cvoltage @ sp[(-3)+-4]
  7731                           ;stkvar	_slot @ sp[(-3)+2]
  7732  01A5E0  0EFF               	movlw	-1
  7733  01A5E2  50E3               	movf	plusw1,w,c
  7734  01A5E4  0D08               	mullw	8
  7735  01A5E6  0EEB               	movlw	low _BVSOC_TABLE
  7736  01A5E8  24F3               	addwf	243,w,c
  7737  01A5EA  6EF6               	movwf	tblptrl,c
  7738  01A5EC  0EF9               	movlw	high _BVSOC_TABLE
  7739  01A5EE  20F4               	addwfc	244,w,c
  7740  01A5F0  6EF7               	movwf	tblptrh,c
  7741  01A5F2                     	if	1	;There are 3 active tblptr bytes
  7742  01A5F2  6AF8               	clrf	tblptru,c
  7743  01A5F4  0E00               	movlw	low (__mediumconst shr (0+16))
  7744  01A5F6  22F8               	addwfc	tblptru,f,c
  7745  01A5F8                     	endif
  7746  01A5F8  0EF9               	movlw	-7
  7747  01A5FA  50E3               	movf	plusw1,w,c
  7748  01A5FC  0009               	tblrd		*+
  7749  01A5FE  5CF5               	subwf	tablat,w,c
  7750  01A600  0EFA               	movlw	-6
  7751  01A602  50E3               	movf	plusw1,w,c
  7752  01A604  0009               	tblrd		*+
  7753  01A606  58F5               	subwfb	tablat,w,c
  7754  01A608  0EFB               	movlw	-5
  7755  01A60A  50E3               	movf	plusw1,w,c
  7756  01A60C  0009               	tblrd		*+
  7757  01A60E  58F5               	subwfb	tablat,w,c
  7758  01A610  0EFC               	movlw	-4
  7759  01A612  50E3               	movf	plusw1,w,c
  7760  01A614  0009               	tblrd		*+
  7761  01A616  58F5               	subwfb	tablat,w,c
  7762  01A618  B0D8               	btfsc	status,0,c
  7763  01A61A  D020               	goto	l10822
  7764                           
  7765                           ;bsoc.c: 184:    soc = BVSOC_TABLE[slot][1];
  7766                           ;stkvar	_slot @ sp[(-3)+2]
  7767  01A61C  0EFF               	movlw	-1
  7768  01A61E  50E3               	movf	plusw1,w,c
  7769  01A620  0D08               	mullw	8
  7770  01A622  0E04               	movlw	4
  7771  01A624  26F3               	addwf	243,f,c
  7772  01A626  0E00               	movlw	0
  7773  01A628  22F4               	addwfc	244,f,c
  7774  01A62A  0EEB               	movlw	low _BVSOC_TABLE
  7775  01A62C  24F3               	addwf	243,w,c
  7776  01A62E  6EF6               	movwf	tblptrl,c
  7777  01A630  0EF9               	movlw	high _BVSOC_TABLE
  7778  01A632  20F4               	addwfc	244,w,c
  7779  01A634  6EF7               	movwf	tblptrh,c
  7780  01A636                     	if	1	;There are 3 active tblptr bytes
  7781  01A636  6AF8               	clrf	tblptru,c
  7782  01A638  0E00               	movlw	low (__mediumconst shr (0+16))
  7783  01A63A  22F8               	addwfc	tblptru,f,c
  7784  01A63C                     	endif
  7785  01A63C  0009               	tblrd		*+
  7786  01A63E  006F FFD4  F00B    	movff	tablat,btemp+10
  7787  01A644  0009               	tblrd		*+
  7788  01A646  006F FFD4  F00C    	movff	tablat,btemp+11
  7789                           
  7790                           ;stkvar	_soc @ sp[(-3)+0]
  7791  01A64C  0EFD               	movlw	-3
  7792  01A64E  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7793  01A654  0EFE               	movlw	-2
  7794  01A656  0060  F033  FFE3   	movff	btemp+11,plusw1
  7795  01A65C                     l10822:
  7796                           
  7797                           ;bsoc.c: 186:  }
  7798                           ;stkvar	_slot @ sp[(-3)+2]
  7799  01A65C  0EFF               	movlw	-1
  7800  01A65E  2AE3               	incf	plusw1,f,c
  7801                           
  7802                           ;stkvar	_slot @ sp[(-3)+2]
  7803  01A660  0EFF               	movlw	-1
  7804  01A662  006F FF8C  F001    	movff	plusw1,btemp
  7805  01A668  0E19               	movlw	25
  7806  01A66A  6401               	cpfsgt	btemp^0,c
  7807  01A66C  D7B9               	goto	l10818
  7808                           
  7809                           ;bsoc.c: 187:  return soc;
  7810                           ;stkvar	_soc @ sp[(-3)+0]
  7811  01A66E  0EFD               	movlw	-3
  7812  01A670  006F FF8C  F001    	movff	plusw1,btemp
  7813  01A676  0EFE               	movlw	-2
  7814  01A678  006F FF8C  F002    	movff	plusw1,btemp+1
  7815                           
  7816                           ; _Volts_to_SOC: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  7817  01A67E  0EF9               	movlw	249
  7818  01A680  26E1               	addwf	fsr1l,f,c
  7819  01A682  0EFF               	movlw	255
  7820  01A684  22E2               	addwfc	fsr1h,f,c
  7821  01A686  0012               	return		;funcret
  7822  01A688                     __end_of_Volts_to_SOC:
  7823                           	opt callstack 0
  7824                           
  7825 ;; *************** function _hid_display *****************
  7826 ;; Defined at:
  7827 ;;		line 17 in file "hid.c"
  7828 ;; Parameters:    Size  Location     Type
  7829 ;;  h               2  [STACK] PTR struct H_data
  7830 ;;		 -> H(7), 
  7831 ;; Auto vars:     Size  Location     Type
  7832 ;;		None
  7833 ;; Return value:  Size  Location     Type
  7834 ;;                  2  [STACK] PTR struct H_data
  7835 ;; Registers used:
  7836 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
  7837 ;; Tracked objects:
  7838 ;;		On entry : 3F/39
  7839 ;;		On exit  : 0/0
  7840 ;;		Unchanged: 0/0
  7841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7846 ;;Total ram usage:        0 bytes
  7847 ;; Hardware stack levels used:    1
  7848 ;; Hardware stack levels required when called:   17
  7849 ;; This function calls:
  7850 ;;		_hid_input
  7851 ;; This function is called by:
  7852 ;;		_main
  7853 ;; This function uses a reentrant model
  7854 ;;
  7855                           
  7856                           	psect	text16
  7857  01868A                     __ptext16:
  7858                           	opt callstack 0
  7859  01868A                     _hid_display:
  7860                           	opt callstack 13
  7861                           
  7862                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  7863                           ;stkvar	_h @ sp[(0)+-2]
  7864                           
  7865                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7866                           ;incstack = 0
  7867  01868A  0EFE               	movlw	-2
  7868  01868C  006F FF8F FFE6     	movff	plusw1,postinc1
  7869  018692  006F FF8F FFE6     	movff	plusw1,postinc1
  7870  018698  ECB5  F0D1         	call	_hid_input	;wreg free
  7871                           
  7872                           ;hid.c: 21:  switch (h->h_state) {
  7873  01869C  D0C6               	goto	l13188
  7874  01869E                     l13166:
  7875                           
  7876                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  7877                           ;stkvar	_h @ sp[(0)+-2]
  7878  01869E  0EFE               	movlw	-2
  7879  0186A0  006F FF8C  F00B    	movff	plusw1,btemp+10
  7880  0186A6  0EFF               	movlw	-1
  7881  0186A8  006F FF8C  F00C    	movff	plusw1,btemp+11
  7882  0186AE  0E01               	movlw	1
  7883  0186B0  240B               	addwf	(btemp+10)^0,w,c
  7884  0186B2  6ED9               	movwf	fsr2l,c
  7885  0186B4  0E00               	movlw	0
  7886  0186B6  200C               	addwfc	(btemp+11)^0,w,c
  7887  0186B8  6EDA               	movwf	fsr2h,c
  7888  0186BA  0E01               	movlw	1
  7889  0186BC  6EDF               	movwf	indf2,c
  7890                           
  7891                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  7892                           ;stkvar	_h @ sp[(0)+-2]
  7893  0186BE  0EFE               	movlw	-2
  7894  0186C0  006F FF8F FFD9     	movff	plusw1,fsr2l
  7895  0186C6  0EFF               	movlw	-1
  7896  0186C8  006F FF8F FFDA     	movff	plusw1,fsr2h
  7897  0186CE  0E00               	movlw	0
  7898  0186D0  6EDF               	movwf	indf2,c
  7899                           
  7900                           ;hid.c: 25:   h->wait_enter = 1;
  7901                           ;stkvar	_h @ sp[(0)+-2]
  7902  0186D2  0EFE               	movlw	-2
  7903  0186D4  006F FF8C  F00B    	movff	plusw1,btemp+10
  7904  0186DA  0EFF               	movlw	-1
  7905  0186DC  006F FF8C  F00C    	movff	plusw1,btemp+11
  7906  0186E2  0E04               	movlw	4
  7907  0186E4  240B               	addwf	(btemp+10)^0,w,c
  7908  0186E6  6ED9               	movwf	fsr2l,c
  7909  0186E8  0E00               	movlw	0
  7910  0186EA  200C               	addwfc	(btemp+11)^0,w,c
  7911  0186EC  6EDA               	movwf	fsr2h,c
  7912  0186EE  0E01               	movlw	1
  7913  0186F0  6EDF               	movwf	indf2,c
  7914                           
  7915                           ;hid.c: 26:   h->wait_select = 1;
  7916                           ;stkvar	_h @ sp[(0)+-2]
  7917  0186F2  0EFE               	movlw	-2
  7918  0186F4  006F FF8C  F00B    	movff	plusw1,btemp+10
  7919  0186FA  0EFF               	movlw	-1
  7920  0186FC  006F FF8C  F00C    	movff	plusw1,btemp+11
  7921  018702  0E02               	movlw	2
  7922  018704  240B               	addwf	(btemp+10)^0,w,c
  7923  018706  6ED9               	movwf	fsr2l,c
  7924  018708  0E00               	movlw	0
  7925  01870A  200C               	addwfc	(btemp+11)^0,w,c
  7926  01870C  6EDA               	movwf	fsr2h,c
  7927  01870E  0E01               	movlw	1
  7928  018710  6EDF               	movwf	indf2,c
  7929                           
  7930                           ;hid.c: 27:   h->select_p = SW_OFF;
  7931                           ;stkvar	_h @ sp[(0)+-2]
  7932  018712  0EFE               	movlw	-2
  7933  018714  006F FF8C  F00B    	movff	plusw1,btemp+10
  7934  01871A  0EFF               	movlw	-1
  7935  01871C  006F FF8C  F00C    	movff	plusw1,btemp+11
  7936  018722  0E03               	movlw	3
  7937  018724  240B               	addwf	(btemp+10)^0,w,c
  7938  018726  6ED9               	movwf	fsr2l,c
  7939  018728  0E00               	movlw	0
  7940  01872A  200C               	addwfc	(btemp+11)^0,w,c
  7941  01872C  6EDA               	movwf	fsr2h,c
  7942  01872E  0E00               	movlw	0
  7943  018730  6EDF               	movwf	indf2,c
  7944                           
  7945                           ;hid.c: 28:   h->enter_p = SW_OFF;
  7946                           ;stkvar	_h @ sp[(0)+-2]
  7947  018732  0EFE               	movlw	-2
  7948  018734  006F FF8C  F00B    	movff	plusw1,btemp+10
  7949  01873A  0EFF               	movlw	-1
  7950  01873C  006F FF8C  F00C    	movff	plusw1,btemp+11
  7951  018742  0E05               	movlw	5
  7952  018744  240B               	addwf	(btemp+10)^0,w,c
  7953  018746  6ED9               	movwf	fsr2l,c
  7954  018748  0E00               	movlw	0
  7955  01874A  200C               	addwfc	(btemp+11)^0,w,c
  7956  01874C  6EDA               	movwf	fsr2h,c
  7957  01874E  0E00               	movlw	0
  7958  018750  D06A               	goto	L4
  7959  018752                     l13178:
  7960                           
  7961                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  7962                           ;stkvar	_h @ sp[(0)+-2]
  7963  018752  0EFE               	movlw	-2
  7964  018754  006F FF8C  F00B    	movff	plusw1,btemp+10
  7965  01875A  0EFF               	movlw	-1
  7966  01875C  006F FF8C  F00C    	movff	plusw1,btemp+11
  7967  018762  0E02               	movlw	2
  7968  018764  240B               	addwf	(btemp+10)^0,w,c
  7969  018766  6ED9               	movwf	fsr2l,c
  7970  018768  0E00               	movlw	0
  7971  01876A  200C               	addwfc	(btemp+11)^0,w,c
  7972  01876C  6EDA               	movwf	fsr2h,c
  7973  01876E  50DF               	movf	indf2,w,c
  7974  018770  A4D8               	btfss	status,2,c
  7975  018772  D076               	goto	l2027
  7976                           
  7977                           ;stkvar	_h @ sp[(0)+-2]
  7978  018774  0EFE               	movlw	-2
  7979  018776  006F FF8C  F00B    	movff	plusw1,btemp+10
  7980  01877C  0EFF               	movlw	-1
  7981  01877E  006F FF8C  F00C    	movff	plusw1,btemp+11
  7982  018784  0E03               	movlw	3
  7983  018786  240B               	addwf	(btemp+10)^0,w,c
  7984  018788  6ED9               	movwf	fsr2l,c
  7985  01878A  0E00               	movlw	0
  7986  01878C  200C               	addwfc	(btemp+11)^0,w,c
  7987  01878E  6EDA               	movwf	fsr2h,c
  7988  018790  50DF               	movf	indf2,w,c
  7989  018792  A4D8               	btfss	status,2,c
  7990  018794  D065               	goto	l2027
  7991                           
  7992                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  7993                           ;stkvar	_h @ sp[(0)+-2]
  7994  018796  0EFE               	movlw	-2
  7995  018798  006F FF8C  F00B    	movff	plusw1,btemp+10
  7996  01879E  0EFF               	movlw	-1
  7997  0187A0  006F FF8C  F00C    	movff	plusw1,btemp+11
  7998  0187A6  0E06               	movlw	6
  7999  0187A8  240B               	addwf	(btemp+10)^0,w,c
  8000  0187AA  6ED9               	movwf	fsr2l,c
  8001  0187AC  0E00               	movlw	0
  8002  0187AE  200C               	addwfc	(btemp+11)^0,w,c
  8003  0187B0  6EDA               	movwf	fsr2h,c
  8004                           
  8005                           ;stkvar	_h @ sp[(0)+-2]
  8006  0187B2  0EFE               	movlw	-2
  8007  0187B4  006F FF8C  F00B    	movff	plusw1,btemp+10
  8008  0187BA  0EFF               	movlw	-1
  8009  0187BC  006F FF8C  F00C    	movff	plusw1,btemp+11
  8010  0187C2  0E06               	movlw	6
  8011  0187C4  240B               	addwf	(btemp+10)^0,w,c
  8012  0187C6  6EE9               	movwf	fsr0l,c
  8013  0187C8  0E00               	movlw	0
  8014  0187CA  200C               	addwfc	(btemp+11)^0,w,c
  8015  0187CC  6EEA               	movwf	fsr0h,c
  8016  0187CE  2AEF               	incf	indf0,f,c
  8017  0187D0  50EF               	movf	indf0,w,c
  8018  0187D2  0B03               	andlw	3
  8019  0187D4  6EDF               	movwf	indf2,c
  8020                           
  8021                           ;hid.c: 34:    h->hid_display = h->sequence;
  8022                           ;stkvar	_h @ sp[(0)+-2]
  8023  0187D6  0EFE               	movlw	-2
  8024  0187D8  006F FF8C  F00B    	movff	plusw1,btemp+10
  8025  0187DE  0EFF               	movlw	-1
  8026  0187E0  006F FF8C  F00C    	movff	plusw1,btemp+11
  8027  0187E6  0E06               	movlw	6
  8028  0187E8  240B               	addwf	(btemp+10)^0,w,c
  8029  0187EA  6ED9               	movwf	fsr2l,c
  8030  0187EC  0E00               	movlw	0
  8031  0187EE  200C               	addwfc	(btemp+11)^0,w,c
  8032  0187F0  6EDA               	movwf	fsr2h,c
  8033                           
  8034                           ;stkvar	_h @ sp[(0)+-2]
  8035  0187F2  0EFE               	movlw	-2
  8036  0187F4  006F FF8F FFE9     	movff	plusw1,fsr0l
  8037  0187FA  0EFF               	movlw	-1
  8038  0187FC  006F FF8F FFEA     	movff	plusw1,fsr0h
  8039  018802  006F FF7F FFEF     	movff	indf2,indf0
  8040                           
  8041                           ;hid.c: 35:    h->wait_select = 1;
  8042                           ;stkvar	_h @ sp[(0)+-2]
  8043  018808  0EFE               	movlw	-2
  8044  01880A  006F FF8C  F00B    	movff	plusw1,btemp+10
  8045  018810  0EFF               	movlw	-1
  8046  018812  006F FF8C  F00C    	movff	plusw1,btemp+11
  8047  018818  0E02               	movlw	2
  8048  01881A  240B               	addwf	(btemp+10)^0,w,c
  8049  01881C  6ED9               	movwf	fsr2l,c
  8050  01881E  0E00               	movlw	0
  8051  018820  200C               	addwfc	(btemp+11)^0,w,c
  8052  018822  6EDA               	movwf	fsr2h,c
  8053  018824  0E01               	movlw	1
  8054  018826                     L4:
  8055  018826  6EDF               	movwf	indf2,c
  8056  018828  D01B               	goto	l2027
  8057  01882A                     l13188:
  8058                           
  8059                           ;stkvar	_h @ sp[(0)+-2]
  8060  01882A  0EFE               	movlw	-2
  8061  01882C  006F FF8C  F00B    	movff	plusw1,btemp+10
  8062  018832  0EFF               	movlw	-1
  8063  018834  006F FF8C  F00C    	movff	plusw1,btemp+11
  8064  01883A  0E01               	movlw	1
  8065  01883C  240B               	addwf	(btemp+10)^0,w,c
  8066  01883E  6ED9               	movwf	fsr2l,c
  8067  018840  0E00               	movlw	0
  8068  018842  200C               	addwfc	(btemp+11)^0,w,c
  8069  018844  6EDA               	movwf	fsr2h,c
  8070  018846  50DF               	movf	indf2,w,c
  8071  018848  6E0B               	movwf	(btemp+10)^0,c
  8072  01884A  6A0C               	clrf	(btemp+11)^0,c
  8073                           
  8074                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8075                           ; Switch size 1, requested type "simple"
  8076                           ; Number of cases is 1, Range of values is 0 to 0
  8077                           ; switch strategies available:
  8078                           ; Name         Instructions Cycles
  8079                           ; simple_byte            4     3 (average)
  8080                           ;	Chosen strategy is simple_byte
  8081  01884C  500C               	movf	(btemp+11)^0,w,c
  8082  01884E  0A00               	xorlw	0	; case 0
  8083  018850  A4D8               	btfss	status,2,c
  8084  018852  D77F               	goto	l13178
  8085                           
  8086                           ; Switch size 1, requested type "simple"
  8087                           ; Number of cases is 2, Range of values is 0 to 1
  8088                           ; switch strategies available:
  8089                           ; Name         Instructions Cycles
  8090                           ; simple_byte            7     4 (average)
  8091                           ;	Chosen strategy is simple_byte
  8092  018854  500B               	movf	(btemp+10)^0,w,c
  8093  018856  0A00               	xorlw	0	; case 0
  8094  018858  B4D8               	btfsc	status,2,c
  8095  01885A  D721               	goto	l13166
  8096  01885C  0A01               	xorlw	1	; case 1
  8097  01885E  D779               	goto	l13178
  8098  018860                     l2027:
  8099                           
  8100                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
  8101  018860  52E5               	movf	postdec1,f,c
  8102  018862  52E5               	movf	postdec1,f,c
  8103  018864  0012               	return		;funcret
  8104  018866                     __end_of_hid_display:
  8105                           	opt callstack 0
  8106                           
  8107 ;; *************** function _hid_input *****************
  8108 ;; Defined at:
  8109 ;;		line 3 in file "hid.c"
  8110 ;; Parameters:    Size  Location     Type
  8111 ;;  h               2  [STACK] PTR struct H_data
  8112 ;;		 -> H(7), 
  8113 ;; Auto vars:     Size  Location     Type
  8114 ;;		None
  8115 ;; Return value:  Size  Location     Type
  8116 ;;                  2  [STACK] PTR struct H_data
  8117 ;; Registers used:
  8118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8119 ;; Tracked objects:
  8120 ;;		On entry : 0/39
  8121 ;;		On exit  : 0/0
  8122 ;;		Unchanged: 0/0
  8123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8128 ;;Total ram usage:        0 bytes
  8129 ;; Hardware stack levels used:    1
  8130 ;; Hardware stack levels required when called:   16
  8131 ;; This function calls:
  8132 ;;		_get_switch
  8133 ;; This function is called by:
  8134 ;;		_hid_display
  8135 ;; This function uses a reentrant model
  8136 ;;
  8137                           
  8138                           	psect	text17
  8139  01A36A                     __ptext17:
  8140                           	opt callstack 0
  8141  01A36A                     _hid_input:
  8142                           	opt callstack 13
  8143                           
  8144                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  8145                           
  8146                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8147                           ;incstack = 0
  8148  01A36A  0E02               	movlw	2
  8149  01A36C  6EE6               	movwf	postinc1,c
  8150  01A36E  EC91  F0DE         	call	_get_switch	;wreg free
  8151  01A372  5001               	movf	btemp^0,w,c
  8152  01A374  B4D8               	btfsc	status,2,c
  8153  01A376  D02C               	goto	l13006
  8154                           
  8155                           ;hid.c: 6:   h->wait_select = 0;
  8156                           ;stkvar	_h @ sp[(0)+-2]
  8157  01A378  0EFE               	movlw	-2
  8158  01A37A  006F FF8C  F00B    	movff	plusw1,btemp+10
  8159  01A380  0EFF               	movlw	-1
  8160  01A382  006F FF8C  F00C    	movff	plusw1,btemp+11
  8161  01A388  0E02               	movlw	2
  8162  01A38A  240B               	addwf	(btemp+10)^0,w,c
  8163  01A38C  6ED9               	movwf	fsr2l,c
  8164  01A38E  0E00               	movlw	0
  8165  01A390  200C               	addwfc	(btemp+11)^0,w,c
  8166  01A392  6EDA               	movwf	fsr2h,c
  8167  01A394  0E00               	movlw	0
  8168  01A396  6EDF               	movwf	indf2,c
  8169                           
  8170                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  8171  01A398  0E02               	movlw	2
  8172  01A39A  6EE6               	movwf	postinc1,c
  8173  01A39C  EC91  F0DE         	call	_get_switch	;wreg free
  8174  01A3A0  5001               	movf	btemp^0,w,c
  8175  01A3A2  B4D8               	btfsc	status,2,c
  8176  01A3A4  D003               	goto	u12430
  8177  01A3A6  6A0C               	clrf	(btemp+11)^0,c
  8178  01A3A8  2A0C               	incf	(btemp+11)^0,f,c
  8179  01A3AA  D001               	goto	u12448
  8180  01A3AC                     u12430:
  8181  01A3AC  6A0C               	clrf	(btemp+11)^0,c
  8182  01A3AE                     u12448:
  8183                           
  8184                           ;stkvar	_h @ sp[(0)+-2]
  8185  01A3AE  0EFE               	movlw	-2
  8186  01A3B0  006F FF8C  F009    	movff	plusw1,btemp+8
  8187  01A3B6  0EFF               	movlw	-1
  8188  01A3B8  006F FF8C  F00A    	movff	plusw1,btemp+9
  8189  01A3BE  0E03               	movlw	3
  8190  01A3C0  2409               	addwf	(btemp+8)^0,w,c
  8191  01A3C2  6ED9               	movwf	fsr2l,c
  8192  01A3C4  0E00               	movlw	0
  8193  01A3C6  200A               	addwfc	(btemp+9)^0,w,c
  8194  01A3C8  6EDA               	movwf	fsr2h,c
  8195  01A3CA  0060  F033  FFDF   	movff	btemp+11,indf2
  8196  01A3D0                     l13006:
  8197                           
  8198                           ;hid.c: 10:  if (get_switch(SENTER)) {
  8199  01A3D0  0E03               	movlw	3
  8200  01A3D2  6EE6               	movwf	postinc1,c
  8201  01A3D4  EC91  F0DE         	call	_get_switch	;wreg free
  8202  01A3D8  5001               	movf	btemp^0,w,c
  8203  01A3DA  B4D8               	btfsc	status,2,c
  8204  01A3DC  D02C               	goto	l2018
  8205                           
  8206                           ;hid.c: 11:   h->wait_enter = 0;
  8207                           ;stkvar	_h @ sp[(0)+-2]
  8208  01A3DE  0EFE               	movlw	-2
  8209  01A3E0  006F FF8C  F00B    	movff	plusw1,btemp+10
  8210  01A3E6  0EFF               	movlw	-1
  8211  01A3E8  006F FF8C  F00C    	movff	plusw1,btemp+11
  8212  01A3EE  0E04               	movlw	4
  8213  01A3F0  240B               	addwf	(btemp+10)^0,w,c
  8214  01A3F2  6ED9               	movwf	fsr2l,c
  8215  01A3F4  0E00               	movlw	0
  8216  01A3F6  200C               	addwfc	(btemp+11)^0,w,c
  8217  01A3F8  6EDA               	movwf	fsr2h,c
  8218  01A3FA  0E00               	movlw	0
  8219  01A3FC  6EDF               	movwf	indf2,c
  8220                           
  8221                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  8222  01A3FE  0E03               	movlw	3
  8223  01A400  6EE6               	movwf	postinc1,c
  8224  01A402  EC91  F0DE         	call	_get_switch	;wreg free
  8225  01A406  5001               	movf	btemp^0,w,c
  8226  01A408  B4D8               	btfsc	status,2,c
  8227  01A40A  D003               	goto	u12460
  8228  01A40C  6A0C               	clrf	(btemp+11)^0,c
  8229  01A40E  2A0C               	incf	(btemp+11)^0,f,c
  8230  01A410  D001               	goto	u12478
  8231  01A412                     u12460:
  8232  01A412  6A0C               	clrf	(btemp+11)^0,c
  8233  01A414                     u12478:
  8234                           
  8235                           ;stkvar	_h @ sp[(0)+-2]
  8236  01A414  0EFE               	movlw	-2
  8237  01A416  006F FF8C  F009    	movff	plusw1,btemp+8
  8238  01A41C  0EFF               	movlw	-1
  8239  01A41E  006F FF8C  F00A    	movff	plusw1,btemp+9
  8240  01A424  0E05               	movlw	5
  8241  01A426  2409               	addwf	(btemp+8)^0,w,c
  8242  01A428  6ED9               	movwf	fsr2l,c
  8243  01A42A  0E00               	movlw	0
  8244  01A42C  200A               	addwfc	(btemp+9)^0,w,c
  8245  01A42E  6EDA               	movwf	fsr2h,c
  8246  01A430  0060  F033  FFDF   	movff	btemp+11,indf2
  8247  01A436                     l2018:
  8248                           
  8249                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
  8250  01A436  52E5               	movf	postdec1,f,c
  8251  01A438  52E5               	movf	postdec1,f,c
  8252  01A43A  0012               	return		;funcret
  8253  01A43C                     __end_of_hid_input:
  8254                           	opt callstack 0
  8255                           
  8256 ;; *************** function _get_switch *****************
  8257 ;; Defined at:
  8258 ;;		line 18 in file "dio.c"
  8259 ;; Parameters:    Size  Location     Type
  8260 ;;  i               1  [STACK] const unsigned char 
  8261 ;; Auto vars:     Size  Location     Type
  8262 ;;		None
  8263 ;; Return value:  Size  Location     Type
  8264 ;;                  1  [STACK] enum E17021
  8265 ;; Registers used:
  8266 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  8267 ;; Tracked objects:
  8268 ;;		On entry : 0/39
  8269 ;;		On exit  : 0/0
  8270 ;;		Unchanged: 0/0
  8271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8276 ;;Total ram usage:        0 bytes
  8277 ;; Hardware stack levels used:    1
  8278 ;; Hardware stack levels required when called:   15
  8279 ;; This function calls:
  8280 ;;		Nothing
  8281 ;; This function is called by:
  8282 ;;		_main
  8283 ;;		_hid_input
  8284 ;; This function uses a reentrant model
  8285 ;;
  8286                           
  8287                           	psect	text18
  8288  01BD22                     __ptext18:
  8289                           	opt callstack 0
  8290  01BD22                     _get_switch:
  8291                           	opt callstack 13
  8292                           
  8293                           ;dio.c: 18: SW_STATES get_switch(const uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  8294                           ;stkvar	_i @ sp[(0)+-1]
  8295                           
  8296                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8297                           ;incstack = 0
  8298  01BD22  0EFF               	movlw	-1
  8299  01BD24  006F FF8C  F001    	movff	plusw1,btemp
  8300  01BD2A  0E03               	movlw	3
  8301  01BD2C  6401               	cpfsgt	btemp^0,c
  8302  01BD2E  D002               	goto	l10052
  8303                           
  8304                           ;dio.c: 21:   return SW_OFF;
  8305  01BD30  0E00               	movlw	0
  8306  01BD32  D00A               	goto	L5
  8307  01BD34                     l10052:
  8308                           
  8309                           ;dio.c: 23:  return S.button[i].sw;
  8310                           ;stkvar	_i @ sp[(0)+-1]
  8311  01BD34  0EFF               	movlw	-1
  8312  01BD36  50E3               	movf	plusw1,w,c
  8313  01BD38  0D05               	mullw	5
  8314  01BD3A  0E54               	movlw	low _S
  8315  01BD3C  24F3               	addwf	243,w,c
  8316  01BD3E  6ED9               	movwf	fsr2l,c
  8317  01BD40  0E02               	movlw	high _S
  8318  01BD42  20F4               	addwfc	prodh,w,c
  8319  01BD44  6EDA               	movwf	fsr2h,c
  8320  01BD46  50DF               	movf	indf2,w,c
  8321  01BD48                     L5:
  8322  01BD48  6E01               	movwf	btemp^0,c
  8323                           
  8324                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  8325  01BD4A  52E5               	movf	postdec1,f,c
  8326  01BD4C  0012               	return		;funcret
  8327  01BD4E                     __end_of_get_switch:
  8328                           	opt callstack 0
  8329                           
  8330 ;; *************** function _esr_check *****************
  8331 ;; Defined at:
  8332 ;;		line 196 in file "bsoc.c"
  8333 ;; Parameters:    Size  Location     Type
  8334 ;;  fsm             1  [STACK] const unsigned char 
  8335 ;; Auto vars:     Size  Location     Type
  8336 ;;		None
  8337 ;; Return value:  Size  Location     Type
  8338 ;;                  4  [STACK] float 
  8339 ;; Registers used:
  8340 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8341 ;; Tracked objects:
  8342 ;;		On entry : 0/0
  8343 ;;		On exit  : 0/0
  8344 ;;		Unchanged: 0/0
  8345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8350 ;;Total ram usage:        0 bytes
  8351 ;; Hardware stack levels used:    1
  8352 ;; Hardware stack levels required when called:   18
  8353 ;; This function calls:
  8354 ;;		_StartTimer
  8355 ;;		_TimerDone
  8356 ;;		___fldiv
  8357 ;;		___flsub
  8358 ;;		_conv_raw_result
  8359 ;;		_fabsf
  8360 ;;		_set_load_relay_one
  8361 ;;		_set_load_relay_two
  8362 ;;		_update_adc_result
  8363 ;; This function is called by:
  8364 ;;		_main
  8365 ;; This function uses a reentrant model
  8366 ;;
  8367                           
  8368                           	psect	text19
  8369  017144                     __ptext19:
  8370                           	opt callstack 0
  8371  017144                     _esr_check:
  8372                           	opt callstack 12
  8373                           
  8374                           ;bsoc.c: 196: float esr_check(const uint8_t fsm);bsoc.c: 197: {;bsoc.c: 198:  static uin
      +                          t8_t esr_state = 0;;bsoc.c: 200:  if (fsm) {
  8375                           ;stkvar	_fsm @ sp[(0)+-1]
  8376                           
  8377                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8378                           ;incstack = 0
  8379  017144  0EFF               	movlw	-1
  8380  017146  50E3               	movf	plusw1,w,c
  8381  017148  B4D8               	btfsc	status,2,c
  8382  01714A  D149               	goto	l11142
  8383                           
  8384                           ;bsoc.c: 201:   esr_state = 0;
  8385  01714C  0100               	movlb	0	; () banked
  8386  01714E  6BA4               	clrf	esr_check@esr_state& (0+255),b
  8387                           
  8388                           ; BSR set to: 0
  8389                           ;bsoc.c: 202:   return -10.0;
  8390  017150  0E00               	movlw	0
  8391  017152  6E01               	movwf	btemp^0,c
  8392  017154  0E00               	movlw	0
  8393  017156  6E02               	movwf	(btemp+1)^0,c
  8394  017158  0E20               	movlw	32
  8395  01715A  6E03               	movwf	(btemp+2)^0,c
  8396  01715C  0EC1               	movlw	193
  8397  01715E  D15B               	goto	L6
  8398  017160                     l11074:
  8399                           
  8400                           ; BSR set to: 0
  8401                           ;bsoc.c: 207:   StartTimer(TMR_ESR, 10000);
  8402  017160  0E10               	movlw	16
  8403  017162  6EE6               	movwf	postinc1,c
  8404  017164  0E27               	movlw	39
  8405  017166  6EE6               	movwf	postinc1,c
  8406  017168  0E0C               	movlw	12
  8407  01716A  6EE6               	movwf	postinc1,c
  8408  01716C  ECDC  F0DC         	call	_StartTimer	;wreg free
  8409  017170                     l11076:
  8410                           
  8411                           ;bsoc.c: 208:   esr_state++;
  8412  017170  0100               	movlb	0	; () banked
  8413  017172  2BA4               	incf	esr_check@esr_state& (0+255),f,b
  8414                           
  8415                           ;bsoc.c: 209:   break;
  8416  017174  D149               	goto	l11144
  8417  017176                     l11078:
  8418                           
  8419                           ; BSR set to: 0
  8420                           ;bsoc.c: 214:   set_load_relay_one(0);
  8421  017176  0E00               	movlw	0
  8422  017178  6EE6               	movwf	postinc1,c
  8423  01717A  EC95  F0E1         	call	_set_load_relay_one	;wreg free
  8424                           
  8425                           ;bsoc.c: 215:   set_load_relay_two(0);
  8426  01717E  0E00               	movlw	0
  8427  017180  6EE6               	movwf	postinc1,c
  8428  017182  EC8D  F0E1         	call	_set_load_relay_two	;wreg free
  8429                           
  8430                           ;bsoc.c: 216:   if (TimerDone(TMR_ESR)) {
  8431  017186  0E0C               	movlw	12
  8432  017188  6EE6               	movwf	postinc1,c
  8433  01718A  ECFD  F0DE         	call	_TimerDone	;wreg free
  8434  01718E  5001               	movf	btemp^0,w,c
  8435  017190  B4D8               	btfsc	status,2,c
  8436  017192  D009               	goto	l11084
  8437                           
  8438                           ;bsoc.c: 217:    StartTimer(TMR_ESR, 10000);
  8439  017194  0E10               	movlw	16
  8440  017196  6EE6               	movwf	postinc1,c
  8441  017198  0E27               	movlw	39
  8442  01719A  6EE6               	movwf	postinc1,c
  8443  01719C  0E0C               	movlw	12
  8444  01719E  6EE6               	movwf	postinc1,c
  8445  0171A0  ECDC  F0DC         	call	_StartTimer	;wreg free
  8446                           
  8447                           ;bsoc.c: 218:   } else {
  8448  0171A4  D006               	goto	l11088
  8449  0171A6                     l11084:
  8450                           
  8451                           ;bsoc.c: 219:    return -2.0;
  8452  0171A6  0E00               	movlw	0
  8453  0171A8  6E01               	movwf	btemp^0,c
  8454  0171AA  0E00               	movlw	0
  8455  0171AC  6E02               	movwf	(btemp+1)^0,c
  8456  0171AE  0E00               	movlw	0
  8457  0171B0  D066               	goto	L8
  8458  0171B2                     l11088:
  8459                           
  8460                           ;bsoc.c: 224:   update_adc_result();
  8461  0171B2  EC5B  F0DD         	call	_update_adc_result	;wreg free
  8462                           
  8463                           ;bsoc.c: 225:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  8464  0171B6  0E00               	movlw	0
  8465  0171B8  6EE6               	movwf	postinc1,c
  8466  0171BA  0E04               	movlw	4
  8467  0171BC  6EE6               	movwf	postinc1,c
  8468  0171BE  EC73  F0A9         	call	_conv_raw_result	;wreg free
  8469  0171C2  0060  F004  F815   	movff	btemp,_C+278	;volatile
  8470  0171C8  0060  F008  F816   	movff	btemp+1,_C+279	;volatile
  8471  0171CE  0060  F00C  F817   	movff	btemp+2,_C+280	;volatile
  8472  0171D4  0060  F010  F818   	movff	btemp+3,_C+281	;volatile
  8473  0171DA  D7CA               	goto	l11076
  8474  0171DC                     l11094:
  8475                           
  8476                           ; BSR set to: 0
  8477                           ;bsoc.c: 229:   set_load_relay_one(1);
  8478  0171DC  0E01               	movlw	1
  8479  0171DE  6EE6               	movwf	postinc1,c
  8480  0171E0  EC95  F0E1         	call	_set_load_relay_one	;wreg free
  8481                           
  8482                           ;bsoc.c: 230:   if (TimerDone(TMR_ESR)) {
  8483  0171E4  0E0C               	movlw	12
  8484  0171E6  6EE6               	movwf	postinc1,c
  8485  0171E8  ECFD  F0DE         	call	_TimerDone	;wreg free
  8486  0171EC  5001               	movf	btemp^0,w,c
  8487  0171EE  B4D8               	btfsc	status,2,c
  8488  0171F0  D009               	goto	l11100
  8489                           
  8490                           ;bsoc.c: 231:    StartTimer(TMR_ESR, 10000);
  8491  0171F2  0E10               	movlw	16
  8492  0171F4  6EE6               	movwf	postinc1,c
  8493  0171F6  0E27               	movlw	39
  8494  0171F8  6EE6               	movwf	postinc1,c
  8495  0171FA  0E0C               	movlw	12
  8496  0171FC  6EE6               	movwf	postinc1,c
  8497  0171FE  ECDC  F0DC         	call	_StartTimer	;wreg free
  8498                           
  8499                           ;bsoc.c: 232:   } else {
  8500  017202  D006               	goto	l11104
  8501  017204                     l11100:
  8502                           
  8503                           ;bsoc.c: 233:    return -3.0;
  8504  017204  0E00               	movlw	0
  8505  017206  6E01               	movwf	btemp^0,c
  8506  017208  0E00               	movlw	0
  8507  01720A  6E02               	movwf	(btemp+1)^0,c
  8508  01720C  0E40               	movlw	64
  8509  01720E  D037               	goto	L8
  8510  017210                     l11104:
  8511                           
  8512                           ;bsoc.c: 236:   update_adc_result();
  8513  017210  EC5B  F0DD         	call	_update_adc_result	;wreg free
  8514                           
  8515                           ;bsoc.c: 237:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  8516  017214  0E00               	movlw	0
  8517  017216  6EE6               	movwf	postinc1,c
  8518  017218  0E04               	movlw	4
  8519  01721A  6EE6               	movwf	postinc1,c
  8520  01721C  EC73  F0A9         	call	_conv_raw_result	;wreg free
  8521  017220  0060  F004  F819   	movff	btemp,_C+282	;volatile
  8522  017226  0060  F008  F81A   	movff	btemp+1,_C+283	;volatile
  8523  01722C  0060  F00C  F81B   	movff	btemp+2,_C+284	;volatile
  8524  017232  0060  F010  F81C   	movff	btemp+3,_C+285	;volatile
  8525                           
  8526                           ;bsoc.c: 238:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  8527  017238  0E00               	movlw	0
  8528  01723A  6EE6               	movwf	postinc1,c
  8529  01723C  0E00               	movlw	0
  8530  01723E  6EE6               	movwf	postinc1,c
  8531  017240  EC73  F0A9         	call	_conv_raw_result	;wreg free
  8532  017244  0060  F004  F80D   	movff	btemp,_C+270	;volatile
  8533  01724A  0060  F008  F80E   	movff	btemp+1,_C+271	;volatile
  8534  017250  0060  F00C  F80F   	movff	btemp+2,_C+272	;volatile
  8535  017256  0060  F010  F810   	movff	btemp+3,_C+273	;volatile
  8536  01725C  D789               	goto	l11076
  8537  01725E                     l11112:
  8538                           
  8539                           ; BSR set to: 0
  8540                           ;bsoc.c: 242:   set_load_relay_two(1);
  8541  01725E  0E01               	movlw	1
  8542  017260  6EE6               	movwf	postinc1,c
  8543  017262  EC8D  F0E1         	call	_set_load_relay_two	;wreg free
  8544                           
  8545                           ;bsoc.c: 243:   if (!TimerDone(TMR_ESR))
  8546  017266  0E0C               	movlw	12
  8547  017268  6EE6               	movwf	postinc1,c
  8548  01726A  ECFD  F0DE         	call	_TimerDone	;wreg free
  8549  01726E  5001               	movf	btemp^0,w,c
  8550  017270  A4D8               	btfss	status,2,c
  8551  017272  D008               	goto	l11120
  8552                           
  8553                           ;bsoc.c: 244:    return -4.0;
  8554  017274  0E00               	movlw	0
  8555  017276  6E01               	movwf	btemp^0,c
  8556  017278  0E00               	movlw	0
  8557  01727A  6E02               	movwf	(btemp+1)^0,c
  8558  01727C  0E80               	movlw	128
  8559  01727E                     L8:
  8560  01727E  6E03               	movwf	(btemp+2)^0,c
  8561  017280  0EC0               	movlw	192
  8562  017282  D0C9               	goto	L6
  8563  017284                     l11120:
  8564                           
  8565                           ;bsoc.c: 246:   update_adc_result();
  8566  017284  EC5B  F0DD         	call	_update_adc_result	;wreg free
  8567                           
  8568                           ;bsoc.c: 247:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  8569  017288  0E00               	movlw	0
  8570  01728A  6EE6               	movwf	postinc1,c
  8571  01728C  0E04               	movlw	4
  8572  01728E  6EE6               	movwf	postinc1,c
  8573  017290  EC73  F0A9         	call	_conv_raw_result	;wreg free
  8574  017294  0060  F004  F81D   	movff	btemp,_C+286	;volatile
  8575  01729A  0060  F008  F81E   	movff	btemp+1,_C+287	;volatile
  8576  0172A0  0060  F00C  F81F   	movff	btemp+2,_C+288	;volatile
  8577  0172A6  0060  F010  F820   	movff	btemp+3,_C+289	;volatile
  8578                           
  8579                           ;bsoc.c: 248:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  8580  0172AC  0E00               	movlw	0
  8581  0172AE  6EE6               	movwf	postinc1,c
  8582  0172B0  0E00               	movlw	0
  8583  0172B2  6EE6               	movwf	postinc1,c
  8584  0172B4  EC73  F0A9         	call	_conv_raw_result	;wreg free
  8585  0172B8  0060  F004  F811   	movff	btemp,_C+274	;volatile
  8586  0172BE  0060  F008  F812   	movff	btemp+1,_C+275	;volatile
  8587  0172C4  0060  F00C  F813   	movff	btemp+2,_C+276	;volatile
  8588  0172CA  0060  F010  F814   	movff	btemp+3,_C+277	;volatile
  8589                           
  8590                           ;bsoc.c: 250:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  8591  0172D0  EE22  F011         	lfsr	2,_C+274	;volatile
  8592  0172D4  006F FF7B FFE6     	movff	postinc2,postinc1
  8593  0172DA  006F FF7B FFE6     	movff	postinc2,postinc1
  8594  0172E0  006F FF7B FFE6     	movff	postinc2,postinc1
  8595  0172E6  006F FF7B FFE6     	movff	postinc2,postinc1
  8596  0172EC  EE22  F00D         	lfsr	2,_C+270	;volatile
  8597  0172F0  006F FF7B FFE6     	movff	postinc2,postinc1
  8598  0172F6  006F FF7B FFE6     	movff	postinc2,postinc1
  8599  0172FC  006F FF7B FFE6     	movff	postinc2,postinc1
  8600  017302  006F FF7B FFE6     	movff	postinc2,postinc1
  8601  017308  EC36  F0DC         	call	___flsub	;wreg free
  8602  01730C  0060  F007  FFE6   	movff	btemp,postinc1
  8603  017312  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8604  017318  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8605  01731E  0060  F013  FFE6   	movff	btemp+3,postinc1
  8606  017324  EE22  F01D         	lfsr	2,_C+286	;volatile
  8607  017328  006F FF7B FFE6     	movff	postinc2,postinc1
  8608  01732E  006F FF7B FFE6     	movff	postinc2,postinc1
  8609  017334  006F FF7B FFE6     	movff	postinc2,postinc1
  8610  01733A  006F FF7B FFE6     	movff	postinc2,postinc1
  8611  017340  EE22  F019         	lfsr	2,_C+282	;volatile
  8612  017344  006F FF7B FFE6     	movff	postinc2,postinc1
  8613  01734A  006F FF7B FFE6     	movff	postinc2,postinc1
  8614  017350  006F FF7B FFE6     	movff	postinc2,postinc1
  8615  017356  006F FF7B FFE6     	movff	postinc2,postinc1
  8616  01735C  EC36  F0DC         	call	___flsub	;wreg free
  8617  017360  0060  F007  FFE6   	movff	btemp,postinc1
  8618  017366  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8619  01736C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8620  017372  0060  F013  FFE6   	movff	btemp+3,postinc1
  8621  017378  ECB6  F0A6         	call	___fldiv	;wreg free
  8622  01737C  0060  F007  FFE6   	movff	btemp,postinc1
  8623  017382  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8624  017388  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8625  01738E  0060  F013  FFE6   	movff	btemp+3,postinc1
  8626  017394  ECA0  F0D3         	call	_fabsf	;wreg free
  8627  017398  0060  F004  F787   	movff	btemp,_C+136	;volatile
  8628  01739E  0060  F008  F788   	movff	btemp+1,_C+137	;volatile
  8629  0173A4  0060  F00C  F789   	movff	btemp+2,_C+138	;volatile
  8630  0173AA  0060  F010  F78A   	movff	btemp+3,_C+139	;volatile
  8631                           
  8632                           ;bsoc.c: 251:   set_load_relay_one(0);
  8633  0173B0  0E00               	movlw	0
  8634  0173B2  6EE6               	movwf	postinc1,c
  8635  0173B4  EC95  F0E1         	call	_set_load_relay_one	;wreg free
  8636                           
  8637                           ;bsoc.c: 252:   set_load_relay_two(0);
  8638  0173B8  0E00               	movlw	0
  8639  0173BA  6EE6               	movwf	postinc1,c
  8640  0173BC  EC8D  F0E1         	call	_set_load_relay_two	;wreg free
  8641                           
  8642                           ;bsoc.c: 253:   esr_state = 0;
  8643  0173C0  0100               	movlb	0	; () banked
  8644  0173C2  6BA4               	clrf	esr_check@esr_state& (0+255),b
  8645                           
  8646                           ; BSR set to: 0
  8647                           ;bsoc.c: 254:   return C.esr;
  8648  0173C4  0061  FE1C  F001   	movff	_C+136,btemp	;volatile
  8649  0173CA  0061  FE20  F002   	movff	_C+137,btemp+1	;volatile
  8650  0173D0  0061  FE24  F003   	movff	_C+138,btemp+2	;volatile
  8651  0173D6  0061  FE28  F004   	movff	_C+139,btemp+3	;volatile
  8652  0173DC  D01D               	goto	l2139
  8653  0173DE                     l11142:
  8654  0173DE  0100               	movlb	0	; () banked
  8655  0173E0  51A4               	movf	esr_check@esr_state& (0+255),w,b
  8656  0173E2  6E0B               	movwf	(btemp+10)^0,c
  8657  0173E4  6A0C               	clrf	(btemp+11)^0,c
  8658                           
  8659                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8660                           ; Switch size 1, requested type "simple"
  8661                           ; Number of cases is 1, Range of values is 0 to 0
  8662                           ; switch strategies available:
  8663                           ; Name         Instructions Cycles
  8664                           ; simple_byte            4     3 (average)
  8665                           ;	Chosen strategy is simple_byte
  8666  0173E6  500C               	movf	(btemp+11)^0,w,c
  8667  0173E8  0A00               	xorlw	0	; case 0
  8668  0173EA  A4D8               	btfss	status,2,c
  8669  0173EC  D00D               	goto	l11144
  8670                           
  8671                           ; BSR set to: 0
  8672                           ; Switch size 1, requested type "simple"
  8673                           ; Number of cases is 4, Range of values is 0 to 3
  8674                           ; switch strategies available:
  8675                           ; Name         Instructions Cycles
  8676                           ; simple_byte           13     7 (average)
  8677                           ;	Chosen strategy is simple_byte
  8678  0173EE  500B               	movf	(btemp+10)^0,w,c
  8679  0173F0  0A00               	xorlw	0	; case 0
  8680  0173F2  B4D8               	btfsc	status,2,c
  8681  0173F4  D6B5               	goto	l11074
  8682  0173F6  0A01               	xorlw	1	; case 1
  8683  0173F8  B4D8               	btfsc	status,2,c
  8684  0173FA  D6BD               	goto	l11078
  8685  0173FC  0A03               	xorlw	3	; case 2
  8686  0173FE  B4D8               	btfsc	status,2,c
  8687  017400  D6ED               	goto	l11094
  8688  017402  0A01               	xorlw	1	; case 3
  8689  017404  B4D8               	btfsc	status,2,c
  8690  017406  D72B               	goto	l11112
  8691  017408                     l11144:
  8692                           
  8693                           ; BSR set to: 0
  8694                           ;bsoc.c: 259:  return -1.0;
  8695  017408  0E00               	movlw	0
  8696  01740A  6E01               	movwf	btemp^0,c
  8697  01740C  0E00               	movlw	0
  8698  01740E  6E02               	movwf	(btemp+1)^0,c
  8699  017410  0E80               	movlw	128
  8700  017412  6E03               	movwf	(btemp+2)^0,c
  8701  017414  0EBF               	movlw	191
  8702  017416                     L6:
  8703  017416  6E04               	movwf	(btemp+3)^0,c
  8704  017418                     l2139:
  8705                           
  8706                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  8707  017418  52E5               	movf	postdec1,f,c
  8708  01741A  0012               	return		;funcret
  8709  01741C                     __end_of_esr_check:
  8710                           	opt callstack 0
  8711                           
  8712 ;; *************** function _update_adc_result *****************
  8713 ;; Defined at:
  8714 ;;		line 96 in file "daq.c"
  8715 ;; Parameters:    Size  Location     Type
  8716 ;;		None
  8717 ;; Auto vars:     Size  Location     Type
  8718 ;;		None
  8719 ;; Return value:  Size  Location     Type
  8720 ;;                  1  [STACK] _Bool 
  8721 ;; Registers used:
  8722 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  8723 ;; Tracked objects:
  8724 ;;		On entry : 0/0
  8725 ;;		On exit  : 0/0
  8726 ;;		Unchanged: 0/0
  8727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8732 ;;Total ram usage:        0 bytes
  8733 ;; Hardware stack levels used:    1
  8734 ;; Hardware stack levels required when called:   17
  8735 ;; This function calls:
  8736 ;;		_StartTimer
  8737 ;;		_TimerDone
  8738 ;;		_check_adc_scan
  8739 ;;		_clear_adc_scan
  8740 ;;		_start_adc_scan
  8741 ;; This function is called by:
  8742 ;;		_esr_check
  8743 ;; This function uses a reentrant model
  8744 ;;
  8745                           
  8746                           	psect	text20
  8747  01BAB6                     __ptext20:
  8748                           	opt callstack 0
  8749  01BAB6                     _update_adc_result:
  8750                           	opt callstack 12
  8751                           
  8752                           ;daq.c: 98:  if (R.done) {
  8753                           
  8754                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8755                           ;incstack = 0
  8756  01BAB6  0100               	movlb	0	; () banked
  8757  01BAB8  51E4               	movf	(_R+53)& (0+255),w,b	;volatile
  8758  01BABA  B4D8               	btfsc	status,2,c
  8759  01BABC  0012               	return	
  8760                           
  8761                           ; BSR set to: 0
  8762                           ;daq.c: 99:   clear_adc_scan();
  8763  01BABE  ECF9  F0E1         	call	_clear_adc_scan	;wreg free
  8764                           
  8765                           ; BSR set to: 0
  8766                           ;daq.c: 100:   start_adc_scan();
  8767  01BAC2  EC52  F0D9         	call	_start_adc_scan	;wreg free
  8768                           
  8769                           ;daq.c: 101:   StartTimer(TMR_ADC, 200);
  8770  01BAC6  0EC8               	movlw	200
  8771  01BAC8  6EE6               	movwf	postinc1,c
  8772  01BACA  0E00               	movlw	0
  8773  01BACC  6EE6               	movwf	postinc1,c
  8774  01BACE  0E01               	movlw	1
  8775  01BAD0  6EE6               	movwf	postinc1,c
  8776  01BAD2  ECDC  F0DC         	call	_StartTimer	;wreg free
  8777  01BAD6                     l10632:
  8778  01BAD6  0E01               	movlw	1
  8779  01BAD8  6EE6               	movwf	postinc1,c
  8780  01BADA  ECFD  F0DE         	call	_TimerDone	;wreg free
  8781  01BADE  5001               	movf	btemp^0,w,c
  8782  01BAE0  A4D8               	btfss	status,2,c
  8783  01BAE2  0012               	return	
  8784  01BAE4  ECE9  F0E1         	call	_check_adc_scan	;wreg free
  8785  01BAE8  5001               	movf	btemp^0,w,c
  8786  01BAEA  A4D8               	btfss	status,2,c
  8787  01BAEC  0012               	return	
  8788  01BAEE  D7F3               	goto	l10632
  8789  01BAF0                     __end_of_update_adc_result:
  8790                           	opt callstack 0
  8791                           
  8792 ;; *************** function _start_adc_scan *****************
  8793 ;; Defined at:
  8794 ;;		line 57 in file "daq.c"
  8795 ;; Parameters:    Size  Location     Type
  8796 ;;		None
  8797 ;; Auto vars:     Size  Location     Type
  8798 ;;		None
  8799 ;; Return value:  Size  Location     Type
  8800 ;;                  1  [STACK] _Bool 
  8801 ;; Registers used:
  8802 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  8803 ;; Tracked objects:
  8804 ;;		On entry : 0/0
  8805 ;;		On exit  : 1/0
  8806 ;;		Unchanged: 0/0
  8807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8812 ;;Total ram usage:        0 bytes
  8813 ;; Hardware stack levels used:    1
  8814 ;; Hardware stack levels required when called:   16
  8815 ;; This function calls:
  8816 ;;		_ADCC_DischargeSampleCapacitor
  8817 ;;		_ADCC_SetADIInterruptHandler
  8818 ;;		_ADCC_SetADTIInterruptHandler
  8819 ;;		_ADCC_StartConversion
  8820 ;; This function is called by:
  8821 ;;		_main
  8822 ;;		_update_adc_result
  8823 ;; This function uses a reentrant model
  8824 ;;
  8825                           
  8826                           	psect	text21
  8827  01B2A4                     __ptext21:
  8828                           	opt callstack 0
  8829  01B2A4                     _start_adc_scan:
  8830                           	opt callstack 14
  8831                           
  8832                           ;daq.c: 59:  if (R.done)
  8833                           
  8834                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8835                           ;incstack = 0
  8836  01B2A4  0100               	movlb	0	; () banked
  8837  01B2A6  51E4               	movf	(_R+53)& (0+255),w,b	;volatile
  8838  01B2A8  A4D8               	btfss	status,2,c
  8839  01B2AA  0012               	return	
  8840                           
  8841                           ; BSR set to: 0
  8842                           ;daq.c: 62:  R.scan_index = 0;
  8843  01B2AC  6BE1               	clrf	(_R+50)& (0+255),b	;volatile
  8844                           
  8845                           ; BSR set to: 0
  8846                           ;daq.c: 63:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  8847  01B2AE  013A               	movlb	58	; () banked
  8848  01B2B0  5140               	movf	64,w,b	;volatile
  8849  01B2B2  006E F940  F001    	movff	14928,btemp	;volatile
  8850  01B2B8  6A02               	clrf	(btemp+1)^0,c
  8851  01B2BA  0060  F004  F002   	movff	btemp,btemp+1
  8852  01B2C0  6A01               	clrf	btemp^0,c
  8853  01B2C2  2601               	addwf	btemp^0,f,c
  8854  01B2C4  0E00               	movlw	0
  8855  01B2C6  2202               	addwfc	(btemp+1)^0,f,c
  8856  01B2C8  0E77               	movlw	119
  8857  01B2CA  1401               	andwf	btemp^0,w,c
  8858  01B2CC  0100               	movlb	0	; () banked
  8859  01B2CE  6FE2               	movwf	(_R+51)& (0+255),b	;volatile
  8860  01B2D0  0E3C               	movlw	60
  8861  01B2D2  1402               	andwf	(btemp+1)^0,w,c
  8862  01B2D4  6FE3               	movwf	(_R+52)& (0+255),b	;volatile
  8863                           
  8864                           ; BSR set to: 0
  8865                           ;daq.c: 64:  ADCC_SetADIInterruptHandler(adc_int_handler);
  8866  01B2D6  0E1A               	movlw	low _adc_int_handler
  8867  01B2D8  6EE6               	movwf	postinc1,c
  8868  01B2DA  0EC4               	movlw	high _adc_int_handler
  8869  01B2DC  6EE6               	movwf	postinc1,c
  8870  01B2DE  0E01               	movlw	low (_adc_int_handler shr (0+16))
  8871  01B2E0  6EE6               	movwf	postinc1,c
  8872  01B2E2  ECC5  F0DF         	call	_ADCC_SetADIInterruptHandler	;wreg free
  8873                           
  8874                           ;daq.c: 65:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  8875  01B2E6  0E22               	movlw	low _adc_int_t_handler
  8876  01B2E8  6EE6               	movwf	postinc1,c
  8877  01B2EA  0EAF               	movlw	high _adc_int_t_handler
  8878  01B2EC  6EE6               	movwf	postinc1,c
  8879  01B2EE  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  8880  01B2F0  6EE6               	movwf	postinc1,c
  8881  01B2F2  ECB1  F0DF         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  8882                           
  8883                           ;daq.c: 66:  ADCC_DischargeSampleCapacitor();
  8884  01B2F6  ECE5  F0E1         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  8885                           
  8886                           ; BSR set to: 62
  8887                           ;daq.c: 67:  ADCC_StartConversion(R.scan_index & 0xf);
  8888  01B2FA  0100               	movlb	0	; () banked
  8889  01B2FC  51E1               	movf	(_R+50)& (0+255),w,b	;volatile
  8890  01B2FE  0B0F               	andlw	15
  8891  01B300  6EE6               	movwf	postinc1,c
  8892  01B302  EC84  F0E1         	call	_ADCC_StartConversion	;wreg free
  8893                           
  8894                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8895  01B306  0012               	return		;funcret
  8896  01B308                     __end_of_start_adc_scan:
  8897                           	opt callstack 0
  8898                           
  8899 ;; *************** function _ADCC_StartConversion *****************
  8900 ;; Defined at:
  8901 ;;		line 128 in file "mcc_generated_files/adcc.c"
  8902 ;; Parameters:    Size  Location     Type
  8903 ;;  channel         1  [STACK] enum E16136
  8904 ;; Auto vars:     Size  Location     Type
  8905 ;;		None
  8906 ;; Return value:  Size  Location     Type
  8907 ;;                  1  [STACK] void 
  8908 ;; Registers used:
  8909 ;;		fsr1l, fsr1h
  8910 ;; Tracked objects:
  8911 ;;		On entry : 3F/0
  8912 ;;		On exit  : 3F/3E
  8913 ;;		Unchanged: 0/0
  8914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8919 ;;Total ram usage:        0 bytes
  8920 ;; Hardware stack levels used:    1
  8921 ;; Hardware stack levels required when called:   15
  8922 ;; This function calls:
  8923 ;;		Nothing
  8924 ;; This function is called by:
  8925 ;;		_start_adc_scan
  8926 ;;		_adc_int_t_handler
  8927 ;; This function uses a reentrant model
  8928 ;;
  8929                           
  8930                           	psect	text22
  8931  01C308                     __ptext22:
  8932                           	opt callstack 0
  8933  01C308                     _ADCC_StartConversion:
  8934                           	opt callstack 0
  8935                           
  8936                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  8937                           ;stkvar	_channel @ sp[(0)+-1]
  8938                           
  8939                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8940                           ;incstack = 0
  8941 ;; hardware stack exceeded
  8942  01C308  0EFF               	movlw	-1
  8943  01C30A  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  8944                           
  8945                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  8946  01C310  013E               	movlb	62	; () banked
  8947  01C312  8FF8               	bsf	248,7,b	;volatile
  8948                           
  8949                           ; BSR set to: 62
  8950                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  8951  01C314  81F8               	bsf	248,0,b	;volatile
  8952                           
  8953                           ; BSR set to: 62
  8954                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  8955  01C316  52E5               	movf	postdec1,f,c
  8956  01C318  0012               	return		;funcret
  8957  01C31A                     __end_of_ADCC_StartConversion:
  8958                           	opt callstack 0
  8959                           
  8960 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  8961 ;; Defined at:
  8962 ;;		line 189 in file "mcc_generated_files/adcc.c"
  8963 ;; Parameters:    Size  Location     Type
  8964 ;;		None
  8965 ;; Auto vars:     Size  Location     Type
  8966 ;;		None
  8967 ;; Return value:  Size  Location     Type
  8968 ;;                  1  [STACK] void 
  8969 ;; Registers used:
  8970 ;;		wreg, status,2
  8971 ;; Tracked objects:
  8972 ;;		On entry : 0/0
  8973 ;;		On exit  : 3F/3E
  8974 ;;		Unchanged: 0/0
  8975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8980 ;;Total ram usage:        0 bytes
  8981 ;; Hardware stack levels used:    1
  8982 ;; Hardware stack levels required when called:   15
  8983 ;; This function calls:
  8984 ;;		Nothing
  8985 ;; This function is called by:
  8986 ;;		_start_adc_scan
  8987 ;;		_adc_int_t_handler
  8988 ;; This function uses a reentrant model
  8989 ;;
  8990                           
  8991                           	psect	text23
  8992  01C3CA                     __ptext23:
  8993                           	opt callstack 0
  8994  01C3CA                     _ADCC_DischargeSampleCapacitor:
  8995                           	opt callstack 0
  8996                           
  8997                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  8998                           
  8999                           ; BSR set to: 62
  9000                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9001                           ;incstack = 0
  9002 ;; hardware stack exceeded
  9003  01C3CA  0E3B               	movlw	59
  9004  01C3CC  013E               	movlb	62	; () banked
  9005  01C3CE  6FF1               	movwf	241,b	;volatile
  9006                           
  9007                           ; BSR set to: 62
  9008                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  9009  01C3D0  0012               	return		;funcret
  9010  01C3D2                     __end_of_ADCC_DischargeSampleCapacitor:
  9011                           	opt callstack 0
  9012                           
  9013 ;; *************** function _clear_adc_scan *****************
  9014 ;; Defined at:
  9015 ;;		line 88 in file "daq.c"
  9016 ;; Parameters:    Size  Location     Type
  9017 ;;		None
  9018 ;; Auto vars:     Size  Location     Type
  9019 ;;		None
  9020 ;; Return value:  Size  Location     Type
  9021 ;;                  1  [STACK] void 
  9022 ;; Registers used:
  9023 ;;		None
  9024 ;; Tracked objects:
  9025 ;;		On entry : 0/0
  9026 ;;		On exit  : 3F/0
  9027 ;;		Unchanged: 0/0
  9028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9033 ;;Total ram usage:        0 bytes
  9034 ;; Hardware stack levels used:    1
  9035 ;; Hardware stack levels required when called:   15
  9036 ;; This function calls:
  9037 ;;		Nothing
  9038 ;; This function is called by:
  9039 ;;		_main
  9040 ;;		_update_adc_result
  9041 ;; This function uses a reentrant model
  9042 ;;
  9043                           
  9044                           	psect	text24
  9045  01C3F2                     __ptext24:
  9046                           	opt callstack 0
  9047  01C3F2                     _clear_adc_scan:
  9048                           	opt callstack 13
  9049                           
  9050                           ;daq.c: 90:  R.done = 0;
  9051                           
  9052                           ; BSR set to: 62
  9053                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9054                           ;incstack = 0
  9055  01C3F2  0100               	movlb	0	; () banked
  9056  01C3F4  6BE4               	clrf	(_R+53)& (0+255),b	;volatile
  9057                           
  9058                           ; BSR set to: 0
  9059                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9060  01C3F6  0012               	return		;funcret
  9061  01C3F8                     __end_of_clear_adc_scan:
  9062                           	opt callstack 0
  9063                           
  9064 ;; *************** function _check_adc_scan *****************
  9065 ;; Defined at:
  9066 ;;		line 80 in file "daq.c"
  9067 ;; Parameters:    Size  Location     Type
  9068 ;;		None
  9069 ;; Auto vars:     Size  Location     Type
  9070 ;;		None
  9071 ;; Return value:  Size  Location     Type
  9072 ;;                  1  [STACK] _Bool 
  9073 ;; Registers used:
  9074 ;;		btemp
  9075 ;; Tracked objects:
  9076 ;;		On entry : 0/1
  9077 ;;		On exit  : 0/0
  9078 ;;		Unchanged: 0/0
  9079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9084 ;;Total ram usage:        0 bytes
  9085 ;; Hardware stack levels used:    1
  9086 ;; Hardware stack levels required when called:   15
  9087 ;; This function calls:
  9088 ;;		Nothing
  9089 ;; This function is called by:
  9090 ;;		_main
  9091 ;;		_update_adc_result
  9092 ;; This function uses a reentrant model
  9093 ;;
  9094                           
  9095                           	psect	text25
  9096  01C3D2                     __ptext25:
  9097                           	opt callstack 0
  9098  01C3D2                     _check_adc_scan:
  9099                           	opt callstack 13
  9100                           
  9101                           ;daq.c: 82:  return R.done;
  9102                           
  9103                           ; BSR set to: 0
  9104                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9105                           ;incstack = 0
  9106  01C3D2  0060  F390  F001   	movff	_R+53,btemp	;volatile
  9107                           
  9108                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9109  01C3D8  0012               	return		;funcret
  9110  01C3DA                     __end_of_check_adc_scan:
  9111                           	opt callstack 0
  9112                           
  9113 ;; *************** function _set_load_relay_two *****************
  9114 ;; Defined at:
  9115 ;;		line 130 in file "mbmc.c"
  9116 ;; Parameters:    Size  Location     Type
  9117 ;;  mode            1  [STACK] const _Bool 
  9118 ;; Auto vars:     Size  Location     Type
  9119 ;;		None
  9120 ;; Return value:  Size  Location     Type
  9121 ;;                  1  [STACK] void 
  9122 ;; Registers used:
  9123 ;;		wreg, fsr1l, fsr1h
  9124 ;; Tracked objects:
  9125 ;;		On entry : 0/0
  9126 ;;		On exit  : 0/0
  9127 ;;		Unchanged: 0/0
  9128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9133 ;;Total ram usage:        0 bytes
  9134 ;; Hardware stack levels used:    1
  9135 ;; Hardware stack levels required when called:   15
  9136 ;; This function calls:
  9137 ;;		Nothing
  9138 ;; This function is called by:
  9139 ;;		_main
  9140 ;;		_esr_check
  9141 ;; This function uses a reentrant model
  9142 ;;
  9143                           
  9144                           	psect	text26
  9145  01C31A                     __ptext26:
  9146                           	opt callstack 0
  9147  01C31A                     _set_load_relay_two:
  9148                           	opt callstack 15
  9149                           
  9150                           ;mbmc.c: 130: void set_load_relay_two(const _Bool mode);mbmc.c: 131: {;mbmc.c: 132:  LAT
      +                          Dbits.LATD5 = mode;
  9151                           ;stkvar	_mode @ sp[(0)+-1]
  9152                           
  9153                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9154                           ;incstack = 0
  9155  01C31A  0EFF               	movlw	-1
  9156  01C31C  B0E3               	btfsc	plusw1,0,c
  9157  01C31E  D002               	bra	u9565
  9158  01C320  9ABD               	bcf	189,5,c	;volatile
  9159  01C322  D001               	bra	u9566
  9160  01C324                     u9565:
  9161  01C324  8ABD               	bsf	189,5,c	;volatile
  9162  01C326                     u9566:
  9163                           
  9164                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  9165  01C326  52E5               	movf	postdec1,f,c
  9166  01C328  0012               	return		;funcret
  9167  01C32A                     __end_of_set_load_relay_two:
  9168                           	opt callstack 0
  9169                           
  9170 ;; *************** function _set_load_relay_one *****************
  9171 ;; Defined at:
  9172 ;;		line 125 in file "mbmc.c"
  9173 ;; Parameters:    Size  Location     Type
  9174 ;;  mode            1  [STACK] const _Bool 
  9175 ;; Auto vars:     Size  Location     Type
  9176 ;;		None
  9177 ;; Return value:  Size  Location     Type
  9178 ;;                  1  [STACK] void 
  9179 ;; Registers used:
  9180 ;;		wreg, fsr1l, fsr1h
  9181 ;; Tracked objects:
  9182 ;;		On entry : 0/0
  9183 ;;		On exit  : 0/0
  9184 ;;		Unchanged: 0/0
  9185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9190 ;;Total ram usage:        0 bytes
  9191 ;; Hardware stack levels used:    1
  9192 ;; Hardware stack levels required when called:   15
  9193 ;; This function calls:
  9194 ;;		Nothing
  9195 ;; This function is called by:
  9196 ;;		_main
  9197 ;;		_esr_check
  9198 ;; This function uses a reentrant model
  9199 ;;
  9200                           
  9201                           	psect	text27
  9202  01C32A                     __ptext27:
  9203                           	opt callstack 0
  9204  01C32A                     _set_load_relay_one:
  9205                           	opt callstack 15
  9206                           
  9207                           ;mbmc.c: 125: void set_load_relay_one(const _Bool mode);mbmc.c: 126: {;mbmc.c: 127:  LAT
      +                          Dbits.LATD4 = mode;
  9208                           ;stkvar	_mode @ sp[(0)+-1]
  9209                           
  9210                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9211                           ;incstack = 0
  9212  01C32A  0EFF               	movlw	-1
  9213  01C32C  B0E3               	btfsc	plusw1,0,c
  9214  01C32E  D002               	bra	u9555
  9215  01C330  98BD               	bcf	189,4,c	;volatile
  9216  01C332  D001               	bra	u9556
  9217  01C334                     u9555:
  9218  01C334  88BD               	bsf	189,4,c	;volatile
  9219  01C336                     u9556:
  9220                           
  9221                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  9222  01C336  52E5               	movf	postdec1,f,c
  9223  01C338  0012               	return		;funcret
  9224  01C33A                     __end_of_set_load_relay_one:
  9225                           	opt callstack 0
  9226                           
  9227 ;; *************** function _eaDogM_WriteCommand *****************
  9228 ;; Defined at:
  9229 ;;		line 385 in file "eadog.c"
  9230 ;; Parameters:    Size  Location     Type
  9231 ;;  cmd             1  [STACK] const unsigned char 
  9232 ;; Auto vars:     Size  Location     Type
  9233 ;;		None
  9234 ;; Return value:  Size  Location     Type
  9235 ;;                  1  [STACK] void 
  9236 ;; Registers used:
  9237 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9238 ;; Tracked objects:
  9239 ;;		On entry : 3F/3D
  9240 ;;		On exit  : 3F/0
  9241 ;;		Unchanged: 0/0
  9242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9247 ;;Total ram usage:        0 bytes
  9248 ;; Hardware stack levels used:    1
  9249 ;; Hardware stack levels required when called:   26
  9250 ;; This function calls:
  9251 ;;		_send_lcd_cmd_dma
  9252 ;; This function is called by:
  9253 ;;		_main
  9254 ;; This function uses a reentrant model
  9255 ;;
  9256                           
  9257                           	psect	text28
  9258  01C35A                     __ptext28:
  9259                           	opt callstack 0
  9260  01C35A                     _eaDogM_WriteCommand:
  9261                           	opt callstack 4
  9262                           
  9263                           ;eadog.c: 385: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 386: {;eadog.c: 387:
      +                            send_lcd_cmd_dma(cmd);
  9264                           ;stkvar	_cmd @ sp[(0)+-1]
  9265                           
  9266                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9267                           ;incstack = 0
  9268  01C35A  0EFF               	movlw	-1
  9269  01C35C  50E3               	movf	plusw1,w,c
  9270  01C35E  6EE6               	movwf	postinc1,c
  9271  01C360  ECD3  F0E0         	call	_send_lcd_cmd_dma	;wreg free
  9272                           
  9273                           ; BSR set to: 0
  9274                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  9275  01C364  52E5               	movf	postdec1,f,c
  9276  01C366  0012               	return		;funcret
  9277  01C368                     __end_of_eaDogM_WriteCommand:
  9278                           	opt callstack 0
  9279                           
  9280 ;; *************** function _convert_adc_data *****************
  9281 ;; Defined at:
  9282 ;;		line 51 in file "mbmc.c"
  9283 ;; Parameters:    Size  Location     Type
  9284 ;;		None
  9285 ;; Auto vars:     Size  Location     Type
  9286 ;;  i               1  [STACK] unsigned char 
  9287 ;; Return value:  Size  Location     Type
  9288 ;;                  1  [STACK] void 
  9289 ;; Registers used:
  9290 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9291 ;; Tracked objects:
  9292 ;;		On entry : 0/1
  9293 ;;		On exit  : 0/0
  9294 ;;		Unchanged: 0/0
  9295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9300 ;;Total ram usage:        0 bytes
  9301 ;; Hardware stack levels used:    1
  9302 ;; Hardware stack levels required when called:   18
  9303 ;; This function calls:
  9304 ;;		_conv_raw_result
  9305 ;;		_lp_filter
  9306 ;; This function is called by:
  9307 ;;		_main
  9308 ;; This function uses a reentrant model
  9309 ;;
  9310                           
  9311                           	psect	text29
  9312  01A688                     __ptext29:
  9313                           	opt callstack 0
  9314  01A688                     _convert_adc_data:
  9315                           	opt callstack 0
  9316                           
  9317                           ; BSR set to: 0
  9318                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9319  01A688  52E6               	movf	postinc1,f,c
  9320                           
  9321                           ;mbmc.c: 53:  uint8_t i = 0;
  9322                           ;stkvar	_i @ sp[(-1)+0]
  9323                           
  9324                           ;incstack = 0
  9325  01A68A  0EFF               	movlw	-1
  9326  01A68C  6AE3               	clrf	plusw1,c
  9327  01A68E                     l11156:
  9328                           
  9329                           ;mbmc.c: 56:   if (V.calib) {
  9330  01A68E  0101               	movlb	1	; () banked
  9331  01A690  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
  9332  01A692  B4D8               	btfsc	status,2,c
  9333  01A694  D01B               	goto	l11160
  9334                           
  9335                           ; BSR set to: 1
  9336                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  9337  01A696  0E01               	movlw	1
  9338  01A698  6EE6               	movwf	postinc1,c
  9339                           
  9340                           ;stkvar	_i @ sp[(-2)+0]
  9341  01A69A  0EFE               	movlw	-2
  9342  01A69C  50E3               	movf	plusw1,w,c
  9343  01A69E  6EE6               	movwf	postinc1,c
  9344  01A6A0  0E01               	movlw	1
  9345  01A6A2  6EE6               	movwf	postinc1,c
  9346                           
  9347                           ;stkvar	_i @ sp[(-4)+0]
  9348  01A6A4  0EFC               	movlw	-4
  9349  01A6A6  50E3               	movf	plusw1,w,c
  9350  01A6A8  6EE6               	movwf	postinc1,c
  9351  01A6AA  EC73  F0A9         	call	_conv_raw_result	;wreg free
  9352  01A6AE  0060  F007  FFE6   	movff	btemp,postinc1
  9353  01A6B4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9354  01A6BA  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9355  01A6C0  0060  F013  FFE6   	movff	btemp+3,postinc1
  9356  01A6C6  EC33  F0C4         	call	_lp_filter	;wreg free
  9357  01A6CA  D01A               	goto	L9
  9358  01A6CC                     l11160:
  9359                           
  9360                           ; BSR set to: 1
  9361                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  9362  01A6CC  0E00               	movlw	0
  9363  01A6CE  6EE6               	movwf	postinc1,c
  9364                           
  9365                           ;stkvar	_i @ sp[(-2)+0]
  9366  01A6D0  0EFE               	movlw	-2
  9367  01A6D2  50E3               	movf	plusw1,w,c
  9368  01A6D4  6EE6               	movwf	postinc1,c
  9369  01A6D6  0E00               	movlw	0
  9370  01A6D8  6EE6               	movwf	postinc1,c
  9371                           
  9372                           ;stkvar	_i @ sp[(-4)+0]
  9373  01A6DA  0EFC               	movlw	-4
  9374  01A6DC  50E3               	movf	plusw1,w,c
  9375  01A6DE  6EE6               	movwf	postinc1,c
  9376  01A6E0  EC73  F0A9         	call	_conv_raw_result	;wreg free
  9377  01A6E4  0060  F007  FFE6   	movff	btemp,postinc1
  9378  01A6EA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9379  01A6F0  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9380  01A6F6  0060  F013  FFE6   	movff	btemp+3,postinc1
  9381  01A6FC  EC33  F0C4         	call	_lp_filter	;wreg free
  9382  01A700                     L9:
  9383                           
  9384                           ;stkvar	_i @ sp[(-1)+0]
  9385  01A700  0EFF               	movlw	-1
  9386  01A702  50E3               	movf	plusw1,w,c
  9387  01A704  0D04               	mullw	4
  9388  01A706  0EFF               	movlw	low _C
  9389  01A708  24F3               	addwf	243,w,c
  9390  01A70A  6ED9               	movwf	fsr2l,c
  9391  01A70C  0E06               	movlw	high _C
  9392  01A70E  20F4               	addwfc	prodh,w,c
  9393  01A710  6EDA               	movwf	fsr2h,c
  9394  01A712  0060  F007  FFDE   	movff	btemp,postinc2
  9395  01A718  0060  F00B  FFDE   	movff	btemp+1,postinc2
  9396  01A71E  0060  F00F  FFDE   	movff	btemp+2,postinc2
  9397  01A724  0060  F013  FFDE   	movff	btemp+3,postinc2
  9398                           
  9399                           ;mbmc.c: 61:  } while (++i < 16);
  9400                           ;stkvar	_i @ sp[(-1)+0]
  9401  01A72A  0EFF               	movlw	-1
  9402  01A72C  2AE3               	incf	plusw1,f,c
  9403  01A72E  0EFF               	movlw	-1
  9404  01A730  006F FF8C  F001    	movff	plusw1,btemp
  9405  01A736  0E0F               	movlw	15
  9406  01A738  6401               	cpfsgt	btemp^0,c
  9407  01A73A  D7A9               	goto	l11156
  9408                           
  9409                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  9410  01A73C  52E5               	movf	postdec1,f,c
  9411  01A73E  0012               	return		;funcret
  9412  01A740                     __end_of_convert_adc_data:
  9413                           	opt callstack 0
  9414                           
  9415 ;; *************** function _clear_hid_pflags *****************
  9416 ;; Defined at:
  9417 ;;		line 51 in file "hid.c"
  9418 ;; Parameters:    Size  Location     Type
  9419 ;;  h               2  [STACK] PTR struct H_data
  9420 ;;		 -> H(7), 
  9421 ;; Auto vars:     Size  Location     Type
  9422 ;;		None
  9423 ;; Return value:  Size  Location     Type
  9424 ;;                  1  [STACK] void 
  9425 ;; Registers used:
  9426 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
  9427 ;; Tracked objects:
  9428 ;;		On entry : 3E/0
  9429 ;;		On exit  : 0/0
  9430 ;;		Unchanged: 0/0
  9431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9436 ;;Total ram usage:        0 bytes
  9437 ;; Hardware stack levels used:    1
  9438 ;; Hardware stack levels required when called:   15
  9439 ;; This function calls:
  9440 ;;		Nothing
  9441 ;; This function is called by:
  9442 ;;		_main
  9443 ;; This function uses a reentrant model
  9444 ;;
  9445                           
  9446                           	psect	text30
  9447  01B7E0                     __ptext30:
  9448                           	opt callstack 0
  9449  01B7E0                     _clear_hid_pflags:
  9450                           	opt callstack 15
  9451                           
  9452                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  9453                           ;stkvar	_h @ sp[(0)+-2]
  9454                           
  9455                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9456                           ;incstack = 0
  9457  01B7E0  0EFE               	movlw	-2
  9458  01B7E2  006F FF8C  F00B    	movff	plusw1,btemp+10
  9459  01B7E8  0EFF               	movlw	-1
  9460  01B7EA  006F FF8C  F00C    	movff	plusw1,btemp+11
  9461  01B7F0  0E03               	movlw	3
  9462  01B7F2  240B               	addwf	(btemp+10)^0,w,c
  9463  01B7F4  6ED9               	movwf	fsr2l,c
  9464  01B7F6  0E00               	movlw	0
  9465  01B7F8  200C               	addwfc	(btemp+11)^0,w,c
  9466  01B7FA  6EDA               	movwf	fsr2h,c
  9467  01B7FC  0E00               	movlw	0
  9468  01B7FE  6EDF               	movwf	indf2,c
  9469                           
  9470                           ;hid.c: 54:  h->enter_p = SW_OFF;
  9471                           ;stkvar	_h @ sp[(0)+-2]
  9472  01B800  0EFE               	movlw	-2
  9473  01B802  006F FF8C  F00B    	movff	plusw1,btemp+10
  9474  01B808  0EFF               	movlw	-1
  9475  01B80A  006F FF8C  F00C    	movff	plusw1,btemp+11
  9476  01B810  0E05               	movlw	5
  9477  01B812  240B               	addwf	(btemp+10)^0,w,c
  9478  01B814  6ED9               	movwf	fsr2l,c
  9479  01B816  0E00               	movlw	0
  9480  01B818  200C               	addwfc	(btemp+11)^0,w,c
  9481  01B81A  6EDA               	movwf	fsr2h,c
  9482  01B81C  0E00               	movlw	0
  9483  01B81E  6EDF               	movwf	indf2,c
  9484                           
  9485                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
  9486  01B820  52E5               	movf	postdec1,f,c
  9487  01B822  52E5               	movf	postdec1,f,c
  9488  01B824  0012               	return		;funcret
  9489  01B826                     __end_of_clear_hid_pflags:
  9490                           	opt callstack 0
  9491                           
  9492 ;; *************** function _check_help *****************
  9493 ;; Defined at:
  9494 ;;		line 40 in file "mconfig.c"
  9495 ;; Parameters:    Size  Location     Type
  9496 ;;  flipper         1  [STACK] const _Bool 
  9497 ;; Auto vars:     Size  Location     Type
  9498 ;;  estatus         1    0        _Bool 
  9499 ;; Return value:  Size  Location     Type
  9500 ;;                  1  [STACK] _Bool 
  9501 ;; Registers used:
  9502 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9503 ;; Tracked objects:
  9504 ;;		On entry : 3F/1
  9505 ;;		On exit  : 0/0
  9506 ;;		Unchanged: 0/0
  9507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9512 ;;Total ram usage:        0 bytes
  9513 ;; Hardware stack levels used:    1
  9514 ;; Hardware stack levels required when called:   28
  9515 ;; This function calls:
  9516 ;;		_StartTimer
  9517 ;;		_TimerDone
  9518 ;;		_display_help
  9519 ;;		_display_info
  9520 ;;		_get_vterm_ptr
  9521 ;;		_help_button
  9522 ;;		_mode_lamp_bright
  9523 ;;		_mode_lamp_dim
  9524 ;;		_set_display_info
  9525 ;;		_set_temp_display_help
  9526 ;;		_set_vterm
  9527 ;;		_sprintf
  9528 ;;		_update_lcd
  9529 ;;		_vterm_dump
  9530 ;; This function is called by:
  9531 ;;		_main
  9532 ;; This function uses a reentrant model
  9533 ;;
  9534                           
  9535                           	psect	text31
  9536  018274                     __ptext31:
  9537                           	opt callstack 0
  9538  018274                     _check_help:
  9539                           	opt callstack 2
  9540                           
  9541                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  9542                           
  9543                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9544                           ;incstack = 0
  9545  018274  EC78  F0DD         	call	_help_button	;wreg free
  9546  018278  5001               	movf	btemp^0,w,c
  9547  01827A  B4D8               	btfsc	status,2,c
  9548  01827C  D0D0               	goto	l13246
  9549  01827E  ECED  F0E1         	call	_display_info	;wreg free
  9550  018282  0401               	decf	btemp^0,w,c
  9551  018284  B4D8               	btfsc	status,2,c
  9552  018286  D0CB               	goto	l13246
  9553                           
  9554                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  9555  018288  0EDC               	movlw	220
  9556  01828A  6EE6               	movwf	postinc1,c
  9557  01828C  0E05               	movlw	5
  9558  01828E  6EE6               	movwf	postinc1,c
  9559  018290  0E0B               	movlw	11
  9560  018292  6EE6               	movwf	postinc1,c
  9561  018294  ECDC  F0DC         	call	_StartTimer	;wreg free
  9562                           
  9563                           ;mconfig.c: 48:   if (V.debug)
  9564  018298  0101               	movlb	1	; () banked
  9565  01829A  B3A2               	btfsc	(_V+155)& (0+255),1,b	;volatile
  9566                           
  9567                           ; BSR set to: 1
  9568                           ;mconfig.c: 49:    vterm_dump();
  9569  01829C  EC2D  F0CC         	call	_vterm_dump	;wreg free
  9570                           
  9571                           ;mconfig.c: 51:   set_vterm(1);
  9572  0182A0  0E01               	movlw	1
  9573  0182A2  6EE6               	movwf	postinc1,c
  9574  0182A4  ECE2  F0E0         	call	_set_vterm	;wreg free
  9575                           
  9576                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  9577  0182A8  ECED  F0E1         	call	_display_info	;wreg free
  9578  0182AC  5001               	movf	btemp^0,w,c
  9579  0182AE  6EE6               	movwf	postinc1,c
  9580  0182B0  EC9D  F0E1         	call	_set_temp_display_help	;wreg free
  9581                           
  9582                           ; BSR set to: 1
  9583                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  9584  0182B4  0E01               	movlw	1
  9585  0182B6  6EE6               	movwf	postinc1,c
  9586  0182B8  ECF1  F0E0         	call	_set_display_info	;wreg free
  9587                           
  9588                           ;mconfig.c: 54:   if (flipper) {
  9589                           ;stkvar	_flipper @ sp[(0)+-1]
  9590  0182BC  0EFF               	movlw	-1
  9591  0182BE  50E3               	movf	plusw1,w,c
  9592  0182C0  B4D8               	btfsc	status,2,c
  9593  0182C2  D019               	goto	l13232
  9594                           
  9595                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  9596  0182C4  0EB3               	movlw	low STR_45
  9597  0182C6  6EE6               	movwf	postinc1,c
  9598  0182C8  0EFF               	movlw	high STR_45
  9599  0182CA  6EE6               	movwf	postinc1,c
  9600  0182CC  0E5D               	movlw	low STR_47
  9601  0182CE  6EE6               	movwf	postinc1,c
  9602  0182D0  0EFF               	movlw	high STR_47
  9603  0182D2  6EE6               	movwf	postinc1,c
  9604  0182D4  0E01               	movlw	1
  9605  0182D6  6EE6               	movwf	postinc1,c
  9606  0182D8  0E00               	movlw	0
  9607  0182DA  6EE6               	movwf	postinc1,c
  9608  0182DC  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  9609  0182E0  0060  F007  FFE6   	movff	btemp,postinc1
  9610  0182E6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9611  0182EC  0E06               	movlw	6
  9612  0182EE  6EE6               	movwf	postinc1,c
  9613  0182F0  ECF4  F0CE         	call	_sprintf	;wreg free
  9614                           
  9615                           ;mconfig.c: 56:   } else {
  9616  0182F4  D018               	goto	l1685
  9617  0182F6                     l13232:
  9618                           
  9619                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  9620  0182F6  0EC9               	movlw	low STR_46
  9621  0182F8  6EE6               	movwf	postinc1,c
  9622  0182FA  0EFF               	movlw	high STR_46
  9623  0182FC  6EE6               	movwf	postinc1,c
  9624  0182FE  0E5D               	movlw	low STR_47
  9625  018300  6EE6               	movwf	postinc1,c
  9626  018302  0EFF               	movlw	high STR_47
  9627  018304  6EE6               	movwf	postinc1,c
  9628  018306  0E01               	movlw	1
  9629  018308  6EE6               	movwf	postinc1,c
  9630  01830A  0E00               	movlw	0
  9631  01830C  6EE6               	movwf	postinc1,c
  9632  01830E  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  9633  018312  0060  F007  FFE6   	movff	btemp,postinc1
  9634  018318  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9635  01831E  0E06               	movlw	6
  9636  018320  6EE6               	movwf	postinc1,c
  9637  018322  ECF4  F0CE         	call	_sprintf	;wreg free
  9638  018326                     l1685:
  9639                           
  9640                           ; BSR set to: 0
  9641                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  9642  018326  0101               	movlb	1	; () banked
  9643  018328  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
  9644  01832A  32E8               	rrcf	wreg,f,c
  9645  01832C  32E8               	rrcf	wreg,f,c
  9646  01832E  0B03               	andlw	3
  9647  018330  0D24               	mullw	36
  9648  018332  0E12               	movlw	18
  9649  018334  26F3               	addwf	243,f,c
  9650  018336  0E00               	movlw	0
  9651  018338  22F4               	addwfc	244,f,c
  9652  01833A  0EBB               	movlw	low _T
  9653  01833C  6E0B               	movwf	(btemp+10)^0,c
  9654  01833E  0EFA               	movlw	high _T
  9655  018340  6E0C               	movwf	(btemp+11)^0,c
  9656  018342  50F3               	movf	243,w,c
  9657  018344  260B               	addwf	(btemp+10)^0,f,c
  9658  018346  50F4               	movf	244,w,c
  9659  018348  220C               	addwfc	(btemp+11)^0,f,c
  9660  01834A  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9661  018350  0060  F033  FFE6   	movff	btemp+11,postinc1
  9662  018356  0EBF               	movlw	low STR_49
  9663  018358  6EE6               	movwf	postinc1,c
  9664  01835A  0EFF               	movlw	high STR_49
  9665  01835C  6EE6               	movwf	postinc1,c
  9666  01835E  0E01               	movlw	1
  9667  018360  6EE6               	movwf	postinc1,c
  9668  018362  0E01               	movlw	1
  9669  018364  6EE6               	movwf	postinc1,c
  9670  018366  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  9671  01836A  0060  F007  FFE6   	movff	btemp,postinc1
  9672  018370  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9673  018376  0E06               	movlw	6
  9674  018378  6EE6               	movwf	postinc1,c
  9675  01837A  ECF4  F0CE         	call	_sprintf	;wreg free
  9676                           
  9677                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  9678  01837E  0101               	movlb	1	; () banked
  9679  018380  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
  9680  018382  32E8               	rrcf	wreg,f,c
  9681  018384  32E8               	rrcf	wreg,f,c
  9682  018386  0B03               	andlw	3
  9683  018388  0D24               	mullw	36
  9684  01838A  0EBB               	movlw	low _T
  9685  01838C  6E0B               	movwf	(btemp+10)^0,c
  9686  01838E  0EFA               	movlw	high _T
  9687  018390  6E0C               	movwf	(btemp+11)^0,c
  9688  018392  50F3               	movf	243,w,c
  9689  018394  260B               	addwf	(btemp+10)^0,f,c
  9690  018396  50F4               	movf	244,w,c
  9691  018398  220C               	addwfc	(btemp+11)^0,f,c
  9692  01839A  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9693  0183A0  0060  F033  FFE6   	movff	btemp+11,postinc1
  9694  0183A6  0EBF               	movlw	low STR_49
  9695  0183A8  6EE6               	movwf	postinc1,c
  9696  0183AA  0EFF               	movlw	high STR_49
  9697  0183AC  6EE6               	movwf	postinc1,c
  9698  0183AE  0E01               	movlw	1
  9699  0183B0  6EE6               	movwf	postinc1,c
  9700  0183B2  0E02               	movlw	2
  9701  0183B4  6EE6               	movwf	postinc1,c
  9702  0183B6  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  9703  0183BA  0060  F007  FFE6   	movff	btemp,postinc1
  9704  0183C0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9705  0183C6  0E06               	movlw	6
  9706  0183C8  6EE6               	movwf	postinc1,c
  9707  0183CA  ECF4  F0CE         	call	_sprintf	;wreg free
  9708                           
  9709                           ; BSR set to: 0
  9710                           ;mconfig.c: 61:   V.help_id++;
  9711  0183CE  EE20  F1A2         	lfsr	2,_V+155	;volatile
  9712  0183D2  38DF               	swapf	223,w,c
  9713  0183D4  6E0C               	movwf	(btemp+11)^0,c
  9714  0183D6  320C               	rrcf	(btemp+11)^0,f,c
  9715  0183D8  300C               	rrcf	(btemp+11)^0,w,c
  9716  0183DA  0B03               	andlw	3
  9717  0183DC  6E0C               	movwf	(btemp+11)^0,c
  9718  0183DE  2A0C               	incf	(btemp+11)^0,f,c
  9719  0183E0  3A0C               	swapf	(btemp+11)^0,f,c
  9720  0183E2  360C               	rlcf	(btemp+11)^0,f,c
  9721  0183E4  360C               	rlcf	(btemp+11)^0,f,c
  9722  0183E6  50DF               	movf	223,w,c
  9723  0183E8  180C               	xorwf	(btemp+11)^0,w,c
  9724  0183EA  0B3F               	andlw	-193
  9725  0183EC  180C               	xorwf	(btemp+11)^0,w,c
  9726  0183EE  6EDF               	movwf	223,c
  9727                           
  9728                           ; BSR set to: 0
  9729                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  9730  0183F0  0EB8               	movlw	184
  9731  0183F2  6EE6               	movwf	postinc1,c
  9732  0183F4  0E0B               	movlw	11
  9733  0183F6  6EE6               	movwf	postinc1,c
  9734  0183F8  0E09               	movlw	9
  9735  0183FA  6EE6               	movwf	postinc1,c
  9736  0183FC  ECDC  F0DC         	call	_StartTimer	;wreg free
  9737                           
  9738                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  9739  018400  0EB8               	movlw	184
  9740  018402  6EE6               	movwf	postinc1,c
  9741  018404  0E0B               	movlw	11
  9742  018406  6EE6               	movwf	postinc1,c
  9743  018408  0E07               	movlw	7
  9744  01840A  6EE6               	movwf	postinc1,c
  9745  01840C  ECDC  F0DC         	call	_StartTimer	;wreg free
  9746                           
  9747                           ;mconfig.c: 64:   mode_lamp_bright();
  9748  018410  ECB4  F0E1         	call	_mode_lamp_bright	;wreg free
  9749                           
  9750                           ;mconfig.c: 65:   update_lcd(1);
  9751  018414  0E01               	movlw	1
  9752  018416  6EE6               	movwf	postinc1,c
  9753  018418  EC6C  F0CE         	call	_update_lcd	;wreg free
  9754                           
  9755                           ;mconfig.c: 67:  } else {
  9756  01841C  D032               	goto	l1686
  9757  01841E                     l13246:
  9758                           
  9759                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  9760  01841E  0E09               	movlw	9
  9761  018420  6EE6               	movwf	postinc1,c
  9762  018422  ECFD  F0DE         	call	_TimerDone	;wreg free
  9763  018426  5001               	movf	btemp^0,w,c
  9764  018428  B4D8               	btfsc	status,2,c
  9765  01842A  D02B               	goto	l1686
  9766                           
  9767                           ;mconfig.c: 69:    set_vterm(0);
  9768  01842C  0E00               	movlw	0
  9769  01842E  6EE6               	movwf	postinc1,c
  9770  018430  ECE2  F0E0         	call	_set_vterm	;wreg free
  9771                           
  9772                           ;mconfig.c: 70:    V.help = 0;
  9773  018434  0101               	movlb	1	; () banked
  9774  018436  95A2               	bcf	(_V+155)& (0+255),2,b	;volatile
  9775                           
  9776                           ; BSR set to: 1
  9777                           ;mconfig.c: 71:    set_display_info(display_help());
  9778  018438  ECF1  F0E1         	call	_display_help	;wreg free
  9779  01843C  5001               	movf	btemp^0,w,c
  9780  01843E  6EE6               	movwf	postinc1,c
  9781  018440  ECF1  F0E0         	call	_set_display_info	;wreg free
  9782                           
  9783                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  9784  018444  0060  F673  FFE6   	movff	_V+149,postinc1
  9785  01844A  0060  F677  FFE6   	movff	_V+150,postinc1
  9786  018450  EC37  F0E1         	call	_mode_lamp_dim	;wreg free
  9787                           
  9788                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  9789  018454  0E0B               	movlw	11
  9790  018456  6EE6               	movwf	postinc1,c
  9791  018458  ECFD  F0DE         	call	_TimerDone	;wreg free
  9792  01845C  5001               	movf	btemp^0,w,c
  9793  01845E  B4D8               	btfsc	status,2,c
  9794  018460  D010               	goto	l1686
  9795                           
  9796                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  9797  018462  0101               	movlb	1	; () banked
  9798  018464  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  9799  018466  A4D8               	btfss	status,2,c
  9800  018468  D002               	goto	u12740
  9801  01846A  0E01               	movlw	1
  9802  01846C  D001               	goto	u12750
  9803  01846E                     u12740:
  9804  01846E  0E00               	movlw	0
  9805  018470                     u12750:
  9806  018470  6FB2               	movwf	(_V+171)& (0+255),b	;volatile
  9807                           
  9808                           ; BSR set to: 1
  9809                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  9810  018472  0EDC               	movlw	220
  9811  018474  6EE6               	movwf	postinc1,c
  9812  018476  0E05               	movlw	5
  9813  018478  6EE6               	movwf	postinc1,c
  9814  01847A  0E0B               	movlw	11
  9815  01847C  6EE6               	movwf	postinc1,c
  9816  01847E  ECDC  F0DC         	call	_StartTimer	;wreg free
  9817  018482                     l1686:
  9818                           
  9819                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  9820  018482  52E5               	movf	postdec1,f,c
  9821  018484  0012               	return		;funcret
  9822  018486                     __end_of_check_help:
  9823                           	opt callstack 0
  9824                           
  9825 ;; *************** function _vterm_dump *****************
  9826 ;; Defined at:
  9827 ;;		line 121 in file "mconfig.c"
  9828 ;; Parameters:    Size  Location     Type
  9829 ;;		None
  9830 ;; Auto vars:     Size  Location     Type
  9831 ;;		None
  9832 ;; Return value:  Size  Location     Type
  9833 ;;                  1  [STACK] void 
  9834 ;; Registers used:
  9835 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9836 ;; Tracked objects:
  9837 ;;		On entry : 3F/1
  9838 ;;		On exit  : 0/0
  9839 ;;		Unchanged: 0/0
  9840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9845 ;;Total ram usage:        0 bytes
  9846 ;; Hardware stack levels used:    1
  9847 ;; Hardware stack levels required when called:   27
  9848 ;; This function calls:
  9849 ;;		_WaitMs
  9850 ;;		_eaDogM_WriteStringAtPos
  9851 ;;		_get_vterm_ptr
  9852 ;;		_sprintf
  9853 ;;		_wait_lcd_done
  9854 ;; This function is called by:
  9855 ;;		_check_help
  9856 ;; This function uses a reentrant model
  9857 ;;
  9858                           
  9859                           	psect	text32
  9860  01985A                     __ptext32:
  9861                           	opt callstack 0
  9862  01985A                     _vterm_dump:
  9863                           	opt callstack 2
  9864                           
  9865                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  9866                           
  9867                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9868                           ;incstack = 0
  9869  01985A  0E01               	movlw	1
  9870  01985C  6EE6               	movwf	postinc1,c
  9871  01985E  0E00               	movlw	0
  9872  019860  6EE6               	movwf	postinc1,c
  9873  019862  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  9874  019866  0060  F007  FFE6   	movff	btemp,postinc1
  9875  01986C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9876  019872  0E00               	movlw	0
  9877  019874  6EE6               	movwf	postinc1,c
  9878  019876  0E00               	movlw	0
  9879  019878  6EE6               	movwf	postinc1,c
  9880  01987A  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  9881  01987E  0060  F007  FFE6   	movff	btemp,postinc1
  9882  019884  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9883  01988A  0EA4               	movlw	low STR_51
  9884  01988C  6EE6               	movwf	postinc1,c
  9885  01988E  0EFF               	movlw	high STR_51
  9886  019890  6EE6               	movwf	postinc1,c
  9887  019892  0E08               	movlw	low (_V+1)
  9888  019894  6EE6               	movwf	postinc1,c
  9889  019896  0E01               	movlw	high (_V+1)
  9890  019898  6EE6               	movwf	postinc1,c
  9891  01989A  0E08               	movlw	8
  9892  01989C  6EE6               	movwf	postinc1,c
  9893  01989E  ECF4  F0CE         	call	_sprintf	;wreg free
  9894                           
  9895                           ; BSR set to: 0
  9896                           ;mconfig.c: 124:  wait_lcd_done();
  9897  0198A2  EC0F  F0E1         	call	_wait_lcd_done	;wreg free
  9898                           
  9899                           ; BSR set to: 0
  9900                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  9901  0198A6  0E08               	movlw	low (_V+1)
  9902  0198A8  6EE6               	movwf	postinc1,c
  9903  0198AA  0E01               	movlw	high (_V+1)
  9904  0198AC  6EE6               	movwf	postinc1,c
  9905  0198AE  0E00               	movlw	0
  9906  0198B0  6EE6               	movwf	postinc1,c
  9907  0198B2  0E00               	movlw	0
  9908  0198B4  6EE6               	movwf	postinc1,c
  9909  0198B6  ECA2  F0D4         	call	_eaDogM_WriteStringAtPos	;wreg free
  9910                           
  9911                           ; BSR set to: 59
  9912                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  9913  0198BA  0E01               	movlw	1
  9914  0198BC  6EE6               	movwf	postinc1,c
  9915  0198BE  0E01               	movlw	1
  9916  0198C0  6EE6               	movwf	postinc1,c
  9917  0198C2  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  9918  0198C6  0060  F007  FFE6   	movff	btemp,postinc1
  9919  0198CC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9920  0198D2  0E00               	movlw	0
  9921  0198D4  6EE6               	movwf	postinc1,c
  9922  0198D6  0E01               	movlw	1
  9923  0198D8  6EE6               	movwf	postinc1,c
  9924  0198DA  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  9925  0198DE  0060  F007  FFE6   	movff	btemp,postinc1
  9926  0198E4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9927  0198EA  0EA4               	movlw	low STR_51
  9928  0198EC  6EE6               	movwf	postinc1,c
  9929  0198EE  0EFF               	movlw	high STR_51
  9930  0198F0  6EE6               	movwf	postinc1,c
  9931  0198F2  0E08               	movlw	low (_V+1)
  9932  0198F4  6EE6               	movwf	postinc1,c
  9933  0198F6  0E01               	movlw	high (_V+1)
  9934  0198F8  6EE6               	movwf	postinc1,c
  9935  0198FA  0E08               	movlw	8
  9936  0198FC  6EE6               	movwf	postinc1,c
  9937  0198FE  ECF4  F0CE         	call	_sprintf	;wreg free
  9938                           
  9939                           ; BSR set to: 0
  9940                           ;mconfig.c: 127:  wait_lcd_done();
  9941  019902  EC0F  F0E1         	call	_wait_lcd_done	;wreg free
  9942                           
  9943                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  9944  019906  0E08               	movlw	low (_V+1)
  9945  019908  6EE6               	movwf	postinc1,c
  9946  01990A  0E01               	movlw	high (_V+1)
  9947  01990C  6EE6               	movwf	postinc1,c
  9948  01990E  0E00               	movlw	0
  9949  019910  6EE6               	movwf	postinc1,c
  9950  019912  0E01               	movlw	1
  9951  019914  6EE6               	movwf	postinc1,c
  9952  019916  ECA2  F0D4         	call	_eaDogM_WriteStringAtPos	;wreg free
  9953                           
  9954                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  9955  01991A  0E01               	movlw	1
  9956  01991C  6EE6               	movwf	postinc1,c
  9957  01991E  0E02               	movlw	2
  9958  019920  6EE6               	movwf	postinc1,c
  9959  019922  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  9960  019926  0060  F007  FFE6   	movff	btemp,postinc1
  9961  01992C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9962  019932  0E00               	movlw	0
  9963  019934  6EE6               	movwf	postinc1,c
  9964  019936  0E02               	movlw	2
  9965  019938  6EE6               	movwf	postinc1,c
  9966  01993A  EC7A  F0DE         	call	_get_vterm_ptr	;wreg free
  9967  01993E  0060  F007  FFE6   	movff	btemp,postinc1
  9968  019944  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9969  01994A  0EA4               	movlw	low STR_51
  9970  01994C  6EE6               	movwf	postinc1,c
  9971  01994E  0EFF               	movlw	high STR_51
  9972  019950  6EE6               	movwf	postinc1,c
  9973  019952  0E08               	movlw	low (_V+1)
  9974  019954  6EE6               	movwf	postinc1,c
  9975  019956  0E01               	movlw	high (_V+1)
  9976  019958  6EE6               	movwf	postinc1,c
  9977  01995A  0E08               	movlw	8
  9978  01995C  6EE6               	movwf	postinc1,c
  9979  01995E  ECF4  F0CE         	call	_sprintf	;wreg free
  9980                           
  9981                           ; BSR set to: 0
  9982                           ;mconfig.c: 130:  wait_lcd_done();
  9983  019962  EC0F  F0E1         	call	_wait_lcd_done	;wreg free
  9984                           
  9985                           ; BSR set to: 0
  9986                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  9987  019966  0E08               	movlw	low (_V+1)
  9988  019968  6EE6               	movwf	postinc1,c
  9989  01996A  0E01               	movlw	high (_V+1)
  9990  01996C  6EE6               	movwf	postinc1,c
  9991  01996E  0E00               	movlw	0
  9992  019970  6EE6               	movwf	postinc1,c
  9993  019972  0E02               	movlw	2
  9994  019974  6EE6               	movwf	postinc1,c
  9995  019976  ECA2  F0D4         	call	_eaDogM_WriteStringAtPos	;wreg free
  9996                           
  9997                           ; BSR set to: 59
  9998                           ;mconfig.c: 132:  WaitMs(3000);
  9999  01997A  0EB8               	movlw	184
 10000  01997C  6EE6               	movwf	postinc1,c
 10001  01997E  0E0B               	movlw	11
 10002  019980  6EE6               	movwf	postinc1,c
 10003  019982  ECCB  F0DD         	call	_WaitMs	;wreg free
 10004                           
 10005                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 10006  019986  0012               	return		;funcret
 10007  019988                     __end_of_vterm_dump:
 10008                           	opt callstack 0
 10009                           
 10010 ;; *************** function _sprintf *****************
 10011 ;; Defined at:
 10012 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 10013 ;; Parameters:    Size  Location     Type
 10014 ;;  s               2  [STACK] PTR unsigned char 
 10015 ;;		 -> D.lcd(480), D(482), port_data(512), V(191), 
 10016 ;;  fmt             2  [STACK] PTR const unsigned char 
 10017 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
 10018 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 10019 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 10020 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 10021 ;;		 -> STR_47(19), STR_42(22), STR_41(22), STR_40(22), 
 10022 ;;		 -> STR_39(23), STR_38(23), STR_37(23), STR_36(23), 
 10023 ;;		 -> STR_35(23), STR_34(23), STR_33(22), STR_32(22), 
 10024 ;;		 -> STR_31(22), STR_30(22), STR_29(22), STR_28(22), 
 10025 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(22), 
 10026 ;;		 -> STR_23(22), STR_22(22), STR_21(17), STR_20(16), 
 10027 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 10028 ;;		 -> STR_15(21), STR_14(21), STR_13(21), STR_12(21), 
 10029 ;;		 -> STR_11(22), STR_10(22), STR_9(26), STR_8(21), 
 10030 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 10031 ;;		 -> STR_2(21), STR_1(21), 
 10032 ;; Auto vars:     Size  Location     Type
 10033 ;;  f               6  [STACK] struct _IO_FILE
 10034 ;;  ap              2  [STACK] PTR void [1]
 10035 ;;		 -> ?_printf(2), ?_sprintf(2), 
 10036 ;;  ret             2    0        int 
 10037 ;; Return value:  Size  Location     Type
 10038 ;;                  2  [STACK] int 
 10039 ;; Registers used:
 10040 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10041 ;; Tracked objects:
 10042 ;;		On entry : 0/1
 10043 ;;		On exit  : 3F/0
 10044 ;;		Unchanged: 0/0
 10045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10050 ;;Total ram usage:        0 bytes
 10051 ;; Hardware stack levels used:    1
 10052 ;; Hardware stack levels required when called:   23
 10053 ;; This function calls:
 10054 ;;		_vfprintf
 10055 ;; This function is called by:
 10056 ;;		_main
 10057 ;;		_check_help
 10058 ;;		_vterm_dump
 10059 ;;		_calc_bsoc
 10060 ;; This function uses a reentrant model
 10061 ;;
 10062                           
 10063                           	psect	text33
 10064  019DE8                     __ptext33:
 10065                           	opt callstack 0
 10066  019DE8                     _sprintf:
 10067                           	opt callstack 0
 10068                           
 10069                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 86, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10070  019DE8  0E08               	movlw	8
 10071  019DEA  26E1               	addwf	fsr1l,f,c
 10072  019DEC  0E00               	movlw	0
 10073  019DEE  22E2               	addwfc	fsr1h,f,c
 10074                           
 10075                           ;incstack = 0
 10076 ;; hardware stack exceeded
 10077  019DF0  0EFE               	movlw	254
 10078  019DF2  6E0B               	movwf	(btemp+10)^0,c
 10079  019DF4  0EFF               	movlw	255
 10080  019DF6  6E0C               	movwf	(btemp+11)^0,c
 10081                           
 10082                           ;stkvar	?_sprintf @ sp[(-8)+-3]
 10083  019DF8  0EF5               	movlw	245
 10084  019DFA  24E1               	addwf	fsr1l,w,c
 10085  019DFC  6E09               	movwf	(btemp+8)^0,c
 10086  019DFE  0EFF               	movlw	255
 10087  019E00  20E2               	addwfc	fsr1h,w,c
 10088  019E02  6E0A               	movwf	(btemp+9)^0,c
 10089  019E04  500B               	movf	(btemp+10)^0,w,c
 10090  019E06  2609               	addwf	(btemp+8)^0,f,c
 10091  019E08  500C               	movf	(btemp+11)^0,w,c
 10092  019E0A  220A               	addwfc	(btemp+9)^0,f,c
 10093                           
 10094                           ;stkvar	_ap @ sp[(-8)+6]
 10095  019E0C  0EFF               	movlw	-1
 10096  019E0E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 10097  019E14  0EFE               	movlw	-2
 10098  019E16  0060  F027  FFE3   	movff	btemp+8,plusw1
 10099                           
 10100                           ;stkvar	_s @ sp[(-8)+-3]
 10101  019E1C  0EF5               	movlw	-11
 10102  019E1E  006F FF8C  F00B    	movff	plusw1,btemp+10
 10103  019E24  0EF6               	movlw	-10
 10104  019E26  006F FF8C  F00C    	movff	plusw1,btemp+11
 10105                           
 10106                           ;stkvar	_f @ sp[(-8)+0]
 10107  019E2C  0EF9               	movlw	-7
 10108  019E2E  0060  F033  FFE3   	movff	btemp+11,plusw1
 10109  019E34  0EF8               	movlw	-8
 10110  019E36  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10111                           
 10112                           ;stkvar	_f @ sp[(-8)+0]
 10113  019E3C  0EFA               	movlw	250
 10114  019E3E  24E1               	addwf	fsr1l,w,c
 10115  019E40  6ED9               	movwf	fsr2l,c
 10116  019E42  0EFF               	movlw	255
 10117  019E44  20E2               	addwfc	fsr1h,w,c
 10118  019E46  6EDA               	movwf	fsr2h,c
 10119  019E48  0E00               	movlw	0
 10120  019E4A  6EDE               	movwf	postinc2,c
 10121  019E4C  0E00               	movlw	0
 10122  019E4E  6EDD               	movwf	postdec2,c
 10123                           
 10124                           ;stkvar	_f @ sp[(-8)+0]
 10125  019E50  0EFC               	movlw	252
 10126  019E52  24E1               	addwf	fsr1l,w,c
 10127  019E54  6ED9               	movwf	fsr2l,c
 10128  019E56  0EFF               	movlw	255
 10129  019E58  20E2               	addwfc	fsr1h,w,c
 10130  019E5A  6EDA               	movwf	fsr2h,c
 10131  019E5C  0E00               	movlw	0
 10132  019E5E  6EDE               	movwf	postinc2,c
 10133  019E60  0E00               	movlw	0
 10134  019E62  6EDD               	movwf	postdec2,c
 10135                           
 10136                           ;stkvar	_ap @ sp[(-8)+6]
 10137  019E64  0EFE               	movlw	254
 10138  019E66  24E1               	addwf	fsr1l,w,c
 10139  019E68  6E01               	movwf	btemp^0,c
 10140  019E6A  0EFF               	movlw	255
 10141  019E6C  20E2               	addwfc	fsr1h,w,c
 10142  019E6E  6E02               	movwf	(btemp+1)^0,c
 10143  019E70  0060  F007  FFE6   	movff	btemp,postinc1
 10144  019E76  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10145                           
 10146                           ;stkvar	_fmt @ sp[(-10)+-5]
 10147  019E7C  0EF1               	movlw	-15
 10148  019E7E  006F FF8F FFE6     	movff	plusw1,postinc1
 10149  019E84  006F FF8F FFE6     	movff	plusw1,postinc1
 10150                           
 10151                           ;stkvar	_f @ sp[(-12)+0]
 10152  019E8A  0EF4               	movlw	244
 10153  019E8C  24E1               	addwf	fsr1l,w,c
 10154  019E8E  6E01               	movwf	btemp^0,c
 10155  019E90  0EFF               	movlw	255
 10156  019E92  20E2               	addwfc	fsr1h,w,c
 10157  019E94  6E02               	movwf	(btemp+1)^0,c
 10158  019E96  0060  F007  FFE6   	movff	btemp,postinc1
 10159  019E9C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10160  019EA2  ECF7  F0D3         	call	_vfprintf	;wreg free
 10161                           
 10162                           ; BSR set to: 0
 10163                           ;stkvar	_f @ sp[(-8)+0]
 10164  019EA6  0EFA               	movlw	250
 10165  019EA8  24E1               	addwf	fsr1l,w,c
 10166  019EAA  6ED9               	movwf	fsr2l,c
 10167  019EAC  0EFF               	movlw	255
 10168  019EAE  20E2               	addwfc	fsr1h,w,c
 10169  019EB0  6EDA               	movwf	fsr2h,c
 10170  019EB2  006F FF78  F00B    	movff	postinc2,btemp+10
 10171  019EB8  006F FF74  F00C    	movff	postdec2,btemp+11
 10172                           
 10173                           ;stkvar	_s @ sp[(-8)+-3]
 10174  019EBE  0EF5               	movlw	-11
 10175  019EC0  006F FF8C  F009    	movff	plusw1,btemp+8
 10176  019EC6  0EF6               	movlw	-10
 10177  019EC8  006F FF8C  F00A    	movff	plusw1,btemp+9
 10178  019ECE  500B               	movf	(btemp+10)^0,w,c
 10179  019ED0  2409               	addwf	(btemp+8)^0,w,c
 10180  019ED2  6ED9               	movwf	fsr2l,c
 10181  019ED4  500C               	movf	(btemp+11)^0,w,c
 10182  019ED6  200A               	addwfc	(btemp+9)^0,w,c
 10183  019ED8  6EDA               	movwf	fsr2h,c
 10184  019EDA  0E00               	movlw	0
 10185  019EDC  6EDF               	movwf	indf2,c
 10186                           
 10187                           ; BSR set to: 0
 10188                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 86, args
      +                          ize = 4, vargsize = 0
 10189  019EDE  0EF8               	movlw	248
 10190  019EE0  26E1               	addwf	fsr1l,f,c
 10191  019EE2  0EFF               	movlw	255
 10192  019EE4  22E2               	addwfc	fsr1h,f,c
 10193  019EE6  52E5               	movf	postdec1,f,c
 10194  019EE8  50E7               	movf	indf1,w,c
 10195  019EEA  5EE1               	subwf	fsr1l,f,c
 10196  019EEC  0E00               	movlw	0
 10197  019EEE  5AE2               	subwfb	fsr1h,f,c
 10198  019EF0  0012               	return		;funcret
 10199  019EF2                     __end_of_sprintf:
 10200                           	opt callstack 0
 10201                           
 10202 ;; *************** function _get_vterm_ptr *****************
 10203 ;; Defined at:
 10204 ;;		line 116 in file "mconfig.c"
 10205 ;; Parameters:    Size  Location     Type
 10206 ;;  line            1  [STACK] const unsigned char 
 10207 ;;  vterm           1  [STACK] const unsigned char 
 10208 ;; Auto vars:     Size  Location     Type
 10209 ;;		None
 10210 ;; Return value:  Size  Location     Type
 10211 ;;                  2  [STACK] PTR unsigned char 
 10212 ;; Registers used:
 10213 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
 10214 ;; Tracked objects:
 10215 ;;		On entry : 0/1
 10216 ;;		On exit  : 0/0
 10217 ;;		Unchanged: 0/0
 10218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10223 ;;Total ram usage:        0 bytes
 10224 ;; Hardware stack levels used:    1
 10225 ;; Hardware stack levels required when called:   15
 10226 ;; This function calls:
 10227 ;;		Nothing
 10228 ;; This function is called by:
 10229 ;;		_main
 10230 ;;		_check_help
 10231 ;;		_vterm_dump
 10232 ;; This function uses a reentrant model
 10233 ;;
 10234                           
 10235                           	psect	text34
 10236  01BCF4                     __ptext34:
 10237                           	opt callstack 0
 10238  01BCF4                     _get_vterm_ptr:
 10239                           	opt callstack 15
 10240                           
 10241                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
 10242                           ;stkvar	_vterm @ sp[(0)+-2]
 10243                           
 10244                           ; BSR set to: 0
 10245                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10246                           ;incstack = 0
 10247  01BCF4  0EFE               	movlw	-2
 10248  01BCF6  50E3               	movf	plusw1,w,c
 10249  01BCF8  0B03               	andlw	3
 10250  01BCFA  0D78               	mullw	120
 10251  01BCFC  0E2A               	movlw	low _D
 10252  01BCFE  6E01               	movwf	btemp^0,c
 10253  01BD00  0E08               	movlw	high _D
 10254  01BD02  6E02               	movwf	(btemp+1)^0,c
 10255  01BD04  50F3               	movf	243,w,c
 10256  01BD06  2601               	addwf	btemp^0,f,c
 10257  01BD08  50F4               	movf	244,w,c
 10258  01BD0A  2202               	addwfc	(btemp+1)^0,f,c
 10259                           
 10260                           ;stkvar	_line @ sp[(0)+-1]
 10261  01BD0C  0EFF               	movlw	-1
 10262  01BD0E  50E3               	movf	plusw1,w,c
 10263  01BD10  0B03               	andlw	3
 10264  01BD12  0D28               	mullw	40
 10265  01BD14  50F3               	movf	243,w,c
 10266  01BD16  2601               	addwf	btemp^0,f,c
 10267  01BD18  50F4               	movf	244,w,c
 10268  01BD1A  2202               	addwfc	(btemp+1)^0,f,c
 10269                           
 10270                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 10271  01BD1C  52E5               	movf	postdec1,f,c
 10272  01BD1E  52E5               	movf	postdec1,f,c
 10273  01BD20  0012               	return		;funcret
 10274  01BD22                     __end_of_get_vterm_ptr:
 10275                           	opt callstack 0
 10276                           
 10277 ;; *************** function _WaitMs *****************
 10278 ;; Defined at:
 10279 ;;		line 32 in file "timers.c"
 10280 ;; Parameters:    Size  Location     Type
 10281 ;;  numMilliseco    2  [STACK] const unsigned short 
 10282 ;; Auto vars:     Size  Location     Type
 10283 ;;		None
 10284 ;; Return value:  Size  Location     Type
 10285 ;;                  1  [STACK] void 
 10286 ;; Registers used:
 10287 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 10288 ;; Tracked objects:
 10289 ;;		On entry : 0/1
 10290 ;;		On exit  : 0/0
 10291 ;;		Unchanged: 0/0
 10292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10297 ;;Total ram usage:        0 bytes
 10298 ;; Hardware stack levels used:    1
 10299 ;; Hardware stack levels required when called:   16
 10300 ;; This function calls:
 10301 ;;		_StartTimer
 10302 ;;		_TimerDone
 10303 ;; This function is called by:
 10304 ;;		_main
 10305 ;;		_vterm_dump
 10306 ;; This function uses a reentrant model
 10307 ;;
 10308                           
 10309                           	psect	text35
 10310  01BB96                     __ptext35:
 10311                           	opt callstack 0
 10312  01BB96                     _WaitMs:
 10313                           	opt callstack 12
 10314                           
 10315                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 10316                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 10317                           
 10318                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10319                           ;incstack = 0
 10320  01BB96  0EFE               	movlw	-2
 10321  01BB98  006F FF8F FFE6     	movff	plusw1,postinc1
 10322  01BB9E  006F FF8F FFE6     	movff	plusw1,postinc1
 10323  01BBA4  0E00               	movlw	0
 10324  01BBA6  6EE6               	movwf	postinc1,c
 10325  01BBA8  ECDC  F0DC         	call	_StartTimer	;wreg free
 10326                           
 10327                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 10328  01BBAC  D005               	goto	l9994
 10329  01BBAE                     l1617:
 10330                           
 10331                           ;timers.c: 36:   __nop();
 10332  01BBAE  F000               	nop	
 10333                           
 10334                           ;timers.c: 37:   __nop();
 10335  01BBB0  F000               	nop	
 10336                           
 10337                           ;timers.c: 38:   __nop();
 10338  01BBB2  F000               	nop	
 10339                           
 10340                           ;timers.c: 39:   __nop();
 10341  01BBB4  F000               	nop	
 10342  01BBB6  0004               	clrwdt		;# 
 10343  01BBB8                     l9994:
 10344                           
 10345                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 10346  01BBB8  0E00               	movlw	0
 10347  01BBBA  6EE6               	movwf	postinc1,c
 10348  01BBBC  ECFD  F0DE         	call	_TimerDone	;wreg free
 10349  01BBC0  5001               	movf	btemp^0,w,c
 10350  01BBC2  B4D8               	btfsc	status,2,c
 10351  01BBC4  D7F4               	goto	l1617
 10352                           
 10353                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 10354  01BBC6  52E5               	movf	postdec1,f,c
 10355  01BBC8  52E5               	movf	postdec1,f,c
 10356  01BBCA  0012               	return		;funcret
 10357  01BBCC                     __end_of_WaitMs:
 10358                           	opt callstack 0
 10359                           
 10360 ;; *************** function _update_lcd *****************
 10361 ;; Defined at:
 10362 ;;		line 85 in file "mconfig.c"
 10363 ;; Parameters:    Size  Location     Type
 10364 ;;  vterm           1  [STACK] unsigned char 
 10365 ;; Auto vars:     Size  Location     Type
 10366 ;;		None
 10367 ;; Return value:  Size  Location     Type
 10368 ;;                  1  [STACK] unsigned char 
 10369 ;; Registers used:
 10370 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10371 ;; Tracked objects:
 10372 ;;		On entry : 0/0
 10373 ;;		On exit  : 0/0
 10374 ;;		Unchanged: 0/0
 10375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10380 ;;Total ram usage:        0 bytes
 10381 ;; Hardware stack levels used:    1
 10382 ;; Hardware stack levels required when called:   27
 10383 ;; This function calls:
 10384 ;;		_eaDogM_WriteStringAtPos
 10385 ;;		_wait_lcd_done
 10386 ;; This function is called by:
 10387 ;;		_main
 10388 ;;		_check_help
 10389 ;; This function uses a reentrant model
 10390 ;;
 10391                           
 10392                           	psect	text36
 10393  019CD8                     __ptext36:
 10394                           	opt callstack 0
 10395  019CD8                     _update_lcd:
 10396                           	opt callstack 3
 10397                           
 10398                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
 10399                           ;stkvar	_vterm @ sp[(0)+-1]
 10400                           
 10401                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10402                           ;incstack = 0
 10403  019CD8  0EFF               	movlw	-1
 10404  019CDA  006F FF8C  F001    	movff	plusw1,btemp
 10405  019CE0  0E03               	movlw	3
 10406  019CE2  1601               	andwf	btemp^0,f,c
 10407  019CE4  0EFF               	movlw	-1
 10408  019CE6  0060  F007  FFE3   	movff	btemp,plusw1
 10409                           
 10410                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
 10411  019CEC  EE22  F20A         	lfsr	2,_D+480
 10412  019CF0  A0DF               	btfss	indf2,0,c
 10413  019CF2  D004               	goto	l12966
 10414                           
 10415                           ;stkvar	_vterm @ sp[(0)+-1]
 10416  019CF4  0EFF               	movlw	-1
 10417  019CF6  50E3               	movf	plusw1,w,c
 10418  019CF8  B4D8               	btfsc	status,2,c
 10419  019CFA  D074               	goto	l1693
 10420  019CFC                     l12966:
 10421                           
 10422                           ;mconfig.c: 92:  D.lcd[vterm][0][20] = 0;
 10423                           ;stkvar	_vterm @ sp[(0)+-1]
 10424  019CFC  0EFF               	movlw	-1
 10425  019CFE  50E3               	movf	plusw1,w,c
 10426  019D00  0D78               	mullw	120
 10427  019D02  0E3E               	movlw	low (_D+20)
 10428  019D04  24F3               	addwf	243,w,c
 10429  019D06  6ED9               	movwf	fsr2l,c
 10430  019D08  0E08               	movlw	high (_D+20)
 10431  019D0A  20F4               	addwfc	prodh,w,c
 10432  019D0C  6EDA               	movwf	fsr2h,c
 10433  019D0E  0E00               	movlw	0
 10434  019D10  6EDF               	movwf	indf2,c
 10435                           
 10436                           ;mconfig.c: 93:  D.lcd[vterm][1][20] = 0;
 10437                           ;stkvar	_vterm @ sp[(0)+-1]
 10438  019D12  0EFF               	movlw	-1
 10439  019D14  50E3               	movf	plusw1,w,c
 10440  019D16  0D78               	mullw	120
 10441  019D18  0E66               	movlw	low (_D+60)
 10442  019D1A  24F3               	addwf	243,w,c
 10443  019D1C  6ED9               	movwf	fsr2l,c
 10444  019D1E  0E08               	movlw	high (_D+60)
 10445  019D20  20F4               	addwfc	prodh,w,c
 10446  019D22  6EDA               	movwf	fsr2h,c
 10447  019D24  0E00               	movlw	0
 10448  019D26  6EDF               	movwf	indf2,c
 10449                           
 10450                           ;mconfig.c: 94:  D.lcd[vterm][2][20] = 0;
 10451                           ;stkvar	_vterm @ sp[(0)+-1]
 10452  019D28  0EFF               	movlw	-1
 10453  019D2A  50E3               	movf	plusw1,w,c
 10454  019D2C  0D78               	mullw	120
 10455  019D2E  0E8E               	movlw	low (_D+100)
 10456  019D30  24F3               	addwf	243,w,c
 10457  019D32  6ED9               	movwf	fsr2l,c
 10458  019D34  0E08               	movlw	high (_D+100)
 10459  019D36  20F4               	addwfc	prodh,w,c
 10460  019D38  6EDA               	movwf	fsr2h,c
 10461  019D3A  0E00               	movlw	0
 10462  019D3C  6EDF               	movwf	indf2,c
 10463                           
 10464                           ;mconfig.c: 95:  wait_lcd_done();
 10465  019D3E  EC0F  F0E1         	call	_wait_lcd_done	;wreg free
 10466                           
 10467                           ; BSR set to: 0
 10468                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 10469                           ;stkvar	_vterm @ sp[(0)+-1]
 10470  019D42  0EFF               	movlw	-1
 10471  019D44  50E3               	movf	plusw1,w,c
 10472  019D46  0D78               	mullw	120
 10473  019D48  0E2A               	movlw	low _D
 10474  019D4A  6E0B               	movwf	(btemp+10)^0,c
 10475  019D4C  0E08               	movlw	high _D
 10476  019D4E  6E0C               	movwf	(btemp+11)^0,c
 10477  019D50  50F3               	movf	243,w,c
 10478  019D52  260B               	addwf	(btemp+10)^0,f,c
 10479  019D54  50F4               	movf	244,w,c
 10480  019D56  220C               	addwfc	(btemp+11)^0,f,c
 10481  019D58  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10482  019D5E  0060  F033  FFE6   	movff	btemp+11,postinc1
 10483  019D64  0E00               	movlw	0
 10484  019D66  6EE6               	movwf	postinc1,c
 10485  019D68  0E00               	movlw	0
 10486  019D6A  6EE6               	movwf	postinc1,c
 10487  019D6C  ECA2  F0D4         	call	_eaDogM_WriteStringAtPos	;wreg free
 10488                           
 10489                           ; BSR set to: 59
 10490                           ;mconfig.c: 97:  wait_lcd_done();
 10491  019D70  EC0F  F0E1         	call	_wait_lcd_done	;wreg free
 10492                           
 10493                           ; BSR set to: 0
 10494                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 10495                           ;stkvar	_vterm @ sp[(0)+-1]
 10496  019D74  0EFF               	movlw	-1
 10497  019D76  50E3               	movf	plusw1,w,c
 10498  019D78  0D78               	mullw	120
 10499  019D7A  0E2A               	movlw	low _D
 10500  019D7C  6E0B               	movwf	(btemp+10)^0,c
 10501  019D7E  0E08               	movlw	high _D
 10502  019D80  6E0C               	movwf	(btemp+11)^0,c
 10503  019D82  0E28               	movlw	40
 10504  019D84  260B               	addwf	(btemp+10)^0,f,c
 10505  019D86  0E00               	movlw	0
 10506  019D88  220C               	addwfc	(btemp+11)^0,f,c
 10507  019D8A  50F3               	movf	243,w,c
 10508  019D8C  260B               	addwf	(btemp+10)^0,f,c
 10509  019D8E  50F4               	movf	244,w,c
 10510  019D90  220C               	addwfc	(btemp+11)^0,f,c
 10511  019D92  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10512  019D98  0060  F033  FFE6   	movff	btemp+11,postinc1
 10513  019D9E  0E00               	movlw	0
 10514  019DA0  6EE6               	movwf	postinc1,c
 10515  019DA2  0E01               	movlw	1
 10516  019DA4  6EE6               	movwf	postinc1,c
 10517  019DA6  ECA2  F0D4         	call	_eaDogM_WriteStringAtPos	;wreg free
 10518                           
 10519                           ; BSR set to: 59
 10520                           ;mconfig.c: 99:  wait_lcd_done();
 10521  019DAA  EC0F  F0E1         	call	_wait_lcd_done	;wreg free
 10522                           
 10523                           ; BSR set to: 0
 10524                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 10525                           ;stkvar	_vterm @ sp[(0)+-1]
 10526  019DAE  0EFF               	movlw	-1
 10527  019DB0  50E3               	movf	plusw1,w,c
 10528  019DB2  0D78               	mullw	120
 10529  019DB4  0E2A               	movlw	low _D
 10530  019DB6  6E0B               	movwf	(btemp+10)^0,c
 10531  019DB8  0E08               	movlw	high _D
 10532  019DBA  6E0C               	movwf	(btemp+11)^0,c
 10533  019DBC  0E50               	movlw	80
 10534  019DBE  260B               	addwf	(btemp+10)^0,f,c
 10535  019DC0  0E00               	movlw	0
 10536  019DC2  220C               	addwfc	(btemp+11)^0,f,c
 10537  019DC4  50F3               	movf	243,w,c
 10538  019DC6  260B               	addwf	(btemp+10)^0,f,c
 10539  019DC8  50F4               	movf	244,w,c
 10540  019DCA  220C               	addwfc	(btemp+11)^0,f,c
 10541  019DCC  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10542  019DD2  0060  F033  FFE6   	movff	btemp+11,postinc1
 10543  019DD8  0E00               	movlw	0
 10544  019DDA  6EE6               	movwf	postinc1,c
 10545  019DDC  0E02               	movlw	2
 10546  019DDE  6EE6               	movwf	postinc1,c
 10547  019DE0  ECA2  F0D4         	call	_eaDogM_WriteStringAtPos	;wreg free
 10548  019DE4                     l1693:
 10549                           
 10550                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 10551  019DE4  52E5               	movf	postdec1,f,c
 10552  019DE6  0012               	return		;funcret
 10553  019DE8                     __end_of_update_lcd:
 10554                           	opt callstack 0
 10555                           
 10556 ;; *************** function _eaDogM_WriteStringAtPos *****************
 10557 ;; Defined at:
 10558 ;;		line 195 in file "eadog.c"
 10559 ;; Parameters:    Size  Location     Type
 10560 ;;  r               1  [STACK] const unsigned char 
 10561 ;;  c               1  [STACK] const unsigned char 
 10562 ;;  strPtr          2  [STACK] PTR unsigned char 
 10563 ;;		 -> D.lcd(480), D(482), V(191), 
 10564 ;; Auto vars:     Size  Location     Type
 10565 ;;  row             1  [STACK] unsigned char 
 10566 ;; Return value:  Size  Location     Type
 10567 ;;                  1  [STACK] void 
 10568 ;; Registers used:
 10569 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10570 ;; Tracked objects:
 10571 ;;		On entry : 3F/0
 10572 ;;		On exit  : 3F/3B
 10573 ;;		Unchanged: 0/0
 10574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10579 ;;Total ram usage:        0 bytes
 10580 ;; Hardware stack levels used:    1
 10581 ;; Hardware stack levels required when called:   26
 10582 ;; This function calls:
 10583 ;;		_eaDogM_WriteString
 10584 ;;		_send_lcd_cmd_dma
 10585 ;;		_send_lcd_data_dma
 10586 ;;		_wait_lcd_done
 10587 ;;		_wdtdelay
 10588 ;; This function is called by:
 10589 ;;		_update_lcd
 10590 ;;		_vterm_dump
 10591 ;; This function uses a reentrant model
 10592 ;;
 10593                           
 10594                           	psect	text37
 10595  01A944                     __ptext37:
 10596                           	opt callstack 0
 10597  01A944                     _eaDogM_WriteStringAtPos:
 10598                           	opt callstack 0
 10599                           
 10600                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10601  01A944  52E6               	movf	postinc1,f,c
 10602                           
 10603                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 10604                           
 10605                           ;incstack = 0
 10606  01A946  D014               	goto	l12942
 10607  01A948                     l12930:
 10608                           
 10609                           ;eadog.c: 201:   row = 0x40;
 10610                           ;stkvar	_row @ sp[(-1)+0]
 10611  01A948  0EFF               	movlw	-1
 10612  01A94A  6AE3               	clrf	plusw1,c
 10613  01A94C  8CE3               	bsf	plusw1,6,c
 10614                           
 10615                           ;eadog.c: 202:   break;
 10616  01A94E  D026               	goto	l12944
 10617  01A950                     l12932:
 10618                           
 10619                           ;eadog.c: 204:   row = 0x14;
 10620                           ;stkvar	_row @ sp[(-1)+0]
 10621  01A950  0EFF               	movlw	-1
 10622  01A952  6AE3               	clrf	plusw1,c
 10623  01A954  84E3               	bsf	plusw1,2,c
 10624  01A956  88E3               	bsf	plusw1,4,c	;indir
 10625                           
 10626                           ;eadog.c: 205:   break;
 10627  01A958  D021               	goto	l12944
 10628  01A95A                     l12934:
 10629                           
 10630                           ;eadog.c: 207:   row = 0x54;
 10631  01A95A  0E54               	movlw	84
 10632  01A95C  6E0C               	movwf	(btemp+11)^0,c
 10633                           
 10634                           ;stkvar	_row @ sp[(-1)+0]
 10635  01A95E  0EFF               	movlw	-1
 10636  01A960  0060  F033  FFE3   	movff	btemp+11,plusw1
 10637                           
 10638                           ;eadog.c: 208:   break;
 10639  01A966  D01A               	goto	l12944
 10640  01A968                     l12936:
 10641                           
 10642                           ;eadog.c: 210:   row = 0x1;
 10643                           ;stkvar	_row @ sp[(-1)+0]
 10644  01A968  0EFF               	movlw	-1
 10645  01A96A  6AE3               	clrf	plusw1,c
 10646  01A96C  2AE3               	incf	plusw1,f,c
 10647                           
 10648                           ;eadog.c: 211:   break;
 10649  01A96E  D016               	goto	l12944
 10650  01A970                     l12942:
 10651                           
 10652                           ;stkvar	_r @ sp[(-1)+-1]
 10653  01A970  0EFE               	movlw	-2
 10654  01A972  50E3               	movf	plusw1,w,c
 10655  01A974  6E0B               	movwf	(btemp+10)^0,c
 10656  01A976  6A0C               	clrf	(btemp+11)^0,c
 10657                           
 10658                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10659                           ; Switch size 1, requested type "simple"
 10660                           ; Number of cases is 1, Range of values is 0 to 0
 10661                           ; switch strategies available:
 10662                           ; Name         Instructions Cycles
 10663                           ; simple_byte            4     3 (average)
 10664                           ;	Chosen strategy is simple_byte
 10665  01A978  500C               	movf	(btemp+11)^0,w,c
 10666  01A97A  0A00               	xorlw	0	; case 0
 10667  01A97C  A4D8               	btfss	status,2,c
 10668  01A97E  D7E4               	goto	l12930
 10669                           
 10670                           ; Switch size 1, requested type "simple"
 10671                           ; Number of cases is 4, Range of values is 0 to 3
 10672                           ; switch strategies available:
 10673                           ; Name         Instructions Cycles
 10674                           ; simple_byte           13     7 (average)
 10675                           ;	Chosen strategy is simple_byte
 10676  01A980  500B               	movf	(btemp+10)^0,w,c
 10677  01A982  0A00               	xorlw	0	; case 0
 10678  01A984  B4D8               	btfsc	status,2,c
 10679  01A986  D7E0               	goto	l12930
 10680  01A988  0A01               	xorlw	1	; case 1
 10681  01A98A  B4D8               	btfsc	status,2,c
 10682  01A98C  D7E1               	goto	l12932
 10683  01A98E  0A03               	xorlw	3	; case 2
 10684  01A990  B4D8               	btfsc	status,2,c
 10685  01A992  D7E3               	goto	l12934
 10686  01A994  0A01               	xorlw	1	; case 3
 10687  01A996  B4D8               	btfsc	status,2,c
 10688  01A998  D7E7               	goto	l12936
 10689  01A99A  D7D6               	goto	l12930
 10690  01A99C                     l12944:
 10691                           
 10692                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 10693  01A99C  0E45               	movlw	69
 10694  01A99E  6EE6               	movwf	postinc1,c
 10695  01A9A0  ECD3  F0E0         	call	_send_lcd_cmd_dma	;wreg free
 10696                           
 10697                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 10698                           ;stkvar	_c @ sp[(-1)+-2]
 10699  01A9A4  0EFD               	movlw	-3
 10700  01A9A6  006F FF8C  F00C    	movff	plusw1,btemp+11
 10701                           
 10702                           ;stkvar	_row @ sp[(-1)+0]
 10703  01A9AC  0EFF               	movlw	-1
 10704  01A9AE  50E3               	movf	plusw1,w,c
 10705  01A9B0  240C               	addwf	(btemp+11)^0,w,c
 10706  01A9B2  6EE6               	movwf	postinc1,c
 10707  01A9B4  EC16  F0DB         	call	_send_lcd_data_dma	;wreg free
 10708                           
 10709                           ; BSR set to: 59
 10710                           ;eadog.c: 218:  wait_lcd_done();
 10711  01A9B8  EC0F  F0E1         	call	_wait_lcd_done	;wreg free
 10712                           
 10713                           ; BSR set to: 0
 10714                           ;eadog.c: 219:  wdtdelay(8);
 10715  01A9BC  0E08               	movlw	8
 10716  01A9BE  6EE6               	movwf	postinc1,c
 10717  01A9C0  0E00               	movlw	0
 10718  01A9C2  6EE6               	movwf	postinc1,c
 10719  01A9C4  0E00               	movlw	0
 10720  01A9C6  6EE6               	movwf	postinc1,c
 10721  01A9C8  0E00               	movlw	0
 10722  01A9CA  6EE6               	movwf	postinc1,c
 10723  01A9CC  EC43  F0DA         	call	_wdtdelay	;wreg free
 10724                           
 10725                           ;eadog.c: 220:  eaDogM_WriteString(strPtr);
 10726                           ;stkvar	_strPtr @ sp[(-1)+-4]
 10727  01A9D0  0EFB               	movlw	-5
 10728  01A9D2  006F FF8F FFE6     	movff	plusw1,postinc1
 10729  01A9D8  006F FF8F FFE6     	movff	plusw1,postinc1
 10730  01A9DE  ECF6  F0D4         	call	_eaDogM_WriteString	;wreg free
 10731                           
 10732                           ; BSR set to: 59
 10733                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 10734  01A9E2  0EFB               	movlw	251
 10735  01A9E4  26E1               	addwf	fsr1l,f,c
 10736  01A9E6  0EFF               	movlw	255
 10737  01A9E8  22E2               	addwfc	fsr1h,f,c
 10738  01A9EA  0012               	return		;funcret
 10739  01A9EC                     __end_of_eaDogM_WriteStringAtPos:
 10740                           	opt callstack 0
 10741                           
 10742 ;; *************** function _send_lcd_cmd_dma *****************
 10743 ;; Defined at:
 10744 ;;		line 171 in file "eadog.c"
 10745 ;; Parameters:    Size  Location     Type
 10746 ;;  strPtr          1  [STACK] const unsigned char 
 10747 ;; Auto vars:     Size  Location     Type
 10748 ;;		None
 10749 ;; Return value:  Size  Location     Type
 10750 ;;                  1  [STACK] void 
 10751 ;; Registers used:
 10752 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10753 ;; Tracked objects:
 10754 ;;		On entry : 0/3D
 10755 ;;		On exit  : 3F/0
 10756 ;;		Unchanged: 0/0
 10757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10762 ;;Total ram usage:        0 bytes
 10763 ;; Hardware stack levels used:    1
 10764 ;; Hardware stack levels required when called:   25
 10765 ;; This function calls:
 10766 ;;		_send_lcd_data_dma
 10767 ;;		_wait_lcd_done
 10768 ;; This function is called by:
 10769 ;;		_eaDogM_WriteStringAtPos
 10770 ;;		_eaDogM_WriteCommand
 10771 ;; This function uses a reentrant model
 10772 ;;
 10773                           
 10774                           	psect	text38
 10775  01C1A6                     __ptext38:
 10776                           	opt callstack 0
 10777  01C1A6                     _send_lcd_cmd_dma:
 10778                           	opt callstack 3
 10779                           
 10780                           ;eadog.c: 171: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:
      +                            send_lcd_data_dma(0xFE);
 10781                           
 10782                           ; BSR set to: 59
 10783                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10784                           ;incstack = 0
 10785  01C1A6  0EFE               	movlw	254
 10786  01C1A8  6EE6               	movwf	postinc1,c
 10787  01C1AA  EC16  F0DB         	call	_send_lcd_data_dma	;wreg free
 10788                           
 10789                           ; BSR set to: 59
 10790                           ;eadog.c: 174:  wait_lcd_done();
 10791  01C1AE  EC0F  F0E1         	call	_wait_lcd_done	;wreg free
 10792                           
 10793                           ; BSR set to: 0
 10794                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 10795                           ;stkvar	_strPtr @ sp[(0)+-1]
 10796  01C1B2  0EFF               	movlw	-1
 10797  01C1B4  50E3               	movf	plusw1,w,c
 10798  01C1B6  6EE6               	movwf	postinc1,c
 10799  01C1B8  EC16  F0DB         	call	_send_lcd_data_dma	;wreg free
 10800                           
 10801                           ;eadog.c: 176:  wait_lcd_done();
 10802  01C1BC  EC0F  F0E1         	call	_wait_lcd_done	;wreg free
 10803                           
 10804                           ; BSR set to: 0
 10805                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 10806  01C1C0  52E5               	movf	postdec1,f,c
 10807  01C1C2  0012               	return		;funcret
 10808  01C1C4                     __end_of_send_lcd_cmd_dma:
 10809                           	opt callstack 0
 10810                           
 10811 ;; *************** function _wait_lcd_done *****************
 10812 ;; Defined at:
 10813 ;;		line 444 in file "eadog.c"
 10814 ;; Parameters:    Size  Location     Type
 10815 ;;		None
 10816 ;; Auto vars:     Size  Location     Type
 10817 ;;		None
 10818 ;; Return value:  Size  Location     Type
 10819 ;;                  1  [STACK] void 
 10820 ;; Registers used:
 10821 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 10822 ;; Tracked objects:
 10823 ;;		On entry : 0/1
 10824 ;;		On exit  : 3F/0
 10825 ;;		Unchanged: 0/0
 10826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10831 ;;Total ram usage:        0 bytes
 10832 ;; Hardware stack levels used:    1
 10833 ;; Hardware stack levels required when called:   16
 10834 ;; This function calls:
 10835 ;;		_wdtdelay
 10836 ;; This function is called by:
 10837 ;;		_main
 10838 ;;		_send_lcd_cmd_dma
 10839 ;;		_eaDogM_WriteStringAtPos
 10840 ;;		_update_lcd
 10841 ;;		_vterm_dump
 10842 ;; This function uses a reentrant model
 10843 ;;
 10844                           
 10845                           	psect	text39
 10846  01C21E                     __ptext39:
 10847                           	opt callstack 0
 10848  01C21E                     _wait_lcd_done:
 10849                           	opt callstack 14
 10850                           
 10851                           ;eadog.c: 446:  while (spi_link.LCD_DATA);
 10852                           
 10853                           ; BSR set to: 0
 10854                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10855                           ;incstack = 0
 10856  01C21E  0101               	movlb	1	; () banked
 10857  01C220  B7CD               	btfsc	_spi_link& (0+255),3,b	;volatile
 10858  01C222  D7FD               	goto	_wait_lcd_done
 10859                           
 10860                           ; BSR set to: 1
 10861                           ;eadog.c: 447:  wdtdelay(50);
 10862  01C224  0E32               	movlw	50
 10863  01C226  6EE6               	movwf	postinc1,c
 10864  01C228  0E00               	movlw	0
 10865  01C22A  6EE6               	movwf	postinc1,c
 10866  01C22C  0E00               	movlw	0
 10867  01C22E  6EE6               	movwf	postinc1,c
 10868  01C230  0E00               	movlw	0
 10869  01C232  6EE6               	movwf	postinc1,c
 10870  01C234  EC43  F0DA         	call	_wdtdelay	;wreg free
 10871                           
 10872                           ; BSR set to: 0
 10873                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 10874  01C238  0012               	return		;funcret
 10875  01C23A                     __end_of_wait_lcd_done:
 10876                           	opt callstack 0
 10877                           
 10878 ;; *************** function _wdtdelay *****************
 10879 ;; Defined at:
 10880 ;;		line 23 in file "eadog.c"
 10881 ;; Parameters:    Size  Location     Type
 10882 ;;  delay           4  [STACK] const unsigned long 
 10883 ;; Auto vars:     Size  Location     Type
 10884 ;;		None
 10885 ;; Return value:  Size  Location     Type
 10886 ;;                  1  [STACK] void 
 10887 ;; Registers used:
 10888 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 10889 ;; Tracked objects:
 10890 ;;		On entry : 2/3D
 10891 ;;		On exit  : 3F/0
 10892 ;;		Unchanged: 0/0
 10893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10898 ;;Total ram usage:        0 bytes
 10899 ;; Hardware stack levels used:    1
 10900 ;; Hardware stack levels required when called:   15
 10901 ;; This function calls:
 10902 ;;		Nothing
 10903 ;; This function is called by:
 10904 ;;		_init_display
 10905 ;;		_send_lcd_data
 10906 ;;		_send_lcd_cmd
 10907 ;;		_send_lcd_cmd_long
 10908 ;;		_eaDogM_WriteStringAtPos
 10909 ;;		_wait_lcd_done
 10910 ;; This function uses a reentrant model
 10911 ;;
 10912                           
 10913                           	psect	text40
 10914  01B486                     __ptext40:
 10915                           	opt callstack 0
 10916  01B486                     _wdtdelay:
 10917                           	opt callstack 14
 10918                           
 10919                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 10920                           
 10921                           ; BSR set to: 0
 10922                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10923                           ;incstack = 0
 10924  01B486  0100               	movlb	0	; () banked
 10925  01B488  6B78               	clrf	wdtdelay@dcount& (0+255),b
 10926  01B48A  6B79               	clrf	(wdtdelay@dcount+1)& (0+255),b
 10927  01B48C  6B7A               	clrf	(wdtdelay@dcount+2)& (0+255),b
 10928  01B48E  6B7B               	clrf	(wdtdelay@dcount+3)& (0+255),b
 10929  01B490                     l1473:
 10930                           
 10931                           ; BSR set to: 0
 10932                           ;eadog.c: 28:   __nop();
 10933  01B490  F000               	nop	
 10934  01B492  0004               	clrwdt		;# 
 10935                           
 10936                           ;eadog.c: 30:  };
 10937  01B494  0E01               	movlw	1
 10938  01B496  0100               	movlb	0	; () banked
 10939  01B498  2778               	addwf	wdtdelay@dcount& (0+255),f,b
 10940  01B49A  0E00               	movlw	0
 10941  01B49C  2379               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 10942  01B49E  237A               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 10943  01B4A0  237B               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 10944                           
 10945                           ; BSR set to: 0
 10946                           ;stkvar	_delay @ sp[(0)+-4]
 10947  01B4A2  0EFC               	movlw	-4
 10948  01B4A4  006F FF8C  F001    	movff	plusw1,btemp
 10949  01B4AA  5178               	movf	wdtdelay@dcount& (0+255),w,b
 10950  01B4AC  5C01               	subwf	btemp^0,w,c
 10951  01B4AE  0EFD               	movlw	-3
 10952  01B4B0  006F FF8C  F001    	movff	plusw1,btemp
 10953  01B4B6  5179               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 10954  01B4B8  5801               	subwfb	btemp^0,w,c
 10955  01B4BA  0EFE               	movlw	-2
 10956  01B4BC  006F FF8C  F001    	movff	plusw1,btemp
 10957  01B4C2  517A               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 10958  01B4C4  5801               	subwfb	btemp^0,w,c
 10959  01B4C6  0EFF               	movlw	-1
 10960  01B4C8  006F FF8C  F001    	movff	plusw1,btemp
 10961  01B4CE  517B               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 10962  01B4D0  5801               	subwfb	btemp^0,w,c
 10963  01B4D2  B0D8               	btfsc	status,0,c
 10964  01B4D4  D7DD               	goto	l1473
 10965                           
 10966                           ; BSR set to: 0
 10967                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 10968  01B4D6  52E5               	movf	postdec1,f,c
 10969  01B4D8  52E5               	movf	postdec1,f,c
 10970  01B4DA  52E5               	movf	postdec1,f,c
 10971  01B4DC  52E5               	movf	postdec1,f,c
 10972  01B4DE  0012               	return		;funcret
 10973  01B4E0                     __end_of_wdtdelay:
 10974                           	opt callstack 0
 10975                           
 10976 ;; *************** function _send_lcd_data_dma *****************
 10977 ;; Defined at:
 10978 ;;		line 182 in file "eadog.c"
 10979 ;; Parameters:    Size  Location     Type
 10980 ;;  strPtr          1  [STACK] const unsigned char 
 10981 ;; Auto vars:     Size  Location     Type
 10982 ;;		None
 10983 ;; Return value:  Size  Location     Type
 10984 ;;                  1  [STACK] void 
 10985 ;; Registers used:
 10986 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10987 ;; Tracked objects:
 10988 ;;		On entry : 0/0
 10989 ;;		On exit  : 3F/3B
 10990 ;;		Unchanged: 0/0
 10991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10996 ;;Total ram usage:        0 bytes
 10997 ;; Hardware stack levels used:    1
 10998 ;; Hardware stack levels required when called:   24
 10999 ;; This function calls:
 11000 ;;		_printf
 11001 ;;		_ringBufS_flush
 11002 ;;		_start_lcd
 11003 ;;		_wait_lcd_set
 11004 ;; This function is called by:
 11005 ;;		_send_lcd_cmd_dma
 11006 ;;		_eaDogM_WriteStringAtPos
 11007 ;; This function uses a reentrant model
 11008 ;;
 11009                           
 11010                           	psect	text41
 11011  01B62C                     __ptext41:
 11012                           	opt callstack 0
 11013  01B62C                     _send_lcd_data_dma:
 11014                           	opt callstack 4
 11015                           
 11016                           ;eadog.c: 182: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 183: {;eadog.c: 184
      +                          :  wait_lcd_set();
 11017                           
 11018                           ; BSR set to: 0
 11019                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11020                           ;incstack = 0
 11021  01B62C  ECFC  F0E1         	call	_wait_lcd_set	;wreg free
 11022                           
 11023                           ; BSR set to: 1
 11024                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 11025  01B630  0E00               	movlw	0
 11026  01B632  6EE6               	movwf	postinc1,c
 11027  01B634  0060  F74F  FFE6   	movff	_spi_link+6,postinc1
 11028  01B63A  0060  F753  FFE6   	movff	_spi_link+7,postinc1
 11029  01B640  EC37  F0D6         	call	_ringBufS_flush	;wreg free
 11030  01B644  94BC               	bcf	188,2,c	;volatile
 11031                           
 11032                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 11033  01B646  013B               	movlb	59	; () banked
 11034  01B648  9FFC               	bcf	252,7,b	;volatile
 11035                           
 11036                           ; BSR set to: 59
 11037                           ;eadog.c: 189:  DMA1SSZ = 1;
 11038  01B64A  0E00               	movlw	0
 11039  01B64C  6FF8               	movwf	248,b	;volatile
 11040  01B64E  0E01               	movlw	1
 11041  01B650  6FF7               	movwf	247,b	;volatile
 11042                           
 11043                           ; BSR set to: 59
 11044                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 11045  01B652  8FFC               	bsf	252,7,b	;volatile
 11046                           
 11047                           ; BSR set to: 59
 11048                           ;eadog.c: 191:  printf("%c", strPtr);
 11049                           ;stkvar	_strPtr @ sp[(0)+-1]
 11050  01B654  0EFF               	movlw	-1
 11051  01B656  50E3               	movf	plusw1,w,c
 11052  01B658  6EE6               	movwf	postinc1,c
 11053  01B65A  0E00               	movlw	0
 11054  01B65C  6EE6               	movwf	postinc1,c
 11055  01B65E  0EF9               	movlw	low STR_44
 11056  01B660  6EE6               	movwf	postinc1,c
 11057  01B662  0EFF               	movlw	high STR_44
 11058  01B664  6EE6               	movwf	postinc1,c
 11059  01B666  0E04               	movlw	4
 11060  01B668  6EE6               	movwf	postinc1,c
 11061  01B66A  EC84  F0D9         	call	_printf	;wreg free
 11062                           
 11063                           ; BSR set to: 0
 11064                           ;eadog.c: 192:  start_lcd();
 11065  01B66E  ECFF  F0E1         	call	_start_lcd	;wreg free
 11066                           
 11067                           ; BSR set to: 59
 11068                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 11069  01B672  52E5               	movf	postdec1,f,c
 11070  01B674  0012               	return		;funcret
 11071  01B676                     __end_of_send_lcd_data_dma:
 11072                           	opt callstack 0
 11073                           
 11074 ;; *************** function _eaDogM_WriteString *****************
 11075 ;; Defined at:
 11076 ;;		line 151 in file "eadog.c"
 11077 ;; Parameters:    Size  Location     Type
 11078 ;;  strPtr          2  [STACK] PTR unsigned char 
 11079 ;;		 -> D.lcd(480), D(482), V(191), 
 11080 ;; Auto vars:     Size  Location     Type
 11081 ;;		None
 11082 ;; Return value:  Size  Location     Type
 11083 ;;                  1  [STACK] void 
 11084 ;; Registers used:
 11085 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11086 ;; Tracked objects:
 11087 ;;		On entry : 3F/0
 11088 ;;		On exit  : 3F/3B
 11089 ;;		Unchanged: 0/0
 11090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11095 ;;Total ram usage:        0 bytes
 11096 ;; Hardware stack levels used:    1
 11097 ;; Hardware stack levels required when called:   24
 11098 ;; This function calls:
 11099 ;;		_printf
 11100 ;;		_ringBufS_flush
 11101 ;;		_start_lcd
 11102 ;;		_strlen
 11103 ;;		_wait_lcd_set
 11104 ;; This function is called by:
 11105 ;;		_eaDogM_WriteStringAtPos
 11106 ;; This function uses a reentrant model
 11107 ;;
 11108                           
 11109                           	psect	text42
 11110  01A9EC                     __ptext42:
 11111                           	opt callstack 0
 11112  01A9EC                     _eaDogM_WriteString:
 11113                           	opt callstack 4
 11114                           
 11115                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 11116                           
 11117                           ; BSR set to: 59
 11118                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11119                           ;incstack = 0
 11120  01A9EC  ECFC  F0E1         	call	_wait_lcd_set	;wreg free
 11121                           
 11122                           ; BSR set to: 1
 11123                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 11124  01A9F0  0E00               	movlw	0
 11125  01A9F2  6EE6               	movwf	postinc1,c
 11126  01A9F4  0060  F74F  FFE6   	movff	_spi_link+6,postinc1
 11127  01A9FA  0060  F753  FFE6   	movff	_spi_link+7,postinc1
 11128  01AA00  EC37  F0D6         	call	_ringBufS_flush	;wreg free
 11129  01AA04  94BC               	bcf	188,2,c	;volatile
 11130                           
 11131                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 11132                           ;stkvar	_strPtr @ sp[(0)+-2]
 11133  01AA06  0EFE               	movlw	-2
 11134  01AA08  006F FF8F FFE6     	movff	plusw1,postinc1
 11135  01AA0E  006F FF8F FFE6     	movff	plusw1,postinc1
 11136  01AA14  EC9A  F0D5         	call	_strlen	;wreg free
 11137  01AA18  5002               	movf	(btemp+1)^0,w,c
 11138  01AA1A  E104               	bnz	u12380
 11139  01AA1C  0E41               	movlw	65
 11140  01AA1E  5C01               	subwf	btemp^0,w,c
 11141  01AA20  A0D8               	btfss	status,0,c
 11142  01AA22  D010               	goto	l12886
 11143  01AA24                     u12380:
 11144                           
 11145                           ;stkvar	_strPtr @ sp[(0)+-2]
 11146  01AA24  0EFE               	movlw	-2
 11147  01AA26  006F FF8C  F00B    	movff	plusw1,btemp+10
 11148  01AA2C  0EFF               	movlw	-1
 11149  01AA2E  006F FF8C  F00C    	movff	plusw1,btemp+11
 11150  01AA34  0E40               	movlw	64
 11151  01AA36  240B               	addwf	(btemp+10)^0,w,c
 11152  01AA38  6ED9               	movwf	fsr2l,c
 11153  01AA3A  0E00               	movlw	0
 11154  01AA3C  200C               	addwfc	(btemp+11)^0,w,c
 11155  01AA3E  6EDA               	movwf	fsr2h,c
 11156  01AA40  0E00               	movlw	0
 11157  01AA42  6EDF               	movwf	indf2,c
 11158  01AA44                     l12886:
 11159                           
 11160                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 11161  01AA44  013B               	movlb	59	; () banked
 11162  01AA46  9FFC               	bcf	252,7,b	;volatile
 11163                           
 11164                           ; BSR set to: 59
 11165                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 11166                           ;stkvar	_strPtr @ sp[(0)+-2]
 11167  01AA48  0EFE               	movlw	-2
 11168  01AA4A  006F FF8F FFE6     	movff	plusw1,postinc1
 11169  01AA50  006F FF8F FFE6     	movff	plusw1,postinc1
 11170  01AA56  EC9A  F0D5         	call	_strlen	;wreg free
 11171  01AA5A  0060  F007  FBF7   	movff	btemp,15351	;volatile
 11172  01AA60  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
 11173                           
 11174                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 11175  01AA66  013B               	movlb	59	; () banked
 11176  01AA68  8FFC               	bsf	252,7,b	;volatile
 11177                           
 11178                           ; BSR set to: 59
 11179                           ;eadog.c: 161:  printf("%s", strPtr);
 11180                           ;stkvar	_strPtr @ sp[(0)+-2]
 11181  01AA6A  0EFE               	movlw	-2
 11182  01AA6C  006F FF8F FFE6     	movff	plusw1,postinc1
 11183  01AA72  006F FF8F FFE6     	movff	plusw1,postinc1
 11184  01AA78  0EFC               	movlw	low STR_43
 11185  01AA7A  6EE6               	movwf	postinc1,c
 11186  01AA7C  0EFF               	movlw	high STR_43
 11187  01AA7E  6EE6               	movwf	postinc1,c
 11188  01AA80  0E04               	movlw	4
 11189  01AA82  6EE6               	movwf	postinc1,c
 11190  01AA84  EC84  F0D9         	call	_printf	;wreg free
 11191                           
 11192                           ; BSR set to: 0
 11193                           ;eadog.c: 162:  start_lcd();
 11194  01AA88  ECFF  F0E1         	call	_start_lcd	;wreg free
 11195                           
 11196                           ; BSR set to: 59
 11197                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 11198  01AA8C  52E5               	movf	postdec1,f,c
 11199  01AA8E  52E5               	movf	postdec1,f,c
 11200  01AA90  0012               	return		;funcret
 11201  01AA92                     __end_of_eaDogM_WriteString:
 11202                           	opt callstack 0
 11203                           
 11204 ;; *************** function _wait_lcd_set *****************
 11205 ;; Defined at:
 11206 ;;		line 434 in file "eadog.c"
 11207 ;; Parameters:    Size  Location     Type
 11208 ;;		None
 11209 ;; Auto vars:     Size  Location     Type
 11210 ;;		None
 11211 ;; Return value:  Size  Location     Type
 11212 ;;                  1  [STACK] void 
 11213 ;; Registers used:
 11214 ;;		None
 11215 ;; Tracked objects:
 11216 ;;		On entry : 0/0
 11217 ;;		On exit  : 3F/1
 11218 ;;		Unchanged: 0/0
 11219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11224 ;;Total ram usage:        0 bytes
 11225 ;; Hardware stack levels used:    1
 11226 ;; Hardware stack levels required when called:   15
 11227 ;; This function calls:
 11228 ;;		Nothing
 11229 ;; This function is called by:
 11230 ;;		_eaDogM_WriteString
 11231 ;;		_send_lcd_data_dma
 11232 ;; This function uses a reentrant model
 11233 ;;
 11234                           
 11235                           	psect	text43
 11236  01C3F8                     __ptext43:
 11237                           	opt callstack 0
 11238  01C3F8                     _wait_lcd_set:
 11239                           	opt callstack 12
 11240                           
 11241                           ;eadog.c: 436:  spi_link.LCD_DATA = 1;
 11242                           
 11243                           ; BSR set to: 59
 11244                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11245                           ;incstack = 0
 11246  01C3F8  0101               	movlb	1	; () banked
 11247  01C3FA  87CD               	bsf	_spi_link& (0+255),3,b	;volatile
 11248                           
 11249                           ; BSR set to: 1
 11250                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 11251  01C3FC  0012               	return		;funcret
 11252  01C3FE                     __end_of_wait_lcd_set:
 11253                           	opt callstack 0
 11254                           
 11255 ;; *************** function _start_lcd *****************
 11256 ;; Defined at:
 11257 ;;		line 429 in file "eadog.c"
 11258 ;; Parameters:    Size  Location     Type
 11259 ;;		None
 11260 ;; Auto vars:     Size  Location     Type
 11261 ;;		None
 11262 ;; Return value:  Size  Location     Type
 11263 ;;                  1  [STACK] void 
 11264 ;; Registers used:
 11265 ;;		None
 11266 ;; Tracked objects:
 11267 ;;		On entry : 3F/0
 11268 ;;		On exit  : 3F/3B
 11269 ;;		Unchanged: 0/0
 11270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11275 ;;Total ram usage:        0 bytes
 11276 ;; Hardware stack levels used:    1
 11277 ;; Hardware stack levels required when called:   15
 11278 ;; This function calls:
 11279 ;;		Nothing
 11280 ;; This function is called by:
 11281 ;;		_eaDogM_WriteString
 11282 ;;		_send_lcd_data_dma
 11283 ;; This function uses a reentrant model
 11284 ;;
 11285                           
 11286                           	psect	text44
 11287  01C3FE                     __ptext44:
 11288                           	opt callstack 0
 11289  01C3FE                     _start_lcd:
 11290                           	opt callstack 12
 11291                           
 11292                           ;eadog.c: 431:  DMA1CON0bits.DMA1SIRQEN = 1;
 11293                           
 11294                           ; BSR set to: 1
 11295                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11296                           ;incstack = 0
 11297  01C3FE  013B               	movlb	59	; () banked
 11298  01C400  8DFC               	bsf	252,6,b	;volatile
 11299                           
 11300                           ; BSR set to: 59
 11301                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 11302  01C402  0012               	return		;funcret
 11303  01C404                     __end_of_start_lcd:
 11304                           	opt callstack 0
 11305                           
 11306 ;; *************** function _ringBufS_flush *****************
 11307 ;; Defined at:
 11308 ;;		line 76 in file "ringbufs.c"
 11309 ;; Parameters:    Size  Location     Type
 11310 ;;  _this           2  [STACK] PTR struct ringBufS_t
 11311 ;;		 -> ring_buf1(67), 
 11312 ;;  clearBuffer     1  [STACK] const char 
 11313 ;; Auto vars:     Size  Location     Type
 11314 ;;		None
 11315 ;; Return value:  Size  Location     Type
 11316 ;;                  1  [STACK] void 
 11317 ;; Registers used:
 11318 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 11319 ;; Tracked objects:
 11320 ;;		On entry : 3F/1
 11321 ;;		On exit  : 0/0
 11322 ;;		Unchanged: 0/0
 11323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11328 ;;Total ram usage:        0 bytes
 11329 ;; Hardware stack levels used:    1
 11330 ;; Hardware stack levels required when called:   16
 11331 ;; This function calls:
 11332 ;;		_memset
 11333 ;; This function is called by:
 11334 ;;		_eaDogM_WriteString
 11335 ;;		_send_lcd_data_dma
 11336 ;; This function uses a reentrant model
 11337 ;;
 11338                           
 11339                           	psect	text45
 11340  01AC6E                     __ptext45:
 11341                           	opt callstack 0
 11342  01AC6E                     _ringBufS_flush:
 11343                           	opt callstack 11
 11344                           
 11345                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 11346                           ;stkvar	__this @ sp[(0)+-2]
 11347                           
 11348                           ; BSR set to: 59
 11349                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11350                           ;incstack = 0
 11351  01AC6E  0EFE               	movlw	-2
 11352  01AC70  006F FF8C  F00B    	movff	plusw1,btemp+10
 11353  01AC76  0EFF               	movlw	-1
 11354  01AC78  006F FF8C  F00C    	movff	plusw1,btemp+11
 11355  01AC7E  0E42               	movlw	66
 11356  01AC80  240B               	addwf	(btemp+10)^0,w,c
 11357  01AC82  6ED9               	movwf	fsr2l,c
 11358  01AC84  0E00               	movlw	0
 11359  01AC86  200C               	addwfc	(btemp+11)^0,w,c
 11360  01AC88  6EDA               	movwf	fsr2h,c
 11361  01AC8A  0E00               	movlw	0
 11362  01AC8C  6EDF               	movwf	indf2,c
 11363                           
 11364                           ;ringbufs.c: 79:  _this->head = 0;
 11365                           ;stkvar	__this @ sp[(0)+-2]
 11366  01AC8E  0EFE               	movlw	-2
 11367  01AC90  006F FF8C  F00B    	movff	plusw1,btemp+10
 11368  01AC96  0EFF               	movlw	-1
 11369  01AC98  006F FF8C  F00C    	movff	plusw1,btemp+11
 11370  01AC9E  0E40               	movlw	64
 11371  01ACA0  240B               	addwf	(btemp+10)^0,w,c
 11372  01ACA2  6ED9               	movwf	fsr2l,c
 11373  01ACA4  0E00               	movlw	0
 11374  01ACA6  200C               	addwfc	(btemp+11)^0,w,c
 11375  01ACA8  6EDA               	movwf	fsr2h,c
 11376  01ACAA  0E00               	movlw	0
 11377  01ACAC  6EDF               	movwf	indf2,c
 11378                           
 11379                           ;ringbufs.c: 80:  _this->tail = 0;
 11380                           ;stkvar	__this @ sp[(0)+-2]
 11381  01ACAE  0EFE               	movlw	-2
 11382  01ACB0  006F FF8C  F00B    	movff	plusw1,btemp+10
 11383  01ACB6  0EFF               	movlw	-1
 11384  01ACB8  006F FF8C  F00C    	movff	plusw1,btemp+11
 11385  01ACBE  0E41               	movlw	65
 11386  01ACC0  240B               	addwf	(btemp+10)^0,w,c
 11387  01ACC2  6ED9               	movwf	fsr2l,c
 11388  01ACC4  0E00               	movlw	0
 11389  01ACC6  200C               	addwfc	(btemp+11)^0,w,c
 11390  01ACC8  6EDA               	movwf	fsr2h,c
 11391  01ACCA  0E00               	movlw	0
 11392  01ACCC  6EDF               	movwf	indf2,c
 11393                           
 11394                           ;ringbufs.c: 81:  if (clearBuffer) {
 11395                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 11396  01ACCE  0EFD               	movlw	-3
 11397  01ACD0  50E3               	movf	plusw1,w,c
 11398  01ACD2  B4D8               	btfsc	status,2,c
 11399  01ACD4  D011               	goto	l1602
 11400                           
 11401                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 11402  01ACD6  0E40               	movlw	64
 11403  01ACD8  6EE6               	movwf	postinc1,c
 11404  01ACDA  0E00               	movlw	0
 11405  01ACDC  6EE6               	movwf	postinc1,c
 11406  01ACDE  0E00               	movlw	0
 11407  01ACE0  6EE6               	movwf	postinc1,c
 11408  01ACE2  0E00               	movlw	0
 11409  01ACE4  6EE6               	movwf	postinc1,c
 11410                           
 11411                           ;stkvar	__this @ sp[(-4)+-2]
 11412  01ACE6  0EFA               	movlw	-6
 11413  01ACE8  006F FF8F FFE6     	movff	plusw1,postinc1
 11414  01ACEE  006F FF8F FFE6     	movff	plusw1,postinc1
 11415  01ACF4  EC2C  F0B7         	call	_memset	;wreg free
 11416  01ACF8                     l1602:
 11417                           
 11418                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 11419  01ACF8  52E5               	movf	postdec1,f,c
 11420  01ACFA  52E5               	movf	postdec1,f,c
 11421  01ACFC  52E5               	movf	postdec1,f,c
 11422  01ACFE  0012               	return		;funcret
 11423  01AD00                     __end_of_ringBufS_flush:
 11424                           	opt callstack 0
 11425                           
 11426 ;; *************** function _memset *****************
 11427 ;; Defined at:
 11428 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 11429 ;; Parameters:    Size  Location     Type
 11430 ;;  dest            2  [STACK] PTR void 
 11431 ;;		 -> ring_buf2(67), ring_buf1(67), 
 11432 ;;  c               2  [STACK] int 
 11433 ;;  n               2  [STACK] unsigned int 
 11434 ;; Auto vars:     Size  Location     Type
 11435 ;;  s               2  [STACK] PTR unsigned char 
 11436 ;;		 -> ring_buf2(67), ring_buf1(67), 
 11437 ;;  k               2  [STACK] unsigned int 
 11438 ;; Return value:  Size  Location     Type
 11439 ;;                  2  [STACK] PTR void 
 11440 ;; Registers used:
 11441 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 11442 ;; Tracked objects:
 11443 ;;		On entry : 0/1
 11444 ;;		On exit  : 0/0
 11445 ;;		Unchanged: 0/0
 11446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11451 ;;Total ram usage:        0 bytes
 11452 ;; Hardware stack levels used:    1
 11453 ;; Hardware stack levels required when called:   15
 11454 ;; This function calls:
 11455 ;;		Nothing
 11456 ;; This function is called by:
 11457 ;;		_ringBufS_init
 11458 ;;		_ringBufS_flush
 11459 ;; This function uses a reentrant model
 11460 ;;
 11461                           
 11462                           	psect	text46
 11463  016E58                     __ptext46:
 11464                           	opt callstack 0
 11465  016E58                     _memset:
 11466                           	opt callstack 0
 11467                           
 11468                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11469  016E58  52E6               	movf	postinc1,f,c
 11470  016E5A  52E6               	movf	postinc1,f,c
 11471  016E5C  52E6               	movf	postinc1,f,c
 11472  016E5E  52E6               	movf	postinc1,f,c
 11473                           
 11474                           ;stkvar	_dest @ sp[(-4)+-2]
 11475                           
 11476                           ;incstack = 0
 11477  016E60  0EFA               	movlw	-6
 11478  016E62  006F FF8C  F00B    	movff	plusw1,btemp+10
 11479  016E68  0EFB               	movlw	-5
 11480  016E6A  006F FF8C  F00C    	movff	plusw1,btemp+11
 11481                           
 11482                           ;stkvar	_s @ sp[(-4)+0]
 11483  016E70  0EFD               	movlw	-3
 11484  016E72  0060  F033  FFE3   	movff	btemp+11,plusw1
 11485  016E78  0EFC               	movlw	-4
 11486  016E7A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11487                           
 11488                           ;stkvar	_n @ sp[(-4)+-6]
 11489  016E80  0EF6               	movlw	-10
 11490  016E82  006F FF8C  F001    	movff	plusw1,btemp
 11491  016E88  0EF7               	movlw	-9
 11492  016E8A  50E3               	movf	plusw1,w,c
 11493  016E8C  1001               	iorwf	btemp^0,w,c
 11494  016E8E  B4D8               	btfsc	status,2,c
 11495  016E90  D154               	goto	u10930
 11496                           
 11497                           ;stkvar	_c @ sp[(-4)+-4]
 11498                           ;stkvar	_s @ sp[(-4)+0]
 11499  016E92  0EFC               	movlw	-4
 11500  016E94  006F FF8F FFD9     	movff	plusw1,fsr2l
 11501  016E9A  0EFD               	movlw	-3
 11502  016E9C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11503  016EA2  0EF8               	movlw	-8
 11504  016EA4  006F FF8F FFDF     	movff	plusw1,indf2
 11505                           
 11506                           ;stkvar	_c @ sp[(-4)+-4]
 11507                           ;stkvar	_n @ sp[(-4)+-6]
 11508                           ;stkvar	_s @ sp[(-4)+0]
 11509  016EAA  0EFC               	movlw	-4
 11510  016EAC  006F FF8C  F00B    	movff	plusw1,btemp+10
 11511  016EB2  0EFD               	movlw	-3
 11512  016EB4  006F FF8C  F00C    	movff	plusw1,btemp+11
 11513  016EBA  0EF6               	movlw	-10
 11514  016EBC  50E3               	movf	plusw1,w,c
 11515  016EBE  260B               	addwf	(btemp+10)^0,f,c
 11516  016EC0  0EF7               	movlw	-9
 11517  016EC2  50E3               	movf	plusw1,w,c
 11518  016EC4  220C               	addwfc	(btemp+11)^0,f,c
 11519  016EC6  0EFF               	movlw	255
 11520  016EC8  240B               	addwf	(btemp+10)^0,w,c
 11521  016ECA  6ED9               	movwf	fsr2l,c
 11522  016ECC  0EFF               	movlw	255
 11523  016ECE  200C               	addwfc	(btemp+11)^0,w,c
 11524  016ED0  6EDA               	movwf	fsr2h,c
 11525  016ED2  0EF8               	movlw	-8
 11526  016ED4  006F FF8F FFDF     	movff	plusw1,indf2
 11527                           
 11528                           ;stkvar	_n @ sp[(-4)+-6]
 11529  016EDA  0EF7               	movlw	-9
 11530  016EDC  50E3               	movf	plusw1,w,c
 11531  016EDE  E108               	bnz	l12038
 11532  016EE0  0EF6               	movlw	-10
 11533  016EE2  006F FF8C  F001    	movff	plusw1,btemp
 11534  016EE8  0E03               	movlw	3
 11535  016EEA  5E01               	subwf	btemp^0,f,c
 11536  016EEC  A0D8               	btfss	status,0,c
 11537  016EEE  D125               	goto	u10930
 11538  016EF0                     l12038:
 11539                           
 11540                           ;stkvar	_c @ sp[(-4)+-4]
 11541                           ;stkvar	_s @ sp[(-4)+0]
 11542  016EF0  0EFC               	movlw	-4
 11543  016EF2  006F FF8C  F00B    	movff	plusw1,btemp+10
 11544  016EF8  0EFD               	movlw	-3
 11545  016EFA  006F FF8C  F00C    	movff	plusw1,btemp+11
 11546  016F00  0E01               	movlw	1
 11547  016F02  240B               	addwf	(btemp+10)^0,w,c
 11548  016F04  6ED9               	movwf	fsr2l,c
 11549  016F06  0E00               	movlw	0
 11550  016F08  200C               	addwfc	(btemp+11)^0,w,c
 11551  016F0A  6EDA               	movwf	fsr2h,c
 11552  016F0C  0EF8               	movlw	-8
 11553  016F0E  006F FF8F FFDF     	movff	plusw1,indf2
 11554                           
 11555                           ;stkvar	_c @ sp[(-4)+-4]
 11556                           ;stkvar	_s @ sp[(-4)+0]
 11557  016F14  0EFC               	movlw	-4
 11558  016F16  006F FF8C  F00B    	movff	plusw1,btemp+10
 11559  016F1C  0EFD               	movlw	-3
 11560  016F1E  006F FF8C  F00C    	movff	plusw1,btemp+11
 11561  016F24  0E02               	movlw	2
 11562  016F26  240B               	addwf	(btemp+10)^0,w,c
 11563  016F28  6ED9               	movwf	fsr2l,c
 11564  016F2A  0E00               	movlw	0
 11565  016F2C  200C               	addwfc	(btemp+11)^0,w,c
 11566  016F2E  6EDA               	movwf	fsr2h,c
 11567  016F30  0EF8               	movlw	-8
 11568  016F32  006F FF8F FFDF     	movff	plusw1,indf2
 11569                           
 11570                           ;stkvar	_c @ sp[(-4)+-4]
 11571                           ;stkvar	_n @ sp[(-4)+-6]
 11572                           ;stkvar	_s @ sp[(-4)+0]
 11573  016F38  0EFC               	movlw	-4
 11574  016F3A  006F FF8C  F00B    	movff	plusw1,btemp+10
 11575  016F40  0EFD               	movlw	-3
 11576  016F42  006F FF8C  F00C    	movff	plusw1,btemp+11
 11577  016F48  0EF6               	movlw	-10
 11578  016F4A  50E3               	movf	plusw1,w,c
 11579  016F4C  260B               	addwf	(btemp+10)^0,f,c
 11580  016F4E  0EF7               	movlw	-9
 11581  016F50  50E3               	movf	plusw1,w,c
 11582  016F52  220C               	addwfc	(btemp+11)^0,f,c
 11583  016F54  0EFE               	movlw	254
 11584  016F56  240B               	addwf	(btemp+10)^0,w,c
 11585  016F58  6ED9               	movwf	fsr2l,c
 11586  016F5A  0EFF               	movlw	255
 11587  016F5C  200C               	addwfc	(btemp+11)^0,w,c
 11588  016F5E  6EDA               	movwf	fsr2h,c
 11589  016F60  0EF8               	movlw	-8
 11590  016F62  006F FF8F FFDF     	movff	plusw1,indf2
 11591                           
 11592                           ;stkvar	_c @ sp[(-4)+-4]
 11593                           ;stkvar	_n @ sp[(-4)+-6]
 11594                           ;stkvar	_s @ sp[(-4)+0]
 11595  016F68  0EFC               	movlw	-4
 11596  016F6A  006F FF8C  F00B    	movff	plusw1,btemp+10
 11597  016F70  0EFD               	movlw	-3
 11598  016F72  006F FF8C  F00C    	movff	plusw1,btemp+11
 11599  016F78  0EF6               	movlw	-10
 11600  016F7A  50E3               	movf	plusw1,w,c
 11601  016F7C  260B               	addwf	(btemp+10)^0,f,c
 11602  016F7E  0EF7               	movlw	-9
 11603  016F80  50E3               	movf	plusw1,w,c
 11604  016F82  220C               	addwfc	(btemp+11)^0,f,c
 11605  016F84  0EFD               	movlw	253
 11606  016F86  240B               	addwf	(btemp+10)^0,w,c
 11607  016F88  6ED9               	movwf	fsr2l,c
 11608  016F8A  0EFF               	movlw	255
 11609  016F8C  200C               	addwfc	(btemp+11)^0,w,c
 11610  016F8E  6EDA               	movwf	fsr2h,c
 11611  016F90  0EF8               	movlw	-8
 11612  016F92  006F FF8F FFDF     	movff	plusw1,indf2
 11613                           
 11614                           ;stkvar	_n @ sp[(-4)+-6]
 11615  016F98  0EF7               	movlw	-9
 11616  016F9A  50E3               	movf	plusw1,w,c
 11617  016F9C  E108               	bnz	l12044
 11618  016F9E  0EF6               	movlw	-10
 11619  016FA0  006F FF8C  F001    	movff	plusw1,btemp
 11620  016FA6  0E07               	movlw	7
 11621  016FA8  5E01               	subwf	btemp^0,f,c
 11622  016FAA  A0D8               	btfss	status,0,c
 11623  016FAC  D0C6               	goto	u10930
 11624  016FAE                     l12044:
 11625                           
 11626                           ;stkvar	_c @ sp[(-4)+-4]
 11627                           ;stkvar	_s @ sp[(-4)+0]
 11628  016FAE  0EFC               	movlw	-4
 11629  016FB0  006F FF8C  F00B    	movff	plusw1,btemp+10
 11630  016FB6  0EFD               	movlw	-3
 11631  016FB8  006F FF8C  F00C    	movff	plusw1,btemp+11
 11632  016FBE  0E03               	movlw	3
 11633  016FC0  240B               	addwf	(btemp+10)^0,w,c
 11634  016FC2  6ED9               	movwf	fsr2l,c
 11635  016FC4  0E00               	movlw	0
 11636  016FC6  200C               	addwfc	(btemp+11)^0,w,c
 11637  016FC8  6EDA               	movwf	fsr2h,c
 11638  016FCA  0EF8               	movlw	-8
 11639  016FCC  006F FF8F FFDF     	movff	plusw1,indf2
 11640                           
 11641                           ;stkvar	_c @ sp[(-4)+-4]
 11642                           ;stkvar	_n @ sp[(-4)+-6]
 11643                           ;stkvar	_s @ sp[(-4)+0]
 11644  016FD2  0EFC               	movlw	-4
 11645  016FD4  006F FF8C  F00B    	movff	plusw1,btemp+10
 11646  016FDA  0EFD               	movlw	-3
 11647  016FDC  006F FF8C  F00C    	movff	plusw1,btemp+11
 11648  016FE2  0EF6               	movlw	-10
 11649  016FE4  50E3               	movf	plusw1,w,c
 11650  016FE6  260B               	addwf	(btemp+10)^0,f,c
 11651  016FE8  0EF7               	movlw	-9
 11652  016FEA  50E3               	movf	plusw1,w,c
 11653  016FEC  220C               	addwfc	(btemp+11)^0,f,c
 11654  016FEE  0EFC               	movlw	252
 11655  016FF0  240B               	addwf	(btemp+10)^0,w,c
 11656  016FF2  6ED9               	movwf	fsr2l,c
 11657  016FF4  0EFF               	movlw	255
 11658  016FF6  200C               	addwfc	(btemp+11)^0,w,c
 11659  016FF8  6EDA               	movwf	fsr2h,c
 11660  016FFA  0EF8               	movlw	-8
 11661  016FFC  006F FF8F FFDF     	movff	plusw1,indf2
 11662                           
 11663                           ;stkvar	_n @ sp[(-4)+-6]
 11664  017002  0EF7               	movlw	-9
 11665  017004  50E3               	movf	plusw1,w,c
 11666  017006  E108               	bnz	l12050
 11667  017008  0EF6               	movlw	-10
 11668  01700A  006F FF8C  F001    	movff	plusw1,btemp
 11669  017010  0E09               	movlw	9
 11670  017012  5E01               	subwf	btemp^0,f,c
 11671  017014  A0D8               	btfss	status,0,c
 11672  017016  D091               	goto	u10930
 11673  017018                     l12050:
 11674                           
 11675                           ;stkvar	_s @ sp[(-4)+0]
 11676  017018  0EFC               	movlw	-4
 11677  01701A  006F FF8C  F00B    	movff	plusw1,btemp+10
 11678  017020  1E0B               	comf	(btemp+10)^0,f,c
 11679  017022  0EFD               	movlw	-3
 11680  017024  006F FF8C  F00C    	movff	plusw1,btemp+11
 11681  01702A  1E0C               	comf	(btemp+11)^0,f,c
 11682  01702C  2A0B               	incf	(btemp+10)^0,f,c
 11683  01702E  B4D8               	btfsc	status,2,c
 11684  017030  2A0C               	incf	(btemp+11)^0,f,c
 11685  017032  0E03               	movlw	3
 11686  017034  160B               	andwf	(btemp+10)^0,f,c
 11687  017036  0E00               	movlw	0
 11688  017038  160C               	andwf	(btemp+11)^0,f,c
 11689                           
 11690                           ;stkvar	_k @ sp[(-4)+2]
 11691  01703A  0EFE               	movlw	-2
 11692  01703C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11693  017042  0EFF               	movlw	-1
 11694  017044  0060  F033  FFE3   	movff	btemp+11,plusw1
 11695                           
 11696                           ;stkvar	_k @ sp[(-4)+2]
 11697                           ;stkvar	_s @ sp[(-4)+0]
 11698  01704A  0EFC               	movlw	-4
 11699  01704C  50E3               	movf	plusw1,w,c
 11700  01704E  6E01               	movwf	btemp^0,c
 11701  017050  0EFE               	movlw	-2
 11702  017052  50E3               	movf	plusw1,w,c
 11703  017054  2601               	addwf	btemp^0,f,c
 11704  017056  0EFC               	movlw	-4
 11705  017058  0060  F007  FFE3   	movff	btemp,plusw1
 11706  01705E  0EFD               	movlw	-3
 11707  017060  50E3               	movf	plusw1,w,c
 11708  017062  6E01               	movwf	btemp^0,c
 11709  017064  0EFF               	movlw	-1
 11710  017066  50E3               	movf	plusw1,w,c
 11711  017068  2201               	addwfc	btemp^0,f,c
 11712  01706A  0EFD               	movlw	-3
 11713  01706C  0060  F007  FFE3   	movff	btemp,plusw1
 11714                           
 11715                           ;stkvar	_k @ sp[(-4)+2]
 11716                           ;stkvar	_n @ sp[(-4)+-6]
 11717  017072  0EF6               	movlw	-10
 11718  017074  50E3               	movf	plusw1,w,c
 11719  017076  6E01               	movwf	btemp^0,c
 11720  017078  0EFE               	movlw	-2
 11721  01707A  50E3               	movf	plusw1,w,c
 11722  01707C  5E01               	subwf	btemp^0,f,c
 11723  01707E  0EF6               	movlw	-10
 11724  017080  0060  F007  FFE3   	movff	btemp,plusw1
 11725  017086  0EF7               	movlw	-9
 11726  017088  50E3               	movf	plusw1,w,c
 11727  01708A  6E01               	movwf	btemp^0,c
 11728  01708C  0EFF               	movlw	-1
 11729  01708E  50E3               	movf	plusw1,w,c
 11730  017090  5A01               	subwfb	btemp^0,f,c
 11731  017092  0EF7               	movlw	-9
 11732  017094  0060  F007  FFE3   	movff	btemp,plusw1
 11733  01709A  0EFC               	movlw	252
 11734  01709C  6E0B               	movwf	(btemp+10)^0,c
 11735  01709E  0EFF               	movlw	255
 11736  0170A0  6E0C               	movwf	(btemp+11)^0,c
 11737                           
 11738                           ;stkvar	_n @ sp[(-4)+-6]
 11739  0170A2  0EF6               	movlw	-10
 11740  0170A4  006F FF8C  F001    	movff	plusw1,btemp
 11741  0170AA  500B               	movf	(btemp+10)^0,w,c
 11742  0170AC  1601               	andwf	btemp^0,f,c
 11743  0170AE  0EF6               	movlw	-10
 11744  0170B0  0060  F007  FFE3   	movff	btemp,plusw1
 11745  0170B6  0EF7               	movlw	-9
 11746  0170B8  006F FF8C  F001    	movff	plusw1,btemp
 11747  0170BE  500C               	movf	(btemp+11)^0,w,c
 11748  0170C0  1601               	andwf	btemp^0,f,c
 11749  0170C2  0EF7               	movlw	-9
 11750  0170C4  D02E               	goto	L10
 11751  0170C6                     l12058:
 11752                           
 11753                           ;stkvar	_c @ sp[(-4)+-4]
 11754                           ;stkvar	_s @ sp[(-4)+0]
 11755  0170C6  0EFC               	movlw	-4
 11756  0170C8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11757  0170CE  0EFD               	movlw	-3
 11758  0170D0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11759  0170D6  0EF8               	movlw	-8
 11760  0170D8  006F FF8F FFDF     	movff	plusw1,indf2
 11761                           
 11762                           ;stkvar	_n @ sp[(-4)+-6]
 11763  0170DE  0EF6               	movlw	-10
 11764  0170E0  006F FF8C  F001    	movff	plusw1,btemp
 11765  0170E6  0E01               	movlw	1
 11766  0170E8  5E01               	subwf	btemp^0,f,c
 11767  0170EA  0EF6               	movlw	-10
 11768  0170EC  0060  F007  FFE3   	movff	btemp,plusw1
 11769  0170F2  0EF7               	movlw	-9
 11770  0170F4  006F FF8C  F001    	movff	plusw1,btemp
 11771  0170FA  0E00               	movlw	0
 11772  0170FC  5A01               	subwfb	btemp^0,f,c
 11773  0170FE  0EF7               	movlw	-9
 11774  017100  0060  F007  FFE3   	movff	btemp,plusw1
 11775                           
 11776                           ;stkvar	_s @ sp[(-4)+0]
 11777  017106  0EFC               	movlw	-4
 11778  017108  50E3               	movf	plusw1,w,c
 11779  01710A  0F01               	addlw	1
 11780  01710C  6E01               	movwf	btemp^0,c
 11781  01710E  0EFC               	movlw	-4
 11782  017110  0060  F007  FFE3   	movff	btemp,plusw1
 11783  017116  6A01               	clrf	btemp^0,c
 11784  017118  0EFD               	movlw	-3
 11785  01711A  50E3               	movf	plusw1,w,c
 11786  01711C  2001               	addwfc	btemp^0,w,c
 11787  01711E  6E01               	movwf	btemp^0,c
 11788  017120  0EFD               	movlw	-3
 11789  017122                     L10:
 11790  017122  0060  F007  FFE3   	movff	btemp,plusw1
 11791                           
 11792                           ;stkvar	_n @ sp[(-4)+-6]
 11793  017128  0EF6               	movlw	-10
 11794  01712A  006F FF8C  F001    	movff	plusw1,btemp
 11795  017130  0EF7               	movlw	-9
 11796  017132  50E3               	movf	plusw1,w,c
 11797  017134  1001               	iorwf	btemp^0,w,c
 11798  017136  A4D8               	btfss	status,2,c
 11799  017138  D7C6               	goto	l12058
 11800  01713A                     u10930:
 11801                           
 11802                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 11803  01713A  0EF6               	movlw	246
 11804  01713C  26E1               	addwf	fsr1l,f,c
 11805  01713E  0EFF               	movlw	255
 11806  017140  22E2               	addwfc	fsr1h,f,c
 11807  017142  0012               	return		;funcret
 11808  017144                     __end_of_memset:
 11809                           	opt callstack 0
 11810                           
 11811 ;; *************** function _printf *****************
 11812 ;; Defined at:
 11813 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 11814 ;; Parameters:    Size  Location     Type
 11815 ;;  fmt             2  [STACK] PTR const unsigned char 
 11816 ;;		 -> STR_44(3), STR_43(3), 
 11817 ;; Auto vars:     Size  Location     Type
 11818 ;;  ap              2  [STACK] PTR void [1]
 11819 ;;		 -> ?_printf(2), ?_sprintf(2), 
 11820 ;;  ret             2    0        int 
 11821 ;; Return value:  Size  Location     Type
 11822 ;;                  2  [STACK] int 
 11823 ;; Registers used:
 11824 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11825 ;; Tracked objects:
 11826 ;;		On entry : 3F/3B
 11827 ;;		On exit  : 3F/0
 11828 ;;		Unchanged: 0/0
 11829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11834 ;;Total ram usage:        0 bytes
 11835 ;; Hardware stack levels used:    1
 11836 ;; Hardware stack levels required when called:   23
 11837 ;; This function calls:
 11838 ;;		_vfprintf
 11839 ;; This function is called by:
 11840 ;;		_eaDogM_WriteString
 11841 ;;		_send_lcd_data_dma
 11842 ;; This function uses a reentrant model
 11843 ;;
 11844                           
 11845                           	psect	text47
 11846  01B308                     __ptext47:
 11847                           	opt callstack 0
 11848  01B308                     _printf:
 11849                           	opt callstack 0
 11850                           
 11851                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11852  01B308  52E6               	movf	postinc1,f,c
 11853  01B30A  52E6               	movf	postinc1,f,c
 11854                           
 11855                           ;stkvar	?_printf @ sp[(-2)+-3]
 11856                           
 11857                           ;incstack = 0
 11858  01B30C  0EFB               	movlw	251
 11859  01B30E  24E1               	addwf	fsr1l,w,c
 11860  01B310  6E0B               	movwf	(btemp+10)^0,c
 11861  01B312  0EFF               	movlw	255
 11862  01B314  20E2               	addwfc	fsr1h,w,c
 11863  01B316  6E0C               	movwf	(btemp+11)^0,c
 11864                           
 11865                           ;stkvar	_ap @ sp[(-2)+0]
 11866  01B318  0EFF               	movlw	-1
 11867  01B31A  0060  F033  FFE3   	movff	btemp+11,plusw1
 11868  01B320  0EFE               	movlw	-2
 11869  01B322  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11870                           
 11871                           ;stkvar	_ap @ sp[(-2)+0]
 11872  01B328  0EFE               	movlw	254
 11873  01B32A  24E1               	addwf	fsr1l,w,c
 11874  01B32C  6E01               	movwf	btemp^0,c
 11875  01B32E  0EFF               	movlw	255
 11876  01B330  20E2               	addwfc	fsr1h,w,c
 11877  01B332  6E02               	movwf	(btemp+1)^0,c
 11878  01B334  0060  F007  FFE6   	movff	btemp,postinc1
 11879  01B33A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11880                           
 11881                           ;stkvar	_fmt @ sp[(-4)+-3]
 11882  01B340  0EF9               	movlw	-7
 11883  01B342  006F FF8F FFE6     	movff	plusw1,postinc1
 11884  01B348  006F FF8F FFE6     	movff	plusw1,postinc1
 11885  01B34E  0E00               	movlw	0
 11886  01B350  6EE6               	movwf	postinc1,c
 11887  01B352  0E00               	movlw	0
 11888  01B354  6EE6               	movwf	postinc1,c
 11889  01B356  ECF7  F0D3         	call	_vfprintf	;wreg free
 11890                           
 11891                           ; BSR set to: 0
 11892                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 11893  01B35A  52E5               	movf	postdec1,f,c
 11894  01B35C  52E5               	movf	postdec1,f,c
 11895  01B35E  52E5               	movf	postdec1,f,c
 11896  01B360  50E7               	movf	indf1,w,c
 11897  01B362  5EE1               	subwf	fsr1l,f,c
 11898  01B364  0E00               	movlw	0
 11899  01B366  5AE2               	subwfb	fsr1h,f,c
 11900  01B368  0012               	return		;funcret
 11901  01B36A                     __end_of_printf:
 11902                           	opt callstack 0
 11903                           
 11904 ;; *************** function _vfprintf *****************
 11905 ;; Defined at:
 11906 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11907 ;; Parameters:    Size  Location     Type
 11908 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11909 ;;		 -> f(6), NULL(0), 
 11910 ;;  fmt             2  [STACK] PTR const unsigned char 
 11911 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
 11912 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 11913 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 11914 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 11915 ;;		 -> STR_47(19), STR_44(3), STR_43(3), STR_42(22), 
 11916 ;;		 -> STR_41(22), STR_40(22), STR_39(23), STR_38(23), 
 11917 ;;		 -> STR_37(23), STR_36(23), STR_35(23), STR_34(23), 
 11918 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 11919 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 11920 ;;		 -> STR_25(22), STR_24(22), STR_23(22), STR_22(22), 
 11921 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 11922 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 11923 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 11924 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 11925 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 11926 ;;  ap              2  [STACK] PTR PTR void 
 11927 ;;		 -> ap(2), ap(2), 
 11928 ;; Auto vars:     Size  Location     Type
 11929 ;;  cfmt            2  [STACK] PTR unsigned char 
 11930 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
 11931 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 11932 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 11933 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 11934 ;;		 -> STR_47(19), STR_44(3), STR_43(3), STR_42(22), 
 11935 ;;		 -> STR_41(22), STR_40(22), STR_39(23), STR_38(23), 
 11936 ;;		 -> STR_37(23), STR_36(23), STR_35(23), STR_34(23), 
 11937 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 11938 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 11939 ;;		 -> STR_25(22), STR_24(22), STR_23(22), STR_22(22), 
 11940 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 11941 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 11942 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 11943 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 11944 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 11945 ;; Return value:  Size  Location     Type
 11946 ;;                  2  [STACK] int 
 11947 ;; Registers used:
 11948 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11949 ;; Tracked objects:
 11950 ;;		On entry : 0/1
 11951 ;;		On exit  : 3F/0
 11952 ;;		Unchanged: 0/0
 11953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11958 ;;Total ram usage:        0 bytes
 11959 ;; Hardware stack levels used:    1
 11960 ;; Hardware stack levels required when called:   22
 11961 ;; This function calls:
 11962 ;;		_vfpfcnvrt
 11963 ;; This function is called by:
 11964 ;;		_sprintf
 11965 ;;		_printf
 11966 ;; This function uses a reentrant model
 11967 ;;
 11968                           
 11969                           	psect	text48
 11970  01A7EE                     __ptext48:
 11971                           	opt callstack 0
 11972  01A7EE                     _vfprintf:
 11973                           	opt callstack 0
 11974                           
 11975                           ; BSR set to: 0
 11976                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11977  01A7EE  52E6               	movf	postinc1,f,c
 11978  01A7F0  52E6               	movf	postinc1,f,c
 11979                           
 11980                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 11981                           ;stkvar	_fmt @ sp[(-2)+-4]
 11982                           
 11983                           ;incstack = 0
 11984 ;; hardware stack exceeded
 11985  01A7F2  0EFA               	movlw	-6
 11986  01A7F4  006F FF8C  F00B    	movff	plusw1,btemp+10
 11987  01A7FA  0EFB               	movlw	-5
 11988  01A7FC  006F FF8C  F00C    	movff	plusw1,btemp+11
 11989                           
 11990                           ;stkvar	_cfmt @ sp[(-2)+0]
 11991  01A802  0EFF               	movlw	-1
 11992  01A804  0060  F033  FFE3   	movff	btemp+11,plusw1
 11993  01A80A  0EFE               	movlw	-2
 11994  01A80C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11995                           
 11996                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 11997  01A812  0100               	movlb	0	; () banked
 11998  01A814  6B9A               	clrf	_nout& (0+255),b
 11999  01A816  6B9B               	clrf	(_nout+1)& (0+255),b
 12000                           
 12001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 12002  01A818  D021               	goto	l12908
 12003  01A81A                     l12906:
 12004                           
 12005                           ; BSR set to: 0
 12006                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 12007                           ;stkvar	_ap @ sp[(-2)+-6]
 12008  01A81A  0EF8               	movlw	-8
 12009  01A81C  006F FF8F FFE6     	movff	plusw1,postinc1
 12010  01A822  006F FF8F FFE6     	movff	plusw1,postinc1
 12011                           
 12012                           ;stkvar	_cfmt @ sp[(-4)+0]
 12013  01A828  0EFC               	movlw	252
 12014  01A82A  24E1               	addwf	fsr1l,w,c
 12015  01A82C  6E01               	movwf	btemp^0,c
 12016  01A82E  0EFF               	movlw	255
 12017  01A830  20E2               	addwfc	fsr1h,w,c
 12018  01A832  6E02               	movwf	(btemp+1)^0,c
 12019  01A834  0060  F007  FFE6   	movff	btemp,postinc1
 12020  01A83A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12021                           
 12022                           ;stkvar	_fp @ sp[(-6)+-2]
 12023  01A840  0EF8               	movlw	-8
 12024  01A842  006F FF8F FFE6     	movff	plusw1,postinc1
 12025  01A848  006F FF8F FFE6     	movff	plusw1,postinc1
 12026  01A84E  ECD2  F091         	call	_vfpfcnvrt	;wreg free
 12027  01A852  5001               	movf	btemp^0,w,c
 12028  01A854  0100               	movlb	0	; () banked
 12029  01A856  279A               	addwf	_nout& (0+255),f,b
 12030  01A858  5002               	movf	(btemp+1)^0,w,c
 12031  01A85A  239B               	addwfc	(_nout+1)& (0+255),f,b
 12032  01A85C                     l12908:
 12033                           
 12034                           ; BSR set to: 0
 12035                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 12036                           ;stkvar	_cfmt @ sp[(-2)+0]
 12037  01A85C  50E1               	movf	fsr1l,w,c
 12038  01A85E  0FFE               	addlw	-2
 12039  01A860  6ED9               	movwf	fsr2l,c
 12040  01A862  50E2               	movf	fsr1h,w,c
 12041  01A864  6EDA               	movwf	fsr2h,c
 12042  01A866  0EFF               	movlw	255
 12043  01A868  22DA               	addwfc	fsr2h,f,c
 12044  01A86A  006F FF7B FFF6     	movff	postinc2,tblptrl
 12045  01A870  006F FF77 FFF7     	movff	postdec2,tblptrh
 12046  01A876                     	if	0	;tblptru may be non-zero
 12047  01A876                     	endif
 12048  01A876                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12049  01A876  0E00               	movlw	low (__mediumconst shr (0+16))
 12050  01A878  6EF8               	movwf	tblptru,c
 12051  01A87A                     	endif
 12052  01A87A  0008               	tblrd		*
 12053  01A87C  50F5               	movf	tablat,w,c
 12054  01A87E  0900               	iorlw	0
 12055  01A880  A4D8               	btfss	status,2,c
 12056  01A882  D7CB               	goto	l12906
 12057                           
 12058                           ; BSR set to: 0
 12059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 12060  01A884  0060  F268  F001   	movff	_nout,btemp
 12061  01A88A  0060  F26C  F002   	movff	_nout+1,btemp+1
 12062                           
 12063                           ; BSR set to: 0
 12064                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 12065  01A890  0EF8               	movlw	248
 12066  01A892  26E1               	addwf	fsr1l,f,c
 12067  01A894  0EFF               	movlw	255
 12068  01A896  22E2               	addwfc	fsr1h,f,c
 12069  01A898  0012               	return		;funcret
 12070  01A89A                     __end_of_vfprintf:
 12071                           	opt callstack 0
 12072                           
 12073 ;; *************** function _vfpfcnvrt *****************
 12074 ;; Defined at:
 12075 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12076 ;; Parameters:    Size  Location     Type
 12077 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12078 ;;		 -> f(6), NULL(0), 
 12079 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 12080 ;;		 -> cfmt(2), 
 12081 ;;  ap              2  [STACK] PTR PTR void 
 12082 ;;		 -> ap(2), ap(2), 
 12083 ;; Auto vars:     Size  Location     Type
 12084 ;;  llu             8  [STACK] unsigned long long 
 12085 ;;  ll              8  [STACK] long long 
 12086 ;;  f               4  [STACK] long long 
 12087 ;;  ct              3  [STACK] unsigned char [3]
 12088 ;;  vp              3    0        PTR void 
 12089 ;;  cp              2  [STACK] PTR unsigned char 
 12090 ;;		 -> ?_printf(2), ?_sprintf(2), STR_46(9), STR_45(12), 
 12091 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 12092 ;;		 -> V(191), 
 12093 ;;  i               2    0        int 
 12094 ;;  done            2    0        int 
 12095 ;;  c               1  [STACK] unsigned char 
 12096 ;; Return value:  Size  Location     Type
 12097 ;;                  2  [STACK] int 
 12098 ;; Registers used:
 12099 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12100 ;; Tracked objects:
 12101 ;;		On entry : 0/0
 12102 ;;		On exit  : 0/0
 12103 ;;		Unchanged: 0/0
 12104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12109 ;;Total ram usage:        0 bytes
 12110 ;; Hardware stack levels used:    1
 12111 ;; Hardware stack levels required when called:   21
 12112 ;; This function calls:
 12113 ;;		_atoi
 12114 ;;		_ctoa
 12115 ;;		_dtoa
 12116 ;;		_efgtoa
 12117 ;;		_fputc
 12118 ;;		_isdigit
 12119 ;;		_isupper
 12120 ;;		_stoa
 12121 ;;		_strncmp
 12122 ;;		_tolower
 12123 ;;		_utoa
 12124 ;;		_xtoa
 12125 ;; This function is called by:
 12126 ;;		_vfprintf
 12127 ;; This function uses a reentrant model
 12128 ;;
 12129                           
 12130                           	psect	text49
 12131  0123A4                     __ptext49:
 12132                           	opt callstack 0
 12133  0123A4                     _vfpfcnvrt:
 12134                           	opt callstack 0
 12135                           
 12136                           ; BSR set to: 0
 12137                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 12138  0123A4  0E20               	movlw	32
 12139  0123A6  26E1               	addwf	fsr1l,f,c
 12140  0123A8  0E00               	movlw	0
 12141  0123AA  22E2               	addwfc	fsr1h,f,c
 12142                           
 12143                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 12144                           ;stkvar	_fmt @ sp[(-32)+-4]
 12145                           
 12146                           ;incstack = 0
 12147 ;; hardware stack exceeded
 12148  0123AC  0EDC               	movlw	-36
 12149  0123AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 12150  0123B4  0EDD               	movlw	-35
 12151  0123B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 12152  0123BC  006F FF7B FFF6     	movff	postinc2,tblptrl
 12153  0123C2  006F FF77 FFF7     	movff	postdec2,tblptrh
 12154  0123C8                     	if	0	;tblptru may be non-zero
 12155  0123C8                     	endif
 12156  0123C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12157  0123C8  0E00               	movlw	low (__mediumconst shr (0+16))
 12158  0123CA  6EF8               	movwf	tblptru,c
 12159  0123CC                     	endif
 12160  0123CC  0008               	tblrd		*
 12161  0123CE  50F5               	movf	tablat,w,c
 12162  0123D0  0A25               	xorlw	37
 12163  0123D2  A4D8               	btfss	status,2,c
 12164  0123D4  EF79  F099         	goto	l12868
 12165                           
 12166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 12167                           ;stkvar	_fmt @ sp[(-32)+-4]
 12168  0123D8  0EDC               	movlw	-36
 12169  0123DA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12170  0123E0  0EDD               	movlw	-35
 12171  0123E2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12172  0123E8  2ADE               	incf	postinc2,f,c
 12173  0123EA  0E00               	movlw	0
 12174  0123EC  22DD               	addwfc	postdec2,f,c
 12175                           
 12176                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 12177  0123EE  6A3A               	clrf	_width^0,c
 12178  0123F0  6A3B               	clrf	(_width+1)^0,c
 12179  0123F2  6A3E               	clrf	_flags^0,c
 12180  0123F4  6A3F               	clrf	(_flags+1)^0,c
 12181                           
 12182                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 12183  0123F6  683C               	setf	_prec^0,c
 12184  0123F8  683D               	setf	(_prec+1)^0,c
 12185                           
 12186                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 12187                           ;stkvar	_fmt @ sp[(-32)+-4]
 12188  0123FA  0EDC               	movlw	-36
 12189  0123FC  006F FF8F FFD9     	movff	plusw1,fsr2l
 12190  012402  0EDD               	movlw	-35
 12191  012404  006F FF8F FFDA     	movff	plusw1,fsr2h
 12192  01240A  006F FF7B FFF6     	movff	postinc2,tblptrl
 12193  012410  006F FF77 FFF7     	movff	postdec2,tblptrh
 12194  012416                     	if	0	;tblptru may be non-zero
 12195  012416                     	endif
 12196  012416                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12197  012416  0E00               	movlw	low (__mediumconst shr (0+16))
 12198  012418  6EF8               	movwf	tblptru,c
 12199  01241A                     	endif
 12200  01241A  0008               	tblrd		*
 12201  01241C  50F5               	movf	tablat,w,c
 12202  01241E  0A2A               	xorlw	42
 12203  012420  A4D8               	btfss	status,2,c
 12204  012422  D031               	goto	l12686
 12205                           
 12206                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 12207                           ;stkvar	_fmt @ sp[(-32)+-4]
 12208  012424  0EDC               	movlw	-36
 12209  012426  006F FF8F FFD9     	movff	plusw1,fsr2l
 12210  01242C  0EDD               	movlw	-35
 12211  01242E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12212  012434  2ADE               	incf	postinc2,f,c
 12213  012436  0E00               	movlw	0
 12214  012438  22DD               	addwfc	postdec2,f,c
 12215                           
 12216                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 12217                           ;stkvar	_ap @ sp[(-32)+-6]
 12218  01243A  0EDA               	movlw	-38
 12219  01243C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12220  012442  0EDB               	movlw	-37
 12221  012444  006F FF8F FFDA     	movff	plusw1,fsr2h
 12222  01244A  0E02               	movlw	2
 12223  01244C  5EDE               	subwf	postinc2,f,c
 12224  01244E  0E00               	movlw	0
 12225  012450  5ADD               	subwfb	postdec2,f,c
 12226  012452  006F FF78  F00B    	movff	postinc2,btemp+10
 12227  012458  006F FF74  F00C    	movff	postdec2,btemp+11
 12228  01245E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12229  012464  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12230  01246A  006F FF78  F03A    	movff	postinc2,_width
 12231  012470  006F FF74  F03B    	movff	postdec2,_width+1
 12232                           
 12233                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 12234  012476  AE3B               	btfss	(_width+1)^0,7,c
 12235  012478  D066               	goto	u12120
 12236                           
 12237                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 12238  01247A  803E               	bsf	_flags^0,0,c
 12239                           
 12240                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 12241  01247C  6C3A               	negf	_width^0,c
 12242  01247E  1E3B               	comf	(_width+1)^0,f,c
 12243  012480  B0D8               	btfsc	status,0,c
 12244  012482  2A3B               	incf	(_width+1)^0,f,c
 12245  012484  D060               	goto	u12120
 12246  012486                     l12686:
 12247                           
 12248                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 12249                           ;stkvar	_fmt @ sp[(-32)+-4]
 12250  012486  0EDC               	movlw	-36
 12251  012488  006F FF8F FFD9     	movff	plusw1,fsr2l
 12252  01248E  0EDD               	movlw	-35
 12253  012490  006F FF8F FFDA     	movff	plusw1,fsr2h
 12254  012496  006F FF78  F00B    	movff	postinc2,btemp+10
 12255  01249C  006F FF74  F00C    	movff	postdec2,btemp+11
 12256  0124A2  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12257  0124A8  0060  F033  FFE6   	movff	btemp+11,postinc1
 12258  0124AE  ECAD  F0BC         	call	_atoi	;wreg free
 12259  0124B2  0060  F004  F03A   	movff	btemp,_width
 12260  0124B8  0060  F008  F03B   	movff	btemp+1,_width+1
 12261                           
 12262                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 12263  0124BE  D00B               	goto	l12690
 12264  0124C0                     l12688:
 12265                           
 12266                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 12267                           ;stkvar	_fmt @ sp[(-32)+-4]
 12268  0124C0  0EDC               	movlw	-36
 12269  0124C2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12270  0124C8  0EDD               	movlw	-35
 12271  0124CA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12272  0124D0  2ADE               	incf	postinc2,f,c
 12273  0124D2  0E00               	movlw	0
 12274  0124D4  22DD               	addwfc	postdec2,f,c
 12275  0124D6                     l12690:
 12276  0124D6  0ED0               	movlw	208
 12277  0124D8  6E0B               	movwf	(btemp+10)^0,c
 12278  0124DA  0EFF               	movlw	255
 12279  0124DC  6E0C               	movwf	(btemp+11)^0,c
 12280                           
 12281                           ;stkvar	_fmt @ sp[(-32)+-4]
 12282  0124DE  0EDC               	movlw	-36
 12283  0124E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12284  0124E6  0EDD               	movlw	-35
 12285  0124E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12286  0124EE  006F FF7B FFF6     	movff	postinc2,tblptrl
 12287  0124F4  006F FF77 FFF7     	movff	postdec2,tblptrh
 12288  0124FA                     	if	0	;tblptru may be non-zero
 12289  0124FA                     	endif
 12290  0124FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12291  0124FA  0E00               	movlw	low (__mediumconst shr (0+16))
 12292  0124FC  6EF8               	movwf	tblptru,c
 12293  0124FE                     	endif
 12294  0124FE  0008               	tblrd		*
 12295  012500  50F5               	movf	tablat,w,c
 12296  012502  6E09               	movwf	(btemp+8)^0,c
 12297  012504  6A0A               	clrf	(btemp+9)^0,c
 12298  012506  500B               	movf	(btemp+10)^0,w,c
 12299  012508  2609               	addwf	(btemp+8)^0,f,c
 12300  01250A  500C               	movf	(btemp+11)^0,w,c
 12301  01250C  220A               	addwfc	(btemp+9)^0,f,c
 12302  01250E  500A               	movf	(btemp+9)^0,w,c
 12303  012510  E106               	bnz	u12100
 12304  012512  0E0A               	movlw	10
 12305  012514  5C09               	subwf	(btemp+8)^0,w,c
 12306  012516  B0D8               	btfsc	status,0,c
 12307  012518  D002               	goto	u12100
 12308  01251A  0E01               	movlw	1
 12309  01251C  D001               	goto	u12110
 12310  01251E                     u12100:
 12311  01251E  0E00               	movlw	0
 12312  012520                     u12110:
 12313  012520  6E0B               	movwf	(btemp+10)^0,c
 12314  012522  6A0C               	clrf	(btemp+11)^0,c
 12315                           
 12316                           ;stkvar	_vfpfcnvrt$5694 @ sp[(-32)+4]
 12317  012524  0EE4               	movlw	-28
 12318  012526  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12319  01252C  0EE5               	movlw	-27
 12320  01252E  0060  F033  FFE3   	movff	btemp+11,plusw1
 12321                           
 12322                           ;stkvar	_vfpfcnvrt$5694 @ sp[(-32)+4]
 12323  012534  0EE4               	movlw	-28
 12324  012536  006F FF8C  F001    	movff	plusw1,btemp
 12325  01253C  0EE5               	movlw	-27
 12326  01253E  50E3               	movf	plusw1,w,c
 12327  012540  1001               	iorwf	btemp^0,w,c
 12328  012542  A4D8               	btfss	status,2,c
 12329  012544  D7BD               	goto	l12688
 12330  012546                     u12120:
 12331                           
 12332                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 12333                           ;stkvar	_fmt @ sp[(-32)+-4]
 12334  012546  0EDC               	movlw	-36
 12335  012548  006F FF8F FFD9     	movff	plusw1,fsr2l
 12336  01254E  0EDD               	movlw	-35
 12337  012550  006F FF8F FFDA     	movff	plusw1,fsr2h
 12338  012556  006F FF7B FFF6     	movff	postinc2,tblptrl
 12339  01255C  006F FF77 FFF7     	movff	postdec2,tblptrh
 12340  012562                     	if	0	;tblptru may be non-zero
 12341  012562                     	endif
 12342  012562                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12343  012562  0E00               	movlw	low (__mediumconst shr (0+16))
 12344  012564  6EF8               	movwf	tblptru,c
 12345  012566                     	endif
 12346  012566  0008               	tblrd		*
 12347  012568  50F5               	movf	tablat,w,c
 12348  01256A  0A2E               	xorlw	46
 12349  01256C  A4D8               	btfss	status,2,c
 12350  01256E  D0AC               	goto	u12170
 12351                           
 12352                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 12353  012570  6A3C               	clrf	_prec^0,c
 12354  012572  6A3D               	clrf	(_prec+1)^0,c
 12355                           
 12356                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 12357                           ;stkvar	_fmt @ sp[(-32)+-4]
 12358  012574  0EDC               	movlw	-36
 12359  012576  006F FF8F FFD9     	movff	plusw1,fsr2l
 12360  01257C  0EDD               	movlw	-35
 12361  01257E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12362  012584  2ADE               	incf	postinc2,f,c
 12363  012586  0E00               	movlw	0
 12364  012588  22DD               	addwfc	postdec2,f,c
 12365                           
 12366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 12367                           ;stkvar	_fmt @ sp[(-32)+-4]
 12368  01258A  0EDC               	movlw	-36
 12369  01258C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12370  012592  0EDD               	movlw	-35
 12371  012594  006F FF8F FFDA     	movff	plusw1,fsr2h
 12372  01259A  006F FF7B FFF6     	movff	postinc2,tblptrl
 12373  0125A0  006F FF77 FFF7     	movff	postdec2,tblptrh
 12374  0125A6                     	if	0	;tblptru may be non-zero
 12375  0125A6                     	endif
 12376  0125A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12377  0125A6  0E00               	movlw	low (__mediumconst shr (0+16))
 12378  0125A8  6EF8               	movwf	tblptru,c
 12379  0125AA                     	endif
 12380  0125AA  0008               	tblrd		*
 12381  0125AC  50F5               	movf	tablat,w,c
 12382  0125AE  0A2A               	xorlw	42
 12383  0125B0  A4D8               	btfss	status,2,c
 12384  0125B2  D02A               	goto	l12708
 12385                           
 12386                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 12387                           ;stkvar	_fmt @ sp[(-32)+-4]
 12388  0125B4  0EDC               	movlw	-36
 12389  0125B6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12390  0125BC  0EDD               	movlw	-35
 12391  0125BE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12392  0125C4  2ADE               	incf	postinc2,f,c
 12393  0125C6  0E00               	movlw	0
 12394  0125C8  22DD               	addwfc	postdec2,f,c
 12395                           
 12396                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 12397                           ;stkvar	_ap @ sp[(-32)+-6]
 12398  0125CA  0EDA               	movlw	-38
 12399  0125CC  006F FF8F FFD9     	movff	plusw1,fsr2l
 12400  0125D2  0EDB               	movlw	-37
 12401  0125D4  006F FF8F FFDA     	movff	plusw1,fsr2h
 12402  0125DA  0E02               	movlw	2
 12403  0125DC  5EDE               	subwf	postinc2,f,c
 12404  0125DE  0E00               	movlw	0
 12405  0125E0  5ADD               	subwfb	postdec2,f,c
 12406  0125E2  006F FF78  F00B    	movff	postinc2,btemp+10
 12407  0125E8  006F FF74  F00C    	movff	postdec2,btemp+11
 12408  0125EE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12409  0125F4  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12410  0125FA  006F FF78  F03C    	movff	postinc2,_prec
 12411  012600  006F FF74  F03D    	movff	postdec2,_prec+1
 12412                           
 12413                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 12414  012606  D060               	goto	u12170
 12415  012608                     l12708:
 12416                           
 12417                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 12418                           ;stkvar	_fmt @ sp[(-32)+-4]
 12419  012608  0EDC               	movlw	-36
 12420  01260A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12421  012610  0EDD               	movlw	-35
 12422  012612  006F FF8F FFDA     	movff	plusw1,fsr2h
 12423  012618  006F FF78  F00B    	movff	postinc2,btemp+10
 12424  01261E  006F FF74  F00C    	movff	postdec2,btemp+11
 12425  012624  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12426  01262A  0060  F033  FFE6   	movff	btemp+11,postinc1
 12427  012630  ECAD  F0BC         	call	_atoi	;wreg free
 12428  012634  0060  F004  F03C   	movff	btemp,_prec
 12429  01263A  0060  F008  F03D   	movff	btemp+1,_prec+1
 12430                           
 12431                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 12432  012640  D00B               	goto	l12712
 12433  012642                     l12710:
 12434                           
 12435                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 12436                           ;stkvar	_fmt @ sp[(-32)+-4]
 12437  012642  0EDC               	movlw	-36
 12438  012644  006F FF8F FFD9     	movff	plusw1,fsr2l
 12439  01264A  0EDD               	movlw	-35
 12440  01264C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12441  012652  2ADE               	incf	postinc2,f,c
 12442  012654  0E00               	movlw	0
 12443  012656  22DD               	addwfc	postdec2,f,c
 12444  012658                     l12712:
 12445  012658  0ED0               	movlw	208
 12446  01265A  6E0B               	movwf	(btemp+10)^0,c
 12447  01265C  0EFF               	movlw	255
 12448  01265E  6E0C               	movwf	(btemp+11)^0,c
 12449                           
 12450                           ;stkvar	_fmt @ sp[(-32)+-4]
 12451  012660  0EDC               	movlw	-36
 12452  012662  006F FF8F FFD9     	movff	plusw1,fsr2l
 12453  012668  0EDD               	movlw	-35
 12454  01266A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12455  012670  006F FF7B FFF6     	movff	postinc2,tblptrl
 12456  012676  006F FF77 FFF7     	movff	postdec2,tblptrh
 12457  01267C                     	if	0	;tblptru may be non-zero
 12458  01267C                     	endif
 12459  01267C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12460  01267C  0E00               	movlw	low (__mediumconst shr (0+16))
 12461  01267E  6EF8               	movwf	tblptru,c
 12462  012680                     	endif
 12463  012680  0008               	tblrd		*
 12464  012682  50F5               	movf	tablat,w,c
 12465  012684  6E09               	movwf	(btemp+8)^0,c
 12466  012686  6A0A               	clrf	(btemp+9)^0,c
 12467  012688  500B               	movf	(btemp+10)^0,w,c
 12468  01268A  2609               	addwf	(btemp+8)^0,f,c
 12469  01268C  500C               	movf	(btemp+11)^0,w,c
 12470  01268E  220A               	addwfc	(btemp+9)^0,f,c
 12471  012690  500A               	movf	(btemp+9)^0,w,c
 12472  012692  E106               	bnz	u12150
 12473  012694  0E0A               	movlw	10
 12474  012696  5C09               	subwf	(btemp+8)^0,w,c
 12475  012698  B0D8               	btfsc	status,0,c
 12476  01269A  D002               	goto	u12150
 12477  01269C  0E01               	movlw	1
 12478  01269E  D001               	goto	u12160
 12479  0126A0                     u12150:
 12480  0126A0  0E00               	movlw	0
 12481  0126A2                     u12160:
 12482  0126A2  6E0B               	movwf	(btemp+10)^0,c
 12483  0126A4  6A0C               	clrf	(btemp+11)^0,c
 12484                           
 12485                           ;stkvar	_vfpfcnvrt$5695 @ sp[(-32)+0]
 12486  0126A6  0EE0               	movlw	-32
 12487  0126A8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12488  0126AE  0EE1               	movlw	-31
 12489  0126B0  0060  F033  FFE3   	movff	btemp+11,plusw1
 12490                           
 12491                           ;stkvar	_vfpfcnvrt$5695 @ sp[(-32)+0]
 12492  0126B6  0EE0               	movlw	-32
 12493  0126B8  006F FF8C  F001    	movff	plusw1,btemp
 12494  0126BE  0EE1               	movlw	-31
 12495  0126C0  50E3               	movf	plusw1,w,c
 12496  0126C2  1001               	iorwf	btemp^0,w,c
 12497  0126C4  A4D8               	btfss	status,2,c
 12498  0126C6  D7BD               	goto	l12710
 12499  0126C8                     u12170:
 12500                           
 12501                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 12502                           ;stkvar	_fmt @ sp[(-32)+-4]
 12503  0126C8  0EDC               	movlw	-36
 12504  0126CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12505  0126D0  0EDD               	movlw	-35
 12506  0126D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12507  0126D8  006F FF7B FFF6     	movff	postinc2,tblptrl
 12508  0126DE  006F FF77 FFF7     	movff	postdec2,tblptrh
 12509  0126E4                     	if	0	;tblptru may be non-zero
 12510  0126E4                     	endif
 12511  0126E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12512  0126E4  0E00               	movlw	low (__mediumconst shr (0+16))
 12513  0126E6  6EF8               	movwf	tblptru,c
 12514  0126E8                     	endif
 12515  0126E8  0008               	tblrd		*
 12516  0126EA  50F5               	movf	tablat,w,c
 12517  0126EC  6EE6               	movwf	postinc1,c
 12518  0126EE  0E00               	movlw	0
 12519  0126F0  6EE6               	movwf	postinc1,c
 12520  0126F2  EC4F  F0D7         	call	_tolower	;wreg free
 12521                           
 12522                           ;stkvar	_ct @ sp[(-32)+26]
 12523  0126F6  0EFA               	movlw	-6
 12524  0126F8  0060  F007  FFE3   	movff	btemp,plusw1
 12525                           
 12526                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 12527                           ;stkvar	_ct @ sp[(-32)+26]
 12528  0126FE  0EFA               	movlw	-6
 12529  012700  50E3               	movf	plusw1,w,c
 12530  012702  B4D8               	btfsc	status,2,c
 12531  012704  D05B               	goto	l12728
 12532                           
 12533                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 12534                           ;stkvar	_ct @ sp[(-32)+26]
 12535  012706  0EFB               	movlw	251
 12536  012708  24E1               	addwf	fsr1l,w,c
 12537  01270A  6ED9               	movwf	fsr2l,c
 12538  01270C  0EFF               	movlw	255
 12539  01270E  20E2               	addwfc	fsr1h,w,c
 12540  012710  6EDA               	movwf	fsr2h,c
 12541                           
 12542                           ;stkvar	_fmt @ sp[(-32)+-4]
 12543  012712  0EDC               	movlw	-36
 12544  012714  006F FF8F FFE9     	movff	plusw1,fsr0l
 12545  01271A  0EDD               	movlw	-35
 12546  01271C  006F FF8F FFEA     	movff	plusw1,fsr0h
 12547  012722  006F FFB8  F00B    	movff	postinc0,btemp+10
 12548  012728  006F FFB4  F00C    	movff	postdec0,btemp+11
 12549  01272E  0E01               	movlw	1
 12550  012730  260B               	addwf	(btemp+10)^0,f,c
 12551  012732  0E00               	movlw	0
 12552  012734  220C               	addwfc	(btemp+11)^0,f,c
 12553  012736  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12554  01273C  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12555  012742                     	if	0	;tblptru may be non-zero
 12556  012742                     	endif
 12557  012742                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12558  012742  0E00               	movlw	low (__mediumconst shr (0+16))
 12559  012744  6EF8               	movwf	tblptru,c
 12560  012746                     	endif
 12561  012746  0008               	tblrd		*
 12562  012748  50F5               	movf	tablat,w,c
 12563  01274A  6EE6               	movwf	postinc1,c
 12564  01274C  0E00               	movlw	0
 12565  01274E  6EE6               	movwf	postinc1,c
 12566  012750  EC4F  F0D7         	call	_tolower	;wreg free
 12567  012754  5001               	movf	btemp^0,w,c
 12568  012756  6EDF               	movwf	indf2,c
 12569                           
 12570                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 12571                           ;stkvar	_ct @ sp[(-32)+26]
 12572  012758  0EFB               	movlw	251
 12573  01275A  24E1               	addwf	fsr1l,w,c
 12574  01275C  6ED9               	movwf	fsr2l,c
 12575  01275E  0EFF               	movlw	255
 12576  012760  20E2               	addwfc	fsr1h,w,c
 12577  012762  6EDA               	movwf	fsr2h,c
 12578  012764  50DF               	movf	indf2,w,c
 12579  012766  B4D8               	btfsc	status,2,c
 12580  012768  D029               	goto	l12728
 12581                           
 12582                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 12583                           ;stkvar	_ct @ sp[(-32)+26]
 12584  01276A  0EFC               	movlw	252
 12585  01276C  24E1               	addwf	fsr1l,w,c
 12586  01276E  6ED9               	movwf	fsr2l,c
 12587  012770  0EFF               	movlw	255
 12588  012772  20E2               	addwfc	fsr1h,w,c
 12589  012774  6EDA               	movwf	fsr2h,c
 12590                           
 12591                           ;stkvar	_fmt @ sp[(-32)+-4]
 12592  012776  0EDC               	movlw	-36
 12593  012778  006F FF8F FFE9     	movff	plusw1,fsr0l
 12594  01277E  0EDD               	movlw	-35
 12595  012780  006F FF8F FFEA     	movff	plusw1,fsr0h
 12596  012786  006F FFB8  F00B    	movff	postinc0,btemp+10
 12597  01278C  006F FFB4  F00C    	movff	postdec0,btemp+11
 12598  012792  0E02               	movlw	2
 12599  012794  260B               	addwf	(btemp+10)^0,f,c
 12600  012796  0E00               	movlw	0
 12601  012798  220C               	addwfc	(btemp+11)^0,f,c
 12602  01279A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12603  0127A0  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12604  0127A6                     	if	0	;tblptru may be non-zero
 12605  0127A6                     	endif
 12606  0127A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12607  0127A6  0E00               	movlw	low (__mediumconst shr (0+16))
 12608  0127A8  6EF8               	movwf	tblptru,c
 12609  0127AA                     	endif
 12610  0127AA  0008               	tblrd		*
 12611  0127AC  50F5               	movf	tablat,w,c
 12612  0127AE  6EE6               	movwf	postinc1,c
 12613  0127B0  0E00               	movlw	0
 12614  0127B2  6EE6               	movwf	postinc1,c
 12615  0127B4  EC4F  F0D7         	call	_tolower	;wreg free
 12616  0127B8  5001               	movf	btemp^0,w,c
 12617  0127BA  6EDF               	movwf	indf2,c
 12618  0127BC                     l12728:
 12619                           
 12620                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 12621                           ;stkvar	_fmt @ sp[(-32)+-4]
 12622  0127BC  0EDC               	movlw	-36
 12623  0127BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 12624  0127C4  0EDD               	movlw	-35
 12625  0127C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 12626  0127CC  006F FF7B FFF6     	movff	postinc2,tblptrl
 12627  0127D2  006F FF77 FFF7     	movff	postdec2,tblptrh
 12628  0127D8                     	if	0	;tblptru may be non-zero
 12629  0127D8                     	endif
 12630  0127D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12631  0127D8  0E00               	movlw	low (__mediumconst shr (0+16))
 12632  0127DA  6EF8               	movwf	tblptru,c
 12633  0127DC                     	endif
 12634  0127DC  0008               	tblrd		*
 12635  0127DE  50F5               	movf	tablat,w,c
 12636  0127E0  0A63               	xorlw	99
 12637  0127E2  A4D8               	btfss	status,2,c
 12638  0127E4  D037               	goto	l12738
 12639                           
 12640                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 12641                           ;stkvar	_fmt @ sp[(-32)+-4]
 12642  0127E6  0EDC               	movlw	-36
 12643  0127E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 12644  0127EE  0EDD               	movlw	-35
 12645  0127F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 12646  0127F6  2ADE               	incf	postinc2,f,c
 12647  0127F8  0E00               	movlw	0
 12648  0127FA  22DD               	addwfc	postdec2,f,c
 12649                           
 12650                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 12651                           ;stkvar	_ap @ sp[(-32)+-6]
 12652  0127FC  0EDA               	movlw	-38
 12653  0127FE  006F FF8F FFD9     	movff	plusw1,fsr2l
 12654  012804  0EDB               	movlw	-37
 12655  012806  006F FF8F FFDA     	movff	plusw1,fsr2h
 12656  01280C  0E02               	movlw	2
 12657  01280E  5EDE               	subwf	postinc2,f,c
 12658  012810  0E00               	movlw	0
 12659  012812  5ADD               	subwfb	postdec2,f,c
 12660  012814  006F FF78  F00B    	movff	postinc2,btemp+10
 12661  01281A  006F FF74  F00C    	movff	postdec2,btemp+11
 12662  012820  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12663  012826  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12664  01282C  50DF               	movf	indf2,w,c
 12665  01282E  6E0C               	movwf	(btemp+11)^0,c
 12666                           
 12667                           ;stkvar	_c @ sp[(-32)+31]
 12668  012830  0EFF               	movlw	-1
 12669  012832  0060  F033  FFE3   	movff	btemp+11,plusw1
 12670                           
 12671                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 12672                           ;stkvar	_c @ sp[(-32)+31]
 12673  012838  0EFF               	movlw	-1
 12674  01283A  50E3               	movf	plusw1,w,c
 12675  01283C  6EE6               	movwf	postinc1,c
 12676                           
 12677                           ;stkvar	_fp @ sp[(-33)+-2]
 12678  01283E  0EDD               	movlw	-35
 12679  012840  006F FF8F FFE6     	movff	plusw1,postinc1
 12680  012846  006F FF8F FFE6     	movff	plusw1,postinc1
 12681  01284C  ECC9  F0D6         	call	_ctoa	;wreg free
 12682  012850  EFA3  F099         	goto	l2422
 12683  012854                     l12738:
 12684                           
 12685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 12686                           ;stkvar	_fmt @ sp[(-32)+-4]
 12687  012854  0EDC               	movlw	-36
 12688  012856  006F FF8F FFD9     	movff	plusw1,fsr2l
 12689  01285C  0EDD               	movlw	-35
 12690  01285E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12691  012864  006F FF7B FFF6     	movff	postinc2,tblptrl
 12692  01286A  006F FF77 FFF7     	movff	postdec2,tblptrh
 12693  012870                     	if	0	;tblptru may be non-zero
 12694  012870                     	endif
 12695  012870                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12696  012870  0E00               	movlw	low (__mediumconst shr (0+16))
 12697  012872  6EF8               	movwf	tblptru,c
 12698  012874                     	endif
 12699  012874  0008               	tblrd		*
 12700  012876  50F5               	movf	tablat,w,c
 12701  012878  0A64               	xorlw	100
 12702  01287A  B4D8               	btfsc	status,2,c
 12703  01287C  D015               	goto	u12220
 12704                           
 12705                           ;stkvar	_fmt @ sp[(-32)+-4]
 12706  01287E  0EDC               	movlw	-36
 12707  012880  006F FF8F FFD9     	movff	plusw1,fsr2l
 12708  012886  0EDD               	movlw	-35
 12709  012888  006F FF8F FFDA     	movff	plusw1,fsr2h
 12710  01288E  006F FF7B FFF6     	movff	postinc2,tblptrl
 12711  012894  006F FF77 FFF7     	movff	postdec2,tblptrh
 12712  01289A                     	if	0	;tblptru may be non-zero
 12713  01289A                     	endif
 12714  01289A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12715  01289A  0E00               	movlw	low (__mediumconst shr (0+16))
 12716  01289C  6EF8               	movwf	tblptru,c
 12717  01289E                     	endif
 12718  01289E  0008               	tblrd		*
 12719  0128A0  50F5               	movf	tablat,w,c
 12720  0128A2  0A69               	xorlw	105
 12721  0128A4  A4D8               	btfss	status,2,c
 12722  0128A6  D076               	goto	l12750
 12723  0128A8                     u12220:
 12724                           
 12725                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 12726                           ;stkvar	_fmt @ sp[(-32)+-4]
 12727  0128A8  0EDC               	movlw	-36
 12728  0128AA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12729  0128B0  0EDD               	movlw	-35
 12730  0128B2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12731  0128B8  2ADE               	incf	postinc2,f,c
 12732  0128BA  0E00               	movlw	0
 12733  0128BC  22DD               	addwfc	postdec2,f,c
 12734                           
 12735                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 12736                           ;stkvar	_ap @ sp[(-32)+-6]
 12737  0128BE  0EDA               	movlw	-38
 12738  0128C0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12739  0128C6  0EDB               	movlw	-37
 12740  0128C8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12741  0128CE  0E02               	movlw	2
 12742  0128D0  5EDE               	subwf	postinc2,f,c
 12743  0128D2  0E00               	movlw	0
 12744  0128D4  5ADD               	subwfb	postdec2,f,c
 12745  0128D6  006F FF78  F00B    	movff	postinc2,btemp+10
 12746  0128DC  006F FF74  F00C    	movff	postdec2,btemp+11
 12747  0128E2  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12748  0128E8  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12749  0128EE  006F FF78  F00B    	movff	postinc2,btemp+10
 12750  0128F4  006F FF74  F00C    	movff	postdec2,btemp+11
 12751                           
 12752                           ;stkvar	_ll @ sp[(-32)+14]
 12753  0128FA  0EEE               	movlw	-18
 12754  0128FC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12755  012902  0EEF               	movlw	-17
 12756  012904  0060  F033  FFE3   	movff	btemp+11,plusw1
 12757  01290A  6A01               	clrf	btemp^0,c
 12758  01290C  BEE3               	btfsc	plusw1,7,c
 12759  01290E  6801               	setf	btemp^0,c
 12760  012910  0EF0               	movlw	-16
 12761  012912  0060  F007  FFE3   	movff	btemp,plusw1
 12762  012918  0EF1               	movlw	-15
 12763  01291A  0060  F007  FFE3   	movff	btemp,plusw1
 12764  012920  0EF2               	movlw	-14
 12765  012922  0060  F007  FFE3   	movff	btemp,plusw1
 12766  012928  0EF3               	movlw	-13
 12767  01292A  0060  F007  FFE3   	movff	btemp,plusw1
 12768  012930  0EF4               	movlw	-12
 12769  012932  0060  F007  FFE3   	movff	btemp,plusw1
 12770  012938  0EF5               	movlw	-11
 12771  01293A  0060  F007  FFE3   	movff	btemp,plusw1
 12772  012940                     l12746:
 12773                           
 12774                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 12775                           ;stkvar	_ll @ sp[(-32)+14]
 12776  012940  50E1               	movf	fsr1l,w,c
 12777  012942  0FEE               	addlw	-18
 12778  012944  6ED9               	movwf	fsr2l,c
 12779  012946  50E2               	movf	fsr1h,w,c
 12780  012948  6EDA               	movwf	fsr2h,c
 12781  01294A  0EFF               	movlw	255
 12782  01294C  22DA               	addwfc	fsr2h,f,c
 12783  01294E  006F FF7B FFE6     	movff	postinc2,postinc1
 12784  012954  006F FF7B FFE6     	movff	postinc2,postinc1
 12785  01295A  006F FF7B FFE6     	movff	postinc2,postinc1
 12786  012960  006F FF7B FFE6     	movff	postinc2,postinc1
 12787  012966  006F FF7B FFE6     	movff	postinc2,postinc1
 12788  01296C  006F FF7B FFE6     	movff	postinc2,postinc1
 12789  012972  006F FF7B FFE6     	movff	postinc2,postinc1
 12790  012978  006F FF7B FFE6     	movff	postinc2,postinc1
 12791                           
 12792                           ;stkvar	_fp @ sp[(-40)+-2]
 12793  01297E  0ED6               	movlw	-42
 12794  012980  006F FF8F FFE6     	movff	plusw1,postinc1
 12795  012986  006F FF8F FFE6     	movff	plusw1,postinc1
 12796  01298C  ECFD  F0AB         	call	_dtoa	;wreg free
 12797  012990  EFA3  F099         	goto	l2422
 12798  012994                     l12750:
 12799                           
 12800                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 12801  012994  0E02               	movlw	2
 12802  012996  6EE6               	movwf	postinc1,c
 12803  012998  0E00               	movlw	0
 12804  01299A  6EE6               	movwf	postinc1,c
 12805  01299C  0EEA               	movlw	low STR_73
 12806  01299E  6EE6               	movwf	postinc1,c
 12807  0129A0  0EFF               	movlw	high STR_73
 12808  0129A2  6EE6               	movwf	postinc1,c
 12809                           
 12810                           ;stkvar	_fmt @ sp[(-36)+-4]
 12811  0129A4  0ED8               	movlw	-40
 12812  0129A6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12813  0129AC  0ED9               	movlw	-39
 12814  0129AE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12815  0129B4  006F FF78  F00B    	movff	postinc2,btemp+10
 12816  0129BA  006F FF74  F00C    	movff	postdec2,btemp+11
 12817  0129C0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12818  0129C6  0060  F033  FFE6   	movff	btemp+11,postinc1
 12819  0129CC  EC2A  F0C0         	call	_strncmp	;wreg free
 12820  0129D0  5001               	movf	btemp^0,w,c
 12821  0129D2  1002               	iorwf	(btemp+1)^0,w,c
 12822  0129D4  B4D8               	btfsc	status,2,c
 12823  0129D6  D022               	goto	u12240
 12824  0129D8  0E02               	movlw	2
 12825  0129DA  6EE6               	movwf	postinc1,c
 12826  0129DC  0E00               	movlw	0
 12827  0129DE  6EE6               	movwf	postinc1,c
 12828  0129E0  0EF0               	movlw	low STR_77
 12829  0129E2  6EE6               	movwf	postinc1,c
 12830  0129E4  0EFF               	movlw	high STR_77
 12831  0129E6  6EE6               	movwf	postinc1,c
 12832                           
 12833                           ;stkvar	_fmt @ sp[(-36)+-4]
 12834  0129E8  0ED8               	movlw	-40
 12835  0129EA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12836  0129F0  0ED9               	movlw	-39
 12837  0129F2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12838  0129F8  006F FF78  F00B    	movff	postinc2,btemp+10
 12839  0129FE  006F FF74  F00C    	movff	postdec2,btemp+11
 12840  012A04  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12841  012A0A  0060  F033  FFE6   	movff	btemp+11,postinc1
 12842  012A10  EC2A  F0C0         	call	_strncmp	;wreg free
 12843  012A14  5001               	movf	btemp^0,w,c
 12844  012A16  1002               	iorwf	(btemp+1)^0,w,c
 12845  012A18  A4D8               	btfss	status,2,c
 12846  012A1A  D069               	goto	l12762
 12847  012A1C                     u12240:
 12848                           
 12849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 12850                           ;stkvar	_fmt @ sp[(-32)+-4]
 12851  012A1C  0EDC               	movlw	-36
 12852  012A1E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12853  012A24  0EDD               	movlw	-35
 12854  012A26  006F FF8F FFDA     	movff	plusw1,fsr2h
 12855  012A2C  0E02               	movlw	2
 12856  012A2E  26DE               	addwf	postinc2,f,c
 12857  012A30  0E00               	movlw	0
 12858  012A32  22DD               	addwfc	postdec2,f,c
 12859                           
 12860                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 12861                           ;stkvar	_ap @ sp[(-32)+-6]
 12862  012A34  0EDA               	movlw	-38
 12863  012A36  006F FF8F FFD9     	movff	plusw1,fsr2l
 12864  012A3C  0EDB               	movlw	-37
 12865  012A3E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12866  012A44  0E04               	movlw	4
 12867  012A46  5EDE               	subwf	postinc2,f,c
 12868  012A48  0E00               	movlw	0
 12869  012A4A  5ADD               	subwfb	postdec2,f,c
 12870  012A4C  006F FF78  F00B    	movff	postinc2,btemp+10
 12871  012A52  006F FF74  F00C    	movff	postdec2,btemp+11
 12872  012A58  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12873  012A5E  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12874  012A64  006F FF78  F009    	movff	postinc2,btemp+8
 12875  012A6A  006F FF78  F00A    	movff	postinc2,btemp+9
 12876  012A70  006F FF78  F00B    	movff	postinc2,btemp+10
 12877  012A76  006F FF78  F00C    	movff	postinc2,btemp+11
 12878  012A7C  0060  F024  F011   	movff	btemp+8,btemp+16
 12879  012A82  0060  F028  F012   	movff	btemp+9,btemp+17
 12880  012A88  0060  F02C  F013   	movff	btemp+10,btemp+18
 12881  012A8E  0060  F030  F014   	movff	btemp+11,btemp+19
 12882  012A94  6A15               	clrf	(btemp+20)^0,c
 12883  012A96  BE14               	btfsc	(btemp+19)^0,7,c
 12884  012A98  6815               	setf	(btemp+20)^0,c
 12885  012A9A  0060  F054  F016   	movff	btemp+20,btemp+21
 12886  012AA0  0060  F054  F017   	movff	btemp+20,btemp+22
 12887  012AA6  0060  F054  F018   	movff	btemp+20,btemp+23
 12888                           
 12889                           ;stkvar	_ll @ sp[(-32)+14]
 12890  012AAC  0EEE               	movlw	-18
 12891  012AAE  0060  F047  FFE3   	movff	btemp+16,plusw1
 12892  012AB4  0EEF               	movlw	-17
 12893  012AB6  0060  F04B  FFE3   	movff	btemp+17,plusw1
 12894  012ABC  0EF0               	movlw	-16
 12895  012ABE  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12896  012AC4  0EF1               	movlw	-15
 12897  012AC6  0060  F053  FFE3   	movff	btemp+19,plusw1
 12898  012ACC  0EF2               	movlw	-14
 12899  012ACE  0060  F057  FFE3   	movff	btemp+20,plusw1
 12900  012AD4  0EF3               	movlw	-13
 12901  012AD6  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12902  012ADC  0EF4               	movlw	-12
 12903  012ADE  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12904  012AE4  0EF5               	movlw	-11
 12905  012AE6  0060  F063  FFE3   	movff	btemp+23,plusw1
 12906  012AEC  D729               	goto	l12746
 12907  012AEE                     l12762:
 12908                           
 12909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 12910                           ;stkvar	_ct @ sp[(-32)+26]
 12911  012AEE  0EFA               	movlw	-6
 12912  012AF0  006F FF8C  F001    	movff	plusw1,btemp
 12913  012AF6  0E66               	movlw	102
 12914  012AF8  1801               	xorwf	btemp^0,w,c
 12915  012AFA  A4D8               	btfss	status,2,c
 12916  012AFC  D06E               	goto	l12774
 12917                           
 12918                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 12919                           ;stkvar	_fmt @ sp[(-32)+-4]
 12920  012AFE  0EDC               	movlw	-36
 12921  012B00  006F FF8F FFD9     	movff	plusw1,fsr2l
 12922  012B06  0EDD               	movlw	-35
 12923  012B08  006F FF8F FFDA     	movff	plusw1,fsr2h
 12924  012B0E  006F FF7B FFF6     	movff	postinc2,tblptrl
 12925  012B14  006F FF77 FFF7     	movff	postdec2,tblptrh
 12926  012B1A                     	if	0	;tblptru may be non-zero
 12927  012B1A                     	endif
 12928  012B1A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12929  012B1A  0E00               	movlw	low (__mediumconst shr (0+16))
 12930  012B1C  6EF8               	movwf	tblptru,c
 12931  012B1E                     	endif
 12932                           
 12933                           ;stkvar	_c @ sp[(-32)+31]
 12934  012B1E  0008               	tblrd		*
 12935  012B20  0EFF               	movlw	-1
 12936  012B22  006F FFD7 FFE3     	movff	tablat,plusw1
 12937                           
 12938                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 12939                           ;stkvar	_fmt @ sp[(-32)+-4]
 12940  012B28  0EDC               	movlw	-36
 12941  012B2A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12942  012B30  0EDD               	movlw	-35
 12943  012B32  006F FF8F FFDA     	movff	plusw1,fsr2h
 12944  012B38  2ADE               	incf	postinc2,f,c
 12945  012B3A  0E00               	movlw	0
 12946  012B3C  22DD               	addwfc	postdec2,f,c
 12947                           
 12948                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 12949                           ;stkvar	_ap @ sp[(-32)+-6]
 12950  012B3E  0EDA               	movlw	-38
 12951  012B40  006F FF8F FFD9     	movff	plusw1,fsr2l
 12952  012B46  0EDB               	movlw	-37
 12953  012B48  006F FF8F FFDA     	movff	plusw1,fsr2h
 12954  012B4E  0E04               	movlw	4
 12955  012B50  5EDE               	subwf	postinc2,f,c
 12956  012B52  0E00               	movlw	0
 12957  012B54  5ADD               	subwfb	postdec2,f,c
 12958  012B56  006F FF78  F00B    	movff	postinc2,btemp+10
 12959  012B5C  006F FF74  F00C    	movff	postdec2,btemp+11
 12960  012B62  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12961  012B68  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12962  012B6E  006F FF78  F009    	movff	postinc2,btemp+8
 12963  012B74  006F FF78  F00A    	movff	postinc2,btemp+9
 12964  012B7A  006F FF78  F00B    	movff	postinc2,btemp+10
 12965  012B80  006F FF78  F00C    	movff	postinc2,btemp+11
 12966                           
 12967                           ;stkvar	_f @ sp[(-32)+22]
 12968  012B86  0EF6               	movlw	-10
 12969  012B88  0060  F027  FFE3   	movff	btemp+8,plusw1
 12970  012B8E  0EF7               	movlw	-9
 12971  012B90  0060  F02B  FFE3   	movff	btemp+9,plusw1
 12972  012B96  0EF8               	movlw	-8
 12973  012B98  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12974  012B9E  0EF9               	movlw	-7
 12975  012BA0  0060  F033  FFE3   	movff	btemp+11,plusw1
 12976  012BA6                     l12770:
 12977                           
 12978                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 12979                           ;stkvar	_c @ sp[(-32)+31]
 12980  012BA6  0EFF               	movlw	-1
 12981  012BA8  50E3               	movf	plusw1,w,c
 12982  012BAA  6EE6               	movwf	postinc1,c
 12983                           
 12984                           ;stkvar	_f @ sp[(-33)+22]
 12985  012BAC  0EF5               	movlw	-11
 12986  012BAE  006F FF8F FFE6     	movff	plusw1,postinc1
 12987  012BB4  006F FF8F FFE6     	movff	plusw1,postinc1
 12988  012BBA  006F FF8F FFE6     	movff	plusw1,postinc1
 12989  012BC0  006F FF8F FFE6     	movff	plusw1,postinc1
 12990                           
 12991                           ;stkvar	_fp @ sp[(-37)+-2]
 12992  012BC6  0ED9               	movlw	-39
 12993  012BC8  006F FF8F FFE6     	movff	plusw1,postinc1
 12994  012BCE  006F FF8F FFE6     	movff	plusw1,postinc1
 12995  012BD4  EC00  F080         	call	_efgtoa	;wreg free
 12996  012BD8  D3B6               	goto	l2422
 12997  012BDA                     l12774:
 12998                           
 12999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 13000  012BDA  0E02               	movlw	2
 13001  012BDC  6EE6               	movwf	postinc1,c
 13002  012BDE  0E00               	movlw	0
 13003  012BE0  6EE6               	movwf	postinc1,c
 13004  012BE2  0EED               	movlw	low STR_82
 13005  012BE4  6EE6               	movwf	postinc1,c
 13006  012BE6  0EFF               	movlw	high STR_82
 13007  012BE8  6EE6               	movwf	postinc1,c
 13008                           
 13009                           ;stkvar	_ct @ sp[(-36)+26]
 13010  012BEA  0EF6               	movlw	246
 13011  012BEC  24E1               	addwf	fsr1l,w,c
 13012  012BEE  6E01               	movwf	btemp^0,c
 13013  012BF0  0EFF               	movlw	255
 13014  012BF2  20E2               	addwfc	fsr1h,w,c
 13015  012BF4  6E02               	movwf	(btemp+1)^0,c
 13016  012BF6  0060  F007  FFE6   	movff	btemp,postinc1
 13017  012BFC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13018  012C02  EC2A  F0C0         	call	_strncmp	;wreg free
 13019  012C06  5001               	movf	btemp^0,w,c
 13020  012C08  1002               	iorwf	(btemp+1)^0,w,c
 13021  012C0A  A4D8               	btfss	status,2,c
 13022  012C0C  D096               	goto	l12794
 13023                           
 13024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 13025                           ;stkvar	_fmt @ sp[(-32)+-4]
 13026  012C0E  0EDC               	movlw	-36
 13027  012C10  006F FF8F FFD9     	movff	plusw1,fsr2l
 13028  012C16  0EDD               	movlw	-35
 13029  012C18  006F FF8F FFDA     	movff	plusw1,fsr2h
 13030  012C1E  006F FF78  F00B    	movff	postinc2,btemp+10
 13031  012C24  006F FF74  F00C    	movff	postdec2,btemp+11
 13032  012C2A  0E01               	movlw	1
 13033  012C2C  260B               	addwf	(btemp+10)^0,f,c
 13034  012C2E  0E00               	movlw	0
 13035  012C30  220C               	addwfc	(btemp+11)^0,f,c
 13036  012C32  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 13037  012C38  0060  F033  FFF7   	movff	btemp+11,tblptrh
 13038  012C3E                     	if	0	;tblptru may be non-zero
 13039  012C3E                     	endif
 13040  012C3E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13041  012C3E  0E00               	movlw	low (__mediumconst shr (0+16))
 13042  012C40  6EF8               	movwf	tblptru,c
 13043  012C42                     	endif
 13044                           
 13045                           ;stkvar	_c @ sp[(-32)+31]
 13046  012C42  0008               	tblrd		*
 13047  012C44  0EFF               	movlw	-1
 13048  012C46  006F FFD7 FFE3     	movff	tablat,plusw1
 13049  012C4C  0EBF               	movlw	191
 13050  012C4E  6E0B               	movwf	(btemp+10)^0,c
 13051  012C50  0EFF               	movlw	255
 13052  012C52  6E0C               	movwf	(btemp+11)^0,c
 13053                           
 13054                           ;stkvar	_fmt @ sp[(-32)+-4]
 13055  012C54  0EDC               	movlw	-36
 13056  012C56  006F FF8F FFD9     	movff	plusw1,fsr2l
 13057  012C5C  0EDD               	movlw	-35
 13058  012C5E  006F FF8F FFDA     	movff	plusw1,fsr2h
 13059  012C64  006F FF7B FFF6     	movff	postinc2,tblptrl
 13060  012C6A  006F FF77 FFF7     	movff	postdec2,tblptrh
 13061  012C70                     	if	0	;tblptru may be non-zero
 13062  012C70                     	endif
 13063  012C70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13064  012C70  0E00               	movlw	low (__mediumconst shr (0+16))
 13065  012C72  6EF8               	movwf	tblptru,c
 13066  012C74                     	endif
 13067  012C74  0008               	tblrd		*
 13068  012C76  50F5               	movf	tablat,w,c
 13069  012C78  6E09               	movwf	(btemp+8)^0,c
 13070  012C7A  6A0A               	clrf	(btemp+9)^0,c
 13071  012C7C  500B               	movf	(btemp+10)^0,w,c
 13072  012C7E  2609               	addwf	(btemp+8)^0,f,c
 13073  012C80  500C               	movf	(btemp+11)^0,w,c
 13074  012C82  220A               	addwfc	(btemp+9)^0,f,c
 13075  012C84  500A               	movf	(btemp+9)^0,w,c
 13076  012C86  E106               	bnz	u12270
 13077  012C88  0E1A               	movlw	26
 13078  012C8A  5C09               	subwf	(btemp+8)^0,w,c
 13079  012C8C  B0D8               	btfsc	status,0,c
 13080  012C8E  D002               	goto	u12270
 13081  012C90  0E01               	movlw	1
 13082  012C92  D001               	goto	u12280
 13083  012C94                     u12270:
 13084  012C94  0E00               	movlw	0
 13085  012C96                     u12280:
 13086  012C96  6E0B               	movwf	(btemp+10)^0,c
 13087  012C98  6A0C               	clrf	(btemp+11)^0,c
 13088                           
 13089                           ;stkvar	_vfpfcnvrt$5706 @ sp[(-32)+2]
 13090  012C9A  0EE2               	movlw	-30
 13091  012C9C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13092  012CA2  0EE3               	movlw	-29
 13093  012CA4  0060  F033  FFE3   	movff	btemp+11,plusw1
 13094                           
 13095                           ;stkvar	_vfpfcnvrt$5706 @ sp[(-32)+2]
 13096  012CAA  0EE2               	movlw	-30
 13097  012CAC  006F FF8C  F001    	movff	plusw1,btemp
 13098  012CB2  0EE3               	movlw	-29
 13099  012CB4  50E3               	movf	plusw1,w,c
 13100  012CB6  1001               	iorwf	btemp^0,w,c
 13101                           
 13102                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 13103                           ;stkvar	_ap @ sp[(-32)+-6]
 13104                           
 13105                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 13106                           
 13107                           ;stkvar	_f @ sp[(-32)+22]
 13108                           
 13109                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 13110                           ;stkvar	_ap @ sp[(-32)+-6]
 13111  012CB8  0EDA               	movlw	-38
 13112  012CBA  006F FF8F FFD9     	movff	plusw1,fsr2l
 13113  012CC0  0EDB               	movlw	-37
 13114  012CC2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13115  012CC8  0E04               	movlw	4
 13116  012CCA  5EDE               	subwf	postinc2,f,c
 13117  012CCC  0E00               	movlw	0
 13118  012CCE  5ADD               	subwfb	postdec2,f,c
 13119  012CD0  006F FF78  F00B    	movff	postinc2,btemp+10
 13120  012CD6  006F FF74  F00C    	movff	postdec2,btemp+11
 13121  012CDC  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13122  012CE2  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13123  012CE8  006F FF78  F009    	movff	postinc2,btemp+8
 13124  012CEE  006F FF78  F00A    	movff	postinc2,btemp+9
 13125  012CF4  006F FF78  F00B    	movff	postinc2,btemp+10
 13126  012CFA  006F FF78  F00C    	movff	postinc2,btemp+11
 13127                           
 13128                           ;stkvar	_f @ sp[(-32)+22]
 13129  012D00  0EF6               	movlw	-10
 13130  012D02  0060  F027  FFE3   	movff	btemp+8,plusw1
 13131  012D08  0EF7               	movlw	-9
 13132  012D0A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13133  012D10  0EF8               	movlw	-8
 13134  012D12  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13135  012D18  0EF9               	movlw	-7
 13136  012D1A  0060  F033  FFE3   	movff	btemp+11,plusw1
 13137                           
 13138                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 13139                           ;stkvar	_fmt @ sp[(-32)+-4]
 13140  012D20  0EDC               	movlw	-36
 13141  012D22  006F FF8F FFD9     	movff	plusw1,fsr2l
 13142  012D28  0EDD               	movlw	-35
 13143  012D2A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13144  012D30  0E02               	movlw	2
 13145  012D32  26DE               	addwf	postinc2,f,c
 13146  012D34  0E00               	movlw	0
 13147  012D36  22DD               	addwfc	postdec2,f,c
 13148  012D38  D736               	goto	l12770
 13149  012D3A                     l12794:
 13150                           
 13151                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 13152                           ;stkvar	_fmt @ sp[(-32)+-4]
 13153  012D3A  0EDC               	movlw	-36
 13154  012D3C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13155  012D42  0EDD               	movlw	-35
 13156  012D44  006F FF8F FFDA     	movff	plusw1,fsr2h
 13157  012D4A  006F FF7B FFF6     	movff	postinc2,tblptrl
 13158  012D50  006F FF77 FFF7     	movff	postdec2,tblptrh
 13159  012D56                     	if	0	;tblptru may be non-zero
 13160  012D56                     	endif
 13161  012D56                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13162  012D56  0E00               	movlw	low (__mediumconst shr (0+16))
 13163  012D58  6EF8               	movwf	tblptru,c
 13164  012D5A                     	endif
 13165  012D5A  0008               	tblrd		*
 13166  012D5C  50F5               	movf	tablat,w,c
 13167  012D5E  0A73               	xorlw	115
 13168  012D60  A4D8               	btfss	status,2,c
 13169  012D62  D042               	goto	l12804
 13170                           
 13171                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 13172                           ;stkvar	_fmt @ sp[(-32)+-4]
 13173  012D64  0EDC               	movlw	-36
 13174  012D66  006F FF8F FFD9     	movff	plusw1,fsr2l
 13175  012D6C  0EDD               	movlw	-35
 13176  012D6E  006F FF8F FFDA     	movff	plusw1,fsr2h
 13177  012D74  2ADE               	incf	postinc2,f,c
 13178  012D76  0E00               	movlw	0
 13179  012D78  22DD               	addwfc	postdec2,f,c
 13180                           
 13181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 13182                           ;stkvar	_ap @ sp[(-32)+-6]
 13183  012D7A  0EDA               	movlw	-38
 13184  012D7C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13185  012D82  0EDB               	movlw	-37
 13186  012D84  006F FF8F FFDA     	movff	plusw1,fsr2h
 13187  012D8A  0E02               	movlw	2
 13188  012D8C  5EDE               	subwf	postinc2,f,c
 13189  012D8E  0E00               	movlw	0
 13190  012D90  5ADD               	subwfb	postdec2,f,c
 13191  012D92  006F FF78  F00B    	movff	postinc2,btemp+10
 13192  012D98  006F FF74  F00C    	movff	postdec2,btemp+11
 13193  012D9E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13194  012DA4  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13195  012DAA  006F FF78  F00B    	movff	postinc2,btemp+10
 13196  012DB0  006F FF74  F00C    	movff	postdec2,btemp+11
 13197                           
 13198                           ;stkvar	_cp @ sp[(-32)+29]
 13199  012DB6  0EFE               	movlw	-2
 13200  012DB8  0060  F033  FFE3   	movff	btemp+11,plusw1
 13201  012DBE  0EFD               	movlw	-3
 13202  012DC0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13203                           
 13204                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 13205                           ;stkvar	_cp @ sp[(-32)+29]
 13206  012DC6  0EFD               	movlw	-3
 13207  012DC8  006F FF8F FFE6     	movff	plusw1,postinc1
 13208  012DCE  006F FF8F FFE6     	movff	plusw1,postinc1
 13209                           
 13210                           ;stkvar	_fp @ sp[(-34)+-2]
 13211  012DD4  0EDC               	movlw	-36
 13212  012DD6  006F FF8F FFE6     	movff	plusw1,postinc1
 13213  012DDC  006F FF8F FFE6     	movff	plusw1,postinc1
 13214  012DE2  EC0E  F0BA         	call	_stoa	;wreg free
 13215  012DE6  D2AF               	goto	l2422
 13216  012DE8                     l12804:
 13217                           
 13218                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 13219                           ;stkvar	_fmt @ sp[(-32)+-4]
 13220  012DE8  0EDC               	movlw	-36
 13221  012DEA  006F FF8F FFD9     	movff	plusw1,fsr2l
 13222  012DF0  0EDD               	movlw	-35
 13223  012DF2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13224  012DF8  006F FF7B FFF6     	movff	postinc2,tblptrl
 13225  012DFE  006F FF77 FFF7     	movff	postdec2,tblptrh
 13226  012E04                     	if	0	;tblptru may be non-zero
 13227  012E04                     	endif
 13228  012E04                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13229  012E04  0E00               	movlw	low (__mediumconst shr (0+16))
 13230  012E06  6EF8               	movwf	tblptru,c
 13231  012E08                     	endif
 13232  012E08  0008               	tblrd		*
 13233  012E0A  50F5               	movf	tablat,w,c
 13234  012E0C  0A75               	xorlw	117
 13235  012E0E  A4D8               	btfss	status,2,c
 13236  012E10  D07C               	goto	l12814
 13237                           
 13238                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 13239                           ;stkvar	_fmt @ sp[(-32)+-4]
 13240  012E12  0EDC               	movlw	-36
 13241  012E14  006F FF8F FFD9     	movff	plusw1,fsr2l
 13242  012E1A  0EDD               	movlw	-35
 13243  012E1C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13244  012E22  2ADE               	incf	postinc2,f,c
 13245  012E24  0E00               	movlw	0
 13246  012E26  22DD               	addwfc	postdec2,f,c
 13247                           
 13248                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 13249                           ;stkvar	_ap @ sp[(-32)+-6]
 13250  012E28  0EDA               	movlw	-38
 13251  012E2A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13252  012E30  0EDB               	movlw	-37
 13253  012E32  006F FF8F FFDA     	movff	plusw1,fsr2h
 13254  012E38  0E02               	movlw	2
 13255  012E3A  5EDE               	subwf	postinc2,f,c
 13256  012E3C  0E00               	movlw	0
 13257  012E3E  5ADD               	subwfb	postdec2,f,c
 13258  012E40  006F FF78  F00B    	movff	postinc2,btemp+10
 13259  012E46  006F FF74  F00C    	movff	postdec2,btemp+11
 13260  012E4C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13261  012E52  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13262  012E58  006F FF78  F00B    	movff	postinc2,btemp+10
 13263  012E5E  006F FF74  F00C    	movff	postdec2,btemp+11
 13264  012E64  500B               	movf	(btemp+10)^0,w,c
 13265  012E66  6E11               	movwf	(btemp+16)^0,c
 13266  012E68  500C               	movf	(btemp+11)^0,w,c
 13267  012E6A  6E12               	movwf	(btemp+17)^0,c
 13268  012E6C  6A13               	clrf	(btemp+18)^0,c
 13269  012E6E  6A14               	clrf	(btemp+19)^0,c
 13270  012E70  6A15               	clrf	(btemp+20)^0,c
 13271  012E72  6A16               	clrf	(btemp+21)^0,c
 13272  012E74  6A17               	clrf	(btemp+22)^0,c
 13273  012E76  6A18               	clrf	(btemp+23)^0,c
 13274                           
 13275                           ;stkvar	_llu @ sp[(-32)+6]
 13276  012E78  0EE6               	movlw	-26
 13277  012E7A  0060  F047  FFE3   	movff	btemp+16,plusw1
 13278  012E80  0EE7               	movlw	-25
 13279  012E82  0060  F04B  FFE3   	movff	btemp+17,plusw1
 13280  012E88  0EE8               	movlw	-24
 13281  012E8A  0060  F04F  FFE3   	movff	btemp+18,plusw1
 13282  012E90  0EE9               	movlw	-23
 13283  012E92  0060  F053  FFE3   	movff	btemp+19,plusw1
 13284  012E98  0EEA               	movlw	-22
 13285  012E9A  0060  F057  FFE3   	movff	btemp+20,plusw1
 13286  012EA0  0EEB               	movlw	-21
 13287  012EA2  0060  F05B  FFE3   	movff	btemp+21,plusw1
 13288  012EA8  0EEC               	movlw	-20
 13289  012EAA  0060  F05F  FFE3   	movff	btemp+22,plusw1
 13290  012EB0  0EED               	movlw	-19
 13291  012EB2  0060  F063  FFE3   	movff	btemp+23,plusw1
 13292                           
 13293                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 13294                           ;stkvar	_llu @ sp[(-32)+6]
 13295  012EB8  50E1               	movf	fsr1l,w,c
 13296  012EBA  0FE6               	addlw	-26
 13297  012EBC  6ED9               	movwf	fsr2l,c
 13298  012EBE  50E2               	movf	fsr1h,w,c
 13299  012EC0  6EDA               	movwf	fsr2h,c
 13300  012EC2  0EFF               	movlw	255
 13301  012EC4  22DA               	addwfc	fsr2h,f,c
 13302  012EC6  006F FF7B FFE6     	movff	postinc2,postinc1
 13303  012ECC  006F FF7B FFE6     	movff	postinc2,postinc1
 13304  012ED2  006F FF7B FFE6     	movff	postinc2,postinc1
 13305  012ED8  006F FF7B FFE6     	movff	postinc2,postinc1
 13306  012EDE  006F FF7B FFE6     	movff	postinc2,postinc1
 13307  012EE4  006F FF7B FFE6     	movff	postinc2,postinc1
 13308  012EEA  006F FF7B FFE6     	movff	postinc2,postinc1
 13309  012EF0  006F FF7B FFE6     	movff	postinc2,postinc1
 13310                           
 13311                           ;stkvar	_fp @ sp[(-40)+-2]
 13312  012EF6  0ED6               	movlw	-42
 13313  012EF8  006F FF8F FFE6     	movff	plusw1,postinc1
 13314  012EFE  006F FF8F FFE6     	movff	plusw1,postinc1
 13315  012F04  ECF6  F0B3         	call	_utoa	;wreg free
 13316  012F08  D21E               	goto	l2422
 13317  012F0A                     l12814:
 13318                           
 13319                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 13320  012F0A  0E02               	movlw	2
 13321  012F0C  6EE6               	movwf	postinc1,c
 13322  012F0E  0E00               	movlw	0
 13323  012F10  6EE6               	movwf	postinc1,c
 13324  012F12  0EF3               	movlw	low STR_87
 13325  012F14  6EE6               	movwf	postinc1,c
 13326  012F16  0EFF               	movlw	high STR_87
 13327  012F18  6EE6               	movwf	postinc1,c
 13328                           
 13329                           ;stkvar	_fmt @ sp[(-36)+-4]
 13330  012F1A  0ED8               	movlw	-40
 13331  012F1C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13332  012F22  0ED9               	movlw	-39
 13333  012F24  006F FF8F FFDA     	movff	plusw1,fsr2h
 13334  012F2A  006F FF78  F00B    	movff	postinc2,btemp+10
 13335  012F30  006F FF74  F00C    	movff	postdec2,btemp+11
 13336  012F36  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13337  012F3C  0060  F033  FFE6   	movff	btemp+11,postinc1
 13338  012F42  EC2A  F0C0         	call	_strncmp	;wreg free
 13339  012F46  5001               	movf	btemp^0,w,c
 13340  012F48  1002               	iorwf	(btemp+1)^0,w,c
 13341  012F4A  A4D8               	btfss	status,2,c
 13342  012F4C  D039               	goto	l12824
 13343                           
 13344                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 13345                           ;stkvar	_fmt @ sp[(-32)+-4]
 13346  012F4E  0EDC               	movlw	-36
 13347  012F50  006F FF8F FFD9     	movff	plusw1,fsr2l
 13348  012F56  0EDD               	movlw	-35
 13349  012F58  006F FF8F FFDA     	movff	plusw1,fsr2h
 13350  012F5E  0E02               	movlw	2
 13351  012F60  26DE               	addwf	postinc2,f,c
 13352  012F62  0E00               	movlw	0
 13353  012F64  22DD               	addwfc	postdec2,f,c
 13354                           
 13355                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 13356                           ;stkvar	_ap @ sp[(-32)+-6]
 13357  012F66  0EDA               	movlw	-38
 13358  012F68  006F FF8F FFD9     	movff	plusw1,fsr2l
 13359  012F6E  0EDB               	movlw	-37
 13360  012F70  006F FF8F FFDA     	movff	plusw1,fsr2h
 13361  012F76  0E04               	movlw	4
 13362  012F78  5EDE               	subwf	postinc2,f,c
 13363  012F7A  0E00               	movlw	0
 13364  012F7C  5ADD               	subwfb	postdec2,f,c
 13365  012F7E  006F FF78  F00B    	movff	postinc2,btemp+10
 13366  012F84  006F FF74  F00C    	movff	postdec2,btemp+11
 13367  012F8A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13368  012F90  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13369  012F96  006F FF78  F009    	movff	postinc2,btemp+8
 13370  012F9C  006F FF78  F00A    	movff	postinc2,btemp+9
 13371  012FA2  006F FF78  F00B    	movff	postinc2,btemp+10
 13372  012FA8  006F FF78  F00C    	movff	postinc2,btemp+11
 13373  012FAE  5009               	movf	(btemp+8)^0,w,c
 13374  012FB0  6E11               	movwf	(btemp+16)^0,c
 13375  012FB2  500A               	movf	(btemp+9)^0,w,c
 13376  012FB4  6E12               	movwf	(btemp+17)^0,c
 13377  012FB6  500B               	movf	(btemp+10)^0,w,c
 13378  012FB8  6E13               	movwf	(btemp+18)^0,c
 13379  012FBA  500C               	movf	(btemp+11)^0,w,c
 13380  012FBC  6E14               	movwf	(btemp+19)^0,c
 13381  012FBE  D758               	goto	L11
 13382  012FC0                     l12824:
 13383                           
 13384                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 13385                           ;stkvar	_fmt @ sp[(-32)+-4]
 13386  012FC0  0EDC               	movlw	-36
 13387  012FC2  006F FF8F FFD9     	movff	plusw1,fsr2l
 13388  012FC8  0EDD               	movlw	-35
 13389  012FCA  006F FF8F FFDA     	movff	plusw1,fsr2h
 13390  012FD0  006F FF7B FFF6     	movff	postinc2,tblptrl
 13391  012FD6  006F FF77 FFF7     	movff	postdec2,tblptrh
 13392  012FDC                     	if	0	;tblptru may be non-zero
 13393  012FDC                     	endif
 13394  012FDC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13395  012FDC  0E00               	movlw	low (__mediumconst shr (0+16))
 13396  012FDE  6EF8               	movwf	tblptru,c
 13397  012FE0                     	endif
 13398  012FE0  0008               	tblrd		*
 13399  012FE2  50F5               	movf	tablat,w,c
 13400  012FE4  0A78               	xorlw	120
 13401  012FE6  B4D8               	btfsc	status,2,c
 13402  012FE8  D015               	goto	u12340
 13403                           
 13404                           ;stkvar	_fmt @ sp[(-32)+-4]
 13405  012FEA  0EDC               	movlw	-36
 13406  012FEC  006F FF8F FFD9     	movff	plusw1,fsr2l
 13407  012FF2  0EDD               	movlw	-35
 13408  012FF4  006F FF8F FFDA     	movff	plusw1,fsr2h
 13409  012FFA  006F FF7B FFF6     	movff	postinc2,tblptrl
 13410  013000  006F FF77 FFF7     	movff	postdec2,tblptrh
 13411  013006                     	if	0	;tblptru may be non-zero
 13412  013006                     	endif
 13413  013006                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13414  013006  0E00               	movlw	low (__mediumconst shr (0+16))
 13415  013008  6EF8               	movwf	tblptru,c
 13416  01300A                     	endif
 13417  01300A  0008               	tblrd		*
 13418  01300C  50F5               	movf	tablat,w,c
 13419  01300E  0A58               	xorlw	88
 13420  013010  A4D8               	btfss	status,2,c
 13421  013012  D094               	goto	l12838
 13422  013014                     u12340:
 13423                           
 13424                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 13425                           ;stkvar	_fmt @ sp[(-32)+-4]
 13426  013014  0EDC               	movlw	-36
 13427  013016  006F FF8F FFD9     	movff	plusw1,fsr2l
 13428  01301C  0EDD               	movlw	-35
 13429  01301E  006F FF8F FFDA     	movff	plusw1,fsr2h
 13430  013024  006F FF7B FFF6     	movff	postinc2,tblptrl
 13431  01302A  006F FF77 FFF7     	movff	postdec2,tblptrh
 13432  013030                     	if	0	;tblptru may be non-zero
 13433  013030                     	endif
 13434  013030                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13435  013030  0E00               	movlw	low (__mediumconst shr (0+16))
 13436  013032  6EF8               	movwf	tblptru,c
 13437  013034                     	endif
 13438                           
 13439                           ;stkvar	_c @ sp[(-32)+31]
 13440  013034  0008               	tblrd		*
 13441  013036  0EFF               	movlw	-1
 13442  013038  006F FFD7 FFE3     	movff	tablat,plusw1
 13443                           
 13444                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 13445                           ;stkvar	_fmt @ sp[(-32)+-4]
 13446  01303E  0EDC               	movlw	-36
 13447  013040  006F FF8F FFD9     	movff	plusw1,fsr2l
 13448  013046  0EDD               	movlw	-35
 13449  013048  006F FF8F FFDA     	movff	plusw1,fsr2h
 13450  01304E  2ADE               	incf	postinc2,f,c
 13451  013050  0E00               	movlw	0
 13452  013052  22DD               	addwfc	postdec2,f,c
 13453                           
 13454                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 13455                           ;stkvar	_ap @ sp[(-32)+-6]
 13456  013054  0EDA               	movlw	-38
 13457  013056  006F FF8F FFD9     	movff	plusw1,fsr2l
 13458  01305C  0EDB               	movlw	-37
 13459  01305E  006F FF8F FFDA     	movff	plusw1,fsr2h
 13460  013064  0E02               	movlw	2
 13461  013066  5EDE               	subwf	postinc2,f,c
 13462  013068  0E00               	movlw	0
 13463  01306A  5ADD               	subwfb	postdec2,f,c
 13464  01306C  006F FF78  F00B    	movff	postinc2,btemp+10
 13465  013072  006F FF74  F00C    	movff	postdec2,btemp+11
 13466  013078  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13467  01307E  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13468  013084  006F FF78  F00B    	movff	postinc2,btemp+10
 13469  01308A  006F FF74  F00C    	movff	postdec2,btemp+11
 13470  013090  500B               	movf	(btemp+10)^0,w,c
 13471  013092  6E11               	movwf	(btemp+16)^0,c
 13472  013094  500C               	movf	(btemp+11)^0,w,c
 13473  013096  6E12               	movwf	(btemp+17)^0,c
 13474  013098  6A13               	clrf	(btemp+18)^0,c
 13475  01309A  6A14               	clrf	(btemp+19)^0,c
 13476  01309C  6A15               	clrf	(btemp+20)^0,c
 13477  01309E  6A16               	clrf	(btemp+21)^0,c
 13478  0130A0  6A17               	clrf	(btemp+22)^0,c
 13479  0130A2  6A18               	clrf	(btemp+23)^0,c
 13480                           
 13481                           ;stkvar	_llu @ sp[(-32)+6]
 13482  0130A4  0EE6               	movlw	-26
 13483  0130A6  0060  F047  FFE3   	movff	btemp+16,plusw1
 13484  0130AC  0EE7               	movlw	-25
 13485  0130AE  0060  F04B  FFE3   	movff	btemp+17,plusw1
 13486  0130B4  0EE8               	movlw	-24
 13487  0130B6  0060  F04F  FFE3   	movff	btemp+18,plusw1
 13488  0130BC  0EE9               	movlw	-23
 13489  0130BE  0060  F053  FFE3   	movff	btemp+19,plusw1
 13490  0130C4  0EEA               	movlw	-22
 13491  0130C6  0060  F057  FFE3   	movff	btemp+20,plusw1
 13492  0130CC  0EEB               	movlw	-21
 13493  0130CE  0060  F05B  FFE3   	movff	btemp+21,plusw1
 13494  0130D4  0EEC               	movlw	-20
 13495  0130D6  0060  F05F  FFE3   	movff	btemp+22,plusw1
 13496  0130DC  0EED               	movlw	-19
 13497  0130DE  0060  F063  FFE3   	movff	btemp+23,plusw1
 13498                           
 13499                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 13500                           ;stkvar	_c @ sp[(-32)+31]
 13501  0130E4  0EFF               	movlw	-1
 13502  0130E6  50E3               	movf	plusw1,w,c
 13503  0130E8  6EE6               	movwf	postinc1,c
 13504                           
 13505                           ;stkvar	_llu @ sp[(-33)+6]
 13506  0130EA  50E1               	movf	fsr1l,w,c
 13507  0130EC  0FE5               	addlw	-27
 13508  0130EE  6ED9               	movwf	fsr2l,c
 13509  0130F0  50E2               	movf	fsr1h,w,c
 13510  0130F2  6EDA               	movwf	fsr2h,c
 13511  0130F4  0EFF               	movlw	255
 13512  0130F6  22DA               	addwfc	fsr2h,f,c
 13513  0130F8  006F FF7B FFE6     	movff	postinc2,postinc1
 13514  0130FE  006F FF7B FFE6     	movff	postinc2,postinc1
 13515  013104  006F FF7B FFE6     	movff	postinc2,postinc1
 13516  01310A  006F FF7B FFE6     	movff	postinc2,postinc1
 13517  013110  006F FF7B FFE6     	movff	postinc2,postinc1
 13518  013116  006F FF7B FFE6     	movff	postinc2,postinc1
 13519  01311C  006F FF7B FFE6     	movff	postinc2,postinc1
 13520  013122  006F FF7B FFE6     	movff	postinc2,postinc1
 13521                           
 13522                           ;stkvar	_fp @ sp[(-41)+-2]
 13523  013128  0ED5               	movlw	-43
 13524  01312A  006F FF8F FFE6     	movff	plusw1,postinc1
 13525  013130  006F FF8F FFE6     	movff	plusw1,postinc1
 13526  013136  EC63  F0B0         	call	_xtoa	;wreg free
 13527  01313A  D105               	goto	l2422
 13528  01313C                     l12838:
 13529                           
 13530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 13531  01313C  0E02               	movlw	2
 13532  01313E  6EE6               	movwf	postinc1,c
 13533  013140  0E00               	movlw	0
 13534  013142  6EE6               	movwf	postinc1,c
 13535  013144  0EF6               	movlw	low STR_92
 13536  013146  6EE6               	movwf	postinc1,c
 13537  013148  0EFF               	movlw	high STR_92
 13538  01314A  6EE6               	movwf	postinc1,c
 13539                           
 13540                           ;stkvar	_fmt @ sp[(-36)+-4]
 13541  01314C  0ED8               	movlw	-40
 13542  01314E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13543  013154  0ED9               	movlw	-39
 13544  013156  006F FF8F FFDA     	movff	plusw1,fsr2h
 13545  01315C  006F FF78  F00B    	movff	postinc2,btemp+10
 13546  013162  006F FF74  F00C    	movff	postdec2,btemp+11
 13547  013168  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13548  01316E  0060  F033  FFE6   	movff	btemp+11,postinc1
 13549  013174  EC2A  F0C0         	call	_strncmp	;wreg free
 13550  013178  5001               	movf	btemp^0,w,c
 13551  01317A  1002               	iorwf	(btemp+1)^0,w,c
 13552  01317C  B4D8               	btfsc	status,2,c
 13553  01317E  D022               	goto	u12360
 13554  013180  0E02               	movlw	2
 13555  013182  6EE6               	movwf	postinc1,c
 13556  013184  0E00               	movlw	0
 13557  013186  6EE6               	movwf	postinc1,c
 13558  013188  0EE7               	movlw	low STR_96
 13559  01318A  6EE6               	movwf	postinc1,c
 13560  01318C  0EFF               	movlw	high STR_96
 13561  01318E  6EE6               	movwf	postinc1,c
 13562                           
 13563                           ;stkvar	_fmt @ sp[(-36)+-4]
 13564  013190  0ED8               	movlw	-40
 13565  013192  006F FF8F FFD9     	movff	plusw1,fsr2l
 13566  013198  0ED9               	movlw	-39
 13567  01319A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13568  0131A0  006F FF78  F00B    	movff	postinc2,btemp+10
 13569  0131A6  006F FF74  F00C    	movff	postdec2,btemp+11
 13570  0131AC  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13571  0131B2  0060  F033  FFE6   	movff	btemp+11,postinc1
 13572  0131B8  EC2A  F0C0         	call	_strncmp	;wreg free
 13573  0131BC  5001               	movf	btemp^0,w,c
 13574  0131BE  1002               	iorwf	(btemp+1)^0,w,c
 13575  0131C0  A4D8               	btfss	status,2,c
 13576  0131C2  D058               	goto	l12852
 13577  0131C4                     u12360:
 13578                           
 13579                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 13580                           ;stkvar	_fmt @ sp[(-32)+-4]
 13581  0131C4  0EDC               	movlw	-36
 13582  0131C6  006F FF8F FFD9     	movff	plusw1,fsr2l
 13583  0131CC  0EDD               	movlw	-35
 13584  0131CE  006F FF8F FFDA     	movff	plusw1,fsr2h
 13585  0131D4  006F FF78  F00B    	movff	postinc2,btemp+10
 13586  0131DA  006F FF74  F00C    	movff	postdec2,btemp+11
 13587  0131E0  0E01               	movlw	1
 13588  0131E2  260B               	addwf	(btemp+10)^0,f,c
 13589  0131E4  0E00               	movlw	0
 13590  0131E6  220C               	addwfc	(btemp+11)^0,f,c
 13591  0131E8  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 13592  0131EE  0060  F033  FFF7   	movff	btemp+11,tblptrh
 13593  0131F4                     	if	0	;tblptru may be non-zero
 13594  0131F4                     	endif
 13595  0131F4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13596  0131F4  0E00               	movlw	low (__mediumconst shr (0+16))
 13597  0131F6  6EF8               	movwf	tblptru,c
 13598  0131F8                     	endif
 13599                           
 13600                           ;stkvar	_c @ sp[(-32)+31]
 13601  0131F8  0008               	tblrd		*
 13602  0131FA  0EFF               	movlw	-1
 13603  0131FC  006F FFD7 FFE3     	movff	tablat,plusw1
 13604                           
 13605                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 13606                           ;stkvar	_fmt @ sp[(-32)+-4]
 13607  013202  0EDC               	movlw	-36
 13608  013204  006F FF8F FFD9     	movff	plusw1,fsr2l
 13609  01320A  0EDD               	movlw	-35
 13610  01320C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13611  013212  0E02               	movlw	2
 13612  013214  26DE               	addwf	postinc2,f,c
 13613  013216  0E00               	movlw	0
 13614  013218  22DD               	addwfc	postdec2,f,c
 13615                           
 13616                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 13617                           ;stkvar	_ap @ sp[(-32)+-6]
 13618  01321A  0EDA               	movlw	-38
 13619  01321C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13620  013222  0EDB               	movlw	-37
 13621  013224  006F FF8F FFDA     	movff	plusw1,fsr2h
 13622  01322A  0E04               	movlw	4
 13623  01322C  5EDE               	subwf	postinc2,f,c
 13624  01322E  0E00               	movlw	0
 13625  013230  5ADD               	subwfb	postdec2,f,c
 13626  013232  006F FF78  F00B    	movff	postinc2,btemp+10
 13627  013238  006F FF74  F00C    	movff	postdec2,btemp+11
 13628  01323E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13629  013244  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13630  01324A  006F FF78  F009    	movff	postinc2,btemp+8
 13631  013250  006F FF78  F00A    	movff	postinc2,btemp+9
 13632  013256  006F FF78  F00B    	movff	postinc2,btemp+10
 13633  01325C  006F FF78  F00C    	movff	postinc2,btemp+11
 13634  013262  5009               	movf	(btemp+8)^0,w,c
 13635  013264  6E11               	movwf	(btemp+16)^0,c
 13636  013266  500A               	movf	(btemp+9)^0,w,c
 13637  013268  6E12               	movwf	(btemp+17)^0,c
 13638  01326A  500B               	movf	(btemp+10)^0,w,c
 13639  01326C  6E13               	movwf	(btemp+18)^0,c
 13640  01326E  500C               	movf	(btemp+11)^0,w,c
 13641  013270  6E14               	movwf	(btemp+19)^0,c
 13642  013272  D714               	goto	L12
 13643  013274                     l12852:
 13644                           
 13645                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 13646                           ;stkvar	_fmt @ sp[(-32)+-4]
 13647  013274  0EDC               	movlw	-36
 13648  013276  006F FF8F FFD9     	movff	plusw1,fsr2l
 13649  01327C  0EDD               	movlw	-35
 13650  01327E  006F FF8F FFDA     	movff	plusw1,fsr2h
 13651  013284  006F FF7B FFF6     	movff	postinc2,tblptrl
 13652  01328A  006F FF77 FFF7     	movff	postdec2,tblptrh
 13653  013290                     	if	0	;tblptru may be non-zero
 13654  013290                     	endif
 13655  013290                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13656  013290  0E00               	movlw	low (__mediumconst shr (0+16))
 13657  013292  6EF8               	movwf	tblptru,c
 13658  013294                     	endif
 13659  013294  0008               	tblrd		*
 13660  013296  50F5               	movf	tablat,w,c
 13661  013298  0A25               	xorlw	37
 13662  01329A  A4D8               	btfss	status,2,c
 13663  01329C  D01A               	goto	l12862
 13664                           
 13665                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 13666                           ;stkvar	_fmt @ sp[(-32)+-4]
 13667  01329E  0EDC               	movlw	-36
 13668  0132A0  006F FF8F FFD9     	movff	plusw1,fsr2l
 13669  0132A6  0EDD               	movlw	-35
 13670  0132A8  006F FF8F FFDA     	movff	plusw1,fsr2h
 13671  0132AE  2ADE               	incf	postinc2,f,c
 13672  0132B0  0E00               	movlw	0
 13673  0132B2  22DD               	addwfc	postdec2,f,c
 13674                           
 13675                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 13676                           ;stkvar	_fp @ sp[(-32)+-2]
 13677  0132B4  0EDE               	movlw	-34
 13678  0132B6  006F FF8F FFE6     	movff	plusw1,postinc1
 13679  0132BC  006F FF8F FFE6     	movff	plusw1,postinc1
 13680  0132C2  0E25               	movlw	37
 13681  0132C4  6EE6               	movwf	postinc1,c
 13682  0132C6  0E00               	movlw	0
 13683  0132C8  6EE6               	movwf	postinc1,c
 13684  0132CA  ECC4  F0CC         	call	_fputc	;wreg free
 13685  0132CE                     l12858:
 13686                           
 13687                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 13688  0132CE  0E01               	movlw	1
 13689  0132D0  D00C               	goto	L13
 13690  0132D2                     l12862:
 13691                           
 13692                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 13693                           ;stkvar	_fmt @ sp[(-32)+-4]
 13694  0132D2  0EDC               	movlw	-36
 13695  0132D4  006F FF8F FFD9     	movff	plusw1,fsr2l
 13696  0132DA  0EDD               	movlw	-35
 13697  0132DC  006F FF8F FFDA     	movff	plusw1,fsr2h
 13698  0132E2  2ADE               	incf	postinc2,f,c
 13699  0132E4  0E00               	movlw	0
 13700  0132E6  22DD               	addwfc	postdec2,f,c
 13701                           
 13702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 13703  0132E8  0E00               	movlw	0
 13704  0132EA                     L13:
 13705  0132EA  6E01               	movwf	btemp^0,c
 13706  0132EC  0E00               	movlw	0
 13707  0132EE  6E02               	movwf	(btemp+1)^0,c
 13708  0132F0  D02A               	goto	l2422
 13709  0132F2                     l12868:
 13710                           
 13711                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 13712                           ;stkvar	_fp @ sp[(-32)+-2]
 13713  0132F2  0EDE               	movlw	-34
 13714  0132F4  006F FF8F FFE6     	movff	plusw1,postinc1
 13715  0132FA  006F FF8F FFE6     	movff	plusw1,postinc1
 13716                           
 13717                           ;stkvar	_fmt @ sp[(-34)+-4]
 13718  013300  0EDA               	movlw	-38
 13719  013302  006F FF8F FFD9     	movff	plusw1,fsr2l
 13720  013308  0EDB               	movlw	-37
 13721  01330A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13722  013310  006F FF7B FFF6     	movff	postinc2,tblptrl
 13723  013316  006F FF77 FFF7     	movff	postdec2,tblptrh
 13724  01331C                     	if	0	;tblptru may be non-zero
 13725  01331C                     	endif
 13726  01331C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13727  01331C  0E00               	movlw	low (__mediumconst shr (0+16))
 13728  01331E  6EF8               	movwf	tblptru,c
 13729  013320                     	endif
 13730  013320  0008               	tblrd		*
 13731  013322  50F5               	movf	tablat,w,c
 13732  013324  6EE6               	movwf	postinc1,c
 13733  013326  0E00               	movlw	0
 13734  013328  6EE6               	movwf	postinc1,c
 13735  01332A  ECC4  F0CC         	call	_fputc	;wreg free
 13736                           
 13737                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 13738                           ;stkvar	_fmt @ sp[(-32)+-4]
 13739  01332E  0EDC               	movlw	-36
 13740  013330  006F FF8F FFD9     	movff	plusw1,fsr2l
 13741  013336  0EDD               	movlw	-35
 13742  013338  006F FF8F FFDA     	movff	plusw1,fsr2h
 13743  01333E  2ADE               	incf	postinc2,f,c
 13744  013340  0E00               	movlw	0
 13745  013342  22DD               	addwfc	postdec2,f,c
 13746  013344  D7C4               	goto	l12858
 13747  013346                     l2422:
 13748                           
 13749                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 13750  013346  0EDA               	movlw	218
 13751  013348  26E1               	addwf	fsr1l,f,c
 13752  01334A  0EFF               	movlw	255
 13753  01334C  22E2               	addwfc	fsr1h,f,c
 13754  01334E  0012               	return		;funcret
 13755  013350                     __end_of_vfpfcnvrt:
 13756                           	opt callstack 0
 13757                           
 13758 ;; *************** function _xtoa *****************
 13759 ;; Defined at:
 13760 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 13761 ;; Parameters:    Size  Location     Type
 13762 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13763 ;;		 -> f(6), NULL(0), 
 13764 ;;  d               8  [STACK] unsigned long long 
 13765 ;;  x               1  [STACK] unsigned char 
 13766 ;; Auto vars:     Size  Location     Type
 13767 ;;  n               8  [STACK] unsigned long long 
 13768 ;;  c               2  [STACK] int 
 13769 ;;  i               2  [STACK] int 
 13770 ;;  w               2  [STACK] int 
 13771 ;;  p               2  [STACK] int 
 13772 ;; Return value:  Size  Location     Type
 13773 ;;                  2  [STACK] int 
 13774 ;; Registers used:
 13775 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 13776 ;; Tracked objects:
 13777 ;;		On entry : 0/0
 13778 ;;		On exit  : 0/0
 13779 ;;		Unchanged: 0/0
 13780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13785 ;;Total ram usage:        0 bytes
 13786 ;; Hardware stack levels used:    1
 13787 ;; Hardware stack levels required when called:   20
 13788 ;; This function calls:
 13789 ;;		_isalpha
 13790 ;;		_isupper
 13791 ;;		_pad
 13792 ;;		_toupper
 13793 ;; This function is called by:
 13794 ;;		_vfpfcnvrt
 13795 ;; This function uses a reentrant model
 13796 ;;
 13797                           
 13798                           	psect	text50
 13799  0160C6                     __ptext50:
 13800                           	opt callstack 0
 13801  0160C6                     _xtoa:
 13802                           	opt callstack 0
 13803                           
 13804                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 13805  0160C6  0E14               	movlw	20
 13806  0160C8  26E1               	addwf	fsr1l,f,c
 13807  0160CA  0E00               	movlw	0
 13808  0160CC  22E2               	addwfc	fsr1h,f,c
 13809                           
 13810                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 13811                           
 13812                           ;incstack = 0
 13813 ;; hardware stack exceeded
 13814  0160CE  AE3D               	btfss	(_prec+1)^0,7,c
 13815                           
 13816                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 13817  0160D0  923E               	bcf	_flags^0,1,c
 13818                           
 13819                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 13820  0160D2  BE3D               	btfsc	(_prec+1)^0,7,c
 13821  0160D4  D005               	goto	u11900
 13822  0160D6  503D               	movf	(_prec+1)^0,w,c
 13823  0160D8  E110               	bnz	l12588
 13824  0160DA  043C               	decf	_prec^0,w,c
 13825  0160DC  B0D8               	btfsc	status,0,c
 13826  0160DE  D00D               	goto	l12588
 13827  0160E0                     u11900:
 13828  0160E0  0E01               	movlw	1
 13829  0160E2  6E0B               	movwf	(btemp+10)^0,c
 13830  0160E4  0E00               	movlw	0
 13831  0160E6  6E0C               	movwf	(btemp+11)^0,c
 13832                           
 13833                           ;stkvar	_p @ sp[(-20)+18]
 13834  0160E8  0EFE               	movlw	-2
 13835  0160EA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13836  0160F0  0EFF               	movlw	-1
 13837  0160F2  0060  F033  FFE3   	movff	btemp+11,plusw1
 13838  0160F8  D008               	goto	l2372
 13839  0160FA                     l12588:
 13840                           
 13841                           ;stkvar	_p @ sp[(-20)+18]
 13842  0160FA  0EFE               	movlw	-2
 13843  0160FC  0060  F0F3  FFE3   	movff	_prec,plusw1
 13844  016102  0EFF               	movlw	-1
 13845  016104  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 13846  01610A                     l2372:
 13847                           
 13848                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 13849                           ;stkvar	_w @ sp[(-20)+16]
 13850  01610A  0EFC               	movlw	-4
 13851  01610C  0060  F0EB  FFE3   	movff	_width,plusw1
 13852  016112  0EFD               	movlw	-3
 13853  016114  0060  F0EF  FFE3   	movff	_width+1,plusw1
 13854                           
 13855                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 13856  01611A  A83E               	btfss	_flags^0,4,c
 13857  01611C  D00B               	goto	l12594
 13858                           
 13859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 13860                           ;stkvar	_w @ sp[(-20)+16]
 13861  01611E  50E1               	movf	fsr1l,w,c
 13862  016120  0FFC               	addlw	-4
 13863  016122  6ED9               	movwf	fsr2l,c
 13864  016124  50E2               	movf	fsr1h,w,c
 13865  016126  6EDA               	movwf	fsr2h,c
 13866  016128  0EFF               	movlw	255
 13867  01612A  22DA               	addwfc	fsr2h,f,c
 13868  01612C  0EFE               	movlw	254
 13869  01612E  26DE               	addwf	postinc2,f,c
 13870  016130  0EFF               	movlw	255
 13871  016132  22DD               	addwfc	postdec2,f,c
 13872  016134                     l12594:
 13873                           
 13874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 13875                           ;stkvar	_d @ sp[(-20)+-10]
 13876  016134  0EE2               	movlw	226
 13877  016136  24E1               	addwf	fsr1l,w,c
 13878  016138  6ED9               	movwf	fsr2l,c
 13879  01613A  0EFF               	movlw	255
 13880  01613C  20E2               	addwfc	fsr1h,w,c
 13881  01613E  6EDA               	movwf	fsr2h,c
 13882                           
 13883                           ;stkvar	_n @ sp[(-20)+4]
 13884  016140  0E08               	movlw	8
 13885  016142  6E01               	movwf	btemp^0,c
 13886  016144  0EF0               	movlw	-16
 13887  016146                     us1192999:
 13888  016146  006F FF7B FFE3     	movff	postinc2,plusw1
 13889  01614C  28E8               	incf	wreg,w,c
 13890  01614E  2E01               	decfsz	btemp^0,f,c
 13891  016150  D7FA               	bra	us1192999
 13892                           
 13893                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 13894  016152  0E4F               	movlw	79
 13895  016154  6E0B               	movwf	(btemp+10)^0,c
 13896  016156  0E00               	movlw	0
 13897  016158  6E0C               	movwf	(btemp+11)^0,c
 13898                           
 13899                           ;stkvar	_i @ sp[(-20)+14]
 13900  01615A  0EFA               	movlw	-6
 13901  01615C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13902  016162  0EFB               	movlw	-5
 13903  016164  0060  F033  FFE3   	movff	btemp+11,plusw1
 13904                           
 13905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 13906  01616A  0102               	movlb	2	; () banked
 13907  01616C  6BE6               	clrf	(_dbuf+79)& (0+255),b
 13908                           
 13909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13910  01616E  D0EE               	goto	l12632
 13911  016170                     l12600:
 13912                           
 13913                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 13914                           ;stkvar	_i @ sp[(-20)+14]
 13915  016170  50E1               	movf	fsr1l,w,c
 13916  016172  0FFA               	addlw	-6
 13917  016174  6ED9               	movwf	fsr2l,c
 13918  016176  50E2               	movf	fsr1h,w,c
 13919  016178  6EDA               	movwf	fsr2h,c
 13920  01617A  0EFF               	movlw	255
 13921  01617C  22DA               	addwfc	fsr2h,f,c
 13922  01617E  06DE               	decf	postinc2,f,c
 13923  016180  0E00               	movlw	0
 13924  016182  5ADD               	subwfb	postdec2,f,c
 13925                           
 13926                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 13927                           ;stkvar	_n @ sp[(-20)+4]
 13928  016184  0EF0               	movlw	-16
 13929  016186  006F FF8C  F00B    	movff	plusw1,btemp+10
 13930  01618C  0EF1               	movlw	-15
 13931  01618E  006F FF8C  F00C    	movff	plusw1,btemp+11
 13932  016194  0E0F               	movlw	15
 13933  016196  160B               	andwf	(btemp+10)^0,f,c
 13934  016198  0E00               	movlw	0
 13935  01619A  160C               	andwf	(btemp+11)^0,f,c
 13936                           
 13937                           ;stkvar	_c @ sp[(-20)+12]
 13938  01619C  0EF8               	movlw	-8
 13939  01619E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13940  0161A4  0EF9               	movlw	-7
 13941  0161A6  0060  F033  FFE3   	movff	btemp+11,plusw1
 13942                           
 13943                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 13944                           ;stkvar	_c @ sp[(-20)+12]
 13945  0161AC  0EF9               	movlw	-7
 13946  0161AE  BEE3               	btfsc	plusw1,7,c
 13947  0161B0  D00F               	goto	l12608
 13948  0161B2  0EF9               	movlw	-7
 13949  0161B4  50E3               	movf	plusw1,w,c
 13950  0161B6  E108               	bnz	u11930
 13951  0161B8  0EF8               	movlw	-8
 13952  0161BA  006F FF8C  F001    	movff	plusw1,btemp
 13953  0161C0  0E0A               	movlw	10
 13954  0161C2  5E01               	subwf	btemp^0,f,c
 13955  0161C4  A0D8               	btfss	status,0,c
 13956  0161C6  D004               	goto	l12608
 13957  0161C8                     u11930:
 13958                           
 13959                           ;stkvar	_c @ sp[(-20)+12]
 13960  0161C8  0EF8               	movlw	-8
 13961  0161CA  50E3               	movf	plusw1,w,c
 13962  0161CC  0F57               	addlw	87
 13963  0161CE  D003               	goto	L14
 13964  0161D0                     l12608:
 13965                           
 13966                           ;stkvar	_c @ sp[(-20)+12]
 13967  0161D0  0EF8               	movlw	-8
 13968  0161D2  50E3               	movf	plusw1,w,c
 13969  0161D4  0F30               	addlw	48
 13970  0161D6                     L14:
 13971  0161D6  6E0B               	movwf	(btemp+10)^0,c
 13972  0161D8  0EF9               	movlw	-7
 13973  0161DA  006F FF8C  F00C    	movff	plusw1,btemp+11
 13974  0161E0  0E00               	movlw	0
 13975  0161E2  220C               	addwfc	(btemp+11)^0,f,c
 13976                           
 13977                           ;stkvar	_c @ sp[(-20)+12]
 13978  0161E4  0EF8               	movlw	-8
 13979  0161E6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13980  0161EC  0EF9               	movlw	-7
 13981  0161EE  0060  F033  FFE3   	movff	btemp+11,plusw1
 13982  0161F4  0EBF               	movlw	191
 13983  0161F6  6E0B               	movwf	(btemp+10)^0,c
 13984  0161F8  0EFF               	movlw	255
 13985  0161FA  6E0C               	movwf	(btemp+11)^0,c
 13986                           
 13987                           ;stkvar	_x @ sp[(-20)+-11]
 13988  0161FC  0EE1               	movlw	-31
 13989  0161FE  50E3               	movf	plusw1,w,c
 13990  016200  6E09               	movwf	(btemp+8)^0,c
 13991  016202  6A0A               	clrf	(btemp+9)^0,c
 13992  016204  500B               	movf	(btemp+10)^0,w,c
 13993  016206  2609               	addwf	(btemp+8)^0,f,c
 13994  016208  500C               	movf	(btemp+11)^0,w,c
 13995  01620A  220A               	addwfc	(btemp+9)^0,f,c
 13996  01620C  500A               	movf	(btemp+9)^0,w,c
 13997  01620E  E106               	bnz	u11940
 13998  016210  0E1A               	movlw	26
 13999  016212  5C09               	subwf	(btemp+8)^0,w,c
 14000  016214  B0D8               	btfsc	status,0,c
 14001  016216  D002               	goto	u11940
 14002  016218  0E01               	movlw	1
 14003  01621A  D001               	goto	u11950
 14004  01621C                     u11940:
 14005  01621C  0E00               	movlw	0
 14006  01621E                     u11950:
 14007  01621E  6E0B               	movwf	(btemp+10)^0,c
 14008  016220  6A0C               	clrf	(btemp+11)^0,c
 14009                           
 14010                           ;stkvar	_xtoa$5679 @ sp[(-20)+2]
 14011  016222  0EEE               	movlw	-18
 14012  016224  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14013  01622A  0EEF               	movlw	-17
 14014  01622C  0060  F033  FFE3   	movff	btemp+11,plusw1
 14015                           
 14016                           ;stkvar	_xtoa$5679 @ sp[(-20)+2]
 14017  016232  0EEE               	movlw	-18
 14018  016234  006F FF8C  F001    	movff	plusw1,btemp
 14019  01623A  0EEF               	movlw	-17
 14020  01623C  50E3               	movf	plusw1,w,c
 14021  01623E  1001               	iorwf	btemp^0,w,c
 14022  016240  B4D8               	btfsc	status,2,c
 14023  016242  D041               	goto	l12624
 14024  016244  0E9F               	movlw	159
 14025  016246  6E0B               	movwf	(btemp+10)^0,c
 14026  016248  0EFF               	movlw	255
 14027  01624A  6E0C               	movwf	(btemp+11)^0,c
 14028                           
 14029                           ;stkvar	_c @ sp[(-20)+12]
 14030  01624C  0EF8               	movlw	-8
 14031  01624E  006F FF8C  F009    	movff	plusw1,btemp+8
 14032  016254  0EF9               	movlw	-7
 14033  016256  006F FF8C  F00A    	movff	plusw1,btemp+9
 14034  01625C  0E20               	movlw	32
 14035  01625E  1209               	iorwf	(btemp+8)^0,f,c
 14036  016260  0E00               	movlw	0
 14037  016262  120A               	iorwf	(btemp+9)^0,f,c
 14038  016264  500B               	movf	(btemp+10)^0,w,c
 14039  016266  2609               	addwf	(btemp+8)^0,f,c
 14040  016268  500C               	movf	(btemp+11)^0,w,c
 14041  01626A  220A               	addwfc	(btemp+9)^0,f,c
 14042  01626C  500A               	movf	(btemp+9)^0,w,c
 14043  01626E  E106               	bnz	u11970
 14044  016270  0E1A               	movlw	26
 14045  016272  5C09               	subwf	(btemp+8)^0,w,c
 14046  016274  B0D8               	btfsc	status,0,c
 14047  016276  D002               	goto	u11970
 14048  016278  0E01               	movlw	1
 14049  01627A  D001               	goto	u11980
 14050  01627C                     u11970:
 14051  01627C  0E00               	movlw	0
 14052  01627E                     u11980:
 14053  01627E  6E0B               	movwf	(btemp+10)^0,c
 14054  016280  6A0C               	clrf	(btemp+11)^0,c
 14055                           
 14056                           ;stkvar	_xtoa$5680 @ sp[(-20)+0]
 14057  016282  0EEC               	movlw	-20
 14058  016284  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14059  01628A  0EED               	movlw	-19
 14060  01628C  0060  F033  FFE3   	movff	btemp+11,plusw1
 14061                           
 14062                           ;stkvar	_xtoa$5680 @ sp[(-20)+0]
 14063  016292  0EEC               	movlw	-20
 14064  016294  006F FF8C  F001    	movff	plusw1,btemp
 14065  01629A  0EED               	movlw	-19
 14066  01629C  50E3               	movf	plusw1,w,c
 14067  01629E  1001               	iorwf	btemp^0,w,c
 14068  0162A0  B4D8               	btfsc	status,2,c
 14069  0162A2  D011               	goto	l12624
 14070                           
 14071                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 14072                           ;stkvar	_c @ sp[(-20)+12]
 14073  0162A4  0EF8               	movlw	-8
 14074  0162A6  006F FF8F FFE6     	movff	plusw1,postinc1
 14075  0162AC  006F FF8F FFE6     	movff	plusw1,postinc1
 14076  0162B2  EC0D  F0D7         	call	_toupper	;wreg free
 14077                           
 14078                           ;stkvar	_c @ sp[(-20)+12]
 14079  0162B6  0EF8               	movlw	-8
 14080  0162B8  0060  F007  FFE3   	movff	btemp,plusw1
 14081  0162BE  0EF9               	movlw	-7
 14082  0162C0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14083  0162C6                     l12624:
 14084                           
 14085                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 14086                           ;stkvar	_c @ sp[(-20)+12]
 14087                           ;stkvar	_i @ sp[(-20)+14]
 14088  0162C6  0EFA               	movlw	-6
 14089  0162C8  006F FF8C  F00B    	movff	plusw1,btemp+10
 14090  0162CE  0EFB               	movlw	-5
 14091  0162D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 14092  0162D6  0E97               	movlw	low _dbuf
 14093  0162D8  240B               	addwf	(btemp+10)^0,w,c
 14094  0162DA  6ED9               	movwf	fsr2l,c
 14095  0162DC  0E02               	movlw	high _dbuf
 14096  0162DE  200C               	addwfc	(btemp+11)^0,w,c
 14097  0162E0  6EDA               	movwf	fsr2h,c
 14098  0162E2  0EF8               	movlw	-8
 14099  0162E4  006F FF8F FFDF     	movff	plusw1,indf2
 14100                           
 14101                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 14102                           ;stkvar	_p @ sp[(-20)+18]
 14103  0162EA  50E1               	movf	fsr1l,w,c
 14104  0162EC  0FFE               	addlw	-2
 14105  0162EE  6ED9               	movwf	fsr2l,c
 14106  0162F0  50E2               	movf	fsr1h,w,c
 14107  0162F2  6EDA               	movwf	fsr2h,c
 14108  0162F4  0EFF               	movlw	255
 14109  0162F6  22DA               	addwfc	fsr2h,f,c
 14110  0162F8  06DE               	decf	postinc2,f,c
 14111  0162FA  0E00               	movlw	0
 14112  0162FC  5ADD               	subwfb	postdec2,f,c
 14113                           
 14114                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 14115                           ;stkvar	_w @ sp[(-20)+16]
 14116  0162FE  50E1               	movf	fsr1l,w,c
 14117  016300  0FFC               	addlw	-4
 14118  016302  6ED9               	movwf	fsr2l,c
 14119  016304  50E2               	movf	fsr1h,w,c
 14120  016306  6EDA               	movwf	fsr2h,c
 14121  016308  0EFF               	movlw	255
 14122  01630A  22DA               	addwfc	fsr2h,f,c
 14123  01630C  06DE               	decf	postinc2,f,c
 14124  01630E  0E00               	movlw	0
 14125  016310  5ADD               	subwfb	postdec2,f,c
 14126                           
 14127                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 14128  016312  0E04               	movlw	4
 14129  016314  6E0C               	movwf	(btemp+11)^0,c
 14130                           
 14131                           ;stkvar	_n @ sp[(-20)+4]
 14132  016316  50E1               	movf	fsr1l,w,c
 14133  016318  0FF0               	addlw	-16
 14134  01631A  6ED9               	movwf	fsr2l,c
 14135  01631C  50E2               	movf	fsr1h,w,c
 14136  01631E  6EDA               	movwf	fsr2h,c
 14137  016320  0EFF               	movlw	255
 14138  016322  22DA               	addwfc	fsr2h,f,c
 14139  016324  280C               	incf	(btemp+11)^0,w,c
 14140  016326  52DE               	movf	postinc2,f,c
 14141  016328  D00F               	goto	u12000
 14142  01632A                     u12005:
 14143  01632A  52DE               	movf	postinc2,f,c
 14144  01632C  52DE               	movf	postinc2,f,c
 14145  01632E  52DE               	movf	postinc2,f,c
 14146  016330  52DE               	movf	postinc2,f,c
 14147  016332  52DE               	movf	postinc2,f,c
 14148  016334  52DE               	movf	postinc2,f,c
 14149  016336  90D8               	bcf	status,0,c
 14150  016338  32DD               	rrcf	postdec2,f,c
 14151  01633A  32DD               	rrcf	postdec2,f,c
 14152  01633C  32DD               	rrcf	postdec2,f,c
 14153  01633E  32DD               	rrcf	postdec2,f,c
 14154  016340  32DD               	rrcf	postdec2,f,c
 14155  016342  32DD               	rrcf	postdec2,f,c
 14156  016344  32DD               	rrcf	postdec2,f,c
 14157  016346  32DE               	rrcf	postinc2,f,c
 14158  016348                     u12000:
 14159  016348  2EE8               	decfsz	wreg,f,c
 14160  01634A  D7EF               	goto	u12005
 14161  01634C                     l12632:
 14162                           
 14163                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14164                           ;stkvar	_i @ sp[(-20)+14]
 14165  01634C  0EFB               	movlw	-5
 14166  01634E  BEE3               	btfsc	plusw1,7,c
 14167  016350  D03A               	goto	u12050
 14168  016352  0EFB               	movlw	-5
 14169  016354  50E3               	movf	plusw1,w,c
 14170  016356  E108               	bnz	u12010
 14171  016358  0EFA               	movlw	-6
 14172  01635A  006F FF8C  F001    	movff	plusw1,btemp
 14173  016360  0E02               	movlw	2
 14174  016362  5E01               	subwf	btemp^0,f,c
 14175  016364  A0D8               	btfss	status,0,c
 14176  016366  D02F               	goto	u12050
 14177  016368                     u12010:
 14178                           
 14179                           ;stkvar	_n @ sp[(-20)+4]
 14180  016368  0EF0               	movlw	-16
 14181  01636A  50E3               	movf	plusw1,w,c
 14182  01636C  E115               	bnz	u12021
 14183  01636E  0EF1               	movlw	-15
 14184  016370  50E3               	movf	plusw1,w,c
 14185  016372  E112               	bnz	u12021
 14186  016374  0EF2               	movlw	-14
 14187  016376  50E3               	movf	plusw1,w,c
 14188  016378  E10F               	bnz	u12021
 14189  01637A  0EF3               	movlw	-13
 14190  01637C  50E3               	movf	plusw1,w,c
 14191  01637E  E10C               	bnz	u12021
 14192  016380  0EF4               	movlw	-12
 14193  016382  50E3               	movf	plusw1,w,c
 14194  016384  E109               	bnz	u12021
 14195  016386  0EF5               	movlw	-11
 14196  016388  50E3               	movf	plusw1,w,c
 14197  01638A  E106               	bnz	u12021
 14198  01638C  0EF6               	movlw	-10
 14199  01638E  50E3               	movf	plusw1,w,c
 14200  016390  E103               	bnz	u12021
 14201  016392  0EF7               	movlw	-9
 14202  016394  50E3               	movf	plusw1,w,c
 14203  016396  A4D8               	btfss	status,2,c
 14204  016398                     u12021:
 14205  016398  D6EB               	goto	l12600
 14206                           
 14207                           ;stkvar	_p @ sp[(-20)+18]
 14208  01639A  0EFF               	movlw	-1
 14209  01639C  BEE3               	btfsc	plusw1,7,c
 14210  01639E  D007               	goto	u12030
 14211  0163A0  0EFF               	movlw	-1
 14212  0163A2  50E3               	movf	plusw1,w,c
 14213  0163A4  E103               	bnz	u12031
 14214  0163A6  0EFE               	movlw	-2
 14215  0163A8  04E3               	decf	plusw1,w,c
 14216  0163AA  B0D8               	btfsc	status,0,c
 14217  0163AC                     u12031:
 14218  0163AC  D6E1               	goto	l12600
 14219  0163AE                     u12030:
 14220                           
 14221                           ;stkvar	_w @ sp[(-20)+16]
 14222  0163AE  0EFD               	movlw	-3
 14223  0163B0  BEE3               	btfsc	plusw1,7,c
 14224  0163B2  D009               	goto	u12050
 14225  0163B4  0EFD               	movlw	-3
 14226  0163B6  50E3               	movf	plusw1,w,c
 14227  0163B8  E104               	bnz	u12040
 14228  0163BA  0EFC               	movlw	-4
 14229  0163BC  04E3               	decf	plusw1,w,c
 14230  0163BE  A0D8               	btfss	status,0,c
 14231  0163C0  D002               	goto	u12050
 14232  0163C2                     u12040:
 14233  0163C2  B23E               	btfsc	_flags^0,1,c
 14234  0163C4  D6D5               	goto	l12600
 14235  0163C6                     u12050:
 14236                           
 14237                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 14238  0163C6  A83E               	btfss	_flags^0,4,c
 14239  0163C8  D036               	goto	l12648
 14240                           
 14241                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 14242                           ;stkvar	_i @ sp[(-20)+14]
 14243  0163CA  50E1               	movf	fsr1l,w,c
 14244  0163CC  0FFA               	addlw	-6
 14245  0163CE  6ED9               	movwf	fsr2l,c
 14246  0163D0  50E2               	movf	fsr1h,w,c
 14247  0163D2  6EDA               	movwf	fsr2h,c
 14248  0163D4  0EFF               	movlw	255
 14249  0163D6  22DA               	addwfc	fsr2h,f,c
 14250  0163D8  06DE               	decf	postinc2,f,c
 14251  0163DA  0E00               	movlw	0
 14252  0163DC  5ADD               	subwfb	postdec2,f,c
 14253                           
 14254                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 14255                           ;stkvar	_x @ sp[(-20)+-11]
 14256                           ;stkvar	_i @ sp[(-20)+14]
 14257  0163DE  0EFA               	movlw	-6
 14258  0163E0  006F FF8C  F00B    	movff	plusw1,btemp+10
 14259  0163E6  0EFB               	movlw	-5
 14260  0163E8  006F FF8C  F00C    	movff	plusw1,btemp+11
 14261  0163EE  0E97               	movlw	low _dbuf
 14262  0163F0  240B               	addwf	(btemp+10)^0,w,c
 14263  0163F2  6ED9               	movwf	fsr2l,c
 14264  0163F4  0E02               	movlw	high _dbuf
 14265  0163F6  200C               	addwfc	(btemp+11)^0,w,c
 14266  0163F8  6EDA               	movwf	fsr2h,c
 14267  0163FA  0EE1               	movlw	-31
 14268  0163FC  006F FF8F FFDF     	movff	plusw1,indf2
 14269                           
 14270                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 14271                           ;stkvar	_i @ sp[(-20)+14]
 14272  016402  50E1               	movf	fsr1l,w,c
 14273  016404  0FFA               	addlw	-6
 14274  016406  6ED9               	movwf	fsr2l,c
 14275  016408  50E2               	movf	fsr1h,w,c
 14276  01640A  6EDA               	movwf	fsr2h,c
 14277  01640C  0EFF               	movlw	255
 14278  01640E  22DA               	addwfc	fsr2h,f,c
 14279  016410  06DE               	decf	postinc2,f,c
 14280  016412  0E00               	movlw	0
 14281  016414  5ADD               	subwfb	postdec2,f,c
 14282                           
 14283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 14284                           ;stkvar	_i @ sp[(-20)+14]
 14285  016416  0EFA               	movlw	-6
 14286  016418  006F FF8C  F00B    	movff	plusw1,btemp+10
 14287  01641E  0EFB               	movlw	-5
 14288  016420  006F FF8C  F00C    	movff	plusw1,btemp+11
 14289  016426  0E97               	movlw	low _dbuf
 14290  016428  240B               	addwf	(btemp+10)^0,w,c
 14291  01642A  6ED9               	movwf	fsr2l,c
 14292  01642C  0E02               	movlw	high _dbuf
 14293  01642E  200C               	addwfc	(btemp+11)^0,w,c
 14294  016430  6EDA               	movwf	fsr2h,c
 14295  016432  0E30               	movlw	48
 14296  016434  6EDF               	movwf	indf2,c
 14297  016436                     l12648:
 14298                           
 14299                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 14300                           ;stkvar	_w @ sp[(-20)+16]
 14301  016436  0EFC               	movlw	-4
 14302  016438  006F FF8F FFE6     	movff	plusw1,postinc1
 14303  01643E  006F FF8F FFE6     	movff	plusw1,postinc1
 14304                           
 14305                           ;stkvar	_i @ sp[(-22)+14]
 14306  016444  0E97               	movlw	low _dbuf
 14307  016446  6E0B               	movwf	(btemp+10)^0,c
 14308  016448  0E02               	movlw	high _dbuf
 14309  01644A  6E0C               	movwf	(btemp+11)^0,c
 14310  01644C  0EF8               	movlw	-8
 14311  01644E  50E3               	movf	plusw1,w,c
 14312  016450  260B               	addwf	(btemp+10)^0,f,c
 14313  016452  0EF9               	movlw	-7
 14314  016454  50E3               	movf	plusw1,w,c
 14315  016456  220C               	addwfc	(btemp+11)^0,f,c
 14316  016458  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14317  01645E  0060  F033  FFE6   	movff	btemp+11,postinc1
 14318                           
 14319                           ;stkvar	_fp @ sp[(-24)+-2]
 14320  016464  0EE6               	movlw	-26
 14321  016466  006F FF8F FFE6     	movff	plusw1,postinc1
 14322  01646C  006F FF8F FFE6     	movff	plusw1,postinc1
 14323  016472  ECE2  F0CD         	call	_pad	;wreg free
 14324                           
 14325                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 14326  016476  0EE1               	movlw	225
 14327  016478  26E1               	addwf	fsr1l,f,c
 14328  01647A  0EFF               	movlw	255
 14329  01647C  22E2               	addwfc	fsr1h,f,c
 14330  01647E  0012               	return		;funcret
 14331  016480                     __end_of_xtoa:
 14332                           	opt callstack 0
 14333                           
 14334 ;; *************** function _toupper *****************
 14335 ;; Defined at:
 14336 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 14337 ;; Parameters:    Size  Location     Type
 14338 ;;  c               2  [STACK] int 
 14339 ;; Auto vars:     Size  Location     Type
 14340 ;;		None
 14341 ;; Return value:  Size  Location     Type
 14342 ;;                  2  [STACK] int 
 14343 ;; Registers used:
 14344 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 14345 ;; Tracked objects:
 14346 ;;		On entry : 0/2
 14347 ;;		On exit  : 0/0
 14348 ;;		Unchanged: 0/0
 14349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14354 ;;Total ram usage:        0 bytes
 14355 ;; Hardware stack levels used:    1
 14356 ;; Hardware stack levels required when called:   16
 14357 ;; This function calls:
 14358 ;;		_islower
 14359 ;; This function is called by:
 14360 ;;		_xtoa
 14361 ;; This function uses a reentrant model
 14362 ;;
 14363                           
 14364                           	psect	text51
 14365  01AE1A                     __ptext51:
 14366                           	opt callstack 0
 14367  01AE1A                     _toupper:
 14368                           	opt callstack 0
 14369                           
 14370                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14371  01AE1A  52E6               	movf	postinc1,f,c
 14372  01AE1C  52E6               	movf	postinc1,f,c
 14373                           
 14374                           ;stkvar	_c @ sp[(-2)+-2]
 14375                           
 14376                           ;incstack = 0
 14377 ;; hardware stack exceeded
 14378  01AE1E  0EFC               	movlw	-4
 14379  01AE20  50E3               	movf	plusw1,w,c
 14380  01AE22  0F9F               	addlw	159
 14381  01AE24  6E0B               	movwf	(btemp+10)^0,c
 14382  01AE26  0EFD               	movlw	-3
 14383  01AE28  006F FF8C  F00C    	movff	plusw1,btemp+11
 14384  01AE2E  0EFF               	movlw	255
 14385  01AE30  220C               	addwfc	(btemp+11)^0,f,c
 14386  01AE32  500C               	movf	(btemp+11)^0,w,c
 14387  01AE34  E106               	bnz	u6300
 14388  01AE36  0E1A               	movlw	26
 14389  01AE38  5C0B               	subwf	(btemp+10)^0,w,c
 14390  01AE3A  B0D8               	btfsc	status,0,c
 14391  01AE3C  D002               	goto	u6300
 14392  01AE3E  0E01               	movlw	1
 14393  01AE40  D001               	goto	u6310
 14394  01AE42                     u6300:
 14395  01AE42  0E00               	movlw	0
 14396  01AE44                     u6310:
 14397  01AE44  6E0B               	movwf	(btemp+10)^0,c
 14398  01AE46  6A0C               	clrf	(btemp+11)^0,c
 14399                           
 14400                           ;stkvar	_toupper$6486 @ sp[(-2)+0]
 14401  01AE48  0EFE               	movlw	-2
 14402  01AE4A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14403  01AE50  0EFF               	movlw	-1
 14404  01AE52  0060  F033  FFE3   	movff	btemp+11,plusw1
 14405                           
 14406                           ;stkvar	_toupper$6486 @ sp[(-2)+0]
 14407  01AE58  0EFE               	movlw	-2
 14408  01AE5A  006F FF8C  F001    	movff	plusw1,btemp
 14409  01AE60  0EFF               	movlw	-1
 14410  01AE62  50E3               	movf	plusw1,w,c
 14411  01AE64  1001               	iorwf	btemp^0,w,c
 14412  01AE66  B4D8               	btfsc	status,2,c
 14413  01AE68  D00D               	goto	l8228
 14414                           
 14415                           ;stkvar	_c @ sp[(-2)+-2]
 14416  01AE6A  0EFC               	movlw	-4
 14417  01AE6C  006F FF8C  F001    	movff	plusw1,btemp
 14418  01AE72  0EFD               	movlw	-3
 14419  01AE74  006F FF8C  F002    	movff	plusw1,btemp+1
 14420  01AE7A  0E5F               	movlw	95
 14421  01AE7C  1601               	andwf	btemp^0,f,c
 14422  01AE7E  0E00               	movlw	0
 14423  01AE80  1602               	andwf	(btemp+1)^0,f,c
 14424  01AE82  D008               	goto	l3539
 14425  01AE84                     l8228:
 14426                           
 14427                           ;stkvar	_c @ sp[(-2)+-2]
 14428  01AE84  0EFC               	movlw	-4
 14429  01AE86  006F FF8C  F001    	movff	plusw1,btemp
 14430  01AE8C  0EFD               	movlw	-3
 14431  01AE8E  006F FF8C  F002    	movff	plusw1,btemp+1
 14432  01AE94                     l3539:
 14433                           
 14434                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14435  01AE94  52E5               	movf	postdec1,f,c
 14436  01AE96  52E5               	movf	postdec1,f,c
 14437  01AE98  52E5               	movf	postdec1,f,c
 14438  01AE9A  52E5               	movf	postdec1,f,c
 14439  01AE9C  0012               	return		;funcret
 14440  01AE9E                     __end_of_toupper:
 14441                           	opt callstack 0
 14442                           
 14443 ;; *************** function _islower *****************
 14444 ;; Defined at:
 14445 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 14446 ;; Parameters:    Size  Location     Type
 14447 ;;  c               2  [STACK] int 
 14448 ;; Auto vars:     Size  Location     Type
 14449 ;;		None
 14450 ;; Return value:  Size  Location     Type
 14451 ;;                  2  [STACK] int 
 14452 ;; Registers used:
 14453 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 14454 ;; Tracked objects:
 14455 ;;		On entry : 0/0
 14456 ;;		On exit  : 0/0
 14457 ;;		Unchanged: 0/0
 14458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14463 ;;Total ram usage:        0 bytes
 14464 ;; Hardware stack levels used:    1
 14465 ;; Hardware stack levels required when called:   15
 14466 ;; This function calls:
 14467 ;;		Nothing
 14468 ;; This function is called by:
 14469 ;;		_toupper
 14470 ;; This function uses a reentrant model
 14471 ;;
 14472                           
 14473                           	psect	text52
 14474  01BC64                     __ptext52:
 14475                           	opt callstack 0
 14476  01BC64                     _islower:
 14477                           	opt callstack 0
 14478                           
 14479                           ;stkvar	_c @ sp[(0)+-2]
 14480                           
 14481                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14482                           ;incstack = 0
 14483 ;; hardware stack exceeded
 14484  01BC64  0EFE               	movlw	-2
 14485  01BC66  50E3               	movf	plusw1,w,c
 14486  01BC68  0F9F               	addlw	159
 14487  01BC6A  6E0B               	movwf	(btemp+10)^0,c
 14488  01BC6C  0EFF               	movlw	-1
 14489  01BC6E  006F FF8C  F00C    	movff	plusw1,btemp+11
 14490  01BC74  0EFF               	movlw	255
 14491  01BC76  220C               	addwfc	(btemp+11)^0,f,c
 14492  01BC78  500C               	movf	(btemp+11)^0,w,c
 14493  01BC7A  E106               	bnz	u5940
 14494  01BC7C  0E1A               	movlw	26
 14495  01BC7E  5C0B               	subwf	(btemp+10)^0,w,c
 14496  01BC80  B0D8               	btfsc	status,0,c
 14497  01BC82  D002               	goto	u5940
 14498  01BC84  0E01               	movlw	1
 14499  01BC86  D001               	goto	u5950
 14500  01BC88                     u5940:
 14501  01BC88  0E00               	movlw	0
 14502  01BC8A                     u5950:
 14503  01BC8A  6E01               	movwf	btemp^0,c
 14504  01BC8C  6A02               	clrf	(btemp+1)^0,c
 14505                           
 14506                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14507  01BC8E  52E5               	movf	postdec1,f,c
 14508  01BC90  52E5               	movf	postdec1,f,c
 14509  01BC92  0012               	return		;funcret
 14510  01BC94                     __end_of_islower:
 14511                           	opt callstack 0
 14512                           
 14513 ;; *************** function _isalpha *****************
 14514 ;; Defined at:
 14515 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 14516 ;; Parameters:    Size  Location     Type
 14517 ;;  c               2  [STACK] int 
 14518 ;; Auto vars:     Size  Location     Type
 14519 ;;		None
 14520 ;; Return value:  Size  Location     Type
 14521 ;;                  2  [STACK] int 
 14522 ;; Registers used:
 14523 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 14524 ;; Tracked objects:
 14525 ;;		On entry : 0/0
 14526 ;;		On exit  : 0/0
 14527 ;;		Unchanged: 0/0
 14528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14533 ;;Total ram usage:        0 bytes
 14534 ;; Hardware stack levels used:    1
 14535 ;; Hardware stack levels required when called:   15
 14536 ;; This function calls:
 14537 ;;		Nothing
 14538 ;; This function is called by:
 14539 ;;		_xtoa
 14540 ;; This function uses a reentrant model
 14541 ;;
 14542                           
 14543                           	psect	text53
 14544  01B8B2                     __ptext53:
 14545                           	opt callstack 0
 14546  01B8B2                     _isalpha:
 14547                           	opt callstack 0
 14548                           
 14549                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14550                           ;incstack = 0
 14551 ;; hardware stack exceeded
 14552  01B8B2  0E9F               	movlw	159
 14553  01B8B4  6E0B               	movwf	(btemp+10)^0,c
 14554  01B8B6  0EFF               	movlw	255
 14555  01B8B8  6E0C               	movwf	(btemp+11)^0,c
 14556                           
 14557                           ;stkvar	_c @ sp[(0)+-2]
 14558  01B8BA  0EFE               	movlw	-2
 14559  01B8BC  006F FF8C  F009    	movff	plusw1,btemp+8
 14560  01B8C2  0EFF               	movlw	-1
 14561  01B8C4  006F FF8C  F00A    	movff	plusw1,btemp+9
 14562  01B8CA  0E20               	movlw	32
 14563  01B8CC  1209               	iorwf	(btemp+8)^0,f,c
 14564  01B8CE  0E00               	movlw	0
 14565  01B8D0  120A               	iorwf	(btemp+9)^0,f,c
 14566  01B8D2  500B               	movf	(btemp+10)^0,w,c
 14567  01B8D4  2609               	addwf	(btemp+8)^0,f,c
 14568  01B8D6  500C               	movf	(btemp+11)^0,w,c
 14569  01B8D8  220A               	addwfc	(btemp+9)^0,f,c
 14570  01B8DA  500A               	movf	(btemp+9)^0,w,c
 14571  01B8DC  E106               	bnz	u6280
 14572  01B8DE  0E1A               	movlw	26
 14573  01B8E0  5C09               	subwf	(btemp+8)^0,w,c
 14574  01B8E2  B0D8               	btfsc	status,0,c
 14575  01B8E4  D002               	goto	u6280
 14576  01B8E6  0E01               	movlw	1
 14577  01B8E8  D001               	goto	u6290
 14578  01B8EA                     u6280:
 14579  01B8EA  0E00               	movlw	0
 14580  01B8EC                     u6290:
 14581  01B8EC  6E01               	movwf	btemp^0,c
 14582  01B8EE  6A02               	clrf	(btemp+1)^0,c
 14583                           
 14584                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14585  01B8F0  52E5               	movf	postdec1,f,c
 14586  01B8F2  52E5               	movf	postdec1,f,c
 14587  01B8F4  0012               	return		;funcret
 14588  01B8F6                     __end_of_isalpha:
 14589                           	opt callstack 0
 14590                           
 14591 ;; *************** function _utoa *****************
 14592 ;; Defined at:
 14593 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14594 ;; Parameters:    Size  Location     Type
 14595 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14596 ;;		 -> f(6), NULL(0), 
 14597 ;;  d               8  [STACK] unsigned long long 
 14598 ;; Auto vars:     Size  Location     Type
 14599 ;;  n               8  [STACK] unsigned long long 
 14600 ;;  i               2  [STACK] int 
 14601 ;;  w               2  [STACK] int 
 14602 ;;  p               2  [STACK] int 
 14603 ;; Return value:  Size  Location     Type
 14604 ;;                  2  [STACK] int 
 14605 ;; Registers used:
 14606 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 14607 ;; Tracked objects:
 14608 ;;		On entry : 0/0
 14609 ;;		On exit  : 0/0
 14610 ;;		Unchanged: 0/0
 14611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14616 ;;Total ram usage:        0 bytes
 14617 ;; Hardware stack levels used:    1
 14618 ;; Hardware stack levels required when called:   20
 14619 ;; This function calls:
 14620 ;;		___lodiv
 14621 ;;		___lomod
 14622 ;;		_pad
 14623 ;; This function is called by:
 14624 ;;		_vfpfcnvrt
 14625 ;; This function uses a reentrant model
 14626 ;;
 14627                           
 14628                           	psect	text54
 14629  0167EC                     __ptext54:
 14630                           	opt callstack 0
 14631  0167EC                     _utoa:
 14632                           	opt callstack 0
 14633                           
 14634                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 14635  0167EC  0E0E               	movlw	14
 14636  0167EE  26E1               	addwf	fsr1l,f,c
 14637  0167F0  0E00               	movlw	0
 14638  0167F2  22E2               	addwfc	fsr1h,f,c
 14639                           
 14640                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 14641                           
 14642                           ;incstack = 0
 14643 ;; hardware stack exceeded
 14644  0167F4  AE3D               	btfss	(_prec+1)^0,7,c
 14645                           
 14646                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 14647  0167F6  923E               	bcf	_flags^0,1,c
 14648                           
 14649                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 14650  0167F8  BE3D               	btfsc	(_prec+1)^0,7,c
 14651  0167FA  D005               	goto	u11820
 14652  0167FC  503D               	movf	(_prec+1)^0,w,c
 14653  0167FE  E110               	bnz	l12548
 14654  016800  043C               	decf	_prec^0,w,c
 14655  016802  B0D8               	btfsc	status,0,c
 14656  016804  D00D               	goto	l12548
 14657  016806                     u11820:
 14658  016806  0E01               	movlw	1
 14659  016808  6E0B               	movwf	(btemp+10)^0,c
 14660  01680A  0E00               	movlw	0
 14661  01680C  6E0C               	movwf	(btemp+11)^0,c
 14662                           
 14663                           ;stkvar	_p @ sp[(-14)+12]
 14664  01680E  0EFE               	movlw	-2
 14665  016810  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14666  016816  0EFF               	movlw	-1
 14667  016818  0060  F033  FFE3   	movff	btemp+11,plusw1
 14668  01681E  D008               	goto	l2357
 14669  016820                     l12548:
 14670                           
 14671                           ;stkvar	_p @ sp[(-14)+12]
 14672  016820  0EFE               	movlw	-2
 14673  016822  0060  F0F3  FFE3   	movff	_prec,plusw1
 14674  016828  0EFF               	movlw	-1
 14675  01682A  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 14676  016830                     l2357:
 14677                           
 14678                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 14679                           ;stkvar	_w @ sp[(-14)+10]
 14680  016830  0EFC               	movlw	-4
 14681  016832  0060  F0EB  FFE3   	movff	_width,plusw1
 14682  016838  0EFD               	movlw	-3
 14683  01683A  0060  F0EF  FFE3   	movff	_width+1,plusw1
 14684                           
 14685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 14686                           ;stkvar	_d @ sp[(-14)+-10]
 14687  016840  0EE8               	movlw	232
 14688  016842  24E1               	addwf	fsr1l,w,c
 14689  016844  6ED9               	movwf	fsr2l,c
 14690  016846  0EFF               	movlw	255
 14691  016848  20E2               	addwfc	fsr1h,w,c
 14692  01684A  6EDA               	movwf	fsr2h,c
 14693                           
 14694                           ;stkvar	_n @ sp[(-14)+0]
 14695  01684C  0E08               	movlw	8
 14696  01684E  6E01               	movwf	btemp^0,c
 14697  016850  0EF2               	movlw	-14
 14698  016852                     us1183999:
 14699  016852  006F FF7B FFE3     	movff	postinc2,plusw1
 14700  016858  28E8               	incf	wreg,w,c
 14701  01685A  2E01               	decfsz	btemp^0,f,c
 14702  01685C  D7FA               	bra	us1183999
 14703                           
 14704                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 14705  01685E  0E4F               	movlw	79
 14706  016860  6E0B               	movwf	(btemp+10)^0,c
 14707  016862  0E00               	movlw	0
 14708  016864  6E0C               	movwf	(btemp+11)^0,c
 14709                           
 14710                           ;stkvar	_i @ sp[(-14)+8]
 14711  016866  0EFA               	movlw	-6
 14712  016868  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14713  01686E  0EFB               	movlw	-5
 14714  016870  0060  F033  FFE3   	movff	btemp+11,plusw1
 14715                           
 14716                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 14717  016876  0102               	movlb	2	; () banked
 14718  016878  6BE6               	clrf	(_dbuf+79)& (0+255),b
 14719                           
 14720                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 14721  01687A  D0FB               	goto	l12566
 14722  01687C                     l12556:
 14723                           
 14724                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 14725                           ;stkvar	_i @ sp[(-14)+8]
 14726  01687C  50E1               	movf	fsr1l,w,c
 14727  01687E  0FFA               	addlw	-6
 14728  016880  6ED9               	movwf	fsr2l,c
 14729  016882  50E2               	movf	fsr1h,w,c
 14730  016884  6EDA               	movwf	fsr2h,c
 14731  016886  0EFF               	movlw	255
 14732  016888  22DA               	addwfc	fsr2h,f,c
 14733  01688A  06DE               	decf	postinc2,f,c
 14734  01688C  0E00               	movlw	0
 14735  01688E  5ADD               	subwfb	postdec2,f,c
 14736                           
 14737                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 14738  016890  0E0A               	movlw	10
 14739  016892  6EE6               	movwf	postinc1,c
 14740  016894  0E00               	movlw	0
 14741  016896  6EE6               	movwf	postinc1,c
 14742  016898  0E00               	movlw	0
 14743  01689A  6EE6               	movwf	postinc1,c
 14744  01689C  0E00               	movlw	0
 14745  01689E  6EE6               	movwf	postinc1,c
 14746  0168A0  0E00               	movlw	0
 14747  0168A2  6EE6               	movwf	postinc1,c
 14748  0168A4  0E00               	movlw	0
 14749  0168A6  6EE6               	movwf	postinc1,c
 14750  0168A8  0E00               	movlw	0
 14751  0168AA  6EE6               	movwf	postinc1,c
 14752  0168AC  0E00               	movlw	0
 14753  0168AE  6EE6               	movwf	postinc1,c
 14754                           
 14755                           ;stkvar	_n @ sp[(-22)+0]
 14756  0168B0  50E1               	movf	fsr1l,w,c
 14757  0168B2  0FEA               	addlw	-22
 14758  0168B4  6ED9               	movwf	fsr2l,c
 14759  0168B6  50E2               	movf	fsr1h,w,c
 14760  0168B8  6EDA               	movwf	fsr2h,c
 14761  0168BA  0EFF               	movlw	255
 14762  0168BC  22DA               	addwfc	fsr2h,f,c
 14763  0168BE  006F FF7B FFE6     	movff	postinc2,postinc1
 14764  0168C4  006F FF7B FFE6     	movff	postinc2,postinc1
 14765  0168CA  006F FF7B FFE6     	movff	postinc2,postinc1
 14766  0168D0  006F FF7B FFE6     	movff	postinc2,postinc1
 14767  0168D6  006F FF7B FFE6     	movff	postinc2,postinc1
 14768  0168DC  006F FF7B FFE6     	movff	postinc2,postinc1
 14769  0168E2  006F FF7B FFE6     	movff	postinc2,postinc1
 14770  0168E8  006F FF7B FFE6     	movff	postinc2,postinc1
 14771  0168EE  ECF2  F0CA         	call	___lomod	;wreg free
 14772  0168F2  52E5               	movf	postdec1,f,c
 14773  0168F4  006F FF9C  F018    	movff	indf1,btemp+23
 14774  0168FA  52E5               	movf	postdec1,f,c
 14775  0168FC  006F FF9C  F017    	movff	indf1,btemp+22
 14776  016902  52E5               	movf	postdec1,f,c
 14777  016904  006F FF9C  F016    	movff	indf1,btemp+21
 14778  01690A  52E5               	movf	postdec1,f,c
 14779  01690C  006F FF9C  F015    	movff	indf1,btemp+20
 14780  016912  52E5               	movf	postdec1,f,c
 14781  016914  006F FF9C  F014    	movff	indf1,btemp+19
 14782  01691A  52E5               	movf	postdec1,f,c
 14783  01691C  006F FF9C  F013    	movff	indf1,btemp+18
 14784  016922  52E5               	movf	postdec1,f,c
 14785  016924  006F FF9C  F012    	movff	indf1,btemp+17
 14786  01692A  52E5               	movf	postdec1,f,c
 14787  01692C  006F FF9C  F011    	movff	indf1,btemp+16
 14788  016932  0EF8               	movlw	248
 14789  016934  26E1               	addwf	fsr1l,f,c
 14790  016936  0EFF               	movlw	255
 14791  016938  22E2               	addwfc	fsr1h,f,c
 14792  01693A  0E30               	movlw	48
 14793  01693C  2611               	addwf	(btemp+16)^0,f,c
 14794                           
 14795                           ;stkvar	_i @ sp[(-14)+8]
 14796  01693E  0EFA               	movlw	-6
 14797  016940  006F FF8C  F00B    	movff	plusw1,btemp+10
 14798  016946  0EFB               	movlw	-5
 14799  016948  006F FF8C  F00C    	movff	plusw1,btemp+11
 14800  01694E  0E97               	movlw	low _dbuf
 14801  016950  240B               	addwf	(btemp+10)^0,w,c
 14802  016952  6ED9               	movwf	fsr2l,c
 14803  016954  0E02               	movlw	high _dbuf
 14804  016956  200C               	addwfc	(btemp+11)^0,w,c
 14805  016958  6EDA               	movwf	fsr2h,c
 14806  01695A  0060  F047  FFDF   	movff	btemp+16,indf2
 14807                           
 14808                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 14809                           ;stkvar	_p @ sp[(-14)+12]
 14810  016960  50E1               	movf	fsr1l,w,c
 14811  016962  0FFE               	addlw	-2
 14812  016964  6ED9               	movwf	fsr2l,c
 14813  016966  50E2               	movf	fsr1h,w,c
 14814  016968  6EDA               	movwf	fsr2h,c
 14815  01696A  0EFF               	movlw	255
 14816  01696C  22DA               	addwfc	fsr2h,f,c
 14817  01696E  06DE               	decf	postinc2,f,c
 14818  016970  0E00               	movlw	0
 14819  016972  5ADD               	subwfb	postdec2,f,c
 14820                           
 14821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 14822                           ;stkvar	_w @ sp[(-14)+10]
 14823  016974  50E1               	movf	fsr1l,w,c
 14824  016976  0FFC               	addlw	-4
 14825  016978  6ED9               	movwf	fsr2l,c
 14826  01697A  50E2               	movf	fsr1h,w,c
 14827  01697C  6EDA               	movwf	fsr2h,c
 14828  01697E  0EFF               	movlw	255
 14829  016980  22DA               	addwfc	fsr2h,f,c
 14830  016982  06DE               	decf	postinc2,f,c
 14831  016984  0E00               	movlw	0
 14832  016986  5ADD               	subwfb	postdec2,f,c
 14833                           
 14834                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 14835  016988  0E0A               	movlw	10
 14836  01698A  6EE6               	movwf	postinc1,c
 14837  01698C  0E00               	movlw	0
 14838  01698E  6EE6               	movwf	postinc1,c
 14839  016990  0E00               	movlw	0
 14840  016992  6EE6               	movwf	postinc1,c
 14841  016994  0E00               	movlw	0
 14842  016996  6EE6               	movwf	postinc1,c
 14843  016998  0E00               	movlw	0
 14844  01699A  6EE6               	movwf	postinc1,c
 14845  01699C  0E00               	movlw	0
 14846  01699E  6EE6               	movwf	postinc1,c
 14847  0169A0  0E00               	movlw	0
 14848  0169A2  6EE6               	movwf	postinc1,c
 14849  0169A4  0E00               	movlw	0
 14850  0169A6  6EE6               	movwf	postinc1,c
 14851                           
 14852                           ;stkvar	_n @ sp[(-22)+0]
 14853  0169A8  50E1               	movf	fsr1l,w,c
 14854  0169AA  0FEA               	addlw	-22
 14855  0169AC  6ED9               	movwf	fsr2l,c
 14856  0169AE  50E2               	movf	fsr1h,w,c
 14857  0169B0  6EDA               	movwf	fsr2h,c
 14858  0169B2  0EFF               	movlw	255
 14859  0169B4  22DA               	addwfc	fsr2h,f,c
 14860  0169B6  006F FF7B FFE6     	movff	postinc2,postinc1
 14861  0169BC  006F FF7B FFE6     	movff	postinc2,postinc1
 14862  0169C2  006F FF7B FFE6     	movff	postinc2,postinc1
 14863  0169C8  006F FF7B FFE6     	movff	postinc2,postinc1
 14864  0169CE  006F FF7B FFE6     	movff	postinc2,postinc1
 14865  0169D4  006F FF7B FFE6     	movff	postinc2,postinc1
 14866  0169DA  006F FF7B FFE6     	movff	postinc2,postinc1
 14867  0169E0  006F FF7B FFE6     	movff	postinc2,postinc1
 14868  0169E6  EC6F  F0C7         	call	___lodiv	;wreg free
 14869  0169EA  52E5               	movf	postdec1,f,c
 14870  0169EC  006F FF9C  F018    	movff	indf1,btemp+23
 14871  0169F2  52E5               	movf	postdec1,f,c
 14872  0169F4  006F FF9C  F017    	movff	indf1,btemp+22
 14873  0169FA  52E5               	movf	postdec1,f,c
 14874  0169FC  006F FF9C  F016    	movff	indf1,btemp+21
 14875  016A02  52E5               	movf	postdec1,f,c
 14876  016A04  006F FF9C  F015    	movff	indf1,btemp+20
 14877  016A0A  52E5               	movf	postdec1,f,c
 14878  016A0C  006F FF9C  F014    	movff	indf1,btemp+19
 14879  016A12  52E5               	movf	postdec1,f,c
 14880  016A14  006F FF9C  F013    	movff	indf1,btemp+18
 14881  016A1A  52E5               	movf	postdec1,f,c
 14882  016A1C  006F FF9C  F012    	movff	indf1,btemp+17
 14883  016A22  52E5               	movf	postdec1,f,c
 14884  016A24  006F FF9C  F011    	movff	indf1,btemp+16
 14885  016A2A  0EF8               	movlw	248
 14886  016A2C  26E1               	addwf	fsr1l,f,c
 14887  016A2E  0EFF               	movlw	255
 14888  016A30  22E2               	addwfc	fsr1h,f,c
 14889                           
 14890                           ;stkvar	_n @ sp[(-14)+0]
 14891  016A32  0EF2               	movlw	-14
 14892  016A34  0060  F047  FFE3   	movff	btemp+16,plusw1
 14893  016A3A  0EF3               	movlw	-13
 14894  016A3C  0060  F04B  FFE3   	movff	btemp+17,plusw1
 14895  016A42  0EF4               	movlw	-12
 14896  016A44  0060  F04F  FFE3   	movff	btemp+18,plusw1
 14897  016A4A  0EF5               	movlw	-11
 14898  016A4C  0060  F053  FFE3   	movff	btemp+19,plusw1
 14899  016A52  0EF6               	movlw	-10
 14900  016A54  0060  F057  FFE3   	movff	btemp+20,plusw1
 14901  016A5A  0EF7               	movlw	-9
 14902  016A5C  0060  F05B  FFE3   	movff	btemp+21,plusw1
 14903  016A62  0EF8               	movlw	-8
 14904  016A64  0060  F05F  FFE3   	movff	btemp+22,plusw1
 14905  016A6A  0EF9               	movlw	-7
 14906  016A6C  0060  F063  FFE3   	movff	btemp+23,plusw1
 14907  016A72                     l12566:
 14908                           
 14909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 14910                           ;stkvar	_i @ sp[(-14)+8]
 14911  016A72  0EFA               	movlw	-6
 14912  016A74  006F FF8C  F001    	movff	plusw1,btemp
 14913  016A7A  0EFB               	movlw	-5
 14914  016A7C  50E3               	movf	plusw1,w,c
 14915  016A7E  1001               	iorwf	btemp^0,w,c
 14916  016A80  B4D8               	btfsc	status,2,c
 14917  016A82  D02F               	goto	u11880
 14918                           
 14919                           ;stkvar	_n @ sp[(-14)+0]
 14920  016A84  0EF2               	movlw	-14
 14921  016A86  50E3               	movf	plusw1,w,c
 14922  016A88  E115               	bnz	u11851
 14923  016A8A  0EF3               	movlw	-13
 14924  016A8C  50E3               	movf	plusw1,w,c
 14925  016A8E  E112               	bnz	u11851
 14926  016A90  0EF4               	movlw	-12
 14927  016A92  50E3               	movf	plusw1,w,c
 14928  016A94  E10F               	bnz	u11851
 14929  016A96  0EF5               	movlw	-11
 14930  016A98  50E3               	movf	plusw1,w,c
 14931  016A9A  E10C               	bnz	u11851
 14932  016A9C  0EF6               	movlw	-10
 14933  016A9E  50E3               	movf	plusw1,w,c
 14934  016AA0  E109               	bnz	u11851
 14935  016AA2  0EF7               	movlw	-9
 14936  016AA4  50E3               	movf	plusw1,w,c
 14937  016AA6  E106               	bnz	u11851
 14938  016AA8  0EF8               	movlw	-8
 14939  016AAA  50E3               	movf	plusw1,w,c
 14940  016AAC  E103               	bnz	u11851
 14941  016AAE  0EF9               	movlw	-7
 14942  016AB0  50E3               	movf	plusw1,w,c
 14943  016AB2  A4D8               	btfss	status,2,c
 14944  016AB4                     u11851:
 14945  016AB4  D6E3               	goto	l12556
 14946                           
 14947                           ;stkvar	_p @ sp[(-14)+12]
 14948  016AB6  0EFF               	movlw	-1
 14949  016AB8  BEE3               	btfsc	plusw1,7,c
 14950  016ABA  D007               	goto	u11860
 14951  016ABC  0EFF               	movlw	-1
 14952  016ABE  50E3               	movf	plusw1,w,c
 14953  016AC0  E103               	bnz	u11861
 14954  016AC2  0EFE               	movlw	-2
 14955  016AC4  04E3               	decf	plusw1,w,c
 14956  016AC6  B0D8               	btfsc	status,0,c
 14957  016AC8                     u11861:
 14958  016AC8  D6D9               	goto	l12556
 14959  016ACA                     u11860:
 14960                           
 14961                           ;stkvar	_w @ sp[(-14)+10]
 14962  016ACA  0EFD               	movlw	-3
 14963  016ACC  BEE3               	btfsc	plusw1,7,c
 14964  016ACE  D009               	goto	u11880
 14965  016AD0  0EFD               	movlw	-3
 14966  016AD2  50E3               	movf	plusw1,w,c
 14967  016AD4  E104               	bnz	u11870
 14968  016AD6  0EFC               	movlw	-4
 14969  016AD8  04E3               	decf	plusw1,w,c
 14970  016ADA  A0D8               	btfss	status,0,c
 14971  016ADC  D002               	goto	u11880
 14972  016ADE                     u11870:
 14973  016ADE  B23E               	btfsc	_flags^0,1,c
 14974  016AE0  D6CD               	goto	l12556
 14975  016AE2                     u11880:
 14976                           
 14977                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 14978                           ;stkvar	_w @ sp[(-14)+10]
 14979  016AE2  0EFC               	movlw	-4
 14980  016AE4  006F FF8F FFE6     	movff	plusw1,postinc1
 14981  016AEA  006F FF8F FFE6     	movff	plusw1,postinc1
 14982                           
 14983                           ;stkvar	_i @ sp[(-16)+8]
 14984  016AF0  0E97               	movlw	low _dbuf
 14985  016AF2  6E0B               	movwf	(btemp+10)^0,c
 14986  016AF4  0E02               	movlw	high _dbuf
 14987  016AF6  6E0C               	movwf	(btemp+11)^0,c
 14988  016AF8  0EF8               	movlw	-8
 14989  016AFA  50E3               	movf	plusw1,w,c
 14990  016AFC  260B               	addwf	(btemp+10)^0,f,c
 14991  016AFE  0EF9               	movlw	-7
 14992  016B00  50E3               	movf	plusw1,w,c
 14993  016B02  220C               	addwfc	(btemp+11)^0,f,c
 14994  016B04  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14995  016B0A  0060  F033  FFE6   	movff	btemp+11,postinc1
 14996                           
 14997                           ;stkvar	_fp @ sp[(-18)+-2]
 14998  016B10  0EEC               	movlw	-20
 14999  016B12  006F FF8F FFE6     	movff	plusw1,postinc1
 15000  016B18  006F FF8F FFE6     	movff	plusw1,postinc1
 15001  016B1E  ECE2  F0CD         	call	_pad	;wreg free
 15002                           
 15003                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 15004  016B22  0EE8               	movlw	232
 15005  016B24  26E1               	addwf	fsr1l,f,c
 15006  016B26  0EFF               	movlw	255
 15007  016B28  22E2               	addwfc	fsr1h,f,c
 15008  016B2A  0012               	return		;funcret
 15009  016B2C                     __end_of_utoa:
 15010                           	opt callstack 0
 15011                           
 15012 ;; *************** function ___lomod *****************
 15013 ;; Defined at:
 15014 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 15015 ;; Parameters:    Size  Location     Type
 15016 ;;  dividend        8  [STACK] unsigned long long 
 15017 ;;  divisor         8  [STACK] unsigned long long 
 15018 ;; Auto vars:     Size  Location     Type
 15019 ;;  counter         1  [STACK] unsigned char 
 15020 ;; Return value:  Size  Location     Type
 15021 ;;                  8  [STACK] unsigned long long 
 15022 ;; Registers used:
 15023 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 15024 ;; Tracked objects:
 15025 ;;		On entry : 0/2
 15026 ;;		On exit  : 0/0
 15027 ;;		Unchanged: 0/0
 15028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15033 ;;Total ram usage:        0 bytes
 15034 ;; Hardware stack levels used:    1
 15035 ;; Hardware stack levels required when called:   15
 15036 ;; This function calls:
 15037 ;;		Nothing
 15038 ;; This function is called by:
 15039 ;;		_utoa
 15040 ;; This function uses a reentrant model
 15041 ;;
 15042                           
 15043                           	psect	text55
 15044  0195E4                     __ptext55:
 15045                           	opt callstack 0
 15046  0195E4                     ___lomod:
 15047                           	opt callstack 0
 15048                           
 15049                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 15050  0195E4  52E6               	movf	postinc1,f,c
 15051                           
 15052                           ;stkvar	_divisor @ sp[(-1)+-16]
 15053                           
 15054                           ;incstack = 0
 15055 ;; hardware stack exceeded
 15056  0195E6  0EEF               	movlw	-17
 15057  0195E8  50E3               	movf	plusw1,w,c
 15058  0195EA  E116               	bnz	u7430
 15059  0195EC  0EF0               	movlw	-16
 15060  0195EE  50E3               	movf	plusw1,w,c
 15061  0195F0  E113               	bnz	u7430
 15062  0195F2  0EF1               	movlw	-15
 15063  0195F4  50E3               	movf	plusw1,w,c
 15064  0195F6  E110               	bnz	u7430
 15065  0195F8  0EF2               	movlw	-14
 15066  0195FA  50E3               	movf	plusw1,w,c
 15067  0195FC  E10D               	bnz	u7430
 15068  0195FE  0EF3               	movlw	-13
 15069  019600  50E3               	movf	plusw1,w,c
 15070  019602  E10A               	bnz	u7430
 15071  019604  0EF4               	movlw	-12
 15072  019606  50E3               	movf	plusw1,w,c
 15073  019608  E107               	bnz	u7430
 15074  01960A  0EF5               	movlw	-11
 15075  01960C  50E3               	movf	plusw1,w,c
 15076  01960E  E104               	bnz	u7430
 15077  019610  0EF6               	movlw	-10
 15078  019612  50E3               	movf	plusw1,w,c
 15079  019614  B4D8               	btfsc	status,2,c
 15080  019616  D075               	goto	u7460
 15081  019618                     u7430:
 15082                           
 15083                           ;stkvar	_counter @ sp[(-1)+0]
 15084  019618  0EFF               	movlw	-1
 15085  01961A  6AE3               	clrf	plusw1,c
 15086  01961C  D012               	goto	L15
 15087  01961E                     l8838:
 15088                           
 15089                           ;stkvar	_divisor @ sp[(-1)+-16]
 15090  01961E  90D8               	bcf	status,0,c
 15091  019620  0EEF               	movlw	-17
 15092  019622  36E3               	rlcf	plusw1,f,c
 15093  019624  0EF0               	movlw	-16
 15094  019626  36E3               	rlcf	plusw1,f,c
 15095  019628  0EF1               	movlw	-15
 15096  01962A  36E3               	rlcf	plusw1,f,c
 15097  01962C  0EF2               	movlw	-14
 15098  01962E  36E3               	rlcf	plusw1,f,c
 15099  019630  0EF3               	movlw	-13
 15100  019632  36E3               	rlcf	plusw1,f,c
 15101  019634  0EF4               	movlw	-12
 15102  019636  36E3               	rlcf	plusw1,f,c
 15103  019638  0EF5               	movlw	-11
 15104  01963A  36E3               	rlcf	plusw1,f,c
 15105  01963C  0EF6               	movlw	-10
 15106  01963E  36E3               	rlcf	plusw1,f,c
 15107                           
 15108                           ;stkvar	_counter @ sp[(-1)+0]
 15109  019640  0EFF               	movlw	-1
 15110  019642                     L15:
 15111  019642  2AE3               	incf	plusw1,f,c
 15112                           
 15113                           ;stkvar	_divisor @ sp[(-1)+-16]
 15114  019644  0EF6               	movlw	-10
 15115  019646  AEE3               	btfss	plusw1,7,c
 15116  019648  D7EA               	goto	l8838
 15117  01964A                     u7440:
 15118                           
 15119                           ;stkvar	_divisor @ sp[(-1)+-16]
 15120                           ;stkvar	_dividend @ sp[(-1)+-8]
 15121  01964A  50E1               	movf	fsr1l,w,c
 15122  01964C  0FF7               	addlw	-9
 15123  01964E  6ED9               	movwf	fsr2l,c
 15124  019650  50E2               	movf	fsr1h,w,c
 15125  019652  6EDA               	movwf	fsr2h,c
 15126  019654  0EFF               	movlw	255
 15127  019656  22DA               	addwfc	fsr2h,f,c
 15128  019658  0EEF               	movlw	-17
 15129  01965A  50E3               	movf	plusw1,w,c
 15130  01965C  5CDE               	subwf	postinc2,w,c
 15131  01965E  0EF0               	movlw	-16
 15132  019660  50E3               	movf	plusw1,w,c
 15133  019662  58DE               	subwfb	postinc2,w,c
 15134  019664  0EF1               	movlw	-15
 15135  019666  50E3               	movf	plusw1,w,c
 15136  019668  58DE               	subwfb	postinc2,w,c
 15137  01966A  0EF2               	movlw	-14
 15138  01966C  50E3               	movf	plusw1,w,c
 15139  01966E  58DE               	subwfb	postinc2,w,c
 15140  019670  0EF3               	movlw	-13
 15141  019672  50E3               	movf	plusw1,w,c
 15142  019674  58DE               	subwfb	postinc2,w,c
 15143  019676  0EF4               	movlw	-12
 15144  019678  50E3               	movf	plusw1,w,c
 15145  01967A  58DE               	subwfb	postinc2,w,c
 15146  01967C  0EF5               	movlw	-11
 15147  01967E  50E3               	movf	plusw1,w,c
 15148  019680  58DE               	subwfb	postinc2,w,c
 15149  019682  0EF6               	movlw	-10
 15150  019684  50E3               	movf	plusw1,w,c
 15151  019686  58DE               	subwfb	postinc2,w,c
 15152  019688  A0D8               	btfss	status,0,c
 15153  01968A  D01F               	goto	l8846
 15154                           
 15155                           ;stkvar	_divisor @ sp[(-1)+-16]
 15156                           ;stkvar	_dividend @ sp[(-1)+-8]
 15157  01968C  50E1               	movf	fsr1l,w,c
 15158  01968E  0FF7               	addlw	-9
 15159  019690  6ED9               	movwf	fsr2l,c
 15160  019692  50E2               	movf	fsr1h,w,c
 15161  019694  6EDA               	movwf	fsr2h,c
 15162  019696  0EFF               	movlw	255
 15163  019698  22DA               	addwfc	fsr2h,f,c
 15164  01969A  0EEF               	movlw	-17
 15165  01969C  50E3               	movf	plusw1,w,c
 15166  01969E  5EDE               	subwf	postinc2,f,c
 15167  0196A0  0EF0               	movlw	-16
 15168  0196A2  50E3               	movf	plusw1,w,c
 15169  0196A4  5ADE               	subwfb	postinc2,f,c
 15170  0196A6  0EF1               	movlw	-15
 15171  0196A8  50E3               	movf	plusw1,w,c
 15172  0196AA  5ADE               	subwfb	postinc2,f,c
 15173  0196AC  0EF2               	movlw	-14
 15174  0196AE  50E3               	movf	plusw1,w,c
 15175  0196B0  5ADE               	subwfb	postinc2,f,c
 15176  0196B2  0EF3               	movlw	-13
 15177  0196B4  50E3               	movf	plusw1,w,c
 15178  0196B6  5ADE               	subwfb	postinc2,f,c
 15179  0196B8  0EF4               	movlw	-12
 15180  0196BA  50E3               	movf	plusw1,w,c
 15181  0196BC  5ADE               	subwfb	postinc2,f,c
 15182  0196BE  0EF5               	movlw	-11
 15183  0196C0  50E3               	movf	plusw1,w,c
 15184  0196C2  5ADE               	subwfb	postinc2,f,c
 15185  0196C4  0EF6               	movlw	-10
 15186  0196C6  50E3               	movf	plusw1,w,c
 15187  0196C8  5ADE               	subwfb	postinc2,f,c
 15188  0196CA                     l8846:
 15189                           
 15190                           ;stkvar	_divisor @ sp[(-1)+-16]
 15191  0196CA  90D8               	bcf	status,0,c
 15192  0196CC  0EF6               	movlw	-10
 15193  0196CE  32E3               	rrcf	plusw1,f,c
 15194  0196D0  0EF5               	movlw	-11
 15195  0196D2  32E3               	rrcf	plusw1,f,c
 15196  0196D4  0EF4               	movlw	-12
 15197  0196D6  32E3               	rrcf	plusw1,f,c
 15198  0196D8  0EF3               	movlw	-13
 15199  0196DA  32E3               	rrcf	plusw1,f,c
 15200  0196DC  0EF2               	movlw	-14
 15201  0196DE  32E3               	rrcf	plusw1,f,c
 15202  0196E0  0EF1               	movlw	-15
 15203  0196E2  32E3               	rrcf	plusw1,f,c
 15204  0196E4  0EF0               	movlw	-16
 15205  0196E6  32E3               	rrcf	plusw1,f,c
 15206  0196E8  0EEF               	movlw	-17
 15207  0196EA  32E3               	rrcf	plusw1,f,c
 15208                           
 15209                           ;stkvar	_counter @ sp[(-1)+0]
 15210  0196EC  0EFF               	movlw	-1
 15211  0196EE  50E3               	movf	plusw1,w,c
 15212  0196F0  6E01               	movwf	btemp^0,c
 15213  0196F2  0E01               	movlw	1
 15214  0196F4  5E01               	subwf	btemp^0,f,c
 15215  0196F6  0EFF               	movlw	-1
 15216  0196F8  0060  F007  FFE3   	movff	btemp,plusw1
 15217  0196FE  A4D8               	btfss	status,2,c
 15218  019700  D7A4               	goto	u7440
 15219  019702                     u7460:
 15220                           
 15221                           ;stkvar	_dividend @ sp[(-1)+-8]
 15222  019702  0EF7               	movlw	247
 15223  019704  24E1               	addwf	fsr1l,w,c
 15224  019706  6ED9               	movwf	fsr2l,c
 15225  019708  0EFF               	movlw	255
 15226  01970A  20E2               	addwfc	fsr1h,w,c
 15227  01970C  6EDA               	movwf	fsr2h,c
 15228                           
 15229                           ;stkvar	?___lomod @ sp[(-1)+-8]
 15230  01970E  0E08               	movlw	8
 15231  019710  6E01               	movwf	btemp^0,c
 15232  019712  0EF7               	movlw	-9
 15233  019714                     us747999:
 15234  019714  006F FF7B FFE3     	movff	postinc2,plusw1
 15235  01971A  28E8               	incf	wreg,w,c
 15236  01971C  2E01               	decfsz	btemp^0,f,c
 15237  01971E  D7FA               	bra	us747999
 15238                           
 15239                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 15240  019720  52E5               	movf	postdec1,f,c
 15241  019722  0012               	return		;funcret
 15242  019724                     __end_of___lomod:
 15243                           	opt callstack 0
 15244                           
 15245 ;; *************** function ___lodiv *****************
 15246 ;; Defined at:
 15247 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 15248 ;; Parameters:    Size  Location     Type
 15249 ;;  dividend        8  [STACK] unsigned long long 
 15250 ;;  divisor         8  [STACK] unsigned long long 
 15251 ;; Auto vars:     Size  Location     Type
 15252 ;;  quotient        8  [STACK] unsigned long long 
 15253 ;;  counter         1  [STACK] unsigned char 
 15254 ;; Return value:  Size  Location     Type
 15255 ;;                  8  [STACK] unsigned long long 
 15256 ;; Registers used:
 15257 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 15258 ;; Tracked objects:
 15259 ;;		On entry : 0/2
 15260 ;;		On exit  : 0/0
 15261 ;;		Unchanged: 0/0
 15262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15267 ;;Total ram usage:        0 bytes
 15268 ;; Hardware stack levels used:    1
 15269 ;; Hardware stack levels required when called:   15
 15270 ;; This function calls:
 15271 ;;		Nothing
 15272 ;; This function is called by:
 15273 ;;		_utoa
 15274 ;; This function uses a reentrant model
 15275 ;;
 15276                           
 15277                           	psect	text56
 15278  018EDE                     __ptext56:
 15279                           	opt callstack 0
 15280  018EDE                     ___lodiv:
 15281                           	opt callstack 0
 15282                           
 15283                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 15284  018EDE  0E09               	movlw	9
 15285  018EE0  26E1               	addwf	fsr1l,f,c
 15286  018EE2  0E00               	movlw	0
 15287  018EE4  22E2               	addwfc	fsr1h,f,c
 15288                           
 15289                           ;stkvar	_quotient @ sp[(-9)+0]
 15290                           
 15291                           ;incstack = 0
 15292 ;; hardware stack exceeded
 15293  018EE6  0E07               	movlw	7
 15294  018EE8  6E01               	movwf	btemp^0,c
 15295  018EEA  0EF7               	movlw	-9
 15296  018EEC                     u7371:
 15297  018EEC  6AE3               	clrf	plusw1,c
 15298  018EEE  2AE8               	incf	wreg,f,c
 15299  018EF0  0601               	decf	btemp^0,f,c
 15300  018EF2  E2FC               	bc	u7371
 15301                           
 15302                           ;stkvar	_divisor @ sp[(-9)+-16]
 15303  018EF4  0EE7               	movlw	-25
 15304  018EF6  50E3               	movf	plusw1,w,c
 15305  018EF8  E116               	bnz	u7380
 15306  018EFA  0EE8               	movlw	-24
 15307  018EFC  50E3               	movf	plusw1,w,c
 15308  018EFE  E113               	bnz	u7380
 15309  018F00  0EE9               	movlw	-23
 15310  018F02  50E3               	movf	plusw1,w,c
 15311  018F04  E110               	bnz	u7380
 15312  018F06  0EEA               	movlw	-22
 15313  018F08  50E3               	movf	plusw1,w,c
 15314  018F0A  E10D               	bnz	u7380
 15315  018F0C  0EEB               	movlw	-21
 15316  018F0E  50E3               	movf	plusw1,w,c
 15317  018F10  E10A               	bnz	u7380
 15318  018F12  0EEC               	movlw	-20
 15319  018F14  50E3               	movf	plusw1,w,c
 15320  018F16  E107               	bnz	u7380
 15321  018F18  0EED               	movlw	-19
 15322  018F1A  50E3               	movf	plusw1,w,c
 15323  018F1C  E104               	bnz	u7380
 15324  018F1E  0EEE               	movlw	-18
 15325  018F20  50E3               	movf	plusw1,w,c
 15326  018F22  B4D8               	btfsc	status,2,c
 15327  018F24  D088               	goto	u7410
 15328  018F26                     u7380:
 15329                           
 15330                           ;stkvar	_counter @ sp[(-9)+8]
 15331  018F26  0EFF               	movlw	-1
 15332  018F28  6AE3               	clrf	plusw1,c
 15333  018F2A  D012               	goto	L16
 15334  018F2C                     l8814:
 15335                           
 15336                           ;stkvar	_divisor @ sp[(-9)+-16]
 15337  018F2C  90D8               	bcf	status,0,c
 15338  018F2E  0EE7               	movlw	-25
 15339  018F30  36E3               	rlcf	plusw1,f,c
 15340  018F32  0EE8               	movlw	-24
 15341  018F34  36E3               	rlcf	plusw1,f,c
 15342  018F36  0EE9               	movlw	-23
 15343  018F38  36E3               	rlcf	plusw1,f,c
 15344  018F3A  0EEA               	movlw	-22
 15345  018F3C  36E3               	rlcf	plusw1,f,c
 15346  018F3E  0EEB               	movlw	-21
 15347  018F40  36E3               	rlcf	plusw1,f,c
 15348  018F42  0EEC               	movlw	-20
 15349  018F44  36E3               	rlcf	plusw1,f,c
 15350  018F46  0EED               	movlw	-19
 15351  018F48  36E3               	rlcf	plusw1,f,c
 15352  018F4A  0EEE               	movlw	-18
 15353  018F4C  36E3               	rlcf	plusw1,f,c
 15354                           
 15355                           ;stkvar	_counter @ sp[(-9)+8]
 15356  018F4E  0EFF               	movlw	-1
 15357  018F50                     L16:
 15358  018F50  2AE3               	incf	plusw1,f,c
 15359                           
 15360                           ;stkvar	_divisor @ sp[(-9)+-16]
 15361  018F52  0EEE               	movlw	-18
 15362  018F54  AEE3               	btfss	plusw1,7,c
 15363  018F56  D7EA               	goto	l8814
 15364  018F58                     u7390:
 15365                           
 15366                           ;stkvar	_quotient @ sp[(-9)+0]
 15367  018F58  90D8               	bcf	status,0,c
 15368  018F5A  0EF7               	movlw	-9
 15369  018F5C  36E3               	rlcf	plusw1,f,c
 15370  018F5E  0EF8               	movlw	-8
 15371  018F60  36E3               	rlcf	plusw1,f,c
 15372  018F62  0EF9               	movlw	-7
 15373  018F64  36E3               	rlcf	plusw1,f,c
 15374  018F66  0EFA               	movlw	-6
 15375  018F68  36E3               	rlcf	plusw1,f,c
 15376  018F6A  0EFB               	movlw	-5
 15377  018F6C  36E3               	rlcf	plusw1,f,c
 15378  018F6E  0EFC               	movlw	-4
 15379  018F70  36E3               	rlcf	plusw1,f,c
 15380  018F72  0EFD               	movlw	-3
 15381  018F74  36E3               	rlcf	plusw1,f,c
 15382  018F76  0EFE               	movlw	-2
 15383  018F78  36E3               	rlcf	plusw1,f,c
 15384                           
 15385                           ;stkvar	_divisor @ sp[(-9)+-16]
 15386                           ;stkvar	_dividend @ sp[(-9)+-8]
 15387  018F7A  50E1               	movf	fsr1l,w,c
 15388  018F7C  0FEF               	addlw	-17
 15389  018F7E  6ED9               	movwf	fsr2l,c
 15390  018F80  50E2               	movf	fsr1h,w,c
 15391  018F82  6EDA               	movwf	fsr2h,c
 15392  018F84  0EFF               	movlw	255
 15393  018F86  22DA               	addwfc	fsr2h,f,c
 15394  018F88  0EE7               	movlw	-25
 15395  018F8A  50E3               	movf	plusw1,w,c
 15396  018F8C  5CDE               	subwf	postinc2,w,c
 15397  018F8E  0EE8               	movlw	-24
 15398  018F90  50E3               	movf	plusw1,w,c
 15399  018F92  58DE               	subwfb	postinc2,w,c
 15400  018F94  0EE9               	movlw	-23
 15401  018F96  50E3               	movf	plusw1,w,c
 15402  018F98  58DE               	subwfb	postinc2,w,c
 15403  018F9A  0EEA               	movlw	-22
 15404  018F9C  50E3               	movf	plusw1,w,c
 15405  018F9E  58DE               	subwfb	postinc2,w,c
 15406  018FA0  0EEB               	movlw	-21
 15407  018FA2  50E3               	movf	plusw1,w,c
 15408  018FA4  58DE               	subwfb	postinc2,w,c
 15409  018FA6  0EEC               	movlw	-20
 15410  018FA8  50E3               	movf	plusw1,w,c
 15411  018FAA  58DE               	subwfb	postinc2,w,c
 15412  018FAC  0EED               	movlw	-19
 15413  018FAE  50E3               	movf	plusw1,w,c
 15414  018FB0  58DE               	subwfb	postinc2,w,c
 15415  018FB2  0EEE               	movlw	-18
 15416  018FB4  50E3               	movf	plusw1,w,c
 15417  018FB6  58DE               	subwfb	postinc2,w,c
 15418  018FB8  A0D8               	btfss	status,0,c
 15419  018FBA  D021               	goto	l8826
 15420                           
 15421                           ;stkvar	_divisor @ sp[(-9)+-16]
 15422                           ;stkvar	_dividend @ sp[(-9)+-8]
 15423  018FBC  50E1               	movf	fsr1l,w,c
 15424  018FBE  0FEF               	addlw	-17
 15425  018FC0  6ED9               	movwf	fsr2l,c
 15426  018FC2  50E2               	movf	fsr1h,w,c
 15427  018FC4  6EDA               	movwf	fsr2h,c
 15428  018FC6  0EFF               	movlw	255
 15429  018FC8  22DA               	addwfc	fsr2h,f,c
 15430  018FCA  0EE7               	movlw	-25
 15431  018FCC  50E3               	movf	plusw1,w,c
 15432  018FCE  5EDE               	subwf	postinc2,f,c
 15433  018FD0  0EE8               	movlw	-24
 15434  018FD2  50E3               	movf	plusw1,w,c
 15435  018FD4  5ADE               	subwfb	postinc2,f,c
 15436  018FD6  0EE9               	movlw	-23
 15437  018FD8  50E3               	movf	plusw1,w,c
 15438  018FDA  5ADE               	subwfb	postinc2,f,c
 15439  018FDC  0EEA               	movlw	-22
 15440  018FDE  50E3               	movf	plusw1,w,c
 15441  018FE0  5ADE               	subwfb	postinc2,f,c
 15442  018FE2  0EEB               	movlw	-21
 15443  018FE4  50E3               	movf	plusw1,w,c
 15444  018FE6  5ADE               	subwfb	postinc2,f,c
 15445  018FE8  0EEC               	movlw	-20
 15446  018FEA  50E3               	movf	plusw1,w,c
 15447  018FEC  5ADE               	subwfb	postinc2,f,c
 15448  018FEE  0EED               	movlw	-19
 15449  018FF0  50E3               	movf	plusw1,w,c
 15450  018FF2  5ADE               	subwfb	postinc2,f,c
 15451  018FF4  0EEE               	movlw	-18
 15452  018FF6  50E3               	movf	plusw1,w,c
 15453  018FF8  5ADE               	subwfb	postinc2,f,c
 15454                           
 15455                           ;stkvar	_quotient @ sp[(-9)+0]
 15456  018FFA  0EF7               	movlw	-9
 15457  018FFC  80E3               	bsf	plusw1,0,c
 15458  018FFE                     l8826:
 15459                           
 15460                           ;stkvar	_divisor @ sp[(-9)+-16]
 15461  018FFE  90D8               	bcf	status,0,c
 15462  019000  0EEE               	movlw	-18
 15463  019002  32E3               	rrcf	plusw1,f,c
 15464  019004  0EED               	movlw	-19
 15465  019006  32E3               	rrcf	plusw1,f,c
 15466  019008  0EEC               	movlw	-20
 15467  01900A  32E3               	rrcf	plusw1,f,c
 15468  01900C  0EEB               	movlw	-21
 15469  01900E  32E3               	rrcf	plusw1,f,c
 15470  019010  0EEA               	movlw	-22
 15471  019012  32E3               	rrcf	plusw1,f,c
 15472  019014  0EE9               	movlw	-23
 15473  019016  32E3               	rrcf	plusw1,f,c
 15474  019018  0EE8               	movlw	-24
 15475  01901A  32E3               	rrcf	plusw1,f,c
 15476  01901C  0EE7               	movlw	-25
 15477  01901E  32E3               	rrcf	plusw1,f,c
 15478                           
 15479                           ;stkvar	_counter @ sp[(-9)+8]
 15480  019020  0EFF               	movlw	-1
 15481  019022  50E3               	movf	plusw1,w,c
 15482  019024  6E01               	movwf	btemp^0,c
 15483  019026  0E01               	movlw	1
 15484  019028  5E01               	subwf	btemp^0,f,c
 15485  01902A  0EFF               	movlw	-1
 15486  01902C  0060  F007  FFE3   	movff	btemp,plusw1
 15487  019032  A4D8               	btfss	status,2,c
 15488  019034  D791               	goto	u7390
 15489  019036                     u7410:
 15490                           
 15491                           ;stkvar	_quotient @ sp[(-9)+0]
 15492  019036  0EF7               	movlw	247
 15493  019038  24E1               	addwf	fsr1l,w,c
 15494  01903A  6ED9               	movwf	fsr2l,c
 15495  01903C  0EFF               	movlw	255
 15496  01903E  20E2               	addwfc	fsr1h,w,c
 15497  019040  6EDA               	movwf	fsr2h,c
 15498                           
 15499                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 15500  019042  0E08               	movlw	8
 15501  019044  6E01               	movwf	btemp^0,c
 15502  019046  0EEF               	movlw	-17
 15503  019048                     us742999:
 15504  019048  006F FF7B FFE3     	movff	postinc2,plusw1
 15505  01904E  28E8               	incf	wreg,w,c
 15506  019050  2E01               	decfsz	btemp^0,f,c
 15507  019052  D7FA               	bra	us742999
 15508                           
 15509                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 15510  019054  0EF7               	movlw	247
 15511  019056  26E1               	addwf	fsr1l,f,c
 15512  019058  0EFF               	movlw	255
 15513  01905A  22E2               	addwfc	fsr1h,f,c
 15514  01905C  0012               	return		;funcret
 15515  01905E                     __end_of___lodiv:
 15516                           	opt callstack 0
 15517                           
 15518 ;; *************** function _strncmp *****************
 15519 ;; Defined at:
 15520 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 15521 ;; Parameters:    Size  Location     Type
 15522 ;;  _l              2  [STACK] PTR const unsigned char 
 15523 ;;		 -> ct(3), STR_64(121), STR_62(3), STR_61(3), 
 15524 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 15525 ;;		 -> STR_56(19), STR_55(19), STR_54(24), STR_53(15), 
 15526 ;;		 -> STR_52(15), STR_51(15), STR_50(10), STR_49(10), 
 15527 ;;		 -> STR_48(19), STR_47(19), STR_44(3), STR_43(3), 
 15528 ;;		 -> STR_42(22), STR_41(22), STR_40(22), STR_39(23), 
 15529 ;;		 -> STR_38(23), STR_37(23), STR_36(23), STR_35(23), 
 15530 ;;		 -> STR_34(23), STR_33(22), STR_32(22), STR_31(22), 
 15531 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 15532 ;;		 -> STR_26(22), STR_25(22), STR_24(22), STR_23(22), 
 15533 ;;		 -> STR_22(22), STR_21(17), STR_20(16), STR_19(16), 
 15534 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 15535 ;;		 -> STR_14(21), STR_13(21), STR_12(21), STR_11(22), 
 15536 ;;		 -> STR_10(22), STR_9(26), STR_8(21), STR_7(21), 
 15537 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 15538 ;;		 -> STR_1(21), 
 15539 ;;  _r              2  [STACK] PTR const unsigned char 
 15540 ;;		 -> STR_98(3), STR_94(3), STR_89(3), STR_84(3), 
 15541 ;;		 -> STR_79(3), STR_75(3), 
 15542 ;;  n               2  [STACK] unsigned int 
 15543 ;; Auto vars:     Size  Location     Type
 15544 ;;  r               2  [STACK] PTR const unsigned char 
 15545 ;;		 -> STR_98(3), STR_94(3), STR_89(3), STR_84(3), 
 15546 ;;		 -> STR_79(3), STR_75(3), 
 15547 ;;  l               2  [STACK] PTR const unsigned char 
 15548 ;;		 -> ct(3), STR_64(121), STR_62(3), STR_61(3), 
 15549 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 15550 ;;		 -> STR_56(19), STR_55(19), STR_54(24), STR_53(15), 
 15551 ;;		 -> STR_52(15), STR_51(15), STR_50(10), STR_49(10), 
 15552 ;;		 -> STR_48(19), STR_47(19), STR_44(3), STR_43(3), 
 15553 ;;		 -> STR_42(22), STR_41(22), STR_40(22), STR_39(23), 
 15554 ;;		 -> STR_38(23), STR_37(23), STR_36(23), STR_35(23), 
 15555 ;;		 -> STR_34(23), STR_33(22), STR_32(22), STR_31(22), 
 15556 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 15557 ;;		 -> STR_26(22), STR_25(22), STR_24(22), STR_23(22), 
 15558 ;;		 -> STR_22(22), STR_21(17), STR_20(16), STR_19(16), 
 15559 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 15560 ;;		 -> STR_14(21), STR_13(21), STR_12(21), STR_11(22), 
 15561 ;;		 -> STR_10(22), STR_9(26), STR_8(21), STR_7(21), 
 15562 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 15563 ;;		 -> STR_1(21), 
 15564 ;; Return value:  Size  Location     Type
 15565 ;;                  2  [STACK] int 
 15566 ;; Registers used:
 15567 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 15568 ;; Tracked objects:
 15569 ;;		On entry : 0/0
 15570 ;;		On exit  : 0/0
 15571 ;;		Unchanged: 0/0
 15572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15577 ;;Total ram usage:        0 bytes
 15578 ;; Hardware stack levels used:    1
 15579 ;; Hardware stack levels required when called:   15
 15580 ;; This function calls:
 15581 ;;		Nothing
 15582 ;; This function is called by:
 15583 ;;		_vfpfcnvrt
 15584 ;; This function uses a reentrant model
 15585 ;;
 15586                           
 15587                           	psect	text57
 15588  018054                     __ptext57:
 15589                           	opt callstack 0
 15590  018054                     _strncmp:
 15591                           	opt callstack 0
 15592                           
 15593                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15594  018054  52E6               	movf	postinc1,f,c
 15595  018056  52E6               	movf	postinc1,f,c
 15596  018058  52E6               	movf	postinc1,f,c
 15597  01805A  52E6               	movf	postinc1,f,c
 15598                           
 15599                           ;stkvar	__l @ sp[(-4)+-2]
 15600                           
 15601                           ;incstack = 0
 15602 ;; hardware stack exceeded
 15603  01805C  0EFA               	movlw	-6
 15604  01805E  006F FF8C  F00B    	movff	plusw1,btemp+10
 15605  018064  0EFB               	movlw	-5
 15606  018066  006F FF8C  F00C    	movff	plusw1,btemp+11
 15607                           
 15608                           ;stkvar	_l @ sp[(-4)+2]
 15609  01806C  0EFF               	movlw	-1
 15610  01806E  0060  F033  FFE3   	movff	btemp+11,plusw1
 15611  018074  0EFE               	movlw	-2
 15612  018076  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15613                           
 15614                           ;stkvar	__r @ sp[(-4)+-4]
 15615  01807C  0EF8               	movlw	-8
 15616  01807E  006F FF8C  F00B    	movff	plusw1,btemp+10
 15617  018084  0EF9               	movlw	-7
 15618  018086  006F FF8C  F00C    	movff	plusw1,btemp+11
 15619                           
 15620                           ;stkvar	_r @ sp[(-4)+0]
 15621  01808C  0EFD               	movlw	-3
 15622  01808E  0060  F033  FFE3   	movff	btemp+11,plusw1
 15623  018094  0EFC               	movlw	-4
 15624  018096  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15625                           
 15626                           ;stkvar	_n @ sp[(-4)+-6]
 15627  01809C  0EF6               	movlw	-10
 15628  01809E  006F FF8C  F001    	movff	plusw1,btemp
 15629  0180A4  0E01               	movlw	1
 15630  0180A6  5E01               	subwf	btemp^0,f,c
 15631  0180A8  0EF6               	movlw	-10
 15632  0180AA  0060  F007  FFE3   	movff	btemp,plusw1
 15633  0180B0  0EF7               	movlw	-9
 15634  0180B2  006F FF8C  F001    	movff	plusw1,btemp
 15635  0180B8  0E00               	movlw	0
 15636  0180BA  5A01               	subwfb	btemp^0,f,c
 15637  0180BC  0EF7               	movlw	-9
 15638  0180BE  0060  F007  FFE3   	movff	btemp,plusw1
 15639  0180C4  0EF6               	movlw	-10
 15640  0180C6  28E3               	incf	plusw1,w,c
 15641  0180C8  E13F               	bnz	l9496
 15642  0180CA  0EF7               	movlw	-9
 15643  0180CC  28E3               	incf	plusw1,w,c
 15644  0180CE  A4D8               	btfss	status,2,c
 15645  0180D0  D03B               	goto	l9496
 15646  0180D2  0E00               	movlw	0
 15647  0180D4  6E01               	movwf	btemp^0,c
 15648  0180D6  0E00               	movlw	0
 15649  0180D8  6E02               	movwf	(btemp+1)^0,c
 15650  0180DA  D0C7               	goto	l3511
 15651  0180DC                     l9494:
 15652                           
 15653                           ;stkvar	_l @ sp[(-4)+2]
 15654  0180DC  0EFE               	movlw	-2
 15655  0180DE  50E3               	movf	plusw1,w,c
 15656  0180E0  0F01               	addlw	1
 15657  0180E2  6E01               	movwf	btemp^0,c
 15658  0180E4  0EFE               	movlw	-2
 15659  0180E6  0060  F007  FFE3   	movff	btemp,plusw1
 15660  0180EC  6A01               	clrf	btemp^0,c
 15661  0180EE  0EFF               	movlw	-1
 15662  0180F0  50E3               	movf	plusw1,w,c
 15663  0180F2  2001               	addwfc	btemp^0,w,c
 15664  0180F4  6E01               	movwf	btemp^0,c
 15665  0180F6  0EFF               	movlw	-1
 15666  0180F8  0060  F007  FFE3   	movff	btemp,plusw1
 15667                           
 15668                           ;stkvar	_r @ sp[(-4)+0]
 15669  0180FE  0EFC               	movlw	-4
 15670  018100  50E3               	movf	plusw1,w,c
 15671  018102  0F01               	addlw	1
 15672  018104  6E01               	movwf	btemp^0,c
 15673  018106  0EFC               	movlw	-4
 15674  018108  0060  F007  FFE3   	movff	btemp,plusw1
 15675  01810E  6A01               	clrf	btemp^0,c
 15676  018110  0EFD               	movlw	-3
 15677  018112  50E3               	movf	plusw1,w,c
 15678  018114  2001               	addwfc	btemp^0,w,c
 15679  018116  6E01               	movwf	btemp^0,c
 15680  018118  0EFD               	movlw	-3
 15681  01811A  0060  F007  FFE3   	movff	btemp,plusw1
 15682                           
 15683                           ;stkvar	_n @ sp[(-4)+-6]
 15684  018120  0EF6               	movlw	-10
 15685  018122  006F FF8C  F001    	movff	plusw1,btemp
 15686  018128  0E01               	movlw	1
 15687  01812A  5E01               	subwf	btemp^0,f,c
 15688  01812C  0EF6               	movlw	-10
 15689  01812E  0060  F007  FFE3   	movff	btemp,plusw1
 15690  018134  0EF7               	movlw	-9
 15691  018136  006F FF8C  F001    	movff	plusw1,btemp
 15692  01813C  0E00               	movlw	0
 15693  01813E  5A01               	subwfb	btemp^0,f,c
 15694  018140  0EF7               	movlw	-9
 15695  018142  0060  F007  FFE3   	movff	btemp,plusw1
 15696  018148                     l9496:
 15697                           
 15698                           ;stkvar	_l @ sp[(-4)+2]
 15699  018148  0EFE               	movlw	-2
 15700  01814A  006F FF8F FFF6     	movff	plusw1,tblptrl
 15701  018150  0EFF               	movlw	-1
 15702  018152  006F FF8F FFF7     	movff	plusw1,tblptrh
 15703  018158  0E00               	movlw	low (__mediumconst shr (0+16))
 15704  01815A  6EF8               	movwf	tblptru,c
 15705  01815C  0E1F               	movlw	(high __ramtop+-1)
 15706  01815E  64F7               	cpfsgt	tblptrh,c
 15707  018160  D003               	bra	u8667
 15708  018162  0008               	tblrd		*
 15709  018164  50F5               	movf	tablat,w,c
 15710  018166  D007               	bra	u8660
 15711  018168                     u8667:
 15712  018168  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15713  01816E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15714  018174  50EF               	movf	indf0,w,c
 15715  018176                     u8660:
 15716  018176  0900               	iorlw	0
 15717  018178  B4D8               	btfsc	status,2,c
 15718  01817A  D04A               	goto	u8700
 15719                           
 15720                           ;stkvar	_r @ sp[(-4)+0]
 15721  01817C  50E1               	movf	fsr1l,w,c
 15722  01817E  0FFC               	addlw	-4
 15723  018180  6ED9               	movwf	fsr2l,c
 15724  018182  50E2               	movf	fsr1h,w,c
 15725  018184  6EDA               	movwf	fsr2h,c
 15726  018186  0EFF               	movlw	255
 15727  018188  22DA               	addwfc	fsr2h,f,c
 15728  01818A  006F FF7B FFF6     	movff	postinc2,tblptrl
 15729  018190  006F FF77 FFF7     	movff	postdec2,tblptrh
 15730  018196                     	if	0	;tblptru may be non-zero
 15731  018196                     	endif
 15732  018196                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15733  018196  0E00               	movlw	low (__mediumconst shr (0+16))
 15734  018198  6EF8               	movwf	tblptru,c
 15735  01819A                     	endif
 15736  01819A  0008               	tblrd		*
 15737  01819C  50F5               	movf	tablat,w,c
 15738  01819E  0900               	iorlw	0
 15739  0181A0  B4D8               	btfsc	status,2,c
 15740  0181A2  D036               	goto	u8700
 15741                           
 15742                           ;stkvar	_n @ sp[(-4)+-6]
 15743  0181A4  0EF6               	movlw	-10
 15744  0181A6  006F FF8C  F001    	movff	plusw1,btemp
 15745  0181AC  0EF7               	movlw	-9
 15746  0181AE  50E3               	movf	plusw1,w,c
 15747  0181B0  1001               	iorwf	btemp^0,w,c
 15748  0181B2  B4D8               	btfsc	status,2,c
 15749  0181B4  D02D               	goto	u8700
 15750                           
 15751                           ;stkvar	_r @ sp[(-4)+0]
 15752  0181B6  50E1               	movf	fsr1l,w,c
 15753  0181B8  0FFC               	addlw	-4
 15754  0181BA  6ED9               	movwf	fsr2l,c
 15755  0181BC  50E2               	movf	fsr1h,w,c
 15756  0181BE  6EDA               	movwf	fsr2h,c
 15757  0181C0  0EFF               	movlw	255
 15758  0181C2  22DA               	addwfc	fsr2h,f,c
 15759  0181C4  006F FF7B FFF6     	movff	postinc2,tblptrl
 15760  0181CA  006F FF77 FFF7     	movff	postdec2,tblptrh
 15761  0181D0                     	if	0	;tblptru may be non-zero
 15762  0181D0                     	endif
 15763  0181D0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15764  0181D0  0E00               	movlw	low (__mediumconst shr (0+16))
 15765  0181D2  6EF8               	movwf	tblptru,c
 15766  0181D4                     	endif
 15767  0181D4  0008               	tblrd		*
 15768  0181D6  006F FFD4  F00C    	movff	tablat,btemp+11
 15769                           
 15770                           ;stkvar	_l @ sp[(-4)+2]
 15771  0181DC  0EFE               	movlw	-2
 15772  0181DE  006F FF8F FFF6     	movff	plusw1,tblptrl
 15773  0181E4  0EFF               	movlw	-1
 15774  0181E6  006F FF8F FFF7     	movff	plusw1,tblptrh
 15775  0181EC  0E00               	movlw	low (__mediumconst shr (0+16))
 15776  0181EE  6EF8               	movwf	tblptru,c
 15777  0181F0  0E1F               	movlw	(high __ramtop+-1)
 15778  0181F2  64F7               	cpfsgt	tblptrh,c
 15779  0181F4  D003               	bra	u8707
 15780  0181F6  0008               	tblrd		*
 15781  0181F8  50F5               	movf	tablat,w,c
 15782  0181FA  D007               	bra	u8705
 15783  0181FC                     u8707:
 15784  0181FC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15785  018202  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15786  018208  50EF               	movf	indf0,w,c
 15787  01820A                     u8705:
 15788  01820A  180C               	xorwf	(btemp+11)^0,w,c
 15789  01820C  B4D8               	btfsc	status,2,c
 15790  01820E  D766               	goto	l9494
 15791  018210                     u8700:
 15792                           
 15793                           ;stkvar	_l @ sp[(-4)+2]
 15794  018210  0EFE               	movlw	-2
 15795  018212  006F FF8F FFF6     	movff	plusw1,tblptrl
 15796  018218  0EFF               	movlw	-1
 15797  01821A  006F FF8F FFF7     	movff	plusw1,tblptrh
 15798  018220  0E00               	movlw	low (__mediumconst shr (0+16))
 15799  018222  6EF8               	movwf	tblptru,c
 15800  018224  0E1F               	movlw	(high __ramtop+-1)
 15801  018226  64F7               	cpfsgt	tblptrh,c
 15802  018228  D003               	bra	u8717
 15803  01822A  0008               	tblrd		*
 15804  01822C  50F5               	movf	tablat,w,c
 15805  01822E  D007               	bra	u8710
 15806  018230                     u8717:
 15807  018230  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15808  018236  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15809  01823C  50EF               	movf	indf0,w,c
 15810  01823E                     u8710:
 15811  01823E  6E01               	movwf	btemp^0,c
 15812  018240  6A02               	clrf	(btemp+1)^0,c
 15813                           
 15814                           ;stkvar	_r @ sp[(-4)+0]
 15815  018242  50E1               	movf	fsr1l,w,c
 15816  018244  0FFC               	addlw	-4
 15817  018246  6ED9               	movwf	fsr2l,c
 15818  018248  50E2               	movf	fsr1h,w,c
 15819  01824A  6EDA               	movwf	fsr2h,c
 15820  01824C  0EFF               	movlw	255
 15821  01824E  22DA               	addwfc	fsr2h,f,c
 15822  018250  006F FF7B FFF6     	movff	postinc2,tblptrl
 15823  018256  006F FF77 FFF7     	movff	postdec2,tblptrh
 15824  01825C                     	if	0	;tblptru may be non-zero
 15825  01825C                     	endif
 15826  01825C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15827  01825C  0E00               	movlw	low (__mediumconst shr (0+16))
 15828  01825E  6EF8               	movwf	tblptru,c
 15829  018260                     	endif
 15830  018260  0008               	tblrd		*
 15831  018262  50F5               	movf	tablat,w,c
 15832  018264  5E01               	subwf	btemp^0,f,c
 15833  018266  0E00               	movlw	0
 15834  018268  5A02               	subwfb	(btemp+1)^0,f,c
 15835  01826A                     l3511:
 15836                           
 15837                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 15838  01826A  0EF6               	movlw	246
 15839  01826C  26E1               	addwf	fsr1l,f,c
 15840  01826E  0EFF               	movlw	255
 15841  018270  22E2               	addwfc	fsr1h,f,c
 15842  018272  0012               	return		;funcret
 15843  018274                     __end_of_strncmp:
 15844                           	opt callstack 0
 15845                           
 15846 ;; *************** function _stoa *****************
 15847 ;; Defined at:
 15848 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15849 ;; Parameters:    Size  Location     Type
 15850 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15851 ;;		 -> f(6), NULL(0), 
 15852 ;;  s               2  [STACK] PTR unsigned char 
 15853 ;;		 -> ?_printf(2), ?_sprintf(2), STR_46(9), STR_45(12), 
 15854 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 15855 ;;		 -> V(191), 
 15856 ;; Auto vars:     Size  Location     Type
 15857 ;;  nuls            7  [STACK] unsigned char [7]
 15858 ;;  l               2  [STACK] int 
 15859 ;;  p               2  [STACK] int 
 15860 ;;  cp              2  [STACK] PTR unsigned char 
 15861 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_46(9), 
 15862 ;;		 -> STR_45(12), D.lcd(480), D(482), T(144), 
 15863 ;;		 -> STR_3(5), V(191), 
 15864 ;;  w               2  [STACK] int 
 15865 ;;  i               2  [STACK] int 
 15866 ;; Return value:  Size  Location     Type
 15867 ;;                  2  [STACK] int 
 15868 ;; Registers used:
 15869 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 15870 ;; Tracked objects:
 15871 ;;		On entry : 0/0
 15872 ;;		On exit  : 0/0
 15873 ;;		Unchanged: 0/0
 15874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15879 ;;Total ram usage:        0 bytes
 15880 ;; Hardware stack levels used:    1
 15881 ;; Hardware stack levels required when called:   18
 15882 ;; This function calls:
 15883 ;;		_fputc
 15884 ;;		_strlen
 15885 ;; This function is called by:
 15886 ;;		_vfpfcnvrt
 15887 ;; This function uses a reentrant model
 15888 ;;
 15889                           
 15890                           	psect	text58
 15891  01741C                     __ptext58:
 15892                           	opt callstack 0
 15893  01741C                     _stoa:
 15894                           	opt callstack 0
 15895                           
 15896                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15897  01741C  0E11               	movlw	17
 15898  01741E  26E1               	addwf	fsr1l,f,c
 15899  017420  0E00               	movlw	0
 15900  017422  22E2               	addwfc	fsr1h,f,c
 15901                           
 15902                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 15903                           
 15904                           ;incstack = 0
 15905 ;; hardware stack exceeded
 15906  017424  EE20  F100         	lfsr	2,stoa@F1166
 15907                           
 15908                           ;stkvar	_nuls @ sp[(-17)+0]
 15909  017428  0E07               	movlw	7
 15910  01742A  6E01               	movwf	btemp^0,c
 15911  01742C  0EEF               	movlw	-17
 15912  01742E                     us1171999:
 15913  01742E  006F FF7B FFE3     	movff	postinc2,plusw1
 15914  017434  28E8               	incf	wreg,w,c
 15915  017436  2E01               	decfsz	btemp^0,f,c
 15916  017438  D7FA               	bra	us1171999
 15917                           
 15918                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 15919                           ;stkvar	_s @ sp[(-17)+-4]
 15920  01743A  0EEB               	movlw	-21
 15921  01743C  006F FF8C  F00B    	movff	plusw1,btemp+10
 15922  017442  0EEC               	movlw	-20
 15923  017444  006F FF8C  F00C    	movff	plusw1,btemp+11
 15924                           
 15925                           ;stkvar	_cp @ sp[(-17)+11]
 15926  01744A  0EFB               	movlw	-5
 15927  01744C  0060  F033  FFE3   	movff	btemp+11,plusw1
 15928  017452  0EFA               	movlw	-6
 15929  017454  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15930                           
 15931                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 15932                           ;stkvar	_cp @ sp[(-17)+11]
 15933  01745A  0EFA               	movlw	-6
 15934  01745C  006F FF8C  F001    	movff	plusw1,btemp
 15935  017462  0EFB               	movlw	-5
 15936  017464  50E3               	movf	plusw1,w,c
 15937  017466  1001               	iorwf	btemp^0,w,c
 15938  017468  A4D8               	btfss	status,2,c
 15939  01746A  D00E               	goto	l12496
 15940                           
 15941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 15942                           ;stkvar	_nuls @ sp[(-17)+0]
 15943  01746C  0EEF               	movlw	239
 15944  01746E  24E1               	addwf	fsr1l,w,c
 15945  017470  6E0B               	movwf	(btemp+10)^0,c
 15946  017472  0EFF               	movlw	255
 15947  017474  20E2               	addwfc	fsr1h,w,c
 15948  017476  6E0C               	movwf	(btemp+11)^0,c
 15949                           
 15950                           ;stkvar	_cp @ sp[(-17)+11]
 15951  017478  0EFB               	movlw	-5
 15952  01747A  0060  F033  FFE3   	movff	btemp+11,plusw1
 15953  017480  0EFA               	movlw	-6
 15954  017482  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15955  017488                     l12496:
 15956                           
 15957                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 15958                           ;stkvar	_cp @ sp[(-17)+11]
 15959  017488  0EFA               	movlw	-6
 15960  01748A  006F FF8F FFE6     	movff	plusw1,postinc1
 15961  017490  006F FF8F FFE6     	movff	plusw1,postinc1
 15962  017496  EC9A  F0D5         	call	_strlen	;wreg free
 15963                           
 15964                           ;stkvar	_l @ sp[(-17)+7]
 15965  01749A  0EF6               	movlw	-10
 15966  01749C  0060  F007  FFE3   	movff	btemp,plusw1
 15967  0174A2  0EF7               	movlw	-9
 15968  0174A4  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15969                           
 15970                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 15971                           ;stkvar	_p @ sp[(-17)+9]
 15972  0174AA  0EF8               	movlw	-8
 15973  0174AC  0060  F0F3  FFE3   	movff	_prec,plusw1
 15974  0174B2  0EF9               	movlw	-7
 15975  0174B4  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 15976                           
 15977                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 15978                           ;stkvar	_p @ sp[(-17)+9]
 15979  0174BA  0EF9               	movlw	-7
 15980  0174BC  BEE3               	btfsc	plusw1,7,c
 15981  0174BE  D023               	goto	l2336
 15982                           
 15983                           ;stkvar	_l @ sp[(-17)+7]
 15984                           ;stkvar	_p @ sp[(-17)+9]
 15985  0174C0  50E1               	movf	fsr1l,w,c
 15986  0174C2  0FF8               	addlw	-8
 15987  0174C4  6ED9               	movwf	fsr2l,c
 15988  0174C6  50E2               	movf	fsr1h,w,c
 15989  0174C8  6EDA               	movwf	fsr2h,c
 15990  0174CA  0EFF               	movlw	255
 15991  0174CC  22DA               	addwfc	fsr2h,f,c
 15992  0174CE  0EF6               	movlw	-10
 15993  0174D0  50E3               	movf	plusw1,w,c
 15994  0174D2  5CDE               	subwf	postinc2,w,c
 15995  0174D4  50DE               	movf	postinc2,w,c
 15996  0174D6  0A80               	xorlw	128
 15997  0174D8  6E01               	movwf	btemp^0,c
 15998  0174DA  0EF7               	movlw	-9
 15999  0174DC  50E3               	movf	plusw1,w,c
 16000  0174DE  0A80               	xorlw	128
 16001  0174E0  5801               	subwfb	btemp^0,w,c
 16002  0174E2  B0D8               	btfsc	status,0,c
 16003  0174E4  D010               	goto	l2336
 16004                           
 16005                           ;stkvar	_p @ sp[(-17)+9]
 16006                           ;stkvar	_l @ sp[(-17)+7]
 16007  0174E6  0EF8               	movlw	-8
 16008  0174E8  006F FF8C  F001    	movff	plusw1,btemp
 16009  0174EE  0EF6               	movlw	-10
 16010  0174F0  0060  F007  FFE3   	movff	btemp,plusw1
 16011  0174F6  0EF9               	movlw	-7
 16012  0174F8  006F FF8C  F001    	movff	plusw1,btemp
 16013  0174FE  0EF7               	movlw	-9
 16014  017500  0060  F007  FFE3   	movff	btemp,plusw1
 16015  017506                     l2336:
 16016                           
 16017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 16018                           ;stkvar	_l @ sp[(-17)+7]
 16019                           ;stkvar	_p @ sp[(-17)+9]
 16020  017506  0EF6               	movlw	-10
 16021  017508  006F FF8C  F001    	movff	plusw1,btemp
 16022  01750E  0EF8               	movlw	-8
 16023  017510  0060  F007  FFE3   	movff	btemp,plusw1
 16024  017516  0EF7               	movlw	-9
 16025  017518  006F FF8C  F001    	movff	plusw1,btemp
 16026  01751E  0EF9               	movlw	-7
 16027  017520  0060  F007  FFE3   	movff	btemp,plusw1
 16028                           
 16029                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 16030                           ;stkvar	_w @ sp[(-17)+13]
 16031  017526  0EFC               	movlw	-4
 16032  017528  0060  F0EB  FFE3   	movff	_width,plusw1
 16033  01752E  0EFD               	movlw	-3
 16034  017530  0060  F0EF  FFE3   	movff	_width+1,plusw1
 16035                           
 16036                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 16037  017536  A03E               	btfss	_flags^0,0,c
 16038  017538  D01F               	goto	l12516
 16039  01753A  D031               	goto	u11760
 16040  01753C                     l12512:
 16041                           
 16042                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 16043                           ;stkvar	_fp @ sp[(-17)+-2]
 16044  01753C  0EED               	movlw	-19
 16045  01753E  006F FF8F FFE6     	movff	plusw1,postinc1
 16046  017544  006F FF8F FFE6     	movff	plusw1,postinc1
 16047  01754A  0E20               	movlw	32
 16048  01754C  6EE6               	movwf	postinc1,c
 16049  01754E  0E00               	movlw	0
 16050  017550  6EE6               	movwf	postinc1,c
 16051  017552  ECC4  F0CC         	call	_fputc	;wreg free
 16052                           
 16053                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 16054                           ;stkvar	_l @ sp[(-17)+7]
 16055  017556  0EF6               	movlw	-10
 16056  017558  50E3               	movf	plusw1,w,c
 16057  01755A  0F01               	addlw	1
 16058  01755C  6E01               	movwf	btemp^0,c
 16059  01755E  0EF6               	movlw	-10
 16060  017560  0060  F007  FFE3   	movff	btemp,plusw1
 16061  017566  6A01               	clrf	btemp^0,c
 16062  017568  0EF7               	movlw	-9
 16063  01756A  50E3               	movf	plusw1,w,c
 16064  01756C  2001               	addwfc	btemp^0,w,c
 16065  01756E  6E01               	movwf	btemp^0,c
 16066  017570  0EF7               	movlw	-9
 16067  017572  0060  F007  FFE3   	movff	btemp,plusw1
 16068  017578                     l12516:
 16069                           
 16070                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 16071                           ;stkvar	_w @ sp[(-17)+13]
 16072                           ;stkvar	_l @ sp[(-17)+7]
 16073  017578  50E1               	movf	fsr1l,w,c
 16074  01757A  0FF6               	addlw	-10
 16075  01757C  6ED9               	movwf	fsr2l,c
 16076  01757E  50E2               	movf	fsr1h,w,c
 16077  017580  6EDA               	movwf	fsr2h,c
 16078  017582  0EFF               	movlw	255
 16079  017584  22DA               	addwfc	fsr2h,f,c
 16080  017586  0EFC               	movlw	-4
 16081  017588  50E3               	movf	plusw1,w,c
 16082  01758A  5CDE               	subwf	postinc2,w,c
 16083  01758C  50DE               	movf	postinc2,w,c
 16084  01758E  0A80               	xorlw	128
 16085  017590  6E01               	movwf	btemp^0,c
 16086  017592  0EFD               	movlw	-3
 16087  017594  50E3               	movf	plusw1,w,c
 16088  017596  0A80               	xorlw	128
 16089  017598  5801               	subwfb	btemp^0,w,c
 16090  01759A  A0D8               	btfss	status,0,c
 16091  01759C  D7CF               	goto	l12512
 16092  01759E                     u11760:
 16093                           
 16094                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 16095                           ;stkvar	_i @ sp[(-17)+15]
 16096  01759E  0EFE               	movlw	-2
 16097  0175A0  6AE3               	clrf	plusw1,c
 16098  0175A2  0EFF               	movlw	-1
 16099  0175A4  6AE3               	clrf	plusw1,c
 16100                           
 16101                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 16102  0175A6  D045               	goto	l12526
 16103  0175A8                     l12520:
 16104                           
 16105                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 16106                           ;stkvar	_fp @ sp[(-17)+-2]
 16107  0175A8  0EED               	movlw	-19
 16108  0175AA  006F FF8F FFE6     	movff	plusw1,postinc1
 16109  0175B0  006F FF8F FFE6     	movff	plusw1,postinc1
 16110                           
 16111                           ;stkvar	_cp @ sp[(-19)+11]
 16112  0175B6  0EF8               	movlw	-8
 16113  0175B8  006F FF8F FFF6     	movff	plusw1,tblptrl
 16114  0175BE  0EF9               	movlw	-7
 16115  0175C0  006F FF8F FFF7     	movff	plusw1,tblptrh
 16116  0175C6  0E00               	movlw	low (__mediumconst shr (0+16))
 16117  0175C8  6EF8               	movwf	tblptru,c
 16118  0175CA  0E1F               	movlw	(high __ramtop+-1)
 16119  0175CC  64F7               	cpfsgt	tblptrh,c
 16120  0175CE  D003               	bra	u11777
 16121  0175D0  0008               	tblrd		*
 16122  0175D2  50F5               	movf	tablat,w,c
 16123  0175D4  D007               	bra	u11770
 16124  0175D6                     u11777:
 16125  0175D6  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16126  0175DC  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16127  0175E2  50EF               	movf	indf0,w,c
 16128  0175E4                     u11770:
 16129  0175E4  6EE6               	movwf	postinc1,c
 16130  0175E6  0E00               	movlw	0
 16131  0175E8  6EE6               	movwf	postinc1,c
 16132  0175EA  ECC4  F0CC         	call	_fputc	;wreg free
 16133                           
 16134                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 16135                           ;stkvar	_cp @ sp[(-17)+11]
 16136  0175EE  0EFA               	movlw	-6
 16137  0175F0  50E3               	movf	plusw1,w,c
 16138  0175F2  0F01               	addlw	1
 16139  0175F4  6E01               	movwf	btemp^0,c
 16140  0175F6  0EFA               	movlw	-6
 16141  0175F8  0060  F007  FFE3   	movff	btemp,plusw1
 16142  0175FE  6A01               	clrf	btemp^0,c
 16143  017600  0EFB               	movlw	-5
 16144  017602  50E3               	movf	plusw1,w,c
 16145  017604  2001               	addwfc	btemp^0,w,c
 16146  017606  6E01               	movwf	btemp^0,c
 16147  017608  0EFB               	movlw	-5
 16148  01760A  0060  F007  FFE3   	movff	btemp,plusw1
 16149                           
 16150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 16151                           ;stkvar	_i @ sp[(-17)+15]
 16152  017610  0EFE               	movlw	-2
 16153  017612  50E3               	movf	plusw1,w,c
 16154  017614  0F01               	addlw	1
 16155  017616  6E01               	movwf	btemp^0,c
 16156  017618  0EFE               	movlw	-2
 16157  01761A  0060  F007  FFE3   	movff	btemp,plusw1
 16158  017620  6A01               	clrf	btemp^0,c
 16159  017622  0EFF               	movlw	-1
 16160  017624  50E3               	movf	plusw1,w,c
 16161  017626  2001               	addwfc	btemp^0,w,c
 16162  017628  6E01               	movwf	btemp^0,c
 16163  01762A  0EFF               	movlw	-1
 16164  01762C  0060  F007  FFE3   	movff	btemp,plusw1
 16165  017632                     l12526:
 16166                           
 16167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 16168                           ;stkvar	_p @ sp[(-17)+9]
 16169                           ;stkvar	_i @ sp[(-17)+15]
 16170  017632  50E1               	movf	fsr1l,w,c
 16171  017634  0FFE               	addlw	-2
 16172  017636  6ED9               	movwf	fsr2l,c
 16173  017638  50E2               	movf	fsr1h,w,c
 16174  01763A  6EDA               	movwf	fsr2h,c
 16175  01763C  0EFF               	movlw	255
 16176  01763E  22DA               	addwfc	fsr2h,f,c
 16177  017640  0EF8               	movlw	-8
 16178  017642  50E3               	movf	plusw1,w,c
 16179  017644  5CDE               	subwf	postinc2,w,c
 16180  017646  50DE               	movf	postinc2,w,c
 16181  017648  0A80               	xorlw	128
 16182  01764A  6E01               	movwf	btemp^0,c
 16183  01764C  0EF9               	movlw	-7
 16184  01764E  50E3               	movf	plusw1,w,c
 16185  017650  0A80               	xorlw	128
 16186  017652  5801               	subwfb	btemp^0,w,c
 16187  017654  A0D8               	btfss	status,0,c
 16188  017656  D7A8               	goto	l12520
 16189                           
 16190                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 16191  017658  B03E               	btfsc	_flags^0,0,c
 16192  01765A  D01F               	goto	l12534
 16193  01765C  D031               	goto	u11800
 16194  01765E                     l12530:
 16195                           
 16196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 16197                           ;stkvar	_fp @ sp[(-17)+-2]
 16198  01765E  0EED               	movlw	-19
 16199  017660  006F FF8F FFE6     	movff	plusw1,postinc1
 16200  017666  006F FF8F FFE6     	movff	plusw1,postinc1
 16201  01766C  0E20               	movlw	32
 16202  01766E  6EE6               	movwf	postinc1,c
 16203  017670  0E00               	movlw	0
 16204  017672  6EE6               	movwf	postinc1,c
 16205  017674  ECC4  F0CC         	call	_fputc	;wreg free
 16206                           
 16207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 16208                           ;stkvar	_l @ sp[(-17)+7]
 16209  017678  0EF6               	movlw	-10
 16210  01767A  50E3               	movf	plusw1,w,c
 16211  01767C  0F01               	addlw	1
 16212  01767E  6E01               	movwf	btemp^0,c
 16213  017680  0EF6               	movlw	-10
 16214  017682  0060  F007  FFE3   	movff	btemp,plusw1
 16215  017688  6A01               	clrf	btemp^0,c
 16216  01768A  0EF7               	movlw	-9
 16217  01768C  50E3               	movf	plusw1,w,c
 16218  01768E  2001               	addwfc	btemp^0,w,c
 16219  017690  6E01               	movwf	btemp^0,c
 16220  017692  0EF7               	movlw	-9
 16221  017694  0060  F007  FFE3   	movff	btemp,plusw1
 16222  01769A                     l12534:
 16223                           
 16224                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 16225                           ;stkvar	_w @ sp[(-17)+13]
 16226                           ;stkvar	_l @ sp[(-17)+7]
 16227  01769A  50E1               	movf	fsr1l,w,c
 16228  01769C  0FF6               	addlw	-10
 16229  01769E  6ED9               	movwf	fsr2l,c
 16230  0176A0  50E2               	movf	fsr1h,w,c
 16231  0176A2  6EDA               	movwf	fsr2h,c
 16232  0176A4  0EFF               	movlw	255
 16233  0176A6  22DA               	addwfc	fsr2h,f,c
 16234  0176A8  0EFC               	movlw	-4
 16235  0176AA  50E3               	movf	plusw1,w,c
 16236  0176AC  5CDE               	subwf	postinc2,w,c
 16237  0176AE  50DE               	movf	postinc2,w,c
 16238  0176B0  0A80               	xorlw	128
 16239  0176B2  6E01               	movwf	btemp^0,c
 16240  0176B4  0EFD               	movlw	-3
 16241  0176B6  50E3               	movf	plusw1,w,c
 16242  0176B8  0A80               	xorlw	128
 16243  0176BA  5801               	subwfb	btemp^0,w,c
 16244  0176BC  A0D8               	btfss	status,0,c
 16245  0176BE  D7CF               	goto	l12530
 16246  0176C0                     u11800:
 16247                           
 16248                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 16249                           ;stkvar	_l @ sp[(-17)+7]
 16250  0176C0  0EF6               	movlw	-10
 16251  0176C2  006F FF8C  F001    	movff	plusw1,btemp
 16252  0176C8  0EF7               	movlw	-9
 16253  0176CA  006F FF8C  F002    	movff	plusw1,btemp+1
 16254                           
 16255                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 16256  0176D0  0EEB               	movlw	235
 16257  0176D2  26E1               	addwf	fsr1l,f,c
 16258  0176D4  0EFF               	movlw	255
 16259  0176D6  22E2               	addwfc	fsr1h,f,c
 16260  0176D8  0012               	return		;funcret
 16261  0176DA                     __end_of_stoa:
 16262                           	opt callstack 0
 16263                           
 16264 ;; *************** function _efgtoa *****************
 16265 ;; Defined at:
 16266 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16267 ;; Parameters:    Size  Location     Type
 16268 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16269 ;;		 -> f(6), NULL(0), 
 16270 ;;  f               4  [STACK] PTR struct _IO_FILE
 16271 ;;  c               1  [STACK] unsigned char 
 16272 ;; Auto vars:     Size  Location     Type
 16273 ;;  u               4  [STACK] unsigned char 
 16274 ;;  g               4  [STACK] unsigned char 
 16275 ;;  l               4  [STACK] unsigned char 
 16276 ;;  h               4  [STACK] unsigned char 
 16277 ;;  ou              4  [STACK] unsigned char 
 16278 ;;  n               2  [STACK] int 
 16279 ;;  e               2  [STACK] int 
 16280 ;;  i               2  [STACK] int 
 16281 ;;  w               2  [STACK] int 
 16282 ;;  p               2  [STACK] int 
 16283 ;;  sign            2  [STACK] int 
 16284 ;;  d               2  [STACK] int 
 16285 ;;  ne              2  [STACK] int 
 16286 ;;  m               2  [STACK] int 
 16287 ;;  pp              2  [STACK] int 
 16288 ;;  t               2  [STACK] int 
 16289 ;;  mode            1  [STACK] unsigned char 
 16290 ;;  nmode           1  [STACK] unsigned char 
 16291 ;; Return value:  Size  Location     Type
 16292 ;;                  2  [STACK] int 
 16293 ;; Registers used:
 16294 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 16295 ;; Tracked objects:
 16296 ;;		On entry : 0/0
 16297 ;;		On exit  : 0/0
 16298 ;;		Unchanged: 0/0
 16299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16304 ;;Total ram usage:        0 bytes
 16305 ;; Hardware stack levels used:    1
 16306 ;; Hardware stack levels required when called:   20
 16307 ;; This function calls:
 16308 ;;		___awdiv
 16309 ;;		___awmod
 16310 ;;		___fladd
 16311 ;;		___fldiv
 16312 ;;		___fleq
 16313 ;;		___flge
 16314 ;;		___flmul
 16315 ;;		___flneg
 16316 ;;		___flsub
 16317 ;;		___fltol
 16318 ;;		___fpclassifyf
 16319 ;;		_floorf
 16320 ;;		_isupper
 16321 ;;		_pad
 16322 ;;		_strcpy
 16323 ;;		_tolower
 16324 ;; This function is called by:
 16325 ;;		_vfpfcnvrt
 16326 ;; This function uses a reentrant model
 16327 ;;
 16328                           
 16329                           	psect	text59
 16330  010000                     __ptext59:
 16331                           	opt callstack 0
 16332  010000                     _efgtoa:
 16333                           	opt callstack 0
 16334                           
 16335                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 16336  010000  0E38               	movlw	56
 16337  010002  26E1               	addwf	fsr1l,f,c
 16338  010004  0E00               	movlw	0
 16339  010006  22E2               	addwfc	fsr1h,f,c
 16340                           
 16341                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 16342                           ;stkvar	_sign @ sp[(-56)+42]
 16343                           
 16344                           ;incstack = 0
 16345 ;; hardware stack exceeded
 16346  010008  0EF2               	movlw	-14
 16347  01000A  6AE3               	clrf	plusw1,c
 16348  01000C  0EF3               	movlw	-13
 16349  01000E  6AE3               	clrf	plusw1,c
 16350                           
 16351                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 16352                           ;stkvar	_f @ sp[(-56)+-6]
 16353  010010  0EC2               	movlw	-62
 16354  010012  006F FF8C  F009    	movff	plusw1,btemp+8
 16355  010018  0EC3               	movlw	-61
 16356  01001A  006F FF8C  F00A    	movff	plusw1,btemp+9
 16357  010020  0EC4               	movlw	-60
 16358  010022  006F FF8C  F00B    	movff	plusw1,btemp+10
 16359  010028  0EC5               	movlw	-59
 16360  01002A  006F FF8C  F00C    	movff	plusw1,btemp+11
 16361                           
 16362                           ;stkvar	_g @ sp[(-56)+16]
 16363  010030  0ED8               	movlw	-40
 16364  010032  0060  F027  FFE3   	movff	btemp+8,plusw1
 16365  010038  0ED9               	movlw	-39
 16366  01003A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16367  010040  0EDA               	movlw	-38
 16368  010042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16369  010048  0EDB               	movlw	-37
 16370  01004A  0060  F033  FFE3   	movff	btemp+11,plusw1
 16371                           
 16372                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 16373                           ;stkvar	_g @ sp[(-56)+16]
 16374  010050  0EDB               	movlw	-37
 16375  010052  AEE3               	btfss	plusw1,7,c
 16376  010054  D02B               	goto	l12194
 16377                           
 16378                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 16379  010056  0E01               	movlw	1
 16380  010058  6E0B               	movwf	(btemp+10)^0,c
 16381  01005A  0E00               	movlw	0
 16382  01005C  6E0C               	movwf	(btemp+11)^0,c
 16383                           
 16384                           ;stkvar	_sign @ sp[(-56)+42]
 16385  01005E  0EF2               	movlw	-14
 16386  010060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16387  010066  0EF3               	movlw	-13
 16388  010068  0060  F033  FFE3   	movff	btemp+11,plusw1
 16389                           
 16390                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 16391                           ;stkvar	_g @ sp[(-56)+16]
 16392  01006E  0ED8               	movlw	-40
 16393  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 16394  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 16395  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 16396  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 16397  010088  EC60  F0DB         	call	___flneg	;wreg free
 16398                           
 16399                           ;stkvar	_g @ sp[(-56)+16]
 16400  01008C  0ED8               	movlw	-40
 16401  01008E  0060  F007  FFE3   	movff	btemp,plusw1
 16402  010094  0ED9               	movlw	-39
 16403  010096  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16404  01009C  0EDA               	movlw	-38
 16405  01009E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16406  0100A4  0EDB               	movlw	-37
 16407  0100A6  0060  F013  FFE3   	movff	btemp+3,plusw1
 16408  0100AC                     l12194:
 16409                           
 16410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 16411                           ;stkvar	_n @ sp[(-56)+32]
 16412  0100AC  0EE8               	movlw	-24
 16413  0100AE  6AE3               	clrf	plusw1,c
 16414  0100B0  0EE9               	movlw	-23
 16415  0100B2  6AE3               	clrf	plusw1,c
 16416                           
 16417                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 16418                           ;stkvar	_w @ sp[(-56)+38]
 16419  0100B4  0EEE               	movlw	-18
 16420  0100B6  0060  F0EB  FFE3   	movff	_width,plusw1
 16421  0100BC  0EEF               	movlw	-17
 16422  0100BE  0060  F0EF  FFE3   	movff	_width+1,plusw1
 16423                           
 16424                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 16425                           ;stkvar	_sign @ sp[(-56)+42]
 16426  0100C4  0EF2               	movlw	-14
 16427  0100C6  006F FF8C  F001    	movff	plusw1,btemp
 16428  0100CC  0EF3               	movlw	-13
 16429  0100CE  50E3               	movf	plusw1,w,c
 16430  0100D0  1001               	iorwf	btemp^0,w,c
 16431  0100D2  A4D8               	btfss	status,2,c
 16432  0100D4  D002               	goto	u11210
 16433  0100D6  A43E               	btfss	_flags^0,2,c
 16434  0100D8  D036               	goto	l12214
 16435  0100DA                     u11210:
 16436                           
 16437                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 16438                           ;stkvar	_sign @ sp[(-56)+42]
 16439  0100DA  0EF2               	movlw	-14
 16440  0100DC  006F FF8C  F001    	movff	plusw1,btemp
 16441  0100E2  0EF3               	movlw	-13
 16442  0100E4  50E3               	movf	plusw1,w,c
 16443  0100E6  1001               	iorwf	btemp^0,w,c
 16444  0100E8  A4D8               	btfss	status,2,c
 16445  0100EA  D002               	goto	l12206
 16446  0100EC  0E2B               	movlw	43
 16447  0100EE  D001               	goto	L17
 16448  0100F0                     l12206:
 16449  0100F0  0E2D               	movlw	45
 16450  0100F2                     L17:
 16451  0100F2  6E0B               	movwf	(btemp+10)^0,c
 16452  0100F4  0E00               	movlw	0
 16453  0100F6  6E0C               	movwf	(btemp+11)^0,c
 16454                           
 16455                           ;stkvar	_efgtoa$5641 @ sp[(-56)+10]
 16456  0100F8  0ED2               	movlw	-46
 16457  0100FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16458  010100  0ED3               	movlw	-45
 16459  010102  0060  F033  FFE3   	movff	btemp+11,plusw1
 16460                           
 16461                           ;stkvar	_efgtoa$5641 @ sp[(-56)+10]
 16462  010108  0ED2               	movlw	-46
 16463  01010A  006F FF8C  F297    	movff	plusw1,_dbuf
 16464                           
 16465                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 16466                           ;stkvar	_n @ sp[(-56)+32]
 16467  010110  0EE8               	movlw	-24
 16468  010112  50E3               	movf	plusw1,w,c
 16469  010114  0F01               	addlw	1
 16470  010116  6E01               	movwf	btemp^0,c
 16471  010118  0EE8               	movlw	-24
 16472  01011A  0060  F007  FFE3   	movff	btemp,plusw1
 16473  010120  6A01               	clrf	btemp^0,c
 16474  010122  0EE9               	movlw	-23
 16475  010124  50E3               	movf	plusw1,w,c
 16476  010126  2001               	addwfc	btemp^0,w,c
 16477  010128  6E01               	movwf	btemp^0,c
 16478  01012A  0EE9               	movlw	-23
 16479  01012C  0060  F007  FFE3   	movff	btemp,plusw1
 16480                           
 16481                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 16482                           ;stkvar	_w @ sp[(-56)+38]
 16483  010132  50E1               	movf	fsr1l,w,c
 16484  010134  0FEE               	addlw	-18
 16485  010136  6ED9               	movwf	fsr2l,c
 16486  010138  50E2               	movf	fsr1h,w,c
 16487  01013A  6EDA               	movwf	fsr2h,c
 16488  01013C  0EFF               	movlw	255
 16489  01013E  22DA               	addwfc	fsr2h,f,c
 16490  010140  06DE               	decf	postinc2,f,c
 16491  010142  0E00               	movlw	0
 16492  010144  5ADD               	subwfb	postdec2,f,c
 16493  010146                     l12214:
 16494                           
 16495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 16496                           ;stkvar	_g @ sp[(-56)+16]
 16497  010146  0ED8               	movlw	-40
 16498  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 16499  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 16500  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 16501  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 16502  010160  ECE1  F0C5         	call	___fpclassifyf	;wreg free
 16503  010164  0401               	decf	btemp^0,w,c
 16504  010166  1002               	iorwf	(btemp+1)^0,w,c
 16505  010168  A4D8               	btfss	status,2,c
 16506  01016A  D076               	goto	l12232
 16507  01016C  0EBF               	movlw	191
 16508  01016E  6E0B               	movwf	(btemp+10)^0,c
 16509  010170  0EFF               	movlw	255
 16510  010172  6E0C               	movwf	(btemp+11)^0,c
 16511                           
 16512                           ;stkvar	_c @ sp[(-56)+-7]
 16513  010174  0EC1               	movlw	-63
 16514  010176  50E3               	movf	plusw1,w,c
 16515  010178  6E09               	movwf	(btemp+8)^0,c
 16516  01017A  6A0A               	clrf	(btemp+9)^0,c
 16517  01017C  500B               	movf	(btemp+10)^0,w,c
 16518  01017E  2609               	addwf	(btemp+8)^0,f,c
 16519  010180  500C               	movf	(btemp+11)^0,w,c
 16520  010182  220A               	addwfc	(btemp+9)^0,f,c
 16521  010184  500A               	movf	(btemp+9)^0,w,c
 16522  010186  E106               	bnz	u11240
 16523  010188  0E1A               	movlw	26
 16524  01018A  5C09               	subwf	(btemp+8)^0,w,c
 16525  01018C  B0D8               	btfsc	status,0,c
 16526  01018E  D002               	goto	u11240
 16527  010190  0E01               	movlw	1
 16528  010192  D001               	goto	u11250
 16529  010194                     u11240:
 16530  010194  0E00               	movlw	0
 16531  010196                     u11250:
 16532  010196  6E0B               	movwf	(btemp+10)^0,c
 16533  010198  6A0C               	clrf	(btemp+11)^0,c
 16534                           
 16535                           ;stkvar	_efgtoa$5642 @ sp[(-56)+8]
 16536  01019A  0ED0               	movlw	-48
 16537  01019C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16538  0101A2  0ED1               	movlw	-47
 16539  0101A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 16540                           
 16541                           ;stkvar	_efgtoa$5642 @ sp[(-56)+8]
 16542  0101AA  0ED0               	movlw	-48
 16543  0101AC  006F FF8C  F001    	movff	plusw1,btemp
 16544  0101B2  0ED1               	movlw	-47
 16545  0101B4  50E3               	movf	plusw1,w,c
 16546  0101B6  1001               	iorwf	btemp^0,w,c
 16547  0101B8  B4D8               	btfsc	status,2,c
 16548  0101BA  D017               	goto	l12224
 16549                           
 16550                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 16551  0101BC  0ED7               	movlw	low STR_65
 16552  0101BE  6EE6               	movwf	postinc1,c
 16553  0101C0  0EFF               	movlw	high STR_65
 16554  0101C2  6EE6               	movwf	postinc1,c
 16555                           
 16556                           ;stkvar	_n @ sp[(-58)+32]
 16557  0101C4  0E97               	movlw	low _dbuf
 16558  0101C6  6E0B               	movwf	(btemp+10)^0,c
 16559  0101C8  0E02               	movlw	high _dbuf
 16560  0101CA  6E0C               	movwf	(btemp+11)^0,c
 16561  0101CC  0EE6               	movlw	-26
 16562  0101CE  50E3               	movf	plusw1,w,c
 16563  0101D0  260B               	addwf	(btemp+10)^0,f,c
 16564  0101D2  0EE7               	movlw	-25
 16565  0101D4  50E3               	movf	plusw1,w,c
 16566  0101D6  220C               	addwfc	(btemp+11)^0,f,c
 16567  0101D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16568  0101DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 16569  0101E4  EC4B  F0D1         	call	_strcpy	;wreg free
 16570                           
 16571                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 16572  0101E8  D016               	goto	l12226
 16573  0101EA                     l12224:
 16574                           
 16575                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 16576  0101EA  0EDF               	movlw	low STR_66
 16577  0101EC  6EE6               	movwf	postinc1,c
 16578  0101EE  0EFF               	movlw	high STR_66
 16579  0101F0  6EE6               	movwf	postinc1,c
 16580                           
 16581                           ;stkvar	_n @ sp[(-58)+32]
 16582  0101F2  0E97               	movlw	low _dbuf
 16583  0101F4  6E0B               	movwf	(btemp+10)^0,c
 16584  0101F6  0E02               	movlw	high _dbuf
 16585  0101F8  6E0C               	movwf	(btemp+11)^0,c
 16586  0101FA  0EE6               	movlw	-26
 16587  0101FC  50E3               	movf	plusw1,w,c
 16588  0101FE  260B               	addwf	(btemp+10)^0,f,c
 16589  010200  0EE7               	movlw	-25
 16590  010202  50E3               	movf	plusw1,w,c
 16591  010204  220C               	addwfc	(btemp+11)^0,f,c
 16592  010206  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16593  01020C  0060  F033  FFE6   	movff	btemp+11,postinc1
 16594  010212  EC4B  F0D1         	call	_strcpy	;wreg free
 16595  010216                     l12226:
 16596                           
 16597                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 16598                           ;stkvar	_w @ sp[(-56)+38]
 16599  010216  50E1               	movf	fsr1l,w,c
 16600  010218  0FEE               	addlw	-18
 16601  01021A  6ED9               	movwf	fsr2l,c
 16602  01021C  50E2               	movf	fsr1h,w,c
 16603  01021E  6EDA               	movwf	fsr2h,c
 16604  010220  0EFF               	movlw	255
 16605  010222  22DA               	addwfc	fsr2h,f,c
 16606  010224  0EFD               	movlw	253
 16607  010226  26DE               	addwf	postinc2,f,c
 16608  010228  0EFF               	movlw	255
 16609  01022A  22DD               	addwfc	postdec2,f,c
 16610  01022C                     l12228:
 16611                           
 16612                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 16613                           ;stkvar	_w @ sp[(-56)+38]
 16614  01022C  0EEE               	movlw	-18
 16615  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 16616  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 16617  01023A  0E97               	movlw	low _dbuf
 16618  01023C  6EE6               	movwf	postinc1,c
 16619  01023E  0E02               	movlw	high _dbuf
 16620  010240  6EE6               	movwf	postinc1,c
 16621                           
 16622                           ;stkvar	_fp @ sp[(-60)+-2]
 16623  010242  0EC2               	movlw	-62
 16624  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 16625  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 16626  010250  ECE2  F0CD         	call	_pad	;wreg free
 16627  010254  EF1D  F089         	goto	l2254
 16628  010258                     l12232:
 16629                           
 16630                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 16631                           ;stkvar	_g @ sp[(-56)+16]
 16632  010258  0ED8               	movlw	-40
 16633  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 16634  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 16635  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 16636  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 16637  010272  ECE1  F0C5         	call	___fpclassifyf	;wreg free
 16638  010276  5001               	movf	btemp^0,w,c
 16639  010278  1002               	iorwf	(btemp+1)^0,w,c
 16640  01027A  A4D8               	btfss	status,2,c
 16641  01027C  D056               	goto	l12250
 16642  01027E  0EBF               	movlw	191
 16643  010280  6E0B               	movwf	(btemp+10)^0,c
 16644  010282  0EFF               	movlw	255
 16645  010284  6E0C               	movwf	(btemp+11)^0,c
 16646                           
 16647                           ;stkvar	_c @ sp[(-56)+-7]
 16648  010286  0EC1               	movlw	-63
 16649  010288  50E3               	movf	plusw1,w,c
 16650  01028A  6E09               	movwf	(btemp+8)^0,c
 16651  01028C  6A0A               	clrf	(btemp+9)^0,c
 16652  01028E  500B               	movf	(btemp+10)^0,w,c
 16653  010290  2609               	addwf	(btemp+8)^0,f,c
 16654  010292  500C               	movf	(btemp+11)^0,w,c
 16655  010294  220A               	addwfc	(btemp+9)^0,f,c
 16656  010296  500A               	movf	(btemp+9)^0,w,c
 16657  010298  E106               	bnz	u11280
 16658  01029A  0E1A               	movlw	26
 16659  01029C  5C09               	subwf	(btemp+8)^0,w,c
 16660  01029E  B0D8               	btfsc	status,0,c
 16661  0102A0  D002               	goto	u11280
 16662  0102A2  0E01               	movlw	1
 16663  0102A4  D001               	goto	u11290
 16664  0102A6                     u11280:
 16665  0102A6  0E00               	movlw	0
 16666  0102A8                     u11290:
 16667  0102A8  6E0B               	movwf	(btemp+10)^0,c
 16668  0102AA  6A0C               	clrf	(btemp+11)^0,c
 16669                           
 16670                           ;stkvar	_efgtoa$5646 @ sp[(-56)+6]
 16671  0102AC  0ECE               	movlw	-50
 16672  0102AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16673  0102B4  0ECF               	movlw	-49
 16674  0102B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 16675                           
 16676                           ;stkvar	_efgtoa$5646 @ sp[(-56)+6]
 16677  0102BC  0ECE               	movlw	-50
 16678  0102BE  006F FF8C  F001    	movff	plusw1,btemp
 16679  0102C4  0ECF               	movlw	-49
 16680  0102C6  50E3               	movf	plusw1,w,c
 16681  0102C8  1001               	iorwf	btemp^0,w,c
 16682  0102CA  B4D8               	btfsc	status,2,c
 16683  0102CC  D017               	goto	l12242
 16684                           
 16685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 16686  0102CE  0EDB               	movlw	low STR_69
 16687  0102D0  6EE6               	movwf	postinc1,c
 16688  0102D2  0EFF               	movlw	high STR_69
 16689  0102D4  6EE6               	movwf	postinc1,c
 16690                           
 16691                           ;stkvar	_n @ sp[(-58)+32]
 16692  0102D6  0E97               	movlw	low _dbuf
 16693  0102D8  6E0B               	movwf	(btemp+10)^0,c
 16694  0102DA  0E02               	movlw	high _dbuf
 16695  0102DC  6E0C               	movwf	(btemp+11)^0,c
 16696  0102DE  0EE6               	movlw	-26
 16697  0102E0  50E3               	movf	plusw1,w,c
 16698  0102E2  260B               	addwf	(btemp+10)^0,f,c
 16699  0102E4  0EE7               	movlw	-25
 16700  0102E6  50E3               	movf	plusw1,w,c
 16701  0102E8  220C               	addwfc	(btemp+11)^0,f,c
 16702  0102EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16703  0102F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 16704  0102F6  EC4B  F0D1         	call	_strcpy	;wreg free
 16705                           
 16706                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 16707  0102FA  D78D               	goto	l12226
 16708  0102FC                     l12242:
 16709                           
 16710                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 16711  0102FC  0EE3               	movlw	low STR_70
 16712  0102FE  6EE6               	movwf	postinc1,c
 16713  010300  0EFF               	movlw	high STR_70
 16714  010302  6EE6               	movwf	postinc1,c
 16715                           
 16716                           ;stkvar	_n @ sp[(-58)+32]
 16717  010304  0E97               	movlw	low _dbuf
 16718  010306  6E0B               	movwf	(btemp+10)^0,c
 16719  010308  0E02               	movlw	high _dbuf
 16720  01030A  6E0C               	movwf	(btemp+11)^0,c
 16721  01030C  0EE6               	movlw	-26
 16722  01030E  50E3               	movf	plusw1,w,c
 16723  010310  260B               	addwf	(btemp+10)^0,f,c
 16724  010312  0EE7               	movlw	-25
 16725  010314  50E3               	movf	plusw1,w,c
 16726  010316  220C               	addwfc	(btemp+11)^0,f,c
 16727  010318  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16728  01031E  0060  F033  FFE6   	movff	btemp+11,postinc1
 16729  010324  EC4B  F0D1         	call	_strcpy	;wreg free
 16730  010328  D776               	goto	l12226
 16731  01032A                     l12250:
 16732                           
 16733                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 16734  01032A  0E00               	movlw	0
 16735  01032C  6E09               	movwf	(btemp+8)^0,c
 16736  01032E  0E00               	movlw	0
 16737  010330  6E0A               	movwf	(btemp+9)^0,c
 16738  010332  0E80               	movlw	128
 16739  010334  6E0B               	movwf	(btemp+10)^0,c
 16740  010336  0E3F               	movlw	63
 16741  010338  6E0C               	movwf	(btemp+11)^0,c
 16742                           
 16743                           ;stkvar	_u @ sp[(-56)+12]
 16744  01033A  0ED4               	movlw	-44
 16745  01033C  0060  F027  FFE3   	movff	btemp+8,plusw1
 16746  010342  0ED5               	movlw	-43
 16747  010344  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16748  01034A  0ED6               	movlw	-42
 16749  01034C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16750  010352  0ED7               	movlw	-41
 16751  010354  0060  F033  FFE3   	movff	btemp+11,plusw1
 16752                           
 16753                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 16754                           ;stkvar	_e @ sp[(-56)+34]
 16755  01035A  0EEA               	movlw	-22
 16756  01035C  6AE3               	clrf	plusw1,c
 16757  01035E  0EEB               	movlw	-21
 16758  010360  6AE3               	clrf	plusw1,c
 16759                           
 16760                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 16761  010362  0E00               	movlw	0
 16762  010364  6EE6               	movwf	postinc1,c
 16763  010366  0E00               	movlw	0
 16764  010368  6EE6               	movwf	postinc1,c
 16765  01036A  0E00               	movlw	0
 16766  01036C  6EE6               	movwf	postinc1,c
 16767  01036E  0E00               	movlw	0
 16768  010370  6EE6               	movwf	postinc1,c
 16769                           
 16770                           ;stkvar	_g @ sp[(-60)+16]
 16771  010372  0ED4               	movlw	-44
 16772  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 16773  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 16774  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 16775  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 16776  01038C  EC85  F0D2         	call	___fleq	;wreg free
 16777  010390  A001               	btfss	btemp& (0+255),0,c
 16778  010392  D039               	goto	l12262
 16779  010394  D0BC               	goto	u11330
 16780  010396                     l12258:
 16781                           
 16782                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 16783  010396  0E00               	movlw	0
 16784  010398  6EE6               	movwf	postinc1,c
 16785  01039A  0E00               	movlw	0
 16786  01039C  6EE6               	movwf	postinc1,c
 16787  01039E  0E20               	movlw	32
 16788  0103A0  6EE6               	movwf	postinc1,c
 16789  0103A2  0E41               	movlw	65
 16790  0103A4  6EE6               	movwf	postinc1,c
 16791                           
 16792                           ;stkvar	_u @ sp[(-60)+12]
 16793  0103A6  0ED0               	movlw	-48
 16794  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16795  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 16796  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 16797  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 16798  0103C0  ECC3  F09E         	call	___flmul	;wreg free
 16799                           
 16800                           ;stkvar	_u @ sp[(-56)+12]
 16801  0103C4  0ED4               	movlw	-44
 16802  0103C6  0060  F007  FFE3   	movff	btemp,plusw1
 16803  0103CC  0ED5               	movlw	-43
 16804  0103CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16805  0103D4  0ED6               	movlw	-42
 16806  0103D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16807  0103DC  0ED7               	movlw	-41
 16808  0103DE  0060  F013  FFE3   	movff	btemp+3,plusw1
 16809                           
 16810                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 16811                           ;stkvar	_e @ sp[(-56)+34]
 16812  0103E4  0EEA               	movlw	-22
 16813  0103E6  50E3               	movf	plusw1,w,c
 16814  0103E8  0F01               	addlw	1
 16815  0103EA  6E01               	movwf	btemp^0,c
 16816  0103EC  0EEA               	movlw	-22
 16817  0103EE  0060  F007  FFE3   	movff	btemp,plusw1
 16818  0103F4  6A01               	clrf	btemp^0,c
 16819  0103F6  0EEB               	movlw	-21
 16820  0103F8  50E3               	movf	plusw1,w,c
 16821  0103FA  2001               	addwfc	btemp^0,w,c
 16822  0103FC  6E01               	movwf	btemp^0,c
 16823  0103FE  0EEB               	movlw	-21
 16824  010400  0060  F007  FFE3   	movff	btemp,plusw1
 16825  010406                     l12262:
 16826                           
 16827                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 16828  010406  0E00               	movlw	0
 16829  010408  6EE6               	movwf	postinc1,c
 16830  01040A  0E00               	movlw	0
 16831  01040C  6EE6               	movwf	postinc1,c
 16832  01040E  0E20               	movlw	32
 16833  010410  6EE6               	movwf	postinc1,c
 16834  010412  0E41               	movlw	65
 16835  010414  6EE6               	movwf	postinc1,c
 16836                           
 16837                           ;stkvar	_u @ sp[(-60)+12]
 16838  010416  0ED0               	movlw	-48
 16839  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 16840  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 16841  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 16842  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 16843  010430  ECC3  F09E         	call	___flmul	;wreg free
 16844  010434  0060  F007  FFE6   	movff	btemp,postinc1
 16845  01043A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16846  010440  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16847  010446  0060  F013  FFE6   	movff	btemp+3,postinc1
 16848                           
 16849                           ;stkvar	_g @ sp[(-60)+16]
 16850  01044C  0ED4               	movlw	-44
 16851  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 16852  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 16853  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 16854  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 16855  010466  ECE8  F0C8         	call	___flge	;wreg free
 16856  01046A  A001               	btfss	btemp& (0+255),0,c
 16857  01046C  D032               	goto	l12268
 16858  01046E  D793               	goto	l12258
 16859  010470                     l12264:
 16860                           
 16861                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 16862  010470  0E00               	movlw	0
 16863  010472  6EE6               	movwf	postinc1,c
 16864  010474  0E00               	movlw	0
 16865  010476  6EE6               	movwf	postinc1,c
 16866  010478  0E20               	movlw	32
 16867  01047A  6EE6               	movwf	postinc1,c
 16868  01047C  0E41               	movlw	65
 16869  01047E  6EE6               	movwf	postinc1,c
 16870                           
 16871                           ;stkvar	_u @ sp[(-60)+12]
 16872  010480  0ED0               	movlw	-48
 16873  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 16874  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 16875  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 16876  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 16877  01049A  ECB6  F0A6         	call	___fldiv	;wreg free
 16878                           
 16879                           ;stkvar	_u @ sp[(-56)+12]
 16880  01049E  0ED4               	movlw	-44
 16881  0104A0  0060  F007  FFE3   	movff	btemp,plusw1
 16882  0104A6  0ED5               	movlw	-43
 16883  0104A8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16884  0104AE  0ED6               	movlw	-42
 16885  0104B0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16886  0104B6  0ED7               	movlw	-41
 16887  0104B8  0060  F013  FFE3   	movff	btemp+3,plusw1
 16888                           
 16889                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 16890                           ;stkvar	_e @ sp[(-56)+34]
 16891  0104BE  50E1               	movf	fsr1l,w,c
 16892  0104C0  0FEA               	addlw	-22
 16893  0104C2  6ED9               	movwf	fsr2l,c
 16894  0104C4  50E2               	movf	fsr1h,w,c
 16895  0104C6  6EDA               	movwf	fsr2h,c
 16896  0104C8  0EFF               	movlw	255
 16897  0104CA  22DA               	addwfc	fsr2h,f,c
 16898  0104CC  06DE               	decf	postinc2,f,c
 16899  0104CE  0E00               	movlw	0
 16900  0104D0  5ADD               	subwfb	postdec2,f,c
 16901  0104D2                     l12268:
 16902                           
 16903                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 16904                           ;stkvar	_u @ sp[(-56)+12]
 16905  0104D2  0ED4               	movlw	-44
 16906  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 16907  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 16908  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 16909  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 16910                           
 16911                           ;stkvar	_g @ sp[(-60)+16]
 16912  0104EC  0ED4               	movlw	-44
 16913  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 16914  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 16915  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 16916  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 16917  010506  ECE8  F0C8         	call	___flge	;wreg free
 16918  01050A  A001               	btfss	btemp& (0+255),0,c
 16919  01050C  D7B1               	goto	l12264
 16920  01050E                     u11330:
 16921                           
 16922                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 16923                           ;stkvar	_c @ sp[(-56)+-7]
 16924  01050E  0EC1               	movlw	-63
 16925  010510  50E3               	movf	plusw1,w,c
 16926  010512  6EE6               	movwf	postinc1,c
 16927  010514  0E00               	movlw	0
 16928  010516  6EE6               	movwf	postinc1,c
 16929  010518  EC4F  F0D7         	call	_tolower	;wreg free
 16930                           
 16931                           ;stkvar	_mode @ sp[(-56)+54]
 16932  01051C  0EFE               	movlw	-2
 16933  01051E  0060  F007  FFE3   	movff	btemp,plusw1
 16934                           
 16935                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 16936                           ;stkvar	_mode @ sp[(-56)+54]
 16937                           ;stkvar	_nmode @ sp[(-56)+55]
 16938  010524  0EFE               	movlw	-2
 16939  010526  006F FF8C  F001    	movff	plusw1,btemp
 16940  01052C  0EFF               	movlw	-1
 16941  01052E  0060  F007  FFE3   	movff	btemp,plusw1
 16942                           
 16943                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 16944                           ;stkvar	_mode @ sp[(-56)+54]
 16945  010534  0EFE               	movlw	-2
 16946  010536  006F FF8C  F001    	movff	plusw1,btemp
 16947  01053C  0E67               	movlw	103
 16948  01053E  1801               	xorwf	btemp^0,w,c
 16949  010540  A4D8               	btfss	status,2,c
 16950  010542  D025               	goto	l12286
 16951                           
 16952                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 16953  010544  503C               	movf	_prec^0,w,c
 16954  010546  103D               	iorwf	(_prec+1)^0,w,c
 16955  010548  A4D8               	btfss	status,2,c
 16956  01054A  D004               	goto	l12280
 16957                           
 16958                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 16959  01054C  0E00               	movlw	0
 16960  01054E  6E3D               	movwf	(_prec+1)^0,c
 16961  010550  0E01               	movlw	1
 16962  010552  6E3C               	movwf	_prec^0,c
 16963  010554                     l12280:
 16964                           
 16965                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 16966  010554  BE3D               	btfsc	(_prec+1)^0,7,c
 16967  010556  D005               	goto	u11360
 16968  010558  503D               	movf	(_prec+1)^0,w,c
 16969  01055A  E110               	bnz	l12284
 16970  01055C  043C               	decf	_prec^0,w,c
 16971  01055E  B0D8               	btfsc	status,0,c
 16972  010560  D00D               	goto	l12284
 16973  010562                     u11360:
 16974  010562  0E06               	movlw	6
 16975  010564  6E0B               	movwf	(btemp+10)^0,c
 16976  010566  0E00               	movlw	0
 16977  010568  6E0C               	movwf	(btemp+11)^0,c
 16978                           
 16979                           ;stkvar	_p @ sp[(-56)+40]
 16980  01056A  0EF0               	movlw	-16
 16981  01056C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16982  010572  0EF1               	movlw	-15
 16983  010574  0060  F033  FFE3   	movff	btemp+11,plusw1
 16984  01057A  D00C               	goto	l12292
 16985  01057C                     l12284:
 16986                           
 16987                           ;stkvar	_p @ sp[(-56)+40]
 16988  01057C  0EF0               	movlw	-16
 16989  01057E  0060  F0F3  FFE3   	movff	_prec,plusw1
 16990  010584  0EF1               	movlw	-15
 16991  010586  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 16992  01058C  D003               	goto	l12292
 16993  01058E                     l12286:
 16994                           
 16995                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 16996  01058E  AE3D               	btfss	(_prec+1)^0,7,c
 16997  010590  D7F5               	goto	l12284
 16998  010592  D7E7               	goto	u11360
 16999  010594                     l12292:
 17000                           
 17001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 17002                           ;stkvar	_mode @ sp[(-56)+54]
 17003  010594  0EFE               	movlw	-2
 17004  010596  006F FF8C  F001    	movff	plusw1,btemp
 17005  01059C  0E67               	movlw	103
 17006  01059E  1801               	xorwf	btemp^0,w,c
 17007  0105A0  A4D8               	btfss	status,2,c
 17008  0105A2  D02F               	goto	l12302
 17009                           
 17010                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 17011                           ;stkvar	_e @ sp[(-56)+34]
 17012  0105A4  0EEB               	movlw	-21
 17013  0105A6  AEE3               	btfss	plusw1,7,c
 17014  0105A8  D00E               	goto	u11390
 17015  0105AA  0EEA               	movlw	-22
 17016  0105AC  006F FF8C  F001    	movff	plusw1,btemp
 17017  0105B2  0EFC               	movlw	252
 17018  0105B4  5E01               	subwf	btemp^0,f,c
 17019  0105B6  0EEB               	movlw	-21
 17020  0105B8  006F FF8C  F001    	movff	plusw1,btemp
 17021  0105BE  0EFF               	movlw	255
 17022  0105C0  5A01               	subwfb	btemp^0,f,c
 17023  0105C2  A0D8               	btfss	status,0,c
 17024  0105C4  D018               	goto	l12300
 17025  0105C6                     u11390:
 17026                           
 17027                           ;stkvar	_e @ sp[(-56)+34]
 17028                           ;stkvar	_p @ sp[(-56)+40]
 17029  0105C6  0EF0               	movlw	-16
 17030  0105C8  50E3               	movf	plusw1,w,c
 17031  0105CA  0FFF               	addlw	255
 17032  0105CC  6E0B               	movwf	(btemp+10)^0,c
 17033  0105CE  0EF1               	movlw	-15
 17034  0105D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 17035  0105D6  0EFF               	movlw	255
 17036  0105D8  220C               	addwfc	(btemp+11)^0,f,c
 17037  0105DA  0EEA               	movlw	-22
 17038  0105DC  50E3               	movf	plusw1,w,c
 17039  0105DE  5C0B               	subwf	(btemp+10)^0,w,c
 17040  0105E0  500C               	movf	(btemp+11)^0,w,c
 17041  0105E2  0A80               	xorlw	128
 17042  0105E4  6E01               	movwf	btemp^0,c
 17043  0105E6  0EEB               	movlw	-21
 17044  0105E8  50E3               	movf	plusw1,w,c
 17045  0105EA  0A80               	xorlw	128
 17046  0105EC  5801               	subwfb	btemp^0,w,c
 17047  0105EE  A0D8               	btfss	status,0,c
 17048  0105F0  D002               	goto	l12300
 17049                           
 17050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 17051  0105F2  0E66               	movlw	102
 17052  0105F4  D001               	goto	L18
 17053  0105F6                     l12300:
 17054                           
 17055                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 17056  0105F6  0E65               	movlw	101
 17057  0105F8                     L18:
 17058  0105F8  6E0C               	movwf	(btemp+11)^0,c
 17059                           
 17060                           ;stkvar	_nmode @ sp[(-56)+55]
 17061  0105FA  0EFF               	movlw	-1
 17062  0105FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 17063  010602                     l12302:
 17064                           
 17065                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 17066                           ;stkvar	_p @ sp[(-56)+40]
 17067                           ;stkvar	_m @ sp[(-56)+48]
 17068  010602  0EF0               	movlw	-16
 17069  010604  006F FF8C  F001    	movff	plusw1,btemp
 17070  01060A  0EF8               	movlw	-8
 17071  01060C  0060  F007  FFE3   	movff	btemp,plusw1
 17072  010612  0EF1               	movlw	-15
 17073  010614  006F FF8C  F001    	movff	plusw1,btemp
 17074  01061A  0EF9               	movlw	-7
 17075  01061C  0060  F007  FFE3   	movff	btemp,plusw1
 17076                           
 17077                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 17078                           ;stkvar	_mode @ sp[(-56)+54]
 17079  010622  0EFE               	movlw	-2
 17080  010624  006F FF8C  F001    	movff	plusw1,btemp
 17081  01062A  0E67               	movlw	103
 17082  01062C  1801               	xorwf	btemp^0,w,c
 17083  01062E  A4D8               	btfss	status,2,c
 17084  010630  D00B               	goto	u11430
 17085                           
 17086                           ;stkvar	_nmode @ sp[(-56)+55]
 17087  010632  0EFF               	movlw	-1
 17088  010634  006F FF8C  F001    	movff	plusw1,btemp
 17089  01063A  0E66               	movlw	102
 17090  01063C  1801               	xorwf	btemp^0,w,c
 17091  01063E  A4D8               	btfss	status,2,c
 17092  010640  D014               	goto	l2283
 17093                           
 17094                           ;stkvar	_e @ sp[(-56)+34]
 17095  010642  0EEB               	movlw	-21
 17096  010644  AEE3               	btfss	plusw1,7,c
 17097  010646  D011               	goto	l2283
 17098  010648                     u11430:
 17099                           
 17100                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 17101                           ;stkvar	_m @ sp[(-56)+48]
 17102  010648  0EF8               	movlw	-8
 17103  01064A  50E3               	movf	plusw1,w,c
 17104  01064C  0F01               	addlw	1
 17105  01064E  6E01               	movwf	btemp^0,c
 17106  010650  0EF8               	movlw	-8
 17107  010652  0060  F007  FFE3   	movff	btemp,plusw1
 17108  010658  6A01               	clrf	btemp^0,c
 17109  01065A  0EF9               	movlw	-7
 17110  01065C  50E3               	movf	plusw1,w,c
 17111  01065E  2001               	addwfc	btemp^0,w,c
 17112  010660  6E01               	movwf	btemp^0,c
 17113  010662  0EF9               	movlw	-7
 17114  010664  0060  F007  FFE3   	movff	btemp,plusw1
 17115  01066A                     l2283:
 17116                           
 17117                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 17118                           ;stkvar	_nmode @ sp[(-56)+55]
 17119  01066A  0EFF               	movlw	-1
 17120  01066C  006F FF8C  F001    	movff	plusw1,btemp
 17121  010672  0E66               	movlw	102
 17122  010674  1801               	xorwf	btemp^0,w,c
 17123  010676  A4D8               	btfss	status,2,c
 17124  010678  D03B               	goto	l12322
 17125                           
 17126                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 17127                           ;stkvar	_e @ sp[(-56)+34]
 17128  01067A  0EEB               	movlw	-21
 17129  01067C  AEE3               	btfss	plusw1,7,c
 17130  01067E  D01C               	goto	l12318
 17131                           
 17132                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 17133  010680  0E00               	movlw	0
 17134  010682  6E09               	movwf	(btemp+8)^0,c
 17135  010684  0E00               	movlw	0
 17136  010686  6E0A               	movwf	(btemp+9)^0,c
 17137  010688  0E80               	movlw	128
 17138  01068A  6E0B               	movwf	(btemp+10)^0,c
 17139  01068C  0E3F               	movlw	63
 17140  01068E  6E0C               	movwf	(btemp+11)^0,c
 17141                           
 17142                           ;stkvar	_u @ sp[(-56)+12]
 17143  010690  0ED4               	movlw	-44
 17144  010692  0060  F027  FFE3   	movff	btemp+8,plusw1
 17145  010698  0ED5               	movlw	-43
 17146  01069A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17147  0106A0  0ED6               	movlw	-42
 17148  0106A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17149  0106A8  0ED7               	movlw	-41
 17150  0106AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 17151                           
 17152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 17153                           ;stkvar	_e @ sp[(-56)+34]
 17154  0106B0  0EEA               	movlw	-22
 17155  0106B2  6AE3               	clrf	plusw1,c
 17156  0106B4  0EEB               	movlw	-21
 17157  0106B6  6AE3               	clrf	plusw1,c
 17158  0106B8                     l12318:
 17159                           
 17160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 17161                           ;stkvar	_mode @ sp[(-56)+54]
 17162  0106B8  0EFE               	movlw	-2
 17163  0106BA  006F FF8C  F001    	movff	plusw1,btemp
 17164  0106C0  0E67               	movlw	103
 17165  0106C2  1801               	xorwf	btemp^0,w,c
 17166  0106C4  B4D8               	btfsc	status,2,c
 17167  0106C6  D014               	goto	l12322
 17168                           
 17169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 17170                           ;stkvar	_e @ sp[(-56)+34]
 17171                           ;stkvar	_m @ sp[(-56)+48]
 17172  0106C8  0EF8               	movlw	-8
 17173  0106CA  50E3               	movf	plusw1,w,c
 17174  0106CC  6E01               	movwf	btemp^0,c
 17175  0106CE  0EEA               	movlw	-22
 17176  0106D0  50E3               	movf	plusw1,w,c
 17177  0106D2  2601               	addwf	btemp^0,f,c
 17178  0106D4  0EF8               	movlw	-8
 17179  0106D6  0060  F007  FFE3   	movff	btemp,plusw1
 17180  0106DC  0EF9               	movlw	-7
 17181  0106DE  50E3               	movf	plusw1,w,c
 17182  0106E0  6E01               	movwf	btemp^0,c
 17183  0106E2  0EEB               	movlw	-21
 17184  0106E4  50E3               	movf	plusw1,w,c
 17185  0106E6  2201               	addwfc	btemp^0,f,c
 17186  0106E8  0EF9               	movlw	-7
 17187  0106EA  0060  F007  FFE3   	movff	btemp,plusw1
 17188  0106F0                     l12322:
 17189                           
 17190                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 17191                           ;stkvar	_i @ sp[(-56)+36]
 17192  0106F0  0EEC               	movlw	-20
 17193  0106F2  6AE3               	clrf	plusw1,c
 17194  0106F4  0EED               	movlw	-19
 17195  0106F6  6AE3               	clrf	plusw1,c
 17196                           
 17197                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 17198                           ;stkvar	_g @ sp[(-56)+16]
 17199  0106F8  0ED8               	movlw	-40
 17200  0106FA  006F FF8C  F009    	movff	plusw1,btemp+8
 17201  010700  0ED9               	movlw	-39
 17202  010702  006F FF8C  F00A    	movff	plusw1,btemp+9
 17203  010708  0EDA               	movlw	-38
 17204  01070A  006F FF8C  F00B    	movff	plusw1,btemp+10
 17205  010710  0EDB               	movlw	-37
 17206  010712  006F FF8C  F00C    	movff	plusw1,btemp+11
 17207                           
 17208                           ;stkvar	_h @ sp[(-56)+24]
 17209  010718  0EE0               	movlw	-32
 17210  01071A  0060  F027  FFE3   	movff	btemp+8,plusw1
 17211  010720  0EE1               	movlw	-31
 17212  010722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17213  010728  0EE2               	movlw	-30
 17214  01072A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17215  010730  0EE3               	movlw	-29
 17216  010732  0060  F033  FFE3   	movff	btemp+11,plusw1
 17217                           
 17218                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 17219                           ;stkvar	_u @ sp[(-56)+12]
 17220  010738  0ED4               	movlw	-44
 17221  01073A  006F FF8C  F009    	movff	plusw1,btemp+8
 17222  010740  0ED5               	movlw	-43
 17223  010742  006F FF8C  F00A    	movff	plusw1,btemp+9
 17224  010748  0ED6               	movlw	-42
 17225  01074A  006F FF8C  F00B    	movff	plusw1,btemp+10
 17226  010750  0ED7               	movlw	-41
 17227  010752  006F FF8C  F00C    	movff	plusw1,btemp+11
 17228                           
 17229                           ;stkvar	_ou @ sp[(-56)+28]
 17230  010758  0EE4               	movlw	-28
 17231  01075A  0060  F027  FFE3   	movff	btemp+8,plusw1
 17232  010760  0EE5               	movlw	-27
 17233  010762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17234  010768  0EE6               	movlw	-26
 17235  01076A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17236  010770  0EE7               	movlw	-25
 17237  010772  0060  F033  FFE3   	movff	btemp+11,plusw1
 17238                           
 17239                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 17240  010778  D0D6               	goto	l12338
 17241  01077A                     l12328:
 17242                           
 17243                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 17244                           ;stkvar	_u @ sp[(-56)+12]
 17245  01077A  0ED4               	movlw	-44
 17246  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 17247  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 17248  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 17249  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 17250                           
 17251                           ;stkvar	_h @ sp[(-60)+24]
 17252  010794  0EDC               	movlw	-36
 17253  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 17254  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 17255  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 17256  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 17257  0107AE  ECB6  F0A6         	call	___fldiv	;wreg free
 17258  0107B2  0060  F007  FFE6   	movff	btemp,postinc1
 17259  0107B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17260  0107BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17261  0107C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 17262  0107CA  EC40  F0B2         	call	_floorf	;wreg free
 17263                           
 17264                           ;stkvar	_l @ sp[(-56)+20]
 17265  0107CE  0EDC               	movlw	-36
 17266  0107D0  0060  F007  FFE3   	movff	btemp,plusw1
 17267  0107D6  0EDD               	movlw	-35
 17268  0107D8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17269  0107DE  0EDE               	movlw	-34
 17270  0107E0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17271  0107E6  0EDF               	movlw	-33
 17272  0107E8  0060  F013  FFE3   	movff	btemp+3,plusw1
 17273                           
 17274                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 17275                           ;stkvar	_l @ sp[(-56)+20]
 17276  0107EE  0EDC               	movlw	-36
 17277  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 17278  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 17279  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 17280  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 17281  010808  EC2F  F0C8         	call	___fltol	;wreg free
 17282  01080C  0060  F004  F00B   	movff	btemp,btemp+10
 17283  010812  0060  F008  F00C   	movff	btemp+1,btemp+11
 17284                           
 17285                           ;stkvar	_d @ sp[(-56)+44]
 17286  010818  0EF4               	movlw	-12
 17287  01081A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17288  010820  0EF5               	movlw	-11
 17289  010822  0060  F033  FFE3   	movff	btemp+11,plusw1
 17290                           
 17291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 17292                           ;stkvar	_u @ sp[(-56)+12]
 17293  010828  0ED4               	movlw	-44
 17294  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 17295  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 17296  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 17297  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 17298                           
 17299                           ;stkvar	_l @ sp[(-60)+20]
 17300  010842  0ED8               	movlw	-40
 17301  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 17302  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 17303  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 17304  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 17305  01085C  ECC3  F09E         	call	___flmul	;wreg free
 17306  010860  0060  F007  FFE6   	movff	btemp,postinc1
 17307  010866  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17308  01086C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17309  010872  0060  F013  FFE6   	movff	btemp+3,postinc1
 17310                           
 17311                           ;stkvar	_h @ sp[(-60)+24]
 17312  010878  0EDC               	movlw	-36
 17313  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 17314  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 17315  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 17316  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 17317  010892  EC36  F0DC         	call	___flsub	;wreg free
 17318                           
 17319                           ;stkvar	_h @ sp[(-56)+24]
 17320  010896  0EE0               	movlw	-32
 17321  010898  0060  F007  FFE3   	movff	btemp,plusw1
 17322  01089E  0EE1               	movlw	-31
 17323  0108A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17324  0108A6  0EE2               	movlw	-30
 17325  0108A8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17326  0108AE  0EE3               	movlw	-29
 17327  0108B0  0060  F013  FFE3   	movff	btemp+3,plusw1
 17328                           
 17329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 17330  0108B6  0E00               	movlw	0
 17331  0108B8  6EE6               	movwf	postinc1,c
 17332  0108BA  0E00               	movlw	0
 17333  0108BC  6EE6               	movwf	postinc1,c
 17334  0108BE  0E20               	movlw	32
 17335  0108C0  6EE6               	movwf	postinc1,c
 17336  0108C2  0E41               	movlw	65
 17337  0108C4  6EE6               	movwf	postinc1,c
 17338                           
 17339                           ;stkvar	_u @ sp[(-60)+12]
 17340  0108C6  0ED0               	movlw	-48
 17341  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 17342  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 17343  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 17344  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 17345  0108E0  ECB6  F0A6         	call	___fldiv	;wreg free
 17346                           
 17347                           ;stkvar	_u @ sp[(-56)+12]
 17348  0108E4  0ED4               	movlw	-44
 17349  0108E6  0060  F007  FFE3   	movff	btemp,plusw1
 17350  0108EC  0ED5               	movlw	-43
 17351  0108EE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17352  0108F4  0ED6               	movlw	-42
 17353  0108F6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17354  0108FC  0ED7               	movlw	-41
 17355  0108FE  0060  F013  FFE3   	movff	btemp+3,plusw1
 17356                           
 17357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 17358                           ;stkvar	_i @ sp[(-56)+36]
 17359  010904  0EEC               	movlw	-20
 17360  010906  50E3               	movf	plusw1,w,c
 17361  010908  0F01               	addlw	1
 17362  01090A  6E01               	movwf	btemp^0,c
 17363  01090C  0EEC               	movlw	-20
 17364  01090E  0060  F007  FFE3   	movff	btemp,plusw1
 17365  010914  6A01               	clrf	btemp^0,c
 17366  010916  0EED               	movlw	-19
 17367  010918  50E3               	movf	plusw1,w,c
 17368  01091A  2001               	addwfc	btemp^0,w,c
 17369  01091C  6E01               	movwf	btemp^0,c
 17370  01091E  0EED               	movlw	-19
 17371  010920  0060  F007  FFE3   	movff	btemp,plusw1
 17372  010926                     l12338:
 17373                           
 17374                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 17375                           ;stkvar	_m @ sp[(-56)+48]
 17376                           ;stkvar	_i @ sp[(-56)+36]
 17377  010926  50E1               	movf	fsr1l,w,c
 17378  010928  0FEC               	addlw	-20
 17379  01092A  6ED9               	movwf	fsr2l,c
 17380  01092C  50E2               	movf	fsr1h,w,c
 17381  01092E  6EDA               	movwf	fsr2h,c
 17382  010930  0EFF               	movlw	255
 17383  010932  22DA               	addwfc	fsr2h,f,c
 17384  010934  0EF8               	movlw	-8
 17385  010936  50E3               	movf	plusw1,w,c
 17386  010938  5CDE               	subwf	postinc2,w,c
 17387  01093A  50DE               	movf	postinc2,w,c
 17388  01093C  0A80               	xorlw	128
 17389  01093E  6E01               	movwf	btemp^0,c
 17390  010940  0EF9               	movlw	-7
 17391  010942  50E3               	movf	plusw1,w,c
 17392  010944  0A80               	xorlw	128
 17393  010946  5801               	subwfb	btemp^0,w,c
 17394  010948  A0D8               	btfss	status,0,c
 17395  01094A  D717               	goto	l12328
 17396                           
 17397                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 17398  01094C  0E00               	movlw	0
 17399  01094E  6EE6               	movwf	postinc1,c
 17400  010950  0E00               	movlw	0
 17401  010952  6EE6               	movwf	postinc1,c
 17402  010954  0EA0               	movlw	160
 17403  010956  6EE6               	movwf	postinc1,c
 17404  010958  0E40               	movlw	64
 17405  01095A  6EE6               	movwf	postinc1,c
 17406                           
 17407                           ;stkvar	_u @ sp[(-60)+12]
 17408  01095C  0ED0               	movlw	-48
 17409  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 17410  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 17411  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 17412  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 17413  010976  ECC3  F09E         	call	___flmul	;wreg free
 17414                           
 17415                           ;stkvar	_l @ sp[(-56)+20]
 17416  01097A  0EDC               	movlw	-36
 17417  01097C  0060  F007  FFE3   	movff	btemp,plusw1
 17418  010982  0EDD               	movlw	-35
 17419  010984  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17420  01098A  0EDE               	movlw	-34
 17421  01098C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17422  010992  0EDF               	movlw	-33
 17423  010994  0060  F013  FFE3   	movff	btemp+3,plusw1
 17424                           
 17425                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 17426                           ;stkvar	_l @ sp[(-56)+20]
 17427  01099A  0EDC               	movlw	-36
 17428  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 17429  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 17430  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 17431  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 17432                           
 17433                           ;stkvar	_h @ sp[(-60)+24]
 17434  0109B4  0EDC               	movlw	-36
 17435  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 17436  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 17437  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 17438  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 17439  0109CE  ECE8  F0C8         	call	___flge	;wreg free
 17440  0109D2  A001               	btfss	btemp& (0+255),0,c
 17441  0109D4  D021               	goto	u11500
 17442                           
 17443                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 17444                           ;stkvar	_l @ sp[(-56)+20]
 17445                           
 17446                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 17447                           
 17448                           ;stkvar	_l @ sp[(-56)+20]
 17449                           
 17450                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 17451  0109D6  0EDC               	movlw	-36
 17452  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 17453  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 17454  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 17455  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 17456                           
 17457                           ;stkvar	_h @ sp[(-60)+24]
 17458  0109F0  0EDC               	movlw	-36
 17459  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 17460  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 17461  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 17462  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 17463  010A0A  EC85  F0D2         	call	___fleq	;wreg free
 17464  010A0E  A001               	btfss	btemp& (0+255),0,c
 17465  010A10  D01B               	goto	l12352
 17466                           
 17467                           ;stkvar	_d @ sp[(-56)+44]
 17468  010A12  0EF4               	movlw	-12
 17469  010A14  B0E3               	btfsc	plusw1,0,c
 17470  010A16  D018               	goto	l12352
 17471  010A18                     u11500:
 17472                           
 17473                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 17474  010A18  0E00               	movlw	0
 17475  010A1A  6E09               	movwf	(btemp+8)^0,c
 17476  010A1C  0E00               	movlw	0
 17477  010A1E  6E0A               	movwf	(btemp+9)^0,c
 17478  010A20  0E00               	movlw	0
 17479  010A22  6E0B               	movwf	(btemp+10)^0,c
 17480  010A24  0E00               	movlw	0
 17481  010A26  6E0C               	movwf	(btemp+11)^0,c
 17482                           
 17483                           ;stkvar	_l @ sp[(-56)+20]
 17484  010A28  0EDC               	movlw	-36
 17485  010A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 17486  010A30  0EDD               	movlw	-35
 17487  010A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17488  010A38  0EDE               	movlw	-34
 17489  010A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17490  010A40  0EDF               	movlw	-33
 17491  010A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 17492  010A48                     l12352:
 17493                           
 17494                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 17495                           ;stkvar	_l @ sp[(-56)+20]
 17496  010A48  0EDC               	movlw	-36
 17497  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 17498  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 17499  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 17500  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 17501                           
 17502                           ;stkvar	_g @ sp[(-60)+16]
 17503  010A62  0ED4               	movlw	-44
 17504  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 17505  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 17506  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 17507  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 17508  010A7C  ECD8  F0A2         	call	___fladd	;wreg free
 17509                           
 17510                           ;stkvar	_h @ sp[(-56)+24]
 17511  010A80  0EE0               	movlw	-32
 17512  010A82  0060  F007  FFE3   	movff	btemp,plusw1
 17513  010A88  0EE1               	movlw	-31
 17514  010A8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17515  010A90  0EE2               	movlw	-30
 17516  010A92  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17517  010A98  0EE3               	movlw	-29
 17518  010A9A  0060  F013  FFE3   	movff	btemp+3,plusw1
 17519                           
 17520                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 17521                           ;stkvar	_ou @ sp[(-56)+28]
 17522  010AA0  0EE4               	movlw	-28
 17523  010AA2  006F FF8C  F009    	movff	plusw1,btemp+8
 17524  010AA8  0EE5               	movlw	-27
 17525  010AAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 17526  010AB0  0EE6               	movlw	-26
 17527  010AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 17528  010AB8  0EE7               	movlw	-25
 17529  010ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 17530                           
 17531                           ;stkvar	_u @ sp[(-56)+12]
 17532  010AC0  0ED4               	movlw	-44
 17533  010AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 17534  010AC8  0ED5               	movlw	-43
 17535  010ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17536  010AD0  0ED6               	movlw	-42
 17537  010AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17538  010AD8  0ED7               	movlw	-41
 17539  010ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 17540                           
 17541                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 17542                           ;stkvar	_nmode @ sp[(-56)+55]
 17543  010AE0  0EFF               	movlw	-1
 17544  010AE2  006F FF8C  F001    	movff	plusw1,btemp
 17545  010AE8  0E65               	movlw	101
 17546  010AEA  1801               	xorwf	btemp^0,w,c
 17547  010AEC  B4D8               	btfsc	status,2,c
 17548  010AEE  D011               	goto	l12360
 17549                           
 17550                           ;stkvar	_e @ sp[(-56)+34]
 17551                           ;stkvar	_ne @ sp[(-56)+46]
 17552  010AF0  0EEA               	movlw	-22
 17553  010AF2  006F FF8C  F001    	movff	plusw1,btemp
 17554  010AF8  0EF6               	movlw	-10
 17555  010AFA  0060  F007  FFE3   	movff	btemp,plusw1
 17556  010B00  0EEB               	movlw	-21
 17557  010B02  006F FF8C  F001    	movff	plusw1,btemp
 17558  010B08  0EF7               	movlw	-9
 17559  010B0A  0060  F007  FFE3   	movff	btemp,plusw1
 17560  010B10  D004               	goto	l2298
 17561  010B12                     l12360:
 17562                           
 17563                           ;stkvar	_ne @ sp[(-56)+46]
 17564  010B12  0EF6               	movlw	-10
 17565  010B14  6AE3               	clrf	plusw1,c
 17566  010B16  0EF7               	movlw	-9
 17567  010B18  6AE3               	clrf	plusw1,c
 17568  010B1A                     l2298:
 17569                           
 17570                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 17571                           ;stkvar	_pp @ sp[(-56)+50]
 17572  010B1A  0EFA               	movlw	-6
 17573  010B1C  6AE3               	clrf	plusw1,c
 17574  010B1E  0EFB               	movlw	-5
 17575  010B20  6AE3               	clrf	plusw1,c
 17576                           
 17577                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 17578                           ;stkvar	_t @ sp[(-56)+52]
 17579  010B22  0EFC               	movlw	-4
 17580  010B24  6AE3               	clrf	plusw1,c
 17581  010B26  0EFD               	movlw	-3
 17582  010B28  6AE3               	clrf	plusw1,c
 17583                           
 17584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 17585                           ;stkvar	_i @ sp[(-56)+36]
 17586  010B2A  0EEC               	movlw	-20
 17587  010B2C  6AE3               	clrf	plusw1,c
 17588  010B2E  0EED               	movlw	-19
 17589  010B30  6AE3               	clrf	plusw1,c
 17590                           
 17591                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 17592  010B32  D1B7               	goto	l12412
 17593  010B34                     l12362:
 17594                           
 17595                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 17596                           ;stkvar	_u @ sp[(-56)+12]
 17597  010B34  0ED4               	movlw	-44
 17598  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 17599  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 17600  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 17601  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 17602                           
 17603                           ;stkvar	_h @ sp[(-60)+24]
 17604  010B4E  0EDC               	movlw	-36
 17605  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 17606  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 17607  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 17608  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 17609  010B68  ECB6  F0A6         	call	___fldiv	;wreg free
 17610  010B6C  0060  F007  FFE6   	movff	btemp,postinc1
 17611  010B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17612  010B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17613  010B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 17614  010B84  EC40  F0B2         	call	_floorf	;wreg free
 17615                           
 17616                           ;stkvar	_l @ sp[(-56)+20]
 17617  010B88  0EDC               	movlw	-36
 17618  010B8A  0060  F007  FFE3   	movff	btemp,plusw1
 17619  010B90  0EDD               	movlw	-35
 17620  010B92  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17621  010B98  0EDE               	movlw	-34
 17622  010B9A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17623  010BA0  0EDF               	movlw	-33
 17624  010BA2  0060  F013  FFE3   	movff	btemp+3,plusw1
 17625                           
 17626                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 17627                           ;stkvar	_l @ sp[(-56)+20]
 17628  010BA8  0EDC               	movlw	-36
 17629  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 17630  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 17631  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 17632  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 17633  010BC2  EC2F  F0C8         	call	___fltol	;wreg free
 17634  010BC6  0060  F004  F00B   	movff	btemp,btemp+10
 17635  010BCC  0060  F008  F00C   	movff	btemp+1,btemp+11
 17636                           
 17637                           ;stkvar	_d @ sp[(-56)+44]
 17638  010BD2  0EF4               	movlw	-12
 17639  010BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17640  010BDA  0EF5               	movlw	-11
 17641  010BDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 17642                           
 17643                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 17644  010BE2  B83E               	btfsc	_flags^0,4,c
 17645  010BE4  D026               	goto	l12376
 17646                           
 17647                           ;stkvar	_d @ sp[(-56)+44]
 17648  010BE6  0EF4               	movlw	-12
 17649  010BE8  006F FF8C  F001    	movff	plusw1,btemp
 17650  010BEE  0EF5               	movlw	-11
 17651  010BF0  50E3               	movf	plusw1,w,c
 17652  010BF2  1001               	iorwf	btemp^0,w,c
 17653  010BF4  A4D8               	btfss	status,2,c
 17654  010BF6  D01D               	goto	l12376
 17655                           
 17656                           ;stkvar	_mode @ sp[(-56)+54]
 17657  010BF8  0EFE               	movlw	-2
 17658  010BFA  006F FF8C  F001    	movff	plusw1,btemp
 17659  010C00  0E67               	movlw	103
 17660  010C02  1801               	xorwf	btemp^0,w,c
 17661  010C04  A4D8               	btfss	status,2,c
 17662  010C06  D015               	goto	l12376
 17663                           
 17664                           ;stkvar	_ne @ sp[(-56)+46]
 17665  010C08  0EF7               	movlw	-9
 17666  010C0A  AEE3               	btfss	plusw1,7,c
 17667  010C0C  D012               	goto	l12376
 17668                           
 17669                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 17670                           ;stkvar	_t @ sp[(-56)+52]
 17671  010C0E  0EFC               	movlw	-4
 17672  010C10  50E3               	movf	plusw1,w,c
 17673  010C12  0F01               	addlw	1
 17674  010C14  6E01               	movwf	btemp^0,c
 17675  010C16  0EFC               	movlw	-4
 17676  010C18  0060  F007  FFE3   	movff	btemp,plusw1
 17677  010C1E  6A01               	clrf	btemp^0,c
 17678  010C20  0EFD               	movlw	-3
 17679  010C22  50E3               	movf	plusw1,w,c
 17680  010C24  2001               	addwfc	btemp^0,w,c
 17681  010C26  6E01               	movwf	btemp^0,c
 17682  010C28  0EFD               	movlw	-3
 17683  010C2A  0060  F007  FFE3   	movff	btemp,plusw1
 17684                           
 17685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 17686  010C30  D0AF               	goto	l12404
 17687  010C32                     l12376:
 17688                           
 17689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 17690                           ;stkvar	_pp @ sp[(-56)+50]
 17691  010C32  0EFA               	movlw	-6
 17692  010C34  006F FF8C  F001    	movff	plusw1,btemp
 17693  010C3A  0EFB               	movlw	-5
 17694  010C3C  50E3               	movf	plusw1,w,c
 17695  010C3E  1001               	iorwf	btemp^0,w,c
 17696  010C40  A4D8               	btfss	status,2,c
 17697  010C42  D070               	goto	l12396
 17698                           
 17699                           ;stkvar	_ne @ sp[(-56)+46]
 17700  010C44  0EF7               	movlw	-9
 17701  010C46  AEE3               	btfss	plusw1,7,c
 17702  010C48  D06D               	goto	l12396
 17703                           
 17704                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 17705                           ;stkvar	_n @ sp[(-56)+32]
 17706  010C4A  0EE8               	movlw	-24
 17707  010C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 17708  010C52  0EE9               	movlw	-23
 17709  010C54  006F FF8C  F00C    	movff	plusw1,btemp+11
 17710  010C5A  0E97               	movlw	low _dbuf
 17711  010C5C  240B               	addwf	(btemp+10)^0,w,c
 17712  010C5E  6ED9               	movwf	fsr2l,c
 17713  010C60  0E02               	movlw	high _dbuf
 17714  010C62  200C               	addwfc	(btemp+11)^0,w,c
 17715  010C64  6EDA               	movwf	fsr2h,c
 17716  010C66  0E2E               	movlw	46
 17717  010C68  6EDF               	movwf	indf2,c
 17718                           
 17719                           ;stkvar	_n @ sp[(-56)+32]
 17720  010C6A  0EE8               	movlw	-24
 17721  010C6C  50E3               	movf	plusw1,w,c
 17722  010C6E  0F01               	addlw	1
 17723  010C70  6E01               	movwf	btemp^0,c
 17724  010C72  0EE8               	movlw	-24
 17725  010C74  0060  F007  FFE3   	movff	btemp,plusw1
 17726  010C7A  6A01               	clrf	btemp^0,c
 17727  010C7C  0EE9               	movlw	-23
 17728  010C7E  50E3               	movf	plusw1,w,c
 17729  010C80  2001               	addwfc	btemp^0,w,c
 17730  010C82  6E01               	movwf	btemp^0,c
 17731  010C84  0EE9               	movlw	-23
 17732  010C86  0060  F007  FFE3   	movff	btemp,plusw1
 17733                           
 17734                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 17735                           ;stkvar	_w @ sp[(-56)+38]
 17736  010C8C  50E1               	movf	fsr1l,w,c
 17737  010C8E  0FEE               	addlw	-18
 17738  010C90  6ED9               	movwf	fsr2l,c
 17739  010C92  50E2               	movf	fsr1h,w,c
 17740  010C94  6EDA               	movwf	fsr2h,c
 17741  010C96  0EFF               	movlw	255
 17742  010C98  22DA               	addwfc	fsr2h,f,c
 17743  010C9A  06DE               	decf	postinc2,f,c
 17744  010C9C  0E00               	movlw	0
 17745  010C9E  5ADD               	subwfb	postdec2,f,c
 17746                           
 17747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 17748  010CA0  0E01               	movlw	1
 17749  010CA2  6E0B               	movwf	(btemp+10)^0,c
 17750  010CA4  0E00               	movlw	0
 17751  010CA6  6E0C               	movwf	(btemp+11)^0,c
 17752                           
 17753                           ;stkvar	_pp @ sp[(-56)+50]
 17754  010CA8  0EFA               	movlw	-6
 17755  010CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17756  010CB0  0EFB               	movlw	-5
 17757  010CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 17758  010CB8  D035               	goto	l12396
 17759  010CBA                     l12388:
 17760                           
 17761                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 17762                           ;stkvar	_n @ sp[(-56)+32]
 17763  010CBA  0EE8               	movlw	-24
 17764  010CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 17765  010CC2  0EE9               	movlw	-23
 17766  010CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 17767  010CCA  0E97               	movlw	low _dbuf
 17768  010CCC  240B               	addwf	(btemp+10)^0,w,c
 17769  010CCE  6ED9               	movwf	fsr2l,c
 17770  010CD0  0E02               	movlw	high _dbuf
 17771  010CD2  200C               	addwfc	(btemp+11)^0,w,c
 17772  010CD4  6EDA               	movwf	fsr2h,c
 17773  010CD6  0E30               	movlw	48
 17774  010CD8  6EDF               	movwf	indf2,c
 17775                           
 17776                           ;stkvar	_n @ sp[(-56)+32]
 17777  010CDA  0EE8               	movlw	-24
 17778  010CDC  50E3               	movf	plusw1,w,c
 17779  010CDE  0F01               	addlw	1
 17780  010CE0  6E01               	movwf	btemp^0,c
 17781  010CE2  0EE8               	movlw	-24
 17782  010CE4  0060  F007  FFE3   	movff	btemp,plusw1
 17783  010CEA  6A01               	clrf	btemp^0,c
 17784  010CEC  0EE9               	movlw	-23
 17785  010CEE  50E3               	movf	plusw1,w,c
 17786  010CF0  2001               	addwfc	btemp^0,w,c
 17787  010CF2  6E01               	movwf	btemp^0,c
 17788  010CF4  0EE9               	movlw	-23
 17789  010CF6  0060  F007  FFE3   	movff	btemp,plusw1
 17790                           
 17791                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 17792                           ;stkvar	_w @ sp[(-56)+38]
 17793  010CFC  50E1               	movf	fsr1l,w,c
 17794  010CFE  0FEE               	addlw	-18
 17795  010D00  6ED9               	movwf	fsr2l,c
 17796  010D02  50E2               	movf	fsr1h,w,c
 17797  010D04  6EDA               	movwf	fsr2h,c
 17798  010D06  0EFF               	movlw	255
 17799  010D08  22DA               	addwfc	fsr2h,f,c
 17800  010D0A  06DE               	decf	postinc2,f,c
 17801  010D0C  0E00               	movlw	0
 17802  010D0E  5ADD               	subwfb	postdec2,f,c
 17803                           
 17804                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 17805                           ;stkvar	_t @ sp[(-56)+52]
 17806  010D10  50E1               	movf	fsr1l,w,c
 17807  010D12  0FFC               	addlw	-4
 17808  010D14  6ED9               	movwf	fsr2l,c
 17809  010D16  50E2               	movf	fsr1h,w,c
 17810  010D18  6EDA               	movwf	fsr2h,c
 17811  010D1A  0EFF               	movlw	255
 17812  010D1C  22DA               	addwfc	fsr2h,f,c
 17813  010D1E  06DE               	decf	postinc2,f,c
 17814  010D20  0E00               	movlw	0
 17815  010D22  5ADD               	subwfb	postdec2,f,c
 17816  010D24                     l12396:
 17817                           
 17818                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 17819                           ;stkvar	_t @ sp[(-56)+52]
 17820  010D24  0EFC               	movlw	-4
 17821  010D26  006F FF8C  F001    	movff	plusw1,btemp
 17822  010D2C  0EFD               	movlw	-3
 17823  010D2E  50E3               	movf	plusw1,w,c
 17824  010D30  1001               	iorwf	btemp^0,w,c
 17825  010D32  A4D8               	btfss	status,2,c
 17826  010D34  D7C2               	goto	l12388
 17827                           
 17828                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 17829                           ;stkvar	_n @ sp[(-56)+32]
 17830  010D36  0EE8               	movlw	-24
 17831  010D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 17832  010D3E  0EE9               	movlw	-23
 17833  010D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 17834  010D46  0E97               	movlw	low _dbuf
 17835  010D48  240B               	addwf	(btemp+10)^0,w,c
 17836  010D4A  6ED9               	movwf	fsr2l,c
 17837  010D4C  0E02               	movlw	high _dbuf
 17838  010D4E  200C               	addwfc	(btemp+11)^0,w,c
 17839  010D50  6EDA               	movwf	fsr2h,c
 17840                           
 17841                           ;stkvar	_d @ sp[(-56)+44]
 17842  010D52  0EF4               	movlw	-12
 17843  010D54  50E3               	movf	plusw1,w,c
 17844  010D56  0F30               	addlw	48
 17845  010D58  6EDF               	movwf	indf2,c
 17846                           
 17847                           ;stkvar	_n @ sp[(-56)+32]
 17848  010D5A  0EE8               	movlw	-24
 17849  010D5C  50E3               	movf	plusw1,w,c
 17850  010D5E  0F01               	addlw	1
 17851  010D60  6E01               	movwf	btemp^0,c
 17852  010D62  0EE8               	movlw	-24
 17853  010D64  0060  F007  FFE3   	movff	btemp,plusw1
 17854  010D6A  6A01               	clrf	btemp^0,c
 17855  010D6C  0EE9               	movlw	-23
 17856  010D6E  50E3               	movf	plusw1,w,c
 17857  010D70  2001               	addwfc	btemp^0,w,c
 17858  010D72  6E01               	movwf	btemp^0,c
 17859  010D74  0EE9               	movlw	-23
 17860  010D76  0060  F007  FFE3   	movff	btemp,plusw1
 17861                           
 17862                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 17863                           ;stkvar	_w @ sp[(-56)+38]
 17864  010D7C  50E1               	movf	fsr1l,w,c
 17865  010D7E  0FEE               	addlw	-18
 17866  010D80  6ED9               	movwf	fsr2l,c
 17867  010D82  50E2               	movf	fsr1h,w,c
 17868  010D84  6EDA               	movwf	fsr2h,c
 17869  010D86  0EFF               	movlw	255
 17870  010D88  22DA               	addwfc	fsr2h,f,c
 17871  010D8A  06DE               	decf	postinc2,f,c
 17872  010D8C  0E00               	movlw	0
 17873  010D8E  5ADD               	subwfb	postdec2,f,c
 17874  010D90                     l12404:
 17875                           
 17876                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 17877                           ;stkvar	_u @ sp[(-56)+12]
 17878  010D90  0ED4               	movlw	-44
 17879  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 17880  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 17881  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 17882  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 17883                           
 17884                           ;stkvar	_l @ sp[(-60)+20]
 17885  010DAA  0ED8               	movlw	-40
 17886  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 17887  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 17888  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 17889  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 17890  010DC4  ECC3  F09E         	call	___flmul	;wreg free
 17891  010DC8  0060  F007  FFE6   	movff	btemp,postinc1
 17892  010DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17893  010DD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17894  010DDA  0060  F013  FFE6   	movff	btemp+3,postinc1
 17895                           
 17896                           ;stkvar	_h @ sp[(-60)+24]
 17897  010DE0  0EDC               	movlw	-36
 17898  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 17899  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 17900  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 17901  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 17902  010DFA  EC36  F0DC         	call	___flsub	;wreg free
 17903                           
 17904                           ;stkvar	_h @ sp[(-56)+24]
 17905  010DFE  0EE0               	movlw	-32
 17906  010E00  0060  F007  FFE3   	movff	btemp,plusw1
 17907  010E06  0EE1               	movlw	-31
 17908  010E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17909  010E0E  0EE2               	movlw	-30
 17910  010E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17911  010E16  0EE3               	movlw	-29
 17912  010E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 17913                           
 17914                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 17915  010E1E  0E00               	movlw	0
 17916  010E20  6EE6               	movwf	postinc1,c
 17917  010E22  0E00               	movlw	0
 17918  010E24  6EE6               	movwf	postinc1,c
 17919  010E26  0E20               	movlw	32
 17920  010E28  6EE6               	movwf	postinc1,c
 17921  010E2A  0E41               	movlw	65
 17922  010E2C  6EE6               	movwf	postinc1,c
 17923                           
 17924                           ;stkvar	_u @ sp[(-60)+12]
 17925  010E2E  0ED0               	movlw	-48
 17926  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 17927  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 17928  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 17929  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 17930  010E48  ECB6  F0A6         	call	___fldiv	;wreg free
 17931                           
 17932                           ;stkvar	_u @ sp[(-56)+12]
 17933  010E4C  0ED4               	movlw	-44
 17934  010E4E  0060  F007  FFE3   	movff	btemp,plusw1
 17935  010E54  0ED5               	movlw	-43
 17936  010E56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17937  010E5C  0ED6               	movlw	-42
 17938  010E5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17939  010E64  0ED7               	movlw	-41
 17940  010E66  0060  F013  FFE3   	movff	btemp+3,plusw1
 17941                           
 17942                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 17943                           ;stkvar	_ne @ sp[(-56)+46]
 17944  010E6C  50E1               	movf	fsr1l,w,c
 17945  010E6E  0FF6               	addlw	-10
 17946  010E70  6ED9               	movwf	fsr2l,c
 17947  010E72  50E2               	movf	fsr1h,w,c
 17948  010E74  6EDA               	movwf	fsr2h,c
 17949  010E76  0EFF               	movlw	255
 17950  010E78  22DA               	addwfc	fsr2h,f,c
 17951  010E7A  06DE               	decf	postinc2,f,c
 17952  010E7C  0E00               	movlw	0
 17953  010E7E  5ADD               	subwfb	postdec2,f,c
 17954                           
 17955                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 17956                           ;stkvar	_i @ sp[(-56)+36]
 17957  010E80  0EEC               	movlw	-20
 17958  010E82  50E3               	movf	plusw1,w,c
 17959  010E84  0F01               	addlw	1
 17960  010E86  6E01               	movwf	btemp^0,c
 17961  010E88  0EEC               	movlw	-20
 17962  010E8A  0060  F007  FFE3   	movff	btemp,plusw1
 17963  010E90  6A01               	clrf	btemp^0,c
 17964  010E92  0EED               	movlw	-19
 17965  010E94  50E3               	movf	plusw1,w,c
 17966  010E96  2001               	addwfc	btemp^0,w,c
 17967  010E98  6E01               	movwf	btemp^0,c
 17968  010E9A  0EED               	movlw	-19
 17969  010E9C  0060  F007  FFE3   	movff	btemp,plusw1
 17970  010EA2                     l12412:
 17971                           
 17972                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 17973                           ;stkvar	_m @ sp[(-56)+48]
 17974                           ;stkvar	_i @ sp[(-56)+36]
 17975  010EA2  50E1               	movf	fsr1l,w,c
 17976  010EA4  0FEC               	addlw	-20
 17977  010EA6  6ED9               	movwf	fsr2l,c
 17978  010EA8  50E2               	movf	fsr1h,w,c
 17979  010EAA  6EDA               	movwf	fsr2h,c
 17980  010EAC  0EFF               	movlw	255
 17981  010EAE  22DA               	addwfc	fsr2h,f,c
 17982  010EB0  0EF8               	movlw	-8
 17983  010EB2  50E3               	movf	plusw1,w,c
 17984  010EB4  5CDE               	subwf	postinc2,w,c
 17985  010EB6  50DE               	movf	postinc2,w,c
 17986  010EB8  0A80               	xorlw	128
 17987  010EBA  6E01               	movwf	btemp^0,c
 17988  010EBC  0EF9               	movlw	-7
 17989  010EBE  50E3               	movf	plusw1,w,c
 17990  010EC0  0A80               	xorlw	128
 17991  010EC2  5801               	subwfb	btemp^0,w,c
 17992  010EC4  B0D8               	btfsc	status,0,c
 17993  010EC6  D00E               	goto	u11600
 17994                           
 17995                           ;stkvar	_n @ sp[(-56)+32]
 17996  010EC8  0EE9               	movlw	-23
 17997  010ECA  BEE3               	btfsc	plusw1,7,c
 17998  010ECC  D633               	goto	l12362
 17999  010ECE  0EE9               	movlw	-23
 18000  010ED0  50E3               	movf	plusw1,w,c
 18001  010ED2  E108               	bnz	u11600
 18002  010ED4  0EE8               	movlw	-24
 18003  010ED6  006F FF8C  F001    	movff	plusw1,btemp
 18004  010EDC  0E4B               	movlw	75
 18005  010EDE  5E01               	subwf	btemp^0,f,c
 18006  010EE0  A0D8               	btfss	status,0,c
 18007  010EE2  D628               	goto	l12362
 18008  010EE4                     u11600:
 18009                           
 18010                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 18011                           ;stkvar	_pp @ sp[(-56)+50]
 18012  010EE4  0EFA               	movlw	-6
 18013  010EE6  006F FF8C  F001    	movff	plusw1,btemp
 18014  010EEC  0EFB               	movlw	-5
 18015  010EEE  50E3               	movf	plusw1,w,c
 18016  010EF0  1001               	iorwf	btemp^0,w,c
 18017  010EF2  B4D8               	btfsc	status,2,c
 18018  010EF4  A83E               	btfss	_flags^0,4,c
 18019  010EF6  D021               	goto	l12424
 18020                           
 18021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 18022                           ;stkvar	_n @ sp[(-56)+32]
 18023  010EF8  0EE8               	movlw	-24
 18024  010EFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 18025  010F00  0EE9               	movlw	-23
 18026  010F02  006F FF8C  F00C    	movff	plusw1,btemp+11
 18027  010F08  0E97               	movlw	low _dbuf
 18028  010F0A  240B               	addwf	(btemp+10)^0,w,c
 18029  010F0C  6ED9               	movwf	fsr2l,c
 18030  010F0E  0E02               	movlw	high _dbuf
 18031  010F10  200C               	addwfc	(btemp+11)^0,w,c
 18032  010F12  6EDA               	movwf	fsr2h,c
 18033  010F14  0E2E               	movlw	46
 18034  010F16  6EDF               	movwf	indf2,c
 18035                           
 18036                           ;stkvar	_n @ sp[(-56)+32]
 18037  010F18  0EE8               	movlw	-24
 18038  010F1A  50E3               	movf	plusw1,w,c
 18039  010F1C  0F01               	addlw	1
 18040  010F1E  6E01               	movwf	btemp^0,c
 18041  010F20  0EE8               	movlw	-24
 18042  010F22  0060  F007  FFE3   	movff	btemp,plusw1
 18043  010F28  6A01               	clrf	btemp^0,c
 18044  010F2A  0EE9               	movlw	-23
 18045  010F2C  50E3               	movf	plusw1,w,c
 18046  010F2E  2001               	addwfc	btemp^0,w,c
 18047  010F30  6E01               	movwf	btemp^0,c
 18048  010F32  0EE9               	movlw	-23
 18049  010F34  0060  F007  FFE3   	movff	btemp,plusw1
 18050  010F3A                     l12424:
 18051                           
 18052                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 18053                           ;stkvar	_n @ sp[(-56)+32]
 18054  010F3A  0EE8               	movlw	-24
 18055  010F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 18056  010F42  0EE9               	movlw	-23
 18057  010F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 18058  010F4A  0E97               	movlw	low _dbuf
 18059  010F4C  240B               	addwf	(btemp+10)^0,w,c
 18060  010F4E  6ED9               	movwf	fsr2l,c
 18061  010F50  0E02               	movlw	high _dbuf
 18062  010F52  200C               	addwfc	(btemp+11)^0,w,c
 18063  010F54  6EDA               	movwf	fsr2h,c
 18064  010F56  0E00               	movlw	0
 18065  010F58  6EDF               	movwf	indf2,c
 18066                           
 18067                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 18068                           ;stkvar	_nmode @ sp[(-56)+55]
 18069  010F5A  0EFF               	movlw	-1
 18070  010F5C  006F FF8C  F001    	movff	plusw1,btemp
 18071  010F62  0E65               	movlw	101
 18072  010F64  1801               	xorwf	btemp^0,w,c
 18073  010F66  A4D8               	btfss	status,2,c
 18074  010F68  EF16  F081         	goto	l12228
 18075                           
 18076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 18077  010F6C  0E4F               	movlw	79
 18078  010F6E  6E0B               	movwf	(btemp+10)^0,c
 18079  010F70  0E00               	movlw	0
 18080  010F72  6E0C               	movwf	(btemp+11)^0,c
 18081                           
 18082                           ;stkvar	_i @ sp[(-56)+36]
 18083  010F74  0EEC               	movlw	-20
 18084  010F76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18085  010F7C  0EED               	movlw	-19
 18086  010F7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 18087                           
 18088                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 18089                           ;stkvar	_i @ sp[(-56)+36]
 18090  010F84  0EEC               	movlw	-20
 18091  010F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 18092  010F8C  0EED               	movlw	-19
 18093  010F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 18094  010F94  0E97               	movlw	low _dbuf
 18095  010F96  240B               	addwf	(btemp+10)^0,w,c
 18096  010F98  6ED9               	movwf	fsr2l,c
 18097  010F9A  0E02               	movlw	high _dbuf
 18098  010F9C  200C               	addwfc	(btemp+11)^0,w,c
 18099  010F9E  6EDA               	movwf	fsr2h,c
 18100  010FA0  0E00               	movlw	0
 18101  010FA2  6EDF               	movwf	indf2,c
 18102                           
 18103                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 18104                           ;stkvar	_sign @ sp[(-56)+42]
 18105  010FA4  0EF2               	movlw	-14
 18106  010FA6  6AE3               	clrf	plusw1,c
 18107  010FA8  0EF3               	movlw	-13
 18108  010FAA  6AE3               	clrf	plusw1,c
 18109                           
 18110                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 18111                           ;stkvar	_e @ sp[(-56)+34]
 18112  010FAC  0EEB               	movlw	-21
 18113  010FAE  AEE3               	btfss	plusw1,7,c
 18114  010FB0  D012               	goto	l12438
 18115                           
 18116                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 18117  010FB2  0E01               	movlw	1
 18118  010FB4  6E0B               	movwf	(btemp+10)^0,c
 18119  010FB6  0E00               	movlw	0
 18120  010FB8  6E0C               	movwf	(btemp+11)^0,c
 18121                           
 18122                           ;stkvar	_sign @ sp[(-56)+42]
 18123  010FBA  0EF2               	movlw	-14
 18124  010FBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18125  010FC2  0EF3               	movlw	-13
 18126  010FC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 18127                           
 18128                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 18129                           ;stkvar	_e @ sp[(-56)+34]
 18130                           ;stkvar	_e @ sp[(-56)+34]
 18131  010FCA  0EEA               	movlw	-22
 18132  010FCC  6CE3               	negf	plusw1,c
 18133  010FCE  0EEB               	movlw	-21
 18134  010FD0  1EE3               	comf	plusw1,f,c
 18135  010FD2  B0D8               	btfsc	status,0,c
 18136  010FD4  2AE3               	incf	plusw1,f,c
 18137  010FD6                     l12438:
 18138                           
 18139                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 18140  010FD6  0E02               	movlw	2
 18141  010FD8  6E0B               	movwf	(btemp+10)^0,c
 18142  010FDA  0E00               	movlw	0
 18143  010FDC  6E0C               	movwf	(btemp+11)^0,c
 18144                           
 18145                           ;stkvar	_p @ sp[(-56)+40]
 18146  010FDE  0EF0               	movlw	-16
 18147  010FE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18148  010FE6  0EF1               	movlw	-15
 18149  010FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 18150                           
 18151                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 18152  010FEE  D051               	goto	l12450
 18153  010FF0                     l12440:
 18154                           
 18155                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 18156                           ;stkvar	_i @ sp[(-56)+36]
 18157  010FF0  50E1               	movf	fsr1l,w,c
 18158  010FF2  0FEC               	addlw	-20
 18159  010FF4  6ED9               	movwf	fsr2l,c
 18160  010FF6  50E2               	movf	fsr1h,w,c
 18161  010FF8  6EDA               	movwf	fsr2h,c
 18162  010FFA  0EFF               	movlw	255
 18163  010FFC  22DA               	addwfc	fsr2h,f,c
 18164  010FFE  06DE               	decf	postinc2,f,c
 18165  011000  0E00               	movlw	0
 18166  011002  5ADD               	subwfb	postdec2,f,c
 18167                           
 18168                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 18169                           ;stkvar	_i @ sp[(-56)+36]
 18170  011004  0EEC               	movlw	-20
 18171  011006  006F FF8C  F00B    	movff	plusw1,btemp+10
 18172  01100C  0EED               	movlw	-19
 18173  01100E  006F FF8C  F00C    	movff	plusw1,btemp+11
 18174  011014  0E97               	movlw	low _dbuf
 18175  011016  240B               	addwf	(btemp+10)^0,w,c
 18176  011018  6ED9               	movwf	fsr2l,c
 18177  01101A  0E02               	movlw	high _dbuf
 18178  01101C  200C               	addwfc	(btemp+11)^0,w,c
 18179  01101E  6EDA               	movwf	fsr2h,c
 18180  011020  0E0A               	movlw	10
 18181  011022  6EE6               	movwf	postinc1,c
 18182  011024  0E00               	movlw	0
 18183  011026  6EE6               	movwf	postinc1,c
 18184                           
 18185                           ;stkvar	_e @ sp[(-58)+34]
 18186  011028  0EE8               	movlw	-24
 18187  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 18188  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 18189  011036  EC56  F0CD         	call	___awmod	;wreg free
 18190  01103A  5001               	movf	btemp^0,w,c
 18191  01103C  0F30               	addlw	48
 18192  01103E  6EDF               	movwf	indf2,c
 18193                           
 18194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 18195  011040  0E0A               	movlw	10
 18196  011042  6EE6               	movwf	postinc1,c
 18197  011044  0E00               	movlw	0
 18198  011046  6EE6               	movwf	postinc1,c
 18199                           
 18200                           ;stkvar	_e @ sp[(-58)+34]
 18201  011048  0EE8               	movlw	-24
 18202  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 18203  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 18204  011056  EC4B  F0CA         	call	___awdiv	;wreg free
 18205                           
 18206                           ;stkvar	_e @ sp[(-56)+34]
 18207  01105A  0EEA               	movlw	-22
 18208  01105C  0060  F007  FFE3   	movff	btemp,plusw1
 18209  011062  0EEB               	movlw	-21
 18210  011064  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18211                           
 18212                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 18213                           ;stkvar	_p @ sp[(-56)+40]
 18214  01106A  50E1               	movf	fsr1l,w,c
 18215  01106C  0FF0               	addlw	-16
 18216  01106E  6ED9               	movwf	fsr2l,c
 18217  011070  50E2               	movf	fsr1h,w,c
 18218  011072  6EDA               	movwf	fsr2h,c
 18219  011074  0EFF               	movlw	255
 18220  011076  22DA               	addwfc	fsr2h,f,c
 18221  011078  06DE               	decf	postinc2,f,c
 18222  01107A  0E00               	movlw	0
 18223  01107C  5ADD               	subwfb	postdec2,f,c
 18224                           
 18225                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 18226                           ;stkvar	_w @ sp[(-56)+38]
 18227  01107E  50E1               	movf	fsr1l,w,c
 18228  011080  0FEE               	addlw	-18
 18229  011082  6ED9               	movwf	fsr2l,c
 18230  011084  50E2               	movf	fsr1h,w,c
 18231  011086  6EDA               	movwf	fsr2h,c
 18232  011088  0EFF               	movlw	255
 18233  01108A  22DA               	addwfc	fsr2h,f,c
 18234  01108C  06DE               	decf	postinc2,f,c
 18235  01108E  0E00               	movlw	0
 18236  011090  5ADD               	subwfb	postdec2,f,c
 18237  011092                     l12450:
 18238                           
 18239                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 18240                           ;stkvar	_e @ sp[(-56)+34]
 18241  011092  0EEA               	movlw	-22
 18242  011094  006F FF8C  F001    	movff	plusw1,btemp
 18243  01109A  0EEB               	movlw	-21
 18244  01109C  50E3               	movf	plusw1,w,c
 18245  01109E  1001               	iorwf	btemp^0,w,c
 18246  0110A0  A4D8               	btfss	status,2,c
 18247  0110A2  D7A6               	goto	l12440
 18248                           
 18249                           ;stkvar	_p @ sp[(-56)+40]
 18250  0110A4  0EF1               	movlw	-15
 18251  0110A6  BEE3               	btfsc	plusw1,7,c
 18252  0110A8  D007               	goto	u11660
 18253  0110AA  0EF1               	movlw	-15
 18254  0110AC  50E3               	movf	plusw1,w,c
 18255  0110AE  E1A0               	bnz	l12440
 18256  0110B0  0EF0               	movlw	-16
 18257  0110B2  04E3               	decf	plusw1,w,c
 18258  0110B4  B0D8               	btfsc	status,0,c
 18259  0110B6  D79C               	goto	l12440
 18260  0110B8                     u11660:
 18261                           
 18262                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 18263                           ;stkvar	_i @ sp[(-56)+36]
 18264  0110B8  50E1               	movf	fsr1l,w,c
 18265  0110BA  0FEC               	addlw	-20
 18266  0110BC  6ED9               	movwf	fsr2l,c
 18267  0110BE  50E2               	movf	fsr1h,w,c
 18268  0110C0  6EDA               	movwf	fsr2h,c
 18269  0110C2  0EFF               	movlw	255
 18270  0110C4  22DA               	addwfc	fsr2h,f,c
 18271  0110C6  06DE               	decf	postinc2,f,c
 18272  0110C8  0E00               	movlw	0
 18273  0110CA  5ADD               	subwfb	postdec2,f,c
 18274                           
 18275                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 18276                           ;stkvar	_sign @ sp[(-56)+42]
 18277  0110CC  0EF2               	movlw	-14
 18278  0110CE  006F FF8C  F001    	movff	plusw1,btemp
 18279  0110D4  0EF3               	movlw	-13
 18280  0110D6  50E3               	movf	plusw1,w,c
 18281  0110D8  1001               	iorwf	btemp^0,w,c
 18282  0110DA  A4D8               	btfss	status,2,c
 18283  0110DC  D002               	goto	l12460
 18284  0110DE  0E2B               	movlw	43
 18285  0110E0  D001               	goto	L19
 18286  0110E2                     l12460:
 18287  0110E2  0E2D               	movlw	45
 18288  0110E4                     L19:
 18289  0110E4  6E0B               	movwf	(btemp+10)^0,c
 18290  0110E6  0E00               	movlw	0
 18291  0110E8  6E0C               	movwf	(btemp+11)^0,c
 18292                           
 18293                           ;stkvar	_efgtoa$5650 @ sp[(-56)+4]
 18294  0110EA  0ECC               	movlw	-52
 18295  0110EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18296  0110F2  0ECD               	movlw	-51
 18297  0110F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 18298                           
 18299                           ;stkvar	_efgtoa$5650 @ sp[(-56)+4]
 18300                           ;stkvar	_i @ sp[(-56)+36]
 18301  0110FA  0EEC               	movlw	-20
 18302  0110FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 18303  011102  0EED               	movlw	-19
 18304  011104  006F FF8C  F00C    	movff	plusw1,btemp+11
 18305  01110A  0E97               	movlw	low _dbuf
 18306  01110C  240B               	addwf	(btemp+10)^0,w,c
 18307  01110E  6ED9               	movwf	fsr2l,c
 18308  011110  0E02               	movlw	high _dbuf
 18309  011112  200C               	addwfc	(btemp+11)^0,w,c
 18310  011114  6EDA               	movwf	fsr2h,c
 18311  011116  0ECC               	movlw	-52
 18312  011118  006F FF8F FFDF     	movff	plusw1,indf2
 18313                           
 18314                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 18315                           ;stkvar	_w @ sp[(-56)+38]
 18316  01111E  50E1               	movf	fsr1l,w,c
 18317  011120  0FEE               	addlw	-18
 18318  011122  6ED9               	movwf	fsr2l,c
 18319  011124  50E2               	movf	fsr1h,w,c
 18320  011126  6EDA               	movwf	fsr2h,c
 18321  011128  0EFF               	movlw	255
 18322  01112A  22DA               	addwfc	fsr2h,f,c
 18323  01112C  06DE               	decf	postinc2,f,c
 18324  01112E  0E00               	movlw	0
 18325  011130  5ADD               	subwfb	postdec2,f,c
 18326                           
 18327                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 18328                           ;stkvar	_i @ sp[(-56)+36]
 18329  011132  50E1               	movf	fsr1l,w,c
 18330  011134  0FEC               	addlw	-20
 18331  011136  6ED9               	movwf	fsr2l,c
 18332  011138  50E2               	movf	fsr1h,w,c
 18333  01113A  6EDA               	movwf	fsr2h,c
 18334  01113C  0EFF               	movlw	255
 18335  01113E  22DA               	addwfc	fsr2h,f,c
 18336  011140  06DE               	decf	postinc2,f,c
 18337  011142  0E00               	movlw	0
 18338  011144  5ADD               	subwfb	postdec2,f,c
 18339  011146  0EBF               	movlw	191
 18340  011148  6E0B               	movwf	(btemp+10)^0,c
 18341  01114A  0EFF               	movlw	255
 18342  01114C  6E0C               	movwf	(btemp+11)^0,c
 18343                           
 18344                           ;stkvar	_c @ sp[(-56)+-7]
 18345  01114E  0EC1               	movlw	-63
 18346  011150  50E3               	movf	plusw1,w,c
 18347  011152  6E09               	movwf	(btemp+8)^0,c
 18348  011154  6A0A               	clrf	(btemp+9)^0,c
 18349  011156  500B               	movf	(btemp+10)^0,w,c
 18350  011158  2609               	addwf	(btemp+8)^0,f,c
 18351  01115A  500C               	movf	(btemp+11)^0,w,c
 18352  01115C  220A               	addwfc	(btemp+9)^0,f,c
 18353  01115E  500A               	movf	(btemp+9)^0,w,c
 18354  011160  E106               	bnz	u11680
 18355  011162  0E1A               	movlw	26
 18356  011164  5C09               	subwf	(btemp+8)^0,w,c
 18357  011166  B0D8               	btfsc	status,0,c
 18358  011168  D002               	goto	u11680
 18359  01116A  0E01               	movlw	1
 18360  01116C  D001               	goto	u11690
 18361  01116E                     u11680:
 18362  01116E  0E00               	movlw	0
 18363  011170                     u11690:
 18364  011170  6E0B               	movwf	(btemp+10)^0,c
 18365  011172  6A0C               	clrf	(btemp+11)^0,c
 18366                           
 18367                           ;stkvar	_efgtoa$5652 @ sp[(-56)+0]
 18368  011174  0EC8               	movlw	-56
 18369  011176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18370  01117C  0EC9               	movlw	-55
 18371  01117E  0060  F033  FFE3   	movff	btemp+11,plusw1
 18372                           
 18373                           ;stkvar	_efgtoa$5652 @ sp[(-56)+0]
 18374  011184  0EC8               	movlw	-56
 18375  011186  006F FF8C  F001    	movff	plusw1,btemp
 18376  01118C  0EC9               	movlw	-55
 18377  01118E  50E3               	movf	plusw1,w,c
 18378  011190  1001               	iorwf	btemp^0,w,c
 18379  011192  A4D8               	btfss	status,2,c
 18380  011194  D002               	goto	l12476
 18381  011196  0E65               	movlw	101
 18382  011198  D001               	goto	L20
 18383  01119A                     l12476:
 18384  01119A  0E45               	movlw	69
 18385  01119C                     L20:
 18386  01119C  6E0B               	movwf	(btemp+10)^0,c
 18387  01119E  0E00               	movlw	0
 18388  0111A0  6E0C               	movwf	(btemp+11)^0,c
 18389                           
 18390                           ;stkvar	_efgtoa$5651 @ sp[(-56)+2]
 18391  0111A2  0ECA               	movlw	-54
 18392  0111A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18393  0111AA  0ECB               	movlw	-53
 18394  0111AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 18395                           
 18396                           ;stkvar	_efgtoa$5651 @ sp[(-56)+2]
 18397                           ;stkvar	_i @ sp[(-56)+36]
 18398  0111B2  0EEC               	movlw	-20
 18399  0111B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 18400  0111BA  0EED               	movlw	-19
 18401  0111BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 18402  0111C2  0E97               	movlw	low _dbuf
 18403  0111C4  240B               	addwf	(btemp+10)^0,w,c
 18404  0111C6  6ED9               	movwf	fsr2l,c
 18405  0111C8  0E02               	movlw	high _dbuf
 18406  0111CA  200C               	addwfc	(btemp+11)^0,w,c
 18407  0111CC  6EDA               	movwf	fsr2h,c
 18408  0111CE  0ECA               	movlw	-54
 18409  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 18410                           
 18411                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 18412                           ;stkvar	_w @ sp[(-56)+38]
 18413  0111D6  50E1               	movf	fsr1l,w,c
 18414  0111D8  0FEE               	addlw	-18
 18415  0111DA  6ED9               	movwf	fsr2l,c
 18416  0111DC  50E2               	movf	fsr1h,w,c
 18417  0111DE  6EDA               	movwf	fsr2h,c
 18418  0111E0  0EFF               	movlw	255
 18419  0111E2  22DA               	addwfc	fsr2h,f,c
 18420  0111E4  06DE               	decf	postinc2,f,c
 18421  0111E6  0E00               	movlw	0
 18422  0111E8  5ADD               	subwfb	postdec2,f,c
 18423                           
 18424                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 18425                           ;stkvar	_i @ sp[(-56)+36]
 18426  0111EA  0EEC               	movlw	-20
 18427  0111EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 18428  0111F2  0EED               	movlw	-19
 18429  0111F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 18430  0111FA  0E97               	movlw	low _dbuf
 18431  0111FC  240B               	addwf	(btemp+10)^0,w,c
 18432  0111FE  6E09               	movwf	(btemp+8)^0,c
 18433  011200  0E02               	movlw	high _dbuf
 18434  011202  200C               	addwfc	(btemp+11)^0,w,c
 18435  011204  6E0A               	movwf	(btemp+9)^0,c
 18436  011206  0060  F027  FFE6   	movff	btemp+8,postinc1
 18437  01120C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 18438                           
 18439                           ;stkvar	_n @ sp[(-58)+32]
 18440  011212  0E97               	movlw	low _dbuf
 18441  011214  6E0B               	movwf	(btemp+10)^0,c
 18442  011216  0E02               	movlw	high _dbuf
 18443  011218  6E0C               	movwf	(btemp+11)^0,c
 18444  01121A  0EE6               	movlw	-26
 18445  01121C  50E3               	movf	plusw1,w,c
 18446  01121E  260B               	addwf	(btemp+10)^0,f,c
 18447  011220  0EE7               	movlw	-25
 18448  011222  50E3               	movf	plusw1,w,c
 18449  011224  220C               	addwfc	(btemp+11)^0,f,c
 18450  011226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18451  01122C  0060  F033  FFE6   	movff	btemp+11,postinc1
 18452  011232  EC4B  F0D1         	call	_strcpy	;wreg free
 18453  011236  EF16  F081         	goto	l12228
 18454  01123A                     l2254:
 18455                           
 18456                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 18457  01123A  0EC1               	movlw	193
 18458  01123C  26E1               	addwf	fsr1l,f,c
 18459  01123E  0EFF               	movlw	255
 18460  011240  22E2               	addwfc	fsr1h,f,c
 18461  011242  0012               	return		;funcret
 18462  011244                     __end_of_efgtoa:
 18463                           	opt callstack 0
 18464                           
 18465 ;; *************** function _tolower *****************
 18466 ;; Defined at:
 18467 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 18468 ;; Parameters:    Size  Location     Type
 18469 ;;  c               2  [STACK] int 
 18470 ;; Auto vars:     Size  Location     Type
 18471 ;;		None
 18472 ;; Return value:  Size  Location     Type
 18473 ;;                  2  [STACK] int 
 18474 ;; Registers used:
 18475 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 18476 ;; Tracked objects:
 18477 ;;		On entry : 0/0
 18478 ;;		On exit  : 0/0
 18479 ;;		Unchanged: 0/0
 18480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18485 ;;Total ram usage:        0 bytes
 18486 ;; Hardware stack levels used:    1
 18487 ;; Hardware stack levels required when called:   16
 18488 ;; This function calls:
 18489 ;;		_isupper
 18490 ;; This function is called by:
 18491 ;;		_efgtoa
 18492 ;;		_vfpfcnvrt
 18493 ;; This function uses a reentrant model
 18494 ;;
 18495                           
 18496                           	psect	text60
 18497  01AE9E                     __ptext60:
 18498                           	opt callstack 0
 18499  01AE9E                     _tolower:
 18500                           	opt callstack 0
 18501                           
 18502                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18503  01AE9E  52E6               	movf	postinc1,f,c
 18504  01AEA0  52E6               	movf	postinc1,f,c
 18505                           
 18506                           ;stkvar	_c @ sp[(-2)+-2]
 18507                           
 18508                           ;incstack = 0
 18509 ;; hardware stack exceeded
 18510  01AEA2  0EFC               	movlw	-4
 18511  01AEA4  50E3               	movf	plusw1,w,c
 18512  01AEA6  0FBF               	addlw	191
 18513  01AEA8  6E0B               	movwf	(btemp+10)^0,c
 18514  01AEAA  0EFD               	movlw	-3
 18515  01AEAC  006F FF8C  F00C    	movff	plusw1,btemp+11
 18516  01AEB2  0EFF               	movlw	255
 18517  01AEB4  220C               	addwfc	(btemp+11)^0,f,c
 18518  01AEB6  500C               	movf	(btemp+11)^0,w,c
 18519  01AEB8  E106               	bnz	u6150
 18520  01AEBA  0E1A               	movlw	26
 18521  01AEBC  5C0B               	subwf	(btemp+10)^0,w,c
 18522  01AEBE  B0D8               	btfsc	status,0,c
 18523  01AEC0  D002               	goto	u6150
 18524  01AEC2  0E01               	movlw	1
 18525  01AEC4  D001               	goto	u6160
 18526  01AEC6                     u6150:
 18527  01AEC6  0E00               	movlw	0
 18528  01AEC8                     u6160:
 18529  01AEC8  6E0B               	movwf	(btemp+10)^0,c
 18530  01AECA  6A0C               	clrf	(btemp+11)^0,c
 18531                           
 18532                           ;stkvar	_tolower$6471 @ sp[(-2)+0]
 18533  01AECC  0EFE               	movlw	-2
 18534  01AECE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18535  01AED4  0EFF               	movlw	-1
 18536  01AED6  0060  F033  FFE3   	movff	btemp+11,plusw1
 18537                           
 18538                           ;stkvar	_tolower$6471 @ sp[(-2)+0]
 18539  01AEDC  0EFE               	movlw	-2
 18540  01AEDE  006F FF8C  F001    	movff	plusw1,btemp
 18541  01AEE4  0EFF               	movlw	-1
 18542  01AEE6  50E3               	movf	plusw1,w,c
 18543  01AEE8  1001               	iorwf	btemp^0,w,c
 18544  01AEEA  B4D8               	btfsc	status,2,c
 18545  01AEEC  D00D               	goto	l8172
 18546                           
 18547                           ;stkvar	_c @ sp[(-2)+-2]
 18548  01AEEE  0EFC               	movlw	-4
 18549  01AEF0  006F FF8C  F001    	movff	plusw1,btemp
 18550  01AEF6  0EFD               	movlw	-3
 18551  01AEF8  006F FF8C  F002    	movff	plusw1,btemp+1
 18552  01AEFE  0E20               	movlw	32
 18553  01AF00  1201               	iorwf	btemp^0,f,c
 18554  01AF02  0E00               	movlw	0
 18555  01AF04  1202               	iorwf	(btemp+1)^0,f,c
 18556  01AF06  D008               	goto	l3526
 18557  01AF08                     l8172:
 18558                           
 18559                           ;stkvar	_c @ sp[(-2)+-2]
 18560  01AF08  0EFC               	movlw	-4
 18561  01AF0A  006F FF8C  F001    	movff	plusw1,btemp
 18562  01AF10  0EFD               	movlw	-3
 18563  01AF12  006F FF8C  F002    	movff	plusw1,btemp+1
 18564  01AF18                     l3526:
 18565                           
 18566                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18567  01AF18  52E5               	movf	postdec1,f,c
 18568  01AF1A  52E5               	movf	postdec1,f,c
 18569  01AF1C  52E5               	movf	postdec1,f,c
 18570  01AF1E  52E5               	movf	postdec1,f,c
 18571  01AF20  0012               	return		;funcret
 18572  01AF22                     __end_of_tolower:
 18573                           	opt callstack 0
 18574                           
 18575 ;; *************** function _isupper *****************
 18576 ;; Defined at:
 18577 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 18578 ;; Parameters:    Size  Location     Type
 18579 ;;  c               2  [STACK] int 
 18580 ;; Auto vars:     Size  Location     Type
 18581 ;;		None
 18582 ;; Return value:  Size  Location     Type
 18583 ;;                  2  [STACK] int 
 18584 ;; Registers used:
 18585 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 18586 ;; Tracked objects:
 18587 ;;		On entry : 0/0
 18588 ;;		On exit  : 0/0
 18589 ;;		Unchanged: 0/0
 18590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18595 ;;Total ram usage:        0 bytes
 18596 ;; Hardware stack levels used:    1
 18597 ;; Hardware stack levels required when called:   15
 18598 ;; This function calls:
 18599 ;;		Nothing
 18600 ;; This function is called by:
 18601 ;;		_efgtoa
 18602 ;;		_xtoa
 18603 ;;		_vfpfcnvrt
 18604 ;;		_tolower
 18605 ;; This function uses a reentrant model
 18606 ;;
 18607                           
 18608                           	psect	text61
 18609  01BC94                     __ptext61:
 18610                           	opt callstack 0
 18611  01BC94                     _isupper:
 18612                           	opt callstack 0
 18613                           
 18614                           ;stkvar	_c @ sp[(0)+-2]
 18615                           
 18616                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18617                           ;incstack = 0
 18618 ;; hardware stack exceeded
 18619  01BC94  0EFE               	movlw	-2
 18620  01BC96  50E3               	movf	plusw1,w,c
 18621  01BC98  0FBF               	addlw	191
 18622  01BC9A  6E0B               	movwf	(btemp+10)^0,c
 18623  01BC9C  0EFF               	movlw	-1
 18624  01BC9E  006F FF8C  F00C    	movff	plusw1,btemp+11
 18625  01BCA4  0EFF               	movlw	255
 18626  01BCA6  220C               	addwfc	(btemp+11)^0,f,c
 18627  01BCA8  500C               	movf	(btemp+11)^0,w,c
 18628  01BCAA  E106               	bnz	u5500
 18629  01BCAC  0E1A               	movlw	26
 18630  01BCAE  5C0B               	subwf	(btemp+10)^0,w,c
 18631  01BCB0  B0D8               	btfsc	status,0,c
 18632  01BCB2  D002               	goto	u5500
 18633  01BCB4  0E01               	movlw	1
 18634  01BCB6  D001               	goto	u5510
 18635  01BCB8                     u5500:
 18636  01BCB8  0E00               	movlw	0
 18637  01BCBA                     u5510:
 18638  01BCBA  6E01               	movwf	btemp^0,c
 18639  01BCBC  6A02               	clrf	(btemp+1)^0,c
 18640                           
 18641                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18642  01BCBE  52E5               	movf	postdec1,f,c
 18643  01BCC0  52E5               	movf	postdec1,f,c
 18644  01BCC2  0012               	return		;funcret
 18645  01BCC4                     __end_of_isupper:
 18646                           	opt callstack 0
 18647                           
 18648 ;; *************** function _strcpy *****************
 18649 ;; Defined at:
 18650 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 18651 ;; Parameters:    Size  Location     Type
 18652 ;;  dest            2  [STACK] PTR unsigned char 
 18653 ;;		 -> dbuf(80), 
 18654 ;;  src             2  [STACK] PTR const unsigned char 
 18655 ;;		 -> STR_70(4), STR_69(4), STR_66(4), STR_65(4), 
 18656 ;;		 -> dbuf(80), 
 18657 ;; Auto vars:     Size  Location     Type
 18658 ;;  d               2  [STACK] PTR unsigned char 
 18659 ;;		 -> dbuf(80), 
 18660 ;;  s               2  [STACK] PTR const unsigned char 
 18661 ;;		 -> STR_70(4), STR_69(4), STR_66(4), STR_65(4), 
 18662 ;;		 -> dbuf(80), 
 18663 ;; Return value:  Size  Location     Type
 18664 ;;                  2  [STACK] PTR unsigned char 
 18665 ;; Registers used:
 18666 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 18667 ;; Tracked objects:
 18668 ;;		On entry : 0/0
 18669 ;;		On exit  : 0/0
 18670 ;;		Unchanged: 0/0
 18671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18676 ;;Total ram usage:        0 bytes
 18677 ;; Hardware stack levels used:    1
 18678 ;; Hardware stack levels required when called:   15
 18679 ;; This function calls:
 18680 ;;		Nothing
 18681 ;; This function is called by:
 18682 ;;		_efgtoa
 18683 ;; This function uses a reentrant model
 18684 ;;
 18685                           
 18686                           	psect	text62
 18687  01A296                     __ptext62:
 18688                           	opt callstack 0
 18689  01A296                     _strcpy:
 18690                           	opt callstack 0
 18691                           
 18692                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18693  01A296  52E6               	movf	postinc1,f,c
 18694  01A298  52E6               	movf	postinc1,f,c
 18695  01A29A  52E6               	movf	postinc1,f,c
 18696  01A29C  52E6               	movf	postinc1,f,c
 18697                           
 18698                           ;stkvar	_src @ sp[(-4)+-4]
 18699                           
 18700                           ;incstack = 0
 18701 ;; hardware stack exceeded
 18702  01A29E  0EF8               	movlw	-8
 18703  01A2A0  006F FF8C  F00B    	movff	plusw1,btemp+10
 18704  01A2A6  0EF9               	movlw	-7
 18705  01A2A8  006F FF8C  F00C    	movff	plusw1,btemp+11
 18706                           
 18707                           ;stkvar	_s @ sp[(-4)+2]
 18708  01A2AE  0EFF               	movlw	-1
 18709  01A2B0  0060  F033  FFE3   	movff	btemp+11,plusw1
 18710  01A2B6  0EFE               	movlw	-2
 18711  01A2B8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18712                           
 18713                           ;stkvar	_dest @ sp[(-4)+-2]
 18714  01A2BE  0EFA               	movlw	-6
 18715  01A2C0  006F FF8C  F00B    	movff	plusw1,btemp+10
 18716  01A2C6  0EFB               	movlw	-5
 18717  01A2C8  006F FF8C  F00C    	movff	plusw1,btemp+11
 18718                           
 18719                           ;stkvar	_d @ sp[(-4)+0]
 18720  01A2CE  0EFD               	movlw	-3
 18721  01A2D0  0060  F033  FFE3   	movff	btemp+11,plusw1
 18722  01A2D6  0EFC               	movlw	-4
 18723  01A2D8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18724  01A2DE                     l12090:
 18725                           
 18726                           ;stkvar	_s @ sp[(-4)+2]
 18727  01A2DE  50E1               	movf	fsr1l,w,c
 18728  01A2E0  0FFE               	addlw	-2
 18729  01A2E2  6ED9               	movwf	fsr2l,c
 18730  01A2E4  50E2               	movf	fsr1h,w,c
 18731  01A2E6  6EDA               	movwf	fsr2h,c
 18732  01A2E8  0EFF               	movlw	255
 18733  01A2EA  22DA               	addwfc	fsr2h,f,c
 18734  01A2EC  006F FF7C  F00B    	movff	indf2,btemp+10
 18735  01A2F2  0E01               	movlw	1
 18736  01A2F4  26DE               	addwf	postinc2,f,c
 18737  01A2F6  006F FF7C  F00C    	movff	indf2,btemp+11
 18738  01A2FC  0E00               	movlw	0
 18739  01A2FE  22DD               	addwfc	postdec2,f,c
 18740  01A300  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 18741  01A306  0060  F033  FFF7   	movff	btemp+11,tblptrh
 18742  01A30C  0E00               	movlw	low (__mediumconst shr (0+16))
 18743  01A30E  6EF8               	movwf	tblptru,c
 18744                           
 18745                           ;stkvar	_d @ sp[(-4)+0]
 18746  01A310  50E1               	movf	fsr1l,w,c
 18747  01A312  0FFC               	addlw	-4
 18748  01A314  6ED9               	movwf	fsr2l,c
 18749  01A316  50E2               	movf	fsr1h,w,c
 18750  01A318  6EDA               	movwf	fsr2h,c
 18751  01A31A  0EFF               	movlw	255
 18752  01A31C  22DA               	addwfc	fsr2h,f,c
 18753  01A31E  006F FF7C  F00B    	movff	indf2,btemp+10
 18754  01A324  0E01               	movlw	1
 18755  01A326  26DE               	addwf	postinc2,f,c
 18756  01A328  006F FF7C  F00C    	movff	indf2,btemp+11
 18757  01A32E  0E00               	movlw	0
 18758  01A330  22DD               	addwfc	postdec2,f,c
 18759  01A332  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 18760  01A338  0060  F033  FFDA   	movff	btemp+11,fsr2h
 18761  01A33E  0E1F               	movlw	(high __ramtop+-1)
 18762  01A340  64F7               	cpfsgt	tblptrh,c
 18763  01A342  D003               	bra	u10987
 18764  01A344  0008               	tblrd		*
 18765  01A346  50F5               	movf	tablat,w,c
 18766  01A348  D007               	bra	u10980
 18767  01A34A                     u10987:
 18768  01A34A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18769  01A350  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18770  01A356  50EF               	movf	indf0,w,c
 18771  01A358                     u10980:
 18772  01A358  6EDF               	movwf	indf2,c
 18773  01A35A  50DF               	movf	indf2,w,c
 18774  01A35C  A4D8               	btfss	status,2,c
 18775  01A35E  D7BF               	goto	l12090
 18776                           
 18777                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 18778  01A360  0EF8               	movlw	248
 18779  01A362  26E1               	addwf	fsr1l,f,c
 18780  01A364  0EFF               	movlw	255
 18781  01A366  22E2               	addwfc	fsr1h,f,c
 18782  01A368  0012               	return		;funcret
 18783  01A36A                     __end_of_strcpy:
 18784                           	opt callstack 0
 18785                           
 18786 ;; *************** function _floorf *****************
 18787 ;; Defined at:
 18788 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 18789 ;; Parameters:    Size  Location     Type
 18790 ;;  x               4  [STACK] float 
 18791 ;; Auto vars:     Size  Location     Type
 18792 ;;  u               4  [STACK] struct .
 18793 ;;  m               4  [STACK] unsigned long 
 18794 ;;  e               2  [STACK] int 
 18795 ;; Return value:  Size  Location     Type
 18796 ;;                  4  [STACK] float 
 18797 ;; Registers used:
 18798 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 18799 ;; Tracked objects:
 18800 ;;		On entry : 0/0
 18801 ;;		On exit  : 0/0
 18802 ;;		Unchanged: 0/0
 18803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18808 ;;Total ram usage:        0 bytes
 18809 ;; Hardware stack levels used:    1
 18810 ;; Hardware stack levels required when called:   15
 18811 ;; This function calls:
 18812 ;;		Nothing
 18813 ;; This function is called by:
 18814 ;;		_efgtoa
 18815 ;; This function uses a reentrant model
 18816 ;;
 18817                           
 18818                           	psect	text63
 18819  016480                     __ptext63:
 18820                           	opt callstack 0
 18821  016480                     _floorf:
 18822                           	opt callstack 0
 18823                           
 18824                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 18825  016480  0E0A               	movlw	10
 18826  016482  26E1               	addwf	fsr1l,f,c
 18827  016484  0E00               	movlw	0
 18828  016486  22E2               	addwfc	fsr1h,f,c
 18829                           
 18830                           ;incstack = 0
 18831 ;; hardware stack exceeded
 18832  016488  0060  F79C  F009   	movff	floorf@F524,btemp+8
 18833  01648E  0060  F7A0  F00A   	movff	floorf@F524+1,btemp+9
 18834  016494  0060  F7A4  F00B   	movff	floorf@F524+2,btemp+10
 18835  01649A  0060  F7A8  F00C   	movff	floorf@F524+3,btemp+11
 18836                           
 18837                           ;stkvar	_u @ sp[(-10)+0]
 18838  0164A0  0EF6               	movlw	-10
 18839  0164A2  0060  F027  FFE3   	movff	btemp+8,plusw1
 18840  0164A8  0EF7               	movlw	-9
 18841  0164AA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18842  0164B0  0EF8               	movlw	-8
 18843  0164B2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18844  0164B8  0EF9               	movlw	-7
 18845  0164BA  0060  F033  FFE3   	movff	btemp+11,plusw1
 18846                           
 18847                           ;stkvar	_x @ sp[(-10)+-4]
 18848  0164C0  0EF2               	movlw	-14
 18849  0164C2  006F FF8C  F009    	movff	plusw1,btemp+8
 18850  0164C8  0EF3               	movlw	-13
 18851  0164CA  006F FF8C  F00A    	movff	plusw1,btemp+9
 18852  0164D0  0EF4               	movlw	-12
 18853  0164D2  006F FF8C  F00B    	movff	plusw1,btemp+10
 18854  0164D8  0EF5               	movlw	-11
 18855  0164DA  006F FF8C  F00C    	movff	plusw1,btemp+11
 18856                           
 18857                           ;stkvar	_u @ sp[(-10)+0]
 18858  0164E0  0EF6               	movlw	-10
 18859  0164E2  0060  F027  FFE3   	movff	btemp+8,plusw1
 18860  0164E8  0EF7               	movlw	-9
 18861  0164EA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18862  0164F0  0EF8               	movlw	-8
 18863  0164F2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18864  0164F8  0EF9               	movlw	-7
 18865  0164FA  0060  F033  FFE3   	movff	btemp+11,plusw1
 18866  016500  0E81               	movlw	129
 18867  016502  6E0B               	movwf	(btemp+10)^0,c
 18868  016504  0EFF               	movlw	255
 18869  016506  6E0C               	movwf	(btemp+11)^0,c
 18870                           
 18871                           ;stkvar	_u @ sp[(-10)+0]
 18872  016508  0EF6               	movlw	-10
 18873  01650A  006F FF8C  F005    	movff	plusw1,btemp+4
 18874  016510  0EF7               	movlw	-9
 18875  016512  006F FF8C  F006    	movff	plusw1,btemp+5
 18876  016518  0EF8               	movlw	-8
 18877  01651A  006F FF8C  F007    	movff	plusw1,btemp+6
 18878  016520  0EF9               	movlw	-7
 18879  016522  006F FF8C  F008    	movff	plusw1,btemp+7
 18880  016528  0E18               	movlw	24
 18881  01652A  D005               	goto	u6180
 18882  01652C                     u6185:
 18883  01652C  90D8               	bcf	status,0,c
 18884  01652E  3208               	rrcf	(btemp+7)^0,f,c
 18885  016530  3207               	rrcf	(btemp+6)^0,f,c
 18886  016532  3206               	rrcf	(btemp+5)^0,f,c
 18887  016534  3205               	rrcf	(btemp+4)^0,f,c
 18888  016536                     u6180:
 18889  016536  2EE8               	decfsz	wreg,f,c
 18890  016538  D7F9               	goto	u6185
 18891  01653A  0060  F014  F009   	movff	btemp+4,btemp+8
 18892  016540  0060  F018  F00A   	movff	btemp+5,btemp+9
 18893  016546  0EFF               	movlw	255
 18894  016548  1609               	andwf	(btemp+8)^0,f,c
 18895  01654A  0E00               	movlw	0
 18896  01654C  160A               	andwf	(btemp+9)^0,f,c
 18897  01654E  500B               	movf	(btemp+10)^0,w,c
 18898  016550  2609               	addwf	(btemp+8)^0,f,c
 18899  016552  500C               	movf	(btemp+11)^0,w,c
 18900  016554  220A               	addwfc	(btemp+9)^0,f,c
 18901                           
 18902                           ;stkvar	_e @ sp[(-10)+8]
 18903  016556  0EFE               	movlw	-2
 18904  016558  0060  F027  FFE3   	movff	btemp+8,plusw1
 18905  01655E  0EFF               	movlw	-1
 18906  016560  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18907                           
 18908                           ;stkvar	_e @ sp[(-10)+8]
 18909  016566  0EFF               	movlw	-1
 18910  016568  BEE3               	btfsc	plusw1,7,c
 18911  01656A  D019               	goto	l8186
 18912  01656C  0EFF               	movlw	-1
 18913  01656E  50E3               	movf	plusw1,w,c
 18914  016570  E108               	bnz	u6190
 18915  016572  0EFE               	movlw	-2
 18916  016574  006F FF8C  F001    	movff	plusw1,btemp
 18917  01657A  0E17               	movlw	23
 18918  01657C  5E01               	subwf	btemp^0,f,c
 18919  01657E  A0D8               	btfss	status,0,c
 18920  016580  D00E               	goto	l8186
 18921  016582                     u6190:
 18922                           
 18923                           ;stkvar	_x @ sp[(-10)+-4]
 18924  016582  0EF2               	movlw	-14
 18925  016584  006F FF8C  F001    	movff	plusw1,btemp
 18926  01658A  0EF3               	movlw	-13
 18927  01658C  006F FF8C  F002    	movff	plusw1,btemp+1
 18928  016592  0EF4               	movlw	-12
 18929  016594  006F FF8C  F003    	movff	plusw1,btemp+2
 18930  01659A  0EF5               	movlw	-11
 18931  01659C  D11F               	goto	L21
 18932  01659E                     l8186:
 18933                           
 18934                           ;stkvar	_e @ sp[(-10)+8]
 18935  01659E  0EFF               	movlw	-1
 18936  0165A0  BEE3               	btfsc	plusw1,7,c
 18937  0165A2  D0B4               	goto	l8202
 18938                           
 18939                           ;stkvar	_e @ sp[(-10)+8]
 18940  0165A4  0EFE               	movlw	-2
 18941  0165A6  006F FF8C  F00C    	movff	plusw1,btemp+11
 18942  0165AC  0EFF               	movlw	255
 18943  0165AE  6E05               	movwf	(btemp+4)^0,c
 18944  0165B0  0EFF               	movlw	255
 18945  0165B2  6E06               	movwf	(btemp+5)^0,c
 18946  0165B4  0E7F               	movlw	127
 18947  0165B6  6E07               	movwf	(btemp+6)^0,c
 18948  0165B8  0E00               	movlw	0
 18949  0165BA  6E08               	movwf	(btemp+7)^0,c
 18950  0165BC                     u6215:
 18951  0165BC  660C               	tstfsz	(btemp+11)^0,c
 18952  0165BE  D001               	goto	u6216
 18953  0165C0  D007               	goto	u6217
 18954  0165C2                     u6216:
 18955  0165C2  3408               	rlcf	(btemp+7)^0,w,c
 18956  0165C4  3208               	rrcf	(btemp+7)^0,f,c
 18957  0165C6  3207               	rrcf	(btemp+6)^0,f,c
 18958  0165C8  3206               	rrcf	(btemp+5)^0,f,c
 18959  0165CA  3205               	rrcf	(btemp+4)^0,f,c
 18960  0165CC  2E0C               	decfsz	(btemp+11)^0,f,c
 18961  0165CE  D7F6               	goto	u6215
 18962  0165D0                     u6217:
 18963                           
 18964                           ;stkvar	_m @ sp[(-10)+4]
 18965  0165D0  0EFA               	movlw	-6
 18966  0165D2  0060  F017  FFE3   	movff	btemp+4,plusw1
 18967  0165D8  0EFB               	movlw	-5
 18968  0165DA  0060  F01B  FFE3   	movff	btemp+5,plusw1
 18969  0165E0  0EFC               	movlw	-4
 18970  0165E2  0060  F01F  FFE3   	movff	btemp+6,plusw1
 18971  0165E8  0EFD               	movlw	-3
 18972  0165EA  0060  F023  FFE3   	movff	btemp+7,plusw1
 18973                           
 18974                           ;stkvar	_m @ sp[(-10)+4]
 18975                           ;stkvar	_u @ sp[(-10)+0]
 18976  0165F0  0EF6               	movlw	-10
 18977  0165F2  006F FF8C  F009    	movff	plusw1,btemp+8
 18978  0165F8  0EF7               	movlw	-9
 18979  0165FA  006F FF8C  F00A    	movff	plusw1,btemp+9
 18980  016600  0EF8               	movlw	-8
 18981  016602  006F FF8C  F00B    	movff	plusw1,btemp+10
 18982  016608  0EF9               	movlw	-7
 18983  01660A  006F FF8C  F00C    	movff	plusw1,btemp+11
 18984  016610  0EFA               	movlw	-6
 18985  016612  50E3               	movf	plusw1,w,c
 18986  016614  1609               	andwf	(btemp+8)^0,f,c
 18987  016616  0EFB               	movlw	-5
 18988  016618  50E3               	movf	plusw1,w,c
 18989  01661A  160A               	andwf	(btemp+9)^0,f,c
 18990  01661C  0EFC               	movlw	-4
 18991  01661E  50E3               	movf	plusw1,w,c
 18992  016620  160B               	andwf	(btemp+10)^0,f,c
 18993  016622  0EFD               	movlw	-3
 18994  016624  50E3               	movf	plusw1,w,c
 18995  016626  160C               	andwf	(btemp+11)^0,f,c
 18996  016628  5009               	movf	(btemp+8)^0,w,c
 18997  01662A  100A               	iorwf	(btemp+9)^0,w,c
 18998  01662C  100B               	iorwf	(btemp+10)^0,w,c
 18999  01662E  100C               	iorwf	(btemp+11)^0,w,c
 19000  016630  B4D8               	btfsc	status,2,c
 19001  016632  D7A7               	goto	u6190
 19002                           
 19003                           ;stkvar	_u @ sp[(-10)+0]
 19004  016634  0EF6               	movlw	-10
 19005  016636  006F FF8C  F009    	movff	plusw1,btemp+8
 19006  01663C  0EF7               	movlw	-9
 19007  01663E  006F FF8C  F00A    	movff	plusw1,btemp+9
 19008  016644  0EF8               	movlw	-8
 19009  016646  006F FF8C  F00B    	movff	plusw1,btemp+10
 19010  01664C  0EF9               	movlw	-7
 19011  01664E  006F FF8C  F00C    	movff	plusw1,btemp+11
 19012  016654  0E20               	movlw	32
 19013  016656  D005               	goto	u6230
 19014  016658                     u6235:
 19015  016658  90D8               	bcf	status,0,c
 19016  01665A  320C               	rrcf	(btemp+11)^0,f,c
 19017  01665C  320B               	rrcf	(btemp+10)^0,f,c
 19018  01665E  320A               	rrcf	(btemp+9)^0,f,c
 19019  016660  3209               	rrcf	(btemp+8)^0,f,c
 19020  016662                     u6230:
 19021  016662  2EE8               	decfsz	wreg,f,c
 19022  016664  D7F9               	goto	u6235
 19023  016666  5009               	movf	(btemp+8)^0,w,c
 19024  016668  B4D8               	btfsc	status,2,c
 19025  01666A  D028               	goto	l8200
 19026                           
 19027                           ;stkvar	_m @ sp[(-10)+4]
 19028                           ;stkvar	_u @ sp[(-10)+0]
 19029  01666C  0EF6               	movlw	-10
 19030  01666E  50E3               	movf	plusw1,w,c
 19031  016670  6E01               	movwf	btemp^0,c
 19032  016672  0EFA               	movlw	-6
 19033  016674  50E3               	movf	plusw1,w,c
 19034  016676  2601               	addwf	btemp^0,f,c
 19035  016678  0EF6               	movlw	-10
 19036  01667A  0060  F007  FFE3   	movff	btemp,plusw1
 19037  016680  0EF7               	movlw	-9
 19038  016682  50E3               	movf	plusw1,w,c
 19039  016684  6E01               	movwf	btemp^0,c
 19040  016686  0EFB               	movlw	-5
 19041  016688  50E3               	movf	plusw1,w,c
 19042  01668A  2201               	addwfc	btemp^0,f,c
 19043  01668C  0EF7               	movlw	-9
 19044  01668E  0060  F007  FFE3   	movff	btemp,plusw1
 19045  016694  0EF8               	movlw	-8
 19046  016696  50E3               	movf	plusw1,w,c
 19047  016698  6E01               	movwf	btemp^0,c
 19048  01669A  0EFC               	movlw	-4
 19049  01669C  50E3               	movf	plusw1,w,c
 19050  01669E  2201               	addwfc	btemp^0,f,c
 19051  0166A0  0EF8               	movlw	-8
 19052  0166A2  0060  F007  FFE3   	movff	btemp,plusw1
 19053  0166A8  0EF9               	movlw	-7
 19054  0166AA  50E3               	movf	plusw1,w,c
 19055  0166AC  6E01               	movwf	btemp^0,c
 19056  0166AE  0EFD               	movlw	-3
 19057  0166B0  50E3               	movf	plusw1,w,c
 19058  0166B2  2201               	addwfc	btemp^0,f,c
 19059  0166B4  0EF9               	movlw	-7
 19060  0166B6  0060  F007  FFE3   	movff	btemp,plusw1
 19061  0166BC                     l8200:
 19062                           
 19063                           ;stkvar	_m @ sp[(-10)+4]
 19064  0166BC  0EFA               	movlw	-6
 19065  0166BE  006F FF8C  F009    	movff	plusw1,btemp+8
 19066  0166C4  0EFB               	movlw	-5
 19067  0166C6  006F FF8C  F00A    	movff	plusw1,btemp+9
 19068  0166CC  0EFC               	movlw	-4
 19069  0166CE  006F FF8C  F00B    	movff	plusw1,btemp+10
 19070  0166D4  0EFD               	movlw	-3
 19071  0166D6  006F FF8C  F00C    	movff	plusw1,btemp+11
 19072  0166DC  1C09               	comf	(btemp+8)^0,w,c
 19073  0166DE  6E05               	movwf	(btemp+4)^0,c
 19074  0166E0  1C0A               	comf	(btemp+9)^0,w,c
 19075  0166E2  6E06               	movwf	(btemp+5)^0,c
 19076  0166E4  1C0B               	comf	(btemp+10)^0,w,c
 19077  0166E6  6E07               	movwf	(btemp+6)^0,c
 19078  0166E8  1C0C               	comf	(btemp+11)^0,w,c
 19079  0166EA  6E08               	movwf	(btemp+7)^0,c
 19080                           
 19081                           ;stkvar	_u @ sp[(-10)+0]
 19082  0166EC  50E1               	movf	fsr1l,w,c
 19083  0166EE  0FF6               	addlw	-10
 19084  0166F0  6ED9               	movwf	fsr2l,c
 19085  0166F2  50E2               	movf	fsr1h,w,c
 19086  0166F4  6EDA               	movwf	fsr2h,c
 19087  0166F6  0EFF               	movlw	255
 19088  0166F8  22DA               	addwfc	fsr2h,f,c
 19089  0166FA  5005               	movf	(btemp+4)^0,w,c
 19090  0166FC  16DE               	andwf	postinc2,f,c
 19091  0166FE  5006               	movf	(btemp+5)^0,w,c
 19092  016700  16DE               	andwf	postinc2,f,c
 19093  016702  5007               	movf	(btemp+6)^0,w,c
 19094  016704  16DE               	andwf	postinc2,f,c
 19095  016706  5008               	movf	(btemp+7)^0,w,c
 19096  016708  16DE               	andwf	postinc2,f,c
 19097  01670A  D05B               	goto	l8210
 19098  01670C                     l8202:
 19099                           
 19100                           ;stkvar	_u @ sp[(-10)+0]
 19101  01670C  0EF6               	movlw	-10
 19102  01670E  006F FF8C  F009    	movff	plusw1,btemp+8
 19103  016714  0EF7               	movlw	-9
 19104  016716  006F FF8C  F00A    	movff	plusw1,btemp+9
 19105  01671C  0EF8               	movlw	-8
 19106  01671E  006F FF8C  F00B    	movff	plusw1,btemp+10
 19107  016724  0EF9               	movlw	-7
 19108  016726  006F FF8C  F00C    	movff	plusw1,btemp+11
 19109  01672C  0E20               	movlw	32
 19110  01672E  D005               	goto	u6250
 19111  016730                     u6255:
 19112  016730  90D8               	bcf	status,0,c
 19113  016732  320C               	rrcf	(btemp+11)^0,f,c
 19114  016734  320B               	rrcf	(btemp+10)^0,f,c
 19115  016736  320A               	rrcf	(btemp+9)^0,f,c
 19116  016738  3209               	rrcf	(btemp+8)^0,f,c
 19117  01673A                     u6250:
 19118  01673A  2EE8               	decfsz	wreg,f,c
 19119  01673C  D7F9               	goto	u6255
 19120  01673E  6609               	tstfsz	(btemp+8)^0,c
 19121  016740  D009               	goto	l8206
 19122                           
 19123                           ;stkvar	_u @ sp[(-10)+0]
 19124  016742  0EF6               	movlw	-10
 19125  016744  6AE3               	clrf	plusw1,c
 19126  016746  0EF7               	movlw	-9
 19127  016748  6AE3               	clrf	plusw1,c
 19128  01674A  0EF8               	movlw	-8
 19129  01674C  6AE3               	clrf	plusw1,c
 19130  01674E  0EF9               	movlw	-7
 19131  016750  6AE3               	clrf	plusw1,c
 19132  016752  D037               	goto	l8210
 19133  016754                     l8206:
 19134                           
 19135                           ;stkvar	_u @ sp[(-10)+0]
 19136  016754  0EF6               	movlw	-10
 19137  016756  006F FF8C  F009    	movff	plusw1,btemp+8
 19138  01675C  0EF7               	movlw	-9
 19139  01675E  006F FF8C  F00A    	movff	plusw1,btemp+9
 19140  016764  0EF8               	movlw	-8
 19141  016766  006F FF8C  F00B    	movff	plusw1,btemp+10
 19142  01676C  0EF9               	movlw	-7
 19143  01676E  006F FF8C  F00C    	movff	plusw1,btemp+11
 19144  016774  90D8               	bcf	status,0,c
 19145  016776  3409               	rlcf	(btemp+8)^0,w,c
 19146  016778  6E05               	movwf	(btemp+4)^0,c
 19147  01677A  340A               	rlcf	(btemp+9)^0,w,c
 19148  01677C  6E06               	movwf	(btemp+5)^0,c
 19149  01677E  340B               	rlcf	(btemp+10)^0,w,c
 19150  016780  6E07               	movwf	(btemp+6)^0,c
 19151  016782  340C               	rlcf	(btemp+11)^0,w,c
 19152  016784  6E08               	movwf	(btemp+7)^0,c
 19153  016786  5005               	movf	(btemp+4)^0,w,c
 19154  016788  1006               	iorwf	(btemp+5)^0,w,c
 19155  01678A  1007               	iorwf	(btemp+6)^0,w,c
 19156  01678C  1008               	iorwf	(btemp+7)^0,w,c
 19157  01678E  B4D8               	btfsc	status,2,c
 19158  016790  D018               	goto	l8210
 19159  016792  0E00               	movlw	0
 19160  016794  6E09               	movwf	(btemp+8)^0,c
 19161  016796  0E00               	movlw	0
 19162  016798  6E0A               	movwf	(btemp+9)^0,c
 19163  01679A  0E80               	movlw	128
 19164  01679C  6E0B               	movwf	(btemp+10)^0,c
 19165  01679E  0EBF               	movlw	191
 19166  0167A0  6E0C               	movwf	(btemp+11)^0,c
 19167                           
 19168                           ;stkvar	_u @ sp[(-10)+0]
 19169  0167A2  0EF6               	movlw	-10
 19170  0167A4  0060  F027  FFE3   	movff	btemp+8,plusw1
 19171  0167AA  0EF7               	movlw	-9
 19172  0167AC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19173  0167B2  0EF8               	movlw	-8
 19174  0167B4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19175  0167BA  0EF9               	movlw	-7
 19176  0167BC  0060  F033  FFE3   	movff	btemp+11,plusw1
 19177  0167C2                     l8210:
 19178                           
 19179                           ;stkvar	_u @ sp[(-10)+0]
 19180  0167C2  0EF6               	movlw	-10
 19181  0167C4  006F FF8C  F001    	movff	plusw1,btemp
 19182  0167CA  0EF7               	movlw	-9
 19183  0167CC  006F FF8C  F002    	movff	plusw1,btemp+1
 19184  0167D2  0EF8               	movlw	-8
 19185  0167D4  006F FF8C  F003    	movff	plusw1,btemp+2
 19186  0167DA  0EF9               	movlw	-7
 19187  0167DC                     L21:
 19188  0167DC  006F FF8C  F004    	movff	plusw1,btemp+3
 19189                           
 19190                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19191  0167E2  0EF2               	movlw	242
 19192  0167E4  26E1               	addwf	fsr1l,f,c
 19193  0167E6  0EFF               	movlw	255
 19194  0167E8  22E2               	addwfc	fsr1h,f,c
 19195  0167EA  0012               	return		;funcret
 19196  0167EC                     __end_of_floorf:
 19197                           	opt callstack 0
 19198                           
 19199 ;; *************** function ___fpclassifyf *****************
 19200 ;; Defined at:
 19201 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 19202 ;; Parameters:    Size  Location     Type
 19203 ;;  x               4  [STACK] float 
 19204 ;; Auto vars:     Size  Location     Type
 19205 ;;  u               4  [STACK] struct .
 19206 ;;  e               2  [STACK] int 
 19207 ;; Return value:  Size  Location     Type
 19208 ;;                  2  [STACK] int 
 19209 ;; Registers used:
 19210 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 19211 ;; Tracked objects:
 19212 ;;		On entry : 0/0
 19213 ;;		On exit  : 0/0
 19214 ;;		Unchanged: 0/0
 19215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19220 ;;Total ram usage:        0 bytes
 19221 ;; Hardware stack levels used:    1
 19222 ;; Hardware stack levels required when called:   15
 19223 ;; This function calls:
 19224 ;;		Nothing
 19225 ;; This function is called by:
 19226 ;;		_efgtoa
 19227 ;; This function uses a reentrant model
 19228 ;;
 19229                           
 19230                           	psect	text64
 19231  018BC2                     __ptext64:
 19232                           	opt callstack 0
 19233  018BC2                     ___fpclassifyf:
 19234                           	opt callstack 0
 19235                           
 19236                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19237  018BC2  0E06               	movlw	6
 19238  018BC4  26E1               	addwf	fsr1l,f,c
 19239  018BC6  0E00               	movlw	0
 19240  018BC8  22E2               	addwfc	fsr1h,f,c
 19241                           
 19242                           ;incstack = 0
 19243 ;; hardware stack exceeded
 19244  018BCA  0060  F190  F009   	movff	___fpclassifyf@F463,btemp+8
 19245  018BD0  0060  F194  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 19246  018BD6  0060  F198  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 19247  018BDC  0060  F19C  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 19248                           
 19249                           ;stkvar	_u @ sp[(-6)+0]
 19250  018BE2  0EFA               	movlw	-6
 19251  018BE4  0060  F027  FFE3   	movff	btemp+8,plusw1
 19252  018BEA  0EFB               	movlw	-5
 19253  018BEC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19254  018BF2  0EFC               	movlw	-4
 19255  018BF4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19256  018BFA  0EFD               	movlw	-3
 19257  018BFC  0060  F033  FFE3   	movff	btemp+11,plusw1
 19258                           
 19259                           ;stkvar	_x @ sp[(-6)+-4]
 19260  018C02  0EF6               	movlw	-10
 19261  018C04  006F FF8C  F009    	movff	plusw1,btemp+8
 19262  018C0A  0EF7               	movlw	-9
 19263  018C0C  006F FF8C  F00A    	movff	plusw1,btemp+9
 19264  018C12  0EF8               	movlw	-8
 19265  018C14  006F FF8C  F00B    	movff	plusw1,btemp+10
 19266  018C1A  0EF9               	movlw	-7
 19267  018C1C  006F FF8C  F00C    	movff	plusw1,btemp+11
 19268                           
 19269                           ;stkvar	_u @ sp[(-6)+0]
 19270  018C22  0EFA               	movlw	-6
 19271  018C24  0060  F027  FFE3   	movff	btemp+8,plusw1
 19272  018C2A  0EFB               	movlw	-5
 19273  018C2C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19274  018C32  0EFC               	movlw	-4
 19275  018C34  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19276  018C3A  0EFD               	movlw	-3
 19277  018C3C  0060  F033  FFE3   	movff	btemp+11,plusw1
 19278                           
 19279                           ;stkvar	_u @ sp[(-6)+0]
 19280  018C42  0EFA               	movlw	-6
 19281  018C44  006F FF8C  F009    	movff	plusw1,btemp+8
 19282  018C4A  0EFB               	movlw	-5
 19283  018C4C  006F FF8C  F00A    	movff	plusw1,btemp+9
 19284  018C52  0EFC               	movlw	-4
 19285  018C54  006F FF8C  F00B    	movff	plusw1,btemp+10
 19286  018C5A  0EFD               	movlw	-3
 19287  018C5C  006F FF8C  F00C    	movff	plusw1,btemp+11
 19288  018C62  0E18               	movlw	24
 19289  018C64  D005               	goto	u6060
 19290  018C66                     u6065:
 19291  018C66  90D8               	bcf	status,0,c
 19292  018C68  320C               	rrcf	(btemp+11)^0,f,c
 19293  018C6A  320B               	rrcf	(btemp+10)^0,f,c
 19294  018C6C  320A               	rrcf	(btemp+9)^0,f,c
 19295  018C6E  3209               	rrcf	(btemp+8)^0,f,c
 19296  018C70                     u6060:
 19297  018C70  2EE8               	decfsz	wreg,f,c
 19298  018C72  D7F9               	goto	u6065
 19299  018C74  0060  F024  F007   	movff	btemp+8,btemp+6
 19300  018C7A  0060  F028  F008   	movff	btemp+9,btemp+7
 19301  018C80  0EFF               	movlw	255
 19302  018C82  1607               	andwf	(btemp+6)^0,f,c
 19303  018C84  0E00               	movlw	0
 19304  018C86  1608               	andwf	(btemp+7)^0,f,c
 19305                           
 19306                           ;stkvar	_e @ sp[(-6)+4]
 19307  018C88  0EFE               	movlw	-2
 19308  018C8A  0060  F01F  FFE3   	movff	btemp+6,plusw1
 19309  018C90  0EFF               	movlw	-1
 19310  018C92  0060  F023  FFE3   	movff	btemp+7,plusw1
 19311                           
 19312                           ;stkvar	_e @ sp[(-6)+4]
 19313  018C98  0EFE               	movlw	-2
 19314  018C9A  006F FF8C  F001    	movff	plusw1,btemp
 19315  018CA0  0EFF               	movlw	-1
 19316  018CA2  50E3               	movf	plusw1,w,c
 19317  018CA4  1001               	iorwf	btemp^0,w,c
 19318  018CA6  A4D8               	btfss	status,2,c
 19319  018CA8  D023               	goto	l8148
 19320                           
 19321                           ;stkvar	_u @ sp[(-6)+0]
 19322  018CAA  0EFA               	movlw	-6
 19323  018CAC  006F FF8C  F009    	movff	plusw1,btemp+8
 19324  018CB2  0EFB               	movlw	-5
 19325  018CB4  006F FF8C  F00A    	movff	plusw1,btemp+9
 19326  018CBA  0EFC               	movlw	-4
 19327  018CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 19328  018CC2  0EFD               	movlw	-3
 19329  018CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 19330  018CCA  90D8               	bcf	status,0,c
 19331  018CCC  3409               	rlcf	(btemp+8)^0,w,c
 19332  018CCE  6E05               	movwf	(btemp+4)^0,c
 19333  018CD0  340A               	rlcf	(btemp+9)^0,w,c
 19334  018CD2  6E06               	movwf	(btemp+5)^0,c
 19335  018CD4  340B               	rlcf	(btemp+10)^0,w,c
 19336  018CD6  6E07               	movwf	(btemp+6)^0,c
 19337  018CD8  340C               	rlcf	(btemp+11)^0,w,c
 19338  018CDA  6E08               	movwf	(btemp+7)^0,c
 19339  018CDC  5005               	movf	(btemp+4)^0,w,c
 19340  018CDE  1006               	iorwf	(btemp+5)^0,w,c
 19341  018CE0  1007               	iorwf	(btemp+6)^0,w,c
 19342  018CE2  1008               	iorwf	(btemp+7)^0,w,c
 19343  018CE4  A4D8               	btfss	status,2,c
 19344  018CE6  D002               	goto	l8144
 19345  018CE8  0E02               	movlw	2
 19346  018CEA  D02E               	goto	L22
 19347  018CEC                     l8144:
 19348  018CEC  0E03               	movlw	3
 19349  018CEE  D02C               	goto	L22
 19350  018CF0                     l8148:
 19351                           
 19352                           ;stkvar	_e @ sp[(-6)+4]
 19353  018CF0  0EFE               	movlw	-2
 19354  018CF2  28E3               	incf	plusw1,w,c
 19355  018CF4  E128               	bnz	l8154
 19356  018CF6  0EFF               	movlw	-1
 19357  018CF8  50E3               	movf	plusw1,w,c
 19358  018CFA  A4D8               	btfss	status,2,c
 19359  018CFC  D024               	goto	l8154
 19360                           
 19361                           ;stkvar	_u @ sp[(-6)+0]
 19362  018CFE  0EFA               	movlw	-6
 19363  018D00  006F FF8C  F009    	movff	plusw1,btemp+8
 19364  018D06  0EFB               	movlw	-5
 19365  018D08  006F FF8C  F00A    	movff	plusw1,btemp+9
 19366  018D0E  0EFC               	movlw	-4
 19367  018D10  006F FF8C  F00B    	movff	plusw1,btemp+10
 19368  018D16  0EFD               	movlw	-3
 19369  018D18  006F FF8C  F00C    	movff	plusw1,btemp+11
 19370  018D1E  0E09               	movlw	9
 19371  018D20                     u6105:
 19372  018D20  90D8               	bcf	status,0,c
 19373  018D22  3609               	rlcf	(btemp+8)^0,f,c
 19374  018D24  360A               	rlcf	(btemp+9)^0,f,c
 19375  018D26  360B               	rlcf	(btemp+10)^0,f,c
 19376  018D28  360C               	rlcf	(btemp+11)^0,f,c
 19377  018D2A  2EE8               	decfsz	wreg,f,c
 19378  018D2C  D7F9               	goto	u6105
 19379  018D2E  5009               	movf	(btemp+8)^0,w,c
 19380  018D30  100A               	iorwf	(btemp+9)^0,w,c
 19381  018D32  100B               	iorwf	(btemp+10)^0,w,c
 19382  018D34  100C               	iorwf	(btemp+11)^0,w,c
 19383  018D36  A4D8               	btfss	status,2,c
 19384  018D38  D002               	goto	u6110
 19385  018D3A  0E01               	movlw	1
 19386  018D3C  D001               	goto	u6120
 19387  018D3E                     u6110:
 19388  018D3E  0E00               	movlw	0
 19389  018D40                     u6120:
 19390  018D40  6E01               	movwf	btemp^0,c
 19391  018D42  6A02               	clrf	(btemp+1)^0,c
 19392  018D44  D004               	goto	l3136
 19393  018D46                     l8154:
 19394  018D46  0E04               	movlw	4
 19395  018D48                     L22:
 19396  018D48  6E01               	movwf	btemp^0,c
 19397  018D4A  0E00               	movlw	0
 19398  018D4C  6E02               	movwf	(btemp+1)^0,c
 19399  018D4E                     l3136:
 19400                           
 19401                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 19402  018D4E  0EF6               	movlw	246
 19403  018D50  26E1               	addwf	fsr1l,f,c
 19404  018D52  0EFF               	movlw	255
 19405  018D54  22E2               	addwfc	fsr1h,f,c
 19406  018D56  0012               	return		;funcret
 19407  018D58                     __end_of___fpclassifyf:
 19408                           	opt callstack 0
 19409                           
 19410 ;; *************** function ___fltol *****************
 19411 ;; Defined at:
 19412 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 19413 ;; Parameters:    Size  Location     Type
 19414 ;;  f1              4  [STACK] int 
 19415 ;; Auto vars:     Size  Location     Type
 19416 ;;  exp1            1  [STACK] unsigned char 
 19417 ;;  sign1           1  [STACK] unsigned char 
 19418 ;; Return value:  Size  Location     Type
 19419 ;;                  4  [STACK] long 
 19420 ;; Registers used:
 19421 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 19422 ;; Tracked objects:
 19423 ;;		On entry : 0/0
 19424 ;;		On exit  : 0/0
 19425 ;;		Unchanged: 0/0
 19426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19431 ;;Total ram usage:        0 bytes
 19432 ;; Hardware stack levels used:    1
 19433 ;; Hardware stack levels required when called:   15
 19434 ;; This function calls:
 19435 ;;		Nothing
 19436 ;; This function is called by:
 19437 ;;		_main
 19438 ;;		_calc_bsoc
 19439 ;;		_init_bsoc
 19440 ;;		_efgtoa
 19441 ;; This function uses a reentrant model
 19442 ;;
 19443                           
 19444                           	psect	text65
 19445  01905E                     __ptext65:
 19446                           	opt callstack 0
 19447  01905E                     ___fltol:
 19448                           	opt callstack 0
 19449                           
 19450                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19451  01905E  52E6               	movf	postinc1,f,c
 19452  019060  52E6               	movf	postinc1,f,c
 19453                           
 19454                           ;stkvar	_f1 @ sp[(-2)+-4]
 19455                           
 19456                           ;incstack = 0
 19457 ;; hardware stack exceeded
 19458  019062  0EFA               	movlw	-6
 19459  019064  006F FF8C  F009    	movff	plusw1,btemp+8
 19460  01906A  0EFB               	movlw	-5
 19461  01906C  006F FF8C  F00A    	movff	plusw1,btemp+9
 19462  019072  0EFC               	movlw	-4
 19463  019074  006F FF8C  F00B    	movff	plusw1,btemp+10
 19464  01907A  0EFD               	movlw	-3
 19465  01907C  006F FF8C  F00C    	movff	plusw1,btemp+11
 19466  019082  0E18               	movlw	24
 19467  019084  D005               	goto	u7270
 19468  019086                     u7275:
 19469  019086  90D8               	bcf	status,0,c
 19470  019088  320C               	rrcf	(btemp+11)^0,f,c
 19471  01908A  320B               	rrcf	(btemp+10)^0,f,c
 19472  01908C  320A               	rrcf	(btemp+9)^0,f,c
 19473  01908E  3209               	rrcf	(btemp+8)^0,f,c
 19474  019090                     u7270:
 19475  019090  2EE8               	decfsz	wreg,f,c
 19476  019092  D7F9               	goto	u7275
 19477                           
 19478                           ;stkvar	_exp1 @ sp[(-2)+0]
 19479  019094  0EFE               	movlw	-2
 19480  019096  0060  F027  FFE3   	movff	btemp+8,plusw1
 19481  01909C  0EFE               	movlw	-2
 19482  01909E  50E3               	movf	plusw1,w,c
 19483  0190A0  A4D8               	btfss	status,2,c
 19484  0190A2  D006               	goto	l8774
 19485  0190A4                     u7280:
 19486  0190A4  0E00               	movlw	0
 19487  0190A6  6E01               	movwf	btemp^0,c
 19488  0190A8  6A02               	clrf	(btemp+1)^0,c
 19489  0190AA  6A03               	clrf	(btemp+2)^0,c
 19490  0190AC  6A04               	clrf	(btemp+3)^0,c
 19491  0190AE  D08B               	goto	l2752
 19492  0190B0                     l8774:
 19493                           
 19494                           ;stkvar	_f1 @ sp[(-2)+-4]
 19495  0190B0  0EFA               	movlw	-6
 19496  0190B2  006F FF8C  F009    	movff	plusw1,btemp+8
 19497  0190B8  0EFB               	movlw	-5
 19498  0190BA  006F FF8C  F00A    	movff	plusw1,btemp+9
 19499  0190C0  0EFC               	movlw	-4
 19500  0190C2  006F FF8C  F00B    	movff	plusw1,btemp+10
 19501  0190C8  0EFD               	movlw	-3
 19502  0190CA  006F FF8C  F00C    	movff	plusw1,btemp+11
 19503  0190D0  0E20               	movlw	32
 19504  0190D2  D005               	goto	u7290
 19505  0190D4                     u7295:
 19506  0190D4  90D8               	bcf	status,0,c
 19507  0190D6  320C               	rrcf	(btemp+11)^0,f,c
 19508  0190D8  320B               	rrcf	(btemp+10)^0,f,c
 19509  0190DA  320A               	rrcf	(btemp+9)^0,f,c
 19510  0190DC  3209               	rrcf	(btemp+8)^0,f,c
 19511  0190DE                     u7290:
 19512  0190DE  2EE8               	decfsz	wreg,f,c
 19513  0190E0  D7F9               	goto	u7295
 19514                           
 19515                           ;stkvar	_sign1 @ sp[(-2)+1]
 19516  0190E2  0EFF               	movlw	-1
 19517  0190E4  0060  F027  FFE3   	movff	btemp+8,plusw1
 19518                           
 19519                           ;stkvar	_f1 @ sp[(-2)+-4]
 19520  0190EA  0EFC               	movlw	-4
 19521  0190EC  8EE3               	bsf	plusw1,7,c
 19522                           
 19523                           ;stkvar	_f1 @ sp[(-2)+-4]
 19524  0190EE  50E1               	movf	fsr1l,w,c
 19525  0190F0  0FFA               	addlw	-6
 19526  0190F2  6ED9               	movwf	fsr2l,c
 19527  0190F4  50E2               	movf	fsr1h,w,c
 19528  0190F6  6EDA               	movwf	fsr2h,c
 19529  0190F8  0EFF               	movlw	255
 19530  0190FA  22DA               	addwfc	fsr2h,f,c
 19531  0190FC  0EFF               	movlw	255
 19532  0190FE  16DE               	andwf	postinc2,f,c
 19533  019100  0EFF               	movlw	255
 19534  019102  16DE               	andwf	postinc2,f,c
 19535  019104  0EFF               	movlw	255
 19536  019106  16DE               	andwf	postinc2,f,c
 19537  019108  0E00               	movlw	0
 19538  01910A  16DE               	andwf	postinc2,f,c
 19539                           
 19540                           ;stkvar	_exp1 @ sp[(-2)+0]
 19541  01910C  0EFE               	movlw	-2
 19542  01910E  006F FF8C  F001    	movff	plusw1,btemp
 19543  019114  0E96               	movlw	150
 19544  019116  5E01               	subwf	btemp^0,f,c
 19545  019118  0EFE               	movlw	-2
 19546  01911A  0060  F007  FFE3   	movff	btemp,plusw1
 19547                           
 19548                           ;stkvar	_exp1 @ sp[(-2)+0]
 19549  019120  0EFE               	movlw	-2
 19550  019122  AEE3               	btfss	plusw1,7,c
 19551  019124  D014               	goto	l8792
 19552                           
 19553                           ;stkvar	_exp1 @ sp[(-2)+0]
 19554  019126  0EFE               	movlw	-2
 19555  019128  50E3               	movf	plusw1,w,c
 19556  01912A  0A80               	xorlw	128
 19557  01912C  0F97               	addlw	151
 19558  01912E  A0D8               	btfss	status,0,c
 19559  019130  D7B9               	goto	u7280
 19560  019132                     l8790:
 19561                           
 19562                           ;stkvar	_f1 @ sp[(-2)+-4]
 19563  019132  90D8               	bcf	status,0,c
 19564  019134  0EFD               	movlw	-3
 19565  019136  32E3               	rrcf	plusw1,f,c
 19566  019138  0EFC               	movlw	-4
 19567  01913A  32E3               	rrcf	plusw1,f,c
 19568  01913C  0EFB               	movlw	-5
 19569  01913E  32E3               	rrcf	plusw1,f,c
 19570  019140  0EFA               	movlw	-6
 19571  019142  32E3               	rrcf	plusw1,f,c
 19572                           
 19573                           ;stkvar	_exp1 @ sp[(-2)+0]
 19574  019144  0EFE               	movlw	-2
 19575  019146  2AE3               	incf	plusw1,f,c
 19576  019148  B4D8               	btfsc	status,2,c
 19577  01914A  D018               	goto	u7340
 19578  01914C  D7F2               	goto	l8790
 19579  01914E                     l8792:
 19580                           
 19581                           ;stkvar	_exp1 @ sp[(-2)+0]
 19582  01914E  0EFE               	movlw	-2
 19583  019150  006F FF8C  F001    	movff	plusw1,btemp
 19584  019156  0E1F               	movlw	31
 19585  019158  6401               	cpfsgt	btemp^0,c
 19586  01915A  D00C               	goto	l8800
 19587  01915C  D7A3               	goto	u7280
 19588  01915E                     l8798:
 19589                           
 19590                           ;stkvar	_f1 @ sp[(-2)+-4]
 19591  01915E  90D8               	bcf	status,0,c
 19592  019160  0EFA               	movlw	-6
 19593  019162  36E3               	rlcf	plusw1,f,c
 19594  019164  0EFB               	movlw	-5
 19595  019166  36E3               	rlcf	plusw1,f,c
 19596  019168  0EFC               	movlw	-4
 19597  01916A  36E3               	rlcf	plusw1,f,c
 19598  01916C  0EFD               	movlw	-3
 19599  01916E  36E3               	rlcf	plusw1,f,c
 19600                           
 19601                           ;stkvar	_exp1 @ sp[(-2)+0]
 19602  019170  0EFE               	movlw	-2
 19603  019172  06E3               	decf	plusw1,f,c
 19604  019174                     l8800:
 19605                           
 19606                           ;stkvar	_exp1 @ sp[(-2)+0]
 19607  019174  0EFE               	movlw	-2
 19608  019176  50E3               	movf	plusw1,w,c
 19609  019178  A4D8               	btfss	status,2,c
 19610  01917A  D7F1               	goto	l8798
 19611  01917C                     u7340:
 19612                           
 19613                           ;stkvar	_sign1 @ sp[(-2)+1]
 19614  01917C  0EFF               	movlw	-1
 19615  01917E  50E3               	movf	plusw1,w,c
 19616  019180  B4D8               	btfsc	status,2,c
 19617  019182  D011               	goto	u7360
 19618                           
 19619                           ;stkvar	_f1 @ sp[(-2)+-4]
 19620                           ;stkvar	_f1 @ sp[(-2)+-4]
 19621  019184  0EFA               	movlw	-6
 19622  019186  6CE3               	negf	plusw1,c
 19623  019188  0EFB               	movlw	-5
 19624  01918A  1EE3               	comf	plusw1,f,c
 19625  01918C  0EFC               	movlw	-4
 19626  01918E  1EE3               	comf	plusw1,f,c
 19627  019190  0EFD               	movlw	-3
 19628  019192  1EE3               	comf	plusw1,f,c
 19629  019194  E308               	bnc	u7360
 19630  019196  0EFB               	movlw	-5
 19631  019198  2AE3               	incf	plusw1,f,c
 19632  01919A  E305               	bnc	u7360
 19633  01919C  0EFC               	movlw	-4
 19634  01919E  2AE3               	incf	plusw1,f,c
 19635  0191A0  E302               	bnc	u7360
 19636  0191A2  0EFD               	movlw	-3
 19637  0191A4  2AE3               	incf	plusw1,f,c
 19638  0191A6                     u7360:
 19639                           
 19640                           ;stkvar	_f1 @ sp[(-2)+-4]
 19641  0191A6  0EFA               	movlw	-6
 19642  0191A8  006F FF8C  F001    	movff	plusw1,btemp
 19643  0191AE  0EFB               	movlw	-5
 19644  0191B0  006F FF8C  F002    	movff	plusw1,btemp+1
 19645  0191B6  0EFC               	movlw	-4
 19646  0191B8  006F FF8C  F003    	movff	plusw1,btemp+2
 19647  0191BE  0EFD               	movlw	-3
 19648  0191C0  006F FF8C  F004    	movff	plusw1,btemp+3
 19649  0191C6                     l2752:
 19650                           
 19651                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19652  0191C6  0EFA               	movlw	250
 19653  0191C8  26E1               	addwf	fsr1l,f,c
 19654  0191CA  0EFF               	movlw	255
 19655  0191CC  22E2               	addwfc	fsr1h,f,c
 19656  0191CE  0012               	return		;funcret
 19657  0191D0                     __end_of___fltol:
 19658                           	opt callstack 0
 19659                           
 19660 ;; *************** function ___flneg *****************
 19661 ;; Defined at:
 19662 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 19663 ;; Parameters:    Size  Location     Type
 19664 ;;  f1              4  [STACK] long 
 19665 ;; Auto vars:     Size  Location     Type
 19666 ;;		None
 19667 ;; Return value:  Size  Location     Type
 19668 ;;                  4  [STACK] long 
 19669 ;; Registers used:
 19670 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 19671 ;; Tracked objects:
 19672 ;;		On entry : 0/0
 19673 ;;		On exit  : 0/0
 19674 ;;		Unchanged: 0/0
 19675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19680 ;;Total ram usage:        0 bytes
 19681 ;; Hardware stack levels used:    1
 19682 ;; Hardware stack levels required when called:   15
 19683 ;; This function calls:
 19684 ;;		Nothing
 19685 ;; This function is called by:
 19686 ;;		_calc_bsoc
 19687 ;;		_efgtoa
 19688 ;; This function uses a reentrant model
 19689 ;;
 19690                           
 19691                           	psect	text66
 19692  01B6C0                     __ptext66:
 19693                           	opt callstack 0
 19694  01B6C0                     ___flneg:
 19695                           	opt callstack 0
 19696                           
 19697                           ;stkvar	_f1 @ sp[(0)+-4]
 19698                           
 19699                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19700                           ;incstack = 0
 19701 ;; hardware stack exceeded
 19702  01B6C0  0EFC               	movlw	-4
 19703  01B6C2  50E3               	movf	plusw1,w,c
 19704  01B6C4  E10A               	bnz	u7260
 19705  01B6C6  0EFD               	movlw	-3
 19706  01B6C8  50E3               	movf	plusw1,w,c
 19707  01B6CA  E107               	bnz	u7260
 19708  01B6CC  0EFE               	movlw	-2
 19709  01B6CE  50E3               	movf	plusw1,w,c
 19710  01B6D0  E104               	bnz	u7260
 19711  01B6D2  0EFF               	movlw	-1
 19712  01B6D4  50E3               	movf	plusw1,w,c
 19713  01B6D6  B4D8               	btfsc	status,2,c
 19714  01B6D8  D002               	goto	l8764
 19715  01B6DA                     u7260:
 19716                           
 19717                           ;stkvar	_f1 @ sp[(0)+-4]
 19718  01B6DA  0EFF               	movlw	-1
 19719  01B6DC  7EE3               	btg	plusw1,7,c
 19720  01B6DE                     l8764:
 19721                           
 19722                           ;stkvar	_f1 @ sp[(0)+-4]
 19723  01B6DE  0EFC               	movlw	-4
 19724  01B6E0  006F FF8C  F001    	movff	plusw1,btemp
 19725  01B6E6  0EFD               	movlw	-3
 19726  01B6E8  006F FF8C  F002    	movff	plusw1,btemp+1
 19727  01B6EE  0EFE               	movlw	-2
 19728  01B6F0  006F FF8C  F003    	movff	plusw1,btemp+2
 19729  01B6F6  0EFF               	movlw	-1
 19730  01B6F8  006F FF8C  F004    	movff	plusw1,btemp+3
 19731                           
 19732                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19733  01B6FE  52E5               	movf	postdec1,f,c
 19734  01B700  52E5               	movf	postdec1,f,c
 19735  01B702  52E5               	movf	postdec1,f,c
 19736  01B704  52E5               	movf	postdec1,f,c
 19737  01B706  0012               	return		;funcret
 19738  01B708                     __end_of___flneg:
 19739                           	opt callstack 0
 19740                           
 19741 ;; *************** function ___fleq *****************
 19742 ;; Defined at:
 19743 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 19744 ;; Parameters:    Size  Location     Type
 19745 ;;  ff1             4  [STACK] long 
 19746 ;;  ff2             4  [STACK] long 
 19747 ;; Auto vars:     Size  Location     Type
 19748 ;;		None
 19749 ;; Return value:  Size  Location     Type
 19750 ;;		None               void
 19751 ;; Registers used:
 19752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 19753 ;; Tracked objects:
 19754 ;;		On entry : 0/0
 19755 ;;		On exit  : 0/0
 19756 ;;		Unchanged: 0/0
 19757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19762 ;;Total ram usage:        0 bytes
 19763 ;; Hardware stack levels used:    1
 19764 ;; Hardware stack levels required when called:   15
 19765 ;; This function calls:
 19766 ;;		Nothing
 19767 ;; This function is called by:
 19768 ;;		_efgtoa
 19769 ;; This function uses a reentrant model
 19770 ;;
 19771                           
 19772                           	psect	text67
 19773  01A50A                     __ptext67:
 19774                           	opt callstack 0
 19775  01A50A                     ___fleq:
 19776                           	opt callstack 0
 19777                           
 19778                           ;stkvar	_ff1 @ sp[(0)+-4]
 19779                           
 19780                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19781                           ;incstack = 0
 19782 ;; hardware stack exceeded
 19783  01A50A  50E1               	movf	fsr1l,w,c
 19784  01A50C  0FFC               	addlw	-4
 19785  01A50E  6ED9               	movwf	fsr2l,c
 19786  01A510  50E2               	movf	fsr1h,w,c
 19787  01A512  6EDA               	movwf	fsr2h,c
 19788  01A514  0EFF               	movlw	255
 19789  01A516  22DA               	addwfc	fsr2h,f,c
 19790  01A518  0E00               	movlw	0
 19791  01A51A  14DE               	andwf	postinc2,w,c
 19792  01A51C  6E09               	movwf	(btemp+8)^0,c
 19793  01A51E  0E00               	movlw	0
 19794  01A520  14DE               	andwf	postinc2,w,c
 19795  01A522  6E0A               	movwf	(btemp+9)^0,c
 19796  01A524  0E80               	movlw	128
 19797  01A526  14DE               	andwf	postinc2,w,c
 19798  01A528  6E0B               	movwf	(btemp+10)^0,c
 19799  01A52A  0E7F               	movlw	127
 19800  01A52C  14DE               	andwf	postinc2,w,c
 19801  01A52E  6E0C               	movwf	(btemp+11)^0,c
 19802  01A530  5009               	movf	(btemp+8)^0,w,c
 19803  01A532  100A               	iorwf	(btemp+9)^0,w,c
 19804  01A534  100B               	iorwf	(btemp+10)^0,w,c
 19805  01A536  100C               	iorwf	(btemp+11)^0,w,c
 19806  01A538  A4D8               	btfss	status,2,c
 19807  01A53A  D008               	goto	l8722
 19808                           
 19809                           ;stkvar	_ff1 @ sp[(0)+-4]
 19810  01A53C  0EFC               	movlw	-4
 19811  01A53E  6AE3               	clrf	plusw1,c
 19812  01A540  0EFD               	movlw	-3
 19813  01A542  6AE3               	clrf	plusw1,c
 19814  01A544  0EFE               	movlw	-2
 19815  01A546  6AE3               	clrf	plusw1,c
 19816  01A548  0EFF               	movlw	-1
 19817  01A54A  6AE3               	clrf	plusw1,c
 19818  01A54C                     l8722:
 19819                           
 19820                           ;stkvar	_ff2 @ sp[(0)+-8]
 19821  01A54C  50E1               	movf	fsr1l,w,c
 19822  01A54E  0FF8               	addlw	-8
 19823  01A550  6ED9               	movwf	fsr2l,c
 19824  01A552  50E2               	movf	fsr1h,w,c
 19825  01A554  6EDA               	movwf	fsr2h,c
 19826  01A556  0EFF               	movlw	255
 19827  01A558  22DA               	addwfc	fsr2h,f,c
 19828  01A55A  0E00               	movlw	0
 19829  01A55C  14DE               	andwf	postinc2,w,c
 19830  01A55E  6E09               	movwf	(btemp+8)^0,c
 19831  01A560  0E00               	movlw	0
 19832  01A562  14DE               	andwf	postinc2,w,c
 19833  01A564  6E0A               	movwf	(btemp+9)^0,c
 19834  01A566  0E80               	movlw	128
 19835  01A568  14DE               	andwf	postinc2,w,c
 19836  01A56A  6E0B               	movwf	(btemp+10)^0,c
 19837  01A56C  0E7F               	movlw	127
 19838  01A56E  14DE               	andwf	postinc2,w,c
 19839  01A570  6E0C               	movwf	(btemp+11)^0,c
 19840  01A572  5009               	movf	(btemp+8)^0,w,c
 19841  01A574  100A               	iorwf	(btemp+9)^0,w,c
 19842  01A576  100B               	iorwf	(btemp+10)^0,w,c
 19843  01A578  100C               	iorwf	(btemp+11)^0,w,c
 19844  01A57A  A4D8               	btfss	status,2,c
 19845  01A57C  D008               	goto	l8726
 19846                           
 19847                           ;stkvar	_ff2 @ sp[(0)+-8]
 19848  01A57E  0EF8               	movlw	-8
 19849  01A580  6AE3               	clrf	plusw1,c
 19850  01A582  0EF9               	movlw	-7
 19851  01A584  6AE3               	clrf	plusw1,c
 19852  01A586  0EFA               	movlw	-6
 19853  01A588  6AE3               	clrf	plusw1,c
 19854  01A58A  0EFB               	movlw	-5
 19855  01A58C  6AE3               	clrf	plusw1,c
 19856  01A58E                     l8726:
 19857                           
 19858                           ;stkvar	_ff2 @ sp[(0)+-8]
 19859                           ;stkvar	_ff1 @ sp[(0)+-4]
 19860  01A58E  50E1               	movf	fsr1l,w,c
 19861  01A590  0FFC               	addlw	-4
 19862  01A592  6ED9               	movwf	fsr2l,c
 19863  01A594  50E2               	movf	fsr1h,w,c
 19864  01A596  6EDA               	movwf	fsr2h,c
 19865  01A598  0EFF               	movlw	255
 19866  01A59A  22DA               	addwfc	fsr2h,f,c
 19867  01A59C  0EF8               	movlw	-8
 19868  01A59E  50E3               	movf	plusw1,w,c
 19869  01A5A0  18DE               	xorwf	postinc2,w,c
 19870  01A5A2  E10D               	bnz	u7200
 19871  01A5A4  0EF9               	movlw	-7
 19872  01A5A6  50E3               	movf	plusw1,w,c
 19873  01A5A8  18DE               	xorwf	postinc2,w,c
 19874  01A5AA  E109               	bnz	u7200
 19875  01A5AC  0EFA               	movlw	-6
 19876  01A5AE  50E3               	movf	plusw1,w,c
 19877  01A5B0  18DE               	xorwf	postinc2,w,c
 19878  01A5B2  E105               	bnz	u7200
 19879  01A5B4  0EFB               	movlw	-5
 19880  01A5B6  50E3               	movf	plusw1,w,c
 19881  01A5B8  18DE               	xorwf	postinc2,w,c
 19882  01A5BA  B4D8               	btfsc	status,2,c
 19883  01A5BC  D002               	goto	l8730
 19884  01A5BE                     u7200:
 19885  01A5BE  9001               	bcf	btemp& (0+255),0,c
 19886  01A5C0  D001               	goto	l2714
 19887  01A5C2                     l8730:
 19888  01A5C2  8001               	bsf	btemp& (0+255),0,c
 19889  01A5C4                     l2714:
 19890                           
 19891                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 19892  01A5C4  0EF8               	movlw	248
 19893  01A5C6  26E1               	addwf	fsr1l,f,c
 19894  01A5C8  0EFF               	movlw	255
 19895  01A5CA  22E2               	addwfc	fsr1h,f,c
 19896  01A5CC  0012               	return		;funcret
 19897  01A5CE                     __end_of___fleq:
 19898                           	opt callstack 0
 19899                           
 19900 ;; *************** function ___awmod *****************
 19901 ;; Defined at:
 19902 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 19903 ;; Parameters:    Size  Location     Type
 19904 ;;  dividend        2  [STACK] int 
 19905 ;;  divisor         2  [STACK] int 
 19906 ;; Auto vars:     Size  Location     Type
 19907 ;;  sign            1  [STACK] unsigned char 
 19908 ;;  counter         1  [STACK] unsigned char 
 19909 ;; Return value:  Size  Location     Type
 19910 ;;                  2  [STACK] int 
 19911 ;; Registers used:
 19912 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 19913 ;; Tracked objects:
 19914 ;;		On entry : 0/0
 19915 ;;		On exit  : 0/0
 19916 ;;		Unchanged: 0/0
 19917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19922 ;;Total ram usage:        0 bytes
 19923 ;; Hardware stack levels used:    1
 19924 ;; Hardware stack levels required when called:   15
 19925 ;; This function calls:
 19926 ;;		Nothing
 19927 ;; This function is called by:
 19928 ;;		_efgtoa
 19929 ;; This function uses a reentrant model
 19930 ;;
 19931                           
 19932                           	psect	text68
 19933  019AAC                     __ptext68:
 19934                           	opt callstack 0
 19935  019AAC                     ___awmod:
 19936                           	opt callstack 0
 19937                           
 19938                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19939  019AAC  52E6               	movf	postinc1,f,c
 19940  019AAE  52E6               	movf	postinc1,f,c
 19941                           
 19942                           ;stkvar	_sign @ sp[(-2)+0]
 19943                           
 19944                           ;incstack = 0
 19945 ;; hardware stack exceeded
 19946  019AB0  0EFE               	movlw	-2
 19947  019AB2  6AE3               	clrf	plusw1,c
 19948                           
 19949                           ;stkvar	_dividend @ sp[(-2)+-2]
 19950  019AB4  0EFD               	movlw	-3
 19951  019AB6  AEE3               	btfss	plusw1,7,c
 19952  019AB8  D009               	goto	l8688
 19953                           
 19954                           ;stkvar	_dividend @ sp[(-2)+-2]
 19955                           ;stkvar	_dividend @ sp[(-2)+-2]
 19956  019ABA  0EFC               	movlw	-4
 19957  019ABC  6CE3               	negf	plusw1,c
 19958  019ABE  0EFD               	movlw	-3
 19959  019AC0  1EE3               	comf	plusw1,f,c
 19960  019AC2  B0D8               	btfsc	status,0,c
 19961  019AC4  2AE3               	incf	plusw1,f,c
 19962                           
 19963                           ;stkvar	_sign @ sp[(-2)+0]
 19964  019AC6  0EFE               	movlw	-2
 19965  019AC8  6AE3               	clrf	plusw1,c
 19966  019ACA  2AE3               	incf	plusw1,f,c
 19967  019ACC                     l8688:
 19968                           
 19969                           ;stkvar	_divisor @ sp[(-2)+-4]
 19970  019ACC  0EFB               	movlw	-5
 19971  019ACE  AEE3               	btfss	plusw1,7,c
 19972  019AD0  D006               	goto	l8692
 19973                           
 19974                           ;stkvar	_divisor @ sp[(-2)+-4]
 19975                           ;stkvar	_divisor @ sp[(-2)+-4]
 19976  019AD2  0EFA               	movlw	-6
 19977  019AD4  6CE3               	negf	plusw1,c
 19978  019AD6  0EFB               	movlw	-5
 19979  019AD8  1EE3               	comf	plusw1,f,c
 19980  019ADA  B0D8               	btfsc	status,0,c
 19981  019ADC  2AE3               	incf	plusw1,f,c
 19982  019ADE                     l8692:
 19983                           
 19984                           ;stkvar	_divisor @ sp[(-2)+-4]
 19985  019ADE  0EFA               	movlw	-6
 19986  019AE0  006F FF8C  F001    	movff	plusw1,btemp
 19987  019AE6  0EFB               	movlw	-5
 19988  019AE8  50E3               	movf	plusw1,w,c
 19989  019AEA  1001               	iorwf	btemp^0,w,c
 19990  019AEC  B4D8               	btfsc	status,2,c
 19991  019AEE  D053               	goto	u7160
 19992                           
 19993                           ;stkvar	_counter @ sp[(-2)+1]
 19994  019AF0  0EFF               	movlw	-1
 19995  019AF2  6AE3               	clrf	plusw1,c
 19996  019AF4  D012               	goto	L23
 19997  019AF6                     l8696:
 19998                           
 19999                           ;stkvar	_divisor @ sp[(-2)+-4]
 20000  019AF6  0EFA               	movlw	-6
 20001  019AF8  50E3               	movf	plusw1,w,c
 20002  019AFA  90D8               	bcf	status,0,c
 20003  019AFC  34E8               	rlcf	wreg,w,c
 20004  019AFE  6E01               	movwf	btemp^0,c
 20005  019B00  0EFA               	movlw	-6
 20006  019B02  0060  F007  FFE3   	movff	btemp,plusw1
 20007  019B08  0EFB               	movlw	-5
 20008  019B0A  50E3               	movf	plusw1,w,c
 20009  019B0C  34E8               	rlcf	wreg,w,c
 20010  019B0E  6E01               	movwf	btemp^0,c
 20011  019B10  0EFB               	movlw	-5
 20012  019B12  0060  F007  FFE3   	movff	btemp,plusw1
 20013                           
 20014                           ;stkvar	_counter @ sp[(-2)+1]
 20015  019B18  0EFF               	movlw	-1
 20016  019B1A                     L23:
 20017  019B1A  2AE3               	incf	plusw1,f,c
 20018                           
 20019                           ;stkvar	_divisor @ sp[(-2)+-4]
 20020  019B1C  0EFB               	movlw	-5
 20021  019B1E  AEE3               	btfss	plusw1,7,c
 20022  019B20  D7EA               	goto	l8696
 20023  019B22                     u7140:
 20024                           
 20025                           ;stkvar	_divisor @ sp[(-2)+-4]
 20026  019B22  0EFA               	movlw	-6
 20027  019B24  006F FF8C  F00B    	movff	plusw1,btemp+10
 20028  019B2A  0EFB               	movlw	-5
 20029  019B2C  006F FF8C  F00C    	movff	plusw1,btemp+11
 20030                           
 20031                           ;stkvar	_dividend @ sp[(-2)+-2]
 20032  019B32  0EFC               	movlw	-4
 20033  019B34  006F FF8C  F009    	movff	plusw1,btemp+8
 20034  019B3A  0EFD               	movlw	-3
 20035  019B3C  006F FF8C  F00A    	movff	plusw1,btemp+9
 20036  019B42  500B               	movf	(btemp+10)^0,w,c
 20037  019B44  5C09               	subwf	(btemp+8)^0,w,c
 20038  019B46  500C               	movf	(btemp+11)^0,w,c
 20039  019B48  580A               	subwfb	(btemp+9)^0,w,c
 20040  019B4A  A0D8               	btfss	status,0,c
 20041  019B4C  D014               	goto	l8706
 20042                           
 20043                           ;stkvar	_divisor @ sp[(-2)+-4]
 20044                           ;stkvar	_dividend @ sp[(-2)+-2]
 20045  019B4E  0EFC               	movlw	-4
 20046  019B50  50E3               	movf	plusw1,w,c
 20047  019B52  6E01               	movwf	btemp^0,c
 20048  019B54  0EFA               	movlw	-6
 20049  019B56  50E3               	movf	plusw1,w,c
 20050  019B58  5E01               	subwf	btemp^0,f,c
 20051  019B5A  0EFC               	movlw	-4
 20052  019B5C  0060  F007  FFE3   	movff	btemp,plusw1
 20053  019B62  0EFD               	movlw	-3
 20054  019B64  50E3               	movf	plusw1,w,c
 20055  019B66  6E01               	movwf	btemp^0,c
 20056  019B68  0EFB               	movlw	-5
 20057  019B6A  50E3               	movf	plusw1,w,c
 20058  019B6C  5A01               	subwfb	btemp^0,f,c
 20059  019B6E  0EFD               	movlw	-3
 20060  019B70  0060  F007  FFE3   	movff	btemp,plusw1
 20061  019B76                     l8706:
 20062                           
 20063                           ;stkvar	_divisor @ sp[(-2)+-4]
 20064  019B76  90D8               	bcf	status,0,c
 20065  019B78  0EFB               	movlw	-5
 20066  019B7A  32E3               	rrcf	plusw1,f,c
 20067  019B7C  0EFA               	movlw	-6
 20068  019B7E  32E3               	rrcf	plusw1,f,c
 20069                           
 20070                           ;stkvar	_counter @ sp[(-2)+1]
 20071  019B80  0EFF               	movlw	-1
 20072  019B82  50E3               	movf	plusw1,w,c
 20073  019B84  6E01               	movwf	btemp^0,c
 20074  019B86  0E01               	movlw	1
 20075  019B88  5E01               	subwf	btemp^0,f,c
 20076  019B8A  0EFF               	movlw	-1
 20077  019B8C  0060  F007  FFE3   	movff	btemp,plusw1
 20078  019B92  A4D8               	btfss	status,2,c
 20079  019B94  D7C6               	goto	u7140
 20080  019B96                     u7160:
 20081                           
 20082                           ;stkvar	_sign @ sp[(-2)+0]
 20083  019B96  0EFE               	movlw	-2
 20084  019B98  50E3               	movf	plusw1,w,c
 20085  019B9A  B4D8               	btfsc	status,2,c
 20086  019B9C  D006               	goto	l8714
 20087                           
 20088                           ;stkvar	_dividend @ sp[(-2)+-2]
 20089                           ;stkvar	_dividend @ sp[(-2)+-2]
 20090  019B9E  0EFC               	movlw	-4
 20091  019BA0  6CE3               	negf	plusw1,c
 20092  019BA2  0EFD               	movlw	-3
 20093  019BA4  1EE3               	comf	plusw1,f,c
 20094  019BA6  B0D8               	btfsc	status,0,c
 20095  019BA8  2AE3               	incf	plusw1,f,c
 20096  019BAA                     l8714:
 20097                           
 20098                           ;stkvar	_dividend @ sp[(-2)+-2]
 20099  019BAA  0EFC               	movlw	-4
 20100  019BAC  006F FF8C  F001    	movff	plusw1,btemp
 20101  019BB2  0EFD               	movlw	-3
 20102  019BB4  006F FF8C  F002    	movff	plusw1,btemp+1
 20103                           
 20104                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 20105  019BBA  0EFA               	movlw	250
 20106  019BBC  26E1               	addwf	fsr1l,f,c
 20107  019BBE  0EFF               	movlw	255
 20108  019BC0  22E2               	addwfc	fsr1h,f,c
 20109  019BC2  0012               	return		;funcret
 20110  019BC4                     __end_of___awmod:
 20111                           	opt callstack 0
 20112                           
 20113 ;; *************** function ___awdiv *****************
 20114 ;; Defined at:
 20115 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 20116 ;; Parameters:    Size  Location     Type
 20117 ;;  dividend        2  [STACK] int 
 20118 ;;  divisor         2  [STACK] int 
 20119 ;; Auto vars:     Size  Location     Type
 20120 ;;  quotient        2  [STACK] int 
 20121 ;;  sign            1  [STACK] unsigned char 
 20122 ;;  counter         1  [STACK] unsigned char 
 20123 ;; Return value:  Size  Location     Type
 20124 ;;                  2  [STACK] int 
 20125 ;; Registers used:
 20126 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 20127 ;; Tracked objects:
 20128 ;;		On entry : 0/0
 20129 ;;		On exit  : 0/0
 20130 ;;		Unchanged: 0/0
 20131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20136 ;;Total ram usage:        0 bytes
 20137 ;; Hardware stack levels used:    1
 20138 ;; Hardware stack levels required when called:   15
 20139 ;; This function calls:
 20140 ;;		Nothing
 20141 ;; This function is called by:
 20142 ;;		_efgtoa
 20143 ;; This function uses a reentrant model
 20144 ;;
 20145                           
 20146                           	psect	text69
 20147  019496                     __ptext69:
 20148                           	opt callstack 0
 20149  019496                     ___awdiv:
 20150                           	opt callstack 0
 20151                           
 20152                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20153  019496  52E6               	movf	postinc1,f,c
 20154  019498  52E6               	movf	postinc1,f,c
 20155  01949A  52E6               	movf	postinc1,f,c
 20156  01949C  52E6               	movf	postinc1,f,c
 20157                           
 20158                           ;stkvar	_sign @ sp[(-4)+2]
 20159                           
 20160                           ;incstack = 0
 20161 ;; hardware stack exceeded
 20162  01949E  0EFE               	movlw	-2
 20163  0194A0  6AE3               	clrf	plusw1,c
 20164                           
 20165                           ;stkvar	_divisor @ sp[(-4)+-4]
 20166  0194A2  0EF9               	movlw	-7
 20167  0194A4  AEE3               	btfss	plusw1,7,c
 20168  0194A6  D009               	goto	l8642
 20169                           
 20170                           ;stkvar	_divisor @ sp[(-4)+-4]
 20171                           ;stkvar	_divisor @ sp[(-4)+-4]
 20172  0194A8  0EF8               	movlw	-8
 20173  0194AA  6CE3               	negf	plusw1,c
 20174  0194AC  0EF9               	movlw	-7
 20175  0194AE  1EE3               	comf	plusw1,f,c
 20176  0194B0  B0D8               	btfsc	status,0,c
 20177  0194B2  2AE3               	incf	plusw1,f,c
 20178                           
 20179                           ;stkvar	_sign @ sp[(-4)+2]
 20180  0194B4  0EFE               	movlw	-2
 20181  0194B6  6AE3               	clrf	plusw1,c
 20182  0194B8  2AE3               	incf	plusw1,f,c
 20183  0194BA                     l8642:
 20184                           
 20185                           ;stkvar	_dividend @ sp[(-4)+-2]
 20186  0194BA  0EFB               	movlw	-5
 20187  0194BC  AEE3               	btfss	plusw1,7,c
 20188  0194BE  D008               	goto	l8648
 20189                           
 20190                           ;stkvar	_dividend @ sp[(-4)+-2]
 20191                           ;stkvar	_dividend @ sp[(-4)+-2]
 20192  0194C0  0EFA               	movlw	-6
 20193  0194C2  6CE3               	negf	plusw1,c
 20194  0194C4  0EFB               	movlw	-5
 20195  0194C6  1EE3               	comf	plusw1,f,c
 20196  0194C8  B0D8               	btfsc	status,0,c
 20197  0194CA  2AE3               	incf	plusw1,f,c
 20198                           
 20199                           ;stkvar	_sign @ sp[(-4)+2]
 20200  0194CC  0EFE               	movlw	-2
 20201  0194CE  70E3               	btg	plusw1,0,c
 20202  0194D0                     l8648:
 20203                           
 20204                           ;stkvar	_quotient @ sp[(-4)+0]
 20205  0194D0  0EFC               	movlw	-4
 20206  0194D2  6AE3               	clrf	plusw1,c
 20207  0194D4  0EFD               	movlw	-3
 20208  0194D6  6AE3               	clrf	plusw1,c
 20209                           
 20210                           ;stkvar	_divisor @ sp[(-4)+-4]
 20211  0194D8  0EF8               	movlw	-8
 20212  0194DA  006F FF8C  F001    	movff	plusw1,btemp
 20213  0194E0  0EF9               	movlw	-7
 20214  0194E2  50E3               	movf	plusw1,w,c
 20215  0194E4  1001               	iorwf	btemp^0,w,c
 20216  0194E6  B4D8               	btfsc	status,2,c
 20217  0194E8  D066               	goto	u7090
 20218                           
 20219                           ;stkvar	_counter @ sp[(-4)+3]
 20220  0194EA  0EFF               	movlw	-1
 20221  0194EC  6AE3               	clrf	plusw1,c
 20222  0194EE  D012               	goto	L24
 20223  0194F0                     l8654:
 20224                           
 20225                           ;stkvar	_divisor @ sp[(-4)+-4]
 20226  0194F0  0EF8               	movlw	-8
 20227  0194F2  50E3               	movf	plusw1,w,c
 20228  0194F4  90D8               	bcf	status,0,c
 20229  0194F6  34E8               	rlcf	wreg,w,c
 20230  0194F8  6E01               	movwf	btemp^0,c
 20231  0194FA  0EF8               	movlw	-8
 20232  0194FC  0060  F007  FFE3   	movff	btemp,plusw1
 20233  019502  0EF9               	movlw	-7
 20234  019504  50E3               	movf	plusw1,w,c
 20235  019506  34E8               	rlcf	wreg,w,c
 20236  019508  6E01               	movwf	btemp^0,c
 20237  01950A  0EF9               	movlw	-7
 20238  01950C  0060  F007  FFE3   	movff	btemp,plusw1
 20239                           
 20240                           ;stkvar	_counter @ sp[(-4)+3]
 20241  019512  0EFF               	movlw	-1
 20242  019514                     L24:
 20243  019514  2AE3               	incf	plusw1,f,c
 20244                           
 20245                           ;stkvar	_divisor @ sp[(-4)+-4]
 20246  019516  0EF9               	movlw	-7
 20247  019518  AEE3               	btfss	plusw1,7,c
 20248  01951A  D7EA               	goto	l8654
 20249  01951C                     u7070:
 20250                           
 20251                           ;stkvar	_quotient @ sp[(-4)+0]
 20252  01951C  0EFC               	movlw	-4
 20253  01951E  50E3               	movf	plusw1,w,c
 20254  019520  90D8               	bcf	status,0,c
 20255  019522  34E8               	rlcf	wreg,w,c
 20256  019524  6E01               	movwf	btemp^0,c
 20257  019526  0EFC               	movlw	-4
 20258  019528  0060  F007  FFE3   	movff	btemp,plusw1
 20259  01952E  0EFD               	movlw	-3
 20260  019530  50E3               	movf	plusw1,w,c
 20261  019532  34E8               	rlcf	wreg,w,c
 20262  019534  6E01               	movwf	btemp^0,c
 20263  019536  0EFD               	movlw	-3
 20264  019538  0060  F007  FFE3   	movff	btemp,plusw1
 20265                           
 20266                           ;stkvar	_divisor @ sp[(-4)+-4]
 20267  01953E  0EF8               	movlw	-8
 20268  019540  006F FF8C  F00B    	movff	plusw1,btemp+10
 20269  019546  0EF9               	movlw	-7
 20270  019548  006F FF8C  F00C    	movff	plusw1,btemp+11
 20271                           
 20272                           ;stkvar	_dividend @ sp[(-4)+-2]
 20273  01954E  0EFA               	movlw	-6
 20274  019550  006F FF8C  F009    	movff	plusw1,btemp+8
 20275  019556  0EFB               	movlw	-5
 20276  019558  006F FF8C  F00A    	movff	plusw1,btemp+9
 20277  01955E  500B               	movf	(btemp+10)^0,w,c
 20278  019560  5C09               	subwf	(btemp+8)^0,w,c
 20279  019562  500C               	movf	(btemp+11)^0,w,c
 20280  019564  580A               	subwfb	(btemp+9)^0,w,c
 20281  019566  A0D8               	btfss	status,0,c
 20282  019568  D016               	goto	l8668
 20283                           
 20284                           ;stkvar	_divisor @ sp[(-4)+-4]
 20285                           ;stkvar	_dividend @ sp[(-4)+-2]
 20286  01956A  0EFA               	movlw	-6
 20287  01956C  50E3               	movf	plusw1,w,c
 20288  01956E  6E01               	movwf	btemp^0,c
 20289  019570  0EF8               	movlw	-8
 20290  019572  50E3               	movf	plusw1,w,c
 20291  019574  5E01               	subwf	btemp^0,f,c
 20292  019576  0EFA               	movlw	-6
 20293  019578  0060  F007  FFE3   	movff	btemp,plusw1
 20294  01957E  0EFB               	movlw	-5
 20295  019580  50E3               	movf	plusw1,w,c
 20296  019582  6E01               	movwf	btemp^0,c
 20297  019584  0EF9               	movlw	-7
 20298  019586  50E3               	movf	plusw1,w,c
 20299  019588  5A01               	subwfb	btemp^0,f,c
 20300  01958A  0EFB               	movlw	-5
 20301  01958C  0060  F007  FFE3   	movff	btemp,plusw1
 20302                           
 20303                           ;stkvar	_quotient @ sp[(-4)+0]
 20304  019592  0EFC               	movlw	-4
 20305  019594  80E3               	bsf	plusw1,0,c
 20306  019596                     l8668:
 20307                           
 20308                           ;stkvar	_divisor @ sp[(-4)+-4]
 20309  019596  90D8               	bcf	status,0,c
 20310  019598  0EF9               	movlw	-7
 20311  01959A  32E3               	rrcf	plusw1,f,c
 20312  01959C  0EF8               	movlw	-8
 20313  01959E  32E3               	rrcf	plusw1,f,c
 20314                           
 20315                           ;stkvar	_counter @ sp[(-4)+3]
 20316  0195A0  0EFF               	movlw	-1
 20317  0195A2  50E3               	movf	plusw1,w,c
 20318  0195A4  6E01               	movwf	btemp^0,c
 20319  0195A6  0E01               	movlw	1
 20320  0195A8  5E01               	subwf	btemp^0,f,c
 20321  0195AA  0EFF               	movlw	-1
 20322  0195AC  0060  F007  FFE3   	movff	btemp,plusw1
 20323  0195B2  A4D8               	btfss	status,2,c
 20324  0195B4  D7B3               	goto	u7070
 20325  0195B6                     u7090:
 20326                           
 20327                           ;stkvar	_sign @ sp[(-4)+2]
 20328  0195B6  0EFE               	movlw	-2
 20329  0195B8  50E3               	movf	plusw1,w,c
 20330  0195BA  B4D8               	btfsc	status,2,c
 20331  0195BC  D006               	goto	l8676
 20332                           
 20333                           ;stkvar	_quotient @ sp[(-4)+0]
 20334                           ;stkvar	_quotient @ sp[(-4)+0]
 20335  0195BE  0EFC               	movlw	-4
 20336  0195C0  6CE3               	negf	plusw1,c
 20337  0195C2  0EFD               	movlw	-3
 20338  0195C4  1EE3               	comf	plusw1,f,c
 20339  0195C6  B0D8               	btfsc	status,0,c
 20340  0195C8  2AE3               	incf	plusw1,f,c
 20341  0195CA                     l8676:
 20342                           
 20343                           ;stkvar	_quotient @ sp[(-4)+0]
 20344  0195CA  0EFC               	movlw	-4
 20345  0195CC  006F FF8C  F001    	movff	plusw1,btemp
 20346  0195D2  0EFD               	movlw	-3
 20347  0195D4  006F FF8C  F002    	movff	plusw1,btemp+1
 20348                           
 20349                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 20350  0195DA  0EF8               	movlw	248
 20351  0195DC  26E1               	addwf	fsr1l,f,c
 20352  0195DE  0EFF               	movlw	255
 20353  0195E0  22E2               	addwfc	fsr1h,f,c
 20354  0195E2  0012               	return		;funcret
 20355  0195E4                     __end_of___awdiv:
 20356                           	opt callstack 0
 20357                           
 20358 ;; *************** function _dtoa *****************
 20359 ;; Defined at:
 20360 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20361 ;; Parameters:    Size  Location     Type
 20362 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20363 ;;		 -> f(6), NULL(0), 
 20364 ;;  d               8  [STACK] long long 
 20365 ;; Auto vars:     Size  Location     Type
 20366 ;;  n               8  [STACK] long long 
 20367 ;;  i               2  [STACK] int 
 20368 ;;  s               2  [STACK] int 
 20369 ;;  w               2  [STACK] int 
 20370 ;;  p               2  [STACK] int 
 20371 ;; Return value:  Size  Location     Type
 20372 ;;                  2  [STACK] int 
 20373 ;; Registers used:
 20374 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 20375 ;; Tracked objects:
 20376 ;;		On entry : 0/0
 20377 ;;		On exit  : 0/0
 20378 ;;		Unchanged: 0/0
 20379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20384 ;;Total ram usage:        0 bytes
 20385 ;; Hardware stack levels used:    1
 20386 ;; Hardware stack levels required when called:   20
 20387 ;; This function calls:
 20388 ;;		___aodiv
 20389 ;;		___aomod
 20390 ;;		_abs
 20391 ;;		_pad
 20392 ;; This function is called by:
 20393 ;;		_vfpfcnvrt
 20394 ;; This function uses a reentrant model
 20395 ;;
 20396                           
 20397                           	psect	text70
 20398  0157FA                     __ptext70:
 20399                           	opt callstack 0
 20400  0157FA                     _dtoa:
 20401                           	opt callstack 0
 20402                           
 20403                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 20404  0157FA  0E12               	movlw	18
 20405  0157FC  26E1               	addwf	fsr1l,f,c
 20406  0157FE  0E00               	movlw	0
 20407  015800  22E2               	addwfc	fsr1h,f,c
 20408                           
 20409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 20410                           ;stkvar	_d @ sp[(-18)+-10]
 20411                           
 20412                           ;incstack = 0
 20413 ;; hardware stack exceeded
 20414  015802  0EE4               	movlw	228
 20415  015804  24E1               	addwf	fsr1l,w,c
 20416  015806  6ED9               	movwf	fsr2l,c
 20417  015808  0EFF               	movlw	255
 20418  01580A  20E2               	addwfc	fsr1h,w,c
 20419  01580C  6EDA               	movwf	fsr2h,c
 20420                           
 20421                           ;stkvar	_n @ sp[(-18)+2]
 20422  01580E  0E08               	movlw	8
 20423  015810  6E01               	movwf	btemp^0,c
 20424  015812  0EF0               	movlw	-16
 20425  015814                     us1102999:
 20426  015814  006F FF7B FFE3     	movff	postinc2,plusw1
 20427  01581A  28E8               	incf	wreg,w,c
 20428  01581C  2E01               	decfsz	btemp^0,f,c
 20429  01581E  D7FA               	bra	us1102999
 20430                           
 20431                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 20432                           ;stkvar	_n @ sp[(-18)+2]
 20433  015820  0EF7               	movlw	-9
 20434  015822  AEE3               	btfss	plusw1,7,c
 20435  015824  D002               	goto	u11030
 20436  015826  0E01               	movlw	1
 20437  015828  D001               	goto	u11040
 20438  01582A                     u11030:
 20439  01582A  0E00               	movlw	0
 20440  01582C                     u11040:
 20441  01582C  6E0B               	movwf	(btemp+10)^0,c
 20442  01582E  6A0C               	clrf	(btemp+11)^0,c
 20443                           
 20444                           ;stkvar	_s @ sp[(-18)+12]
 20445  015830  0EFA               	movlw	-6
 20446  015832  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20447  015838  0EFB               	movlw	-5
 20448  01583A  0060  F033  FFE3   	movff	btemp+11,plusw1
 20449                           
 20450                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 20451                           ;stkvar	_s @ sp[(-18)+12]
 20452  015840  0EFA               	movlw	-6
 20453  015842  006F FF8C  F001    	movff	plusw1,btemp
 20454  015848  0EFB               	movlw	-5
 20455  01584A  50E3               	movf	plusw1,w,c
 20456  01584C  1001               	iorwf	btemp^0,w,c
 20457  01584E  B4D8               	btfsc	status,2,c
 20458  015850  D025               	goto	u11060
 20459                           
 20460                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 20461                           ;stkvar	_n @ sp[(-18)+2]
 20462                           ;stkvar	_n @ sp[(-18)+2]
 20463  015852  0EF0               	movlw	-16
 20464  015854  6CE3               	negf	plusw1,c
 20465  015856  0EF1               	movlw	-15
 20466  015858  1EE3               	comf	plusw1,f,c
 20467  01585A  0EF2               	movlw	-14
 20468  01585C  1EE3               	comf	plusw1,f,c
 20469  01585E  0EF3               	movlw	-13
 20470  015860  1EE3               	comf	plusw1,f,c
 20471  015862  0EF4               	movlw	-12
 20472  015864  1EE3               	comf	plusw1,f,c
 20473  015866  0EF5               	movlw	-11
 20474  015868  1EE3               	comf	plusw1,f,c
 20475  01586A  0EF6               	movlw	-10
 20476  01586C  1EE3               	comf	plusw1,f,c
 20477  01586E  0EF7               	movlw	-9
 20478  015870  1EE3               	comf	plusw1,f,c
 20479  015872  E314               	bnc	u11060
 20480  015874  0EF1               	movlw	-15
 20481  015876  2AE3               	incf	plusw1,f,c
 20482  015878  E311               	bnc	u11060
 20483  01587A  0EF2               	movlw	-14
 20484  01587C  2AE3               	incf	plusw1,f,c
 20485  01587E  E30E               	bnc	u11060
 20486  015880  0EF3               	movlw	-13
 20487  015882  2AE3               	incf	plusw1,f,c
 20488  015884  E30B               	bnc	u11060
 20489  015886  0EF4               	movlw	-12
 20490  015888  2AE3               	incf	plusw1,f,c
 20491  01588A  E308               	bnc	u11060
 20492  01588C  0EF5               	movlw	-11
 20493  01588E  2AE3               	incf	plusw1,f,c
 20494  015890  E305               	bnc	u11060
 20495  015892  0EF6               	movlw	-10
 20496  015894  2AE3               	incf	plusw1,f,c
 20497  015896  E302               	bnc	u11060
 20498  015898  0EF7               	movlw	-9
 20499  01589A  2AE3               	incf	plusw1,f,c
 20500  01589C                     u11060:
 20501                           
 20502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 20503  01589C  AE3D               	btfss	(_prec+1)^0,7,c
 20504                           
 20505                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 20506  01589E  923E               	bcf	_flags^0,1,c
 20507                           
 20508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 20509  0158A0  BE3D               	btfsc	(_prec+1)^0,7,c
 20510  0158A2  D005               	goto	u11080
 20511  0158A4  503D               	movf	(_prec+1)^0,w,c
 20512  0158A6  E110               	bnz	l12134
 20513  0158A8  043C               	decf	_prec^0,w,c
 20514  0158AA  B0D8               	btfsc	status,0,c
 20515  0158AC  D00D               	goto	l12134
 20516  0158AE                     u11080:
 20517  0158AE  0E01               	movlw	1
 20518  0158B0  6E0B               	movwf	(btemp+10)^0,c
 20519  0158B2  0E00               	movlw	0
 20520  0158B4  6E0C               	movwf	(btemp+11)^0,c
 20521                           
 20522                           ;stkvar	_p @ sp[(-18)+16]
 20523  0158B6  0EFE               	movlw	-2
 20524  0158B8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20525  0158BE  0EFF               	movlw	-1
 20526  0158C0  0060  F033  FFE3   	movff	btemp+11,plusw1
 20527  0158C6  D008               	goto	l2218
 20528  0158C8                     l12134:
 20529                           
 20530                           ;stkvar	_p @ sp[(-18)+16]
 20531  0158C8  0EFE               	movlw	-2
 20532  0158CA  0060  F0F3  FFE3   	movff	_prec,plusw1
 20533  0158D0  0EFF               	movlw	-1
 20534  0158D2  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 20535  0158D8                     l2218:
 20536                           
 20537                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 20538                           ;stkvar	_w @ sp[(-18)+14]
 20539  0158D8  0EFC               	movlw	-4
 20540  0158DA  0060  F0EB  FFE3   	movff	_width,plusw1
 20541  0158E0  0EFD               	movlw	-3
 20542  0158E2  0060  F0EF  FFE3   	movff	_width+1,plusw1
 20543                           
 20544                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 20545                           ;stkvar	_s @ sp[(-18)+12]
 20546  0158E8  0EFA               	movlw	-6
 20547  0158EA  006F FF8C  F001    	movff	plusw1,btemp
 20548  0158F0  0EFB               	movlw	-5
 20549  0158F2  50E3               	movf	plusw1,w,c
 20550  0158F4  1001               	iorwf	btemp^0,w,c
 20551  0158F6  A4D8               	btfss	status,2,c
 20552  0158F8  D002               	goto	u11100
 20553  0158FA  A43E               	btfss	_flags^0,2,c
 20554  0158FC  D00A               	goto	l12142
 20555  0158FE                     u11100:
 20556                           
 20557                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 20558                           ;stkvar	_w @ sp[(-18)+14]
 20559  0158FE  50E1               	movf	fsr1l,w,c
 20560  015900  0FFC               	addlw	-4
 20561  015902  6ED9               	movwf	fsr2l,c
 20562  015904  50E2               	movf	fsr1h,w,c
 20563  015906  6EDA               	movwf	fsr2h,c
 20564  015908  0EFF               	movlw	255
 20565  01590A  22DA               	addwfc	fsr2h,f,c
 20566  01590C  06DE               	decf	postinc2,f,c
 20567  01590E  0E00               	movlw	0
 20568  015910  5ADD               	subwfb	postdec2,f,c
 20569  015912                     l12142:
 20570                           
 20571                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 20572  015912  0E4F               	movlw	79
 20573  015914  6E0B               	movwf	(btemp+10)^0,c
 20574  015916  0E00               	movlw	0
 20575  015918  6E0C               	movwf	(btemp+11)^0,c
 20576                           
 20577                           ;stkvar	_i @ sp[(-18)+10]
 20578  01591A  0EF8               	movlw	-8
 20579  01591C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20580  015922  0EF9               	movlw	-7
 20581  015924  0060  F033  FFE3   	movff	btemp+11,plusw1
 20582                           
 20583                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 20584  01592A  0102               	movlb	2	; () banked
 20585  01592C  6BE6               	clrf	(_dbuf+79)& (0+255),b
 20586                           
 20587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 20588  01592E  D109               	goto	l12156
 20589  015930                     l12146:
 20590                           
 20591                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 20592                           ;stkvar	_i @ sp[(-18)+10]
 20593  015930  50E1               	movf	fsr1l,w,c
 20594  015932  0FF8               	addlw	-8
 20595  015934  6ED9               	movwf	fsr2l,c
 20596  015936  50E2               	movf	fsr1h,w,c
 20597  015938  6EDA               	movwf	fsr2h,c
 20598  01593A  0EFF               	movlw	255
 20599  01593C  22DA               	addwfc	fsr2h,f,c
 20600  01593E  06DE               	decf	postinc2,f,c
 20601  015940  0E00               	movlw	0
 20602  015942  5ADD               	subwfb	postdec2,f,c
 20603                           
 20604                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 20605  015944  0E0A               	movlw	10
 20606  015946  6EE6               	movwf	postinc1,c
 20607  015948  0E00               	movlw	0
 20608  01594A  6EE6               	movwf	postinc1,c
 20609  01594C  0E00               	movlw	0
 20610  01594E  6EE6               	movwf	postinc1,c
 20611  015950  0E00               	movlw	0
 20612  015952  6EE6               	movwf	postinc1,c
 20613  015954  0E00               	movlw	0
 20614  015956  6EE6               	movwf	postinc1,c
 20615  015958  0E00               	movlw	0
 20616  01595A  6EE6               	movwf	postinc1,c
 20617  01595C  0E00               	movlw	0
 20618  01595E  6EE6               	movwf	postinc1,c
 20619  015960  0E00               	movlw	0
 20620  015962  6EE6               	movwf	postinc1,c
 20621                           
 20622                           ;stkvar	_n @ sp[(-26)+2]
 20623  015964  50E1               	movf	fsr1l,w,c
 20624  015966  0FE8               	addlw	-24
 20625  015968  6ED9               	movwf	fsr2l,c
 20626  01596A  50E2               	movf	fsr1h,w,c
 20627  01596C  6EDA               	movwf	fsr2h,c
 20628  01596E  0EFF               	movlw	255
 20629  015970  22DA               	addwfc	fsr2h,f,c
 20630  015972  006F FF7B FFE6     	movff	postinc2,postinc1
 20631  015978  006F FF7B FFE6     	movff	postinc2,postinc1
 20632  01597E  006F FF7B FFE6     	movff	postinc2,postinc1
 20633  015984  006F FF7B FFE6     	movff	postinc2,postinc1
 20634  01598A  006F FF7B FFE6     	movff	postinc2,postinc1
 20635  015990  006F FF7B FFE6     	movff	postinc2,postinc1
 20636  015996  006F FF7B FFE6     	movff	postinc2,postinc1
 20637  01599C  006F FF7B FFE6     	movff	postinc2,postinc1
 20638  0159A2  EC0A  F0BF         	call	___aomod	;wreg free
 20639  0159A6  52E5               	movf	postdec1,f,c
 20640  0159A8  006F FF9C  F018    	movff	indf1,btemp+23
 20641  0159AE  52E5               	movf	postdec1,f,c
 20642  0159B0  006F FF9C  F017    	movff	indf1,btemp+22
 20643  0159B6  52E5               	movf	postdec1,f,c
 20644  0159B8  006F FF9C  F016    	movff	indf1,btemp+21
 20645  0159BE  52E5               	movf	postdec1,f,c
 20646  0159C0  006F FF9C  F015    	movff	indf1,btemp+20
 20647  0159C6  52E5               	movf	postdec1,f,c
 20648  0159C8  006F FF9C  F014    	movff	indf1,btemp+19
 20649  0159CE  52E5               	movf	postdec1,f,c
 20650  0159D0  006F FF9C  F013    	movff	indf1,btemp+18
 20651  0159D6  52E5               	movf	postdec1,f,c
 20652  0159D8  006F FF9C  F012    	movff	indf1,btemp+17
 20653  0159DE  52E5               	movf	postdec1,f,c
 20654  0159E0  006F FF9C  F011    	movff	indf1,btemp+16
 20655  0159E6  0EF8               	movlw	248
 20656  0159E8  26E1               	addwf	fsr1l,f,c
 20657  0159EA  0EFF               	movlw	255
 20658  0159EC  22E2               	addwfc	fsr1h,f,c
 20659  0159EE  0060  F044  F00B   	movff	btemp+16,btemp+10
 20660  0159F4  0060  F048  F00C   	movff	btemp+17,btemp+11
 20661  0159FA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 20662  015A00  0060  F033  FFE6   	movff	btemp+11,postinc1
 20663  015A06  EC13  F0DC         	call	_abs	;wreg free
 20664  015A0A  0E30               	movlw	48
 20665  015A0C  2601               	addwf	btemp^0,f,c
 20666                           
 20667                           ;stkvar	_i @ sp[(-18)+10]
 20668  015A0E  0EF8               	movlw	-8
 20669  015A10  006F FF8C  F00B    	movff	plusw1,btemp+10
 20670  015A16  0EF9               	movlw	-7
 20671  015A18  006F FF8C  F00C    	movff	plusw1,btemp+11
 20672  015A1E  0E97               	movlw	low _dbuf
 20673  015A20  240B               	addwf	(btemp+10)^0,w,c
 20674  015A22  6ED9               	movwf	fsr2l,c
 20675  015A24  0E02               	movlw	high _dbuf
 20676  015A26  200C               	addwfc	(btemp+11)^0,w,c
 20677  015A28  6EDA               	movwf	fsr2h,c
 20678  015A2A  0060  F007  FFDF   	movff	btemp,indf2
 20679                           
 20680                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 20681                           ;stkvar	_p @ sp[(-18)+16]
 20682  015A30  50E1               	movf	fsr1l,w,c
 20683  015A32  0FFE               	addlw	-2
 20684  015A34  6ED9               	movwf	fsr2l,c
 20685  015A36  50E2               	movf	fsr1h,w,c
 20686  015A38  6EDA               	movwf	fsr2h,c
 20687  015A3A  0EFF               	movlw	255
 20688  015A3C  22DA               	addwfc	fsr2h,f,c
 20689  015A3E  06DE               	decf	postinc2,f,c
 20690  015A40  0E00               	movlw	0
 20691  015A42  5ADD               	subwfb	postdec2,f,c
 20692                           
 20693                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 20694                           ;stkvar	_w @ sp[(-18)+14]
 20695  015A44  50E1               	movf	fsr1l,w,c
 20696  015A46  0FFC               	addlw	-4
 20697  015A48  6ED9               	movwf	fsr2l,c
 20698  015A4A  50E2               	movf	fsr1h,w,c
 20699  015A4C  6EDA               	movwf	fsr2h,c
 20700  015A4E  0EFF               	movlw	255
 20701  015A50  22DA               	addwfc	fsr2h,f,c
 20702  015A52  06DE               	decf	postinc2,f,c
 20703  015A54  0E00               	movlw	0
 20704  015A56  5ADD               	subwfb	postdec2,f,c
 20705                           
 20706                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 20707  015A58  0E0A               	movlw	10
 20708  015A5A  6EE6               	movwf	postinc1,c
 20709  015A5C  0E00               	movlw	0
 20710  015A5E  6EE6               	movwf	postinc1,c
 20711  015A60  0E00               	movlw	0
 20712  015A62  6EE6               	movwf	postinc1,c
 20713  015A64  0E00               	movlw	0
 20714  015A66  6EE6               	movwf	postinc1,c
 20715  015A68  0E00               	movlw	0
 20716  015A6A  6EE6               	movwf	postinc1,c
 20717  015A6C  0E00               	movlw	0
 20718  015A6E  6EE6               	movwf	postinc1,c
 20719  015A70  0E00               	movlw	0
 20720  015A72  6EE6               	movwf	postinc1,c
 20721  015A74  0E00               	movlw	0
 20722  015A76  6EE6               	movwf	postinc1,c
 20723                           
 20724                           ;stkvar	_n @ sp[(-26)+2]
 20725  015A78  50E1               	movf	fsr1l,w,c
 20726  015A7A  0FE8               	addlw	-24
 20727  015A7C  6ED9               	movwf	fsr2l,c
 20728  015A7E  50E2               	movf	fsr1h,w,c
 20729  015A80  6EDA               	movwf	fsr2h,c
 20730  015A82  0EFF               	movlw	255
 20731  015A84  22DA               	addwfc	fsr2h,f,c
 20732  015A86  006F FF7B FFE6     	movff	postinc2,postinc1
 20733  015A8C  006F FF7B FFE6     	movff	postinc2,postinc1
 20734  015A92  006F FF7B FFE6     	movff	postinc2,postinc1
 20735  015A98  006F FF7B FFE6     	movff	postinc2,postinc1
 20736  015A9E  006F FF7B FFE6     	movff	postinc2,postinc1
 20737  015AA4  006F FF7B FFE6     	movff	postinc2,postinc1
 20738  015AAA  006F FF7B FFE6     	movff	postinc2,postinc1
 20739  015AB0  006F FF7B FFE6     	movff	postinc2,postinc1
 20740  015AB6  EC6D  F0BB         	call	___aodiv	;wreg free
 20741  015ABA  52E5               	movf	postdec1,f,c
 20742  015ABC  006F FF9C  F018    	movff	indf1,btemp+23
 20743  015AC2  52E5               	movf	postdec1,f,c
 20744  015AC4  006F FF9C  F017    	movff	indf1,btemp+22
 20745  015ACA  52E5               	movf	postdec1,f,c
 20746  015ACC  006F FF9C  F016    	movff	indf1,btemp+21
 20747  015AD2  52E5               	movf	postdec1,f,c
 20748  015AD4  006F FF9C  F015    	movff	indf1,btemp+20
 20749  015ADA  52E5               	movf	postdec1,f,c
 20750  015ADC  006F FF9C  F014    	movff	indf1,btemp+19
 20751  015AE2  52E5               	movf	postdec1,f,c
 20752  015AE4  006F FF9C  F013    	movff	indf1,btemp+18
 20753  015AEA  52E5               	movf	postdec1,f,c
 20754  015AEC  006F FF9C  F012    	movff	indf1,btemp+17
 20755  015AF2  52E5               	movf	postdec1,f,c
 20756  015AF4  006F FF9C  F011    	movff	indf1,btemp+16
 20757  015AFA  0EF8               	movlw	248
 20758  015AFC  26E1               	addwf	fsr1l,f,c
 20759  015AFE  0EFF               	movlw	255
 20760  015B00  22E2               	addwfc	fsr1h,f,c
 20761                           
 20762                           ;stkvar	_n @ sp[(-18)+2]
 20763  015B02  0EF0               	movlw	-16
 20764  015B04  0060  F047  FFE3   	movff	btemp+16,plusw1
 20765  015B0A  0EF1               	movlw	-15
 20766  015B0C  0060  F04B  FFE3   	movff	btemp+17,plusw1
 20767  015B12  0EF2               	movlw	-14
 20768  015B14  0060  F04F  FFE3   	movff	btemp+18,plusw1
 20769  015B1A  0EF3               	movlw	-13
 20770  015B1C  0060  F053  FFE3   	movff	btemp+19,plusw1
 20771  015B22  0EF4               	movlw	-12
 20772  015B24  0060  F057  FFE3   	movff	btemp+20,plusw1
 20773  015B2A  0EF5               	movlw	-11
 20774  015B2C  0060  F05B  FFE3   	movff	btemp+21,plusw1
 20775  015B32  0EF6               	movlw	-10
 20776  015B34  0060  F05F  FFE3   	movff	btemp+22,plusw1
 20777  015B3A  0EF7               	movlw	-9
 20778  015B3C  0060  F063  FFE3   	movff	btemp+23,plusw1
 20779  015B42                     l12156:
 20780                           
 20781                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 20782                           ;stkvar	_i @ sp[(-18)+10]
 20783  015B42  0EF9               	movlw	-7
 20784  015B44  BEE3               	btfsc	plusw1,7,c
 20785  015B46  D036               	goto	u11150
 20786  015B48  0EF9               	movlw	-7
 20787  015B4A  50E3               	movf	plusw1,w,c
 20788  015B4C  E104               	bnz	u11110
 20789  015B4E  0EF8               	movlw	-8
 20790  015B50  04E3               	decf	plusw1,w,c
 20791  015B52  A0D8               	btfss	status,0,c
 20792  015B54  D02F               	goto	u11150
 20793  015B56                     u11110:
 20794                           
 20795                           ;stkvar	_n @ sp[(-18)+2]
 20796  015B56  0EF0               	movlw	-16
 20797  015B58  50E3               	movf	plusw1,w,c
 20798  015B5A  E115               	bnz	u11121
 20799  015B5C  0EF1               	movlw	-15
 20800  015B5E  50E3               	movf	plusw1,w,c
 20801  015B60  E112               	bnz	u11121
 20802  015B62  0EF2               	movlw	-14
 20803  015B64  50E3               	movf	plusw1,w,c
 20804  015B66  E10F               	bnz	u11121
 20805  015B68  0EF3               	movlw	-13
 20806  015B6A  50E3               	movf	plusw1,w,c
 20807  015B6C  E10C               	bnz	u11121
 20808  015B6E  0EF4               	movlw	-12
 20809  015B70  50E3               	movf	plusw1,w,c
 20810  015B72  E109               	bnz	u11121
 20811  015B74  0EF5               	movlw	-11
 20812  015B76  50E3               	movf	plusw1,w,c
 20813  015B78  E106               	bnz	u11121
 20814  015B7A  0EF6               	movlw	-10
 20815  015B7C  50E3               	movf	plusw1,w,c
 20816  015B7E  E103               	bnz	u11121
 20817  015B80  0EF7               	movlw	-9
 20818  015B82  50E3               	movf	plusw1,w,c
 20819  015B84  A4D8               	btfss	status,2,c
 20820  015B86                     u11121:
 20821  015B86  D6D4               	goto	l12146
 20822                           
 20823                           ;stkvar	_p @ sp[(-18)+16]
 20824  015B88  0EFF               	movlw	-1
 20825  015B8A  BEE3               	btfsc	plusw1,7,c
 20826  015B8C  D007               	goto	u11130
 20827  015B8E  0EFF               	movlw	-1
 20828  015B90  50E3               	movf	plusw1,w,c
 20829  015B92  E103               	bnz	u11131
 20830  015B94  0EFE               	movlw	-2
 20831  015B96  04E3               	decf	plusw1,w,c
 20832  015B98  B0D8               	btfsc	status,0,c
 20833  015B9A                     u11131:
 20834  015B9A  D6CA               	goto	l12146
 20835  015B9C                     u11130:
 20836                           
 20837                           ;stkvar	_w @ sp[(-18)+14]
 20838  015B9C  0EFD               	movlw	-3
 20839  015B9E  BEE3               	btfsc	plusw1,7,c
 20840  015BA0  D009               	goto	u11150
 20841  015BA2  0EFD               	movlw	-3
 20842  015BA4  50E3               	movf	plusw1,w,c
 20843  015BA6  E104               	bnz	u11140
 20844  015BA8  0EFC               	movlw	-4
 20845  015BAA  04E3               	decf	plusw1,w,c
 20846  015BAC  A0D8               	btfss	status,0,c
 20847  015BAE  D002               	goto	u11150
 20848  015BB0                     u11140:
 20849  015BB0  B23E               	btfsc	_flags^0,1,c
 20850  015BB2  D6BE               	goto	l12146
 20851  015BB4                     u11150:
 20852                           
 20853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 20854                           ;stkvar	_s @ sp[(-18)+12]
 20855  015BB4  0EFA               	movlw	-6
 20856  015BB6  006F FF8C  F001    	movff	plusw1,btemp
 20857  015BBC  0EFB               	movlw	-5
 20858  015BBE  50E3               	movf	plusw1,w,c
 20859  015BC0  1001               	iorwf	btemp^0,w,c
 20860  015BC2  A4D8               	btfss	status,2,c
 20861  015BC4  D002               	goto	u11170
 20862  015BC6  A43E               	btfss	_flags^0,2,c
 20863  015BC8  D033               	goto	l12180
 20864  015BCA                     u11170:
 20865                           
 20866                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 20867                           ;stkvar	_i @ sp[(-18)+10]
 20868  015BCA  50E1               	movf	fsr1l,w,c
 20869  015BCC  0FF8               	addlw	-8
 20870  015BCE  6ED9               	movwf	fsr2l,c
 20871  015BD0  50E2               	movf	fsr1h,w,c
 20872  015BD2  6EDA               	movwf	fsr2h,c
 20873  015BD4  0EFF               	movlw	255
 20874  015BD6  22DA               	addwfc	fsr2h,f,c
 20875  015BD8  06DE               	decf	postinc2,f,c
 20876  015BDA  0E00               	movlw	0
 20877  015BDC  5ADD               	subwfb	postdec2,f,c
 20878                           
 20879                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 20880                           ;stkvar	_s @ sp[(-18)+12]
 20881  015BDE  0EFA               	movlw	-6
 20882  015BE0  006F FF8C  F001    	movff	plusw1,btemp
 20883  015BE6  0EFB               	movlw	-5
 20884  015BE8  50E3               	movf	plusw1,w,c
 20885  015BEA  1001               	iorwf	btemp^0,w,c
 20886  015BEC  A4D8               	btfss	status,2,c
 20887  015BEE  D002               	goto	l12176
 20888  015BF0  0E2B               	movlw	43
 20889  015BF2  D001               	goto	L25
 20890  015BF4                     l12176:
 20891  015BF4  0E2D               	movlw	45
 20892  015BF6                     L25:
 20893  015BF6  6E0B               	movwf	(btemp+10)^0,c
 20894  015BF8  0E00               	movlw	0
 20895  015BFA  6E0C               	movwf	(btemp+11)^0,c
 20896                           
 20897                           ;stkvar	_dtoa$5618 @ sp[(-18)+0]
 20898  015BFC  0EEE               	movlw	-18
 20899  015BFE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20900  015C04  0EEF               	movlw	-17
 20901  015C06  0060  F033  FFE3   	movff	btemp+11,plusw1
 20902                           
 20903                           ;stkvar	_dtoa$5618 @ sp[(-18)+0]
 20904                           ;stkvar	_i @ sp[(-18)+10]
 20905  015C0C  0EF8               	movlw	-8
 20906  015C0E  006F FF8C  F00B    	movff	plusw1,btemp+10
 20907  015C14  0EF9               	movlw	-7
 20908  015C16  006F FF8C  F00C    	movff	plusw1,btemp+11
 20909  015C1C  0E97               	movlw	low _dbuf
 20910  015C1E  240B               	addwf	(btemp+10)^0,w,c
 20911  015C20  6ED9               	movwf	fsr2l,c
 20912  015C22  0E02               	movlw	high _dbuf
 20913  015C24  200C               	addwfc	(btemp+11)^0,w,c
 20914  015C26  6EDA               	movwf	fsr2h,c
 20915  015C28  0EEE               	movlw	-18
 20916  015C2A  006F FF8F FFDF     	movff	plusw1,indf2
 20917  015C30                     l12180:
 20918                           
 20919                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 20920                           ;stkvar	_w @ sp[(-18)+14]
 20921  015C30  0EFC               	movlw	-4
 20922  015C32  006F FF8F FFE6     	movff	plusw1,postinc1
 20923  015C38  006F FF8F FFE6     	movff	plusw1,postinc1
 20924                           
 20925                           ;stkvar	_i @ sp[(-20)+10]
 20926  015C3E  0E97               	movlw	low _dbuf
 20927  015C40  6E0B               	movwf	(btemp+10)^0,c
 20928  015C42  0E02               	movlw	high _dbuf
 20929  015C44  6E0C               	movwf	(btemp+11)^0,c
 20930  015C46  0EF6               	movlw	-10
 20931  015C48  50E3               	movf	plusw1,w,c
 20932  015C4A  260B               	addwf	(btemp+10)^0,f,c
 20933  015C4C  0EF7               	movlw	-9
 20934  015C4E  50E3               	movf	plusw1,w,c
 20935  015C50  220C               	addwfc	(btemp+11)^0,f,c
 20936  015C52  0060  F02F  FFE6   	movff	btemp+10,postinc1
 20937  015C58  0060  F033  FFE6   	movff	btemp+11,postinc1
 20938                           
 20939                           ;stkvar	_fp @ sp[(-22)+-2]
 20940  015C5E  0EE8               	movlw	-24
 20941  015C60  006F FF8F FFE6     	movff	plusw1,postinc1
 20942  015C66  006F FF8F FFE6     	movff	plusw1,postinc1
 20943  015C6C  ECE2  F0CD         	call	_pad	;wreg free
 20944                           
 20945                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 20946  015C70  0EE4               	movlw	228
 20947  015C72  26E1               	addwf	fsr1l,f,c
 20948  015C74  0EFF               	movlw	255
 20949  015C76  22E2               	addwfc	fsr1h,f,c
 20950  015C78  0012               	return		;funcret
 20951  015C7A                     __end_of_dtoa:
 20952                           	opt callstack 0
 20953                           
 20954 ;; *************** function _abs *****************
 20955 ;; Defined at:
 20956 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 20957 ;; Parameters:    Size  Location     Type
 20958 ;;  a               2  [STACK] int 
 20959 ;; Auto vars:     Size  Location     Type
 20960 ;;		None
 20961 ;; Return value:  Size  Location     Type
 20962 ;;                  2  [STACK] int 
 20963 ;; Registers used:
 20964 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 20965 ;; Tracked objects:
 20966 ;;		On entry : 0/2
 20967 ;;		On exit  : 0/0
 20968 ;;		Unchanged: 0/0
 20969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20974 ;;Total ram usage:        0 bytes
 20975 ;; Hardware stack levels used:    1
 20976 ;; Hardware stack levels required when called:   15
 20977 ;; This function calls:
 20978 ;;		Nothing
 20979 ;; This function is called by:
 20980 ;;		_dtoa
 20981 ;; This function uses a reentrant model
 20982 ;;
 20983                           
 20984                           	psect	text71
 20985  01B826                     __ptext71:
 20986                           	opt callstack 0
 20987  01B826                     _abs:
 20988                           	opt callstack 0
 20989                           
 20990                           ;stkvar	_a @ sp[(0)+-2]
 20991                           
 20992                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20993                           ;incstack = 0
 20994 ;; hardware stack exceeded
 20995  01B826  0EFF               	movlw	-1
 20996  01B828  BEE3               	btfsc	plusw1,7,c
 20997  01B82A  D007               	goto	u6050
 20998  01B82C  0EFF               	movlw	-1
 20999  01B82E  50E3               	movf	plusw1,w,c
 21000  01B830  E112               	bnz	l8130
 21001  01B832  0EFE               	movlw	-2
 21002  01B834  04E3               	decf	plusw1,w,c
 21003  01B836  B0D8               	btfsc	status,0,c
 21004  01B838  D00E               	goto	l8130
 21005  01B83A                     u6050:
 21006                           
 21007                           ;stkvar	_a @ sp[(0)+-2]
 21008  01B83A  0EFE               	movlw	-2
 21009  01B83C  006F FF8C  F001    	movff	plusw1,btemp
 21010  01B842  1E01               	comf	btemp^0,f,c
 21011  01B844  0EFF               	movlw	-1
 21012  01B846  006F FF8C  F002    	movff	plusw1,btemp+1
 21013  01B84C  1E02               	comf	(btemp+1)^0,f,c
 21014  01B84E  2A01               	incf	btemp^0,f,c
 21015  01B850  B4D8               	btfsc	status,2,c
 21016  01B852  2A02               	incf	(btemp+1)^0,f,c
 21017  01B854  D008               	goto	l3144
 21018  01B856                     l8130:
 21019                           
 21020                           ;stkvar	_a @ sp[(0)+-2]
 21021  01B856  0EFE               	movlw	-2
 21022  01B858  006F FF8C  F001    	movff	plusw1,btemp
 21023  01B85E  0EFF               	movlw	-1
 21024  01B860  006F FF8C  F002    	movff	plusw1,btemp+1
 21025  01B866                     l3144:
 21026                           
 21027                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 21028  01B866  52E5               	movf	postdec1,f,c
 21029  01B868  52E5               	movf	postdec1,f,c
 21030  01B86A  0012               	return		;funcret
 21031  01B86C                     __end_of_abs:
 21032                           	opt callstack 0
 21033                           
 21034 ;; *************** function ___aomod *****************
 21035 ;; Defined at:
 21036 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 21037 ;; Parameters:    Size  Location     Type
 21038 ;;  dividend        8  [STACK] long long 
 21039 ;;  divisor         8  [STACK] long long 
 21040 ;; Auto vars:     Size  Location     Type
 21041 ;;  sign            1  [STACK] unsigned char 
 21042 ;;  counter         1  [STACK] unsigned char 
 21043 ;; Return value:  Size  Location     Type
 21044 ;;                  8  [STACK] long long 
 21045 ;; Registers used:
 21046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 21047 ;; Tracked objects:
 21048 ;;		On entry : 0/2
 21049 ;;		On exit  : 0/0
 21050 ;;		Unchanged: 0/0
 21051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21056 ;;Total ram usage:        0 bytes
 21057 ;; Hardware stack levels used:    1
 21058 ;; Hardware stack levels required when called:   15
 21059 ;; This function calls:
 21060 ;;		Nothing
 21061 ;; This function is called by:
 21062 ;;		_dtoa
 21063 ;; This function uses a reentrant model
 21064 ;;
 21065                           
 21066                           	psect	text72
 21067  017E14                     __ptext72:
 21068                           	opt callstack 0
 21069  017E14                     ___aomod:
 21070                           	opt callstack 0
 21071                           
 21072                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 21073  017E14  52E6               	movf	postinc1,f,c
 21074  017E16  52E6               	movf	postinc1,f,c
 21075                           
 21076                           ;stkvar	_sign @ sp[(-2)+0]
 21077                           
 21078                           ;incstack = 0
 21079 ;; hardware stack exceeded
 21080  017E18  0EFE               	movlw	-2
 21081  017E1A  6AE3               	clrf	plusw1,c
 21082                           
 21083                           ;stkvar	_dividend @ sp[(-2)+-8]
 21084  017E1C  0EFD               	movlw	-3
 21085  017E1E  AEE3               	btfss	plusw1,7,c
 21086  017E20  D028               	goto	l8288
 21087                           
 21088                           ;stkvar	_dividend @ sp[(-2)+-8]
 21089                           ;stkvar	_dividend @ sp[(-2)+-8]
 21090  017E22  0EF6               	movlw	-10
 21091  017E24  6CE3               	negf	plusw1,c
 21092  017E26  0EF7               	movlw	-9
 21093  017E28  1EE3               	comf	plusw1,f,c
 21094  017E2A  0EF8               	movlw	-8
 21095  017E2C  1EE3               	comf	plusw1,f,c
 21096  017E2E  0EF9               	movlw	-7
 21097  017E30  1EE3               	comf	plusw1,f,c
 21098  017E32  0EFA               	movlw	-6
 21099  017E34  1EE3               	comf	plusw1,f,c
 21100  017E36  0EFB               	movlw	-5
 21101  017E38  1EE3               	comf	plusw1,f,c
 21102  017E3A  0EFC               	movlw	-4
 21103  017E3C  1EE3               	comf	plusw1,f,c
 21104  017E3E  0EFD               	movlw	-3
 21105  017E40  1EE3               	comf	plusw1,f,c
 21106  017E42  E314               	bnc	u6480
 21107  017E44  0EF7               	movlw	-9
 21108  017E46  2AE3               	incf	plusw1,f,c
 21109  017E48  E311               	bnc	u6480
 21110  017E4A  0EF8               	movlw	-8
 21111  017E4C  2AE3               	incf	plusw1,f,c
 21112  017E4E  E30E               	bnc	u6480
 21113  017E50  0EF9               	movlw	-7
 21114  017E52  2AE3               	incf	plusw1,f,c
 21115  017E54  E30B               	bnc	u6480
 21116  017E56  0EFA               	movlw	-6
 21117  017E58  2AE3               	incf	plusw1,f,c
 21118  017E5A  E308               	bnc	u6480
 21119  017E5C  0EFB               	movlw	-5
 21120  017E5E  2AE3               	incf	plusw1,f,c
 21121  017E60  E305               	bnc	u6480
 21122  017E62  0EFC               	movlw	-4
 21123  017E64  2AE3               	incf	plusw1,f,c
 21124  017E66  E302               	bnc	u6480
 21125  017E68  0EFD               	movlw	-3
 21126  017E6A  2AE3               	incf	plusw1,f,c
 21127  017E6C                     u6480:
 21128                           
 21129                           ;stkvar	_sign @ sp[(-2)+0]
 21130  017E6C  0EFE               	movlw	-2
 21131  017E6E  6AE3               	clrf	plusw1,c
 21132  017E70  2AE3               	incf	plusw1,f,c
 21133  017E72                     l8288:
 21134                           
 21135                           ;stkvar	_divisor @ sp[(-2)+-16]
 21136  017E72  0EF5               	movlw	-11
 21137  017E74  AEE3               	btfss	plusw1,7,c
 21138  017E76  D025               	goto	u6500
 21139                           
 21140                           ;stkvar	_divisor @ sp[(-2)+-16]
 21141                           ;stkvar	_divisor @ sp[(-2)+-16]
 21142  017E78  0EEE               	movlw	-18
 21143  017E7A  6CE3               	negf	plusw1,c
 21144  017E7C  0EEF               	movlw	-17
 21145  017E7E  1EE3               	comf	plusw1,f,c
 21146  017E80  0EF0               	movlw	-16
 21147  017E82  1EE3               	comf	plusw1,f,c
 21148  017E84  0EF1               	movlw	-15
 21149  017E86  1EE3               	comf	plusw1,f,c
 21150  017E88  0EF2               	movlw	-14
 21151  017E8A  1EE3               	comf	plusw1,f,c
 21152  017E8C  0EF3               	movlw	-13
 21153  017E8E  1EE3               	comf	plusw1,f,c
 21154  017E90  0EF4               	movlw	-12
 21155  017E92  1EE3               	comf	plusw1,f,c
 21156  017E94  0EF5               	movlw	-11
 21157  017E96  1EE3               	comf	plusw1,f,c
 21158  017E98  E314               	bnc	u6500
 21159  017E9A  0EEF               	movlw	-17
 21160  017E9C  2AE3               	incf	plusw1,f,c
 21161  017E9E  E311               	bnc	u6500
 21162  017EA0  0EF0               	movlw	-16
 21163  017EA2  2AE3               	incf	plusw1,f,c
 21164  017EA4  E30E               	bnc	u6500
 21165  017EA6  0EF1               	movlw	-15
 21166  017EA8  2AE3               	incf	plusw1,f,c
 21167  017EAA  E30B               	bnc	u6500
 21168  017EAC  0EF2               	movlw	-14
 21169  017EAE  2AE3               	incf	plusw1,f,c
 21170  017EB0  E308               	bnc	u6500
 21171  017EB2  0EF3               	movlw	-13
 21172  017EB4  2AE3               	incf	plusw1,f,c
 21173  017EB6  E305               	bnc	u6500
 21174  017EB8  0EF4               	movlw	-12
 21175  017EBA  2AE3               	incf	plusw1,f,c
 21176  017EBC  E302               	bnc	u6500
 21177  017EBE  0EF5               	movlw	-11
 21178  017EC0  2AE3               	incf	plusw1,f,c
 21179  017EC2                     u6500:
 21180                           
 21181                           ;stkvar	_divisor @ sp[(-2)+-16]
 21182  017EC2  0EEE               	movlw	-18
 21183  017EC4  50E3               	movf	plusw1,w,c
 21184  017EC6  E116               	bnz	u6510
 21185  017EC8  0EEF               	movlw	-17
 21186  017ECA  50E3               	movf	plusw1,w,c
 21187  017ECC  E113               	bnz	u6510
 21188  017ECE  0EF0               	movlw	-16
 21189  017ED0  50E3               	movf	plusw1,w,c
 21190  017ED2  E110               	bnz	u6510
 21191  017ED4  0EF1               	movlw	-15
 21192  017ED6  50E3               	movf	plusw1,w,c
 21193  017ED8  E10D               	bnz	u6510
 21194  017EDA  0EF2               	movlw	-14
 21195  017EDC  50E3               	movf	plusw1,w,c
 21196  017EDE  E10A               	bnz	u6510
 21197  017EE0  0EF3               	movlw	-13
 21198  017EE2  50E3               	movf	plusw1,w,c
 21199  017EE4  E107               	bnz	u6510
 21200  017EE6  0EF4               	movlw	-12
 21201  017EE8  50E3               	movf	plusw1,w,c
 21202  017EEA  E104               	bnz	u6510
 21203  017EEC  0EF5               	movlw	-11
 21204  017EEE  50E3               	movf	plusw1,w,c
 21205  017EF0  B4D8               	btfsc	status,2,c
 21206  017EF2  D075               	goto	u6540
 21207  017EF4                     u6510:
 21208                           
 21209                           ;stkvar	_counter @ sp[(-2)+1]
 21210  017EF4  0EFF               	movlw	-1
 21211  017EF6  6AE3               	clrf	plusw1,c
 21212  017EF8  D012               	goto	L26
 21213  017EFA                     l8296:
 21214                           
 21215                           ;stkvar	_divisor @ sp[(-2)+-16]
 21216  017EFA  90D8               	bcf	status,0,c
 21217  017EFC  0EEE               	movlw	-18
 21218  017EFE  36E3               	rlcf	plusw1,f,c
 21219  017F00  0EEF               	movlw	-17
 21220  017F02  36E3               	rlcf	plusw1,f,c
 21221  017F04  0EF0               	movlw	-16
 21222  017F06  36E3               	rlcf	plusw1,f,c
 21223  017F08  0EF1               	movlw	-15
 21224  017F0A  36E3               	rlcf	plusw1,f,c
 21225  017F0C  0EF2               	movlw	-14
 21226  017F0E  36E3               	rlcf	plusw1,f,c
 21227  017F10  0EF3               	movlw	-13
 21228  017F12  36E3               	rlcf	plusw1,f,c
 21229  017F14  0EF4               	movlw	-12
 21230  017F16  36E3               	rlcf	plusw1,f,c
 21231  017F18  0EF5               	movlw	-11
 21232  017F1A  36E3               	rlcf	plusw1,f,c
 21233                           
 21234                           ;stkvar	_counter @ sp[(-2)+1]
 21235  017F1C  0EFF               	movlw	-1
 21236  017F1E                     L26:
 21237  017F1E  2AE3               	incf	plusw1,f,c
 21238                           
 21239                           ;stkvar	_divisor @ sp[(-2)+-16]
 21240  017F20  0EF5               	movlw	-11
 21241  017F22  AEE3               	btfss	plusw1,7,c
 21242  017F24  D7EA               	goto	l8296
 21243  017F26                     u6520:
 21244                           
 21245                           ;stkvar	_divisor @ sp[(-2)+-16]
 21246                           ;stkvar	_dividend @ sp[(-2)+-8]
 21247  017F26  50E1               	movf	fsr1l,w,c
 21248  017F28  0FF6               	addlw	-10
 21249  017F2A  6ED9               	movwf	fsr2l,c
 21250  017F2C  50E2               	movf	fsr1h,w,c
 21251  017F2E  6EDA               	movwf	fsr2h,c
 21252  017F30  0EFF               	movlw	255
 21253  017F32  22DA               	addwfc	fsr2h,f,c
 21254  017F34  0EEE               	movlw	-18
 21255  017F36  50E3               	movf	plusw1,w,c
 21256  017F38  5CDE               	subwf	postinc2,w,c
 21257  017F3A  0EEF               	movlw	-17
 21258  017F3C  50E3               	movf	plusw1,w,c
 21259  017F3E  58DE               	subwfb	postinc2,w,c
 21260  017F40  0EF0               	movlw	-16
 21261  017F42  50E3               	movf	plusw1,w,c
 21262  017F44  58DE               	subwfb	postinc2,w,c
 21263  017F46  0EF1               	movlw	-15
 21264  017F48  50E3               	movf	plusw1,w,c
 21265  017F4A  58DE               	subwfb	postinc2,w,c
 21266  017F4C  0EF2               	movlw	-14
 21267  017F4E  50E3               	movf	plusw1,w,c
 21268  017F50  58DE               	subwfb	postinc2,w,c
 21269  017F52  0EF3               	movlw	-13
 21270  017F54  50E3               	movf	plusw1,w,c
 21271  017F56  58DE               	subwfb	postinc2,w,c
 21272  017F58  0EF4               	movlw	-12
 21273  017F5A  50E3               	movf	plusw1,w,c
 21274  017F5C  58DE               	subwfb	postinc2,w,c
 21275  017F5E  0EF5               	movlw	-11
 21276  017F60  50E3               	movf	plusw1,w,c
 21277  017F62  58DE               	subwfb	postinc2,w,c
 21278  017F64  A0D8               	btfss	status,0,c
 21279  017F66  D01F               	goto	l8304
 21280                           
 21281                           ;stkvar	_divisor @ sp[(-2)+-16]
 21282                           ;stkvar	_dividend @ sp[(-2)+-8]
 21283  017F68  50E1               	movf	fsr1l,w,c
 21284  017F6A  0FF6               	addlw	-10
 21285  017F6C  6ED9               	movwf	fsr2l,c
 21286  017F6E  50E2               	movf	fsr1h,w,c
 21287  017F70  6EDA               	movwf	fsr2h,c
 21288  017F72  0EFF               	movlw	255
 21289  017F74  22DA               	addwfc	fsr2h,f,c
 21290  017F76  0EEE               	movlw	-18
 21291  017F78  50E3               	movf	plusw1,w,c
 21292  017F7A  5EDE               	subwf	postinc2,f,c
 21293  017F7C  0EEF               	movlw	-17
 21294  017F7E  50E3               	movf	plusw1,w,c
 21295  017F80  5ADE               	subwfb	postinc2,f,c
 21296  017F82  0EF0               	movlw	-16
 21297  017F84  50E3               	movf	plusw1,w,c
 21298  017F86  5ADE               	subwfb	postinc2,f,c
 21299  017F88  0EF1               	movlw	-15
 21300  017F8A  50E3               	movf	plusw1,w,c
 21301  017F8C  5ADE               	subwfb	postinc2,f,c
 21302  017F8E  0EF2               	movlw	-14
 21303  017F90  50E3               	movf	plusw1,w,c
 21304  017F92  5ADE               	subwfb	postinc2,f,c
 21305  017F94  0EF3               	movlw	-13
 21306  017F96  50E3               	movf	plusw1,w,c
 21307  017F98  5ADE               	subwfb	postinc2,f,c
 21308  017F9A  0EF4               	movlw	-12
 21309  017F9C  50E3               	movf	plusw1,w,c
 21310  017F9E  5ADE               	subwfb	postinc2,f,c
 21311  017FA0  0EF5               	movlw	-11
 21312  017FA2  50E3               	movf	plusw1,w,c
 21313  017FA4  5ADE               	subwfb	postinc2,f,c
 21314  017FA6                     l8304:
 21315                           
 21316                           ;stkvar	_divisor @ sp[(-2)+-16]
 21317  017FA6  90D8               	bcf	status,0,c
 21318  017FA8  0EF5               	movlw	-11
 21319  017FAA  32E3               	rrcf	plusw1,f,c
 21320  017FAC  0EF4               	movlw	-12
 21321  017FAE  32E3               	rrcf	plusw1,f,c
 21322  017FB0  0EF3               	movlw	-13
 21323  017FB2  32E3               	rrcf	plusw1,f,c
 21324  017FB4  0EF2               	movlw	-14
 21325  017FB6  32E3               	rrcf	plusw1,f,c
 21326  017FB8  0EF1               	movlw	-15
 21327  017FBA  32E3               	rrcf	plusw1,f,c
 21328  017FBC  0EF0               	movlw	-16
 21329  017FBE  32E3               	rrcf	plusw1,f,c
 21330  017FC0  0EEF               	movlw	-17
 21331  017FC2  32E3               	rrcf	plusw1,f,c
 21332  017FC4  0EEE               	movlw	-18
 21333  017FC6  32E3               	rrcf	plusw1,f,c
 21334                           
 21335                           ;stkvar	_counter @ sp[(-2)+1]
 21336  017FC8  0EFF               	movlw	-1
 21337  017FCA  50E3               	movf	plusw1,w,c
 21338  017FCC  6E01               	movwf	btemp^0,c
 21339  017FCE  0E01               	movlw	1
 21340  017FD0  5E01               	subwf	btemp^0,f,c
 21341  017FD2  0EFF               	movlw	-1
 21342  017FD4  0060  F007  FFE3   	movff	btemp,plusw1
 21343  017FDA  A4D8               	btfss	status,2,c
 21344  017FDC  D7A4               	goto	u6520
 21345  017FDE                     u6540:
 21346                           
 21347                           ;stkvar	_sign @ sp[(-2)+0]
 21348  017FDE  0EFE               	movlw	-2
 21349  017FE0  50E3               	movf	plusw1,w,c
 21350  017FE2  B4D8               	btfsc	status,2,c
 21351  017FE4  D025               	goto	u6560
 21352                           
 21353                           ;stkvar	_dividend @ sp[(-2)+-8]
 21354                           ;stkvar	_dividend @ sp[(-2)+-8]
 21355  017FE6  0EF6               	movlw	-10
 21356  017FE8  6CE3               	negf	plusw1,c
 21357  017FEA  0EF7               	movlw	-9
 21358  017FEC  1EE3               	comf	plusw1,f,c
 21359  017FEE  0EF8               	movlw	-8
 21360  017FF0  1EE3               	comf	plusw1,f,c
 21361  017FF2  0EF9               	movlw	-7
 21362  017FF4  1EE3               	comf	plusw1,f,c
 21363  017FF6  0EFA               	movlw	-6
 21364  017FF8  1EE3               	comf	plusw1,f,c
 21365  017FFA  0EFB               	movlw	-5
 21366  017FFC  1EE3               	comf	plusw1,f,c
 21367  017FFE  0EFC               	movlw	-4
 21368  018000  1EE3               	comf	plusw1,f,c
 21369  018002  0EFD               	movlw	-3
 21370  018004  1EE3               	comf	plusw1,f,c
 21371  018006  E314               	bnc	u6560
 21372  018008  0EF7               	movlw	-9
 21373  01800A  2AE3               	incf	plusw1,f,c
 21374  01800C  E311               	bnc	u6560
 21375  01800E  0EF8               	movlw	-8
 21376  018010  2AE3               	incf	plusw1,f,c
 21377  018012  E30E               	bnc	u6560
 21378  018014  0EF9               	movlw	-7
 21379  018016  2AE3               	incf	plusw1,f,c
 21380  018018  E30B               	bnc	u6560
 21381  01801A  0EFA               	movlw	-6
 21382  01801C  2AE3               	incf	plusw1,f,c
 21383  01801E  E308               	bnc	u6560
 21384  018020  0EFB               	movlw	-5
 21385  018022  2AE3               	incf	plusw1,f,c
 21386  018024  E305               	bnc	u6560
 21387  018026  0EFC               	movlw	-4
 21388  018028  2AE3               	incf	plusw1,f,c
 21389  01802A  E302               	bnc	u6560
 21390  01802C  0EFD               	movlw	-3
 21391  01802E  2AE3               	incf	plusw1,f,c
 21392  018030                     u6560:
 21393                           
 21394                           ;stkvar	_dividend @ sp[(-2)+-8]
 21395  018030  0EF6               	movlw	246
 21396  018032  24E1               	addwf	fsr1l,w,c
 21397  018034  6ED9               	movwf	fsr2l,c
 21398  018036  0EFF               	movlw	255
 21399  018038  20E2               	addwfc	fsr1h,w,c
 21400  01803A  6EDA               	movwf	fsr2h,c
 21401                           
 21402                           ;stkvar	?___aomod @ sp[(-2)+-8]
 21403  01803C  0E08               	movlw	8
 21404  01803E  6E01               	movwf	btemp^0,c
 21405  018040  0EF6               	movlw	-10
 21406  018042                     us657999:
 21407  018042  006F FF7B FFE3     	movff	postinc2,plusw1
 21408  018048  28E8               	incf	wreg,w,c
 21409  01804A  2E01               	decfsz	btemp^0,f,c
 21410  01804C  D7FA               	bra	us657999
 21411                           
 21412                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 21413  01804E  52E5               	movf	postdec1,f,c
 21414  018050  52E5               	movf	postdec1,f,c
 21415  018052  0012               	return		;funcret
 21416  018054                     __end_of___aomod:
 21417                           	opt callstack 0
 21418                           
 21419 ;; *************** function ___aodiv *****************
 21420 ;; Defined at:
 21421 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 21422 ;; Parameters:    Size  Location     Type
 21423 ;;  dividend        8  [STACK] long long 
 21424 ;;  divisor         8  [STACK] long long 
 21425 ;; Auto vars:     Size  Location     Type
 21426 ;;  quotient        8  [STACK] long long 
 21427 ;;  sign            1  [STACK] unsigned char 
 21428 ;;  counter         1  [STACK] unsigned char 
 21429 ;; Return value:  Size  Location     Type
 21430 ;;                  8  [STACK] long long 
 21431 ;; Registers used:
 21432 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 21433 ;; Tracked objects:
 21434 ;;		On entry : 0/2
 21435 ;;		On exit  : 0/0
 21436 ;;		Unchanged: 0/0
 21437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21442 ;;Total ram usage:        0 bytes
 21443 ;; Hardware stack levels used:    1
 21444 ;; Hardware stack levels required when called:   15
 21445 ;; This function calls:
 21446 ;;		Nothing
 21447 ;; This function is called by:
 21448 ;;		_dtoa
 21449 ;; This function uses a reentrant model
 21450 ;;
 21451                           
 21452                           	psect	text73
 21453  0176DA                     __ptext73:
 21454                           	opt callstack 0
 21455  0176DA                     ___aodiv:
 21456                           	opt callstack 0
 21457                           
 21458                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 21459  0176DA  0E0A               	movlw	10
 21460  0176DC  26E1               	addwf	fsr1l,f,c
 21461  0176DE  0E00               	movlw	0
 21462  0176E0  22E2               	addwfc	fsr1h,f,c
 21463                           
 21464                           ;stkvar	_sign @ sp[(-10)+8]
 21465                           
 21466                           ;incstack = 0
 21467 ;; hardware stack exceeded
 21468  0176E2  0EFE               	movlw	-2
 21469  0176E4  6AE3               	clrf	plusw1,c
 21470                           
 21471                           ;stkvar	_divisor @ sp[(-10)+-16]
 21472  0176E6  0EED               	movlw	-19
 21473  0176E8  AEE3               	btfss	plusw1,7,c
 21474  0176EA  D028               	goto	l8244
 21475                           
 21476                           ;stkvar	_divisor @ sp[(-10)+-16]
 21477                           ;stkvar	_divisor @ sp[(-10)+-16]
 21478  0176EC  0EE6               	movlw	-26
 21479  0176EE  6CE3               	negf	plusw1,c
 21480  0176F0  0EE7               	movlw	-25
 21481  0176F2  1EE3               	comf	plusw1,f,c
 21482  0176F4  0EE8               	movlw	-24
 21483  0176F6  1EE3               	comf	plusw1,f,c
 21484  0176F8  0EE9               	movlw	-23
 21485  0176FA  1EE3               	comf	plusw1,f,c
 21486  0176FC  0EEA               	movlw	-22
 21487  0176FE  1EE3               	comf	plusw1,f,c
 21488  017700  0EEB               	movlw	-21
 21489  017702  1EE3               	comf	plusw1,f,c
 21490  017704  0EEC               	movlw	-20
 21491  017706  1EE3               	comf	plusw1,f,c
 21492  017708  0EED               	movlw	-19
 21493  01770A  1EE3               	comf	plusw1,f,c
 21494  01770C  E314               	bnc	u6360
 21495  01770E  0EE7               	movlw	-25
 21496  017710  2AE3               	incf	plusw1,f,c
 21497  017712  E311               	bnc	u6360
 21498  017714  0EE8               	movlw	-24
 21499  017716  2AE3               	incf	plusw1,f,c
 21500  017718  E30E               	bnc	u6360
 21501  01771A  0EE9               	movlw	-23
 21502  01771C  2AE3               	incf	plusw1,f,c
 21503  01771E  E30B               	bnc	u6360
 21504  017720  0EEA               	movlw	-22
 21505  017722  2AE3               	incf	plusw1,f,c
 21506  017724  E308               	bnc	u6360
 21507  017726  0EEB               	movlw	-21
 21508  017728  2AE3               	incf	plusw1,f,c
 21509  01772A  E305               	bnc	u6360
 21510  01772C  0EEC               	movlw	-20
 21511  01772E  2AE3               	incf	plusw1,f,c
 21512  017730  E302               	bnc	u6360
 21513  017732  0EED               	movlw	-19
 21514  017734  2AE3               	incf	plusw1,f,c
 21515  017736                     u6360:
 21516                           
 21517                           ;stkvar	_sign @ sp[(-10)+8]
 21518  017736  0EFE               	movlw	-2
 21519  017738  6AE3               	clrf	plusw1,c
 21520  01773A  2AE3               	incf	plusw1,f,c
 21521  01773C                     l8244:
 21522                           
 21523                           ;stkvar	_dividend @ sp[(-10)+-8]
 21524  01773C  0EF5               	movlw	-11
 21525  01773E  AEE3               	btfss	plusw1,7,c
 21526  017740  D027               	goto	l8250
 21527                           
 21528                           ;stkvar	_dividend @ sp[(-10)+-8]
 21529                           ;stkvar	_dividend @ sp[(-10)+-8]
 21530  017742  0EEE               	movlw	-18
 21531  017744  6CE3               	negf	plusw1,c
 21532  017746  0EEF               	movlw	-17
 21533  017748  1EE3               	comf	plusw1,f,c
 21534  01774A  0EF0               	movlw	-16
 21535  01774C  1EE3               	comf	plusw1,f,c
 21536  01774E  0EF1               	movlw	-15
 21537  017750  1EE3               	comf	plusw1,f,c
 21538  017752  0EF2               	movlw	-14
 21539  017754  1EE3               	comf	plusw1,f,c
 21540  017756  0EF3               	movlw	-13
 21541  017758  1EE3               	comf	plusw1,f,c
 21542  01775A  0EF4               	movlw	-12
 21543  01775C  1EE3               	comf	plusw1,f,c
 21544  01775E  0EF5               	movlw	-11
 21545  017760  1EE3               	comf	plusw1,f,c
 21546  017762  E314               	bnc	u6380
 21547  017764  0EEF               	movlw	-17
 21548  017766  2AE3               	incf	plusw1,f,c
 21549  017768  E311               	bnc	u6380
 21550  01776A  0EF0               	movlw	-16
 21551  01776C  2AE3               	incf	plusw1,f,c
 21552  01776E  E30E               	bnc	u6380
 21553  017770  0EF1               	movlw	-15
 21554  017772  2AE3               	incf	plusw1,f,c
 21555  017774  E30B               	bnc	u6380
 21556  017776  0EF2               	movlw	-14
 21557  017778  2AE3               	incf	plusw1,f,c
 21558  01777A  E308               	bnc	u6380
 21559  01777C  0EF3               	movlw	-13
 21560  01777E  2AE3               	incf	plusw1,f,c
 21561  017780  E305               	bnc	u6380
 21562  017782  0EF4               	movlw	-12
 21563  017784  2AE3               	incf	plusw1,f,c
 21564  017786  E302               	bnc	u6380
 21565  017788  0EF5               	movlw	-11
 21566  01778A  2AE3               	incf	plusw1,f,c
 21567  01778C                     u6380:
 21568                           
 21569                           ;stkvar	_sign @ sp[(-10)+8]
 21570  01778C  0EFE               	movlw	-2
 21571  01778E  70E3               	btg	plusw1,0,c
 21572  017790                     l8250:
 21573                           
 21574                           ;stkvar	_quotient @ sp[(-10)+0]
 21575  017790  0E07               	movlw	7
 21576  017792  6E01               	movwf	btemp^0,c
 21577  017794  0EF6               	movlw	-10
 21578  017796                     u6391:
 21579  017796  6AE3               	clrf	plusw1,c
 21580  017798  2AE8               	incf	wreg,f,c
 21581  01779A  0601               	decf	btemp^0,f,c
 21582  01779C  E2FC               	bc	u6391
 21583                           
 21584                           ;stkvar	_divisor @ sp[(-10)+-16]
 21585  01779E  0EE6               	movlw	-26
 21586  0177A0  50E3               	movf	plusw1,w,c
 21587  0177A2  E116               	bnz	u6400
 21588  0177A4  0EE7               	movlw	-25
 21589  0177A6  50E3               	movf	plusw1,w,c
 21590  0177A8  E113               	bnz	u6400
 21591  0177AA  0EE8               	movlw	-24
 21592  0177AC  50E3               	movf	plusw1,w,c
 21593  0177AE  E110               	bnz	u6400
 21594  0177B0  0EE9               	movlw	-23
 21595  0177B2  50E3               	movf	plusw1,w,c
 21596  0177B4  E10D               	bnz	u6400
 21597  0177B6  0EEA               	movlw	-22
 21598  0177B8  50E3               	movf	plusw1,w,c
 21599  0177BA  E10A               	bnz	u6400
 21600  0177BC  0EEB               	movlw	-21
 21601  0177BE  50E3               	movf	plusw1,w,c
 21602  0177C0  E107               	bnz	u6400
 21603  0177C2  0EEC               	movlw	-20
 21604  0177C4  50E3               	movf	plusw1,w,c
 21605  0177C6  E104               	bnz	u6400
 21606  0177C8  0EED               	movlw	-19
 21607  0177CA  50E3               	movf	plusw1,w,c
 21608  0177CC  B4D8               	btfsc	status,2,c
 21609  0177CE  D088               	goto	u6430
 21610  0177D0                     u6400:
 21611                           
 21612                           ;stkvar	_counter @ sp[(-10)+9]
 21613  0177D0  0EFF               	movlw	-1
 21614  0177D2  6AE3               	clrf	plusw1,c
 21615  0177D4  D012               	goto	L27
 21616  0177D6                     l8256:
 21617                           
 21618                           ;stkvar	_divisor @ sp[(-10)+-16]
 21619  0177D6  90D8               	bcf	status,0,c
 21620  0177D8  0EE6               	movlw	-26
 21621  0177DA  36E3               	rlcf	plusw1,f,c
 21622  0177DC  0EE7               	movlw	-25
 21623  0177DE  36E3               	rlcf	plusw1,f,c
 21624  0177E0  0EE8               	movlw	-24
 21625  0177E2  36E3               	rlcf	plusw1,f,c
 21626  0177E4  0EE9               	movlw	-23
 21627  0177E6  36E3               	rlcf	plusw1,f,c
 21628  0177E8  0EEA               	movlw	-22
 21629  0177EA  36E3               	rlcf	plusw1,f,c
 21630  0177EC  0EEB               	movlw	-21
 21631  0177EE  36E3               	rlcf	plusw1,f,c
 21632  0177F0  0EEC               	movlw	-20
 21633  0177F2  36E3               	rlcf	plusw1,f,c
 21634  0177F4  0EED               	movlw	-19
 21635  0177F6  36E3               	rlcf	plusw1,f,c
 21636                           
 21637                           ;stkvar	_counter @ sp[(-10)+9]
 21638  0177F8  0EFF               	movlw	-1
 21639  0177FA                     L27:
 21640  0177FA  2AE3               	incf	plusw1,f,c
 21641                           
 21642                           ;stkvar	_divisor @ sp[(-10)+-16]
 21643  0177FC  0EED               	movlw	-19
 21644  0177FE  AEE3               	btfss	plusw1,7,c
 21645  017800  D7EA               	goto	l8256
 21646  017802                     u6410:
 21647                           
 21648                           ;stkvar	_quotient @ sp[(-10)+0]
 21649  017802  90D8               	bcf	status,0,c
 21650  017804  0EF6               	movlw	-10
 21651  017806  36E3               	rlcf	plusw1,f,c
 21652  017808  0EF7               	movlw	-9
 21653  01780A  36E3               	rlcf	plusw1,f,c
 21654  01780C  0EF8               	movlw	-8
 21655  01780E  36E3               	rlcf	plusw1,f,c
 21656  017810  0EF9               	movlw	-7
 21657  017812  36E3               	rlcf	plusw1,f,c
 21658  017814  0EFA               	movlw	-6
 21659  017816  36E3               	rlcf	plusw1,f,c
 21660  017818  0EFB               	movlw	-5
 21661  01781A  36E3               	rlcf	plusw1,f,c
 21662  01781C  0EFC               	movlw	-4
 21663  01781E  36E3               	rlcf	plusw1,f,c
 21664  017820  0EFD               	movlw	-3
 21665  017822  36E3               	rlcf	plusw1,f,c
 21666                           
 21667                           ;stkvar	_divisor @ sp[(-10)+-16]
 21668                           ;stkvar	_dividend @ sp[(-10)+-8]
 21669  017824  50E1               	movf	fsr1l,w,c
 21670  017826  0FEE               	addlw	-18
 21671  017828  6ED9               	movwf	fsr2l,c
 21672  01782A  50E2               	movf	fsr1h,w,c
 21673  01782C  6EDA               	movwf	fsr2h,c
 21674  01782E  0EFF               	movlw	255
 21675  017830  22DA               	addwfc	fsr2h,f,c
 21676  017832  0EE6               	movlw	-26
 21677  017834  50E3               	movf	plusw1,w,c
 21678  017836  5CDE               	subwf	postinc2,w,c
 21679  017838  0EE7               	movlw	-25
 21680  01783A  50E3               	movf	plusw1,w,c
 21681  01783C  58DE               	subwfb	postinc2,w,c
 21682  01783E  0EE8               	movlw	-24
 21683  017840  50E3               	movf	plusw1,w,c
 21684  017842  58DE               	subwfb	postinc2,w,c
 21685  017844  0EE9               	movlw	-23
 21686  017846  50E3               	movf	plusw1,w,c
 21687  017848  58DE               	subwfb	postinc2,w,c
 21688  01784A  0EEA               	movlw	-22
 21689  01784C  50E3               	movf	plusw1,w,c
 21690  01784E  58DE               	subwfb	postinc2,w,c
 21691  017850  0EEB               	movlw	-21
 21692  017852  50E3               	movf	plusw1,w,c
 21693  017854  58DE               	subwfb	postinc2,w,c
 21694  017856  0EEC               	movlw	-20
 21695  017858  50E3               	movf	plusw1,w,c
 21696  01785A  58DE               	subwfb	postinc2,w,c
 21697  01785C  0EED               	movlw	-19
 21698  01785E  50E3               	movf	plusw1,w,c
 21699  017860  58DE               	subwfb	postinc2,w,c
 21700  017862  A0D8               	btfss	status,0,c
 21701  017864  D021               	goto	l8268
 21702                           
 21703                           ;stkvar	_divisor @ sp[(-10)+-16]
 21704                           ;stkvar	_dividend @ sp[(-10)+-8]
 21705  017866  50E1               	movf	fsr1l,w,c
 21706  017868  0FEE               	addlw	-18
 21707  01786A  6ED9               	movwf	fsr2l,c
 21708  01786C  50E2               	movf	fsr1h,w,c
 21709  01786E  6EDA               	movwf	fsr2h,c
 21710  017870  0EFF               	movlw	255
 21711  017872  22DA               	addwfc	fsr2h,f,c
 21712  017874  0EE6               	movlw	-26
 21713  017876  50E3               	movf	plusw1,w,c
 21714  017878  5EDE               	subwf	postinc2,f,c
 21715  01787A  0EE7               	movlw	-25
 21716  01787C  50E3               	movf	plusw1,w,c
 21717  01787E  5ADE               	subwfb	postinc2,f,c
 21718  017880  0EE8               	movlw	-24
 21719  017882  50E3               	movf	plusw1,w,c
 21720  017884  5ADE               	subwfb	postinc2,f,c
 21721  017886  0EE9               	movlw	-23
 21722  017888  50E3               	movf	plusw1,w,c
 21723  01788A  5ADE               	subwfb	postinc2,f,c
 21724  01788C  0EEA               	movlw	-22
 21725  01788E  50E3               	movf	plusw1,w,c
 21726  017890  5ADE               	subwfb	postinc2,f,c
 21727  017892  0EEB               	movlw	-21
 21728  017894  50E3               	movf	plusw1,w,c
 21729  017896  5ADE               	subwfb	postinc2,f,c
 21730  017898  0EEC               	movlw	-20
 21731  01789A  50E3               	movf	plusw1,w,c
 21732  01789C  5ADE               	subwfb	postinc2,f,c
 21733  01789E  0EED               	movlw	-19
 21734  0178A0  50E3               	movf	plusw1,w,c
 21735  0178A2  5ADE               	subwfb	postinc2,f,c
 21736                           
 21737                           ;stkvar	_quotient @ sp[(-10)+0]
 21738  0178A4  0EF6               	movlw	-10
 21739  0178A6  80E3               	bsf	plusw1,0,c
 21740  0178A8                     l8268:
 21741                           
 21742                           ;stkvar	_divisor @ sp[(-10)+-16]
 21743  0178A8  90D8               	bcf	status,0,c
 21744  0178AA  0EED               	movlw	-19
 21745  0178AC  32E3               	rrcf	plusw1,f,c
 21746  0178AE  0EEC               	movlw	-20
 21747  0178B0  32E3               	rrcf	plusw1,f,c
 21748  0178B2  0EEB               	movlw	-21
 21749  0178B4  32E3               	rrcf	plusw1,f,c
 21750  0178B6  0EEA               	movlw	-22
 21751  0178B8  32E3               	rrcf	plusw1,f,c
 21752  0178BA  0EE9               	movlw	-23
 21753  0178BC  32E3               	rrcf	plusw1,f,c
 21754  0178BE  0EE8               	movlw	-24
 21755  0178C0  32E3               	rrcf	plusw1,f,c
 21756  0178C2  0EE7               	movlw	-25
 21757  0178C4  32E3               	rrcf	plusw1,f,c
 21758  0178C6  0EE6               	movlw	-26
 21759  0178C8  32E3               	rrcf	plusw1,f,c
 21760                           
 21761                           ;stkvar	_counter @ sp[(-10)+9]
 21762  0178CA  0EFF               	movlw	-1
 21763  0178CC  50E3               	movf	plusw1,w,c
 21764  0178CE  6E01               	movwf	btemp^0,c
 21765  0178D0  0E01               	movlw	1
 21766  0178D2  5E01               	subwf	btemp^0,f,c
 21767  0178D4  0EFF               	movlw	-1
 21768  0178D6  0060  F007  FFE3   	movff	btemp,plusw1
 21769  0178DC  A4D8               	btfss	status,2,c
 21770  0178DE  D791               	goto	u6410
 21771  0178E0                     u6430:
 21772                           
 21773                           ;stkvar	_sign @ sp[(-10)+8]
 21774  0178E0  0EFE               	movlw	-2
 21775  0178E2  50E3               	movf	plusw1,w,c
 21776  0178E4  B4D8               	btfsc	status,2,c
 21777  0178E6  D025               	goto	u6450
 21778                           
 21779                           ;stkvar	_quotient @ sp[(-10)+0]
 21780                           ;stkvar	_quotient @ sp[(-10)+0]
 21781  0178E8  0EF6               	movlw	-10
 21782  0178EA  6CE3               	negf	plusw1,c
 21783  0178EC  0EF7               	movlw	-9
 21784  0178EE  1EE3               	comf	plusw1,f,c
 21785  0178F0  0EF8               	movlw	-8
 21786  0178F2  1EE3               	comf	plusw1,f,c
 21787  0178F4  0EF9               	movlw	-7
 21788  0178F6  1EE3               	comf	plusw1,f,c
 21789  0178F8  0EFA               	movlw	-6
 21790  0178FA  1EE3               	comf	plusw1,f,c
 21791  0178FC  0EFB               	movlw	-5
 21792  0178FE  1EE3               	comf	plusw1,f,c
 21793  017900  0EFC               	movlw	-4
 21794  017902  1EE3               	comf	plusw1,f,c
 21795  017904  0EFD               	movlw	-3
 21796  017906  1EE3               	comf	plusw1,f,c
 21797  017908  E314               	bnc	u6450
 21798  01790A  0EF7               	movlw	-9
 21799  01790C  2AE3               	incf	plusw1,f,c
 21800  01790E  E311               	bnc	u6450
 21801  017910  0EF8               	movlw	-8
 21802  017912  2AE3               	incf	plusw1,f,c
 21803  017914  E30E               	bnc	u6450
 21804  017916  0EF9               	movlw	-7
 21805  017918  2AE3               	incf	plusw1,f,c
 21806  01791A  E30B               	bnc	u6450
 21807  01791C  0EFA               	movlw	-6
 21808  01791E  2AE3               	incf	plusw1,f,c
 21809  017920  E308               	bnc	u6450
 21810  017922  0EFB               	movlw	-5
 21811  017924  2AE3               	incf	plusw1,f,c
 21812  017926  E305               	bnc	u6450
 21813  017928  0EFC               	movlw	-4
 21814  01792A  2AE3               	incf	plusw1,f,c
 21815  01792C  E302               	bnc	u6450
 21816  01792E  0EFD               	movlw	-3
 21817  017930  2AE3               	incf	plusw1,f,c
 21818  017932                     u6450:
 21819                           
 21820                           ;stkvar	_quotient @ sp[(-10)+0]
 21821  017932  0EF6               	movlw	246
 21822  017934  24E1               	addwf	fsr1l,w,c
 21823  017936  6ED9               	movwf	fsr2l,c
 21824  017938  0EFF               	movlw	255
 21825  01793A  20E2               	addwfc	fsr1h,w,c
 21826  01793C  6EDA               	movwf	fsr2h,c
 21827                           
 21828                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 21829  01793E  0E08               	movlw	8
 21830  017940  6E01               	movwf	btemp^0,c
 21831  017942  0EEE               	movlw	-18
 21832  017944                     us646999:
 21833  017944  006F FF7B FFE3     	movff	postinc2,plusw1
 21834  01794A  28E8               	incf	wreg,w,c
 21835  01794C  2E01               	decfsz	btemp^0,f,c
 21836  01794E  D7FA               	bra	us646999
 21837                           
 21838                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 21839  017950  0EF6               	movlw	246
 21840  017952  26E1               	addwf	fsr1l,f,c
 21841  017954  0EFF               	movlw	255
 21842  017956  22E2               	addwfc	fsr1h,f,c
 21843  017958  0012               	return		;funcret
 21844  01795A                     __end_of___aodiv:
 21845                           	opt callstack 0
 21846                           
 21847 ;; *************** function _ctoa *****************
 21848 ;; Defined at:
 21849 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 21850 ;; Parameters:    Size  Location     Type
 21851 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21852 ;;		 -> f(6), NULL(0), 
 21853 ;;  c               1  [STACK] unsigned char 
 21854 ;; Auto vars:     Size  Location     Type
 21855 ;;  w               2  [STACK] int 
 21856 ;;  l               2    0        int 
 21857 ;; Return value:  Size  Location     Type
 21858 ;;                  2  [STACK] int 
 21859 ;; Registers used:
 21860 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 21861 ;; Tracked objects:
 21862 ;;		On entry : 0/0
 21863 ;;		On exit  : 0/0
 21864 ;;		Unchanged: 0/0
 21865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21870 ;;Total ram usage:        0 bytes
 21871 ;; Hardware stack levels used:    1
 21872 ;; Hardware stack levels required when called:   20
 21873 ;; This function calls:
 21874 ;;		_pad
 21875 ;; This function is called by:
 21876 ;;		_vfpfcnvrt
 21877 ;; This function uses a reentrant model
 21878 ;;
 21879                           
 21880                           	psect	text74
 21881  01AD92                     __ptext74:
 21882                           	opt callstack 0
 21883  01AD92                     _ctoa:
 21884                           	opt callstack 0
 21885                           
 21886                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21887  01AD92  52E6               	movf	postinc1,f,c
 21888  01AD94  52E6               	movf	postinc1,f,c
 21889                           
 21890                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 21891                           
 21892                           ;incstack = 0
 21893 ;; hardware stack exceeded
 21894  01AD96  503A               	movf	_width^0,w,c
 21895  01AD98  103B               	iorwf	(_width+1)^0,w,c
 21896  01AD9A  A4D8               	btfss	status,2,c
 21897  01AD9C  D009               	goto	l12108
 21898                           
 21899                           ;stkvar	_w @ sp[(-2)+0]
 21900  01AD9E  0EFE               	movlw	-2
 21901  01ADA0  0060  F0EB  FFE3   	movff	_width,plusw1
 21902  01ADA6  0EFF               	movlw	-1
 21903  01ADA8  0060  F0EF  FFE3   	movff	_width+1,plusw1
 21904  01ADAE  D016               	goto	l12110
 21905  01ADB0                     l12108:
 21906  01ADB0  0EFF               	movlw	255
 21907  01ADB2  6E0B               	movwf	(btemp+10)^0,c
 21908  01ADB4  0EFF               	movlw	255
 21909  01ADB6  6E0C               	movwf	(btemp+11)^0,c
 21910  01ADB8  0060  F0E8  F009   	movff	_width,btemp+8
 21911  01ADBE  0060  F0EC  F00A   	movff	_width+1,btemp+9
 21912  01ADC4  500B               	movf	(btemp+10)^0,w,c
 21913  01ADC6  2609               	addwf	(btemp+8)^0,f,c
 21914  01ADC8  500C               	movf	(btemp+11)^0,w,c
 21915  01ADCA  220A               	addwfc	(btemp+9)^0,f,c
 21916                           
 21917                           ;stkvar	_w @ sp[(-2)+0]
 21918  01ADCC  0EFE               	movlw	-2
 21919  01ADCE  0060  F027  FFE3   	movff	btemp+8,plusw1
 21920  01ADD4  0EFF               	movlw	-1
 21921  01ADD6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21922  01ADDC                     l12110:
 21923                           
 21924                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 21925                           ;stkvar	_c @ sp[(-2)+-3]
 21926  01ADDC  0EFB               	movlw	-5
 21927  01ADDE  006F FF8C  F297    	movff	plusw1,_dbuf
 21928                           
 21929                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 21930  01ADE4  0102               	movlb	2	; () banked
 21931  01ADE6  6B98               	clrf	(_dbuf+1)& (0+255),b
 21932                           
 21933                           ; BSR set to: 2
 21934                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 21935                           ;stkvar	_w @ sp[(-2)+0]
 21936  01ADE8  0EFE               	movlw	-2
 21937  01ADEA  006F FF8F FFE6     	movff	plusw1,postinc1
 21938  01ADF0  006F FF8F FFE6     	movff	plusw1,postinc1
 21939  01ADF6  0E97               	movlw	low _dbuf
 21940  01ADF8  6EE6               	movwf	postinc1,c
 21941  01ADFA  0E02               	movlw	high _dbuf
 21942  01ADFC  6EE6               	movwf	postinc1,c
 21943                           
 21944                           ;stkvar	_fp @ sp[(-6)+-2]
 21945  01ADFE  0EF8               	movlw	-8
 21946  01AE00  006F FF8F FFE6     	movff	plusw1,postinc1
 21947  01AE06  006F FF8F FFE6     	movff	plusw1,postinc1
 21948  01AE0C  ECE2  F0CD         	call	_pad	;wreg free
 21949                           
 21950                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 21951  01AE10  0EFB               	movlw	251
 21952  01AE12  26E1               	addwf	fsr1l,f,c
 21953  01AE14  0EFF               	movlw	255
 21954  01AE16  22E2               	addwfc	fsr1h,f,c
 21955  01AE18  0012               	return		;funcret
 21956  01AE1A                     __end_of_ctoa:
 21957                           	opt callstack 0
 21958                           
 21959 ;; *************** function _pad *****************
 21960 ;; Defined at:
 21961 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 21962 ;; Parameters:    Size  Location     Type
 21963 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21964 ;;		 -> f(6), NULL(0), 
 21965 ;;  buf             2  [STACK] PTR unsigned char 
 21966 ;;		 -> dbuf(80), 
 21967 ;;  p               2  [STACK] int 
 21968 ;; Auto vars:     Size  Location     Type
 21969 ;;  w               2  [STACK] int 
 21970 ;;  i               2  [STACK] int 
 21971 ;; Return value:  Size  Location     Type
 21972 ;;                  2  [STACK] int 
 21973 ;; Registers used:
 21974 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 21975 ;; Tracked objects:
 21976 ;;		On entry : 0/2
 21977 ;;		On exit  : 0/0
 21978 ;;		Unchanged: 0/0
 21979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21984 ;;Total ram usage:        0 bytes
 21985 ;; Hardware stack levels used:    1
 21986 ;; Hardware stack levels required when called:   19
 21987 ;; This function calls:
 21988 ;;		_fputc
 21989 ;;		_fputs
 21990 ;;		_strlen
 21991 ;; This function is called by:
 21992 ;;		_ctoa
 21993 ;;		_dtoa
 21994 ;;		_efgtoa
 21995 ;;		_utoa
 21996 ;;		_xtoa
 21997 ;; This function uses a reentrant model
 21998 ;;
 21999                           
 22000                           	psect	text75
 22001  019BC4                     __ptext75:
 22002                           	opt callstack 0
 22003  019BC4                     _pad:
 22004                           	opt callstack 0
 22005                           
 22006                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22007  019BC4  52E6               	movf	postinc1,f,c
 22008  019BC6  52E6               	movf	postinc1,f,c
 22009  019BC8  52E6               	movf	postinc1,f,c
 22010  019BCA  52E6               	movf	postinc1,f,c
 22011                           
 22012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 22013                           
 22014                           ;incstack = 0
 22015 ;; hardware stack exceeded
 22016  019BCC  A03E               	btfss	_flags^0,0,c
 22017  019BCE  D010               	goto	l12070
 22018                           
 22019                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 22020                           ;stkvar	_fp @ sp[(-4)+-2]
 22021  019BD0  0EFA               	movlw	-6
 22022  019BD2  006F FF8F FFE6     	movff	plusw1,postinc1
 22023  019BD8  006F FF8F FFE6     	movff	plusw1,postinc1
 22024                           
 22025                           ;stkvar	_buf @ sp[(-6)+-4]
 22026  019BDE  0EF6               	movlw	-10
 22027  019BE0  006F FF8F FFE6     	movff	plusw1,postinc1
 22028  019BE6  006F FF8F FFE6     	movff	plusw1,postinc1
 22029  019BEC  ECEB  F0D5         	call	_fputs	;wreg free
 22030  019BF0                     l12070:
 22031                           
 22032                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 22033                           ;stkvar	_p @ sp[(-4)+-6]
 22034  019BF0  0EF7               	movlw	-9
 22035  019BF2  BEE3               	btfsc	plusw1,7,c
 22036  019BF4  D011               	goto	l12074
 22037                           
 22038                           ;stkvar	_p @ sp[(-4)+-6]
 22039                           ;stkvar	_w @ sp[(-4)+0]
 22040  019BF6  0EF6               	movlw	-10
 22041  019BF8  006F FF8C  F001    	movff	plusw1,btemp
 22042  019BFE  0EFC               	movlw	-4
 22043  019C00  0060  F007  FFE3   	movff	btemp,plusw1
 22044  019C06  0EF7               	movlw	-9
 22045  019C08  006F FF8C  F001    	movff	plusw1,btemp
 22046  019C0E  0EFD               	movlw	-3
 22047  019C10  0060  F007  FFE3   	movff	btemp,plusw1
 22048  019C16  D004               	goto	l2198
 22049  019C18                     l12074:
 22050                           
 22051                           ;stkvar	_w @ sp[(-4)+0]
 22052  019C18  0EFC               	movlw	-4
 22053  019C1A  6AE3               	clrf	plusw1,c
 22054  019C1C  0EFD               	movlw	-3
 22055  019C1E  6AE3               	clrf	plusw1,c
 22056  019C20                     l2198:
 22057                           
 22058                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 22059                           ;stkvar	_i @ sp[(-4)+2]
 22060  019C20  0EFE               	movlw	-2
 22061  019C22  6AE3               	clrf	plusw1,c
 22062  019C24  0EFF               	movlw	-1
 22063  019C26  6AE3               	clrf	plusw1,c
 22064                           
 22065                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 22066  019C28  D01E               	goto	l12080
 22067  019C2A                     l12076:
 22068                           
 22069                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 22070                           ;stkvar	_fp @ sp[(-4)+-2]
 22071  019C2A  0EFA               	movlw	-6
 22072  019C2C  006F FF8F FFE6     	movff	plusw1,postinc1
 22073  019C32  006F FF8F FFE6     	movff	plusw1,postinc1
 22074  019C38  0E20               	movlw	32
 22075  019C3A  6EE6               	movwf	postinc1,c
 22076  019C3C  0E00               	movlw	0
 22077  019C3E  6EE6               	movwf	postinc1,c
 22078  019C40  ECC4  F0CC         	call	_fputc	;wreg free
 22079                           
 22080                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 22081                           ;stkvar	_i @ sp[(-4)+2]
 22082  019C44  0EFE               	movlw	-2
 22083  019C46  50E3               	movf	plusw1,w,c
 22084  019C48  0F01               	addlw	1
 22085  019C4A  6E01               	movwf	btemp^0,c
 22086  019C4C  0EFE               	movlw	-2
 22087  019C4E  0060  F007  FFE3   	movff	btemp,plusw1
 22088  019C54  6A01               	clrf	btemp^0,c
 22089  019C56  0EFF               	movlw	-1
 22090  019C58  50E3               	movf	plusw1,w,c
 22091  019C5A  2001               	addwfc	btemp^0,w,c
 22092  019C5C  6E01               	movwf	btemp^0,c
 22093  019C5E  0EFF               	movlw	-1
 22094  019C60  0060  F007  FFE3   	movff	btemp,plusw1
 22095  019C66                     l12080:
 22096                           
 22097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 22098                           ;stkvar	_w @ sp[(-4)+0]
 22099                           ;stkvar	_i @ sp[(-4)+2]
 22100  019C66  50E1               	movf	fsr1l,w,c
 22101  019C68  0FFE               	addlw	-2
 22102  019C6A  6ED9               	movwf	fsr2l,c
 22103  019C6C  50E2               	movf	fsr1h,w,c
 22104  019C6E  6EDA               	movwf	fsr2h,c
 22105  019C70  0EFF               	movlw	255
 22106  019C72  22DA               	addwfc	fsr2h,f,c
 22107  019C74  0EFC               	movlw	-4
 22108  019C76  50E3               	movf	plusw1,w,c
 22109  019C78  5CDE               	subwf	postinc2,w,c
 22110  019C7A  50DE               	movf	postinc2,w,c
 22111  019C7C  0A80               	xorlw	128
 22112  019C7E  6E01               	movwf	btemp^0,c
 22113  019C80  0EFD               	movlw	-3
 22114  019C82  50E3               	movf	plusw1,w,c
 22115  019C84  0A80               	xorlw	128
 22116  019C86  5801               	subwfb	btemp^0,w,c
 22117  019C88  A0D8               	btfss	status,0,c
 22118  019C8A  D7CF               	goto	l12076
 22119                           
 22120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 22121  019C8C  B03E               	btfsc	_flags^0,0,c
 22122  019C8E  D010               	goto	l12084
 22123                           
 22124                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 22125                           ;stkvar	_fp @ sp[(-4)+-2]
 22126  019C90  0EFA               	movlw	-6
 22127  019C92  006F FF8F FFE6     	movff	plusw1,postinc1
 22128  019C98  006F FF8F FFE6     	movff	plusw1,postinc1
 22129                           
 22130                           ;stkvar	_buf @ sp[(-6)+-4]
 22131  019C9E  0EF6               	movlw	-10
 22132  019CA0  006F FF8F FFE6     	movff	plusw1,postinc1
 22133  019CA6  006F FF8F FFE6     	movff	plusw1,postinc1
 22134  019CAC  ECEB  F0D5         	call	_fputs	;wreg free
 22135  019CB0                     l12084:
 22136                           
 22137                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 22138                           ;stkvar	_w @ sp[(-4)+0]
 22139                           ;stkvar	_buf @ sp[(-4)+-4]
 22140  019CB0  0EF8               	movlw	-8
 22141  019CB2  006F FF8F FFE6     	movff	plusw1,postinc1
 22142  019CB8  006F FF8F FFE6     	movff	plusw1,postinc1
 22143  019CBE  EC9A  F0D5         	call	_strlen	;wreg free
 22144  019CC2  0EFC               	movlw	-4
 22145  019CC4  50E3               	movf	plusw1,w,c
 22146  019CC6  2601               	addwf	btemp^0,f,c
 22147  019CC8  0EFD               	movlw	-3
 22148  019CCA  50E3               	movf	plusw1,w,c
 22149  019CCC  2202               	addwfc	(btemp+1)^0,f,c
 22150                           
 22151                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 22152  019CCE  0EF6               	movlw	246
 22153  019CD0  26E1               	addwf	fsr1l,f,c
 22154  019CD2  0EFF               	movlw	255
 22155  019CD4  22E2               	addwfc	fsr1h,f,c
 22156  019CD6  0012               	return		;funcret
 22157  019CD8                     __end_of_pad:
 22158                           	opt callstack 0
 22159                           
 22160 ;; *************** function _strlen *****************
 22161 ;; Defined at:
 22162 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 22163 ;; Parameters:    Size  Location     Type
 22164 ;;  s               2  [STACK] PTR const unsigned char 
 22165 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 22166 ;;		 -> spin(120), STR_46(9), STR_45(12), D.lcd(480), 
 22167 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 22168 ;;		 -> V(191), 
 22169 ;; Auto vars:     Size  Location     Type
 22170 ;;  a               2  [STACK] PTR const unsigned char 
 22171 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 22172 ;;		 -> spin(120), STR_46(9), STR_45(12), D.lcd(480), 
 22173 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 22174 ;;		 -> V(191), 
 22175 ;; Return value:  Size  Location     Type
 22176 ;;                  2  [STACK] unsigned int 
 22177 ;; Registers used:
 22178 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 22179 ;; Tracked objects:
 22180 ;;		On entry : 0/0
 22181 ;;		On exit  : 0/0
 22182 ;;		Unchanged: 0/0
 22183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22188 ;;Total ram usage:        0 bytes
 22189 ;; Hardware stack levels used:    1
 22190 ;; Hardware stack levels required when called:   15
 22191 ;; This function calls:
 22192 ;;		Nothing
 22193 ;; This function is called by:
 22194 ;;		_eaDogM_WriteString
 22195 ;;		_spinners
 22196 ;;		_calc_bsoc
 22197 ;;		_pad
 22198 ;;		_stoa
 22199 ;; This function uses a reentrant model
 22200 ;;
 22201                           
 22202                           	psect	text76
 22203  01AB34                     __ptext76:
 22204                           	opt callstack 0
 22205  01AB34                     _strlen:
 22206                           	opt callstack 0
 22207                           
 22208                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22209  01AB34  52E6               	movf	postinc1,f,c
 22210  01AB36  52E6               	movf	postinc1,f,c
 22211                           
 22212                           ;stkvar	_s @ sp[(-2)+-2]
 22213                           
 22214                           ;incstack = 0
 22215 ;; hardware stack exceeded
 22216  01AB38  0EFC               	movlw	-4
 22217  01AB3A  006F FF8C  F00B    	movff	plusw1,btemp+10
 22218  01AB40  0EFD               	movlw	-3
 22219  01AB42  006F FF8C  F00C    	movff	plusw1,btemp+11
 22220                           
 22221                           ;stkvar	_a @ sp[(-2)+0]
 22222  01AB48  0EFF               	movlw	-1
 22223  01AB4A  0060  F033  FFE3   	movff	btemp+11,plusw1
 22224  01AB50  0EFE               	movlw	-2
 22225  01AB52  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22226  01AB58  D011               	goto	l7820
 22227  01AB5A                     l7818:
 22228                           
 22229                           ;stkvar	_s @ sp[(-2)+-2]
 22230  01AB5A  0EFC               	movlw	-4
 22231  01AB5C  50E3               	movf	plusw1,w,c
 22232  01AB5E  0F01               	addlw	1
 22233  01AB60  6E01               	movwf	btemp^0,c
 22234  01AB62  0EFC               	movlw	-4
 22235  01AB64  0060  F007  FFE3   	movff	btemp,plusw1
 22236  01AB6A  6A01               	clrf	btemp^0,c
 22237  01AB6C  0EFD               	movlw	-3
 22238  01AB6E  50E3               	movf	plusw1,w,c
 22239  01AB70  2001               	addwfc	btemp^0,w,c
 22240  01AB72  6E01               	movwf	btemp^0,c
 22241  01AB74  0EFD               	movlw	-3
 22242  01AB76  0060  F007  FFE3   	movff	btemp,plusw1
 22243  01AB7C                     l7820:
 22244                           
 22245                           ;stkvar	_s @ sp[(-2)+-2]
 22246  01AB7C  0EFC               	movlw	-4
 22247  01AB7E  006F FF8F FFF6     	movff	plusw1,tblptrl
 22248  01AB84  0EFD               	movlw	-3
 22249  01AB86  006F FF8F FFF7     	movff	plusw1,tblptrh
 22250  01AB8C  0E00               	movlw	low (__mediumconst shr (0+16))
 22251  01AB8E  6EF8               	movwf	tblptru,c
 22252  01AB90  0E1F               	movlw	(high __ramtop+-1)
 22253  01AB92  64F7               	cpfsgt	tblptrh,c
 22254  01AB94  D003               	bra	u5477
 22255  01AB96  0008               	tblrd		*
 22256  01AB98  50F5               	movf	tablat,w,c
 22257  01AB9A  D007               	bra	u5470
 22258  01AB9C                     u5477:
 22259  01AB9C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 22260  01ABA2  006F FFDF FFEA     	movff	tblptrh,fsr0h
 22261  01ABA8  50EF               	movf	indf0,w,c
 22262  01ABAA                     u5470:
 22263  01ABAA  0900               	iorlw	0
 22264  01ABAC  A4D8               	btfss	status,2,c
 22265  01ABAE  D7D5               	goto	l7818
 22266                           
 22267                           ;stkvar	_a @ sp[(-2)+0]
 22268                           ;stkvar	_s @ sp[(-2)+-2]
 22269  01ABB0  0EFC               	movlw	-4
 22270  01ABB2  006F FF8C  F001    	movff	plusw1,btemp
 22271  01ABB8  0EFD               	movlw	-3
 22272  01ABBA  006F FF8C  F002    	movff	plusw1,btemp+1
 22273  01ABC0  0EFE               	movlw	-2
 22274  01ABC2  50E3               	movf	plusw1,w,c
 22275  01ABC4  5E01               	subwf	btemp^0,f,c
 22276  01ABC6  0EFF               	movlw	-1
 22277  01ABC8  50E3               	movf	plusw1,w,c
 22278  01ABCA  5A02               	subwfb	(btemp+1)^0,f,c
 22279                           
 22280                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 22281  01ABCC  52E5               	movf	postdec1,f,c
 22282  01ABCE  52E5               	movf	postdec1,f,c
 22283  01ABD0  52E5               	movf	postdec1,f,c
 22284  01ABD2  52E5               	movf	postdec1,f,c
 22285  01ABD4  0012               	return		;funcret
 22286  01ABD6                     __end_of_strlen:
 22287                           	opt callstack 0
 22288                           
 22289 ;; *************** function _fputs *****************
 22290 ;; Defined at:
 22291 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 22292 ;; Parameters:    Size  Location     Type
 22293 ;;  s               2  [STACK] PTR const unsigned char 
 22294 ;;		 -> dbuf(80), 
 22295 ;;  fp              2  [STACK] PTR struct _IO_FILE
 22296 ;;		 -> f(6), NULL(0), 
 22297 ;; Auto vars:     Size  Location     Type
 22298 ;;  i               2  [STACK] int 
 22299 ;;  c               1  [STACK] unsigned char 
 22300 ;; Return value:  Size  Location     Type
 22301 ;;                  2  [STACK] int 
 22302 ;; Registers used:
 22303 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 22304 ;; Tracked objects:
 22305 ;;		On entry : 0/2
 22306 ;;		On exit  : 0/0
 22307 ;;		Unchanged: 0/0
 22308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22313 ;;Total ram usage:        0 bytes
 22314 ;; Hardware stack levels used:    1
 22315 ;; Hardware stack levels required when called:   18
 22316 ;; This function calls:
 22317 ;;		_fputc
 22318 ;; This function is called by:
 22319 ;;		_pad
 22320 ;; This function uses a reentrant model
 22321 ;;
 22322                           
 22323                           	psect	text77
 22324  01ABD6                     __ptext77:
 22325                           	opt callstack 0
 22326  01ABD6                     _fputs:
 22327                           	opt callstack 0
 22328                           
 22329                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22330  01ABD6  52E6               	movf	postinc1,f,c
 22331  01ABD8  52E6               	movf	postinc1,f,c
 22332  01ABDA  52E6               	movf	postinc1,f,c
 22333                           
 22334                           ;stkvar	_i @ sp[(-3)+0]
 22335                           
 22336                           ;incstack = 0
 22337 ;; hardware stack exceeded
 22338  01ABDC  0EFD               	movlw	-3
 22339  01ABDE  6AE3               	clrf	plusw1,c
 22340  01ABE0  0EFE               	movlw	-2
 22341  01ABE2  6AE3               	clrf	plusw1,c
 22342  01ABE4  D01F               	goto	l12022
 22343  01ABE6                     l12018:
 22344                           
 22345                           ;stkvar	_fp @ sp[(-3)+-4]
 22346  01ABE6  0EF9               	movlw	-7
 22347  01ABE8  006F FF8F FFE6     	movff	plusw1,postinc1
 22348  01ABEE  006F FF8F FFE6     	movff	plusw1,postinc1
 22349                           
 22350                           ;stkvar	_c @ sp[(-5)+2]
 22351  01ABF4  0EFD               	movlw	-3
 22352  01ABF6  50E3               	movf	plusw1,w,c
 22353  01ABF8  6EE6               	movwf	postinc1,c
 22354  01ABFA  0E00               	movlw	0
 22355  01ABFC  6EE6               	movwf	postinc1,c
 22356  01ABFE  ECC4  F0CC         	call	_fputc	;wreg free
 22357                           
 22358                           ;stkvar	_i @ sp[(-3)+0]
 22359  01AC02  0EFD               	movlw	-3
 22360  01AC04  50E3               	movf	plusw1,w,c
 22361  01AC06  0F01               	addlw	1
 22362  01AC08  6E01               	movwf	btemp^0,c
 22363  01AC0A  0EFD               	movlw	-3
 22364  01AC0C  0060  F007  FFE3   	movff	btemp,plusw1
 22365  01AC12  6A01               	clrf	btemp^0,c
 22366  01AC14  0EFE               	movlw	-2
 22367  01AC16  50E3               	movf	plusw1,w,c
 22368  01AC18  2001               	addwfc	btemp^0,w,c
 22369  01AC1A  6E01               	movwf	btemp^0,c
 22370  01AC1C  0EFE               	movlw	-2
 22371  01AC1E  0060  F007  FFE3   	movff	btemp,plusw1
 22372  01AC24                     l12022:
 22373                           
 22374                           ;stkvar	_i @ sp[(-3)+0]
 22375  01AC24  0EFD               	movlw	-3
 22376  01AC26  006F FF8C  F00B    	movff	plusw1,btemp+10
 22377  01AC2C  0EFE               	movlw	-2
 22378  01AC2E  006F FF8C  F00C    	movff	plusw1,btemp+11
 22379                           
 22380                           ;stkvar	_s @ sp[(-3)+-2]
 22381  01AC34  0EFB               	movlw	-5
 22382  01AC36  006F FF8C  F009    	movff	plusw1,btemp+8
 22383  01AC3C  0EFC               	movlw	-4
 22384  01AC3E  006F FF8C  F00A    	movff	plusw1,btemp+9
 22385  01AC44  500B               	movf	(btemp+10)^0,w,c
 22386  01AC46  2409               	addwf	(btemp+8)^0,w,c
 22387  01AC48  6ED9               	movwf	fsr2l,c
 22388  01AC4A  500C               	movf	(btemp+11)^0,w,c
 22389  01AC4C  200A               	addwfc	(btemp+9)^0,w,c
 22390  01AC4E  6EDA               	movwf	fsr2h,c
 22391  01AC50  50DF               	movf	indf2,w,c
 22392  01AC52  6E0C               	movwf	(btemp+11)^0,c
 22393                           
 22394                           ;stkvar	_c @ sp[(-3)+2]
 22395  01AC54  0EFF               	movlw	-1
 22396  01AC56  0060  F033  FFE3   	movff	btemp+11,plusw1
 22397  01AC5C  0EFF               	movlw	-1
 22398  01AC5E  50E3               	movf	plusw1,w,c
 22399  01AC60  A4D8               	btfss	status,2,c
 22400  01AC62  D7C1               	goto	l12018
 22401                           
 22402                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 22403  01AC64  0EF9               	movlw	249
 22404  01AC66  26E1               	addwf	fsr1l,f,c
 22405  01AC68  0EFF               	movlw	255
 22406  01AC6A  22E2               	addwfc	fsr1h,f,c
 22407  01AC6C  0012               	return		;funcret
 22408  01AC6E                     __end_of_fputs:
 22409                           	opt callstack 0
 22410                           
 22411 ;; *************** function _fputc *****************
 22412 ;; Defined at:
 22413 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 22414 ;; Parameters:    Size  Location     Type
 22415 ;;  c               2  [STACK] int 
 22416 ;;  fp              2  [STACK] PTR struct _IO_FILE
 22417 ;;		 -> f(6), NULL(0), 
 22418 ;; Auto vars:     Size  Location     Type
 22419 ;;		None
 22420 ;; Return value:  Size  Location     Type
 22421 ;;                  2  [STACK] int 
 22422 ;; Registers used:
 22423 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 22424 ;; Tracked objects:
 22425 ;;		On entry : 0/0
 22426 ;;		On exit  : 0/0
 22427 ;;		Unchanged: 0/0
 22428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22433 ;;Total ram usage:        0 bytes
 22434 ;; Hardware stack levels used:    1
 22435 ;; Hardware stack levels required when called:   17
 22436 ;; This function calls:
 22437 ;;		_putch
 22438 ;; This function is called by:
 22439 ;;		_pad
 22440 ;;		_stoa
 22441 ;;		_vfpfcnvrt
 22442 ;;		_fputs
 22443 ;; This function uses a reentrant model
 22444 ;;
 22445                           
 22446                           	psect	text78
 22447  019988                     __ptext78:
 22448                           	opt callstack 0
 22449  019988                     _fputc:
 22450                           	opt callstack 0
 22451                           
 22452                           ;stkvar	_fp @ sp[(0)+-4]
 22453                           
 22454                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22455                           ;incstack = 0
 22456 ;; hardware stack exceeded
 22457  019988  0EFC               	movlw	-4
 22458  01998A  006F FF8C  F001    	movff	plusw1,btemp
 22459  019990  0EFD               	movlw	-3
 22460  019992  50E3               	movf	plusw1,w,c
 22461  019994  1001               	iorwf	btemp^0,w,c
 22462  019996  B4D8               	btfsc	status,2,c
 22463  019998  D009               	goto	u10850
 22464                           
 22465                           ;stkvar	_fp @ sp[(0)+-4]
 22466  01999A  0EFC               	movlw	-4
 22467  01999C  006F FF8C  F001    	movff	plusw1,btemp
 22468  0199A2  0EFD               	movlw	-3
 22469  0199A4  50E3               	movf	plusw1,w,c
 22470  0199A6  1001               	iorwf	btemp^0,w,c
 22471  0199A8  A4D8               	btfss	status,2,c
 22472  0199AA  D006               	goto	l12006
 22473  0199AC                     u10850:
 22474                           
 22475                           ;stkvar	_c @ sp[(0)+-2]
 22476  0199AC  0EFE               	movlw	-2
 22477  0199AE  50E3               	movf	plusw1,w,c
 22478  0199B0  6EE6               	movwf	postinc1,c
 22479  0199B2  EC1D  F0E1         	call	_putch	;wreg free
 22480  0199B6  D075               	goto	l3244
 22481  0199B8                     l12006:
 22482                           
 22483                           ;stkvar	_fp @ sp[(0)+-4]
 22484  0199B8  0EFC               	movlw	-4
 22485  0199BA  006F FF8C  F00B    	movff	plusw1,btemp+10
 22486  0199C0  0EFD               	movlw	-3
 22487  0199C2  006F FF8C  F00C    	movff	plusw1,btemp+11
 22488  0199C8  0E04               	movlw	4
 22489  0199CA  240B               	addwf	(btemp+10)^0,w,c
 22490  0199CC  6ED9               	movwf	fsr2l,c
 22491  0199CE  0E00               	movlw	0
 22492  0199D0  200C               	addwfc	(btemp+11)^0,w,c
 22493  0199D2  6EDA               	movwf	fsr2h,c
 22494  0199D4  50DE               	movf	postinc2,w,c
 22495  0199D6  10DE               	iorwf	postinc2,w,c
 22496  0199D8  B4D8               	btfsc	status,2,c
 22497  0199DA  D026               	goto	u10870
 22498                           
 22499                           ;stkvar	_fp @ sp[(0)+-4]
 22500  0199DC  0EFC               	movlw	-4
 22501  0199DE  006F FF8C  F00B    	movff	plusw1,btemp+10
 22502  0199E4  0EFD               	movlw	-3
 22503  0199E6  006F FF8C  F00C    	movff	plusw1,btemp+11
 22504  0199EC  0E04               	movlw	4
 22505  0199EE  240B               	addwf	(btemp+10)^0,w,c
 22506  0199F0  6ED9               	movwf	fsr2l,c
 22507  0199F2  0E00               	movlw	0
 22508  0199F4  200C               	addwfc	(btemp+11)^0,w,c
 22509  0199F6  6EDA               	movwf	fsr2h,c
 22510                           
 22511                           ;stkvar	_fp @ sp[(0)+-4]
 22512  0199F8  0EFC               	movlw	-4
 22513  0199FA  006F FF8C  F00B    	movff	plusw1,btemp+10
 22514  019A00  0EFD               	movlw	-3
 22515  019A02  006F FF8C  F00C    	movff	plusw1,btemp+11
 22516  019A08  0E02               	movlw	2
 22517  019A0A  240B               	addwf	(btemp+10)^0,w,c
 22518  019A0C  6EE9               	movwf	fsr0l,c
 22519  019A0E  0E00               	movlw	0
 22520  019A10  200C               	addwfc	(btemp+11)^0,w,c
 22521  019A12  6EEA               	movwf	fsr0h,c
 22522  019A14  50DE               	movf	postinc2,w,c
 22523  019A16  5CEE               	subwf	postinc0,w,c
 22524  019A18  50EE               	movf	postinc0,w,c
 22525  019A1A  0A80               	xorlw	128
 22526  019A1C  6E01               	movwf	btemp^0,c
 22527  019A1E  50DE               	movf	postinc2,w,c
 22528  019A20  0A80               	xorlw	128
 22529  019A22  5801               	subwfb	btemp^0,w,c
 22530  019A24  B0D8               	btfsc	status,0,c
 22531  019A26  D03D               	goto	l3244
 22532  019A28                     u10870:
 22533                           
 22534                           ;stkvar	_c @ sp[(0)+-2]
 22535                           ;stkvar	_fp @ sp[(0)+-4]
 22536  019A28  0EFC               	movlw	-4
 22537  019A2A  006F FF8C  F00B    	movff	plusw1,btemp+10
 22538  019A30  0EFD               	movlw	-3
 22539  019A32  006F FF8C  F00C    	movff	plusw1,btemp+11
 22540  019A38  0E02               	movlw	2
 22541  019A3A  240B               	addwf	(btemp+10)^0,w,c
 22542  019A3C  6ED9               	movwf	fsr2l,c
 22543  019A3E  0E00               	movlw	0
 22544  019A40  200C               	addwfc	(btemp+11)^0,w,c
 22545  019A42  6EDA               	movwf	fsr2h,c
 22546  019A44  006F FF78  F00B    	movff	postinc2,btemp+10
 22547  019A4A  006F FF74  F00C    	movff	postdec2,btemp+11
 22548                           
 22549                           ;stkvar	_fp @ sp[(0)+-4]
 22550  019A50  0EFC               	movlw	-4
 22551  019A52  006F FF8F FFD9     	movff	plusw1,fsr2l
 22552  019A58  0EFD               	movlw	-3
 22553  019A5A  006F FF8F FFDA     	movff	plusw1,fsr2h
 22554  019A60  006F FF78  F009    	movff	postinc2,btemp+8
 22555  019A66  006F FF74  F00A    	movff	postdec2,btemp+9
 22556  019A6C  500B               	movf	(btemp+10)^0,w,c
 22557  019A6E  2409               	addwf	(btemp+8)^0,w,c
 22558  019A70  6ED9               	movwf	fsr2l,c
 22559  019A72  500C               	movf	(btemp+11)^0,w,c
 22560  019A74  200A               	addwfc	(btemp+9)^0,w,c
 22561  019A76  6EDA               	movwf	fsr2h,c
 22562  019A78  0EFE               	movlw	-2
 22563  019A7A  006F FF8F FFDF     	movff	plusw1,indf2
 22564                           
 22565                           ;stkvar	_fp @ sp[(0)+-4]
 22566  019A80  0EFC               	movlw	-4
 22567  019A82  006F FF8C  F00B    	movff	plusw1,btemp+10
 22568  019A88  0EFD               	movlw	-3
 22569  019A8A  006F FF8C  F00C    	movff	plusw1,btemp+11
 22570  019A90  0E02               	movlw	2
 22571  019A92  240B               	addwf	(btemp+10)^0,w,c
 22572  019A94  6ED9               	movwf	fsr2l,c
 22573  019A96  0E00               	movlw	0
 22574  019A98  200C               	addwfc	(btemp+11)^0,w,c
 22575  019A9A  6EDA               	movwf	fsr2h,c
 22576  019A9C  2ADE               	incf	postinc2,f,c
 22577  019A9E  0E00               	movlw	0
 22578  019AA0  22DD               	addwfc	postdec2,f,c
 22579  019AA2                     l3244:
 22580                           
 22581                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 22582  019AA2  52E5               	movf	postdec1,f,c
 22583  019AA4  52E5               	movf	postdec1,f,c
 22584  019AA6  52E5               	movf	postdec1,f,c
 22585  019AA8  52E5               	movf	postdec1,f,c
 22586  019AAA  0012               	return		;funcret
 22587  019AAC                     __end_of_fputc:
 22588                           	opt callstack 0
 22589                           
 22590 ;; *************** function _putch *****************
 22591 ;; Defined at:
 22592 ;;		line 421 in file "eadog.c"
 22593 ;; Parameters:    Size  Location     Type
 22594 ;;  c               1  [STACK] unsigned char 
 22595 ;; Auto vars:     Size  Location     Type
 22596 ;;		None
 22597 ;; Return value:  Size  Location     Type
 22598 ;;                  1  [STACK] void 
 22599 ;; Registers used:
 22600 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 22601 ;; Tracked objects:
 22602 ;;		On entry : 0/0
 22603 ;;		On exit  : 0/0
 22604 ;;		Unchanged: 0/0
 22605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22610 ;;Total ram usage:        0 bytes
 22611 ;; Hardware stack levels used:    1
 22612 ;; Hardware stack levels required when called:   16
 22613 ;; This function calls:
 22614 ;;		_ringBufS_put_dma
 22615 ;; This function is called by:
 22616 ;;		_fputc
 22617 ;; This function uses a reentrant model
 22618 ;;
 22619                           
 22620                           	psect	text79
 22621  01C23A                     __ptext79:
 22622                           	opt callstack 0
 22623  01C23A                     _putch:
 22624                           	opt callstack 0
 22625                           
 22626                           ;eadog.c: 421: void putch(char c);eadog.c: 422: {;eadog.c: 423:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 22627                           ;stkvar	_c @ sp[(0)+-1]
 22628                           
 22629                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22630                           ;incstack = 0
 22631 ;; hardware stack exceeded
 22632  01C23A  0EFF               	movlw	-1
 22633  01C23C  50E3               	movf	plusw1,w,c
 22634  01C23E  6EE6               	movwf	postinc1,c
 22635  01C240  0060  F74F  FFE6   	movff	_spi_link+6,postinc1
 22636  01C246  0060  F753  FFE6   	movff	_spi_link+7,postinc1
 22637  01C24C  EC4D  F0D4         	call	_ringBufS_put_dma	;wreg free
 22638                           
 22639                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 22640  01C250  52E5               	movf	postdec1,f,c
 22641  01C252  0012               	return		;funcret
 22642  01C254                     __end_of_putch:
 22643                           	opt callstack 0
 22644                           
 22645 ;; *************** function _ringBufS_put_dma *****************
 22646 ;; Defined at:
 22647 ;;		line 67 in file "ringbufs.c"
 22648 ;; Parameters:    Size  Location     Type
 22649 ;;  _this           2  [STACK] PTR struct ringBufS_t
 22650 ;;		 -> ring_buf1(67), 
 22651 ;;  c               1  [STACK] const unsigned char 
 22652 ;; Auto vars:     Size  Location     Type
 22653 ;;		None
 22654 ;; Return value:  Size  Location     Type
 22655 ;;                  1  [STACK] void 
 22656 ;; Registers used:
 22657 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 22658 ;; Tracked objects:
 22659 ;;		On entry : 0/0
 22660 ;;		On exit  : 0/0
 22661 ;;		Unchanged: 0/0
 22662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22667 ;;Total ram usage:        0 bytes
 22668 ;; Hardware stack levels used:    1
 22669 ;; Hardware stack levels required when called:   15
 22670 ;; This function calls:
 22671 ;;		Nothing
 22672 ;; This function is called by:
 22673 ;;		_putch
 22674 ;; This function uses a reentrant model
 22675 ;;
 22676                           
 22677                           	psect	text80
 22678  01A89A                     __ptext80:
 22679                           	opt callstack 0
 22680  01A89A                     _ringBufS_put_dma:
 22681                           	opt callstack 0
 22682                           
 22683                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 22684                           ;stkvar	__this @ sp[(0)+-2]
 22685                           
 22686                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22687                           ;incstack = 0
 22688 ;; hardware stack exceeded
 22689  01A89A  0EFE               	movlw	-2
 22690  01A89C  006F FF8C  F00B    	movff	plusw1,btemp+10
 22691  01A8A2  0EFF               	movlw	-1
 22692  01A8A4  006F FF8C  F00C    	movff	plusw1,btemp+11
 22693  01A8AA  0E42               	movlw	66
 22694  01A8AC  240B               	addwf	(btemp+10)^0,w,c
 22695  01A8AE  6ED9               	movwf	fsr2l,c
 22696  01A8B0  0E00               	movlw	0
 22697  01A8B2  200C               	addwfc	(btemp+11)^0,w,c
 22698  01A8B4  6EDA               	movwf	fsr2h,c
 22699  01A8B6  0E40               	movlw	64
 22700  01A8B8  60DF               	cpfslt	indf2,c
 22701  01A8BA  D040               	goto	l1598
 22702                           
 22703                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 22704                           ;stkvar	_c @ sp[(0)+-3]
 22705                           ;stkvar	__this @ sp[(0)+-2]
 22706  01A8BC  0EFE               	movlw	-2
 22707  01A8BE  006F FF8C  F00B    	movff	plusw1,btemp+10
 22708  01A8C4  0EFF               	movlw	-1
 22709  01A8C6  006F FF8C  F00C    	movff	plusw1,btemp+11
 22710  01A8CC  0E40               	movlw	64
 22711  01A8CE  240B               	addwf	(btemp+10)^0,w,c
 22712  01A8D0  6ED9               	movwf	fsr2l,c
 22713  01A8D2  0E00               	movlw	0
 22714  01A8D4  200C               	addwfc	(btemp+11)^0,w,c
 22715  01A8D6  6EDA               	movwf	fsr2h,c
 22716  01A8D8  50DF               	movf	indf2,w,c
 22717  01A8DA  6E0C               	movwf	(btemp+11)^0,c
 22718                           
 22719                           ;stkvar	__this @ sp[(0)+-2]
 22720  01A8DC  0EFE               	movlw	-2
 22721  01A8DE  006F FF8C  F009    	movff	plusw1,btemp+8
 22722  01A8E4  0EFF               	movlw	-1
 22723  01A8E6  006F FF8C  F00A    	movff	plusw1,btemp+9
 22724  01A8EC  500C               	movf	(btemp+11)^0,w,c
 22725  01A8EE  2409               	addwf	(btemp+8)^0,w,c
 22726  01A8F0  6ED9               	movwf	fsr2l,c
 22727  01A8F2  0E00               	movlw	0
 22728  01A8F4  200A               	addwfc	(btemp+9)^0,w,c
 22729  01A8F6  6EDA               	movwf	fsr2h,c
 22730  01A8F8  0EFD               	movlw	-3
 22731  01A8FA  006F FF8F FFDF     	movff	plusw1,indf2
 22732                           
 22733                           ;ringbufs.c: 71:   ++_this->head;
 22734                           ;stkvar	__this @ sp[(0)+-2]
 22735  01A900  0EFE               	movlw	-2
 22736  01A902  006F FF8C  F00B    	movff	plusw1,btemp+10
 22737  01A908  0EFF               	movlw	-1
 22738  01A90A  006F FF8C  F00C    	movff	plusw1,btemp+11
 22739  01A910  0E40               	movlw	64
 22740  01A912  240B               	addwf	(btemp+10)^0,w,c
 22741  01A914  6ED9               	movwf	fsr2l,c
 22742  01A916  0E00               	movlw	0
 22743  01A918  200C               	addwfc	(btemp+11)^0,w,c
 22744  01A91A  6EDA               	movwf	fsr2h,c
 22745  01A91C  2ADF               	incf	indf2,f,c
 22746                           
 22747                           ;ringbufs.c: 72:   ++_this->count;
 22748                           ;stkvar	__this @ sp[(0)+-2]
 22749  01A91E  0EFE               	movlw	-2
 22750  01A920  006F FF8C  F00B    	movff	plusw1,btemp+10
 22751  01A926  0EFF               	movlw	-1
 22752  01A928  006F FF8C  F00C    	movff	plusw1,btemp+11
 22753  01A92E  0E42               	movlw	66
 22754  01A930  240B               	addwf	(btemp+10)^0,w,c
 22755  01A932  6ED9               	movwf	fsr2l,c
 22756  01A934  0E00               	movlw	0
 22757  01A936  200C               	addwfc	(btemp+11)^0,w,c
 22758  01A938  6EDA               	movwf	fsr2h,c
 22759  01A93A  2ADF               	incf	indf2,f,c
 22760  01A93C                     l1598:
 22761                           
 22762                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 22763  01A93C  52E5               	movf	postdec1,f,c
 22764  01A93E  52E5               	movf	postdec1,f,c
 22765  01A940  52E5               	movf	postdec1,f,c
 22766  01A942  0012               	return		;funcret
 22767  01A944                     __end_of_ringBufS_put_dma:
 22768                           	opt callstack 0
 22769                           
 22770 ;; *************** function _atoi *****************
 22771 ;; Defined at:
 22772 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 22773 ;; Parameters:    Size  Location     Type
 22774 ;;  s               2  [STACK] PTR const unsigned char 
 22775 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
 22776 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 22777 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 22778 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 22779 ;;		 -> STR_47(19), STR_44(3), STR_43(3), STR_42(22), 
 22780 ;;		 -> STR_41(22), STR_40(22), STR_39(23), STR_38(23), 
 22781 ;;		 -> STR_37(23), STR_36(23), STR_35(23), STR_34(23), 
 22782 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 22783 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 22784 ;;		 -> STR_25(22), STR_24(22), STR_23(22), STR_22(22), 
 22785 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 22786 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 22787 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 22788 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 22789 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 22790 ;; Auto vars:     Size  Location     Type
 22791 ;;  n               2  [STACK] int 
 22792 ;;  neg             2  [STACK] int 
 22793 ;; Return value:  Size  Location     Type
 22794 ;;                  2  [STACK] int 
 22795 ;; Registers used:
 22796 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 22797 ;; Tracked objects:
 22798 ;;		On entry : 0/0
 22799 ;;		On exit  : 0/0
 22800 ;;		Unchanged: 0/0
 22801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22806 ;;Total ram usage:        0 bytes
 22807 ;; Hardware stack levels used:    1
 22808 ;; Hardware stack levels required when called:   16
 22809 ;; This function calls:
 22810 ;;		_isdigit
 22811 ;;		_isspace
 22812 ;; This function is called by:
 22813 ;;		_vfpfcnvrt
 22814 ;; This function uses a reentrant model
 22815 ;;
 22816                           
 22817                           	psect	text81
 22818  01795A                     __ptext81:
 22819                           	opt callstack 0
 22820  01795A                     _atoi:
 22821                           	opt callstack 0
 22822                           
 22823                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22824  01795A  0E09               	movlw	9
 22825  01795C  26E1               	addwf	fsr1l,f,c
 22826  01795E  0E00               	movlw	0
 22827  017960  22E2               	addwfc	fsr1h,f,c
 22828                           
 22829                           ;stkvar	_n @ sp[(-9)+5]
 22830                           
 22831                           ;incstack = 0
 22832 ;; hardware stack exceeded
 22833  017962  0EFC               	movlw	-4
 22834  017964  6AE3               	clrf	plusw1,c
 22835  017966  0EFD               	movlw	-3
 22836  017968  6AE3               	clrf	plusw1,c
 22837                           
 22838                           ;stkvar	_neg @ sp[(-9)+7]
 22839  01796A  0EFE               	movlw	-2
 22840  01796C  6AE3               	clrf	plusw1,c
 22841  01796E  0EFF               	movlw	-1
 22842  017970  6AE3               	clrf	plusw1,c
 22843  017972  D011               	goto	l9444
 22844  017974                     l9442:
 22845                           
 22846                           ;stkvar	_s @ sp[(-9)+-2]
 22847  017974  0EF5               	movlw	-11
 22848  017976  50E3               	movf	plusw1,w,c
 22849  017978  0F01               	addlw	1
 22850  01797A  6E01               	movwf	btemp^0,c
 22851  01797C  0EF5               	movlw	-11
 22852  01797E  0060  F007  FFE3   	movff	btemp,plusw1
 22853  017984  6A01               	clrf	btemp^0,c
 22854  017986  0EF6               	movlw	-10
 22855  017988  50E3               	movf	plusw1,w,c
 22856  01798A  2001               	addwfc	btemp^0,w,c
 22857  01798C  6E01               	movwf	btemp^0,c
 22858  01798E  0EF6               	movlw	-10
 22859  017990  0060  F007  FFE3   	movff	btemp,plusw1
 22860  017996                     l9444:
 22861                           
 22862                           ;stkvar	_atoi$6201 @ sp[(-9)+4]
 22863  017996  0EFB               	movlw	-5
 22864  017998  6AE3               	clrf	plusw1,c
 22865  01799A  2AE3               	incf	plusw1,f,c
 22866                           
 22867                           ;stkvar	_s @ sp[(-9)+-2]
 22868  01799C  50E1               	movf	fsr1l,w,c
 22869  01799E  0FF5               	addlw	-11
 22870  0179A0  6ED9               	movwf	fsr2l,c
 22871  0179A2  50E2               	movf	fsr1h,w,c
 22872  0179A4  6EDA               	movwf	fsr2h,c
 22873  0179A6  0EFF               	movlw	255
 22874  0179A8  22DA               	addwfc	fsr2h,f,c
 22875  0179AA  006F FF7B FFF6     	movff	postinc2,tblptrl
 22876  0179B0  006F FF77 FFF7     	movff	postdec2,tblptrh
 22877  0179B6                     	if	0	;tblptru may be non-zero
 22878  0179B6                     	endif
 22879  0179B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22880  0179B6  0E00               	movlw	low (__mediumconst shr (0+16))
 22881  0179B8  6EF8               	movwf	tblptru,c
 22882  0179BA                     	endif
 22883  0179BA  0008               	tblrd		*
 22884  0179BC  50F5               	movf	tablat,w,c
 22885  0179BE  0A20               	xorlw	32
 22886  0179C0  B4D8               	btfsc	status,2,c
 22887  0179C2  D023               	goto	l9452
 22888  0179C4  0EF7               	movlw	247
 22889  0179C6  6E0B               	movwf	(btemp+10)^0,c
 22890  0179C8  0EFF               	movlw	255
 22891  0179CA  6E0C               	movwf	(btemp+11)^0,c
 22892                           
 22893                           ;stkvar	_s @ sp[(-9)+-2]
 22894  0179CC  50E1               	movf	fsr1l,w,c
 22895  0179CE  0FF5               	addlw	-11
 22896  0179D0  6ED9               	movwf	fsr2l,c
 22897  0179D2  50E2               	movf	fsr1h,w,c
 22898  0179D4  6EDA               	movwf	fsr2h,c
 22899  0179D6  0EFF               	movlw	255
 22900  0179D8  22DA               	addwfc	fsr2h,f,c
 22901  0179DA  006F FF7B FFF6     	movff	postinc2,tblptrl
 22902  0179E0  006F FF77 FFF7     	movff	postdec2,tblptrh
 22903  0179E6                     	if	0	;tblptru may be non-zero
 22904  0179E6                     	endif
 22905  0179E6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22906  0179E6  0E00               	movlw	low (__mediumconst shr (0+16))
 22907  0179E8  6EF8               	movwf	tblptru,c
 22908  0179EA                     	endif
 22909  0179EA  0008               	tblrd		*
 22910  0179EC  50F5               	movf	tablat,w,c
 22911  0179EE  6E09               	movwf	(btemp+8)^0,c
 22912  0179F0  6A0A               	clrf	(btemp+9)^0,c
 22913  0179F2  500B               	movf	(btemp+10)^0,w,c
 22914  0179F4  2609               	addwf	(btemp+8)^0,f,c
 22915  0179F6  500C               	movf	(btemp+11)^0,w,c
 22916  0179F8  220A               	addwfc	(btemp+9)^0,f,c
 22917  0179FA  500A               	movf	(btemp+9)^0,w,c
 22918  0179FC  E104               	bnz	u8590
 22919  0179FE  0E05               	movlw	5
 22920  017A00  5C09               	subwf	(btemp+8)^0,w,c
 22921  017A02  A0D8               	btfss	status,0,c
 22922  017A04  D002               	goto	l9452
 22923  017A06                     u8590:
 22924                           
 22925                           ;stkvar	_atoi$6201 @ sp[(-9)+4]
 22926  017A06  0EFB               	movlw	-5
 22927  017A08  6AE3               	clrf	plusw1,c
 22928  017A0A                     l9452:
 22929                           
 22930                           ;stkvar	_atoi$6201 @ sp[(-9)+4]
 22931  017A0A  0EFB               	movlw	-5
 22932  017A0C  50E3               	movf	plusw1,w,c
 22933  017A0E  6E0B               	movwf	(btemp+10)^0,c
 22934  017A10  6A0C               	clrf	(btemp+11)^0,c
 22935                           
 22936                           ;stkvar	_atoi$6200 @ sp[(-9)+2]
 22937  017A12  0EF9               	movlw	-7
 22938  017A14  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22939  017A1A  0EFA               	movlw	-6
 22940  017A1C  0060  F033  FFE3   	movff	btemp+11,plusw1
 22941                           
 22942                           ;stkvar	_atoi$6200 @ sp[(-9)+2]
 22943  017A22  0EF9               	movlw	-7
 22944  017A24  006F FF8C  F001    	movff	plusw1,btemp
 22945  017A2A  0EFA               	movlw	-6
 22946  017A2C  50E3               	movf	plusw1,w,c
 22947  017A2E  1001               	iorwf	btemp^0,w,c
 22948  017A30  B4D8               	btfsc	status,2,c
 22949  017A32  D01F               	goto	l9462
 22950  017A34  D79F               	goto	l9442
 22951  017A36                     l9458:
 22952  017A36  0E01               	movlw	1
 22953  017A38  6E0B               	movwf	(btemp+10)^0,c
 22954  017A3A  0E00               	movlw	0
 22955  017A3C  6E0C               	movwf	(btemp+11)^0,c
 22956                           
 22957                           ;stkvar	_neg @ sp[(-9)+7]
 22958  017A3E  0EFE               	movlw	-2
 22959  017A40  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22960  017A46  0EFF               	movlw	-1
 22961  017A48  0060  F033  FFE3   	movff	btemp+11,plusw1
 22962  017A4E                     l9460:
 22963                           
 22964                           ;stkvar	_s @ sp[(-9)+-2]
 22965  017A4E  0EF5               	movlw	-11
 22966  017A50  50E3               	movf	plusw1,w,c
 22967  017A52  0F01               	addlw	1
 22968  017A54  6E01               	movwf	btemp^0,c
 22969  017A56  0EF5               	movlw	-11
 22970  017A58  0060  F007  FFE3   	movff	btemp,plusw1
 22971  017A5E  6A01               	clrf	btemp^0,c
 22972  017A60  0EF6               	movlw	-10
 22973  017A62  50E3               	movf	plusw1,w,c
 22974  017A64  2001               	addwfc	btemp^0,w,c
 22975  017A66  6E01               	movwf	btemp^0,c
 22976  017A68  0EF6               	movlw	-10
 22977  017A6A  0060  F007  FFE3   	movff	btemp,plusw1
 22978  017A70  D053               	goto	l9468
 22979  017A72                     l9462:
 22980                           
 22981                           ;stkvar	_s @ sp[(-9)+-2]
 22982  017A72  50E1               	movf	fsr1l,w,c
 22983  017A74  0FF5               	addlw	-11
 22984  017A76  6ED9               	movwf	fsr2l,c
 22985  017A78  50E2               	movf	fsr1h,w,c
 22986  017A7A  6EDA               	movwf	fsr2h,c
 22987  017A7C  0EFF               	movlw	255
 22988  017A7E  22DA               	addwfc	fsr2h,f,c
 22989  017A80  006F FF7B FFF6     	movff	postinc2,tblptrl
 22990  017A86  006F FF77 FFF7     	movff	postdec2,tblptrh
 22991  017A8C                     	if	0	;tblptru may be non-zero
 22992  017A8C                     	endif
 22993  017A8C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22994  017A8C  0E00               	movlw	low (__mediumconst shr (0+16))
 22995  017A8E  6EF8               	movwf	tblptru,c
 22996  017A90                     	endif
 22997  017A90  0008               	tblrd		*
 22998  017A92  50F5               	movf	tablat,w,c
 22999  017A94  6E0B               	movwf	(btemp+10)^0,c
 23000  017A96  6A0C               	clrf	(btemp+11)^0,c
 23001                           
 23002                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23003                           ; Switch size 1, requested type "simple"
 23004                           ; Number of cases is 1, Range of values is 0 to 0
 23005                           ; switch strategies available:
 23006                           ; Name         Instructions Cycles
 23007                           ; simple_byte            4     3 (average)
 23008                           ;	Chosen strategy is simple_byte
 23009  017A98  500C               	movf	(btemp+11)^0,w,c
 23010  017A9A  0A00               	xorlw	0	; case 0
 23011  017A9C  A4D8               	btfss	status,2,c
 23012  017A9E  D03C               	goto	l9468
 23013                           
 23014                           ; Switch size 1, requested type "simple"
 23015                           ; Number of cases is 2, Range of values is 43 to 45
 23016                           ; switch strategies available:
 23017                           ; Name         Instructions Cycles
 23018                           ; simple_byte            7     4 (average)
 23019                           ;	Chosen strategy is simple_byte
 23020  017AA0  500B               	movf	(btemp+10)^0,w,c
 23021  017AA2  0A2B               	xorlw	43	; case 43
 23022  017AA4  B4D8               	btfsc	status,2,c
 23023  017AA6  D7D3               	goto	l9460
 23024  017AA8  0A06               	xorlw	6	; case 45
 23025  017AAA  B4D8               	btfsc	status,2,c
 23026  017AAC  D7C4               	goto	l9458
 23027  017AAE  D034               	goto	l9468
 23028  017AB0                     l9464:
 23029                           
 23030                           ;stkvar	_n @ sp[(-9)+5]
 23031  017AB0  0EFC               	movlw	-4
 23032  017AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 23033  017AB8  0EFD               	movlw	-3
 23034  017ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 23035  017AC0  0E0A               	movlw	10
 23036  017AC2  020B               	mulwf	(btemp+10)^0,c
 23037  017AC4  006F FFCC  F009    	movff	prodl,btemp+8
 23038  017ACA  006F FFD0  F00A    	movff	prodh,btemp+9
 23039  017AD0  020C               	mulwf	(btemp+11)^0,c
 23040  017AD2  50F3               	movf	prodl,w,c
 23041  017AD4  260A               	addwf	(btemp+9)^0,f,c
 23042                           
 23043                           ;stkvar	_s @ sp[(-9)+-2]
 23044  017AD6  50E1               	movf	fsr1l,w,c
 23045  017AD8  0FF5               	addlw	-11
 23046  017ADA  6ED9               	movwf	fsr2l,c
 23047  017ADC  50E2               	movf	fsr1h,w,c
 23048  017ADE  6EDA               	movwf	fsr2h,c
 23049  017AE0  0EFF               	movlw	255
 23050  017AE2  22DA               	addwfc	fsr2h,f,c
 23051  017AE4  006F FF7B FFF6     	movff	postinc2,tblptrl
 23052  017AEA  006F FF77 FFF7     	movff	postdec2,tblptrh
 23053  017AF0                     	if	0	;tblptru may be non-zero
 23054  017AF0                     	endif
 23055  017AF0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23056  017AF0  0E00               	movlw	low (__mediumconst shr (0+16))
 23057  017AF2  6EF8               	movwf	tblptru,c
 23058  017AF4                     	endif
 23059  017AF4  0008               	tblrd		*
 23060  017AF6  50F5               	movf	tablat,w,c
 23061  017AF8  5E09               	subwf	(btemp+8)^0,f,c
 23062  017AFA  0E00               	movlw	0
 23063  017AFC  5A0A               	subwfb	(btemp+9)^0,f,c
 23064  017AFE  0E30               	movlw	48
 23065  017B00  2609               	addwf	(btemp+8)^0,f,c
 23066  017B02  0E00               	movlw	0
 23067  017B04  220A               	addwfc	(btemp+9)^0,f,c
 23068                           
 23069                           ;stkvar	_n @ sp[(-9)+5]
 23070  017B06  0EFC               	movlw	-4
 23071  017B08  0060  F027  FFE3   	movff	btemp+8,plusw1
 23072  017B0E  0EFD               	movlw	-3
 23073  017B10  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23074  017B16  D79B               	goto	l9460
 23075  017B18                     l9468:
 23076  017B18  0ED0               	movlw	208
 23077  017B1A  6E0B               	movwf	(btemp+10)^0,c
 23078  017B1C  0EFF               	movlw	255
 23079  017B1E  6E0C               	movwf	(btemp+11)^0,c
 23080                           
 23081                           ;stkvar	_s @ sp[(-9)+-2]
 23082  017B20  50E1               	movf	fsr1l,w,c
 23083  017B22  0FF5               	addlw	-11
 23084  017B24  6ED9               	movwf	fsr2l,c
 23085  017B26  50E2               	movf	fsr1h,w,c
 23086  017B28  6EDA               	movwf	fsr2h,c
 23087  017B2A  0EFF               	movlw	255
 23088  017B2C  22DA               	addwfc	fsr2h,f,c
 23089  017B2E  006F FF7B FFF6     	movff	postinc2,tblptrl
 23090  017B34  006F FF77 FFF7     	movff	postdec2,tblptrh
 23091  017B3A                     	if	0	;tblptru may be non-zero
 23092  017B3A                     	endif
 23093  017B3A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23094  017B3A  0E00               	movlw	low (__mediumconst shr (0+16))
 23095  017B3C  6EF8               	movwf	tblptru,c
 23096  017B3E                     	endif
 23097  017B3E  0008               	tblrd		*
 23098  017B40  50F5               	movf	tablat,w,c
 23099  017B42  6E09               	movwf	(btemp+8)^0,c
 23100  017B44  6A0A               	clrf	(btemp+9)^0,c
 23101  017B46  500B               	movf	(btemp+10)^0,w,c
 23102  017B48  2609               	addwf	(btemp+8)^0,f,c
 23103  017B4A  500C               	movf	(btemp+11)^0,w,c
 23104  017B4C  220A               	addwfc	(btemp+9)^0,f,c
 23105  017B4E  500A               	movf	(btemp+9)^0,w,c
 23106  017B50  E106               	bnz	u8610
 23107  017B52  0E0A               	movlw	10
 23108  017B54  5C09               	subwf	(btemp+8)^0,w,c
 23109  017B56  B0D8               	btfsc	status,0,c
 23110  017B58  D002               	goto	u8610
 23111  017B5A  0E01               	movlw	1
 23112  017B5C  D001               	goto	u8620
 23113  017B5E                     u8610:
 23114  017B5E  0E00               	movlw	0
 23115  017B60                     u8620:
 23116  017B60  6E0B               	movwf	(btemp+10)^0,c
 23117  017B62  6A0C               	clrf	(btemp+11)^0,c
 23118                           
 23119                           ;stkvar	_atoi$6202 @ sp[(-9)+0]
 23120  017B64  0EF7               	movlw	-9
 23121  017B66  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23122  017B6C  0EF8               	movlw	-8
 23123  017B6E  0060  F033  FFE3   	movff	btemp+11,plusw1
 23124                           
 23125                           ;stkvar	_atoi$6202 @ sp[(-9)+0]
 23126  017B74  0EF7               	movlw	-9
 23127  017B76  006F FF8C  F001    	movff	plusw1,btemp
 23128  017B7C  0EF8               	movlw	-8
 23129  017B7E  50E3               	movf	plusw1,w,c
 23130  017B80  1001               	iorwf	btemp^0,w,c
 23131  017B82  A4D8               	btfss	status,2,c
 23132  017B84  D795               	goto	l9464
 23133                           
 23134                           ;stkvar	_neg @ sp[(-9)+7]
 23135  017B86  0EFE               	movlw	-2
 23136  017B88  006F FF8C  F001    	movff	plusw1,btemp
 23137  017B8E  0EFF               	movlw	-1
 23138  017B90  50E3               	movf	plusw1,w,c
 23139  017B92  1001               	iorwf	btemp^0,w,c
 23140  017B94  A4D8               	btfss	status,2,c
 23141  017B96  D00E               	goto	l9478
 23142                           
 23143                           ;stkvar	_n @ sp[(-9)+5]
 23144  017B98  0EFC               	movlw	-4
 23145  017B9A  006F FF8C  F001    	movff	plusw1,btemp
 23146  017BA0  1E01               	comf	btemp^0,f,c
 23147  017BA2  0EFD               	movlw	-3
 23148  017BA4  006F FF8C  F002    	movff	plusw1,btemp+1
 23149  017BAA  1E02               	comf	(btemp+1)^0,f,c
 23150  017BAC  2A01               	incf	btemp^0,f,c
 23151  017BAE  B4D8               	btfsc	status,2,c
 23152  017BB0  2A02               	incf	(btemp+1)^0,f,c
 23153  017BB2  D008               	goto	l3175
 23154  017BB4                     l9478:
 23155                           
 23156                           ;stkvar	_n @ sp[(-9)+5]
 23157  017BB4  0EFC               	movlw	-4
 23158  017BB6  006F FF8C  F001    	movff	plusw1,btemp
 23159  017BBC  0EFD               	movlw	-3
 23160  017BBE  006F FF8C  F002    	movff	plusw1,btemp+1
 23161  017BC4                     l3175:
 23162                           
 23163                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 23164  017BC4  0EF5               	movlw	245
 23165  017BC6  26E1               	addwf	fsr1l,f,c
 23166  017BC8  0EFF               	movlw	255
 23167  017BCA  22E2               	addwfc	fsr1h,f,c
 23168  017BCC  0012               	return		;funcret
 23169  017BCE                     __end_of_atoi:
 23170                           	opt callstack 0
 23171                           
 23172 ;; *************** function _isspace *****************
 23173 ;; Defined at:
 23174 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 23175 ;; Parameters:    Size  Location     Type
 23176 ;;  c               2  [STACK] int 
 23177 ;; Auto vars:     Size  Location     Type
 23178 ;;		None
 23179 ;; Return value:  Size  Location     Type
 23180 ;;                  2  [STACK] int 
 23181 ;; Registers used:
 23182 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 23183 ;; Tracked objects:
 23184 ;;		On entry : 0/0
 23185 ;;		On exit  : 0/0
 23186 ;;		Unchanged: 0/0
 23187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23192 ;;Total ram usage:        0 bytes
 23193 ;; Hardware stack levels used:    1
 23194 ;; Hardware stack levels required when called:   15
 23195 ;; This function calls:
 23196 ;;		Nothing
 23197 ;; This function is called by:
 23198 ;;		_atoi
 23199 ;; This function uses a reentrant model
 23200 ;;
 23201                           
 23202                           	psect	text82
 23203  01B53A                     __ptext82:
 23204                           	opt callstack 0
 23205  01B53A                     _isspace:
 23206                           	opt callstack 0
 23207                           
 23208                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23209  01B53A  52E6               	movf	postinc1,f,c
 23210                           
 23211                           ;stkvar	_isspace$6251 @ sp[(-1)+0]
 23212                           
 23213                           ;incstack = 0
 23214 ;; hardware stack exceeded
 23215  01B53C  0EFF               	movlw	-1
 23216  01B53E  6AE3               	clrf	plusw1,c
 23217  01B540  2AE3               	incf	plusw1,f,c
 23218                           
 23219                           ;stkvar	_c @ sp[(-1)+-2]
 23220  01B542  0EFD               	movlw	-3
 23221  01B544  006F FF8C  F001    	movff	plusw1,btemp
 23222  01B54A  0E20               	movlw	32
 23223  01B54C  1801               	xorwf	btemp^0,w,c
 23224  01B54E  E104               	bnz	u7480
 23225  01B550  0EFE               	movlw	-2
 23226  01B552  50E3               	movf	plusw1,w,c
 23227  01B554  B4D8               	btfsc	status,2,c
 23228  01B556  D012               	goto	l8862
 23229  01B558                     u7480:
 23230                           
 23231                           ;stkvar	_c @ sp[(-1)+-2]
 23232  01B558  0EFD               	movlw	-3
 23233  01B55A  50E3               	movf	plusw1,w,c
 23234  01B55C  0FF7               	addlw	247
 23235  01B55E  6E0B               	movwf	(btemp+10)^0,c
 23236  01B560  0EFE               	movlw	-2
 23237  01B562  006F FF8C  F00C    	movff	plusw1,btemp+11
 23238  01B568  0EFF               	movlw	255
 23239  01B56A  220C               	addwfc	(btemp+11)^0,f,c
 23240  01B56C  500C               	movf	(btemp+11)^0,w,c
 23241  01B56E  E104               	bnz	u7490
 23242  01B570  0E05               	movlw	5
 23243  01B572  5C0B               	subwf	(btemp+10)^0,w,c
 23244  01B574  A0D8               	btfss	status,0,c
 23245  01B576  D002               	goto	l8862
 23246  01B578                     u7490:
 23247                           
 23248                           ;stkvar	_isspace$6251 @ sp[(-1)+0]
 23249  01B578  0EFF               	movlw	-1
 23250  01B57A  6AE3               	clrf	plusw1,c
 23251  01B57C                     l8862:
 23252                           
 23253                           ;stkvar	_isspace$6251 @ sp[(-1)+0]
 23254  01B57C  0EFF               	movlw	-1
 23255  01B57E  50E3               	movf	plusw1,w,c
 23256  01B580  6E01               	movwf	btemp^0,c
 23257  01B582  6A02               	clrf	(btemp+1)^0,c
 23258                           
 23259                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 23260  01B584  52E5               	movf	postdec1,f,c
 23261  01B586  52E5               	movf	postdec1,f,c
 23262  01B588  52E5               	movf	postdec1,f,c
 23263  01B58A  0012               	return		;funcret
 23264  01B58C                     __end_of_isspace:
 23265                           	opt callstack 0
 23266                           
 23267 ;; *************** function _isdigit *****************
 23268 ;; Defined at:
 23269 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 23270 ;; Parameters:    Size  Location     Type
 23271 ;;  c               2  [STACK] int 
 23272 ;; Auto vars:     Size  Location     Type
 23273 ;;		None
 23274 ;; Return value:  Size  Location     Type
 23275 ;;                  2  [STACK] int 
 23276 ;; Registers used:
 23277 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 23278 ;; Tracked objects:
 23279 ;;		On entry : 0/0
 23280 ;;		On exit  : 0/0
 23281 ;;		Unchanged: 0/0
 23282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23287 ;;Total ram usage:        0 bytes
 23288 ;; Hardware stack levels used:    1
 23289 ;; Hardware stack levels required when called:   15
 23290 ;; This function calls:
 23291 ;;		Nothing
 23292 ;; This function is called by:
 23293 ;;		_vfpfcnvrt
 23294 ;;		_atoi
 23295 ;; This function uses a reentrant model
 23296 ;;
 23297                           
 23298                           	psect	text83
 23299  01BCC4                     __ptext83:
 23300                           	opt callstack 0
 23301  01BCC4                     _isdigit:
 23302                           	opt callstack 0
 23303                           
 23304                           ;stkvar	_c @ sp[(0)+-2]
 23305                           
 23306                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23307                           ;incstack = 0
 23308 ;; hardware stack exceeded
 23309  01BCC4  0EFE               	movlw	-2
 23310  01BCC6  50E3               	movf	plusw1,w,c
 23311  01BCC8  0FD0               	addlw	208
 23312  01BCCA  6E0B               	movwf	(btemp+10)^0,c
 23313  01BCCC  0EFF               	movlw	-1
 23314  01BCCE  006F FF8C  F00C    	movff	plusw1,btemp+11
 23315  01BCD4  0EFF               	movlw	255
 23316  01BCD6  220C               	addwfc	(btemp+11)^0,f,c
 23317  01BCD8  500C               	movf	(btemp+11)^0,w,c
 23318  01BCDA  E106               	bnz	u6330
 23319  01BCDC  0E0A               	movlw	10
 23320  01BCDE  5C0B               	subwf	(btemp+10)^0,w,c
 23321  01BCE0  B0D8               	btfsc	status,0,c
 23322  01BCE2  D002               	goto	u6330
 23323  01BCE4  0E01               	movlw	1
 23324  01BCE6  D001               	goto	u6340
 23325  01BCE8                     u6330:
 23326  01BCE8  0E00               	movlw	0
 23327  01BCEA                     u6340:
 23328  01BCEA  6E01               	movwf	btemp^0,c
 23329  01BCEC  6A02               	clrf	(btemp+1)^0,c
 23330                           
 23331                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 23332  01BCEE  52E5               	movf	postdec1,f,c
 23333  01BCF0  52E5               	movf	postdec1,f,c
 23334  01BCF2  0012               	return		;funcret
 23335  01BCF4                     __end_of_isdigit:
 23336                           	opt callstack 0
 23337                           
 23338 ;; *************** function _set_vterm *****************
 23339 ;; Defined at:
 23340 ;;		line 107 in file "mconfig.c"
 23341 ;; Parameters:    Size  Location     Type
 23342 ;;  vterm           1  [STACK] const unsigned char 
 23343 ;; Auto vars:     Size  Location     Type
 23344 ;;		None
 23345 ;; Return value:  Size  Location     Type
 23346 ;;                  1  [STACK] unsigned char 
 23347 ;; Registers used:
 23348 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 23349 ;; Tracked objects:
 23350 ;;		On entry : 0/1
 23351 ;;		On exit  : 0/0
 23352 ;;		Unchanged: 0/0
 23353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23358 ;;Total ram usage:        0 bytes
 23359 ;; Hardware stack levels used:    1
 23360 ;; Hardware stack levels required when called:   15
 23361 ;; This function calls:
 23362 ;;		Nothing
 23363 ;; This function is called by:
 23364 ;;		_main
 23365 ;;		_check_help
 23366 ;; This function uses a reentrant model
 23367 ;;
 23368                           
 23369                           	psect	text84
 23370  01C1C4                     __ptext84:
 23371                           	opt callstack 0
 23372  01C1C4                     _set_vterm:
 23373                           	opt callstack 15
 23374                           
 23375                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 23376                           ;stkvar	_vterm @ sp[(0)+-1]
 23377                           
 23378                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23379                           ;incstack = 0
 23380  01C1C4  0EFF               	movlw	-1
 23381  01C1C6  006F FF8C  F00C    	movff	plusw1,btemp+11
 23382  01C1CC  0E03               	movlw	3
 23383  01C1CE  160C               	andwf	(btemp+11)^0,f,c
 23384  01C1D0  EE22  F20A         	lfsr	2,_D+480
 23385  01C1D4  50DF               	movf	223,w,c
 23386  01C1D6  180C               	xorwf	(btemp+11)^0,w,c
 23387  01C1D8  0BFE               	andlw	-2
 23388  01C1DA  180C               	xorwf	(btemp+11)^0,w,c
 23389  01C1DC  6EDF               	movwf	223,c
 23390                           
 23391                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 23392  01C1DE  52E5               	movf	postdec1,f,c
 23393  01C1E0  0012               	return		;funcret
 23394  01C1E2                     __end_of_set_vterm:
 23395                           	opt callstack 0
 23396                           
 23397 ;; *************** function _set_temp_display_help *****************
 23398 ;; Defined at:
 23399 ;;		line 211 in file "mconfig.c"
 23400 ;; Parameters:    Size  Location     Type
 23401 ;;  new_response    1  [STACK] const enum E16509
 23402 ;; Auto vars:     Size  Location     Type
 23403 ;;		None
 23404 ;; Return value:  Size  Location     Type
 23405 ;;                  1  [STACK] enum E16509
 23406 ;; Registers used:
 23407 ;;		wreg, fsr1l, fsr1h
 23408 ;; Tracked objects:
 23409 ;;		On entry : 0/1
 23410 ;;		On exit  : 3F/1
 23411 ;;		Unchanged: 0/0
 23412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23417 ;;Total ram usage:        0 bytes
 23418 ;; Hardware stack levels used:    1
 23419 ;; Hardware stack levels required when called:   15
 23420 ;; This function calls:
 23421 ;;		Nothing
 23422 ;; This function is called by:
 23423 ;;		_check_help
 23424 ;; This function uses a reentrant model
 23425 ;;
 23426                           
 23427                           	psect	text85
 23428  01C33A                     __ptext85:
 23429                           	opt callstack 0
 23430  01C33A                     _set_temp_display_help:
 23431                           	opt callstack 14
 23432                           
 23433                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 23434                           
 23435                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23436                           ;incstack = 0
 23437  01C33A  0101               	movlb	1	; () banked
 23438  01C33C  51AC               	movf	(_V+165)& (0+255),w,b	;volatile
 23439                           
 23440                           ; BSR set to: 1
 23441                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 23442                           ;stkvar	_new_response_info @ sp[(0)+-1]
 23443  01C33E  0EFF               	movlw	-1
 23444  01C340  006F FF8C  F1AC    	movff	plusw1,_V+165	;volatile
 23445                           
 23446                           ; BSR set to: 1
 23447                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 23448  01C346  52E5               	movf	postdec1,f,c
 23449  01C348  0012               	return		;funcret
 23450  01C34A                     __end_of_set_temp_display_help:
 23451                           	opt callstack 0
 23452                           
 23453 ;; *************** function _set_display_info *****************
 23454 ;; Defined at:
 23455 ;;		line 200 in file "mconfig.c"
 23456 ;; Parameters:    Size  Location     Type
 23457 ;;  new_response    1  [STACK] const enum E16509
 23458 ;; Auto vars:     Size  Location     Type
 23459 ;;		None
 23460 ;; Return value:  Size  Location     Type
 23461 ;;                  1  [STACK] enum E16994
 23462 ;; Registers used:
 23463 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 23464 ;; Tracked objects:
 23465 ;;		On entry : 0/1
 23466 ;;		On exit  : 0/0
 23467 ;;		Unchanged: 0/0
 23468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23473 ;;Total ram usage:        0 bytes
 23474 ;; Hardware stack levels used:    1
 23475 ;; Hardware stack levels required when called:   16
 23476 ;; This function calls:
 23477 ;;		_TimerDone
 23478 ;; This function is called by:
 23479 ;;		_main
 23480 ;;		_check_help
 23481 ;; This function uses a reentrant model
 23482 ;;
 23483                           
 23484                           	psect	text86
 23485  01C1E2                     __ptext86:
 23486                           	opt callstack 0
 23487  01C1E2                     _set_display_info:
 23488                           	opt callstack 14
 23489                           
 23490                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 23491                           
 23492                           ; BSR set to: 1
 23493                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23494                           ;incstack = 0
 23495  01C1E2  0E07               	movlw	7
 23496  01C1E4  6EE6               	movwf	postinc1,c
 23497  01C1E6  ECFD  F0DE         	call	_TimerDone	;wreg free
 23498  01C1EA  5001               	movf	btemp^0,w,c
 23499  01C1EC  B4D8               	btfsc	status,2,c
 23500  01C1EE  D006               	goto	l1733
 23501                           
 23502                           ;mconfig.c: 205:   old_info = V.response.info;
 23503  01C1F0  0101               	movlb	1	; () banked
 23504  01C1F2  51AB               	movf	(_V+164)& (0+255),w,b	;volatile
 23505                           
 23506                           ; BSR set to: 1
 23507                           ;mconfig.c: 206:   V.response.info = new_response_info;
 23508                           ;stkvar	_new_response_info @ sp[(0)+-1]
 23509  01C1F4  0EFF               	movlw	-1
 23510  01C1F6  006F FF8C  F1AB    	movff	plusw1,_V+164	;volatile
 23511  01C1FC                     l1733:
 23512                           
 23513                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 23514  01C1FC  52E5               	movf	postdec1,f,c
 23515  01C1FE  0012               	return		;funcret
 23516  01C200                     __end_of_set_display_info:
 23517                           	opt callstack 0
 23518                           
 23519 ;; *************** function _mode_lamp_dim *****************
 23520 ;; Defined at:
 23521 ;;		line 13 in file "mconfig.c"
 23522 ;; Parameters:    Size  Location     Type
 23523 ;;  level           2  [STACK] const unsigned short 
 23524 ;; Auto vars:     Size  Location     Type
 23525 ;;		None
 23526 ;; Return value:  Size  Location     Type
 23527 ;;                  1  [STACK] void 
 23528 ;; Registers used:
 23529 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23530 ;; Tracked objects:
 23531 ;;		On entry : 0/1
 23532 ;;		On exit  : 0/0
 23533 ;;		Unchanged: 0/0
 23534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23539 ;;Total ram usage:        0 bytes
 23540 ;; Hardware stack levels used:    1
 23541 ;; Hardware stack levels required when called:   16
 23542 ;; This function calls:
 23543 ;;		_PWM8_LoadDutyValue
 23544 ;; This function is called by:
 23545 ;;		_main
 23546 ;;		_check_help
 23547 ;; This function uses a reentrant model
 23548 ;;
 23549                           
 23550                           	psect	text87
 23551  01C26E                     __ptext87:
 23552                           	opt callstack 0
 23553  01C26E                     _mode_lamp_dim:
 23554                           	opt callstack 14
 23555                           
 23556                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 23557                           ;stkvar	_level @ sp[(0)+-2]
 23558                           
 23559                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23560                           ;incstack = 0
 23561  01C26E  0EFE               	movlw	-2
 23562  01C270  006F FF8F FFE6     	movff	plusw1,postinc1
 23563  01C276  006F FF8F FFE6     	movff	plusw1,postinc1
 23564  01C27C  EC7B  F0DC         	call	_PWM8_LoadDutyValue	;wreg free
 23565                           
 23566                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 23567  01C280  52E5               	movf	postdec1,f,c
 23568  01C282  52E5               	movf	postdec1,f,c
 23569  01C284  0012               	return		;funcret
 23570  01C286                     __end_of_mode_lamp_dim:
 23571                           	opt callstack 0
 23572                           
 23573 ;; *************** function _mode_lamp_bright *****************
 23574 ;; Defined at:
 23575 ;;		line 18 in file "mconfig.c"
 23576 ;; Parameters:    Size  Location     Type
 23577 ;;		None
 23578 ;; Auto vars:     Size  Location     Type
 23579 ;;		None
 23580 ;; Return value:  Size  Location     Type
 23581 ;;                  1  [STACK] void 
 23582 ;; Registers used:
 23583 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23584 ;; Tracked objects:
 23585 ;;		On entry : 0/0
 23586 ;;		On exit  : 0/0
 23587 ;;		Unchanged: 0/0
 23588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23593 ;;Total ram usage:        0 bytes
 23594 ;; Hardware stack levels used:    1
 23595 ;; Hardware stack levels required when called:   16
 23596 ;; This function calls:
 23597 ;;		_PWM8_LoadDutyValue
 23598 ;; This function is called by:
 23599 ;;		_check_help
 23600 ;; This function uses a reentrant model
 23601 ;;
 23602                           
 23603                           	psect	text88
 23604  01C368                     __ptext88:
 23605                           	opt callstack 0
 23606  01C368                     _mode_lamp_bright:
 23607                           	opt callstack 13
 23608                           
 23609                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 23610                           
 23611                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23612                           ;incstack = 0
 23613  01C368  0E2C               	movlw	44
 23614  01C36A  6EE6               	movwf	postinc1,c
 23615  01C36C  0E01               	movlw	1
 23616  01C36E  6EE6               	movwf	postinc1,c
 23617  01C370  EC7B  F0DC         	call	_PWM8_LoadDutyValue	;wreg free
 23618                           
 23619                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23620  01C374  0012               	return		;funcret
 23621  01C376                     __end_of_mode_lamp_bright:
 23622                           	opt callstack 0
 23623                           
 23624 ;; *************** function _PWM8_LoadDutyValue *****************
 23625 ;; Defined at:
 23626 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 23627 ;; Parameters:    Size  Location     Type
 23628 ;;  dutyValue       2  [STACK] unsigned short 
 23629 ;; Auto vars:     Size  Location     Type
 23630 ;;		None
 23631 ;; Return value:  Size  Location     Type
 23632 ;;                  1  [STACK] void 
 23633 ;; Registers used:
 23634 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23635 ;; Tracked objects:
 23636 ;;		On entry : 0/1
 23637 ;;		On exit  : 0/0
 23638 ;;		Unchanged: 0/0
 23639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23644 ;;Total ram usage:        0 bytes
 23645 ;; Hardware stack levels used:    1
 23646 ;; Hardware stack levels required when called:   15
 23647 ;; This function calls:
 23648 ;;		Nothing
 23649 ;; This function is called by:
 23650 ;;		_mode_lamp_dim
 23651 ;;		_mode_lamp_bright
 23652 ;; This function uses a reentrant model
 23653 ;;
 23654                           
 23655                           	psect	text89
 23656  01B8F6                     __ptext89:
 23657                           	opt callstack 0
 23658  01B8F6                     _PWM8_LoadDutyValue:
 23659                           	opt callstack 14
 23660                           
 23661                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 23662                           ;stkvar	_dutyValue @ sp[(0)+-2]
 23663                           
 23664                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23665                           ;incstack = 0
 23666  01B8F6  0EFE               	movlw	-2
 23667  01B8F8  006F FF8C  F00B    	movff	plusw1,btemp+10
 23668  01B8FE  0EFF               	movlw	-1
 23669  01B900  006F FF8C  F00C    	movff	plusw1,btemp+11
 23670  01B906  90D8               	bcf	status,0,c
 23671  01B908  320C               	rrcf	(btemp+11)^0,f,c
 23672  01B90A  320B               	rrcf	(btemp+10)^0,f,c
 23673  01B90C  90D8               	bcf	status,0,c
 23674  01B90E  320C               	rrcf	(btemp+11)^0,f,c
 23675  01B910  320B               	rrcf	(btemp+10)^0,f,c
 23676  01B912  500B               	movf	(btemp+10)^0,w,c
 23677  01B914  6E61               	movwf	97,c	;volatile
 23678                           
 23679                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 23680                           ;stkvar	_dutyValue @ sp[(0)+-2]
 23681  01B916  0EFE               	movlw	-2
 23682  01B918  006F FF8C  F00C    	movff	plusw1,btemp+11
 23683  01B91E  0E03               	movlw	3
 23684  01B920  160C               	andwf	(btemp+11)^0,f,c
 23685  01B922  0E06               	movlw	6
 23686  01B924  6E01               	movwf	btemp^0,c
 23687  01B926                     u9425:
 23688  01B926  90D8               	bcf	status,0,c
 23689  01B928  360C               	rlcf	(btemp+11)^0,f,c
 23690  01B92A  2E01               	decfsz	btemp^0,f,c
 23691  01B92C  D7FC               	goto	u9425
 23692  01B92E  500C               	movf	(btemp+11)^0,w,c
 23693  01B930  6E60               	movwf	96,c	;volatile
 23694                           
 23695                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 23696  01B932  52E5               	movf	postdec1,f,c
 23697  01B934  52E5               	movf	postdec1,f,c
 23698  01B936  0012               	return		;funcret
 23699  01B938                     __end_of_PWM8_LoadDutyValue:
 23700                           	opt callstack 0
 23701                           
 23702 ;; *************** function _help_button *****************
 23703 ;; Defined at:
 23704 ;;		line 26 in file "mconfig.c"
 23705 ;; Parameters:    Size  Location     Type
 23706 ;;		None
 23707 ;; Auto vars:     Size  Location     Type
 23708 ;;		None
 23709 ;; Return value:  Size  Location     Type
 23710 ;;                  1  [STACK] _Bool 
 23711 ;; Registers used:
 23712 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23713 ;; Tracked objects:
 23714 ;;		On entry : 0/1
 23715 ;;		On exit  : 0/0
 23716 ;;		Unchanged: 0/0
 23717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23722 ;;Total ram usage:        0 bytes
 23723 ;; Hardware stack levels used:    1
 23724 ;; Hardware stack levels required when called:   16
 23725 ;; This function calls:
 23726 ;;		_StartTimer
 23727 ;;		_TimerDone
 23728 ;; This function is called by:
 23729 ;;		_check_help
 23730 ;; This function uses a reentrant model
 23731 ;;
 23732                           
 23733                           	psect	text90
 23734  01BAF0                     __ptext90:
 23735                           	opt callstack 0
 23736  01BAF0                     _help_button:
 23737                           	opt callstack 13
 23738                           
 23739                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 23740                           
 23741                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23742                           ;incstack = 0
 23743  01BAF0  B0CB               	btfsc	203,0,c	;volatile
 23744  01BAF2  D00C               	goto	l1676
 23745                           
 23746                           ;mconfig.c: 29:   V.help = 1;
 23747  01BAF4  0101               	movlb	1	; () banked
 23748  01BAF6  85A2               	bsf	(_V+155)& (0+255),2,b	;volatile
 23749                           
 23750                           ; BSR set to: 1
 23751                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 23752  01BAF8  0E08               	movlw	8
 23753  01BAFA  6EE6               	movwf	postinc1,c
 23754  01BAFC  ECFD  F0DE         	call	_TimerDone	;wreg free
 23755  01BB00  5001               	movf	btemp^0,w,c
 23756  01BB02  B4D8               	btfsc	status,2,c
 23757  01BB04  D003               	goto	l1676
 23758                           
 23759                           ;mconfig.c: 31:    return 1;
 23760  01BB06  0E01               	movlw	1
 23761  01BB08  6E01               	movwf	btemp^0,c
 23762  01BB0A  0012               	return	
 23763  01BB0C                     l1676:
 23764                           
 23765                           ;mconfig.c: 34:  if (!V.help)
 23766  01BB0C  0101               	movlb	1	; () banked
 23767  01BB0E  B5A2               	btfsc	(_V+155)& (0+255),2,b	;volatile
 23768  01BB10  D008               	goto	l10590
 23769                           
 23770                           ; BSR set to: 1
 23771                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 23772  01BB12  0E2C               	movlw	44
 23773  01BB14  6EE6               	movwf	postinc1,c
 23774  01BB16  0E01               	movlw	1
 23775  01BB18  6EE6               	movwf	postinc1,c
 23776  01BB1A  0E08               	movlw	8
 23777  01BB1C  6EE6               	movwf	postinc1,c
 23778  01BB1E  ECDC  F0DC         	call	_StartTimer	;wreg free
 23779  01BB22                     l10590:
 23780                           
 23781                           ;mconfig.c: 37:  return 0;
 23782  01BB22  0E00               	movlw	0
 23783  01BB24  6E01               	movwf	btemp^0,c
 23784                           
 23785                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 23786  01BB26  0012               	return		;funcret
 23787  01BB28                     __end_of_help_button:
 23788                           	opt callstack 0
 23789                           
 23790 ;; *************** function _TimerDone *****************
 23791 ;; Defined at:
 23792 ;;		line 20 in file "timers.c"
 23793 ;; Parameters:    Size  Location     Type
 23794 ;;  timer           1  [STACK] const unsigned char 
 23795 ;; Auto vars:     Size  Location     Type
 23796 ;;		None
 23797 ;; Return value:  Size  Location     Type
 23798 ;;                  1  [STACK] _Bool 
 23799 ;; Registers used:
 23800 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 23801 ;; Tracked objects:
 23802 ;;		On entry : 0/1
 23803 ;;		On exit  : 0/0
 23804 ;;		Unchanged: 0/0
 23805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23810 ;;Total ram usage:        0 bytes
 23811 ;; Hardware stack levels used:    1
 23812 ;; Hardware stack levels required when called:   15
 23813 ;; This function calls:
 23814 ;;		Nothing
 23815 ;; This function is called by:
 23816 ;;		_main
 23817 ;;		_WaitMs
 23818 ;;		_help_button
 23819 ;;		_check_help
 23820 ;;		_set_display_info
 23821 ;;		_update_adc_result
 23822 ;;		_esr_check
 23823 ;; This function uses a reentrant model
 23824 ;;
 23825                           
 23826                           	psect	text91
 23827  01BDFA                     __ptext91:
 23828                           	opt callstack 0
 23829  01BDFA                     _TimerDone:
 23830                           	opt callstack 14
 23831                           
 23832                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23833                           ;incstack = 0
 23834  01BDFA  0004               	clrwdt		;# 
 23835                           
 23836                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 23837                           ;stkvar	_timer @ sp[(0)+-1]
 23838  01BDFC  0EFF               	movlw	-1
 23839  01BDFE  50E3               	movf	plusw1,w,c
 23840  01BE00  0D02               	mullw	2
 23841  01BE02  0E7D               	movlw	low _tickCount
 23842  01BE04  24F3               	addwf	243,w,c
 23843  01BE06  6ED9               	movwf	fsr2l,c
 23844  01BE08  0E02               	movlw	high _tickCount
 23845  01BE0A  20F4               	addwfc	prodh,w,c
 23846  01BE0C  6EDA               	movwf	fsr2h,c
 23847  01BE0E  50DE               	movf	postinc2,w,c
 23848  01BE10  10DE               	iorwf	postinc2,w,c
 23849  01BE12  A4D8               	btfss	status,2,c
 23850  01BE14  D002               	goto	l9876
 23851                           
 23852                           ;timers.c: 24:   return 1;
 23853  01BE16  0E01               	movlw	1
 23854  01BE18  D001               	goto	L28
 23855  01BE1A                     l9876:
 23856                           
 23857                           ;timers.c: 26:  return 0;
 23858  01BE1A  0E00               	movlw	0
 23859  01BE1C                     L28:
 23860  01BE1C  6E01               	movwf	btemp^0,c
 23861                           
 23862                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 23863  01BE1E  52E5               	movf	postdec1,f,c
 23864  01BE20  0012               	return		;funcret
 23865  01BE22                     __end_of_TimerDone:
 23866                           	opt callstack 0
 23867                           
 23868 ;; *************** function _StartTimer *****************
 23869 ;; Defined at:
 23870 ;;		line 12 in file "timers.c"
 23871 ;; Parameters:    Size  Location     Type
 23872 ;;  timer           1  [STACK] const unsigned char 
 23873 ;;  count           2  [STACK] const unsigned short 
 23874 ;; Auto vars:     Size  Location     Type
 23875 ;;		None
 23876 ;; Return value:  Size  Location     Type
 23877 ;;                  1  [STACK] void 
 23878 ;; Registers used:
 23879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23880 ;; Tracked objects:
 23881 ;;		On entry : 0/0
 23882 ;;		On exit  : 0/0
 23883 ;;		Unchanged: 0/0
 23884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23889 ;;Total ram usage:        0 bytes
 23890 ;; Hardware stack levels used:    1
 23891 ;; Hardware stack levels required when called:   15
 23892 ;; This function calls:
 23893 ;;		Nothing
 23894 ;; This function is called by:
 23895 ;;		_main
 23896 ;;		_WaitMs
 23897 ;;		_help_button
 23898 ;;		_check_help
 23899 ;;		_update_adc_result
 23900 ;;		_calc_bsoc
 23901 ;;		_esr_check
 23902 ;; This function uses a reentrant model
 23903 ;;
 23904                           
 23905                           	psect	text92
 23906  01B9B8                     __ptext92:
 23907                           	opt callstack 0
 23908  01B9B8                     _StartTimer:
 23909                           	opt callstack 0
 23910                           
 23911                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 23912                           ;stkvar	_count @ sp[(0)+-3]
 23913                           
 23914                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23915                           ;incstack = 0
 23916 ;; hardware stack exceeded
 23917  01B9B8  0EFD               	movlw	-3
 23918  01B9BA  006F FF8C  F00B    	movff	plusw1,btemp+10
 23919  01B9C0  0EFE               	movlw	-2
 23920  01B9C2  006F FF8C  F00C    	movff	plusw1,btemp+11
 23921  01B9C8  90D8               	bcf	status,0,c
 23922  01B9CA  340B               	rlcf	(btemp+10)^0,w,c
 23923  01B9CC  6E09               	movwf	(btemp+8)^0,c
 23924  01B9CE  340C               	rlcf	(btemp+11)^0,w,c
 23925  01B9D0  6E0A               	movwf	(btemp+9)^0,c
 23926                           
 23927                           ;stkvar	_timer @ sp[(0)+-1]
 23928  01B9D2  0EFF               	movlw	-1
 23929  01B9D4  50E3               	movf	plusw1,w,c
 23930  01B9D6  0D02               	mullw	2
 23931  01B9D8  0E7D               	movlw	low _tickCount
 23932  01B9DA  24F3               	addwf	243,w,c
 23933  01B9DC  6ED9               	movwf	fsr2l,c
 23934  01B9DE  0E02               	movlw	high _tickCount
 23935  01B9E0  20F4               	addwfc	prodh,w,c
 23936  01B9E2  6EDA               	movwf	fsr2h,c
 23937  01B9E4  0060  F027  FFDE   	movff	btemp+8,postinc2
 23938  01B9EA  0060  F02B  FFDD   	movff	btemp+9,postdec2
 23939                           
 23940                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 23941  01B9F0  52E5               	movf	postdec1,f,c
 23942  01B9F2  52E5               	movf	postdec1,f,c
 23943  01B9F4  52E5               	movf	postdec1,f,c
 23944  01B9F6  0012               	return		;funcret
 23945  01B9F8                     __end_of_StartTimer:
 23946                           	opt callstack 0
 23947                           
 23948 ;; *************** function _display_info *****************
 23949 ;; Defined at:
 23950 ;;		line 190 in file "mconfig.c"
 23951 ;; Parameters:    Size  Location     Type
 23952 ;;		None
 23953 ;; Auto vars:     Size  Location     Type
 23954 ;;		None
 23955 ;; Return value:  Size  Location     Type
 23956 ;;                  1  [STACK] enum E16509
 23957 ;; Registers used:
 23958 ;;		btemp
 23959 ;; Tracked objects:
 23960 ;;		On entry : 0/1
 23961 ;;		On exit  : 0/0
 23962 ;;		Unchanged: 0/0
 23963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23968 ;;Total ram usage:        0 bytes
 23969 ;; Hardware stack levels used:    1
 23970 ;; Hardware stack levels required when called:   15
 23971 ;; This function calls:
 23972 ;;		Nothing
 23973 ;; This function is called by:
 23974 ;;		_check_help
 23975 ;; This function uses a reentrant model
 23976 ;;
 23977                           
 23978                           	psect	text93
 23979  01C3DA                     __ptext93:
 23980                           	opt callstack 0
 23981  01C3DA                     _display_info:
 23982                           	opt callstack 14
 23983                           
 23984                           ;mconfig.c: 192:  return V.response.info;
 23985                           
 23986                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23987                           ;incstack = 0
 23988  01C3DA  0060  F6AC  F001   	movff	_V+164,btemp	;volatile
 23989                           
 23990                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 23991  01C3E0  0012               	return		;funcret
 23992  01C3E2                     __end_of_display_info:
 23993                           	opt callstack 0
 23994                           
 23995 ;; *************** function _display_help *****************
 23996 ;; Defined at:
 23997 ;;		line 195 in file "mconfig.c"
 23998 ;; Parameters:    Size  Location     Type
 23999 ;;		None
 24000 ;; Auto vars:     Size  Location     Type
 24001 ;;		None
 24002 ;; Return value:  Size  Location     Type
 24003 ;;                  1  [STACK] enum E16509
 24004 ;; Registers used:
 24005 ;;		btemp
 24006 ;; Tracked objects:
 24007 ;;		On entry : 3F/1
 24008 ;;		On exit  : 0/0
 24009 ;;		Unchanged: 0/0
 24010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24015 ;;Total ram usage:        0 bytes
 24016 ;; Hardware stack levels used:    1
 24017 ;; Hardware stack levels required when called:   15
 24018 ;; This function calls:
 24019 ;;		Nothing
 24020 ;; This function is called by:
 24021 ;;		_check_help
 24022 ;; This function uses a reentrant model
 24023 ;;
 24024                           
 24025                           	psect	text94
 24026  01C3E2                     __ptext94:
 24027                           	opt callstack 0
 24028  01C3E2                     _display_help:
 24029                           	opt callstack 14
 24030                           
 24031                           ;mconfig.c: 197:  return V.response.help_temp;
 24032                           
 24033                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24034                           ;incstack = 0
 24035  01C3E2  0060  F6B0  F001   	movff	_V+165,btemp	;volatile
 24036                           
 24037                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 24038  01C3E8  0012               	return		;funcret
 24039  01C3EA                     __end_of_display_help:
 24040                           	opt callstack 0
 24041                           
 24042 ;; *************** function _check_enter_button *****************
 24043 ;; Defined at:
 24044 ;;		line 42 in file "hid.c"
 24045 ;; Parameters:    Size  Location     Type
 24046 ;;  h               2  [STACK] PTR struct H_data
 24047 ;;		 -> H(7), 
 24048 ;; Auto vars:     Size  Location     Type
 24049 ;;		None
 24050 ;; Return value:  Size  Location     Type
 24051 ;;                  1  [STACK] _Bool 
 24052 ;; Registers used:
 24053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 24054 ;; Tracked objects:
 24055 ;;		On entry : 0/0
 24056 ;;		On exit  : 0/0
 24057 ;;		Unchanged: 0/0
 24058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24063 ;;Total ram usage:        0 bytes
 24064 ;; Hardware stack levels used:    1
 24065 ;; Hardware stack levels required when called:   15
 24066 ;; This function calls:
 24067 ;;		Nothing
 24068 ;; This function is called by:
 24069 ;;		_main
 24070 ;; This function uses a reentrant model
 24071 ;;
 24072                           
 24073                           	psect	text95
 24074  01B08C                     __ptext95:
 24075                           	opt callstack 0
 24076  01B08C                     _check_enter_button:
 24077                           	opt callstack 15
 24078                           
 24079                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 24080                           ;stkvar	_h @ sp[(0)+-2]
 24081                           
 24082                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24083                           ;incstack = 0
 24084  01B08C  0EFE               	movlw	-2
 24085  01B08E  006F FF8C  F00B    	movff	plusw1,btemp+10
 24086  01B094  0EFF               	movlw	-1
 24087  01B096  006F FF8C  F00C    	movff	plusw1,btemp+11
 24088  01B09C  0E04               	movlw	4
 24089  01B09E  240B               	addwf	(btemp+10)^0,w,c
 24090  01B0A0  6ED9               	movwf	fsr2l,c
 24091  01B0A2  0E00               	movlw	0
 24092  01B0A4  200C               	addwfc	(btemp+11)^0,w,c
 24093  01B0A6  6EDA               	movwf	fsr2h,c
 24094  01B0A8  50DF               	movf	indf2,w,c
 24095  01B0AA  A4D8               	btfss	status,2,c
 24096  01B0AC  D023               	goto	l13206
 24097                           
 24098                           ;stkvar	_h @ sp[(0)+-2]
 24099  01B0AE  0EFE               	movlw	-2
 24100  01B0B0  006F FF8C  F00B    	movff	plusw1,btemp+10
 24101  01B0B6  0EFF               	movlw	-1
 24102  01B0B8  006F FF8C  F00C    	movff	plusw1,btemp+11
 24103  01B0BE  0E05               	movlw	5
 24104  01B0C0  240B               	addwf	(btemp+10)^0,w,c
 24105  01B0C2  6ED9               	movwf	fsr2l,c
 24106  01B0C4  0E00               	movlw	0
 24107  01B0C6  200C               	addwfc	(btemp+11)^0,w,c
 24108  01B0C8  6EDA               	movwf	fsr2h,c
 24109  01B0CA  50DF               	movf	indf2,w,c
 24110  01B0CC  A4D8               	btfss	status,2,c
 24111  01B0CE  D012               	goto	l13206
 24112                           
 24113                           ;hid.c: 45:   h->wait_enter = 1;
 24114                           ;stkvar	_h @ sp[(0)+-2]
 24115  01B0D0  0EFE               	movlw	-2
 24116  01B0D2  006F FF8C  F00B    	movff	plusw1,btemp+10
 24117  01B0D8  0EFF               	movlw	-1
 24118  01B0DA  006F FF8C  F00C    	movff	plusw1,btemp+11
 24119  01B0E0  0E04               	movlw	4
 24120  01B0E2  240B               	addwf	(btemp+10)^0,w,c
 24121  01B0E4  6ED9               	movwf	fsr2l,c
 24122  01B0E6  0E00               	movlw	0
 24123  01B0E8  200C               	addwfc	(btemp+11)^0,w,c
 24124  01B0EA  6EDA               	movwf	fsr2h,c
 24125  01B0EC  0E01               	movlw	1
 24126  01B0EE  6EDF               	movwf	indf2,c
 24127                           
 24128                           ;hid.c: 46:   return 1;
 24129  01B0F0  0E01               	movlw	1
 24130  01B0F2  D001               	goto	L29
 24131  01B0F4                     l13206:
 24132                           
 24133                           ;hid.c: 48:  return 0;
 24134  01B0F4  0E00               	movlw	0
 24135  01B0F6                     L29:
 24136  01B0F6  6E01               	movwf	btemp^0,c
 24137                           
 24138                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 24139  01B0F8  52E5               	movf	postdec1,f,c
 24140  01B0FA  52E5               	movf	postdec1,f,c
 24141  01B0FC  0012               	return		;funcret
 24142  01B0FE                     __end_of_check_enter_button:
 24143                           	opt callstack 0
 24144                           
 24145 ;; *************** function _calc_ror_data *****************
 24146 ;; Defined at:
 24147 ;;		line 102 in file "mbmc.c"
 24148 ;; Parameters:    Size  Location     Type
 24149 ;;		None
 24150 ;; Auto vars:     Size  Location     Type
 24151 ;;		None
 24152 ;; Return value:  Size  Location     Type
 24153 ;;                  1  [STACK] void 
 24154 ;; Registers used:
 24155 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24156 ;; Tracked objects:
 24157 ;;		On entry : 0/39
 24158 ;;		On exit  : 0/0
 24159 ;;		Unchanged: 0/0
 24160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24165 ;;Total ram usage:        0 bytes
 24166 ;; Hardware stack levels used:    1
 24167 ;; Hardware stack levels required when called:   18
 24168 ;; This function calls:
 24169 ;;		___flge
 24170 ;;		___flsub
 24171 ;;		_conv_raw_result
 24172 ;;		_fabsf
 24173 ;; This function is called by:
 24174 ;;		_main
 24175 ;; This function uses a reentrant model
 24176 ;;
 24177                           
 24178                           	psect	text96
 24179  018D58                     __ptext96:
 24180                           	opt callstack 0
 24181  018D58                     _calc_ror_data:
 24182                           	opt callstack 12
 24183                           
 24184                           ;mbmc.c: 104:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 106:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 24185                           
 24186                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24187                           ;incstack = 0
 24188  018D58  0060  F1A3  FFE6   	movff	calc_ror_data@bcror,postinc1
 24189  018D5E  0060  F1A7  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 24190  018D64  0060  F1AB  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 24191  018D6A  0060  F1AF  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 24192  018D70  0E00               	movlw	0
 24193  018D72  6EE6               	movwf	postinc1,c
 24194  018D74  0E00               	movlw	0
 24195  018D76  6EE6               	movwf	postinc1,c
 24196  018D78  EC73  F0A9         	call	_conv_raw_result	;wreg free
 24197  018D7C  0060  F007  FFE6   	movff	btemp,postinc1
 24198  018D82  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24199  018D88  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24200  018D8E  0060  F013  FFE6   	movff	btemp+3,postinc1
 24201  018D94  EC36  F0DC         	call	___flsub	;wreg free
 24202  018D98  0060  F007  FFE6   	movff	btemp,postinc1
 24203  018D9E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24204  018DA4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24205  018DAA  0060  F013  FFE6   	movff	btemp+3,postinc1
 24206  018DB0  ECA0  F0D3         	call	_fabsf	;wreg free
 24207  018DB4  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 24208  018DBA  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 24209  018DC0  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 24210  018DC6  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 24211                           
 24212                           ;mbmc.c: 107:  bcror = conv_raw_result(C_BATT, CONV);
 24213  018DCC  0E00               	movlw	0
 24214  018DCE  6EE6               	movwf	postinc1,c
 24215  018DD0  0E00               	movlw	0
 24216  018DD2  6EE6               	movwf	postinc1,c
 24217  018DD4  EC73  F0A9         	call	_conv_raw_result	;wreg free
 24218  018DD8  0060  F004  F068   	movff	btemp,calc_ror_data@bcror
 24219  018DDE  0060  F008  F069   	movff	btemp+1,calc_ror_data@bcror+1
 24220  018DE4  0060  F00C  F06A   	movff	btemp+2,calc_ror_data@bcror+2
 24221  018DEA  0060  F010  F06B   	movff	btemp+3,calc_ror_data@bcror+3
 24222                           
 24223                           ;mbmc.c: 108:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 24224  018DF0  0060  F1B3  FFE6   	movff	calc_ror_data@bvror,postinc1
 24225  018DF6  0060  F1B7  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 24226  018DFC  0060  F1BB  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 24227  018E02  0060  F1BF  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 24228  018E08  0E00               	movlw	0
 24229  018E0A  6EE6               	movwf	postinc1,c
 24230  018E0C  0E04               	movlw	4
 24231  018E0E  6EE6               	movwf	postinc1,c
 24232  018E10  EC73  F0A9         	call	_conv_raw_result	;wreg free
 24233  018E14  0060  F007  FFE6   	movff	btemp,postinc1
 24234  018E1A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24235  018E20  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24236  018E26  0060  F013  FFE6   	movff	btemp+3,postinc1
 24237  018E2C  EC36  F0DC         	call	___flsub	;wreg free
 24238  018E30  0060  F007  FFE6   	movff	btemp,postinc1
 24239  018E36  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24240  018E3C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24241  018E42  0060  F013  FFE6   	movff	btemp+3,postinc1
 24242  018E48  ECA0  F0D3         	call	_fabsf	;wreg free
 24243  018E4C  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 24244  018E52  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 24245  018E58  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 24246  018E5E  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 24247                           
 24248                           ;mbmc.c: 109:  if (C.bv_ror < 0.0051)
 24249  018E64  0EE7               	movlw	231
 24250  018E66  6EE6               	movwf	postinc1,c
 24251  018E68  0E1D               	movlw	29
 24252  018E6A  6EE6               	movwf	postinc1,c
 24253  018E6C  0EA7               	movlw	167
 24254  018E6E  6EE6               	movwf	postinc1,c
 24255  018E70  0E3B               	movlw	59
 24256  018E72  6EE6               	movwf	postinc1,c
 24257  018E74  EE21  F36B         	lfsr	2,_C+108	;volatile
 24258  018E78  006F FF7B FFE6     	movff	postinc2,postinc1
 24259  018E7E  006F FF7B FFE6     	movff	postinc2,postinc1
 24260  018E84  006F FF7B FFE6     	movff	postinc2,postinc1
 24261  018E8A  006F FF7B FFE6     	movff	postinc2,postinc1
 24262  018E90  ECE8  F0C8         	call	___flge	;wreg free
 24263  018E94  B001               	btfsc	btemp& (0+255),0,c
 24264  018E96  D010               	goto	l11038
 24265                           
 24266                           ;mbmc.c: 110:   C.bv_ror = 0.0140 + 0.0001;
 24267  018E98  0EB0               	movlw	176
 24268  018E9A  006F FFA0  F76B    	movff	wreg,_C+108	;volatile
 24269  018EA0  0E03               	movlw	3
 24270  018EA2  006F FFA0  F76C    	movff	wreg,_C+109	;volatile
 24271  018EA8  0E67               	movlw	103
 24272  018EAA  006F FFA0  F76D    	movff	wreg,_C+110	;volatile
 24273  018EB0  0E3C               	movlw	60
 24274  018EB2  006F FFA0  F76E    	movff	wreg,_C+111	;volatile
 24275  018EB8                     l11038:
 24276                           
 24277                           ;mbmc.c: 111:  bvror = conv_raw_result(V_BAT, CONV);
 24278  018EB8  0E00               	movlw	0
 24279  018EBA  6EE6               	movwf	postinc1,c
 24280  018EBC  0E04               	movlw	4
 24281  018EBE  6EE6               	movwf	postinc1,c
 24282  018EC0  EC73  F0A9         	call	_conv_raw_result	;wreg free
 24283  018EC4  0060  F004  F06C   	movff	btemp,calc_ror_data@bvror
 24284  018ECA  0060  F008  F06D   	movff	btemp+1,calc_ror_data@bvror+1
 24285  018ED0  0060  F00C  F06E   	movff	btemp+2,calc_ror_data@bvror+2
 24286  018ED6  0060  F010  F06F   	movff	btemp+3,calc_ror_data@bvror+3
 24287                           
 24288                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 24289  018EDC  0012               	return		;funcret
 24290  018EDE                     __end_of_calc_ror_data:
 24291                           	opt callstack 0
 24292                           
 24293 ;; *************** function _fabsf *****************
 24294 ;; Defined at:
 24295 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 24296 ;; Parameters:    Size  Location     Type
 24297 ;;  x               4  [STACK] float 
 24298 ;; Auto vars:     Size  Location     Type
 24299 ;;  u               4  [STACK] struct .
 24300 ;; Return value:  Size  Location     Type
 24301 ;;                  4  [STACK] float 
 24302 ;; Registers used:
 24303 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 24304 ;; Tracked objects:
 24305 ;;		On entry : 0/0
 24306 ;;		On exit  : 0/0
 24307 ;;		Unchanged: 0/0
 24308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24313 ;;Total ram usage:        0 bytes
 24314 ;; Hardware stack levels used:    1
 24315 ;; Hardware stack levels required when called:   15
 24316 ;; This function calls:
 24317 ;;		Nothing
 24318 ;; This function is called by:
 24319 ;;		_main
 24320 ;;		_calc_ror_data
 24321 ;;		_calc_bsoc
 24322 ;;		_esr_check
 24323 ;; This function uses a reentrant model
 24324 ;;
 24325                           
 24326                           	psect	text97
 24327  01A740                     __ptext97:
 24328                           	opt callstack 0
 24329  01A740                     _fabsf:
 24330                           	opt callstack 0
 24331                           
 24332                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24333  01A740  52E6               	movf	postinc1,f,c
 24334  01A742  52E6               	movf	postinc1,f,c
 24335  01A744  52E6               	movf	postinc1,f,c
 24336  01A746  52E6               	movf	postinc1,f,c
 24337                           
 24338                           ;incstack = 0
 24339 ;; hardware stack exceeded
 24340  01A748  0060  F180  F009   	movff	fabsf@F463,btemp+8
 24341  01A74E  0060  F184  F00A   	movff	fabsf@F463+1,btemp+9
 24342  01A754  0060  F188  F00B   	movff	fabsf@F463+2,btemp+10
 24343  01A75A  0060  F18C  F00C   	movff	fabsf@F463+3,btemp+11
 24344                           
 24345                           ;stkvar	_u @ sp[(-4)+0]
 24346  01A760  0EFC               	movlw	-4
 24347  01A762  0060  F027  FFE3   	movff	btemp+8,plusw1
 24348  01A768  0EFD               	movlw	-3
 24349  01A76A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24350  01A770  0EFE               	movlw	-2
 24351  01A772  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24352  01A778  0EFF               	movlw	-1
 24353  01A77A  0060  F033  FFE3   	movff	btemp+11,plusw1
 24354                           
 24355                           ;stkvar	_x @ sp[(-4)+-4]
 24356  01A780  0EF8               	movlw	-8
 24357  01A782  006F FF8C  F009    	movff	plusw1,btemp+8
 24358  01A788  0EF9               	movlw	-7
 24359  01A78A  006F FF8C  F00A    	movff	plusw1,btemp+9
 24360  01A790  0EFA               	movlw	-6
 24361  01A792  006F FF8C  F00B    	movff	plusw1,btemp+10
 24362  01A798  0EFB               	movlw	-5
 24363  01A79A  006F FF8C  F00C    	movff	plusw1,btemp+11
 24364                           
 24365                           ;stkvar	_u @ sp[(-4)+0]
 24366  01A7A0  0EFC               	movlw	-4
 24367  01A7A2  0060  F027  FFE3   	movff	btemp+8,plusw1
 24368  01A7A8  0EFD               	movlw	-3
 24369  01A7AA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24370  01A7B0  0EFE               	movlw	-2
 24371  01A7B2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24372  01A7B8  0EFF               	movlw	-1
 24373  01A7BA  0060  F033  FFE3   	movff	btemp+11,plusw1
 24374                           
 24375                           ;stkvar	_u @ sp[(-4)+0]
 24376  01A7C0  0EFF               	movlw	-1
 24377  01A7C2  9EE3               	bcf	plusw1,7,c
 24378                           
 24379                           ;stkvar	_u @ sp[(-4)+0]
 24380  01A7C4  0EFC               	movlw	-4
 24381  01A7C6  006F FF8C  F001    	movff	plusw1,btemp
 24382  01A7CC  0EFD               	movlw	-3
 24383  01A7CE  006F FF8C  F002    	movff	plusw1,btemp+1
 24384  01A7D4  0EFE               	movlw	-2
 24385  01A7D6  006F FF8C  F003    	movff	plusw1,btemp+2
 24386  01A7DC  0EFF               	movlw	-1
 24387  01A7DE  006F FF8C  F004    	movff	plusw1,btemp+3
 24388                           
 24389                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 24390  01A7E4  0EF8               	movlw	248
 24391  01A7E6  26E1               	addwf	fsr1l,f,c
 24392  01A7E8  0EFF               	movlw	255
 24393  01A7EA  22E2               	addwfc	fsr1h,f,c
 24394  01A7EC  0012               	return		;funcret
 24395  01A7EE                     __end_of_fabsf:
 24396                           	opt callstack 0
 24397                           
 24398 ;; *************** function _conv_raw_result *****************
 24399 ;; Defined at:
 24400 ;;		line 120 in file "daq.c"
 24401 ;; Parameters:    Size  Location     Type
 24402 ;;  chan            1  [STACK] const enum E16590
 24403 ;;  to_what         1  [STACK] const enum E16652
 24404 ;; Auto vars:     Size  Location     Type
 24405 ;;		None
 24406 ;; Return value:  Size  Location     Type
 24407 ;;                  4  [STACK] float 
 24408 ;; Registers used:
 24409 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24410 ;; Tracked objects:
 24411 ;;		On entry : 0/39
 24412 ;;		On exit  : 0/0
 24413 ;;		Unchanged: 0/0
 24414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24419 ;;Total ram usage:        0 bytes
 24420 ;; Hardware stack levels used:    1
 24421 ;; Hardware stack levels required when called:   17
 24422 ;; This function calls:
 24423 ;;		___fladd
 24424 ;;		___fldiv
 24425 ;;		___flmul
 24426 ;;		___flsub
 24427 ;;		___xxtofl
 24428 ;;		_get_raw_result
 24429 ;;		_nanf
 24430 ;; This function is called by:
 24431 ;;		_main
 24432 ;;		_convert_adc_data
 24433 ;;		_calc_ror_data
 24434 ;;		_check_day_time
 24435 ;;		_init_bsoc
 24436 ;;		_esr_check
 24437 ;; This function uses a reentrant model
 24438 ;;
 24439                           
 24440                           	psect	text98
 24441  0152E6                     __ptext98:
 24442                           	opt callstack 0
 24443  0152E6                     _conv_raw_result:
 24444                           	opt callstack 0
 24445                           
 24446                           ;daq.c: 120: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);
      +                          daq.c: 121: {;daq.c: 123:  switch (to_what) {
 24447                           
 24448                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24449                           ;incstack = 0
 24450 ;; hardware stack exceeded
 24451  0152E6  D276               	goto	l9858
 24452  0152E8                     l9804:
 24453                           
 24454                           ;daq.c: 125:   if (!(0b0011110001110111 >> chan & 0x1))
 24455                           ;stkvar	_chan @ sp[(0)+-1]
 24456  0152E8  0EFF               	movlw	-1
 24457  0152EA  006F FF8C  F00C    	movff	plusw1,btemp+11
 24458  0152F0  0E77               	movlw	119
 24459  0152F2  6E09               	movwf	(btemp+8)^0,c
 24460  0152F4  0E3C               	movlw	60
 24461  0152F6  6E0A               	movwf	(btemp+9)^0,c
 24462  0152F8  2A0C               	incf	(btemp+11)^0,f,c
 24463  0152FA  D003               	goto	u9144
 24464  0152FC                     u9145:
 24465  0152FC  340A               	rlcf	(btemp+9)^0,w,c
 24466  0152FE  320A               	rrcf	(btemp+9)^0,f,c
 24467  015300  3209               	rrcf	(btemp+8)^0,f,c
 24468  015302                     u9144:
 24469  015302  2E0C               	decfsz	(btemp+11)^0,f,c
 24470  015304  D7FB               	goto	u9145
 24471  015306  B009               	btfsc	(btemp+8)^0,0,c
 24472  015308  D007               	goto	l9810
 24473                           
 24474                           ;daq.c: 126:    return nanf("");
 24475  01530A  0E4F               	movlw	low (STR_64+120)
 24476  01530C  6EE6               	movwf	postinc1,c
 24477  01530E  0EFC               	movlw	high (STR_64+120)
 24478  015310  6EE6               	movwf	postinc1,c
 24479  015312  ECB5  F0D9         	call	_nanf	;wreg free
 24480  015316  D26E               	goto	l1811
 24481  015318                     l9810:
 24482                           
 24483                           ;daq.c: 128:   if (0b0000000000000011 >> chan & 0x1) {
 24484                           ;stkvar	_chan @ sp[(0)+-1]
 24485  015318  0EFF               	movlw	-1
 24486  01531A  006F FF8C  F00C    	movff	plusw1,btemp+11
 24487  015320  0E03               	movlw	3
 24488  015322  6E09               	movwf	(btemp+8)^0,c
 24489  015324  0E00               	movlw	0
 24490  015326  6E0A               	movwf	(btemp+9)^0,c
 24491  015328  2A0C               	incf	(btemp+11)^0,f,c
 24492  01532A  D003               	goto	u9164
 24493  01532C                     u9165:
 24494  01532C  340A               	rlcf	(btemp+9)^0,w,c
 24495  01532E  320A               	rrcf	(btemp+9)^0,f,c
 24496  015330  3209               	rrcf	(btemp+8)^0,f,c
 24497  015332                     u9164:
 24498  015332  2E0C               	decfsz	(btemp+11)^0,f,c
 24499  015334  D7FB               	goto	u9165
 24500  015336  A009               	btfss	(btemp+8)^0,0,c
 24501  015338  D11F               	goto	l9824
 24502                           
 24503                           ;daq.c: 129:    if (0b0000000000000001 >> chan & 0x1) {
 24504                           ;stkvar	_chan @ sp[(0)+-1]
 24505  01533A  0EFF               	movlw	-1
 24506  01533C  006F FF8C  F00C    	movff	plusw1,btemp+11
 24507  015342  0E01               	movlw	1
 24508  015344  6E09               	movwf	(btemp+8)^0,c
 24509  015346  0E00               	movlw	0
 24510  015348  6E0A               	movwf	(btemp+9)^0,c
 24511  01534A  2A0C               	incf	(btemp+11)^0,f,c
 24512  01534C  D003               	goto	u9184
 24513  01534E                     u9185:
 24514  01534E  340A               	rlcf	(btemp+9)^0,w,c
 24515  015350  320A               	rrcf	(btemp+9)^0,f,c
 24516  015352  3209               	rrcf	(btemp+8)^0,f,c
 24517  015354                     u9184:
 24518  015354  2E0C               	decfsz	(btemp+11)^0,f,c
 24519  015356  D7FB               	goto	u9185
 24520  015358  A009               	btfss	(btemp+8)^0,0,c
 24521  01535A  D087               	goto	l9820
 24522                           
 24523                           ;daq.c: 130:     return R.n_zero[0]+((float) ((int16_t) get_raw_result(chan)) - R.n_offs
      +                          et[0]) * 0.0850000;
 24524  01535C  0060  F367  FFE6   	movff	_R+42,postinc1
 24525  015362  0060  F36B  FFE6   	movff	_R+43,postinc1
 24526  015368  0060  F36F  FFE6   	movff	_R+44,postinc1
 24527  01536E  0060  F373  FFE6   	movff	_R+45,postinc1
 24528  015374  0E7B               	movlw	123
 24529  015376  6EE6               	movwf	postinc1,c
 24530  015378  0E14               	movlw	20
 24531  01537A  6EE6               	movwf	postinc1,c
 24532  01537C  0EAE               	movlw	174
 24533  01537E  6EE6               	movwf	postinc1,c
 24534  015380  0E3D               	movlw	61
 24535  015382  6EE6               	movwf	postinc1,c
 24536  015384  0060  F354  F009   	movff	_R+38,btemp+8	;volatile
 24537  01538A  0060  F358  F00A   	movff	_R+39,btemp+9	;volatile
 24538  015390  0E00               	movlw	0
 24539  015392  BE0A               	btfsc	(btemp+9)^0,7,c
 24540  015394  0EFF               	movlw	255
 24541  015396  6E0B               	movwf	(btemp+10)^0,c
 24542  015398  6E0C               	movwf	(btemp+11)^0,c
 24543  01539A  0060  F027  FFE6   	movff	btemp+8,postinc1
 24544  0153A0  0060  F02B  FFE6   	movff	btemp+9,postinc1
 24545  0153A6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 24546  0153AC  0060  F033  FFE6   	movff	btemp+11,postinc1
 24547  0153B2  0E01               	movlw	1
 24548  0153B4  6EE6               	movwf	postinc1,c
 24549  0153B6  EC43  F0C2         	call	___xxtofl	;wreg free
 24550  0153BA  0060  F007  FFE6   	movff	btemp,postinc1
 24551  0153C0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24552  0153C6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24553  0153CC  0060  F013  FFE6   	movff	btemp+3,postinc1
 24554                           
 24555                           ;stkvar	_chan @ sp[(-12)+-1]
 24556  0153D2  0EF3               	movlw	-13
 24557  0153D4  50E3               	movf	plusw1,w,c
 24558  0153D6  6EE6               	movwf	postinc1,c
 24559  0153D8  EC00  F0E1         	call	_get_raw_result	;wreg free
 24560  0153DC  0060  F004  F00B   	movff	btemp,btemp+10
 24561  0153E2  0060  F008  F00C   	movff	btemp+1,btemp+11
 24562  0153E8  500B               	movf	(btemp+10)^0,w,c
 24563  0153EA  6E05               	movwf	(btemp+4)^0,c
 24564  0153EC  500C               	movf	(btemp+11)^0,w,c
 24565  0153EE  6E06               	movwf	(btemp+5)^0,c
 24566  0153F0  6A07               	clrf	(btemp+6)^0,c
 24567  0153F2  6A08               	clrf	(btemp+7)^0,c
 24568  0153F4  0060  F017  FFE6   	movff	btemp+4,postinc1
 24569  0153FA  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24570  015400  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24571  015406  0060  F023  FFE6   	movff	btemp+7,postinc1
 24572  01540C  0E00               	movlw	0
 24573  01540E  6EE6               	movwf	postinc1,c
 24574  015410  EC43  F0C2         	call	___xxtofl	;wreg free
 24575  015414  0060  F007  FFE6   	movff	btemp,postinc1
 24576  01541A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24577  015420  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24578  015426  0060  F013  FFE6   	movff	btemp+3,postinc1
 24579  01542C  EC36  F0DC         	call	___flsub	;wreg free
 24580  015430  0060  F007  FFE6   	movff	btemp,postinc1
 24581  015436  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24582  01543C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24583  015442  0060  F013  FFE6   	movff	btemp+3,postinc1
 24584  015448  ECC3  F09E         	call	___flmul	;wreg free
 24585  01544C  0060  F007  FFE6   	movff	btemp,postinc1
 24586  015452  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24587  015458  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24588  01545E  0060  F013  FFE6   	movff	btemp+3,postinc1
 24589  015464  ECD8  F0A2         	call	___fladd	;wreg free
 24590  015468  D1C5               	goto	l1811
 24591  01546A                     l9820:
 24592                           
 24593                           ;daq.c: 132:     return R.n_zero[1]+((float) ((int16_t) get_raw_result(chan)) - R.n_offs
      +                          et[1]) * 0.0350000;
 24594  01546A  0060  F377  FFE6   	movff	_R+46,postinc1
 24595  015470  0060  F37B  FFE6   	movff	_R+47,postinc1
 24596  015476  0060  F37F  FFE6   	movff	_R+48,postinc1
 24597  01547C  0060  F383  FFE6   	movff	_R+49,postinc1
 24598  015482  0E29               	movlw	41
 24599  015484  6EE6               	movwf	postinc1,c
 24600  015486  0E5C               	movlw	92
 24601  015488  6EE6               	movwf	postinc1,c
 24602  01548A  0E0F               	movlw	15
 24603  01548C  6EE6               	movwf	postinc1,c
 24604  01548E  0E3D               	movlw	61
 24605  015490  6EE6               	movwf	postinc1,c
 24606  015492  0060  F35C  F009   	movff	_R+40,btemp+8	;volatile
 24607  015498  0060  F360  F00A   	movff	_R+41,btemp+9	;volatile
 24608  01549E  0E00               	movlw	0
 24609  0154A0  BE0A               	btfsc	(btemp+9)^0,7,c
 24610  0154A2  0EFF               	movlw	255
 24611  0154A4  6E0B               	movwf	(btemp+10)^0,c
 24612  0154A6  6E0C               	movwf	(btemp+11)^0,c
 24613  0154A8  0060  F027  FFE6   	movff	btemp+8,postinc1
 24614  0154AE  0060  F02B  FFE6   	movff	btemp+9,postinc1
 24615  0154B4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 24616  0154BA  0060  F033  FFE6   	movff	btemp+11,postinc1
 24617  0154C0  0E01               	movlw	1
 24618  0154C2  6EE6               	movwf	postinc1,c
 24619  0154C4  EC43  F0C2         	call	___xxtofl	;wreg free
 24620  0154C8  0060  F007  FFE6   	movff	btemp,postinc1
 24621  0154CE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24622  0154D4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24623  0154DA  0060  F013  FFE6   	movff	btemp+3,postinc1
 24624                           
 24625                           ;stkvar	_chan @ sp[(-12)+-1]
 24626  0154E0  0EF3               	movlw	-13
 24627  0154E2  50E3               	movf	plusw1,w,c
 24628  0154E4  6EE6               	movwf	postinc1,c
 24629  0154E6  EC00  F0E1         	call	_get_raw_result	;wreg free
 24630  0154EA  0060  F004  F00B   	movff	btemp,btemp+10
 24631  0154F0  0060  F008  F00C   	movff	btemp+1,btemp+11
 24632  0154F6  500B               	movf	(btemp+10)^0,w,c
 24633  0154F8  6E05               	movwf	(btemp+4)^0,c
 24634  0154FA  500C               	movf	(btemp+11)^0,w,c
 24635  0154FC  6E06               	movwf	(btemp+5)^0,c
 24636  0154FE  6A07               	clrf	(btemp+6)^0,c
 24637  015500  6A08               	clrf	(btemp+7)^0,c
 24638  015502  0060  F017  FFE6   	movff	btemp+4,postinc1
 24639  015508  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24640  01550E  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24641  015514  0060  F023  FFE6   	movff	btemp+7,postinc1
 24642  01551A  0E00               	movlw	0
 24643  01551C  6EE6               	movwf	postinc1,c
 24644  01551E  EC43  F0C2         	call	___xxtofl	;wreg free
 24645  015522  0060  F007  FFE6   	movff	btemp,postinc1
 24646  015528  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24647  01552E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24648  015534  0060  F013  FFE6   	movff	btemp+3,postinc1
 24649  01553A  EC36  F0DC         	call	___flsub	;wreg free
 24650  01553E  0060  F007  FFE6   	movff	btemp,postinc1
 24651  015544  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24652  01554A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24653  015550  0060  F013  FFE6   	movff	btemp+3,postinc1
 24654  015556  ECC3  F09E         	call	___flmul	;wreg free
 24655  01555A  0060  F007  FFE6   	movff	btemp,postinc1
 24656  015560  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24657  015566  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24658  01556C  0060  F013  FFE6   	movff	btemp+3,postinc1
 24659  015572  ECD8  F0A2         	call	___fladd	;wreg free
 24660  015576  D13E               	goto	l1811
 24661  015578                     l9824:
 24662                           
 24663                           ;daq.c: 135:    if (0b0000100000000000 >> chan & 0x1) {
 24664                           ;stkvar	_chan @ sp[(0)+-1]
 24665  015578  0EFF               	movlw	-1
 24666  01557A  006F FF8C  F00C    	movff	plusw1,btemp+11
 24667  015580  0E00               	movlw	0
 24668  015582  6E09               	movwf	(btemp+8)^0,c
 24669  015584  0E08               	movlw	8
 24670  015586  6E0A               	movwf	(btemp+9)^0,c
 24671  015588  2A0C               	incf	(btemp+11)^0,f,c
 24672  01558A  D003               	goto	u9204
 24673  01558C                     u9205:
 24674  01558C  340A               	rlcf	(btemp+9)^0,w,c
 24675  01558E  320A               	rrcf	(btemp+9)^0,f,c
 24676  015590  3209               	rrcf	(btemp+8)^0,f,c
 24677  015592                     u9204:
 24678  015592  2E0C               	decfsz	(btemp+11)^0,f,c
 24679  015594  D7FB               	goto	u9205
 24680  015596  A009               	btfss	(btemp+8)^0,0,c
 24681  015598  D008               	goto	l9832
 24682                           
 24683                           ;daq.c: 136:     return 25.0;
 24684  01559A  0E00               	movlw	0
 24685  01559C  6E01               	movwf	btemp^0,c
 24686  01559E  0E00               	movlw	0
 24687  0155A0  6E02               	movwf	(btemp+1)^0,c
 24688  0155A2  0EC8               	movlw	200
 24689  0155A4  6E03               	movwf	(btemp+2)^0,c
 24690  0155A6  0E41               	movlw	65
 24691  0155A8  D113               	goto	L30
 24692  0155AA                     l9832:
 24693                           
 24694                           ;daq.c: 138:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 24695  0155AA  0E00               	movlw	0
 24696  0155AC  6EE6               	movwf	postinc1,c
 24697  0155AE  0E00               	movlw	0
 24698  0155B0  6EE6               	movwf	postinc1,c
 24699  0155B2  0E7A               	movlw	122
 24700  0155B4  6EE6               	movwf	postinc1,c
 24701  0155B6  0E44               	movlw	68
 24702  0155B8  6EE6               	movwf	postinc1,c
 24703  0155BA  0E61               	movlw	97
 24704  0155BC  6EE6               	movwf	postinc1,c
 24705  0155BE  0E03               	movlw	3
 24706  0155C0  6EE6               	movwf	postinc1,c
 24707  0155C2  0E84               	movlw	132
 24708  0155C4  6EE6               	movwf	postinc1,c
 24709  0155C6  0E40               	movlw	64
 24710  0155C8  6EE6               	movwf	postinc1,c
 24711                           
 24712                           ;stkvar	_chan @ sp[(-8)+-1]
 24713  0155CA  0EF7               	movlw	-9
 24714  0155CC  50E3               	movf	plusw1,w,c
 24715  0155CE  6EE6               	movwf	postinc1,c
 24716  0155D0  EC00  F0E1         	call	_get_raw_result	;wreg free
 24717  0155D4  0060  F004  F00B   	movff	btemp,btemp+10
 24718  0155DA  0060  F008  F00C   	movff	btemp+1,btemp+11
 24719  0155E0  500B               	movf	(btemp+10)^0,w,c
 24720  0155E2  6E05               	movwf	(btemp+4)^0,c
 24721  0155E4  500C               	movf	(btemp+11)^0,w,c
 24722  0155E6  6E06               	movwf	(btemp+5)^0,c
 24723  0155E8  6A07               	clrf	(btemp+6)^0,c
 24724  0155EA  6A08               	clrf	(btemp+7)^0,c
 24725  0155EC  0060  F017  FFE6   	movff	btemp+4,postinc1
 24726  0155F2  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24727  0155F8  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24728  0155FE  0060  F023  FFE6   	movff	btemp+7,postinc1
 24729  015604  0E00               	movlw	0
 24730  015606  6EE6               	movwf	postinc1,c
 24731  015608  EC43  F0C2         	call	___xxtofl	;wreg free
 24732  01560C  0060  F007  FFE6   	movff	btemp,postinc1
 24733  015612  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24734  015618  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24735  01561E  0060  F013  FFE6   	movff	btemp+3,postinc1
 24736  015624  ECC3  F09E         	call	___flmul	;wreg free
 24737  015628  0060  F007  FFE6   	movff	btemp,postinc1
 24738  01562E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24739  015634  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24740  01563A  0060  F013  FFE6   	movff	btemp+3,postinc1
 24741  015640  ECB6  F0A6         	call	___fldiv	;wreg free
 24742  015644  D0D7               	goto	l1811
 24743  015646                     l9836:
 24744                           
 24745                           ;daq.c: 143:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 24746                           ;stkvar	_chan @ sp[(0)+-1]
 24747  015646  0EFF               	movlw	-1
 24748  015648  006F FF8C  F00C    	movff	plusw1,btemp+11
 24749  01564E  0E03               	movlw	3
 24750  015650  6E09               	movwf	(btemp+8)^0,c
 24751  015652  0E00               	movlw	0
 24752  015654  6E0A               	movwf	(btemp+9)^0,c
 24753  015656  2A0C               	incf	(btemp+11)^0,f,c
 24754  015658  D003               	goto	u9224
 24755  01565A                     u9225:
 24756  01565A  340A               	rlcf	(btemp+9)^0,w,c
 24757  01565C  320A               	rrcf	(btemp+9)^0,f,c
 24758  01565E  3209               	rrcf	(btemp+8)^0,f,c
 24759  015660                     u9224:
 24760  015660  2E0C               	decfsz	(btemp+11)^0,f,c
 24761  015662  D7FB               	goto	u9225
 24762  015664  B009               	btfsc	(btemp+8)^0,0,c
 24763  015666  D011               	goto	u9250
 24764                           
 24765                           ;stkvar	_chan @ sp[(0)+-1]
 24766  015668  0EFF               	movlw	-1
 24767  01566A  006F FF8C  F00C    	movff	plusw1,btemp+11
 24768  015670  0E00               	movlw	0
 24769  015672  6E09               	movwf	(btemp+8)^0,c
 24770  015674  0E08               	movlw	8
 24771  015676  6E0A               	movwf	(btemp+9)^0,c
 24772  015678  2A0C               	incf	(btemp+11)^0,f,c
 24773  01567A  D003               	goto	u9244
 24774  01567C                     u9245:
 24775  01567C  340A               	rlcf	(btemp+9)^0,w,c
 24776  01567E  320A               	rrcf	(btemp+9)^0,f,c
 24777  015680  3209               	rrcf	(btemp+8)^0,f,c
 24778  015682                     u9244:
 24779  015682  2E0C               	decfsz	(btemp+11)^0,f,c
 24780  015684  D7FB               	goto	u9245
 24781  015686  A009               	btfss	(btemp+8)^0,0,c
 24782  015688  D04E               	goto	l9844
 24783  01568A                     u9250:
 24784                           
 24785                           ;daq.c: 144:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 24786  01568A  0E00               	movlw	0
 24787  01568C  6EE6               	movwf	postinc1,c
 24788  01568E  0E00               	movlw	0
 24789  015690  6EE6               	movwf	postinc1,c
 24790  015692  0E7A               	movlw	122
 24791  015694  6EE6               	movwf	postinc1,c
 24792  015696  0E44               	movlw	68
 24793  015698  6EE6               	movwf	postinc1,c
 24794  01569A  0E00               	movlw	0
 24795  01569C  6EE6               	movwf	postinc1,c
 24796  01569E  0E00               	movlw	0
 24797  0156A0  6EE6               	movwf	postinc1,c
 24798  0156A2  0E20               	movlw	32
 24799  0156A4  6EE6               	movwf	postinc1,c
 24800  0156A6  0E3F               	movlw	63
 24801  0156A8  6EE6               	movwf	postinc1,c
 24802                           
 24803                           ;stkvar	_chan @ sp[(-8)+-1]
 24804  0156AA  0EF7               	movlw	-9
 24805  0156AC  50E3               	movf	plusw1,w,c
 24806  0156AE  6EE6               	movwf	postinc1,c
 24807  0156B0  EC00  F0E1         	call	_get_raw_result	;wreg free
 24808  0156B4  0060  F004  F00B   	movff	btemp,btemp+10
 24809  0156BA  0060  F008  F00C   	movff	btemp+1,btemp+11
 24810  0156C0  500B               	movf	(btemp+10)^0,w,c
 24811  0156C2  6E05               	movwf	(btemp+4)^0,c
 24812  0156C4  500C               	movf	(btemp+11)^0,w,c
 24813  0156C6  6E06               	movwf	(btemp+5)^0,c
 24814  0156C8  6A07               	clrf	(btemp+6)^0,c
 24815  0156CA  6A08               	clrf	(btemp+7)^0,c
 24816  0156CC  0060  F017  FFE6   	movff	btemp+4,postinc1
 24817  0156D2  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24818  0156D8  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24819  0156DE  0060  F023  FFE6   	movff	btemp+7,postinc1
 24820  0156E4  0E00               	movlw	0
 24821  0156E6  6EE6               	movwf	postinc1,c
 24822  0156E8  EC43  F0C2         	call	___xxtofl	;wreg free
 24823  0156EC  0060  F007  FFE6   	movff	btemp,postinc1
 24824  0156F2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24825  0156F8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24826  0156FE  0060  F013  FFE6   	movff	btemp+3,postinc1
 24827  015704  ECC3  F09E         	call	___flmul	;wreg free
 24828  015708  0060  F007  FFE6   	movff	btemp,postinc1
 24829  01570E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24830  015714  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24831  01571A  0060  F013  FFE6   	movff	btemp+3,postinc1
 24832  015720  ECB6  F0A6         	call	___fldiv	;wreg free
 24833  015724  D067               	goto	l1811
 24834  015726                     l9844:
 24835                           
 24836                           ;daq.c: 146:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 24837  015726  0E00               	movlw	0
 24838  015728  6EE6               	movwf	postinc1,c
 24839  01572A  0E00               	movlw	0
 24840  01572C  6EE6               	movwf	postinc1,c
 24841  01572E  0E7A               	movlw	122
 24842  015730  6EE6               	movwf	postinc1,c
 24843  015732  0E44               	movlw	68
 24844  015734  6EE6               	movwf	postinc1,c
 24845  015736  0E61               	movlw	97
 24846  015738  6EE6               	movwf	postinc1,c
 24847  01573A  0E03               	movlw	3
 24848  01573C  6EE6               	movwf	postinc1,c
 24849  01573E  0E84               	movlw	132
 24850  015740  6EE6               	movwf	postinc1,c
 24851  015742  0E40               	movlw	64
 24852  015744  6EE6               	movwf	postinc1,c
 24853                           
 24854                           ;stkvar	_chan @ sp[(-8)+-1]
 24855  015746  0EF7               	movlw	-9
 24856  015748  50E3               	movf	plusw1,w,c
 24857  01574A  6EE6               	movwf	postinc1,c
 24858  01574C  EC00  F0E1         	call	_get_raw_result	;wreg free
 24859  015750  0060  F004  F00B   	movff	btemp,btemp+10
 24860  015756  0060  F008  F00C   	movff	btemp+1,btemp+11
 24861  01575C  500B               	movf	(btemp+10)^0,w,c
 24862  01575E  6E05               	movwf	(btemp+4)^0,c
 24863  015760  500C               	movf	(btemp+11)^0,w,c
 24864  015762  6E06               	movwf	(btemp+5)^0,c
 24865  015764  6A07               	clrf	(btemp+6)^0,c
 24866  015766  6A08               	clrf	(btemp+7)^0,c
 24867  015768  0060  F017  FFE6   	movff	btemp+4,postinc1
 24868  01576E  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24869  015774  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24870  01577A  0060  F023  FFE6   	movff	btemp+7,postinc1
 24871  015780  0E00               	movlw	0
 24872  015782  6EE6               	movwf	postinc1,c
 24873  015784  EC43  F0C2         	call	___xxtofl	;wreg free
 24874  015788  0060  F007  FFE6   	movff	btemp,postinc1
 24875  01578E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24876  015794  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24877  01579A  0060  F013  FFE6   	movff	btemp+3,postinc1
 24878  0157A0  ECC3  F09E         	call	___flmul	;wreg free
 24879  0157A4  0060  F007  FFE6   	movff	btemp,postinc1
 24880  0157AA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24881  0157B0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24882  0157B6  0060  F013  FFE6   	movff	btemp+3,postinc1
 24883  0157BC  ECB6  F0A6         	call	___fldiv	;wreg free
 24884  0157C0  D019               	goto	l1811
 24885  0157C2                     l9850:
 24886                           
 24887                           ;daq.c: 149:   return 0.0;
 24888  0157C2  0E00               	movlw	0
 24889  0157C4  6E01               	movwf	btemp^0,c
 24890  0157C6  0E00               	movlw	0
 24891  0157C8  6E02               	movwf	(btemp+1)^0,c
 24892  0157CA  0E00               	movlw	0
 24893  0157CC  6E03               	movwf	(btemp+2)^0,c
 24894  0157CE  0E00               	movlw	0
 24895  0157D0                     L30:
 24896  0157D0  6E04               	movwf	(btemp+3)^0,c
 24897  0157D2  D010               	goto	l1811
 24898  0157D4                     l9858:
 24899                           
 24900                           ;stkvar	_to_what @ sp[(0)+-2]
 24901  0157D4  0EFE               	movlw	-2
 24902  0157D6  50E3               	movf	plusw1,w,c
 24903  0157D8  6E0B               	movwf	(btemp+10)^0,c
 24904  0157DA  6A0C               	clrf	(btemp+11)^0,c
 24905                           
 24906                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24907                           ; Switch size 1, requested type "simple"
 24908                           ; Number of cases is 1, Range of values is 0 to 0
 24909                           ; switch strategies available:
 24910                           ; Name         Instructions Cycles
 24911                           ; simple_byte            4     3 (average)
 24912                           ;	Chosen strategy is simple_byte
 24913  0157DC  500C               	movf	(btemp+11)^0,w,c
 24914  0157DE  0A00               	xorlw	0	; case 0
 24915  0157E0  A4D8               	btfss	status,2,c
 24916  0157E2  D7EF               	goto	l9850
 24917                           
 24918                           ; Switch size 1, requested type "simple"
 24919                           ; Number of cases is 2, Range of values is 0 to 1
 24920                           ; switch strategies available:
 24921                           ; Name         Instructions Cycles
 24922                           ; simple_byte            7     4 (average)
 24923                           ;	Chosen strategy is simple_byte
 24924  0157E4  500B               	movf	(btemp+10)^0,w,c
 24925  0157E6  0A00               	xorlw	0	; case 0
 24926  0157E8  B4D8               	btfsc	status,2,c
 24927  0157EA  D57E               	goto	l9804
 24928  0157EC  0A01               	xorlw	1	; case 1
 24929  0157EE  B4D8               	btfsc	status,2,c
 24930  0157F0  D72A               	goto	l9836
 24931  0157F2  D7E7               	goto	l9850
 24932  0157F4                     l1811:
 24933                           
 24934                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 24935  0157F4  52E5               	movf	postdec1,f,c
 24936  0157F6  52E5               	movf	postdec1,f,c
 24937  0157F8  0012               	return		;funcret
 24938  0157FA                     __end_of_conv_raw_result:
 24939                           	opt callstack 0
 24940                           
 24941 ;; *************** function _nanf *****************
 24942 ;; Defined at:
 24943 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 24944 ;; Parameters:    Size  Location     Type
 24945 ;;  s               2  [STACK] PTR const unsigned char 
 24946 ;;		 -> STR_101(1), STR_63(1), 
 24947 ;; Auto vars:     Size  Location     Type
 24948 ;;  u               4  [STACK] struct .
 24949 ;; Return value:  Size  Location     Type
 24950 ;;                  4  [STACK] float 
 24951 ;; Registers used:
 24952 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 24953 ;; Tracked objects:
 24954 ;;		On entry : 0/39
 24955 ;;		On exit  : 0/0
 24956 ;;		Unchanged: 0/0
 24957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24962 ;;Total ram usage:        0 bytes
 24963 ;; Hardware stack levels used:    1
 24964 ;; Hardware stack levels required when called:   15
 24965 ;; This function calls:
 24966 ;;		Nothing
 24967 ;; This function is called by:
 24968 ;;		_conv_raw_result
 24969 ;; This function uses a reentrant model
 24970 ;;
 24971                           
 24972                           	psect	text99
 24973  01B36A                     __ptext99:
 24974                           	opt callstack 0
 24975  01B36A                     _nanf:
 24976                           	opt callstack 0
 24977                           
 24978                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24979  01B36A  52E6               	movf	postinc1,f,c
 24980  01B36C  52E6               	movf	postinc1,f,c
 24981  01B36E  52E6               	movf	postinc1,f,c
 24982  01B370  52E6               	movf	postinc1,f,c
 24983                           
 24984                           ;incstack = 0
 24985 ;; hardware stack exceeded
 24986  01B372  0EFF               	movlw	255
 24987  01B374  6E09               	movwf	(btemp+8)^0,c
 24988  01B376  0EFF               	movlw	255
 24989  01B378  6E0A               	movwf	(btemp+9)^0,c
 24990  01B37A  0EFF               	movlw	255
 24991  01B37C  6E0B               	movwf	(btemp+10)^0,c
 24992  01B37E  0E7F               	movlw	127
 24993  01B380  6E0C               	movwf	(btemp+11)^0,c
 24994                           
 24995                           ;stkvar	_u @ sp[(-4)+0]
 24996  01B382  0EFC               	movlw	-4
 24997  01B384  0060  F027  FFE3   	movff	btemp+8,plusw1
 24998  01B38A  0EFD               	movlw	-3
 24999  01B38C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25000  01B392  0EFE               	movlw	-2
 25001  01B394  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25002  01B39A  0EFF               	movlw	-1
 25003  01B39C  0060  F033  FFE3   	movff	btemp+11,plusw1
 25004                           
 25005                           ;stkvar	_u @ sp[(-4)+0]
 25006  01B3A2  0EFC               	movlw	-4
 25007  01B3A4  006F FF8C  F001    	movff	plusw1,btemp
 25008  01B3AA  0EFD               	movlw	-3
 25009  01B3AC  006F FF8C  F002    	movff	plusw1,btemp+1
 25010  01B3B2  0EFE               	movlw	-2
 25011  01B3B4  006F FF8C  F003    	movff	plusw1,btemp+2
 25012  01B3BA  0EFF               	movlw	-1
 25013  01B3BC  006F FF8C  F004    	movff	plusw1,btemp+3
 25014                           
 25015                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 25016  01B3C2  0EFA               	movlw	250
 25017  01B3C4  26E1               	addwf	fsr1l,f,c
 25018  01B3C6  0EFF               	movlw	255
 25019  01B3C8  22E2               	addwfc	fsr1h,f,c
 25020  01B3CA  0012               	return		;funcret
 25021  01B3CC                     __end_of_nanf:
 25022                           	opt callstack 0
 25023                           
 25024 ;; *************** function _get_raw_result *****************
 25025 ;; Defined at:
 25026 ;;		line 112 in file "daq.c"
 25027 ;; Parameters:    Size  Location     Type
 25028 ;;  index           1  [STACK] const enum E16590
 25029 ;; Auto vars:     Size  Location     Type
 25030 ;;		None
 25031 ;; Return value:  Size  Location     Type
 25032 ;;                  2  [STACK] unsigned short 
 25033 ;; Registers used:
 25034 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 25035 ;; Tracked objects:
 25036 ;;		On entry : 0/1
 25037 ;;		On exit  : 0/0
 25038 ;;		Unchanged: 0/0
 25039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25044 ;;Total ram usage:        0 bytes
 25045 ;; Hardware stack levels used:    1
 25046 ;; Hardware stack levels required when called:   15
 25047 ;; This function calls:
 25048 ;;		Nothing
 25049 ;; This function is called by:
 25050 ;;		_main
 25051 ;;		_conv_raw_result
 25052 ;; This function uses a reentrant model
 25053 ;;
 25054                           
 25055                           	psect	text100
 25056  01C200                     __ptext100:
 25057                           	opt callstack 0
 25058  01C200                     _get_raw_result:
 25059                           	opt callstack 0
 25060                           
 25061                           ;daq.c: 112: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 113: {;daq.c
      +                          : 114:  return R.raw_adc[index];
 25062                           ;stkvar	_index @ sp[(0)+-1]
 25063                           
 25064                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25065                           ;incstack = 0
 25066 ;; hardware stack exceeded
 25067  01C200  0EFF               	movlw	-1
 25068  01C202  50E3               	movf	plusw1,w,c
 25069  01C204  0D02               	mullw	2
 25070  01C206  50F3               	movf	243,w,c
 25071  01C208  0FAF               	addlw	low _R
 25072  01C20A  6ED9               	movwf	fsr2l,c
 25073  01C20C  6ADA               	clrf	fsr2h,c
 25074  01C20E  006F FF78  F001    	movff	postinc2,btemp
 25075  01C214  006F FF74  F002    	movff	postdec2,btemp+1
 25076                           
 25077                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 25078  01C21A  52E5               	movf	postdec1,f,c
 25079  01C21C  0012               	return		;funcret
 25080  01C21E                     __end_of_get_raw_result:
 25081                           	opt callstack 0
 25082                           
 25083 ;; *************** function ___xxtofl *****************
 25084 ;; Defined at:
 25085 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 25086 ;; Parameters:    Size  Location     Type
 25087 ;;  sign            1  [STACK] unsigned char 
 25088 ;;  val             4  [STACK] long 
 25089 ;; Auto vars:     Size  Location     Type
 25090 ;;  arg             4  [STACK] unsigned long 
 25091 ;;  exp             1  [STACK] unsigned char 
 25092 ;; Return value:  Size  Location     Type
 25093 ;;                  4  [STACK] unsigned char 
 25094 ;; Registers used:
 25095 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 25096 ;; Tracked objects:
 25097 ;;		On entry : 0/0
 25098 ;;		On exit  : 0/0
 25099 ;;		Unchanged: 0/0
 25100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25105 ;;Total ram usage:        0 bytes
 25106 ;; Hardware stack levels used:    1
 25107 ;; Hardware stack levels required when called:   15
 25108 ;; This function calls:
 25109 ;;		Nothing
 25110 ;; This function is called by:
 25111 ;;		_conv_raw_result
 25112 ;;		_init_bsoc
 25113 ;; This function uses a reentrant model
 25114 ;;
 25115                           
 25116                           	psect	text101
 25117  018486                     __ptext101:
 25118                           	opt callstack 0
 25119  018486                     ___xxtofl:
 25120                           	opt callstack 0
 25121                           
 25122                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25123  018486  0E05               	movlw	5
 25124  018488  26E1               	addwf	fsr1l,f,c
 25125  01848A  0E00               	movlw	0
 25126  01848C  22E2               	addwfc	fsr1h,f,c
 25127                           
 25128                           ;stkvar	_sign @ sp[(-5)+-1]
 25129                           
 25130                           ;incstack = 0
 25131 ;; hardware stack exceeded
 25132  01848E  0EFA               	movlw	-6
 25133  018490  50E3               	movf	plusw1,w,c
 25134  018492  B4D8               	btfsc	status,2,c
 25135  018494  D01D               	goto	l9752
 25136                           
 25137                           ;stkvar	_val @ sp[(-5)+-5]
 25138  018496  0EF9               	movlw	-7
 25139  018498  AEE3               	btfss	plusw1,7,c
 25140  01849A  D01A               	goto	l9752
 25141                           
 25142                           ;stkvar	_val @ sp[(-5)+-5]
 25143  01849C  0EF6               	movlw	-10
 25144  01849E  006F FF8C  F009    	movff	plusw1,btemp+8
 25145  0184A4  0EF7               	movlw	-9
 25146  0184A6  006F FF8C  F00A    	movff	plusw1,btemp+9
 25147  0184AC  0EF8               	movlw	-8
 25148  0184AE  006F FF8C  F00B    	movff	plusw1,btemp+10
 25149  0184B4  0EF9               	movlw	-7
 25150  0184B6  006F FF8C  F00C    	movff	plusw1,btemp+11
 25151  0184BC  1E09               	comf	(btemp+8)^0,f,c
 25152  0184BE  1E0A               	comf	(btemp+9)^0,f,c
 25153  0184C0  1E0B               	comf	(btemp+10)^0,f,c
 25154  0184C2  1E0C               	comf	(btemp+11)^0,f,c
 25155  0184C4  2A09               	incf	(btemp+8)^0,f,c
 25156  0184C6  0E00               	movlw	0
 25157  0184C8  220A               	addwfc	(btemp+9)^0,f,c
 25158  0184CA  220B               	addwfc	(btemp+10)^0,f,c
 25159  0184CC  220C               	addwfc	(btemp+11)^0,f,c
 25160  0184CE  D010               	goto	L31
 25161  0184D0                     l9752:
 25162                           
 25163                           ;stkvar	_val @ sp[(-5)+-5]
 25164  0184D0  0EF6               	movlw	-10
 25165  0184D2  006F FF8C  F009    	movff	plusw1,btemp+8
 25166  0184D8  0EF7               	movlw	-9
 25167  0184DA  006F FF8C  F00A    	movff	plusw1,btemp+9
 25168  0184E0  0EF8               	movlw	-8
 25169  0184E2  006F FF8C  F00B    	movff	plusw1,btemp+10
 25170  0184E8  0EF9               	movlw	-7
 25171  0184EA  006F FF8C  F00C    	movff	plusw1,btemp+11
 25172  0184F0                     L31:
 25173                           
 25174                           ;stkvar	_arg @ sp[(-5)+0]
 25175  0184F0  0EFB               	movlw	-5
 25176  0184F2  0060  F027  FFE3   	movff	btemp+8,plusw1
 25177  0184F8  0EFC               	movlw	-4
 25178  0184FA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25179  018500  0EFD               	movlw	-3
 25180  018502  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25181  018508  0EFE               	movlw	-2
 25182  01850A  0060  F033  FFE3   	movff	btemp+11,plusw1
 25183                           
 25184                           ;stkvar	_val @ sp[(-5)+-5]
 25185  018510  0EF6               	movlw	-10
 25186  018512  50E3               	movf	plusw1,w,c
 25187  018514  E113               	bnz	l9760
 25188  018516  0EF7               	movlw	-9
 25189  018518  50E3               	movf	plusw1,w,c
 25190  01851A  E110               	bnz	l9760
 25191  01851C  0EF8               	movlw	-8
 25192  01851E  50E3               	movf	plusw1,w,c
 25193  018520  E10D               	bnz	l9760
 25194  018522  0EF9               	movlw	-7
 25195  018524  50E3               	movf	plusw1,w,c
 25196  018526  A4D8               	btfss	status,2,c
 25197  018528  D009               	goto	l9760
 25198  01852A  0E00               	movlw	0
 25199  01852C  6E01               	movwf	btemp^0,c
 25200  01852E  0E00               	movlw	0
 25201  018530  6E02               	movwf	(btemp+1)^0,c
 25202  018532  0E00               	movlw	0
 25203  018534  6E03               	movwf	(btemp+2)^0,c
 25204  018536  0E00               	movlw	0
 25205  018538  6E04               	movwf	(btemp+3)^0,c
 25206  01853A  D0A2               	goto	l3113
 25207  01853C                     l9760:
 25208  01853C  0E96               	movlw	150
 25209  01853E  6E0C               	movwf	(btemp+11)^0,c
 25210                           
 25211                           ;stkvar	_exp @ sp[(-5)+4]
 25212  018540  0EFF               	movlw	-1
 25213  018542  0060  F033  FFE3   	movff	btemp+11,plusw1
 25214  018548  D00B               	goto	l9764
 25215  01854A                     l9762:
 25216                           
 25217                           ;stkvar	_exp @ sp[(-5)+4]
 25218  01854A  0EFF               	movlw	-1
 25219  01854C  2AE3               	incf	plusw1,f,c
 25220                           
 25221                           ;stkvar	_arg @ sp[(-5)+0]
 25222  01854E  90D8               	bcf	status,0,c
 25223  018550  0EFE               	movlw	-2
 25224  018552  32E3               	rrcf	plusw1,f,c
 25225  018554  0EFD               	movlw	-3
 25226  018556  32E3               	rrcf	plusw1,f,c
 25227  018558  0EFC               	movlw	-4
 25228  01855A  32E3               	rrcf	plusw1,f,c
 25229  01855C  0EFB               	movlw	-5
 25230  01855E  32E3               	rrcf	plusw1,f,c
 25231  018560                     l9764:
 25232                           
 25233                           ;stkvar	_arg @ sp[(-5)+0]
 25234  018560  50E1               	movf	fsr1l,w,c
 25235  018562  0FFB               	addlw	-5
 25236  018564  6ED9               	movwf	fsr2l,c
 25237  018566  50E2               	movf	fsr1h,w,c
 25238  018568  6EDA               	movwf	fsr2h,c
 25239  01856A  0EFF               	movlw	255
 25240  01856C  22DA               	addwfc	fsr2h,f,c
 25241  01856E  52DE               	movf	postinc2,f,c
 25242  018570  52DE               	movf	postinc2,f,c
 25243  018572  52DE               	movf	postinc2,f,c
 25244  018574  0EFE               	movlw	254
 25245  018576  14DD               	andwf	postdec2,w,c
 25246  018578  B4D8               	btfsc	status,2,c
 25247  01857A  D018               	goto	l9772
 25248  01857C  D7E6               	goto	l9762
 25249  01857E                     l9766:
 25250                           
 25251                           ;stkvar	_exp @ sp[(-5)+4]
 25252  01857E  0EFF               	movlw	-1
 25253  018580  2AE3               	incf	plusw1,f,c
 25254                           
 25255                           ;stkvar	_arg @ sp[(-5)+0]
 25256  018582  50E1               	movf	fsr1l,w,c
 25257  018584  0FFB               	addlw	-5
 25258  018586  6ED9               	movwf	fsr2l,c
 25259  018588  50E2               	movf	fsr1h,w,c
 25260  01858A  6EDA               	movwf	fsr2h,c
 25261  01858C  0EFF               	movlw	255
 25262  01858E  22DA               	addwfc	fsr2h,f,c
 25263  018590  2ADE               	incf	postinc2,f,c
 25264  018592  0E00               	movlw	0
 25265  018594  22DE               	addwfc	postinc2,f,c
 25266  018596  22DE               	addwfc	postinc2,f,c
 25267  018598  22DE               	addwfc	postinc2,f,c
 25268                           
 25269                           ;stkvar	_arg @ sp[(-5)+0]
 25270  01859A  90D8               	bcf	status,0,c
 25271  01859C  0EFE               	movlw	-2
 25272  01859E  32E3               	rrcf	plusw1,f,c
 25273  0185A0  0EFD               	movlw	-3
 25274  0185A2  32E3               	rrcf	plusw1,f,c
 25275  0185A4  0EFC               	movlw	-4
 25276  0185A6  32E3               	rrcf	plusw1,f,c
 25277  0185A8  0EFB               	movlw	-5
 25278  0185AA  32E3               	rrcf	plusw1,f,c
 25279  0185AC                     l9772:
 25280                           
 25281                           ;stkvar	_arg @ sp[(-5)+0]
 25282  0185AC  50E1               	movf	fsr1l,w,c
 25283  0185AE  0FFB               	addlw	-5
 25284  0185B0  6ED9               	movwf	fsr2l,c
 25285  0185B2  50E2               	movf	fsr1h,w,c
 25286  0185B4  6EDA               	movwf	fsr2h,c
 25287  0185B6  0EFF               	movlw	255
 25288  0185B8  22DA               	addwfc	fsr2h,f,c
 25289  0185BA  52DE               	movf	postinc2,f,c
 25290  0185BC  52DE               	movf	postinc2,f,c
 25291  0185BE  52DE               	movf	postinc2,f,c
 25292  0185C0  0EFF               	movlw	255
 25293  0185C2  14DD               	andwf	postdec2,w,c
 25294  0185C4  B4D8               	btfsc	status,2,c
 25295  0185C6  D00C               	goto	l9776
 25296  0185C8  D7DA               	goto	l9766
 25297  0185CA                     l9774:
 25298                           
 25299                           ;stkvar	_exp @ sp[(-5)+4]
 25300  0185CA  0EFF               	movlw	-1
 25301  0185CC  06E3               	decf	plusw1,f,c
 25302                           
 25303                           ;stkvar	_arg @ sp[(-5)+0]
 25304  0185CE  90D8               	bcf	status,0,c
 25305  0185D0  0EFB               	movlw	-5
 25306  0185D2  36E3               	rlcf	plusw1,f,c
 25307  0185D4  0EFC               	movlw	-4
 25308  0185D6  36E3               	rlcf	plusw1,f,c
 25309  0185D8  0EFD               	movlw	-3
 25310  0185DA  36E3               	rlcf	plusw1,f,c
 25311  0185DC  0EFE               	movlw	-2
 25312  0185DE  36E3               	rlcf	plusw1,f,c
 25313  0185E0                     l9776:
 25314                           
 25315                           ;stkvar	_arg @ sp[(-5)+0]
 25316  0185E0  0EFD               	movlw	-3
 25317  0185E2  BEE3               	btfsc	plusw1,7,c
 25318  0185E4  D007               	goto	u9100
 25319                           
 25320                           ;stkvar	_exp @ sp[(-5)+4]
 25321  0185E6  0EFF               	movlw	-1
 25322  0185E8  006F FF8C  F001    	movff	plusw1,btemp
 25323  0185EE  0E02               	movlw	2
 25324  0185F0  6001               	cpfslt	btemp^0,c
 25325  0185F2  D7EB               	goto	l9774
 25326  0185F4                     u9100:
 25327                           
 25328                           ;stkvar	_exp @ sp[(-5)+4]
 25329  0185F4  0EFF               	movlw	-1
 25330  0185F6  B0E3               	btfsc	plusw1,0,c
 25331  0185F8  D002               	goto	l9784
 25332                           
 25333                           ;stkvar	_arg @ sp[(-5)+0]
 25334  0185FA  0EFD               	movlw	-3
 25335  0185FC  9EE3               	bcf	plusw1,7,c
 25336  0185FE                     l9784:
 25337                           
 25338                           ;stkvar	_exp @ sp[(-5)+4]
 25339  0185FE  50E1               	movf	fsr1l,w,c
 25340  018600  0FFF               	addlw	-1
 25341  018602  6ED9               	movwf	fsr2l,c
 25342  018604  50E2               	movf	fsr1h,w,c
 25343  018606  6EDA               	movwf	fsr2h,c
 25344  018608  0EFF               	movlw	255
 25345  01860A  22DA               	addwfc	fsr2h,f,c
 25346  01860C  90D8               	bcf	status,0,c
 25347  01860E  32DF               	rrcf	indf2,f,c
 25348                           
 25349                           ;stkvar	_exp @ sp[(-5)+4]
 25350  018610  0EFF               	movlw	-1
 25351  018612  006F FF8C  F00C    	movff	plusw1,btemp+11
 25352  018618  0060  F030  F005   	movff	btemp+11,btemp+4
 25353  01861E  6A06               	clrf	(btemp+5)^0,c
 25354  018620  6A07               	clrf	(btemp+6)^0,c
 25355  018622  6A08               	clrf	(btemp+7)^0,c
 25356  018624  0060  F014  F008   	movff	btemp+4,btemp+7
 25357  01862A  6A07               	clrf	(btemp+6)^0,c
 25358  01862C  6A06               	clrf	(btemp+5)^0,c
 25359  01862E  6A05               	clrf	(btemp+4)^0,c
 25360                           
 25361                           ;stkvar	_arg @ sp[(-5)+0]
 25362  018630  50E1               	movf	fsr1l,w,c
 25363  018632  0FFB               	addlw	-5
 25364  018634  6ED9               	movwf	fsr2l,c
 25365  018636  50E2               	movf	fsr1h,w,c
 25366  018638  6EDA               	movwf	fsr2h,c
 25367  01863A  0EFF               	movlw	255
 25368  01863C  22DA               	addwfc	fsr2h,f,c
 25369  01863E  5005               	movf	(btemp+4)^0,w,c
 25370  018640  12DE               	iorwf	postinc2,f,c
 25371  018642  5006               	movf	(btemp+5)^0,w,c
 25372  018644  12DE               	iorwf	postinc2,f,c
 25373  018646  5007               	movf	(btemp+6)^0,w,c
 25374  018648  12DE               	iorwf	postinc2,f,c
 25375  01864A  5008               	movf	(btemp+7)^0,w,c
 25376  01864C  12DE               	iorwf	postinc2,f,c
 25377                           
 25378                           ;stkvar	_sign @ sp[(-5)+-1]
 25379  01864E  0EFA               	movlw	-6
 25380  018650  50E3               	movf	plusw1,w,c
 25381  018652  B4D8               	btfsc	status,2,c
 25382  018654  D005               	goto	l9794
 25383                           
 25384                           ;stkvar	_val @ sp[(-5)+-5]
 25385  018656  0EF9               	movlw	-7
 25386  018658  AEE3               	btfss	plusw1,7,c
 25387  01865A  D002               	goto	l9794
 25388                           
 25389                           ;stkvar	_arg @ sp[(-5)+0]
 25390  01865C  0EFE               	movlw	-2
 25391  01865E  8EE3               	bsf	plusw1,7,c
 25392  018660                     l9794:
 25393                           
 25394                           ;stkvar	_arg @ sp[(-5)+0]
 25395  018660  0EFB               	movlw	-5
 25396  018662  006F FF8C  F001    	movff	plusw1,btemp
 25397  018668  0EFC               	movlw	-4
 25398  01866A  006F FF8C  F002    	movff	plusw1,btemp+1
 25399  018670  0EFD               	movlw	-3
 25400  018672  006F FF8C  F003    	movff	plusw1,btemp+2
 25401  018678  0EFE               	movlw	-2
 25402  01867A  006F FF8C  F004    	movff	plusw1,btemp+3
 25403  018680                     l3113:
 25404                           
 25405                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 25406  018680  0EF6               	movlw	246
 25407  018682  26E1               	addwf	fsr1l,f,c
 25408  018684  0EFF               	movlw	255
 25409  018686  22E2               	addwfc	fsr1h,f,c
 25410  018688  0012               	return		;funcret
 25411  01868A                     __end_of___xxtofl:
 25412                           	opt callstack 0
 25413                           
 25414 ;; *************** function ___fldiv *****************
 25415 ;; Defined at:
 25416 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 25417 ;; Parameters:    Size  Location     Type
 25418 ;;  b               4  [STACK] unsigned char 
 25419 ;;  a               4  [STACK] unsigned char 
 25420 ;; Auto vars:     Size  Location     Type
 25421 ;;  grs             4  [STACK] unsigned long 
 25422 ;;  rem             4  [STACK] unsigned long 
 25423 ;;  new_exp         2  [STACK] short 
 25424 ;;  aexp            1  [STACK] unsigned char 
 25425 ;;  bexp            1  [STACK] unsigned char 
 25426 ;;  sign            1  [STACK] unsigned char 
 25427 ;; Return value:  Size  Location     Type
 25428 ;;                  4  [STACK] unsigned char 
 25429 ;; Registers used:
 25430 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 25431 ;; Tracked objects:
 25432 ;;		On entry : 0/0
 25433 ;;		On exit  : 0/0
 25434 ;;		Unchanged: 0/0
 25435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25440 ;;Total ram usage:        0 bytes
 25441 ;; Hardware stack levels used:    1
 25442 ;; Hardware stack levels required when called:   15
 25443 ;; This function calls:
 25444 ;;		Nothing
 25445 ;; This function is called by:
 25446 ;;		_conv_raw_result
 25447 ;;		_calc_bsoc
 25448 ;;		_init_bsoc
 25449 ;;		_esr_check
 25450 ;;		_efgtoa
 25451 ;; This function uses a reentrant model
 25452 ;;
 25453                           
 25454                           	psect	text102
 25455  014D6C                     __ptext102:
 25456                           	opt callstack 0
 25457  014D6C                     ___fldiv:
 25458                           	opt callstack 0
 25459                           
 25460                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 25461  014D6C  0E0D               	movlw	13
 25462  014D6E  26E1               	addwf	fsr1l,f,c
 25463  014D70  0E00               	movlw	0
 25464  014D72  22E2               	addwfc	fsr1h,f,c
 25465                           
 25466                           ;stkvar	_b @ sp[(-13)+-4]
 25467                           
 25468                           ;incstack = 0
 25469 ;; hardware stack exceeded
 25470  014D74  0EF2               	movlw	242
 25471  014D76  24E1               	addwf	fsr1l,w,c
 25472  014D78  6ED9               	movwf	fsr2l,c
 25473  014D7A  0EFF               	movlw	255
 25474  014D7C  20E2               	addwfc	fsr1h,w,c
 25475  014D7E  6EDA               	movwf	fsr2h,c
 25476  014D80  50DF               	movf	indf2,w,c
 25477  014D82  6E0C               	movwf	(btemp+11)^0,c
 25478  014D84  0E80               	movlw	128
 25479  014D86  160C               	andwf	(btemp+11)^0,f,c
 25480                           
 25481                           ;stkvar	_sign @ sp[(-13)+12]
 25482  014D88  0EFF               	movlw	-1
 25483  014D8A  0060  F033  FFE3   	movff	btemp+11,plusw1
 25484                           
 25485                           ;stkvar	_b @ sp[(-13)+-4]
 25486  014D90  0EF2               	movlw	242
 25487  014D92  24E1               	addwf	fsr1l,w,c
 25488  014D94  6ED9               	movwf	fsr2l,c
 25489  014D96  0EFF               	movlw	255
 25490  014D98  20E2               	addwfc	fsr1h,w,c
 25491  014D9A  6EDA               	movwf	fsr2h,c
 25492  014D9C  50DF               	movf	indf2,w,c
 25493  014D9E  6E0C               	movwf	(btemp+11)^0,c
 25494  014DA0  90D8               	bcf	status,0,c
 25495  014DA2  340C               	rlcf	(btemp+11)^0,w,c
 25496  014DA4  6E0B               	movwf	(btemp+10)^0,c
 25497                           
 25498                           ;stkvar	_bexp @ sp[(-13)+11]
 25499  014DA6  0EFE               	movlw	-2
 25500  014DA8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25501                           
 25502                           ;stkvar	_b @ sp[(-13)+-4]
 25503  014DAE  0EF1               	movlw	241
 25504  014DB0  24E1               	addwf	fsr1l,w,c
 25505  014DB2  6ED9               	movwf	fsr2l,c
 25506  014DB4  0EFF               	movlw	255
 25507  014DB6  20E2               	addwfc	fsr1h,w,c
 25508  014DB8  6EDA               	movwf	fsr2h,c
 25509  014DBA  AEDF               	btfss	indf2,7,c
 25510  014DBC  D002               	goto	l8324
 25511                           
 25512                           ;stkvar	_bexp @ sp[(-13)+11]
 25513  014DBE  0EFE               	movlw	-2
 25514  014DC0  80E3               	bsf	plusw1,0,c
 25515  014DC2                     l8324:
 25516                           
 25517                           ;stkvar	_bexp @ sp[(-13)+11]
 25518  014DC2  0EFE               	movlw	-2
 25519  014DC4  50E3               	movf	plusw1,w,c
 25520  014DC6  B4D8               	btfsc	status,2,c
 25521  014DC8  D027               	goto	l8334
 25522                           
 25523                           ;stkvar	_bexp @ sp[(-13)+11]
 25524  014DCA  0EFE               	movlw	-2
 25525  014DCC  28E3               	incf	plusw1,w,c
 25526  014DCE  A4D8               	btfss	status,2,c
 25527  014DD0  D018               	goto	l8330
 25528  014DD2  0E00               	movlw	0
 25529  014DD4  6E09               	movwf	(btemp+8)^0,c
 25530  014DD6  0E00               	movlw	0
 25531  014DD8  6E0A               	movwf	(btemp+9)^0,c
 25532  014DDA  0E00               	movlw	0
 25533  014DDC  6E0B               	movwf	(btemp+10)^0,c
 25534  014DDE  0E00               	movlw	0
 25535  014DE0  6E0C               	movwf	(btemp+11)^0,c
 25536                           
 25537                           ;stkvar	_b @ sp[(-13)+-4]
 25538  014DE2  0EEF               	movlw	-17
 25539  014DE4  0060  F027  FFE3   	movff	btemp+8,plusw1
 25540  014DEA  0EF0               	movlw	-16
 25541  014DEC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25542  014DF2  0EF1               	movlw	-15
 25543  014DF4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25544  014DFA  0EF2               	movlw	-14
 25545  014DFC  0060  F033  FFE3   	movff	btemp+11,plusw1
 25546  014E02                     l8330:
 25547                           
 25548                           ;stkvar	_b @ sp[(-13)+-4]
 25549  014E02  0EF1               	movlw	-15
 25550  014E04  8EE3               	bsf	plusw1,7,c
 25551                           
 25552                           ;stkvar	_b @ sp[(-13)+-4]
 25553  014E06  0EF2               	movlw	242
 25554  014E08  24E1               	addwf	fsr1l,w,c
 25555  014E0A  6ED9               	movwf	fsr2l,c
 25556  014E0C  0EFF               	movlw	255
 25557  014E0E  20E2               	addwfc	fsr1h,w,c
 25558  014E10  6EDA               	movwf	fsr2h,c
 25559  014E12  0E00               	movlw	0
 25560  014E14  6EDF               	movwf	indf2,c
 25561  014E16  D018               	goto	l8336
 25562  014E18                     l8334:
 25563  014E18  0E00               	movlw	0
 25564  014E1A  6E09               	movwf	(btemp+8)^0,c
 25565  014E1C  0E00               	movlw	0
 25566  014E1E  6E0A               	movwf	(btemp+9)^0,c
 25567  014E20  0E00               	movlw	0
 25568  014E22  6E0B               	movwf	(btemp+10)^0,c
 25569  014E24  0E00               	movlw	0
 25570  014E26  6E0C               	movwf	(btemp+11)^0,c
 25571                           
 25572                           ;stkvar	_b @ sp[(-13)+-4]
 25573  014E28  0EEF               	movlw	-17
 25574  014E2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 25575  014E30  0EF0               	movlw	-16
 25576  014E32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25577  014E38  0EF1               	movlw	-15
 25578  014E3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25579  014E40  0EF2               	movlw	-14
 25580  014E42  0060  F033  FFE3   	movff	btemp+11,plusw1
 25581  014E48                     l8336:
 25582                           
 25583                           ;stkvar	_a @ sp[(-13)+-8]
 25584  014E48  0EEE               	movlw	238
 25585  014E4A  24E1               	addwf	fsr1l,w,c
 25586  014E4C  6ED9               	movwf	fsr2l,c
 25587  014E4E  0EFF               	movlw	255
 25588  014E50  20E2               	addwfc	fsr1h,w,c
 25589  014E52  6EDA               	movwf	fsr2h,c
 25590  014E54  50DF               	movf	indf2,w,c
 25591  014E56  6E0C               	movwf	(btemp+11)^0,c
 25592  014E58  0E80               	movlw	128
 25593  014E5A  160C               	andwf	(btemp+11)^0,f,c
 25594                           
 25595                           ;stkvar	_sign @ sp[(-13)+12]
 25596  014E5C  50E1               	movf	fsr1l,w,c
 25597  014E5E  0FFF               	addlw	-1
 25598  014E60  6ED9               	movwf	fsr2l,c
 25599  014E62  50E2               	movf	fsr1h,w,c
 25600  014E64  6EDA               	movwf	fsr2h,c
 25601  014E66  0EFF               	movlw	255
 25602  014E68  22DA               	addwfc	fsr2h,f,c
 25603  014E6A  500C               	movf	(btemp+11)^0,w,c
 25604  014E6C  1ADF               	xorwf	indf2,f,c
 25605                           
 25606                           ;stkvar	_a @ sp[(-13)+-8]
 25607  014E6E  0EEE               	movlw	238
 25608  014E70  24E1               	addwf	fsr1l,w,c
 25609  014E72  6ED9               	movwf	fsr2l,c
 25610  014E74  0EFF               	movlw	255
 25611  014E76  20E2               	addwfc	fsr1h,w,c
 25612  014E78  6EDA               	movwf	fsr2h,c
 25613  014E7A  50DF               	movf	indf2,w,c
 25614  014E7C  6E0C               	movwf	(btemp+11)^0,c
 25615  014E7E  90D8               	bcf	status,0,c
 25616  014E80  340C               	rlcf	(btemp+11)^0,w,c
 25617  014E82  6E0B               	movwf	(btemp+10)^0,c
 25618                           
 25619                           ;stkvar	_aexp @ sp[(-13)+10]
 25620  014E84  0EFD               	movlw	-3
 25621  014E86  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25622                           
 25623                           ;stkvar	_a @ sp[(-13)+-8]
 25624  014E8C  0EED               	movlw	237
 25625  014E8E  24E1               	addwf	fsr1l,w,c
 25626  014E90  6ED9               	movwf	fsr2l,c
 25627  014E92  0EFF               	movlw	255
 25628  014E94  20E2               	addwfc	fsr1h,w,c
 25629  014E96  6EDA               	movwf	fsr2h,c
 25630  014E98  AEDF               	btfss	indf2,7,c
 25631  014E9A  D002               	goto	l8344
 25632                           
 25633                           ;stkvar	_aexp @ sp[(-13)+10]
 25634  014E9C  0EFD               	movlw	-3
 25635  014E9E  80E3               	bsf	plusw1,0,c
 25636  014EA0                     l8344:
 25637                           
 25638                           ;stkvar	_aexp @ sp[(-13)+10]
 25639  014EA0  0EFD               	movlw	-3
 25640  014EA2  50E3               	movf	plusw1,w,c
 25641  014EA4  B4D8               	btfsc	status,2,c
 25642  014EA6  D027               	goto	l8354
 25643                           
 25644                           ;stkvar	_aexp @ sp[(-13)+10]
 25645  014EA8  0EFD               	movlw	-3
 25646  014EAA  28E3               	incf	plusw1,w,c
 25647  014EAC  A4D8               	btfss	status,2,c
 25648  014EAE  D018               	goto	l8350
 25649  014EB0  0E00               	movlw	0
 25650  014EB2  6E09               	movwf	(btemp+8)^0,c
 25651  014EB4  0E00               	movlw	0
 25652  014EB6  6E0A               	movwf	(btemp+9)^0,c
 25653  014EB8  0E00               	movlw	0
 25654  014EBA  6E0B               	movwf	(btemp+10)^0,c
 25655  014EBC  0E00               	movlw	0
 25656  014EBE  6E0C               	movwf	(btemp+11)^0,c
 25657                           
 25658                           ;stkvar	_a @ sp[(-13)+-8]
 25659  014EC0  0EEB               	movlw	-21
 25660  014EC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 25661  014EC8  0EEC               	movlw	-20
 25662  014ECA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25663  014ED0  0EED               	movlw	-19
 25664  014ED2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25665  014ED8  0EEE               	movlw	-18
 25666  014EDA  0060  F033  FFE3   	movff	btemp+11,plusw1
 25667  014EE0                     l8350:
 25668                           
 25669                           ;stkvar	_a @ sp[(-13)+-8]
 25670  014EE0  0EED               	movlw	-19
 25671  014EE2  8EE3               	bsf	plusw1,7,c
 25672                           
 25673                           ;stkvar	_a @ sp[(-13)+-8]
 25674  014EE4  0EEE               	movlw	238
 25675  014EE6  24E1               	addwf	fsr1l,w,c
 25676  014EE8  6ED9               	movwf	fsr2l,c
 25677  014EEA  0EFF               	movlw	255
 25678  014EEC  20E2               	addwfc	fsr1h,w,c
 25679  014EEE  6EDA               	movwf	fsr2h,c
 25680  014EF0  0E00               	movlw	0
 25681  014EF2  6EDF               	movwf	indf2,c
 25682  014EF4  D018               	goto	l8356
 25683  014EF6                     l8354:
 25684  014EF6  0E00               	movlw	0
 25685  014EF8  6E09               	movwf	(btemp+8)^0,c
 25686  014EFA  0E00               	movlw	0
 25687  014EFC  6E0A               	movwf	(btemp+9)^0,c
 25688  014EFE  0E00               	movlw	0
 25689  014F00  6E0B               	movwf	(btemp+10)^0,c
 25690  014F02  0E00               	movlw	0
 25691  014F04  6E0C               	movwf	(btemp+11)^0,c
 25692                           
 25693                           ;stkvar	_a @ sp[(-13)+-8]
 25694  014F06  0EEB               	movlw	-21
 25695  014F08  0060  F027  FFE3   	movff	btemp+8,plusw1
 25696  014F0E  0EEC               	movlw	-20
 25697  014F10  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25698  014F16  0EED               	movlw	-19
 25699  014F18  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25700  014F1E  0EEE               	movlw	-18
 25701  014F20  0060  F033  FFE3   	movff	btemp+11,plusw1
 25702  014F26                     l8356:
 25703                           
 25704                           ;stkvar	_a @ sp[(-13)+-8]
 25705  014F26  0EEB               	movlw	-21
 25706  014F28  50E3               	movf	plusw1,w,c
 25707  014F2A  E139               	bnz	l8368
 25708  014F2C  0EEC               	movlw	-20
 25709  014F2E  50E3               	movf	plusw1,w,c
 25710  014F30  E136               	bnz	l8368
 25711  014F32  0EED               	movlw	-19
 25712  014F34  50E3               	movf	plusw1,w,c
 25713  014F36  E133               	bnz	l8368
 25714  014F38  0EEE               	movlw	-18
 25715  014F3A  50E3               	movf	plusw1,w,c
 25716  014F3C  A4D8               	btfss	status,2,c
 25717  014F3E  D02F               	goto	l8368
 25718                           
 25719                           ;stkvar	_b @ sp[(-13)+-4]
 25720  014F40  0EEF               	movlw	-17
 25721  014F42  6AE3               	clrf	plusw1,c
 25722  014F44  0EF0               	movlw	-16
 25723  014F46  6AE3               	clrf	plusw1,c
 25724  014F48  0EF1               	movlw	-15
 25725  014F4A  6AE3               	clrf	plusw1,c
 25726  014F4C  0EF2               	movlw	-14
 25727  014F4E  6AE3               	clrf	plusw1,c
 25728                           
 25729                           ;stkvar	_b @ sp[(-13)+-4]
 25730  014F50  0EF1               	movlw	241
 25731  014F52  24E1               	addwf	fsr1l,w,c
 25732  014F54  6ED9               	movwf	fsr2l,c
 25733  014F56  0EFF               	movlw	255
 25734  014F58  20E2               	addwfc	fsr1h,w,c
 25735  014F5A  6EDA               	movwf	fsr2h,c
 25736  014F5C  0E80               	movlw	128
 25737  014F5E  12DE               	iorwf	postinc2,f,c
 25738  014F60  0E7F               	movlw	127
 25739  014F62  12DD               	iorwf	postdec2,f,c
 25740  014F64                     l8362:
 25741                           
 25742                           ;stkvar	_sign @ sp[(-13)+12]
 25743  014F64  0EFF               	movlw	-1
 25744  014F66  006F FF8C  F00C    	movff	plusw1,btemp+11
 25745                           
 25746                           ;stkvar	_b @ sp[(-13)+-4]
 25747  014F6C  0EF2               	movlw	242
 25748  014F6E  24E1               	addwf	fsr1l,w,c
 25749  014F70  6ED9               	movwf	fsr2l,c
 25750  014F72  0EFF               	movlw	255
 25751  014F74  20E2               	addwfc	fsr1h,w,c
 25752  014F76  6EDA               	movwf	fsr2h,c
 25753  014F78  500C               	movf	(btemp+11)^0,w,c
 25754  014F7A  12DF               	iorwf	indf2,f,c
 25755                           
 25756                           ;stkvar	_b @ sp[(-13)+-4]
 25757  014F7C  0EEF               	movlw	-17
 25758  014F7E  006F FF8C  F001    	movff	plusw1,btemp
 25759  014F84  0EF0               	movlw	-16
 25760  014F86  006F FF8C  F002    	movff	plusw1,btemp+1
 25761  014F8C  0EF1               	movlw	-15
 25762  014F8E  006F FF8C  F003    	movff	plusw1,btemp+2
 25763  014F94  0EF2               	movlw	-14
 25764  014F96  006F FF8C  F004    	movff	plusw1,btemp+3
 25765  014F9C  D19F               	goto	l3037
 25766  014F9E                     l8368:
 25767                           
 25768                           ;stkvar	_bexp @ sp[(-13)+11]
 25769  014F9E  0EFE               	movlw	-2
 25770  014FA0  50E3               	movf	plusw1,w,c
 25771  014FA2  A4D8               	btfss	status,2,c
 25772  014FA4  D009               	goto	l8376
 25773  014FA6  0E00               	movlw	0
 25774  014FA8  6E01               	movwf	btemp^0,c
 25775  014FAA  0E00               	movlw	0
 25776  014FAC  6E02               	movwf	(btemp+1)^0,c
 25777  014FAE  0E00               	movlw	0
 25778  014FB0  6E03               	movwf	(btemp+2)^0,c
 25779  014FB2  0E00               	movlw	0
 25780  014FB4  6E04               	movwf	(btemp+3)^0,c
 25781  014FB6  D192               	goto	l3037
 25782  014FB8                     l8376:
 25783                           
 25784                           ;stkvar	_bexp @ sp[(-13)+11]
 25785  014FB8  0EFE               	movlw	-2
 25786  014FBA  50E3               	movf	plusw1,w,c
 25787  014FBC  6E0B               	movwf	(btemp+10)^0,c
 25788  014FBE  6A0C               	clrf	(btemp+11)^0,c
 25789                           
 25790                           ;stkvar	_aexp @ sp[(-13)+10]
 25791  014FC0  0EFD               	movlw	-3
 25792  014FC2  50E3               	movf	plusw1,w,c
 25793  014FC4  5E0B               	subwf	(btemp+10)^0,f,c
 25794  014FC6  0E00               	movlw	0
 25795  014FC8  5A0C               	subwfb	(btemp+11)^0,f,c
 25796  014FCA  0E7F               	movlw	127
 25797  014FCC  260B               	addwf	(btemp+10)^0,f,c
 25798  014FCE  0E00               	movlw	0
 25799  014FD0  220C               	addwfc	(btemp+11)^0,f,c
 25800                           
 25801                           ;stkvar	_new_exp @ sp[(-13)+8]
 25802  014FD2  0EFB               	movlw	-5
 25803  014FD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25804  014FDA  0EFC               	movlw	-4
 25805  014FDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 25806                           
 25807                           ;stkvar	_b @ sp[(-13)+-4]
 25808  014FE2  0EEF               	movlw	-17
 25809  014FE4  006F FF8C  F009    	movff	plusw1,btemp+8
 25810  014FEA  0EF0               	movlw	-16
 25811  014FEC  006F FF8C  F00A    	movff	plusw1,btemp+9
 25812  014FF2  0EF1               	movlw	-15
 25813  014FF4  006F FF8C  F00B    	movff	plusw1,btemp+10
 25814  014FFA  0EF2               	movlw	-14
 25815  014FFC  006F FF8C  F00C    	movff	plusw1,btemp+11
 25816                           
 25817                           ;stkvar	_rem @ sp[(-13)+4]
 25818  015002  0EF7               	movlw	-9
 25819  015004  0060  F027  FFE3   	movff	btemp+8,plusw1
 25820  01500A  0EF8               	movlw	-8
 25821  01500C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25822  015012  0EF9               	movlw	-7
 25823  015014  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25824  01501A  0EFA               	movlw	-6
 25825  01501C  0060  F033  FFE3   	movff	btemp+11,plusw1
 25826                           
 25827                           ;stkvar	_b @ sp[(-13)+-4]
 25828  015022  0EEF               	movlw	-17
 25829  015024  6AE3               	clrf	plusw1,c
 25830  015026  0EF0               	movlw	-16
 25831  015028  6AE3               	clrf	plusw1,c
 25832  01502A  0EF1               	movlw	-15
 25833  01502C  6AE3               	clrf	plusw1,c
 25834  01502E  0EF2               	movlw	-14
 25835  015030  6AE3               	clrf	plusw1,c
 25836                           
 25837                           ;stkvar	_grs @ sp[(-13)+0]
 25838  015032  0EF3               	movlw	-13
 25839  015034  6AE3               	clrf	plusw1,c
 25840  015036  0EF4               	movlw	-12
 25841  015038  6AE3               	clrf	plusw1,c
 25842  01503A  0EF5               	movlw	-11
 25843  01503C  6AE3               	clrf	plusw1,c
 25844  01503E  0EF6               	movlw	-10
 25845  015040  6AE3               	clrf	plusw1,c
 25846                           
 25847                           ;stkvar	_aexp @ sp[(-13)+10]
 25848  015042  0EFD               	movlw	-3
 25849  015044  6AE3               	clrf	plusw1,c
 25850  015046  D050               	goto	l8404
 25851  015048                     l8386:
 25852                           
 25853                           ;stkvar	_aexp @ sp[(-13)+10]
 25854  015048  0EFD               	movlw	-3
 25855  01504A  50E3               	movf	plusw1,w,c
 25856  01504C  B4D8               	btfsc	status,2,c
 25857  01504E  D020               	goto	l8396
 25858                           
 25859                           ;stkvar	_rem @ sp[(-13)+4]
 25860  015050  90D8               	bcf	status,0,c
 25861  015052  0EF7               	movlw	-9
 25862  015054  36E3               	rlcf	plusw1,f,c
 25863  015056  0EF8               	movlw	-8
 25864  015058  36E3               	rlcf	plusw1,f,c
 25865  01505A  0EF9               	movlw	-7
 25866  01505C  36E3               	rlcf	plusw1,f,c
 25867  01505E  0EFA               	movlw	-6
 25868  015060  36E3               	rlcf	plusw1,f,c
 25869                           
 25870                           ;stkvar	_b @ sp[(-13)+-4]
 25871  015062  90D8               	bcf	status,0,c
 25872  015064  0EEF               	movlw	-17
 25873  015066  36E3               	rlcf	plusw1,f,c
 25874  015068  0EF0               	movlw	-16
 25875  01506A  36E3               	rlcf	plusw1,f,c
 25876  01506C  0EF1               	movlw	-15
 25877  01506E  36E3               	rlcf	plusw1,f,c
 25878  015070  0EF2               	movlw	-14
 25879  015072  36E3               	rlcf	plusw1,f,c
 25880                           
 25881                           ;stkvar	_grs @ sp[(-13)+0]
 25882  015074  0EF6               	movlw	-10
 25883  015076  AEE3               	btfss	plusw1,7,c
 25884  015078  D002               	goto	l8394
 25885                           
 25886                           ;stkvar	_b @ sp[(-13)+-4]
 25887  01507A  0EEF               	movlw	-17
 25888  01507C  80E3               	bsf	plusw1,0,c
 25889  01507E                     l8394:
 25890                           
 25891                           ;stkvar	_grs @ sp[(-13)+0]
 25892  01507E  90D8               	bcf	status,0,c
 25893  015080  0EF3               	movlw	-13
 25894  015082  36E3               	rlcf	plusw1,f,c
 25895  015084  0EF4               	movlw	-12
 25896  015086  36E3               	rlcf	plusw1,f,c
 25897  015088  0EF5               	movlw	-11
 25898  01508A  36E3               	rlcf	plusw1,f,c
 25899  01508C  0EF6               	movlw	-10
 25900  01508E  36E3               	rlcf	plusw1,f,c
 25901  015090                     l8396:
 25902                           
 25903                           ;stkvar	_a @ sp[(-13)+-8]
 25904                           ;stkvar	_rem @ sp[(-13)+4]
 25905  015090  50E1               	movf	fsr1l,w,c
 25906  015092  0FF7               	addlw	-9
 25907  015094  6ED9               	movwf	fsr2l,c
 25908  015096  50E2               	movf	fsr1h,w,c
 25909  015098  6EDA               	movwf	fsr2h,c
 25910  01509A  0EFF               	movlw	255
 25911  01509C  22DA               	addwfc	fsr2h,f,c
 25912  01509E  0EEB               	movlw	-21
 25913  0150A0  50E3               	movf	plusw1,w,c
 25914  0150A2  5CDE               	subwf	postinc2,w,c
 25915  0150A4  0EEC               	movlw	-20
 25916  0150A6  50E3               	movf	plusw1,w,c
 25917  0150A8  58DE               	subwfb	postinc2,w,c
 25918  0150AA  0EED               	movlw	-19
 25919  0150AC  50E3               	movf	plusw1,w,c
 25920  0150AE  58DE               	subwfb	postinc2,w,c
 25921  0150B0  0EEE               	movlw	-18
 25922  0150B2  50E3               	movf	plusw1,w,c
 25923  0150B4  58DE               	subwfb	postinc2,w,c
 25924  0150B6  A0D8               	btfss	status,0,c
 25925  0150B8  D015               	goto	l8402
 25926                           
 25927                           ;stkvar	_grs @ sp[(-13)+0]
 25928  0150BA  0EF6               	movlw	-10
 25929  0150BC  8CE3               	bsf	plusw1,6,c
 25930                           
 25931                           ;stkvar	_a @ sp[(-13)+-8]
 25932                           ;stkvar	_rem @ sp[(-13)+4]
 25933  0150BE  50E1               	movf	fsr1l,w,c
 25934  0150C0  0FF7               	addlw	-9
 25935  0150C2  6ED9               	movwf	fsr2l,c
 25936  0150C4  50E2               	movf	fsr1h,w,c
 25937  0150C6  6EDA               	movwf	fsr2h,c
 25938  0150C8  0EFF               	movlw	255
 25939  0150CA  22DA               	addwfc	fsr2h,f,c
 25940  0150CC  0EEB               	movlw	-21
 25941  0150CE  50E3               	movf	plusw1,w,c
 25942  0150D0  5EDE               	subwf	postinc2,f,c
 25943  0150D2  0EEC               	movlw	-20
 25944  0150D4  50E3               	movf	plusw1,w,c
 25945  0150D6  5ADE               	subwfb	postinc2,f,c
 25946  0150D8  0EED               	movlw	-19
 25947  0150DA  50E3               	movf	plusw1,w,c
 25948  0150DC  5ADE               	subwfb	postinc2,f,c
 25949  0150DE  0EEE               	movlw	-18
 25950  0150E0  50E3               	movf	plusw1,w,c
 25951  0150E2  5ADE               	subwfb	postinc2,f,c
 25952  0150E4                     l8402:
 25953                           
 25954                           ;stkvar	_aexp @ sp[(-13)+10]
 25955  0150E4  0EFD               	movlw	-3
 25956  0150E6  2AE3               	incf	plusw1,f,c
 25957  0150E8                     l8404:
 25958                           
 25959                           ;stkvar	_aexp @ sp[(-13)+10]
 25960  0150E8  0EFD               	movlw	-3
 25961  0150EA  006F FF8C  F001    	movff	plusw1,btemp
 25962  0150F0  0E19               	movlw	25
 25963  0150F2  6401               	cpfsgt	btemp^0,c
 25964  0150F4  D7A9               	goto	l8386
 25965                           
 25966                           ;stkvar	_rem @ sp[(-13)+4]
 25967  0150F6  0EF7               	movlw	-9
 25968  0150F8  50E3               	movf	plusw1,w,c
 25969  0150FA  E10A               	bnz	u6700
 25970  0150FC  0EF8               	movlw	-8
 25971  0150FE  50E3               	movf	plusw1,w,c
 25972  015100  E107               	bnz	u6700
 25973  015102  0EF9               	movlw	-7
 25974  015104  50E3               	movf	plusw1,w,c
 25975  015106  E104               	bnz	u6700
 25976  015108  0EFA               	movlw	-6
 25977  01510A  50E3               	movf	plusw1,w,c
 25978  01510C  B4D8               	btfsc	status,2,c
 25979  01510E  D024               	goto	l8420
 25980  015110                     u6700:
 25981                           
 25982                           ;stkvar	_grs @ sp[(-13)+0]
 25983  015110  0EF3               	movlw	-13
 25984  015112  80E3               	bsf	plusw1,0,c
 25985  015114  D021               	goto	l8420
 25986  015116                     l8410:
 25987                           
 25988                           ;stkvar	_b @ sp[(-13)+-4]
 25989  015116  90D8               	bcf	status,0,c
 25990  015118  0EEF               	movlw	-17
 25991  01511A  36E3               	rlcf	plusw1,f,c
 25992  01511C  0EF0               	movlw	-16
 25993  01511E  36E3               	rlcf	plusw1,f,c
 25994  015120  0EF1               	movlw	-15
 25995  015122  36E3               	rlcf	plusw1,f,c
 25996  015124  0EF2               	movlw	-14
 25997  015126  36E3               	rlcf	plusw1,f,c
 25998                           
 25999                           ;stkvar	_grs @ sp[(-13)+0]
 26000  015128  0EF6               	movlw	-10
 26001  01512A  AEE3               	btfss	plusw1,7,c
 26002  01512C  D002               	goto	l8416
 26003                           
 26004                           ;stkvar	_b @ sp[(-13)+-4]
 26005  01512E  0EEF               	movlw	-17
 26006  015130  80E3               	bsf	plusw1,0,c
 26007  015132                     l8416:
 26008                           
 26009                           ;stkvar	_grs @ sp[(-13)+0]
 26010  015132  90D8               	bcf	status,0,c
 26011  015134  0EF3               	movlw	-13
 26012  015136  36E3               	rlcf	plusw1,f,c
 26013  015138  0EF4               	movlw	-12
 26014  01513A  36E3               	rlcf	plusw1,f,c
 26015  01513C  0EF5               	movlw	-11
 26016  01513E  36E3               	rlcf	plusw1,f,c
 26017  015140  0EF6               	movlw	-10
 26018  015142  36E3               	rlcf	plusw1,f,c
 26019                           
 26020                           ;stkvar	_new_exp @ sp[(-13)+8]
 26021  015144  50E1               	movf	fsr1l,w,c
 26022  015146  0FFB               	addlw	-5
 26023  015148  6ED9               	movwf	fsr2l,c
 26024  01514A  50E2               	movf	fsr1h,w,c
 26025  01514C  6EDA               	movwf	fsr2h,c
 26026  01514E  0EFF               	movlw	255
 26027  015150  22DA               	addwfc	fsr2h,f,c
 26028  015152  06DE               	decf	postinc2,f,c
 26029  015154  0E00               	movlw	0
 26030  015156  5ADD               	subwfb	postdec2,f,c
 26031  015158                     l8420:
 26032                           
 26033                           ;stkvar	_b @ sp[(-13)+-4]
 26034  015158  0EF1               	movlw	-15
 26035  01515A  AEE3               	btfss	plusw1,7,c
 26036  01515C  D7DC               	goto	l8410
 26037                           
 26038                           ;stkvar	_aexp @ sp[(-13)+10]
 26039  01515E  0EFD               	movlw	-3
 26040  015160  6AE3               	clrf	plusw1,c
 26041                           
 26042                           ;stkvar	_grs @ sp[(-13)+0]
 26043  015162  0EF6               	movlw	-10
 26044  015164  AEE3               	btfss	plusw1,7,c
 26045  015166  D020               	goto	l8434
 26046                           
 26047                           ;stkvar	_grs @ sp[(-13)+0]
 26048  015168  50E1               	movf	fsr1l,w,c
 26049  01516A  0FF3               	addlw	-13
 26050  01516C  6ED9               	movwf	fsr2l,c
 26051  01516E  50E2               	movf	fsr1h,w,c
 26052  015170  6EDA               	movwf	fsr2h,c
 26053  015172  0EFF               	movlw	255
 26054  015174  22DA               	addwfc	fsr2h,f,c
 26055  015176  0EFF               	movlw	255
 26056  015178  14DE               	andwf	postinc2,w,c
 26057  01517A  6E09               	movwf	(btemp+8)^0,c
 26058  01517C  0EFF               	movlw	255
 26059  01517E  14DE               	andwf	postinc2,w,c
 26060  015180  6E0A               	movwf	(btemp+9)^0,c
 26061  015182  0EFF               	movlw	255
 26062  015184  14DE               	andwf	postinc2,w,c
 26063  015186  6E0B               	movwf	(btemp+10)^0,c
 26064  015188  0E7F               	movlw	127
 26065  01518A  14DE               	andwf	postinc2,w,c
 26066  01518C  6E0C               	movwf	(btemp+11)^0,c
 26067  01518E  5009               	movf	(btemp+8)^0,w,c
 26068  015190  100A               	iorwf	(btemp+9)^0,w,c
 26069  015192  100B               	iorwf	(btemp+10)^0,w,c
 26070  015194  100C               	iorwf	(btemp+11)^0,w,c
 26071  015196  B4D8               	btfsc	status,2,c
 26072  015198  D004               	goto	l8430
 26073  01519A                     u6740:
 26074                           
 26075                           ;stkvar	_aexp @ sp[(-13)+10]
 26076  01519A  0EFD               	movlw	-3
 26077  01519C  6AE3               	clrf	plusw1,c
 26078  01519E  2AE3               	incf	plusw1,f,c
 26079  0151A0  D003               	goto	l8434
 26080  0151A2                     l8430:
 26081                           
 26082                           ;stkvar	_b @ sp[(-13)+-4]
 26083  0151A2  0EEF               	movlw	-17
 26084  0151A4  B0E3               	btfsc	plusw1,0,c
 26085  0151A6  D7F9               	goto	u6740
 26086  0151A8                     l8434:
 26087                           
 26088                           ;stkvar	_aexp @ sp[(-13)+10]
 26089  0151A8  0EFD               	movlw	-3
 26090  0151AA  50E3               	movf	plusw1,w,c
 26091  0151AC  B4D8               	btfsc	status,2,c
 26092  0151AE  D036               	goto	l8444
 26093                           
 26094                           ;stkvar	_b @ sp[(-13)+-4]
 26095  0151B0  50E1               	movf	fsr1l,w,c
 26096  0151B2  0FEF               	addlw	-17
 26097  0151B4  6ED9               	movwf	fsr2l,c
 26098  0151B6  50E2               	movf	fsr1h,w,c
 26099  0151B8  6EDA               	movwf	fsr2h,c
 26100  0151BA  0EFF               	movlw	255
 26101  0151BC  22DA               	addwfc	fsr2h,f,c
 26102  0151BE  2ADE               	incf	postinc2,f,c
 26103  0151C0  0E00               	movlw	0
 26104  0151C2  22DE               	addwfc	postinc2,f,c
 26105  0151C4  22DE               	addwfc	postinc2,f,c
 26106  0151C6  22DE               	addwfc	postinc2,f,c
 26107                           
 26108                           ;stkvar	_b @ sp[(-13)+-4]
 26109  0151C8  0EF2               	movlw	-14
 26110  0151CA  A0E3               	btfss	plusw1,0,c
 26111  0151CC  D027               	goto	l8444
 26112  0151CE  0E01               	movlw	1
 26113  0151D0  6E0C               	movwf	(btemp+11)^0,c
 26114                           
 26115                           ;stkvar	_b @ sp[(-13)+-4]
 26116  0151D2  50E1               	movf	fsr1l,w,c
 26117  0151D4  0FEF               	addlw	-17
 26118  0151D6  6ED9               	movwf	fsr2l,c
 26119  0151D8  50E2               	movf	fsr1h,w,c
 26120  0151DA  6EDA               	movwf	fsr2h,c
 26121  0151DC  0EFF               	movlw	255
 26122  0151DE  22DA               	addwfc	fsr2h,f,c
 26123  0151E0  280C               	incf	(btemp+11)^0,w,c
 26124  0151E2  52DE               	movf	postinc2,f,c
 26125  0151E4  D008               	goto	u6780
 26126  0151E6                     u6785:
 26127  0151E6  52DE               	movf	postinc2,f,c
 26128  0151E8  90D8               	bcf	status,0,c
 26129  0151EA  BEDC               	btfsc	preinc2,7,c
 26130  0151EC  80D8               	bsf	status,0,c
 26131  0151EE  32DD               	rrcf	postdec2,f,c
 26132  0151F0  32DD               	rrcf	postdec2,f,c
 26133  0151F2  32DD               	rrcf	postdec2,f,c
 26134  0151F4  32DE               	rrcf	postinc2,f,c
 26135  0151F6                     u6780:
 26136  0151F6  2EE8               	decfsz	wreg,f,c
 26137  0151F8  D7F6               	goto	u6785
 26138                           
 26139                           ;stkvar	_new_exp @ sp[(-13)+8]
 26140  0151FA  0EFB               	movlw	-5
 26141  0151FC  50E3               	movf	plusw1,w,c
 26142  0151FE  0F01               	addlw	1
 26143  015200  6E01               	movwf	btemp^0,c
 26144  015202  0EFB               	movlw	-5
 26145  015204  0060  F007  FFE3   	movff	btemp,plusw1
 26146  01520A  6A01               	clrf	btemp^0,c
 26147  01520C  0EFC               	movlw	-4
 26148  01520E  50E3               	movf	plusw1,w,c
 26149  015210  2001               	addwfc	btemp^0,w,c
 26150  015212  6E01               	movwf	btemp^0,c
 26151  015214  0EFC               	movlw	-4
 26152  015216  0060  F007  FFE3   	movff	btemp,plusw1
 26153  01521C                     l8444:
 26154                           
 26155                           ;stkvar	_new_exp @ sp[(-13)+8]
 26156  01521C  0EFC               	movlw	-4
 26157  01521E  BEE3               	btfsc	plusw1,7,c
 26158  015220  D01B               	goto	l8450
 26159  015222  0EFC               	movlw	-4
 26160  015224  50E3               	movf	plusw1,w,c
 26161  015226  E104               	bnz	u6790
 26162  015228  0EFB               	movlw	-5
 26163  01522A  28E3               	incf	plusw1,w,c
 26164  01522C  A0D8               	btfss	status,0,c
 26165  01522E  D014               	goto	l8450
 26166  015230                     u6790:
 26167  015230  0EFF               	movlw	255
 26168  015232  6E0B               	movwf	(btemp+10)^0,c
 26169  015234  0E00               	movlw	0
 26170  015236  6E0C               	movwf	(btemp+11)^0,c
 26171                           
 26172                           ;stkvar	_new_exp @ sp[(-13)+8]
 26173  015238  0EFB               	movlw	-5
 26174  01523A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26175  015240  0EFC               	movlw	-4
 26176  015242  0060  F033  FFE3   	movff	btemp+11,plusw1
 26177                           
 26178                           ;stkvar	_b @ sp[(-13)+-4]
 26179  015248  0EEF               	movlw	-17
 26180  01524A  6AE3               	clrf	plusw1,c
 26181  01524C  0EF0               	movlw	-16
 26182  01524E  6AE3               	clrf	plusw1,c
 26183  015250  0EF1               	movlw	-15
 26184  015252  6AE3               	clrf	plusw1,c
 26185  015254  0EF2               	movlw	-14
 26186  015256  6AE3               	clrf	plusw1,c
 26187  015258                     l8450:
 26188                           
 26189                           ;stkvar	_new_exp @ sp[(-13)+8]
 26190  015258  0EFC               	movlw	-4
 26191  01525A  BEE3               	btfsc	plusw1,7,c
 26192  01525C  D007               	goto	u6800
 26193  01525E  0EFC               	movlw	-4
 26194  015260  50E3               	movf	plusw1,w,c
 26195  015262  E112               	bnz	l8456
 26196  015264  0EFB               	movlw	-5
 26197  015266  04E3               	decf	plusw1,w,c
 26198  015268  B0D8               	btfsc	status,0,c
 26199  01526A  D00E               	goto	l8456
 26200  01526C                     u6800:
 26201                           
 26202                           ;stkvar	_new_exp @ sp[(-13)+8]
 26203  01526C  0EFB               	movlw	-5
 26204  01526E  6AE3               	clrf	plusw1,c
 26205  015270  0EFC               	movlw	-4
 26206  015272  6AE3               	clrf	plusw1,c
 26207                           
 26208                           ;stkvar	_b @ sp[(-13)+-4]
 26209  015274  0EEF               	movlw	-17
 26210  015276  6AE3               	clrf	plusw1,c
 26211  015278  0EF0               	movlw	-16
 26212  01527A  6AE3               	clrf	plusw1,c
 26213  01527C  0EF1               	movlw	-15
 26214  01527E  6AE3               	clrf	plusw1,c
 26215  015280  0EF2               	movlw	-14
 26216  015282  6AE3               	clrf	plusw1,c
 26217                           
 26218                           ;stkvar	_sign @ sp[(-13)+12]
 26219  015284  0EFF               	movlw	-1
 26220  015286  6AE3               	clrf	plusw1,c
 26221  015288                     l8456:
 26222                           
 26223                           ;stkvar	_new_exp @ sp[(-13)+8]
 26224                           ;stkvar	_bexp @ sp[(-13)+11]
 26225  015288  0EFB               	movlw	-5
 26226  01528A  006F FF8C  F001    	movff	plusw1,btemp
 26227  015290  0EFE               	movlw	-2
 26228  015292  0060  F007  FFE3   	movff	btemp,plusw1
 26229                           
 26230                           ;stkvar	_bexp @ sp[(-13)+11]
 26231  015298  0EFE               	movlw	-2
 26232  01529A  A0E3               	btfss	plusw1,0,c
 26233  01529C  D009               	goto	l8462
 26234                           
 26235                           ;stkvar	_b @ sp[(-13)+-4]
 26236  01529E  0EF1               	movlw	241
 26237  0152A0  24E1               	addwf	fsr1l,w,c
 26238  0152A2  6ED9               	movwf	fsr2l,c
 26239  0152A4  0EFF               	movlw	255
 26240  0152A6  20E2               	addwfc	fsr1h,w,c
 26241  0152A8  6EDA               	movwf	fsr2h,c
 26242  0152AA  0E00               	movlw	0
 26243  0152AC  8EDB               	bsf	plusw2,7,c
 26244  0152AE  D008               	goto	l8464
 26245  0152B0                     l8462:
 26246                           
 26247                           ;stkvar	_b @ sp[(-13)+-4]
 26248  0152B0  0EF1               	movlw	241
 26249  0152B2  24E1               	addwf	fsr1l,w,c
 26250  0152B4  6ED9               	movwf	fsr2l,c
 26251  0152B6  0EFF               	movlw	255
 26252  0152B8  20E2               	addwfc	fsr1h,w,c
 26253  0152BA  6EDA               	movwf	fsr2h,c
 26254  0152BC  0E7F               	movlw	127
 26255  0152BE  16DF               	andwf	indf2,f,c
 26256  0152C0                     l8464:
 26257                           
 26258                           ;stkvar	_b @ sp[(-13)+-4]
 26259  0152C0  0EF2               	movlw	242
 26260  0152C2  24E1               	addwf	fsr1l,w,c
 26261  0152C4  6ED9               	movwf	fsr2l,c
 26262  0152C6  0EFF               	movlw	255
 26263  0152C8  20E2               	addwfc	fsr1h,w,c
 26264  0152CA  6EDA               	movwf	fsr2h,c
 26265                           
 26266                           ;stkvar	_bexp @ sp[(-13)+11]
 26267  0152CC  0EFE               	movlw	-2
 26268  0152CE  006F FF8C  F00C    	movff	plusw1,btemp+11
 26269  0152D4  90D8               	bcf	status,0,c
 26270  0152D6  300C               	rrcf	(btemp+11)^0,w,c
 26271  0152D8  6EDF               	movwf	indf2,c
 26272  0152DA  D644               	goto	l8362
 26273  0152DC                     l3037:
 26274                           
 26275                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 26276  0152DC  0EEB               	movlw	235
 26277  0152DE  26E1               	addwf	fsr1l,f,c
 26278  0152E0  0EFF               	movlw	255
 26279  0152E2  22E2               	addwfc	fsr1h,f,c
 26280  0152E4  0012               	return		;funcret
 26281  0152E6                     __end_of___fldiv:
 26282                           	opt callstack 0
 26283                           
 26284 ;; *************** function ___flge *****************
 26285 ;; Defined at:
 26286 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 26287 ;; Parameters:    Size  Location     Type
 26288 ;;  ff1             4  [STACK] unsigned char 
 26289 ;;  ff2             4  [STACK] unsigned char 
 26290 ;; Auto vars:     Size  Location     Type
 26291 ;;		None
 26292 ;; Return value:  Size  Location     Type
 26293 ;;		None               void
 26294 ;; Registers used:
 26295 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 26296 ;; Tracked objects:
 26297 ;;		On entry : 0/0
 26298 ;;		On exit  : 0/0
 26299 ;;		Unchanged: 0/0
 26300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26305 ;;Total ram usage:        0 bytes
 26306 ;; Hardware stack levels used:    1
 26307 ;; Hardware stack levels required when called:   15
 26308 ;; This function calls:
 26309 ;;		Nothing
 26310 ;; This function is called by:
 26311 ;;		_main
 26312 ;;		_calc_ror_data
 26313 ;;		_check_day_time
 26314 ;;		_calc_bsoc
 26315 ;;		_efgtoa
 26316 ;; This function uses a reentrant model
 26317 ;;
 26318                           
 26319                           	psect	text103
 26320  0191D0                     __ptext103:
 26321                           	opt callstack 0
 26322  0191D0                     ___flge:
 26323                           	opt callstack 0
 26324                           
 26325                           ;stkvar	_ff1 @ sp[(0)+-4]
 26326                           
 26327                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26328                           ;incstack = 0
 26329 ;; hardware stack exceeded
 26330  0191D0  50E1               	movf	fsr1l,w,c
 26331  0191D2  0FFC               	addlw	-4
 26332  0191D4  6ED9               	movwf	fsr2l,c
 26333  0191D6  50E2               	movf	fsr1h,w,c
 26334  0191D8  6EDA               	movwf	fsr2h,c
 26335  0191DA  0EFF               	movlw	255
 26336  0191DC  22DA               	addwfc	fsr2h,f,c
 26337  0191DE  0E00               	movlw	0
 26338  0191E0  14DE               	andwf	postinc2,w,c
 26339  0191E2  6E09               	movwf	(btemp+8)^0,c
 26340  0191E4  0E00               	movlw	0
 26341  0191E6  14DE               	andwf	postinc2,w,c
 26342  0191E8  6E0A               	movwf	(btemp+9)^0,c
 26343  0191EA  0E80               	movlw	128
 26344  0191EC  14DE               	andwf	postinc2,w,c
 26345  0191EE  6E0B               	movwf	(btemp+10)^0,c
 26346  0191F0  0E7F               	movlw	127
 26347  0191F2  14DE               	andwf	postinc2,w,c
 26348  0191F4  6E0C               	movwf	(btemp+11)^0,c
 26349  0191F6  5009               	movf	(btemp+8)^0,w,c
 26350  0191F8  100A               	iorwf	(btemp+9)^0,w,c
 26351  0191FA  100B               	iorwf	(btemp+10)^0,w,c
 26352  0191FC  100C               	iorwf	(btemp+11)^0,w,c
 26353  0191FE  A4D8               	btfss	status,2,c
 26354  019200  D008               	goto	l8738
 26355                           
 26356                           ;stkvar	_ff1 @ sp[(0)+-4]
 26357  019202  0EFC               	movlw	-4
 26358  019204  6AE3               	clrf	plusw1,c
 26359  019206  0EFD               	movlw	-3
 26360  019208  6AE3               	clrf	plusw1,c
 26361  01920A  0EFE               	movlw	-2
 26362  01920C  6AE3               	clrf	plusw1,c
 26363  01920E  0EFF               	movlw	-1
 26364  019210  6AE3               	clrf	plusw1,c
 26365  019212                     l8738:
 26366                           
 26367                           ;stkvar	_ff2 @ sp[(0)+-8]
 26368  019212  50E1               	movf	fsr1l,w,c
 26369  019214  0FF8               	addlw	-8
 26370  019216  6ED9               	movwf	fsr2l,c
 26371  019218  50E2               	movf	fsr1h,w,c
 26372  01921A  6EDA               	movwf	fsr2h,c
 26373  01921C  0EFF               	movlw	255
 26374  01921E  22DA               	addwfc	fsr2h,f,c
 26375  019220  0E00               	movlw	0
 26376  019222  14DE               	andwf	postinc2,w,c
 26377  019224  6E09               	movwf	(btemp+8)^0,c
 26378  019226  0E00               	movlw	0
 26379  019228  14DE               	andwf	postinc2,w,c
 26380  01922A  6E0A               	movwf	(btemp+9)^0,c
 26381  01922C  0E80               	movlw	128
 26382  01922E  14DE               	andwf	postinc2,w,c
 26383  019230  6E0B               	movwf	(btemp+10)^0,c
 26384  019232  0E7F               	movlw	127
 26385  019234  14DE               	andwf	postinc2,w,c
 26386  019236  6E0C               	movwf	(btemp+11)^0,c
 26387  019238  5009               	movf	(btemp+8)^0,w,c
 26388  01923A  100A               	iorwf	(btemp+9)^0,w,c
 26389  01923C  100B               	iorwf	(btemp+10)^0,w,c
 26390  01923E  100C               	iorwf	(btemp+11)^0,w,c
 26391  019240  A4D8               	btfss	status,2,c
 26392  019242  D008               	goto	l2718
 26393                           
 26394                           ;stkvar	_ff2 @ sp[(0)+-8]
 26395  019244  0EF8               	movlw	-8
 26396  019246  6AE3               	clrf	plusw1,c
 26397  019248  0EF9               	movlw	-7
 26398  01924A  6AE3               	clrf	plusw1,c
 26399  01924C  0EFA               	movlw	-6
 26400  01924E  6AE3               	clrf	plusw1,c
 26401  019250  0EFB               	movlw	-5
 26402  019252  6AE3               	clrf	plusw1,c
 26403  019254                     l2718:
 26404                           
 26405                           ;stkvar	_ff1 @ sp[(0)+-4]
 26406  019254  0EFF               	movlw	-1
 26407  019256  AEE3               	btfss	plusw1,7,c
 26408  019258  D024               	goto	l8744
 26409                           
 26410                           ;stkvar	_ff1 @ sp[(0)+-4]
 26411  01925A  0E00               	movlw	0
 26412  01925C  6E09               	movwf	(btemp+8)^0,c
 26413  01925E  0E00               	movlw	0
 26414  019260  6E0A               	movwf	(btemp+9)^0,c
 26415  019262  0E00               	movlw	0
 26416  019264  6E0B               	movwf	(btemp+10)^0,c
 26417  019266  0E80               	movlw	128
 26418  019268  6E0C               	movwf	(btemp+11)^0,c
 26419  01926A  0EFC               	movlw	-4
 26420  01926C  50E3               	movf	plusw1,w,c
 26421  01926E  5E09               	subwf	(btemp+8)^0,f,c
 26422  019270  0EFD               	movlw	-3
 26423  019272  50E3               	movf	plusw1,w,c
 26424  019274  5A0A               	subwfb	(btemp+9)^0,f,c
 26425  019276  0EFE               	movlw	-2
 26426  019278  50E3               	movf	plusw1,w,c
 26427  01927A  5A0B               	subwfb	(btemp+10)^0,f,c
 26428  01927C  0EFF               	movlw	-1
 26429  01927E  50E3               	movf	plusw1,w,c
 26430  019280  5A0C               	subwfb	(btemp+11)^0,f,c
 26431                           
 26432                           ;stkvar	_ff1 @ sp[(0)+-4]
 26433  019282  0EFC               	movlw	-4
 26434  019284  0060  F027  FFE3   	movff	btemp+8,plusw1
 26435  01928A  0EFD               	movlw	-3
 26436  01928C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26437  019292  0EFE               	movlw	-2
 26438  019294  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26439  01929A  0EFF               	movlw	-1
 26440  01929C  0060  F033  FFE3   	movff	btemp+11,plusw1
 26441  0192A2                     l8744:
 26442                           
 26443                           ;stkvar	_ff2 @ sp[(0)+-8]
 26444  0192A2  0EFB               	movlw	-5
 26445  0192A4  AEE3               	btfss	plusw1,7,c
 26446  0192A6  D024               	goto	l8748
 26447                           
 26448                           ;stkvar	_ff2 @ sp[(0)+-8]
 26449  0192A8  0E00               	movlw	0
 26450  0192AA  6E09               	movwf	(btemp+8)^0,c
 26451  0192AC  0E00               	movlw	0
 26452  0192AE  6E0A               	movwf	(btemp+9)^0,c
 26453  0192B0  0E00               	movlw	0
 26454  0192B2  6E0B               	movwf	(btemp+10)^0,c
 26455  0192B4  0E80               	movlw	128
 26456  0192B6  6E0C               	movwf	(btemp+11)^0,c
 26457  0192B8  0EF8               	movlw	-8
 26458  0192BA  50E3               	movf	plusw1,w,c
 26459  0192BC  5E09               	subwf	(btemp+8)^0,f,c
 26460  0192BE  0EF9               	movlw	-7
 26461  0192C0  50E3               	movf	plusw1,w,c
 26462  0192C2  5A0A               	subwfb	(btemp+9)^0,f,c
 26463  0192C4  0EFA               	movlw	-6
 26464  0192C6  50E3               	movf	plusw1,w,c
 26465  0192C8  5A0B               	subwfb	(btemp+10)^0,f,c
 26466  0192CA  0EFB               	movlw	-5
 26467  0192CC  50E3               	movf	plusw1,w,c
 26468  0192CE  5A0C               	subwfb	(btemp+11)^0,f,c
 26469                           
 26470                           ;stkvar	_ff2 @ sp[(0)+-8]
 26471  0192D0  0EF8               	movlw	-8
 26472  0192D2  0060  F027  FFE3   	movff	btemp+8,plusw1
 26473  0192D8  0EF9               	movlw	-7
 26474  0192DA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26475  0192E0  0EFA               	movlw	-6
 26476  0192E2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26477  0192E8  0EFB               	movlw	-5
 26478  0192EA  0060  F033  FFE3   	movff	btemp+11,plusw1
 26479  0192F0                     l8748:
 26480                           
 26481                           ;stkvar	_ff1 @ sp[(0)+-4]
 26482  0192F0  0EFF               	movlw	-1
 26483  0192F2  7EE3               	btg	plusw1,7,c
 26484                           
 26485                           ;stkvar	_ff2 @ sp[(0)+-8]
 26486  0192F4  0EFB               	movlw	-5
 26487  0192F6  7EE3               	btg	plusw1,7,c
 26488                           
 26489                           ;stkvar	_ff2 @ sp[(0)+-8]
 26490                           ;stkvar	_ff1 @ sp[(0)+-4]
 26491  0192F8  50E1               	movf	fsr1l,w,c
 26492  0192FA  0FFC               	addlw	-4
 26493  0192FC  6ED9               	movwf	fsr2l,c
 26494  0192FE  50E2               	movf	fsr1h,w,c
 26495  019300  6EDA               	movwf	fsr2h,c
 26496  019302  0EFF               	movlw	255
 26497  019304  22DA               	addwfc	fsr2h,f,c
 26498  019306  0EF8               	movlw	-8
 26499  019308  50E3               	movf	plusw1,w,c
 26500  01930A  5CDE               	subwf	postinc2,w,c
 26501  01930C  0EF9               	movlw	-7
 26502  01930E  50E3               	movf	plusw1,w,c
 26503  019310  58DE               	subwfb	postinc2,w,c
 26504  019312  0EFA               	movlw	-6
 26505  019314  50E3               	movf	plusw1,w,c
 26506  019316  58DE               	subwfb	postinc2,w,c
 26507  019318  0EFB               	movlw	-5
 26508  01931A  50E3               	movf	plusw1,w,c
 26509  01931C  58DE               	subwfb	postinc2,w,c
 26510  01931E  B0D8               	btfsc	status,0,c
 26511  019320  D002               	goto	l8756
 26512  019322  9001               	bcf	btemp& (0+255),0,c
 26513  019324  D001               	goto	l2725
 26514  019326                     l8756:
 26515  019326  8001               	bsf	btemp& (0+255),0,c
 26516  019328                     l2725:
 26517                           
 26518                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 26519  019328  0EF8               	movlw	248
 26520  01932A  26E1               	addwf	fsr1l,f,c
 26521  01932C  0EFF               	movlw	255
 26522  01932E  22E2               	addwfc	fsr1h,f,c
 26523  019330  0012               	return		;funcret
 26524  019332                     __end_of___flge:
 26525                           	opt callstack 0
 26526                           
 26527 ;; *************** function _calc_model_data *****************
 26528 ;; Defined at:
 26529 ;;		line 67 in file "mbmc.c"
 26530 ;; Parameters:    Size  Location     Type
 26531 ;;		None
 26532 ;; Auto vars:     Size  Location     Type
 26533 ;;		None
 26534 ;; Return value:  Size  Location     Type
 26535 ;;                  1  [STACK] void 
 26536 ;; Registers used:
 26537 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 26538 ;; Tracked objects:
 26539 ;;		On entry : 0/1
 26540 ;;		On exit  : 3F/39
 26541 ;;		Unchanged: 0/0
 26542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26547 ;;Total ram usage:        0 bytes
 26548 ;; Hardware stack levels used:    1
 26549 ;; Hardware stack levels required when called:   18
 26550 ;; This function calls:
 26551 ;;		___fladd
 26552 ;;		___flmul
 26553 ;;		___flsub
 26554 ;;		_lp_filter
 26555 ;;		_start_bsoc
 26556 ;;		_stop_bsoc
 26557 ;; This function is called by:
 26558 ;;		_main
 26559 ;; This function uses a reentrant model
 26560 ;;
 26561                           
 26562                           	psect	text104
 26563  015C7A                     __ptext104:
 26564                           	opt callstack 0
 26565  015C7A                     _calc_model_data:
 26566                           	opt callstack 12
 26567                           
 26568                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 26569                           
 26570                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26571                           ;incstack = 0
 26572  015C7A  EC02  F0E2         	call	_stop_bsoc	;wreg free
 26573                           
 26574                           ; BSR set to: 57
 26575                           ;mbmc.c: 72:  if (!V.calib) {
 26576  015C7E  0101               	movlb	1	; () banked
 26577  015C80  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 26578  015C82  A4D8               	btfss	status,2,c
 26579  015C84  D219               	goto	l11204
 26580                           
 26581                           ; BSR set to: 1
 26582                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 26583  015C86  EE21  F2FF         	lfsr	2,_C
 26584  015C8A  006F FF78  F743    	movff	postinc2,_C+68	;volatile
 26585  015C90  006F FF78  F744    	movff	postinc2,_C+69	;volatile
 26586  015C96  006F FF78  F745    	movff	postinc2,_C+70	;volatile
 26587  015C9C  006F FF74  F746    	movff	postdec2,_C+71	;volatile
 26588                           
 26589                           ; BSR set to: 1
 26590                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 26591  015CA2  0060  F1C3  FFE6   	movff	calc_model_data@bcror,postinc1
 26592  015CA8  0060  F1C7  FFE6   	movff	calc_model_data@bcror+1,postinc1
 26593  015CAE  0060  F1CB  FFE6   	movff	calc_model_data@bcror+2,postinc1
 26594  015CB4  0060  F1CF  FFE6   	movff	calc_model_data@bcror+3,postinc1
 26595  015CBA  EE21  F343         	lfsr	2,_C+68	;volatile
 26596  015CBE  006F FF7B FFE6     	movff	postinc2,postinc1
 26597  015CC4  006F FF7B FFE6     	movff	postinc2,postinc1
 26598  015CCA  006F FF7B FFE6     	movff	postinc2,postinc1
 26599  015CD0  006F FF7B FFE6     	movff	postinc2,postinc1
 26600  015CD6  EC36  F0DC         	call	___flsub	;wreg free
 26601  015CDA  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 26602  015CE0  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 26603  015CE6  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 26604  015CEC  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 26605                           
 26606                           ;mbmc.c: 75:   bcror = C.c_bat;
 26607  015CF2  C743  F070         	movff	_C+68,calc_model_data@bcror	;volatile
 26608  015CF6  C744  F071         	movff	_C+69,calc_model_data@bcror+1	;volatile
 26609  015CFA  C745  F072         	movff	_C+70,calc_model_data@bcror+2	;volatile
 26610  015CFE  C746  F073         	movff	_C+71,calc_model_data@bcror+3	;volatile
 26611                           
 26612                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 26613  015D02  EE21  F303         	lfsr	2,_C+4	;volatile
 26614  015D06  006F FF78  F747    	movff	postinc2,_C+72	;volatile
 26615  015D0C  006F FF78  F748    	movff	postinc2,_C+73	;volatile
 26616  015D12  006F FF78  F749    	movff	postinc2,_C+74	;volatile
 26617  015D18  006F FF74  F74A    	movff	postdec2,_C+75	;volatile
 26618                           
 26619                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 26620  015D1E  EE21  F30F         	lfsr	2,_C+16	;volatile
 26621  015D22  006F FF78  F753    	movff	postinc2,_C+84	;volatile
 26622  015D28  006F FF78  F754    	movff	postinc2,_C+85	;volatile
 26623  015D2E  006F FF78  F755    	movff	postinc2,_C+86	;volatile
 26624  015D34  006F FF74  F756    	movff	postdec2,_C+87	;volatile
 26625                           
 26626                           ;mbmc.c: 78:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 26627  015D3A  EE21  F333         	lfsr	2,_C+52	;volatile
 26628  015D3E  006F FF78  F767    	movff	postinc2,_C+104	;volatile
 26629  015D44  006F FF78  F768    	movff	postinc2,_C+105	;volatile
 26630  015D4A  006F FF78  F769    	movff	postinc2,_C+106	;volatile
 26631  015D50  006F FF74  F76A    	movff	postdec2,_C+107	;volatile
 26632                           
 26633                           ;mbmc.c: 79:   C.bv_ror = C.v_bat - bvror;
 26634  015D56  0060  F1D3  FFE6   	movff	calc_model_data@bvror,postinc1
 26635  015D5C  0060  F1D7  FFE6   	movff	calc_model_data@bvror+1,postinc1
 26636  015D62  0060  F1DB  FFE6   	movff	calc_model_data@bvror+2,postinc1
 26637  015D68  0060  F1DF  FFE6   	movff	calc_model_data@bvror+3,postinc1
 26638  015D6E  EE21  F353         	lfsr	2,_C+84	;volatile
 26639  015D72  006F FF7B FFE6     	movff	postinc2,postinc1
 26640  015D78  006F FF7B FFE6     	movff	postinc2,postinc1
 26641  015D7E  006F FF7B FFE6     	movff	postinc2,postinc1
 26642  015D84  006F FF7B FFE6     	movff	postinc2,postinc1
 26643  015D8A  EC36  F0DC         	call	___flsub	;wreg free
 26644  015D8E  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 26645  015D94  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 26646  015D9A  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 26647  015DA0  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 26648                           
 26649                           ;mbmc.c: 80:   bvror = C.v_bat;
 26650  015DA6  C753  F074         	movff	_C+84,calc_model_data@bvror	;volatile
 26651  015DAA  C754  F075         	movff	_C+85,calc_model_data@bvror+1	;volatile
 26652  015DAE  C755  F076         	movff	_C+86,calc_model_data@bvror+2	;volatile
 26653  015DB2  C756  F077         	movff	_C+87,calc_model_data@bvror+3	;volatile
 26654                           
 26655                           ;mbmc.c: 81:   C.v_pv = C.calc[V_PV];
 26656  015DB6  EE21  F313         	lfsr	2,_C+20	;volatile
 26657  015DBA  006F FF78  F74F    	movff	postinc2,_C+80	;volatile
 26658  015DC0  006F FF78  F750    	movff	postinc2,_C+81	;volatile
 26659  015DC6  006F FF78  F751    	movff	postinc2,_C+82	;volatile
 26660  015DCC  006F FF74  F752    	movff	postdec2,_C+83	;volatile
 26661                           
 26662                           ;mbmc.c: 82:   C.v_cc = C.calc[V_CC];
 26663  015DD2  EE21  F307         	lfsr	2,_C+8	;volatile
 26664  015DD6  006F FF78  F74B    	movff	postinc2,_C+76	;volatile
 26665  015DDC  006F FF78  F74C    	movff	postinc2,_C+77	;volatile
 26666  015DE2  006F FF78  F74D    	movff	postinc2,_C+78	;volatile
 26667  015DE8  006F FF74  F74E    	movff	postdec2,_C+79	;volatile
 26668                           
 26669                           ;mbmc.c: 83:   C.v_inverter = C.calc[V_INVERTER];
 26670  015DEE  EE21  F32F         	lfsr	2,_C+48	;volatile
 26671  015DF2  006F FF78  F763    	movff	postinc2,_C+100	;volatile
 26672  015DF8  006F FF78  F764    	movff	postinc2,_C+101	;volatile
 26673  015DFE  006F FF78  F765    	movff	postinc2,_C+102	;volatile
 26674  015E04  006F FF74  F766    	movff	postdec2,_C+103	;volatile
 26675                           
 26676                           ;mbmc.c: 84:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 26677  015E0A  0E01               	movlw	1
 26678  015E0C  6EE6               	movwf	postinc1,c
 26679  015E0E  0E10               	movlw	16
 26680  015E10  6EE6               	movwf	postinc1,c
 26681  015E12  EE21  F2FF         	lfsr	2,_C
 26682  015E16  006F FF7B FFE6     	movff	postinc2,postinc1
 26683  015E1C  006F FF7B FFE6     	movff	postinc2,postinc1
 26684  015E22  006F FF7B FFE6     	movff	postinc2,postinc1
 26685  015E28  006F FF7B FFE6     	movff	postinc2,postinc1
 26686  015E2E  EE21  F303         	lfsr	2,_C+4	;volatile
 26687  015E32  006F FF7B FFE6     	movff	postinc2,postinc1
 26688  015E38  006F FF7B FFE6     	movff	postinc2,postinc1
 26689  015E3E  006F FF7B FFE6     	movff	postinc2,postinc1
 26690  015E44  006F FF7B FFE6     	movff	postinc2,postinc1
 26691  015E4A  EC36  F0DC         	call	___flsub	;wreg free
 26692  015E4E  0060  F007  FFE6   	movff	btemp,postinc1
 26693  015E54  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26694  015E5A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26695  015E60  0060  F013  FFE6   	movff	btemp+3,postinc1
 26696  015E66  EC33  F0C4         	call	_lp_filter	;wreg free
 26697  015E6A  0060  F004  F73F   	movff	btemp,_C+64	;volatile
 26698  015E70  0060  F008  F740   	movff	btemp+1,_C+65	;volatile
 26699  015E76  0060  F00C  F741   	movff	btemp+2,_C+66	;volatile
 26700  015E7C  0060  F010  F742   	movff	btemp+3,_C+67	;volatile
 26701                           
 26702                           ;mbmc.c: 85:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 26703  015E82  0E01               	movlw	1
 26704  015E84  6EE6               	movwf	postinc1,c
 26705  015E86  0E11               	movlw	17
 26706  015E88  6EE6               	movwf	postinc1,c
 26707  015E8A  EE21  F353         	lfsr	2,_C+84	;volatile
 26708  015E8E  006F FF7B FFE6     	movff	postinc2,postinc1
 26709  015E94  006F FF7B FFE6     	movff	postinc2,postinc1
 26710  015E9A  006F FF7B FFE6     	movff	postinc2,postinc1
 26711  015EA0  006F FF7B FFE6     	movff	postinc2,postinc1
 26712  015EA6  EE21  F33F         	lfsr	2,_C+64	;volatile
 26713  015EAA  006F FF7B FFE6     	movff	postinc2,postinc1
 26714  015EB0  006F FF7B FFE6     	movff	postinc2,postinc1
 26715  015EB6  006F FF7B FFE6     	movff	postinc2,postinc1
 26716  015EBC  006F FF7B FFE6     	movff	postinc2,postinc1
 26717  015EC2  ECC3  F09E         	call	___flmul	;wreg free
 26718  015EC6  0060  F007  FFE6   	movff	btemp,postinc1
 26719  015ECC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26720  015ED2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26721  015ED8  0060  F013  FFE6   	movff	btemp+3,postinc1
 26722  015EDE  EC33  F0C4         	call	_lp_filter	;wreg free
 26723  015EE2  0060  F004  F773   	movff	btemp,_C+116	;volatile
 26724  015EE8  0060  F008  F774   	movff	btemp+1,_C+117	;volatile
 26725  015EEE  0060  F00C  F775   	movff	btemp+2,_C+118	;volatile
 26726  015EF4  0060  F010  F776   	movff	btemp+3,_C+119	;volatile
 26727                           
 26728                           ;mbmc.c: 86:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 26729  015EFA  0E01               	movlw	1
 26730  015EFC  6EE6               	movwf	postinc1,c
 26731  015EFE  0E12               	movlw	18
 26732  015F00  6EE6               	movwf	postinc1,c
 26733  015F02  EE21  F34F         	lfsr	2,_C+80	;volatile
 26734  015F06  006F FF7B FFE6     	movff	postinc2,postinc1
 26735  015F0C  006F FF7B FFE6     	movff	postinc2,postinc1
 26736  015F12  006F FF7B FFE6     	movff	postinc2,postinc1
 26737  015F18  006F FF7B FFE6     	movff	postinc2,postinc1
 26738  015F1E  EE21  F347         	lfsr	2,_C+72	;volatile
 26739  015F22  006F FF7B FFE6     	movff	postinc2,postinc1
 26740  015F28  006F FF7B FFE6     	movff	postinc2,postinc1
 26741  015F2E  006F FF7B FFE6     	movff	postinc2,postinc1
 26742  015F34  006F FF7B FFE6     	movff	postinc2,postinc1
 26743  015F3A  ECC3  F09E         	call	___flmul	;wreg free
 26744  015F3E  0060  F007  FFE6   	movff	btemp,postinc1
 26745  015F44  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26746  015F4A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26747  015F50  0060  F013  FFE6   	movff	btemp+3,postinc1
 26748  015F56  EC33  F0C4         	call	_lp_filter	;wreg free
 26749  015F5A  0060  F004  F77B   	movff	btemp,_C+124	;volatile
 26750  015F60  0060  F008  F77C   	movff	btemp+1,_C+125	;volatile
 26751  015F66  0060  F00C  F77D   	movff	btemp+2,_C+126	;volatile
 26752  015F6C  0060  F010  F77E   	movff	btemp+3,_C+127	;volatile
 26753                           
 26754                           ;mbmc.c: 87:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 26755  015F72  0E01               	movlw	1
 26756  015F74  6EE6               	movwf	postinc1,c
 26757  015F76  0E13               	movlw	19
 26758  015F78  6EE6               	movwf	postinc1,c
 26759  015F7A  0E00               	movlw	0
 26760  015F7C  6EE6               	movwf	postinc1,c
 26761  015F7E  0E00               	movlw	0
 26762  015F80  6EE6               	movwf	postinc1,c
 26763  015F82  0E60               	movlw	96
 26764  015F84  6EE6               	movwf	postinc1,c
 26765  015F86  0EC1               	movlw	193
 26766  015F88  6EE6               	movwf	postinc1,c
 26767  015F8A  EE21  F363         	lfsr	2,_C+100	;volatile
 26768  015F8E  006F FF7B FFE6     	movff	postinc2,postinc1
 26769  015F94  006F FF7B FFE6     	movff	postinc2,postinc1
 26770  015F9A  006F FF7B FFE6     	movff	postinc2,postinc1
 26771  015FA0  006F FF7B FFE6     	movff	postinc2,postinc1
 26772  015FA6  EE21  F33F         	lfsr	2,_C+64	;volatile
 26773  015FAA  006F FF7B FFE6     	movff	postinc2,postinc1
 26774  015FB0  006F FF7B FFE6     	movff	postinc2,postinc1
 26775  015FB6  006F FF7B FFE6     	movff	postinc2,postinc1
 26776  015FBC  006F FF7B FFE6     	movff	postinc2,postinc1
 26777  015FC2  ECC3  F09E         	call	___flmul	;wreg free
 26778  015FC6  0060  F007  FFE6   	movff	btemp,postinc1
 26779  015FCC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26780  015FD2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26781  015FD8  0060  F013  FFE6   	movff	btemp+3,postinc1
 26782  015FDE  ECD8  F0A2         	call	___fladd	;wreg free
 26783  015FE2  0060  F007  FFE6   	movff	btemp,postinc1
 26784  015FE8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26785  015FEE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26786  015FF4  0060  F013  FFE6   	movff	btemp+3,postinc1
 26787  015FFA  EC33  F0C4         	call	_lp_filter	;wreg free
 26788  015FFE  0060  F004  F777   	movff	btemp,_C+120	;volatile
 26789  016004  0060  F008  F778   	movff	btemp+1,_C+121	;volatile
 26790  01600A  0060  F00C  F779   	movff	btemp+2,_C+122	;volatile
 26791  016010  0060  F010  F77A   	movff	btemp+3,_C+123	;volatile
 26792                           
 26793                           ;mbmc.c: 88:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 26794  016016  0E01               	movlw	1
 26795  016018  6EE6               	movwf	postinc1,c
 26796  01601A  0E14               	movlw	20
 26797  01601C  6EE6               	movwf	postinc1,c
 26798  01601E  EE21  F353         	lfsr	2,_C+84	;volatile
 26799  016022  006F FF7B FFE6     	movff	postinc2,postinc1
 26800  016028  006F FF7B FFE6     	movff	postinc2,postinc1
 26801  01602E  006F FF7B FFE6     	movff	postinc2,postinc1
 26802  016034  006F FF7B FFE6     	movff	postinc2,postinc1
 26803  01603A  EE21  F343         	lfsr	2,_C+68	;volatile
 26804  01603E  006F FF7B FFE6     	movff	postinc2,postinc1
 26805  016044  006F FF7B FFE6     	movff	postinc2,postinc1
 26806  01604A  006F FF7B FFE6     	movff	postinc2,postinc1
 26807  016050  006F FF7B FFE6     	movff	postinc2,postinc1
 26808  016056  ECC3  F09E         	call	___flmul	;wreg free
 26809  01605A  0060  F007  FFE6   	movff	btemp,postinc1
 26810  016060  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26811  016066  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26812  01606C  0060  F013  FFE6   	movff	btemp+3,postinc1
 26813  016072  EC33  F0C4         	call	_lp_filter	;wreg free
 26814  016076  0060  F004  F77F   	movff	btemp,_C+128	;volatile
 26815  01607C  0060  F008  F780   	movff	btemp+1,_C+129	;volatile
 26816  016082  0060  F00C  F781   	movff	btemp+2,_C+130	;volatile
 26817  016088  0060  F010  F782   	movff	btemp+3,_C+131	;volatile
 26818                           
 26819                           ;mbmc.c: 92:   if (C.p_inverter < 0.0)
 26820  01608E  EE21  F377         	lfsr	2,_C+120	;volatile
 26821  016092  0E03               	movlw	3
 26822  016094  AEDB               	btfss	plusw2,7,c
 26823  016096  D010               	goto	l11204
 26824                           
 26825                           ;mbmc.c: 93:    C.p_inverter = 0.0001;
 26826  016098  0E17               	movlw	23
 26827  01609A  006F FFA0  F777    	movff	wreg,_C+120	;volatile
 26828  0160A0  0EB7               	movlw	183
 26829  0160A2  006F FFA0  F778    	movff	wreg,_C+121	;volatile
 26830  0160A8  0ED1               	movlw	209
 26831  0160AA  006F FFA0  F779    	movff	wreg,_C+122	;volatile
 26832  0160B0  0E38               	movlw	56
 26833  0160B2  006F FFA0  F77A    	movff	wreg,_C+123	;volatile
 26834  0160B8                     l11204:
 26835                           
 26836                           ;mbmc.c: 95:  start_bsoc();
 26837  0160B8  EC82  F0E0         	call	_start_bsoc	;wreg free
 26838                           
 26839                           ; BSR set to: 57
 26840                           ;mbmc.c: 96:  C.update = 1;
 26841  0160BC  0E01               	movlw	1
 26842  0160BE  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 26843                           
 26844                           ; BSR set to: 57
 26845                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26846  0160C4  0012               	return		;funcret
 26847  0160C6                     __end_of_calc_model_data:
 26848                           	opt callstack 0
 26849                           
 26850 ;; *************** function _stop_bsoc *****************
 26851 ;; Defined at:
 26852 ;;		line 129 in file "bsoc.c"
 26853 ;; Parameters:    Size  Location     Type
 26854 ;;		None
 26855 ;; Auto vars:     Size  Location     Type
 26856 ;;		None
 26857 ;; Return value:  Size  Location     Type
 26858 ;;                  1  [STACK] void 
 26859 ;; Registers used:
 26860 ;;		None
 26861 ;; Tracked objects:
 26862 ;;		On entry : 0/1
 26863 ;;		On exit  : 3F/39
 26864 ;;		Unchanged: 0/0
 26865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26870 ;;Total ram usage:        0 bytes
 26871 ;; Hardware stack levels used:    1
 26872 ;; Hardware stack levels required when called:   15
 26873 ;; This function calls:
 26874 ;;		Nothing
 26875 ;; This function is called by:
 26876 ;;		_calc_model_data
 26877 ;; This function uses a reentrant model
 26878 ;;
 26879                           
 26880                           	psect	text105
 26881  01C404                     __ptext105:
 26882                           	opt callstack 0
 26883  01C404                     _stop_bsoc:
 26884                           	opt callstack 14
 26885                           
 26886                           ;bsoc.c: 132:  PIE6bits.TMR3IE = 0;
 26887                           
 26888                           ; BSR set to: 57
 26889                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26890                           ;incstack = 0
 26891  01C404  0139               	movlb	57	; () banked
 26892  01C406  9D96               	bcf	150,6,b	;volatile
 26893                           
 26894                           ; BSR set to: 57
 26895                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 26896  01C408  0012               	return		;funcret
 26897  01C40A                     __end_of_stop_bsoc:
 26898                           	opt callstack 0
 26899                           
 26900 ;; *************** function _start_bsoc *****************
 26901 ;; Defined at:
 26902 ;;		line 120 in file "bsoc.c"
 26903 ;; Parameters:    Size  Location     Type
 26904 ;;		None
 26905 ;; Auto vars:     Size  Location     Type
 26906 ;;		None
 26907 ;; Return value:  Size  Location     Type
 26908 ;;                  1  [STACK] void 
 26909 ;; Registers used:
 26910 ;;		wreg, status,2, status,0, btemp+11
 26911 ;; Tracked objects:
 26912 ;;		On entry : 0/1
 26913 ;;		On exit  : 3F/39
 26914 ;;		Unchanged: 0/0
 26915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26920 ;;Total ram usage:        0 bytes
 26921 ;; Hardware stack levels used:    1
 26922 ;; Hardware stack levels required when called:   15
 26923 ;; This function calls:
 26924 ;;		Nothing
 26925 ;; This function is called by:
 26926 ;;		_calc_model_data
 26927 ;; This function uses a reentrant model
 26928 ;;
 26929                           
 26930                           	psect	text106
 26931  01C104                     __ptext106:
 26932                           	opt callstack 0
 26933  01C104                     _start_bsoc:
 26934                           	opt callstack 14
 26935                           
 26936                           ;bsoc.c: 123:  PIE6bits.TMR3IE = 1;
 26937                           
 26938                           ; BSR set to: 57
 26939                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26940                           ;incstack = 0
 26941  01C104  0139               	movlb	57	; () banked
 26942  01C106  8D96               	bsf	150,6,b	;volatile
 26943                           
 26944                           ; BSR set to: 57
 26945  01C108  A4BE               	btfss	190,2,c	;volatile
 26946  01C10A  D002               	goto	u9720
 26947  01C10C  0E01               	movlw	1
 26948  01C10E  D001               	goto	u9726
 26949  01C110                     u9720:
 26950  01C110  0E00               	movlw	0
 26951  01C112                     u9726:
 26952  01C112  0AFF               	xorlw	255
 26953  01C114  6E0C               	movwf	(btemp+11)^0,c
 26954  01C116  460C               	rlncf	(btemp+11)^0,f,c
 26955  01C118  460C               	rlncf	(btemp+11)^0,f,c
 26956  01C11A  50BE               	movf	190,w,c	;volatile
 26957  01C11C  180C               	xorwf	(btemp+11)^0,w,c
 26958  01C11E  0BFB               	andlw	-5
 26959  01C120  180C               	xorwf	(btemp+11)^0,w,c
 26960  01C122  6EBE               	movwf	190,c	;volatile
 26961                           
 26962                           ; BSR set to: 57
 26963                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 26964  01C124  0012               	return		;funcret
 26965  01C126                     __end_of_start_bsoc:
 26966                           	opt callstack 0
 26967                           
 26968 ;; *************** function _lp_filter *****************
 26969 ;; Defined at:
 26970 ;;		line 29 in file "mbmc.c"
 26971 ;; Parameters:    Size  Location     Type
 26972 ;;  new             4  [STACK] const float 
 26973 ;;  bn              1  [STACK] const unsigned char 
 26974 ;;  slow            1  [STACK] const char 
 26975 ;; Auto vars:     Size  Location     Type
 26976 ;;  lp_speed        4  [STACK] float 
 26977 ;; Return value:  Size  Location     Type
 26978 ;;                  4  [STACK] float 
 26979 ;; Registers used:
 26980 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 26981 ;; Tracked objects:
 26982 ;;		On entry : 0/1
 26983 ;;		On exit  : 0/0
 26984 ;;		Unchanged: 0/0
 26985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26990 ;;Total ram usage:        0 bytes
 26991 ;; Hardware stack levels used:    1
 26992 ;; Hardware stack levels required when called:   17
 26993 ;; This function calls:
 26994 ;;		___fladd
 26995 ;;		___flmul
 26996 ;;		___flsub
 26997 ;; This function is called by:
 26998 ;;		_main
 26999 ;;		_convert_adc_data
 27000 ;;		_calc_model_data
 27001 ;; This function uses a reentrant model
 27002 ;;
 27003                           
 27004                           	psect	text107
 27005  018866                     __ptext107:
 27006                           	opt callstack 0
 27007  018866                     _lp_filter:
 27008                           	opt callstack 0
 27009                           
 27010                           ; BSR set to: 57
 27011                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27012  018866  52E6               	movf	postinc1,f,c
 27013  018868  52E6               	movf	postinc1,f,c
 27014  01886A  52E6               	movf	postinc1,f,c
 27015  01886C  52E6               	movf	postinc1,f,c
 27016                           
 27017                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 27018                           ;stkvar	_bn @ sp[(-4)+-5]
 27019                           
 27020                           ;incstack = 0
 27021  01886E  0EF7               	movlw	-9
 27022  018870  006F FF8C  F001    	movff	plusw1,btemp
 27023  018876  0E14               	movlw	20
 27024  018878  6401               	cpfsgt	btemp^0,c
 27025  01887A  D011               	goto	l10540
 27026  01887C                     u9600:
 27027                           
 27028                           ;mbmc.c: 35:   return new;
 27029                           ;stkvar	_new @ sp[(-4)+-4]
 27030  01887C  0EF8               	movlw	-8
 27031  01887E  006F FF8C  F001    	movff	plusw1,btemp
 27032  018884  0EF9               	movlw	-7
 27033  018886  006F FF8C  F002    	movff	plusw1,btemp+1
 27034  01888C  0EFA               	movlw	-6
 27035  01888E  006F FF8C  F003    	movff	plusw1,btemp+2
 27036  018894  0EFB               	movlw	-5
 27037  018896  006F FF8C  F004    	movff	plusw1,btemp+3
 27038  01889C  D0BD               	goto	l1892
 27039  01889E                     l10540:
 27040                           
 27041                           ;mbmc.c: 37:  if (slow == (-1)) {
 27042                           ;stkvar	_slow @ sp[(-4)+-6]
 27043  01889E  0EF6               	movlw	-10
 27044  0188A0  28E3               	incf	plusw1,w,c
 27045  0188A2  A4D8               	btfss	status,2,c
 27046  0188A4  D012               	goto	l10548
 27047                           
 27048                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 27049                           ;stkvar	_bn @ sp[(-4)+-5]
 27050  0188A6  0EF7               	movlw	-9
 27051  0188A8  50E3               	movf	plusw1,w,c
 27052  0188AA  0D04               	mullw	4
 27053  0188AC  0E00               	movlw	low lp_filter@smooth
 27054  0188AE  24F3               	addwf	243,w,c
 27055  0188B0  6ED9               	movwf	fsr2l,c
 27056  0188B2  0E02               	movlw	high lp_filter@smooth
 27057  0188B4  20F4               	addwfc	prodh,w,c
 27058  0188B6  6EDA               	movwf	fsr2h,c
 27059  0188B8  0E00               	movlw	0
 27060  0188BA  6EDE               	movwf	postinc2,c
 27061  0188BC  0E00               	movlw	0
 27062  0188BE  6EDE               	movwf	postinc2,c
 27063  0188C0  0E00               	movlw	0
 27064  0188C2  6EDE               	movwf	postinc2,c
 27065  0188C4  0E00               	movlw	0
 27066  0188C6  6EDD               	movwf	postdec2,c
 27067  0188C8  D7D9               	goto	u9600
 27068  0188CA                     l10548:
 27069                           
 27070                           ;mbmc.c: 42:  if (slow) {
 27071                           ;stkvar	_slow @ sp[(-4)+-6]
 27072  0188CA  0EF6               	movlw	-10
 27073  0188CC  50E3               	movf	plusw1,w,c
 27074  0188CE  B4D8               	btfsc	status,2,c
 27075  0188D0  D006               	goto	l10552
 27076                           
 27077                           ;mbmc.c: 43:   lp_speed = 0.033;
 27078  0188D2  0E02               	movlw	2
 27079  0188D4  6E09               	movwf	(btemp+8)^0,c
 27080  0188D6  0E2B               	movlw	43
 27081  0188D8  6E0A               	movwf	(btemp+9)^0,c
 27082  0188DA  0E07               	movlw	7
 27083  0188DC  D005               	goto	L32
 27084  0188DE                     l10552:
 27085                           
 27086                           ;mbmc.c: 45:   lp_speed = 0.066;
 27087  0188DE  0E02               	movlw	2
 27088  0188E0  6E09               	movwf	(btemp+8)^0,c
 27089  0188E2  0E2B               	movlw	43
 27090  0188E4  6E0A               	movwf	(btemp+9)^0,c
 27091  0188E6  0E87               	movlw	135
 27092  0188E8                     L32:
 27093  0188E8  6E0B               	movwf	(btemp+10)^0,c
 27094  0188EA  0E3D               	movlw	61
 27095  0188EC  6E0C               	movwf	(btemp+11)^0,c
 27096                           
 27097                           ;stkvar	_lp_speed @ sp[(-4)+0]
 27098  0188EE  0EFC               	movlw	-4
 27099  0188F0  0060  F027  FFE3   	movff	btemp+8,plusw1
 27100  0188F6  0EFD               	movlw	-3
 27101  0188F8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27102  0188FE  0EFE               	movlw	-2
 27103  018900  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27104  018906  0EFF               	movlw	-1
 27105  018908  0060  F033  FFE3   	movff	btemp+11,plusw1
 27106                           
 27107                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 27108                           ;stkvar	_bn @ sp[(-4)+-5]
 27109  01890E  0EF7               	movlw	-9
 27110  018910  50E3               	movf	plusw1,w,c
 27111  018912  0D04               	mullw	4
 27112  018914  0E00               	movlw	low lp_filter@smooth
 27113  018916  24F3               	addwf	243,w,c
 27114  018918  6ED9               	movwf	fsr2l,c
 27115  01891A  0E02               	movlw	high lp_filter@smooth
 27116  01891C  20F4               	addwfc	prodh,w,c
 27117  01891E  6EDA               	movwf	fsr2h,c
 27118  018920  006F FF7B FFE6     	movff	postinc2,postinc1
 27119  018926  006F FF7B FFE6     	movff	postinc2,postinc1
 27120  01892C  006F FF7B FFE6     	movff	postinc2,postinc1
 27121  018932  006F FF7B FFE6     	movff	postinc2,postinc1
 27122                           
 27123                           ;stkvar	_lp_speed @ sp[(-8)+0]
 27124  018938  0EF8               	movlw	-8
 27125  01893A  006F FF8F FFE6     	movff	plusw1,postinc1
 27126  018940  006F FF8F FFE6     	movff	plusw1,postinc1
 27127  018946  006F FF8F FFE6     	movff	plusw1,postinc1
 27128  01894C  006F FF8F FFE6     	movff	plusw1,postinc1
 27129                           
 27130                           ;stkvar	_bn @ sp[(-12)+-5]
 27131  018952  0EEF               	movlw	-17
 27132  018954  50E3               	movf	plusw1,w,c
 27133  018956  0D04               	mullw	4
 27134  018958  0E00               	movlw	low lp_filter@smooth
 27135  01895A  24F3               	addwf	243,w,c
 27136  01895C  6ED9               	movwf	fsr2l,c
 27137  01895E  0E02               	movlw	high lp_filter@smooth
 27138  018960  20F4               	addwfc	prodh,w,c
 27139  018962  6EDA               	movwf	fsr2h,c
 27140  018964  006F FF7B FFE6     	movff	postinc2,postinc1
 27141  01896A  006F FF7B FFE6     	movff	postinc2,postinc1
 27142  018970  006F FF7B FFE6     	movff	postinc2,postinc1
 27143  018976  006F FF7B FFE6     	movff	postinc2,postinc1
 27144                           
 27145                           ;stkvar	_new @ sp[(-16)+-4]
 27146  01897C  0EEC               	movlw	-20
 27147  01897E  006F FF8F FFE6     	movff	plusw1,postinc1
 27148  018984  006F FF8F FFE6     	movff	plusw1,postinc1
 27149  01898A  006F FF8F FFE6     	movff	plusw1,postinc1
 27150  018990  006F FF8F FFE6     	movff	plusw1,postinc1
 27151  018996  EC36  F0DC         	call	___flsub	;wreg free
 27152  01899A  0060  F007  FFE6   	movff	btemp,postinc1
 27153  0189A0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27154  0189A6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27155  0189AC  0060  F013  FFE6   	movff	btemp+3,postinc1
 27156  0189B2  ECC3  F09E         	call	___flmul	;wreg free
 27157  0189B6  0060  F007  FFE6   	movff	btemp,postinc1
 27158  0189BC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27159  0189C2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27160  0189C8  0060  F013  FFE6   	movff	btemp+3,postinc1
 27161  0189CE  ECD8  F0A2         	call	___fladd	;wreg free
 27162                           
 27163                           ;stkvar	_bn @ sp[(-4)+-5]
 27164  0189D2  0EF7               	movlw	-9
 27165  0189D4  50E3               	movf	plusw1,w,c
 27166  0189D6  0D04               	mullw	4
 27167  0189D8  0E00               	movlw	low lp_filter@smooth
 27168  0189DA  24F3               	addwf	243,w,c
 27169  0189DC  6ED9               	movwf	fsr2l,c
 27170  0189DE  0E02               	movlw	high lp_filter@smooth
 27171  0189E0  20F4               	addwfc	prodh,w,c
 27172  0189E2  6EDA               	movwf	fsr2h,c
 27173  0189E4  0060  F007  FFDE   	movff	btemp,postinc2
 27174  0189EA  0060  F00B  FFDE   	movff	btemp+1,postinc2
 27175  0189F0  0060  F00F  FFDE   	movff	btemp+2,postinc2
 27176  0189F6  0060  F013  FFDD   	movff	btemp+3,postdec2
 27177  0189FC  52DD               	movf	postdec2,f,c
 27178  0189FE  52DD               	movf	postdec2,f,c
 27179  018A00  006F FF78  F001    	movff	postinc2,btemp
 27180  018A06  006F FF78  F002    	movff	postinc2,btemp+1
 27181  018A0C  006F FF78  F003    	movff	postinc2,btemp+2
 27182  018A12  006F FF78  F004    	movff	postinc2,btemp+3
 27183  018A18                     l1892:
 27184                           
 27185                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 27186  018A18  0EF6               	movlw	246
 27187  018A1A  26E1               	addwf	fsr1l,f,c
 27188  018A1C  0EFF               	movlw	255
 27189  018A1E  22E2               	addwfc	fsr1h,f,c
 27190  018A20  0012               	return		;funcret
 27191  018A22                     __end_of_lp_filter:
 27192                           	opt callstack 0
 27193                           
 27194 ;; *************** function ___flsub *****************
 27195 ;; Defined at:
 27196 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 27197 ;; Parameters:    Size  Location     Type
 27198 ;;  b               4  [STACK] float 
 27199 ;;  a               4  [STACK] float 
 27200 ;; Auto vars:     Size  Location     Type
 27201 ;;		None
 27202 ;; Return value:  Size  Location     Type
 27203 ;;                  4  [STACK] float 
 27204 ;; Registers used:
 27205 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 27206 ;; Tracked objects:
 27207 ;;		On entry : 0/0
 27208 ;;		On exit  : 0/0
 27209 ;;		Unchanged: 0/0
 27210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27215 ;;Total ram usage:        0 bytes
 27216 ;; Hardware stack levels used:    1
 27217 ;; Hardware stack levels required when called:   16
 27218 ;; This function calls:
 27219 ;;		___fladd
 27220 ;; This function is called by:
 27221 ;;		_conv_raw_result
 27222 ;;		_lp_filter
 27223 ;;		_calc_model_data
 27224 ;;		_calc_ror_data
 27225 ;;		_esr_check
 27226 ;;		_efgtoa
 27227 ;; This function uses a reentrant model
 27228 ;;
 27229                           
 27230                           	psect	text108
 27231  01B86C                     __ptext108:
 27232                           	opt callstack 0
 27233  01B86C                     ___flsub:
 27234                           	opt callstack 0
 27235                           
 27236                           ;stkvar	_a @ sp[(0)+-8]
 27237                           
 27238                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27239                           ;incstack = 0
 27240 ;; hardware stack exceeded
 27241  01B86C  0EFB               	movlw	-5
 27242  01B86E  7EE3               	btg	plusw1,7,c
 27243                           
 27244                           ;stkvar	_a @ sp[(0)+-8]
 27245  01B870  0EF8               	movlw	-8
 27246  01B872  006F FF8F FFE6     	movff	plusw1,postinc1
 27247  01B878  006F FF8F FFE6     	movff	plusw1,postinc1
 27248  01B87E  006F FF8F FFE6     	movff	plusw1,postinc1
 27249  01B884  006F FF8F FFE6     	movff	plusw1,postinc1
 27250                           
 27251                           ;stkvar	_b @ sp[(-4)+-4]
 27252  01B88A  0EF8               	movlw	-8
 27253  01B88C  006F FF8F FFE6     	movff	plusw1,postinc1
 27254  01B892  006F FF8F FFE6     	movff	plusw1,postinc1
 27255  01B898  006F FF8F FFE6     	movff	plusw1,postinc1
 27256  01B89E  006F FF8F FFE6     	movff	plusw1,postinc1
 27257  01B8A4  ECD8  F0A2         	call	___fladd	;wreg free
 27258                           
 27259                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 27260  01B8A8  0EF8               	movlw	248
 27261  01B8AA  26E1               	addwf	fsr1l,f,c
 27262  01B8AC  0EFF               	movlw	255
 27263  01B8AE  22E2               	addwfc	fsr1h,f,c
 27264  01B8B0  0012               	return		;funcret
 27265  01B8B2                     __end_of___flsub:
 27266                           	opt callstack 0
 27267                           
 27268 ;; *************** function ___fladd *****************
 27269 ;; Defined at:
 27270 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 27271 ;; Parameters:    Size  Location     Type
 27272 ;;  b               4  [STACK] float 
 27273 ;;  a               4  [STACK] float 
 27274 ;; Auto vars:     Size  Location     Type
 27275 ;;  grs             1  [STACK] unsigned char 
 27276 ;;  bexp            1  [STACK] unsigned char 
 27277 ;;  aexp            1  [STACK] unsigned char 
 27278 ;;  signs           1  [STACK] unsigned char 
 27279 ;; Return value:  Size  Location     Type
 27280 ;;                  4  [STACK] unsigned char 
 27281 ;; Registers used:
 27282 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 27283 ;; Tracked objects:
 27284 ;;		On entry : 0/0
 27285 ;;		On exit  : 0/0
 27286 ;;		Unchanged: 0/0
 27287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27292 ;;Total ram usage:        0 bytes
 27293 ;; Hardware stack levels used:    1
 27294 ;; Hardware stack levels required when called:   15
 27295 ;; This function calls:
 27296 ;;		Nothing
 27297 ;; This function is called by:
 27298 ;;		_main
 27299 ;;		_conv_raw_result
 27300 ;;		_lp_filter
 27301 ;;		_calc_model_data
 27302 ;;		_efgtoa
 27303 ;;		___asfladd
 27304 ;;		___flsub
 27305 ;; This function uses a reentrant model
 27306 ;;
 27307                           
 27308                           	psect	text109
 27309  0145B0                     __ptext109:
 27310                           	opt callstack 0
 27311  0145B0                     ___fladd:
 27312                           	opt callstack 0
 27313                           
 27314                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27315  0145B0  52E6               	movf	postinc1,f,c
 27316  0145B2  52E6               	movf	postinc1,f,c
 27317  0145B4  52E6               	movf	postinc1,f,c
 27318  0145B6  52E6               	movf	postinc1,f,c
 27319                           
 27320                           ;stkvar	_b @ sp[(-4)+-4]
 27321                           
 27322                           ;incstack = 0
 27323 ;; hardware stack exceeded
 27324  0145B8  0EFB               	movlw	251
 27325  0145BA  24E1               	addwf	fsr1l,w,c
 27326  0145BC  6ED9               	movwf	fsr2l,c
 27327  0145BE  0EFF               	movlw	255
 27328  0145C0  20E2               	addwfc	fsr1h,w,c
 27329  0145C2  6EDA               	movwf	fsr2h,c
 27330  0145C4  50DF               	movf	indf2,w,c
 27331  0145C6  6E0C               	movwf	(btemp+11)^0,c
 27332  0145C8  0E80               	movlw	128
 27333  0145CA  160C               	andwf	(btemp+11)^0,f,c
 27334                           
 27335                           ;stkvar	_signs @ sp[(-4)+3]
 27336  0145CC  0EFF               	movlw	-1
 27337  0145CE  0060  F033  FFE3   	movff	btemp+11,plusw1
 27338                           
 27339                           ;stkvar	_b @ sp[(-4)+-4]
 27340  0145D4  0EFB               	movlw	251
 27341  0145D6  24E1               	addwf	fsr1l,w,c
 27342  0145D8  6ED9               	movwf	fsr2l,c
 27343  0145DA  0EFF               	movlw	255
 27344  0145DC  20E2               	addwfc	fsr1h,w,c
 27345  0145DE  6EDA               	movwf	fsr2h,c
 27346  0145E0  50DF               	movf	indf2,w,c
 27347  0145E2  6E0C               	movwf	(btemp+11)^0,c
 27348  0145E4  90D8               	bcf	status,0,c
 27349  0145E6  340C               	rlcf	(btemp+11)^0,w,c
 27350  0145E8  6E0B               	movwf	(btemp+10)^0,c
 27351                           
 27352                           ;stkvar	_bexp @ sp[(-4)+1]
 27353  0145EA  0EFD               	movlw	-3
 27354  0145EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27355                           
 27356                           ;stkvar	_b @ sp[(-4)+-4]
 27357  0145F2  0EFA               	movlw	250
 27358  0145F4  24E1               	addwf	fsr1l,w,c
 27359  0145F6  6ED9               	movwf	fsr2l,c
 27360  0145F8  0EFF               	movlw	255
 27361  0145FA  20E2               	addwfc	fsr1h,w,c
 27362  0145FC  6EDA               	movwf	fsr2h,c
 27363  0145FE  AEDF               	btfss	indf2,7,c
 27364  014600  D002               	goto	l7846
 27365                           
 27366                           ;stkvar	_bexp @ sp[(-4)+1]
 27367  014602  0EFD               	movlw	-3
 27368  014604  80E3               	bsf	plusw1,0,c
 27369  014606                     l7846:
 27370                           
 27371                           ;stkvar	_bexp @ sp[(-4)+1]
 27372  014606  0EFD               	movlw	-3
 27373  014608  50E3               	movf	plusw1,w,c
 27374  01460A  B4D8               	btfsc	status,2,c
 27375  01460C  D027               	goto	l7856
 27376                           
 27377                           ;stkvar	_bexp @ sp[(-4)+1]
 27378  01460E  0EFD               	movlw	-3
 27379  014610  28E3               	incf	plusw1,w,c
 27380  014612  A4D8               	btfss	status,2,c
 27381  014614  D018               	goto	l7852
 27382  014616  0E00               	movlw	0
 27383  014618  6E09               	movwf	(btemp+8)^0,c
 27384  01461A  0E00               	movlw	0
 27385  01461C  6E0A               	movwf	(btemp+9)^0,c
 27386  01461E  0E00               	movlw	0
 27387  014620  6E0B               	movwf	(btemp+10)^0,c
 27388  014622  0E00               	movlw	0
 27389  014624  6E0C               	movwf	(btemp+11)^0,c
 27390                           
 27391                           ;stkvar	_b @ sp[(-4)+-4]
 27392  014626  0EF8               	movlw	-8
 27393  014628  0060  F027  FFE3   	movff	btemp+8,plusw1
 27394  01462E  0EF9               	movlw	-7
 27395  014630  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27396  014636  0EFA               	movlw	-6
 27397  014638  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27398  01463E  0EFB               	movlw	-5
 27399  014640  0060  F033  FFE3   	movff	btemp+11,plusw1
 27400  014646                     l7852:
 27401                           
 27402                           ;stkvar	_b @ sp[(-4)+-4]
 27403  014646  0EFA               	movlw	-6
 27404  014648  8EE3               	bsf	plusw1,7,c
 27405                           
 27406                           ;stkvar	_b @ sp[(-4)+-4]
 27407  01464A  0EFB               	movlw	251
 27408  01464C  24E1               	addwf	fsr1l,w,c
 27409  01464E  6ED9               	movwf	fsr2l,c
 27410  014650  0EFF               	movlw	255
 27411  014652  20E2               	addwfc	fsr1h,w,c
 27412  014654  6EDA               	movwf	fsr2h,c
 27413  014656  0E00               	movlw	0
 27414  014658  6EDF               	movwf	indf2,c
 27415  01465A  D018               	goto	l7858
 27416  01465C                     l7856:
 27417  01465C  0E00               	movlw	0
 27418  01465E  6E09               	movwf	(btemp+8)^0,c
 27419  014660  0E00               	movlw	0
 27420  014662  6E0A               	movwf	(btemp+9)^0,c
 27421  014664  0E00               	movlw	0
 27422  014666  6E0B               	movwf	(btemp+10)^0,c
 27423  014668  0E00               	movlw	0
 27424  01466A  6E0C               	movwf	(btemp+11)^0,c
 27425                           
 27426                           ;stkvar	_b @ sp[(-4)+-4]
 27427  01466C  0EF8               	movlw	-8
 27428  01466E  0060  F027  FFE3   	movff	btemp+8,plusw1
 27429  014674  0EF9               	movlw	-7
 27430  014676  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27431  01467C  0EFA               	movlw	-6
 27432  01467E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27433  014684  0EFB               	movlw	-5
 27434  014686  0060  F033  FFE3   	movff	btemp+11,plusw1
 27435  01468C                     l7858:
 27436                           
 27437                           ;stkvar	_a @ sp[(-4)+-8]
 27438  01468C  0EF7               	movlw	247
 27439  01468E  24E1               	addwf	fsr1l,w,c
 27440  014690  6ED9               	movwf	fsr2l,c
 27441  014692  0EFF               	movlw	255
 27442  014694  20E2               	addwfc	fsr1h,w,c
 27443  014696  6EDA               	movwf	fsr2h,c
 27444  014698  50DF               	movf	indf2,w,c
 27445  01469A  6E0C               	movwf	(btemp+11)^0,c
 27446  01469C  0E80               	movlw	128
 27447  01469E  160C               	andwf	(btemp+11)^0,f,c
 27448                           
 27449                           ;stkvar	_aexp @ sp[(-4)+2]
 27450  0146A0  0EFE               	movlw	-2
 27451  0146A2  0060  F033  FFE3   	movff	btemp+11,plusw1
 27452                           
 27453                           ;stkvar	_signs @ sp[(-4)+3]
 27454                           ;stkvar	_aexp @ sp[(-4)+2]
 27455  0146A8  50E1               	movf	fsr1l,w,c
 27456  0146AA  0FFE               	addlw	-2
 27457  0146AC  6ED9               	movwf	fsr2l,c
 27458  0146AE  50E2               	movf	fsr1h,w,c
 27459  0146B0  6EDA               	movwf	fsr2h,c
 27460  0146B2  0EFF               	movlw	255
 27461  0146B4  22DA               	addwfc	fsr2h,f,c
 27462  0146B6  0EFF               	movlw	-1
 27463  0146B8  50E3               	movf	plusw1,w,c
 27464  0146BA  18DE               	xorwf	postinc2,w,c
 27465  0146BC  B4D8               	btfsc	status,2,c
 27466  0146BE  D002               	goto	l7864
 27467                           
 27468                           ;stkvar	_signs @ sp[(-4)+3]
 27469  0146C0  0EFF               	movlw	-1
 27470  0146C2  8CE3               	bsf	plusw1,6,c
 27471  0146C4                     l7864:
 27472                           
 27473                           ;stkvar	_a @ sp[(-4)+-8]
 27474  0146C4  0EF7               	movlw	247
 27475  0146C6  24E1               	addwf	fsr1l,w,c
 27476  0146C8  6ED9               	movwf	fsr2l,c
 27477  0146CA  0EFF               	movlw	255
 27478  0146CC  20E2               	addwfc	fsr1h,w,c
 27479  0146CE  6EDA               	movwf	fsr2h,c
 27480  0146D0  50DF               	movf	indf2,w,c
 27481  0146D2  6E0C               	movwf	(btemp+11)^0,c
 27482  0146D4  90D8               	bcf	status,0,c
 27483  0146D6  340C               	rlcf	(btemp+11)^0,w,c
 27484  0146D8  6E0B               	movwf	(btemp+10)^0,c
 27485                           
 27486                           ;stkvar	_aexp @ sp[(-4)+2]
 27487  0146DA  0EFE               	movlw	-2
 27488  0146DC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27489                           
 27490                           ;stkvar	_a @ sp[(-4)+-8]
 27491  0146E2  0EF6               	movlw	246
 27492  0146E4  24E1               	addwf	fsr1l,w,c
 27493  0146E6  6ED9               	movwf	fsr2l,c
 27494  0146E8  0EFF               	movlw	255
 27495  0146EA  20E2               	addwfc	fsr1h,w,c
 27496  0146EC  6EDA               	movwf	fsr2h,c
 27497  0146EE  AEDF               	btfss	indf2,7,c
 27498  0146F0  D002               	goto	l7870
 27499                           
 27500                           ;stkvar	_aexp @ sp[(-4)+2]
 27501  0146F2  0EFE               	movlw	-2
 27502  0146F4  80E3               	bsf	plusw1,0,c
 27503  0146F6                     l7870:
 27504                           
 27505                           ;stkvar	_aexp @ sp[(-4)+2]
 27506  0146F6  0EFE               	movlw	-2
 27507  0146F8  50E3               	movf	plusw1,w,c
 27508  0146FA  B4D8               	btfsc	status,2,c
 27509  0146FC  D027               	goto	l7880
 27510                           
 27511                           ;stkvar	_aexp @ sp[(-4)+2]
 27512  0146FE  0EFE               	movlw	-2
 27513  014700  28E3               	incf	plusw1,w,c
 27514  014702  A4D8               	btfss	status,2,c
 27515  014704  D018               	goto	l7876
 27516  014706  0E00               	movlw	0
 27517  014708  6E09               	movwf	(btemp+8)^0,c
 27518  01470A  0E00               	movlw	0
 27519  01470C  6E0A               	movwf	(btemp+9)^0,c
 27520  01470E  0E00               	movlw	0
 27521  014710  6E0B               	movwf	(btemp+10)^0,c
 27522  014712  0E00               	movlw	0
 27523  014714  6E0C               	movwf	(btemp+11)^0,c
 27524                           
 27525                           ;stkvar	_a @ sp[(-4)+-8]
 27526  014716  0EF4               	movlw	-12
 27527  014718  0060  F027  FFE3   	movff	btemp+8,plusw1
 27528  01471E  0EF5               	movlw	-11
 27529  014720  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27530  014726  0EF6               	movlw	-10
 27531  014728  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27532  01472E  0EF7               	movlw	-9
 27533  014730  0060  F033  FFE3   	movff	btemp+11,plusw1
 27534  014736                     l7876:
 27535                           
 27536                           ;stkvar	_a @ sp[(-4)+-8]
 27537  014736  0EF6               	movlw	-10
 27538  014738  8EE3               	bsf	plusw1,7,c
 27539                           
 27540                           ;stkvar	_a @ sp[(-4)+-8]
 27541  01473A  0EF7               	movlw	247
 27542  01473C  24E1               	addwf	fsr1l,w,c
 27543  01473E  6ED9               	movwf	fsr2l,c
 27544  014740  0EFF               	movlw	255
 27545  014742  20E2               	addwfc	fsr1h,w,c
 27546  014744  6EDA               	movwf	fsr2h,c
 27547  014746  0E00               	movlw	0
 27548  014748  6EDF               	movwf	indf2,c
 27549  01474A  D018               	goto	l7882
 27550  01474C                     l7880:
 27551  01474C  0E00               	movlw	0
 27552  01474E  6E09               	movwf	(btemp+8)^0,c
 27553  014750  0E00               	movlw	0
 27554  014752  6E0A               	movwf	(btemp+9)^0,c
 27555  014754  0E00               	movlw	0
 27556  014756  6E0B               	movwf	(btemp+10)^0,c
 27557  014758  0E00               	movlw	0
 27558  01475A  6E0C               	movwf	(btemp+11)^0,c
 27559                           
 27560                           ;stkvar	_a @ sp[(-4)+-8]
 27561  01475C  0EF4               	movlw	-12
 27562  01475E  0060  F027  FFE3   	movff	btemp+8,plusw1
 27563  014764  0EF5               	movlw	-11
 27564  014766  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27565  01476C  0EF6               	movlw	-10
 27566  01476E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27567  014774  0EF7               	movlw	-9
 27568  014776  0060  F033  FFE3   	movff	btemp+11,plusw1
 27569  01477C                     l7882:
 27570                           
 27571                           ;stkvar	_bexp @ sp[(-4)+1]
 27572                           ;stkvar	_aexp @ sp[(-4)+2]
 27573  01477C  50E1               	movf	fsr1l,w,c
 27574  01477E  0FFE               	addlw	-2
 27575  014780  6ED9               	movwf	fsr2l,c
 27576  014782  50E2               	movf	fsr1h,w,c
 27577  014784  6EDA               	movwf	fsr2h,c
 27578  014786  0EFF               	movlw	255
 27579  014788  22DA               	addwfc	fsr2h,f,c
 27580  01478A  0EFD               	movlw	-3
 27581  01478C  50E3               	movf	plusw1,w,c
 27582  01478E  5CDE               	subwf	postinc2,w,c
 27583  014790  B0D8               	btfsc	status,0,c
 27584  014792  D0A4               	goto	l7918
 27585                           
 27586                           ;stkvar	_signs @ sp[(-4)+3]
 27587  014794  0EFF               	movlw	-1
 27588  014796  ACE3               	btfss	plusw1,6,c
 27589  014798  D002               	goto	l7888
 27590                           
 27591                           ;stkvar	_signs @ sp[(-4)+3]
 27592  01479A  0EFF               	movlw	-1
 27593  01479C  7EE3               	btg	plusw1,7,c
 27594  01479E                     l7888:
 27595                           
 27596                           ;stkvar	_bexp @ sp[(-4)+1]
 27597                           ;stkvar	_grs @ sp[(-4)+0]
 27598  01479E  0EFD               	movlw	-3
 27599  0147A0  006F FF8C  F001    	movff	plusw1,btemp
 27600  0147A6  0EFC               	movlw	-4
 27601  0147A8  0060  F007  FFE3   	movff	btemp,plusw1
 27602                           
 27603                           ;stkvar	_aexp @ sp[(-4)+2]
 27604                           ;stkvar	_bexp @ sp[(-4)+1]
 27605  0147AE  0EFE               	movlw	-2
 27606  0147B0  006F FF8C  F001    	movff	plusw1,btemp
 27607  0147B6  0EFD               	movlw	-3
 27608  0147B8  0060  F007  FFE3   	movff	btemp,plusw1
 27609                           
 27610                           ;stkvar	_grs @ sp[(-4)+0]
 27611                           ;stkvar	_aexp @ sp[(-4)+2]
 27612  0147BE  0EFC               	movlw	-4
 27613  0147C0  006F FF8C  F001    	movff	plusw1,btemp
 27614  0147C6  0EFE               	movlw	-2
 27615  0147C8  0060  F007  FFE3   	movff	btemp,plusw1
 27616                           
 27617                           ;stkvar	_b @ sp[(-4)+-4]
 27618                           ;stkvar	_grs @ sp[(-4)+0]
 27619  0147CE  0EF8               	movlw	-8
 27620  0147D0  006F FF8C  F001    	movff	plusw1,btemp
 27621  0147D6  0EFC               	movlw	-4
 27622  0147D8  0060  F007  FFE3   	movff	btemp,plusw1
 27623                           
 27624                           ;stkvar	_a @ sp[(-4)+-8]
 27625                           ;stkvar	_b @ sp[(-4)+-4]
 27626  0147DE  0EF4               	movlw	-12
 27627  0147E0  006F FF8C  F001    	movff	plusw1,btemp
 27628  0147E6  0EF8               	movlw	-8
 27629  0147E8  0060  F007  FFE3   	movff	btemp,plusw1
 27630                           
 27631                           ;stkvar	_grs @ sp[(-4)+0]
 27632                           ;stkvar	_a @ sp[(-4)+-8]
 27633  0147EE  0EFC               	movlw	-4
 27634  0147F0  006F FF8C  F001    	movff	plusw1,btemp
 27635  0147F6  0EF4               	movlw	-12
 27636  0147F8  0060  F007  FFE3   	movff	btemp,plusw1
 27637                           
 27638                           ;stkvar	_b @ sp[(-4)+-4]
 27639  0147FE  0EF9               	movlw	249
 27640  014800  24E1               	addwf	fsr1l,w,c
 27641  014802  6ED9               	movwf	fsr2l,c
 27642  014804  0EFF               	movlw	255
 27643  014806  20E2               	addwfc	fsr1h,w,c
 27644  014808  6EDA               	movwf	fsr2h,c
 27645  01480A  50DF               	movf	indf2,w,c
 27646  01480C  6E0C               	movwf	(btemp+11)^0,c
 27647                           
 27648                           ;stkvar	_grs @ sp[(-4)+0]
 27649  01480E  0EFC               	movlw	-4
 27650  014810  0060  F033  FFE3   	movff	btemp+11,plusw1
 27651                           
 27652                           ;stkvar	_a @ sp[(-4)+-8]
 27653  014816  0EF5               	movlw	245
 27654  014818  24E1               	addwf	fsr1l,w,c
 27655  01481A  6ED9               	movwf	fsr2l,c
 27656  01481C  0EFF               	movlw	255
 27657  01481E  20E2               	addwfc	fsr1h,w,c
 27658  014820  6EDA               	movwf	fsr2h,c
 27659                           
 27660                           ;stkvar	_b @ sp[(-4)+-4]
 27661  014822  0EF9               	movlw	249
 27662  014824  24E1               	addwf	fsr1l,w,c
 27663  014826  6EE9               	movwf	fsr0l,c
 27664  014828  0EFF               	movlw	255
 27665  01482A  20E2               	addwfc	fsr1h,w,c
 27666  01482C  6EEA               	movwf	fsr0h,c
 27667  01482E  006F FF7F FFEF     	movff	indf2,indf0
 27668                           
 27669                           ;stkvar	_grs @ sp[(-4)+0]
 27670                           ;stkvar	_a @ sp[(-4)+-8]
 27671  014834  0EF5               	movlw	245
 27672  014836  24E1               	addwf	fsr1l,w,c
 27673  014838  6ED9               	movwf	fsr2l,c
 27674  01483A  0EFF               	movlw	255
 27675  01483C  20E2               	addwfc	fsr1h,w,c
 27676  01483E  6EDA               	movwf	fsr2h,c
 27677  014840  0EFC               	movlw	-4
 27678  014842  006F FF8F FFDF     	movff	plusw1,indf2
 27679                           
 27680                           ;stkvar	_b @ sp[(-4)+-4]
 27681  014848  0EFA               	movlw	250
 27682  01484A  24E1               	addwf	fsr1l,w,c
 27683  01484C  6ED9               	movwf	fsr2l,c
 27684  01484E  0EFF               	movlw	255
 27685  014850  20E2               	addwfc	fsr1h,w,c
 27686  014852  6EDA               	movwf	fsr2h,c
 27687  014854  50DF               	movf	indf2,w,c
 27688  014856  6E0C               	movwf	(btemp+11)^0,c
 27689                           
 27690                           ;stkvar	_grs @ sp[(-4)+0]
 27691  014858  0EFC               	movlw	-4
 27692  01485A  0060  F033  FFE3   	movff	btemp+11,plusw1
 27693                           
 27694                           ;stkvar	_a @ sp[(-4)+-8]
 27695  014860  0EF6               	movlw	246
 27696  014862  24E1               	addwf	fsr1l,w,c
 27697  014864  6ED9               	movwf	fsr2l,c
 27698  014866  0EFF               	movlw	255
 27699  014868  20E2               	addwfc	fsr1h,w,c
 27700  01486A  6EDA               	movwf	fsr2h,c
 27701                           
 27702                           ;stkvar	_b @ sp[(-4)+-4]
 27703  01486C  0EFA               	movlw	250
 27704  01486E  24E1               	addwf	fsr1l,w,c
 27705  014870  6EE9               	movwf	fsr0l,c
 27706  014872  0EFF               	movlw	255
 27707  014874  20E2               	addwfc	fsr1h,w,c
 27708  014876  6EEA               	movwf	fsr0h,c
 27709  014878  006F FF7F FFEF     	movff	indf2,indf0
 27710                           
 27711                           ;stkvar	_grs @ sp[(-4)+0]
 27712                           ;stkvar	_a @ sp[(-4)+-8]
 27713  01487E  0EF6               	movlw	246
 27714  014880  24E1               	addwf	fsr1l,w,c
 27715  014882  6ED9               	movwf	fsr2l,c
 27716  014884  0EFF               	movlw	255
 27717  014886  20E2               	addwfc	fsr1h,w,c
 27718  014888  6EDA               	movwf	fsr2h,c
 27719  01488A  0EFC               	movlw	-4
 27720  01488C  006F FF8F FFDF     	movff	plusw1,indf2
 27721                           
 27722                           ;stkvar	_b @ sp[(-4)+-4]
 27723  014892  0EFB               	movlw	251
 27724  014894  24E1               	addwf	fsr1l,w,c
 27725  014896  6ED9               	movwf	fsr2l,c
 27726  014898  0EFF               	movlw	255
 27727  01489A  20E2               	addwfc	fsr1h,w,c
 27728  01489C  6EDA               	movwf	fsr2h,c
 27729  01489E  50DF               	movf	indf2,w,c
 27730  0148A0  6E0C               	movwf	(btemp+11)^0,c
 27731                           
 27732                           ;stkvar	_grs @ sp[(-4)+0]
 27733  0148A2  0EFC               	movlw	-4
 27734  0148A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 27735                           
 27736                           ;stkvar	_a @ sp[(-4)+-8]
 27737  0148AA  0EF7               	movlw	247
 27738  0148AC  24E1               	addwf	fsr1l,w,c
 27739  0148AE  6ED9               	movwf	fsr2l,c
 27740  0148B0  0EFF               	movlw	255
 27741  0148B2  20E2               	addwfc	fsr1h,w,c
 27742  0148B4  6EDA               	movwf	fsr2h,c
 27743                           
 27744                           ;stkvar	_b @ sp[(-4)+-4]
 27745  0148B6  0EFB               	movlw	251
 27746  0148B8  24E1               	addwf	fsr1l,w,c
 27747  0148BA  6EE9               	movwf	fsr0l,c
 27748  0148BC  0EFF               	movlw	255
 27749  0148BE  20E2               	addwfc	fsr1h,w,c
 27750  0148C0  6EEA               	movwf	fsr0h,c
 27751  0148C2  006F FF7F FFEF     	movff	indf2,indf0
 27752                           
 27753                           ;stkvar	_grs @ sp[(-4)+0]
 27754                           ;stkvar	_a @ sp[(-4)+-8]
 27755  0148C8  0EF7               	movlw	247
 27756  0148CA  24E1               	addwf	fsr1l,w,c
 27757  0148CC  6ED9               	movwf	fsr2l,c
 27758  0148CE  0EFF               	movlw	255
 27759  0148D0  20E2               	addwfc	fsr1h,w,c
 27760  0148D2  6EDA               	movwf	fsr2h,c
 27761  0148D4  0EFC               	movlw	-4
 27762  0148D6  006F FF8F FFDF     	movff	plusw1,indf2
 27763  0148DC                     l7918:
 27764                           
 27765                           ;stkvar	_grs @ sp[(-4)+0]
 27766  0148DC  0EFC               	movlw	-4
 27767  0148DE  6AE3               	clrf	plusw1,c
 27768                           
 27769                           ;stkvar	_aexp @ sp[(-4)+2]
 27770  0148E0  0EFE               	movlw	-2
 27771  0148E2  50E3               	movf	plusw1,w,c
 27772  0148E4  6E0B               	movwf	(btemp+10)^0,c
 27773  0148E6  6A0C               	clrf	(btemp+11)^0,c
 27774                           
 27775                           ;stkvar	_bexp @ sp[(-4)+1]
 27776  0148E8  0EFD               	movlw	-3
 27777  0148EA  50E3               	movf	plusw1,w,c
 27778  0148EC  5E0B               	subwf	(btemp+10)^0,f,c
 27779  0148EE  0E00               	movlw	0
 27780  0148F0  5A0C               	subwfb	(btemp+11)^0,f,c
 27781  0148F2  BE0C               	btfsc	(btemp+11)^0,7,c
 27782  0148F4  D062               	goto	l7942
 27783  0148F6  500C               	movf	(btemp+11)^0,w,c
 27784  0148F8  E104               	bnz	u5610
 27785  0148FA  0E1A               	movlw	26
 27786  0148FC  5C0B               	subwf	(btemp+10)^0,w,c
 27787  0148FE  A0D8               	btfss	status,0,c
 27788  014900  D05C               	goto	l7942
 27789  014902                     u5610:
 27790                           
 27791                           ;stkvar	_b @ sp[(-4)+-4]
 27792  014902  0EF8               	movlw	-8
 27793  014904  50E3               	movf	plusw1,w,c
 27794  014906  E10A               	bnz	u5621
 27795  014908  0EF9               	movlw	-7
 27796  01490A  50E3               	movf	plusw1,w,c
 27797  01490C  E107               	bnz	u5621
 27798  01490E  0EFA               	movlw	-6
 27799  014910  50E3               	movf	plusw1,w,c
 27800  014912  E104               	bnz	u5621
 27801  014914  0EFB               	movlw	-5
 27802  014916  50E3               	movf	plusw1,w,c
 27803  014918  B4D8               	btfsc	status,2,c
 27804  01491A  D003               	goto	u5620
 27805  01491C                     u5621:
 27806  01491C  6A0C               	clrf	(btemp+11)^0,c
 27807  01491E  2A0C               	incf	(btemp+11)^0,f,c
 27808  014920  D001               	goto	u5638
 27809  014922                     u5620:
 27810  014922  6A0C               	clrf	(btemp+11)^0,c
 27811  014924                     u5638:
 27812                           
 27813                           ;stkvar	_grs @ sp[(-4)+0]
 27814  014924  0EFC               	movlw	-4
 27815  014926  0060  F033  FFE3   	movff	btemp+11,plusw1
 27816                           
 27817                           ;stkvar	_b @ sp[(-4)+-4]
 27818  01492C  0EF8               	movlw	-8
 27819  01492E  6AE3               	clrf	plusw1,c
 27820  014930  0EF9               	movlw	-7
 27821  014932  6AE3               	clrf	plusw1,c
 27822  014934  0EFA               	movlw	-6
 27823  014936  6AE3               	clrf	plusw1,c
 27824  014938  0EFB               	movlw	-5
 27825  01493A  6AE3               	clrf	plusw1,c
 27826                           
 27827                           ;stkvar	_aexp @ sp[(-4)+2]
 27828                           ;stkvar	_bexp @ sp[(-4)+1]
 27829  01493C  0EFE               	movlw	-2
 27830  01493E  006F FF8C  F001    	movff	plusw1,btemp
 27831  014944  0EFD               	movlw	-3
 27832  014946  0060  F007  FFE3   	movff	btemp,plusw1
 27833  01494C  D042               	goto	u5670
 27834  01494E                     l7928:
 27835                           
 27836                           ;stkvar	_grs @ sp[(-4)+0]
 27837  01494E  0EFC               	movlw	-4
 27838  014950  A0E3               	btfss	plusw1,0,c
 27839  014952  D00D               	goto	l7932
 27840                           
 27841                           ;stkvar	_grs @ sp[(-4)+0]
 27842  014954  0EFC               	movlw	-4
 27843  014956  006F FF8C  F00C    	movff	plusw1,btemp+11
 27844  01495C  90D8               	bcf	status,0,c
 27845  01495E  320C               	rrcf	(btemp+11)^0,f,c
 27846  014960  0E01               	movlw	1
 27847  014962  120C               	iorwf	(btemp+11)^0,f,c
 27848                           
 27849                           ;stkvar	_grs @ sp[(-4)+0]
 27850  014964  0EFC               	movlw	-4
 27851  014966  0060  F033  FFE3   	movff	btemp+11,plusw1
 27852  01496C  D009               	goto	l7934
 27853  01496E                     l7932:
 27854                           
 27855                           ;stkvar	_grs @ sp[(-4)+0]
 27856  01496E  50E1               	movf	fsr1l,w,c
 27857  014970  0FFC               	addlw	-4
 27858  014972  6ED9               	movwf	fsr2l,c
 27859  014974  50E2               	movf	fsr1h,w,c
 27860  014976  6EDA               	movwf	fsr2h,c
 27861  014978  0EFF               	movlw	255
 27862  01497A  22DA               	addwfc	fsr2h,f,c
 27863  01497C  90D8               	bcf	status,0,c
 27864  01497E  32DF               	rrcf	indf2,f,c
 27865  014980                     l7934:
 27866                           
 27867                           ;stkvar	_b @ sp[(-4)+-4]
 27868  014980  0EF8               	movlw	-8
 27869  014982  A0E3               	btfss	plusw1,0,c
 27870  014984  D002               	goto	l7938
 27871                           
 27872                           ;stkvar	_grs @ sp[(-4)+0]
 27873  014986  0EFC               	movlw	-4
 27874  014988  8EE3               	bsf	plusw1,7,c
 27875  01498A                     l7938:
 27876  01498A  0E01               	movlw	1
 27877  01498C  6E0C               	movwf	(btemp+11)^0,c
 27878                           
 27879                           ;stkvar	_b @ sp[(-4)+-4]
 27880  01498E  50E1               	movf	fsr1l,w,c
 27881  014990  0FF8               	addlw	-8
 27882  014992  6ED9               	movwf	fsr2l,c
 27883  014994  50E2               	movf	fsr1h,w,c
 27884  014996  6EDA               	movwf	fsr2h,c
 27885  014998  0EFF               	movlw	255
 27886  01499A  22DA               	addwfc	fsr2h,f,c
 27887  01499C  280C               	incf	(btemp+11)^0,w,c
 27888  01499E  52DE               	movf	postinc2,f,c
 27889  0149A0  D008               	goto	u5660
 27890  0149A2                     u5665:
 27891  0149A2  52DE               	movf	postinc2,f,c
 27892  0149A4  90D8               	bcf	status,0,c
 27893  0149A6  BEDC               	btfsc	preinc2,7,c
 27894  0149A8  80D8               	bsf	status,0,c
 27895  0149AA  32DD               	rrcf	postdec2,f,c
 27896  0149AC  32DD               	rrcf	postdec2,f,c
 27897  0149AE  32DD               	rrcf	postdec2,f,c
 27898  0149B0  32DE               	rrcf	postinc2,f,c
 27899  0149B2                     u5660:
 27900  0149B2  2EE8               	decfsz	wreg,f,c
 27901  0149B4  D7F6               	goto	u5665
 27902                           
 27903                           ;stkvar	_bexp @ sp[(-4)+1]
 27904  0149B6  0EFD               	movlw	-3
 27905  0149B8  2AE3               	incf	plusw1,f,c
 27906  0149BA                     l7942:
 27907                           
 27908                           ;stkvar	_aexp @ sp[(-4)+2]
 27909                           ;stkvar	_bexp @ sp[(-4)+1]
 27910  0149BA  50E1               	movf	fsr1l,w,c
 27911  0149BC  0FFD               	addlw	-3
 27912  0149BE  6ED9               	movwf	fsr2l,c
 27913  0149C0  50E2               	movf	fsr1h,w,c
 27914  0149C2  6EDA               	movwf	fsr2h,c
 27915  0149C4  0EFF               	movlw	255
 27916  0149C6  22DA               	addwfc	fsr2h,f,c
 27917  0149C8  0EFE               	movlw	-2
 27918  0149CA  50E3               	movf	plusw1,w,c
 27919  0149CC  5CDE               	subwf	postinc2,w,c
 27920  0149CE  A0D8               	btfss	status,0,c
 27921  0149D0  D7BE               	goto	l7928
 27922  0149D2                     u5670:
 27923                           
 27924                           ;stkvar	_signs @ sp[(-4)+3]
 27925  0149D2  0EFF               	movlw	-1
 27926  0149D4  BCE3               	btfsc	plusw1,6,c
 27927  0149D6  D066               	goto	l7970
 27928                           
 27929                           ;stkvar	_bexp @ sp[(-4)+1]
 27930  0149D8  0EFD               	movlw	-3
 27931  0149DA  50E3               	movf	plusw1,w,c
 27932  0149DC  B4D8               	btfsc	status,2,c
 27933  0149DE  D0F2               	goto	u5770
 27934                           
 27935                           ;stkvar	_a @ sp[(-4)+-8]
 27936                           ;stkvar	_b @ sp[(-4)+-4]
 27937  0149E0  0EF8               	movlw	-8
 27938  0149E2  50E3               	movf	plusw1,w,c
 27939  0149E4  6E01               	movwf	btemp^0,c
 27940  0149E6  0EF4               	movlw	-12
 27941  0149E8  50E3               	movf	plusw1,w,c
 27942  0149EA  2601               	addwf	btemp^0,f,c
 27943  0149EC  0EF8               	movlw	-8
 27944  0149EE  0060  F007  FFE3   	movff	btemp,plusw1
 27945  0149F4  0EF9               	movlw	-7
 27946  0149F6  50E3               	movf	plusw1,w,c
 27947  0149F8  6E01               	movwf	btemp^0,c
 27948  0149FA  0EF5               	movlw	-11
 27949  0149FC  50E3               	movf	plusw1,w,c
 27950  0149FE  2201               	addwfc	btemp^0,f,c
 27951  014A00  0EF9               	movlw	-7
 27952  014A02  0060  F007  FFE3   	movff	btemp,plusw1
 27953  014A08  0EFA               	movlw	-6
 27954  014A0A  50E3               	movf	plusw1,w,c
 27955  014A0C  6E01               	movwf	btemp^0,c
 27956  014A0E  0EF6               	movlw	-10
 27957  014A10  50E3               	movf	plusw1,w,c
 27958  014A12  2201               	addwfc	btemp^0,f,c
 27959  014A14  0EFA               	movlw	-6
 27960  014A16  0060  F007  FFE3   	movff	btemp,plusw1
 27961  014A1C  0EFB               	movlw	-5
 27962  014A1E  50E3               	movf	plusw1,w,c
 27963  014A20  6E01               	movwf	btemp^0,c
 27964  014A22  0EF7               	movlw	-9
 27965  014A24  50E3               	movf	plusw1,w,c
 27966  014A26  2201               	addwfc	btemp^0,f,c
 27967  014A28  0EFB               	movlw	-5
 27968  014A2A  0060  F007  FFE3   	movff	btemp,plusw1
 27969                           
 27970                           ;stkvar	_b @ sp[(-4)+-4]
 27971  014A30  0EFB               	movlw	-5
 27972  014A32  A0E3               	btfss	plusw1,0,c
 27973  014A34  D101               	goto	u5810
 27974                           
 27975                           ;stkvar	_grs @ sp[(-4)+0]
 27976  014A36  0EFC               	movlw	-4
 27977  014A38  A0E3               	btfss	plusw1,0,c
 27978  014A3A  D00D               	goto	l7960
 27979                           
 27980                           ;stkvar	_grs @ sp[(-4)+0]
 27981  014A3C  0EFC               	movlw	-4
 27982  014A3E  006F FF8C  F00C    	movff	plusw1,btemp+11
 27983  014A44  90D8               	bcf	status,0,c
 27984  014A46  320C               	rrcf	(btemp+11)^0,f,c
 27985  014A48  0E01               	movlw	1
 27986  014A4A  120C               	iorwf	(btemp+11)^0,f,c
 27987                           
 27988                           ;stkvar	_grs @ sp[(-4)+0]
 27989  014A4C  0EFC               	movlw	-4
 27990  014A4E  0060  F033  FFE3   	movff	btemp+11,plusw1
 27991  014A54  D009               	goto	l7962
 27992  014A56                     l7960:
 27993                           
 27994                           ;stkvar	_grs @ sp[(-4)+0]
 27995  014A56  50E1               	movf	fsr1l,w,c
 27996  014A58  0FFC               	addlw	-4
 27997  014A5A  6ED9               	movwf	fsr2l,c
 27998  014A5C  50E2               	movf	fsr1h,w,c
 27999  014A5E  6EDA               	movwf	fsr2h,c
 28000  014A60  0EFF               	movlw	255
 28001  014A62  22DA               	addwfc	fsr2h,f,c
 28002  014A64  90D8               	bcf	status,0,c
 28003  014A66  32DF               	rrcf	indf2,f,c
 28004  014A68                     l7962:
 28005                           
 28006                           ;stkvar	_b @ sp[(-4)+-4]
 28007  014A68  0EF8               	movlw	-8
 28008  014A6A  A0E3               	btfss	plusw1,0,c
 28009  014A6C  D002               	goto	l7966
 28010                           
 28011                           ;stkvar	_grs @ sp[(-4)+0]
 28012  014A6E  0EFC               	movlw	-4
 28013  014A70  8EE3               	bsf	plusw1,7,c
 28014  014A72                     l7966:
 28015  014A72  0E01               	movlw	1
 28016  014A74  6E0C               	movwf	(btemp+11)^0,c
 28017                           
 28018                           ;stkvar	_b @ sp[(-4)+-4]
 28019  014A76  50E1               	movf	fsr1l,w,c
 28020  014A78  0FF8               	addlw	-8
 28021  014A7A  6ED9               	movwf	fsr2l,c
 28022  014A7C  50E2               	movf	fsr1h,w,c
 28023  014A7E  6EDA               	movwf	fsr2h,c
 28024  014A80  0EFF               	movlw	255
 28025  014A82  22DA               	addwfc	fsr2h,f,c
 28026  014A84  280C               	incf	(btemp+11)^0,w,c
 28027  014A86  52DE               	movf	postinc2,f,c
 28028  014A88  D008               	goto	u5730
 28029  014A8A                     u5735:
 28030  014A8A  52DE               	movf	postinc2,f,c
 28031  014A8C  90D8               	bcf	status,0,c
 28032  014A8E  BEDC               	btfsc	preinc2,7,c
 28033  014A90  80D8               	bsf	status,0,c
 28034  014A92  32DD               	rrcf	postdec2,f,c
 28035  014A94  32DD               	rrcf	postdec2,f,c
 28036  014A96  32DD               	rrcf	postdec2,f,c
 28037  014A98  32DE               	rrcf	postinc2,f,c
 28038  014A9A                     u5730:
 28039  014A9A  2EE8               	decfsz	wreg,f,c
 28040  014A9C  D7F6               	goto	u5735
 28041                           
 28042                           ;stkvar	_bexp @ sp[(-4)+1]
 28043  014A9E  0EFD               	movlw	-3
 28044  014AA0  2AE3               	incf	plusw1,f,c
 28045  014AA2  D0CA               	goto	u5810
 28046  014AA4                     l7970:
 28047                           
 28048                           ;stkvar	_a @ sp[(-4)+-8]
 28049                           ;stkvar	_b @ sp[(-4)+-4]
 28050  014AA4  50E1               	movf	fsr1l,w,c
 28051  014AA6  0FF8               	addlw	-8
 28052  014AA8  6ED9               	movwf	fsr2l,c
 28053  014AAA  50E2               	movf	fsr1h,w,c
 28054  014AAC  6EDA               	movwf	fsr2h,c
 28055  014AAE  0EFF               	movlw	255
 28056  014AB0  22DA               	addwfc	fsr2h,f,c
 28057  014AB2  0EF4               	movlw	-12
 28058  014AB4  50E3               	movf	plusw1,w,c
 28059  014AB6  5CDE               	subwf	postinc2,w,c
 28060  014AB8  0EF5               	movlw	-11
 28061  014ABA  50E3               	movf	plusw1,w,c
 28062  014ABC  58DE               	subwfb	postinc2,w,c
 28063  014ABE  0EF6               	movlw	-10
 28064  014AC0  50E3               	movf	plusw1,w,c
 28065  014AC2  58DE               	subwfb	postinc2,w,c
 28066  014AC4  50DE               	movf	postinc2,w,c
 28067  014AC6  0A80               	xorlw	128
 28068  014AC8  6E01               	movwf	btemp^0,c
 28069  014ACA  0EF7               	movlw	-9
 28070  014ACC  50E3               	movf	plusw1,w,c
 28071  014ACE  0A80               	xorlw	128
 28072  014AD0  5801               	subwfb	btemp^0,w,c
 28073  014AD2  B0D8               	btfsc	status,0,c
 28074  014AD4  D053               	goto	l7982
 28075                           
 28076                           ;stkvar	_b @ sp[(-4)+-4]
 28077                           ;stkvar	_a @ sp[(-4)+-8]
 28078  014AD6  0EF4               	movlw	-12
 28079  014AD8  006F FF8C  F009    	movff	plusw1,btemp+8
 28080  014ADE  0EF5               	movlw	-11
 28081  014AE0  006F FF8C  F00A    	movff	plusw1,btemp+9
 28082  014AE6  0EF6               	movlw	-10
 28083  014AE8  006F FF8C  F00B    	movff	plusw1,btemp+10
 28084  014AEE  0EF7               	movlw	-9
 28085  014AF0  006F FF8C  F00C    	movff	plusw1,btemp+11
 28086  014AF6  0EF8               	movlw	-8
 28087  014AF8  50E3               	movf	plusw1,w,c
 28088  014AFA  5E09               	subwf	(btemp+8)^0,f,c
 28089  014AFC  0EF9               	movlw	-7
 28090  014AFE  50E3               	movf	plusw1,w,c
 28091  014B00  5A0A               	subwfb	(btemp+9)^0,f,c
 28092  014B02  0EFA               	movlw	-6
 28093  014B04  50E3               	movf	plusw1,w,c
 28094  014B06  5A0B               	subwfb	(btemp+10)^0,f,c
 28095  014B08  0EFB               	movlw	-5
 28096  014B0A  50E3               	movf	plusw1,w,c
 28097  014B0C  5A0C               	subwfb	(btemp+11)^0,f,c
 28098  014B0E  0EFF               	movlw	255
 28099  014B10  2409               	addwf	(btemp+8)^0,w,c
 28100  014B12  6E05               	movwf	(btemp+4)^0,c
 28101  014B14  0EFF               	movlw	255
 28102  014B16  200A               	addwfc	(btemp+9)^0,w,c
 28103  014B18  6E06               	movwf	(btemp+5)^0,c
 28104  014B1A  0EFF               	movlw	255
 28105  014B1C  200B               	addwfc	(btemp+10)^0,w,c
 28106  014B1E  6E07               	movwf	(btemp+6)^0,c
 28107  014B20  0EFF               	movlw	255
 28108  014B22  200C               	addwfc	(btemp+11)^0,w,c
 28109  014B24  6E08               	movwf	(btemp+7)^0,c
 28110                           
 28111                           ;stkvar	_b @ sp[(-4)+-4]
 28112  014B26  0EF8               	movlw	-8
 28113  014B28  0060  F017  FFE3   	movff	btemp+4,plusw1
 28114  014B2E  0EF9               	movlw	-7
 28115  014B30  0060  F01B  FFE3   	movff	btemp+5,plusw1
 28116  014B36  0EFA               	movlw	-6
 28117  014B38  0060  F01F  FFE3   	movff	btemp+6,plusw1
 28118  014B3E  0EFB               	movlw	-5
 28119  014B40  0060  F023  FFE3   	movff	btemp+7,plusw1
 28120                           
 28121                           ;stkvar	_signs @ sp[(-4)+3]
 28122  014B46  0EFF               	movlw	-1
 28123  014B48  7EE3               	btg	plusw1,7,c
 28124                           
 28125                           ;stkvar	_grs @ sp[(-4)+0]
 28126  014B4A  0EFC               	movlw	-4
 28127  014B4C  50E3               	movf	plusw1,w,c
 28128  014B4E  0800               	sublw	0
 28129  014B50  6E0C               	movwf	(btemp+11)^0,c
 28130                           
 28131                           ;stkvar	_grs @ sp[(-4)+0]
 28132  014B52  0EFC               	movlw	-4
 28133  014B54  0060  F033  FFE3   	movff	btemp+11,plusw1
 28134                           
 28135                           ;stkvar	_grs @ sp[(-4)+0]
 28136  014B5A  0EFC               	movlw	-4
 28137  014B5C  50E3               	movf	plusw1,w,c
 28138  014B5E  A4D8               	btfss	status,2,c
 28139  014B60  D020               	goto	l7984
 28140                           
 28141                           ;stkvar	_b @ sp[(-4)+-4]
 28142  014B62  50E1               	movf	fsr1l,w,c
 28143  014B64  0FF8               	addlw	-8
 28144  014B66  6ED9               	movwf	fsr2l,c
 28145  014B68  50E2               	movf	fsr1h,w,c
 28146  014B6A  6EDA               	movwf	fsr2h,c
 28147  014B6C  0EFF               	movlw	255
 28148  014B6E  22DA               	addwfc	fsr2h,f,c
 28149  014B70  2ADE               	incf	postinc2,f,c
 28150  014B72  0E00               	movlw	0
 28151  014B74  22DE               	addwfc	postinc2,f,c
 28152  014B76  22DE               	addwfc	postinc2,f,c
 28153  014B78  22DE               	addwfc	postinc2,f,c
 28154  014B7A  D013               	goto	l7984
 28155  014B7C                     l7982:
 28156                           
 28157                           ;stkvar	_a @ sp[(-4)+-8]
 28158                           ;stkvar	_b @ sp[(-4)+-4]
 28159  014B7C  50E1               	movf	fsr1l,w,c
 28160  014B7E  0FF8               	addlw	-8
 28161  014B80  6ED9               	movwf	fsr2l,c
 28162  014B82  50E2               	movf	fsr1h,w,c
 28163  014B84  6EDA               	movwf	fsr2h,c
 28164  014B86  0EFF               	movlw	255
 28165  014B88  22DA               	addwfc	fsr2h,f,c
 28166  014B8A  0EF4               	movlw	-12
 28167  014B8C  50E3               	movf	plusw1,w,c
 28168  014B8E  5EDE               	subwf	postinc2,f,c
 28169  014B90  0EF5               	movlw	-11
 28170  014B92  50E3               	movf	plusw1,w,c
 28171  014B94  5ADE               	subwfb	postinc2,f,c
 28172  014B96  0EF6               	movlw	-10
 28173  014B98  50E3               	movf	plusw1,w,c
 28174  014B9A  5ADE               	subwfb	postinc2,f,c
 28175  014B9C  0EF7               	movlw	-9
 28176  014B9E  50E3               	movf	plusw1,w,c
 28177  014BA0  5ADE               	subwfb	postinc2,f,c
 28178  014BA2                     l7984:
 28179                           
 28180                           ;stkvar	_b @ sp[(-4)+-4]
 28181  014BA2  0EF8               	movlw	-8
 28182  014BA4  50E3               	movf	plusw1,w,c
 28183  014BA6  E145               	bnz	l8006
 28184  014BA8  0EF9               	movlw	-7
 28185  014BAA  50E3               	movf	plusw1,w,c
 28186  014BAC  E142               	bnz	l8006
 28187  014BAE  0EFA               	movlw	-6
 28188  014BB0  50E3               	movf	plusw1,w,c
 28189  014BB2  E13F               	bnz	l8006
 28190  014BB4  0EFB               	movlw	-5
 28191  014BB6  50E3               	movf	plusw1,w,c
 28192  014BB8  A4D8               	btfss	status,2,c
 28193  014BBA  D03B               	goto	l8006
 28194                           
 28195                           ;stkvar	_grs @ sp[(-4)+0]
 28196  014BBC  0EFC               	movlw	-4
 28197  014BBE  50E3               	movf	plusw1,w,c
 28198  014BC0  A4D8               	btfss	status,2,c
 28199  014BC2  D037               	goto	l8006
 28200  014BC4                     u5770:
 28201  014BC4  0E00               	movlw	0
 28202  014BC6  6E01               	movwf	btemp^0,c
 28203  014BC8  0E00               	movlw	0
 28204  014BCA  6E02               	movwf	(btemp+1)^0,c
 28205  014BCC  0E00               	movlw	0
 28206  014BCE  6E03               	movwf	(btemp+2)^0,c
 28207  014BD0  0E00               	movlw	0
 28208  014BD2  6E04               	movwf	(btemp+3)^0,c
 28209  014BD4  D0C6               	goto	l2992
 28210  014BD6                     l7992:
 28211                           
 28212                           ;stkvar	_b @ sp[(-4)+-4]
 28213  014BD6  90D8               	bcf	status,0,c
 28214  014BD8  0EF8               	movlw	-8
 28215  014BDA  36E3               	rlcf	plusw1,f,c
 28216  014BDC  0EF9               	movlw	-7
 28217  014BDE  36E3               	rlcf	plusw1,f,c
 28218  014BE0  0EFA               	movlw	-6
 28219  014BE2  36E3               	rlcf	plusw1,f,c
 28220  014BE4  0EFB               	movlw	-5
 28221  014BE6  36E3               	rlcf	plusw1,f,c
 28222                           
 28223                           ;stkvar	_grs @ sp[(-4)+0]
 28224  014BE8  0EFC               	movlw	-4
 28225  014BEA  AEE3               	btfss	plusw1,7,c
 28226  014BEC  D002               	goto	l3004
 28227                           
 28228                           ;stkvar	_b @ sp[(-4)+-4]
 28229  014BEE  0EF8               	movlw	-8
 28230  014BF0  80E3               	bsf	plusw1,0,c
 28231  014BF2                     l3004:
 28232                           
 28233                           ;stkvar	_grs @ sp[(-4)+0]
 28234  014BF2  0EFC               	movlw	-4
 28235  014BF4  A0E3               	btfss	plusw1,0,c
 28236  014BF6  D00E               	goto	l8000
 28237                           
 28238                           ;stkvar	_grs @ sp[(-4)+0]
 28239  014BF8  0EFC               	movlw	-4
 28240  014BFA  006F FF8C  F00C    	movff	plusw1,btemp+11
 28241  014C00  90D8               	bcf	status,0,c
 28242  014C02  340C               	rlcf	(btemp+11)^0,w,c
 28243  014C04  6E0B               	movwf	(btemp+10)^0,c
 28244  014C06  0E01               	movlw	1
 28245  014C08  120B               	iorwf	(btemp+10)^0,f,c
 28246                           
 28247                           ;stkvar	_grs @ sp[(-4)+0]
 28248  014C0A  0EFC               	movlw	-4
 28249  014C0C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28250  014C12  D009               	goto	l8002
 28251  014C14                     l8000:
 28252                           
 28253                           ;stkvar	_grs @ sp[(-4)+0]
 28254  014C14  50E1               	movf	fsr1l,w,c
 28255  014C16  0FFC               	addlw	-4
 28256  014C18  6ED9               	movwf	fsr2l,c
 28257  014C1A  50E2               	movf	fsr1h,w,c
 28258  014C1C  6EDA               	movwf	fsr2h,c
 28259  014C1E  0EFF               	movlw	255
 28260  014C20  22DA               	addwfc	fsr2h,f,c
 28261  014C22  90D8               	bcf	status,0,c
 28262  014C24  36DF               	rlcf	indf2,f,c
 28263  014C26                     l8002:
 28264                           
 28265                           ;stkvar	_bexp @ sp[(-4)+1]
 28266  014C26  0EFD               	movlw	-3
 28267  014C28  50E3               	movf	plusw1,w,c
 28268  014C2A  B4D8               	btfsc	status,2,c
 28269  014C2C  D002               	goto	l8006
 28270                           
 28271                           ;stkvar	_bexp @ sp[(-4)+1]
 28272  014C2E  0EFD               	movlw	-3
 28273  014C30  06E3               	decf	plusw1,f,c
 28274  014C32                     l8006:
 28275                           
 28276                           ;stkvar	_b @ sp[(-4)+-4]
 28277  014C32  0EFA               	movlw	-6
 28278  014C34  AEE3               	btfss	plusw1,7,c
 28279  014C36  D7CF               	goto	l7992
 28280  014C38                     u5810:
 28281                           
 28282                           ;stkvar	_aexp @ sp[(-4)+2]
 28283  014C38  0EFE               	movlw	-2
 28284  014C3A  6AE3               	clrf	plusw1,c
 28285                           
 28286                           ;stkvar	_grs @ sp[(-4)+0]
 28287  014C3C  0EFC               	movlw	-4
 28288  014C3E  AEE3               	btfss	plusw1,7,c
 28289  014C40  D00F               	goto	l8020
 28290                           
 28291                           ;stkvar	_grs @ sp[(-4)+0]
 28292  014C42  0EFC               	movlw	-4
 28293  014C44  006F FF8C  F00C    	movff	plusw1,btemp+11
 28294  014C4A  0E7F               	movlw	127
 28295  014C4C  160C               	andwf	(btemp+11)^0,f,c
 28296  014C4E  B4D8               	btfsc	status,2,c
 28297  014C50  D004               	goto	l8016
 28298  014C52                     u5830:
 28299                           
 28300                           ;stkvar	_aexp @ sp[(-4)+2]
 28301  014C52  0EFE               	movlw	-2
 28302  014C54  6AE3               	clrf	plusw1,c
 28303  014C56  2AE3               	incf	plusw1,f,c
 28304  014C58  D003               	goto	l8020
 28305  014C5A                     l8016:
 28306                           
 28307                           ;stkvar	_b @ sp[(-4)+-4]
 28308  014C5A  0EF8               	movlw	-8
 28309  014C5C  B0E3               	btfsc	plusw1,0,c
 28310  014C5E  D7F9               	goto	u5830
 28311  014C60                     l8020:
 28312                           
 28313                           ;stkvar	_aexp @ sp[(-4)+2]
 28314  014C60  0EFE               	movlw	-2
 28315  014C62  50E3               	movf	plusw1,w,c
 28316  014C64  B4D8               	btfsc	status,2,c
 28317  014C66  D02B               	goto	l8032
 28318                           
 28319                           ;stkvar	_b @ sp[(-4)+-4]
 28320  014C68  50E1               	movf	fsr1l,w,c
 28321  014C6A  0FF8               	addlw	-8
 28322  014C6C  6ED9               	movwf	fsr2l,c
 28323  014C6E  50E2               	movf	fsr1h,w,c
 28324  014C70  6EDA               	movwf	fsr2h,c
 28325  014C72  0EFF               	movlw	255
 28326  014C74  22DA               	addwfc	fsr2h,f,c
 28327  014C76  2ADE               	incf	postinc2,f,c
 28328  014C78  0E00               	movlw	0
 28329  014C7A  22DE               	addwfc	postinc2,f,c
 28330  014C7C  22DE               	addwfc	postinc2,f,c
 28331  014C7E  22DE               	addwfc	postinc2,f,c
 28332                           
 28333                           ;stkvar	_b @ sp[(-4)+-4]
 28334  014C80  0EFB               	movlw	-5
 28335  014C82  A0E3               	btfss	plusw1,0,c
 28336  014C84  D01C               	goto	l8032
 28337  014C86  0E01               	movlw	1
 28338  014C88  6E0C               	movwf	(btemp+11)^0,c
 28339                           
 28340                           ;stkvar	_b @ sp[(-4)+-4]
 28341  014C8A  50E1               	movf	fsr1l,w,c
 28342  014C8C  0FF8               	addlw	-8
 28343  014C8E  6ED9               	movwf	fsr2l,c
 28344  014C90  50E2               	movf	fsr1h,w,c
 28345  014C92  6EDA               	movwf	fsr2h,c
 28346  014C94  0EFF               	movlw	255
 28347  014C96  22DA               	addwfc	fsr2h,f,c
 28348  014C98  280C               	incf	(btemp+11)^0,w,c
 28349  014C9A  52DE               	movf	postinc2,f,c
 28350  014C9C  D008               	goto	u5870
 28351  014C9E                     u5875:
 28352  014C9E  52DE               	movf	postinc2,f,c
 28353  014CA0  90D8               	bcf	status,0,c
 28354  014CA2  BEDC               	btfsc	preinc2,7,c
 28355  014CA4  80D8               	bsf	status,0,c
 28356  014CA6  32DD               	rrcf	postdec2,f,c
 28357  014CA8  32DD               	rrcf	postdec2,f,c
 28358  014CAA  32DD               	rrcf	postdec2,f,c
 28359  014CAC  32DE               	rrcf	postinc2,f,c
 28360  014CAE                     u5870:
 28361  014CAE  2EE8               	decfsz	wreg,f,c
 28362  014CB0  D7F6               	goto	u5875
 28363                           
 28364                           ;stkvar	_bexp @ sp[(-4)+1]
 28365  014CB2  0EFD               	movlw	-3
 28366  014CB4  28E3               	incf	plusw1,w,c
 28367  014CB6  B4D8               	btfsc	status,2,c
 28368  014CB8  D002               	goto	l8032
 28369                           
 28370                           ;stkvar	_bexp @ sp[(-4)+1]
 28371  014CBA  0EFD               	movlw	-3
 28372  014CBC  2AE3               	incf	plusw1,f,c
 28373  014CBE                     l8032:
 28374                           
 28375                           ;stkvar	_bexp @ sp[(-4)+1]
 28376  014CBE  0EFD               	movlw	-3
 28377  014CC0  28E3               	incf	plusw1,w,c
 28378  014CC2  B4D8               	btfsc	status,2,c
 28379  014CC4  D004               	goto	u5900
 28380                           
 28381                           ;stkvar	_bexp @ sp[(-4)+1]
 28382  014CC6  0EFD               	movlw	-3
 28383  014CC8  50E3               	movf	plusw1,w,c
 28384  014CCA  A4D8               	btfss	status,2,c
 28385  014CCC  D00E               	goto	l8042
 28386  014CCE                     u5900:
 28387                           
 28388                           ;stkvar	_b @ sp[(-4)+-4]
 28389  014CCE  0EF8               	movlw	-8
 28390  014CD0  6AE3               	clrf	plusw1,c
 28391  014CD2  0EF9               	movlw	-7
 28392  014CD4  6AE3               	clrf	plusw1,c
 28393  014CD6  0EFA               	movlw	-6
 28394  014CD8  6AE3               	clrf	plusw1,c
 28395  014CDA  0EFB               	movlw	-5
 28396  014CDC  6AE3               	clrf	plusw1,c
 28397                           
 28398                           ;stkvar	_bexp @ sp[(-4)+1]
 28399  014CDE  0EFD               	movlw	-3
 28400  014CE0  50E3               	movf	plusw1,w,c
 28401  014CE2  A4D8               	btfss	status,2,c
 28402  014CE4  D002               	goto	l8042
 28403                           
 28404                           ;stkvar	_signs @ sp[(-4)+3]
 28405  014CE6  0EFF               	movlw	-1
 28406  014CE8  6AE3               	clrf	plusw1,c
 28407  014CEA                     l8042:
 28408                           
 28409                           ;stkvar	_bexp @ sp[(-4)+1]
 28410  014CEA  0EFD               	movlw	-3
 28411  014CEC  A0E3               	btfss	plusw1,0,c
 28412  014CEE  D009               	goto	l8046
 28413                           
 28414                           ;stkvar	_b @ sp[(-4)+-4]
 28415  014CF0  0EFA               	movlw	250
 28416  014CF2  24E1               	addwf	fsr1l,w,c
 28417  014CF4  6ED9               	movwf	fsr2l,c
 28418  014CF6  0EFF               	movlw	255
 28419  014CF8  20E2               	addwfc	fsr1h,w,c
 28420  014CFA  6EDA               	movwf	fsr2h,c
 28421  014CFC  0E00               	movlw	0
 28422  014CFE  8EDB               	bsf	plusw2,7,c
 28423  014D00  D008               	goto	l8048
 28424  014D02                     l8046:
 28425                           
 28426                           ;stkvar	_b @ sp[(-4)+-4]
 28427  014D02  0EFA               	movlw	250
 28428  014D04  24E1               	addwf	fsr1l,w,c
 28429  014D06  6ED9               	movwf	fsr2l,c
 28430  014D08  0EFF               	movlw	255
 28431  014D0A  20E2               	addwfc	fsr1h,w,c
 28432  014D0C  6EDA               	movwf	fsr2h,c
 28433  014D0E  0E7F               	movlw	127
 28434  014D10  16DF               	andwf	indf2,f,c
 28435  014D12                     l8048:
 28436                           
 28437                           ;stkvar	_b @ sp[(-4)+-4]
 28438  014D12  0EFB               	movlw	251
 28439  014D14  24E1               	addwf	fsr1l,w,c
 28440  014D16  6ED9               	movwf	fsr2l,c
 28441  014D18  0EFF               	movlw	255
 28442  014D1A  20E2               	addwfc	fsr1h,w,c
 28443  014D1C  6EDA               	movwf	fsr2h,c
 28444                           
 28445                           ;stkvar	_bexp @ sp[(-4)+1]
 28446  014D1E  0EFD               	movlw	-3
 28447  014D20  006F FF8C  F00C    	movff	plusw1,btemp+11
 28448  014D26  90D8               	bcf	status,0,c
 28449  014D28  300C               	rrcf	(btemp+11)^0,w,c
 28450  014D2A  6EDF               	movwf	indf2,c
 28451                           
 28452                           ;stkvar	_signs @ sp[(-4)+3]
 28453  014D2C  0EFF               	movlw	-1
 28454  014D2E  AEE3               	btfss	plusw1,7,c
 28455  014D30  D008               	goto	l8054
 28456                           
 28457                           ;stkvar	_b @ sp[(-4)+-4]
 28458  014D32  0EFB               	movlw	251
 28459  014D34  24E1               	addwf	fsr1l,w,c
 28460  014D36  6ED9               	movwf	fsr2l,c
 28461  014D38  0EFF               	movlw	255
 28462  014D3A  20E2               	addwfc	fsr1h,w,c
 28463  014D3C  6EDA               	movwf	fsr2h,c
 28464  014D3E  0E00               	movlw	0
 28465  014D40  8EDB               	bsf	plusw2,7,c
 28466  014D42                     l8054:
 28467                           
 28468                           ;stkvar	_b @ sp[(-4)+-4]
 28469  014D42  0EF8               	movlw	-8
 28470  014D44  006F FF8C  F001    	movff	plusw1,btemp
 28471  014D4A  0EF9               	movlw	-7
 28472  014D4C  006F FF8C  F002    	movff	plusw1,btemp+1
 28473  014D52  0EFA               	movlw	-6
 28474  014D54  006F FF8C  F003    	movff	plusw1,btemp+2
 28475  014D5A  0EFB               	movlw	-5
 28476  014D5C  006F FF8C  F004    	movff	plusw1,btemp+3
 28477  014D62                     l2992:
 28478                           
 28479                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 28480  014D62  0EF4               	movlw	244
 28481  014D64  26E1               	addwf	fsr1l,f,c
 28482  014D66  0EFF               	movlw	255
 28483  014D68  22E2               	addwfc	fsr1h,f,c
 28484  014D6A  0012               	return		;funcret
 28485  014D6C                     __end_of___fladd:
 28486                           	opt callstack 0
 28487                           
 28488 ;; *************** function ___flmul *****************
 28489 ;; Defined at:
 28490 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 28491 ;; Parameters:    Size  Location     Type
 28492 ;;  b               4  [STACK] unsigned char 
 28493 ;;  a               4  [STACK] unsigned char 
 28494 ;; Auto vars:     Size  Location     Type
 28495 ;;  prod            4  [STACK] struct .
 28496 ;;  grs             4  [STACK] unsigned long 
 28497 ;;  temp            2  [STACK] struct .
 28498 ;;  bexp            1  [STACK] unsigned char 
 28499 ;;  aexp            1  [STACK] unsigned char 
 28500 ;;  sign            1  [STACK] unsigned char 
 28501 ;; Return value:  Size  Location     Type
 28502 ;;                  4  [STACK] unsigned char 
 28503 ;; Registers used:
 28504 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 28505 ;; Tracked objects:
 28506 ;;		On entry : 0/0
 28507 ;;		On exit  : 0/0
 28508 ;;		Unchanged: 0/0
 28509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28514 ;;Total ram usage:        0 bytes
 28515 ;; Hardware stack levels used:    1
 28516 ;; Hardware stack levels required when called:   15
 28517 ;; This function calls:
 28518 ;;		Nothing
 28519 ;; This function is called by:
 28520 ;;		_conv_raw_result
 28521 ;;		_lp_filter
 28522 ;;		_calc_model_data
 28523 ;;		_calc_bsoc
 28524 ;;		_init_bsoc
 28525 ;;		_efgtoa
 28526 ;; This function uses a reentrant model
 28527 ;;
 28528                           
 28529                           	psect	text110
 28530  013D86                     __ptext110:
 28531                           	opt callstack 0
 28532  013D86                     ___flmul:
 28533                           	opt callstack 0
 28534                           
 28535                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 28536  013D86  0E0D               	movlw	13
 28537  013D88  26E1               	addwf	fsr1l,f,c
 28538  013D8A  0E00               	movlw	0
 28539  013D8C  22E2               	addwfc	fsr1h,f,c
 28540                           
 28541                           ;stkvar	_b @ sp[(-13)+-4]
 28542                           
 28543                           ;incstack = 0
 28544 ;; hardware stack exceeded
 28545  013D8E  0EF2               	movlw	242
 28546  013D90  24E1               	addwf	fsr1l,w,c
 28547  013D92  6ED9               	movwf	fsr2l,c
 28548  013D94  0EFF               	movlw	255
 28549  013D96  20E2               	addwfc	fsr1h,w,c
 28550  013D98  6EDA               	movwf	fsr2h,c
 28551  013D9A  50DF               	movf	indf2,w,c
 28552  013D9C  6E0C               	movwf	(btemp+11)^0,c
 28553  013D9E  0E80               	movlw	128
 28554  013DA0  160C               	andwf	(btemp+11)^0,f,c
 28555                           
 28556                           ;stkvar	_sign @ sp[(-13)+12]
 28557  013DA2  0EFF               	movlw	-1
 28558  013DA4  0060  F033  FFE3   	movff	btemp+11,plusw1
 28559                           
 28560                           ;stkvar	_b @ sp[(-13)+-4]
 28561  013DAA  0EF2               	movlw	242
 28562  013DAC  24E1               	addwf	fsr1l,w,c
 28563  013DAE  6ED9               	movwf	fsr2l,c
 28564  013DB0  0EFF               	movlw	255
 28565  013DB2  20E2               	addwfc	fsr1h,w,c
 28566  013DB4  6EDA               	movwf	fsr2h,c
 28567  013DB6  50DF               	movf	indf2,w,c
 28568  013DB8  6E0C               	movwf	(btemp+11)^0,c
 28569  013DBA  90D8               	bcf	status,0,c
 28570  013DBC  340C               	rlcf	(btemp+11)^0,w,c
 28571  013DBE  6E0B               	movwf	(btemp+10)^0,c
 28572                           
 28573                           ;stkvar	_bexp @ sp[(-13)+10]
 28574  013DC0  0EFD               	movlw	-3
 28575  013DC2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28576                           
 28577                           ;stkvar	_b @ sp[(-13)+-4]
 28578  013DC8  0EF1               	movlw	241
 28579  013DCA  24E1               	addwf	fsr1l,w,c
 28580  013DCC  6ED9               	movwf	fsr2l,c
 28581  013DCE  0EFF               	movlw	255
 28582  013DD0  20E2               	addwfc	fsr1h,w,c
 28583  013DD2  6EDA               	movwf	fsr2h,c
 28584  013DD4  AEDF               	btfss	indf2,7,c
 28585  013DD6  D002               	goto	l8480
 28586                           
 28587                           ;stkvar	_bexp @ sp[(-13)+10]
 28588  013DD8  0EFD               	movlw	-3
 28589  013DDA  80E3               	bsf	plusw1,0,c
 28590  013DDC                     l8480:
 28591                           
 28592                           ;stkvar	_bexp @ sp[(-13)+10]
 28593  013DDC  0EFD               	movlw	-3
 28594  013DDE  50E3               	movf	plusw1,w,c
 28595  013DE0  B4D8               	btfsc	status,2,c
 28596  013DE2  D01F               	goto	l8488
 28597                           
 28598                           ;stkvar	_bexp @ sp[(-13)+10]
 28599  013DE4  0EFD               	movlw	-3
 28600  013DE6  28E3               	incf	plusw1,w,c
 28601  013DE8  A4D8               	btfss	status,2,c
 28602  013DEA  D018               	goto	l8486
 28603  013DEC  0E00               	movlw	0
 28604  013DEE  6E09               	movwf	(btemp+8)^0,c
 28605  013DF0  0E00               	movlw	0
 28606  013DF2  6E0A               	movwf	(btemp+9)^0,c
 28607  013DF4  0E00               	movlw	0
 28608  013DF6  6E0B               	movwf	(btemp+10)^0,c
 28609  013DF8  0E00               	movlw	0
 28610  013DFA  6E0C               	movwf	(btemp+11)^0,c
 28611                           
 28612                           ;stkvar	_b @ sp[(-13)+-4]
 28613  013DFC  0EEF               	movlw	-17
 28614  013DFE  0060  F027  FFE3   	movff	btemp+8,plusw1
 28615  013E04  0EF0               	movlw	-16
 28616  013E06  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28617  013E0C  0EF1               	movlw	-15
 28618  013E0E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28619  013E14  0EF2               	movlw	-14
 28620  013E16  0060  F033  FFE3   	movff	btemp+11,plusw1
 28621  013E1C                     l8486:
 28622                           
 28623                           ;stkvar	_b @ sp[(-13)+-4]
 28624  013E1C  0EF1               	movlw	-15
 28625  013E1E  8EE3               	bsf	plusw1,7,c
 28626  013E20  D018               	goto	l8490
 28627  013E22                     l8488:
 28628  013E22  0E00               	movlw	0
 28629  013E24  6E09               	movwf	(btemp+8)^0,c
 28630  013E26  0E00               	movlw	0
 28631  013E28  6E0A               	movwf	(btemp+9)^0,c
 28632  013E2A  0E00               	movlw	0
 28633  013E2C  6E0B               	movwf	(btemp+10)^0,c
 28634  013E2E  0E00               	movlw	0
 28635  013E30  6E0C               	movwf	(btemp+11)^0,c
 28636                           
 28637                           ;stkvar	_b @ sp[(-13)+-4]
 28638  013E32  0EEF               	movlw	-17
 28639  013E34  0060  F027  FFE3   	movff	btemp+8,plusw1
 28640  013E3A  0EF0               	movlw	-16
 28641  013E3C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28642  013E42  0EF1               	movlw	-15
 28643  013E44  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28644  013E4A  0EF2               	movlw	-14
 28645  013E4C  0060  F033  FFE3   	movff	btemp+11,plusw1
 28646  013E52                     l8490:
 28647                           
 28648                           ;stkvar	_a @ sp[(-13)+-8]
 28649  013E52  0EEE               	movlw	238
 28650  013E54  24E1               	addwf	fsr1l,w,c
 28651  013E56  6ED9               	movwf	fsr2l,c
 28652  013E58  0EFF               	movlw	255
 28653  013E5A  20E2               	addwfc	fsr1h,w,c
 28654  013E5C  6EDA               	movwf	fsr2h,c
 28655  013E5E  50DF               	movf	indf2,w,c
 28656  013E60  6E0C               	movwf	(btemp+11)^0,c
 28657  013E62  0E80               	movlw	128
 28658  013E64  160C               	andwf	(btemp+11)^0,f,c
 28659                           
 28660                           ;stkvar	_sign @ sp[(-13)+12]
 28661  013E66  50E1               	movf	fsr1l,w,c
 28662  013E68  0FFF               	addlw	-1
 28663  013E6A  6ED9               	movwf	fsr2l,c
 28664  013E6C  50E2               	movf	fsr1h,w,c
 28665  013E6E  6EDA               	movwf	fsr2h,c
 28666  013E70  0EFF               	movlw	255
 28667  013E72  22DA               	addwfc	fsr2h,f,c
 28668  013E74  500C               	movf	(btemp+11)^0,w,c
 28669  013E76  1ADF               	xorwf	indf2,f,c
 28670                           
 28671                           ;stkvar	_a @ sp[(-13)+-8]
 28672  013E78  0EEE               	movlw	238
 28673  013E7A  24E1               	addwf	fsr1l,w,c
 28674  013E7C  6ED9               	movwf	fsr2l,c
 28675  013E7E  0EFF               	movlw	255
 28676  013E80  20E2               	addwfc	fsr1h,w,c
 28677  013E82  6EDA               	movwf	fsr2h,c
 28678  013E84  50DF               	movf	indf2,w,c
 28679  013E86  6E0C               	movwf	(btemp+11)^0,c
 28680  013E88  90D8               	bcf	status,0,c
 28681  013E8A  340C               	rlcf	(btemp+11)^0,w,c
 28682  013E8C  6E0B               	movwf	(btemp+10)^0,c
 28683                           
 28684                           ;stkvar	_aexp @ sp[(-13)+11]
 28685  013E8E  0EFE               	movlw	-2
 28686  013E90  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28687                           
 28688                           ;stkvar	_a @ sp[(-13)+-8]
 28689  013E96  0EED               	movlw	237
 28690  013E98  24E1               	addwf	fsr1l,w,c
 28691  013E9A  6ED9               	movwf	fsr2l,c
 28692  013E9C  0EFF               	movlw	255
 28693  013E9E  20E2               	addwfc	fsr1h,w,c
 28694  013EA0  6EDA               	movwf	fsr2h,c
 28695  013EA2  AEDF               	btfss	indf2,7,c
 28696  013EA4  D002               	goto	l8498
 28697                           
 28698                           ;stkvar	_aexp @ sp[(-13)+11]
 28699  013EA6  0EFE               	movlw	-2
 28700  013EA8  80E3               	bsf	plusw1,0,c
 28701  013EAA                     l8498:
 28702                           
 28703                           ;stkvar	_aexp @ sp[(-13)+11]
 28704  013EAA  0EFE               	movlw	-2
 28705  013EAC  50E3               	movf	plusw1,w,c
 28706  013EAE  B4D8               	btfsc	status,2,c
 28707  013EB0  D01F               	goto	l8506
 28708                           
 28709                           ;stkvar	_aexp @ sp[(-13)+11]
 28710  013EB2  0EFE               	movlw	-2
 28711  013EB4  28E3               	incf	plusw1,w,c
 28712  013EB6  A4D8               	btfss	status,2,c
 28713  013EB8  D018               	goto	l8504
 28714  013EBA  0E00               	movlw	0
 28715  013EBC  6E09               	movwf	(btemp+8)^0,c
 28716  013EBE  0E00               	movlw	0
 28717  013EC0  6E0A               	movwf	(btemp+9)^0,c
 28718  013EC2  0E00               	movlw	0
 28719  013EC4  6E0B               	movwf	(btemp+10)^0,c
 28720  013EC6  0E00               	movlw	0
 28721  013EC8  6E0C               	movwf	(btemp+11)^0,c
 28722                           
 28723                           ;stkvar	_a @ sp[(-13)+-8]
 28724  013ECA  0EEB               	movlw	-21
 28725  013ECC  0060  F027  FFE3   	movff	btemp+8,plusw1
 28726  013ED2  0EEC               	movlw	-20
 28727  013ED4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28728  013EDA  0EED               	movlw	-19
 28729  013EDC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28730  013EE2  0EEE               	movlw	-18
 28731  013EE4  0060  F033  FFE3   	movff	btemp+11,plusw1
 28732  013EEA                     l8504:
 28733                           
 28734                           ;stkvar	_a @ sp[(-13)+-8]
 28735  013EEA  0EED               	movlw	-19
 28736  013EEC  8EE3               	bsf	plusw1,7,c
 28737  013EEE  D018               	goto	l8508
 28738  013EF0                     l8506:
 28739  013EF0  0E00               	movlw	0
 28740  013EF2  6E09               	movwf	(btemp+8)^0,c
 28741  013EF4  0E00               	movlw	0
 28742  013EF6  6E0A               	movwf	(btemp+9)^0,c
 28743  013EF8  0E00               	movlw	0
 28744  013EFA  6E0B               	movwf	(btemp+10)^0,c
 28745  013EFC  0E00               	movlw	0
 28746  013EFE  6E0C               	movwf	(btemp+11)^0,c
 28747                           
 28748                           ;stkvar	_a @ sp[(-13)+-8]
 28749  013F00  0EEB               	movlw	-21
 28750  013F02  0060  F027  FFE3   	movff	btemp+8,plusw1
 28751  013F08  0EEC               	movlw	-20
 28752  013F0A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28753  013F10  0EED               	movlw	-19
 28754  013F12  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28755  013F18  0EEE               	movlw	-18
 28756  013F1A  0060  F033  FFE3   	movff	btemp+11,plusw1
 28757  013F20                     l8508:
 28758                           
 28759                           ;stkvar	_aexp @ sp[(-13)+11]
 28760  013F20  0EFE               	movlw	-2
 28761  013F22  50E3               	movf	plusw1,w,c
 28762  013F24  B4D8               	btfsc	status,2,c
 28763  013F26  D004               	goto	u6890
 28764                           
 28765                           ;stkvar	_bexp @ sp[(-13)+10]
 28766  013F28  0EFD               	movlw	-3
 28767  013F2A  50E3               	movf	plusw1,w,c
 28768  013F2C  A4D8               	btfss	status,2,c
 28769  013F2E  D009               	goto	l8516
 28770  013F30                     u6890:
 28771  013F30  0E00               	movlw	0
 28772  013F32  6E01               	movwf	btemp^0,c
 28773  013F34  0E00               	movlw	0
 28774  013F36  6E02               	movwf	(btemp+1)^0,c
 28775  013F38  0E00               	movlw	0
 28776  013F3A  6E03               	movwf	(btemp+2)^0,c
 28777  013F3C  0E00               	movlw	0
 28778  013F3E  6E04               	movwf	(btemp+3)^0,c
 28779  013F40  D332               	goto	l3073
 28780  013F42                     l8516:
 28781                           
 28782                           ;stkvar	_b @ sp[(-13)+-4]
 28783  013F42  0EEF               	movlw	-17
 28784  013F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 28785                           
 28786                           ;stkvar	_a @ sp[(-13)+-8]
 28787  013F4A  0EED               	movlw	237
 28788  013F4C  24E1               	addwf	fsr1l,w,c
 28789  013F4E  6ED9               	movwf	fsr2l,c
 28790  013F50  0EFF               	movlw	255
 28791  013F52  20E2               	addwfc	fsr1h,w,c
 28792  013F54  6EDA               	movwf	fsr2h,c
 28793  013F56  50DF               	movf	indf2,w,c
 28794  013F58  020C               	mulwf	(btemp+11)^0,c
 28795                           
 28796                           ;stkvar	_temp @ sp[(-13)+8]
 28797  013F5A  0EFB               	movlw	-5
 28798  013F5C  006F FFCF FFE3     	movff	prodl,plusw1
 28799  013F62  0EFC               	movlw	-4
 28800  013F64  006F FFD3 FFE3     	movff	prodh,plusw1
 28801                           
 28802                           ;stkvar	_temp @ sp[(-13)+8]
 28803  013F6A  0EFB               	movlw	-5
 28804  013F6C  006F FF8C  F00C    	movff	plusw1,btemp+11
 28805  013F72  0060  F030  F005   	movff	btemp+11,btemp+4
 28806  013F78  6A06               	clrf	(btemp+5)^0,c
 28807  013F7A  6A07               	clrf	(btemp+6)^0,c
 28808  013F7C  6A08               	clrf	(btemp+7)^0,c
 28809                           
 28810                           ;stkvar	_grs @ sp[(-13)+4]
 28811  013F7E  0EF7               	movlw	-9
 28812  013F80  0060  F017  FFE3   	movff	btemp+4,plusw1
 28813  013F86  0EF8               	movlw	-8
 28814  013F88  0060  F01B  FFE3   	movff	btemp+5,plusw1
 28815  013F8E  0EF9               	movlw	-7
 28816  013F90  0060  F01F  FFE3   	movff	btemp+6,plusw1
 28817  013F96  0EFA               	movlw	-6
 28818  013F98  0060  F023  FFE3   	movff	btemp+7,plusw1
 28819                           
 28820                           ;stkvar	_temp @ sp[(-13)+8]
 28821  013F9E  0EFC               	movlw	252
 28822  013FA0  24E1               	addwf	fsr1l,w,c
 28823  013FA2  6ED9               	movwf	fsr2l,c
 28824  013FA4  0EFF               	movlw	255
 28825  013FA6  20E2               	addwfc	fsr1h,w,c
 28826  013FA8  6EDA               	movwf	fsr2h,c
 28827  013FAA  50DF               	movf	indf2,w,c
 28828  013FAC  6E0C               	movwf	(btemp+11)^0,c
 28829  013FAE  0060  F030  F005   	movff	btemp+11,btemp+4
 28830  013FB4  6A06               	clrf	(btemp+5)^0,c
 28831  013FB6  6A07               	clrf	(btemp+6)^0,c
 28832  013FB8  6A08               	clrf	(btemp+7)^0,c
 28833                           
 28834                           ;stkvar	_prod @ sp[(-13)+0]
 28835  013FBA  0EF3               	movlw	-13
 28836  013FBC  0060  F017  FFE3   	movff	btemp+4,plusw1
 28837  013FC2  0EF4               	movlw	-12
 28838  013FC4  0060  F01B  FFE3   	movff	btemp+5,plusw1
 28839  013FCA  0EF5               	movlw	-11
 28840  013FCC  0060  F01F  FFE3   	movff	btemp+6,plusw1
 28841  013FD2  0EF6               	movlw	-10
 28842  013FD4  0060  F023  FFE3   	movff	btemp+7,plusw1
 28843                           
 28844                           ;stkvar	_b @ sp[(-13)+-4]
 28845  013FDA  0EF0               	movlw	240
 28846  013FDC  24E1               	addwf	fsr1l,w,c
 28847  013FDE  6ED9               	movwf	fsr2l,c
 28848  013FE0  0EFF               	movlw	255
 28849  013FE2  20E2               	addwfc	fsr1h,w,c
 28850  013FE4  6EDA               	movwf	fsr2h,c
 28851  013FE6  50DF               	movf	indf2,w,c
 28852  013FE8  6E0C               	movwf	(btemp+11)^0,c
 28853                           
 28854                           ;stkvar	_a @ sp[(-13)+-8]
 28855  013FEA  0EEC               	movlw	236
 28856  013FEC  24E1               	addwf	fsr1l,w,c
 28857  013FEE  6ED9               	movwf	fsr2l,c
 28858  013FF0  0EFF               	movlw	255
 28859  013FF2  20E2               	addwfc	fsr1h,w,c
 28860  013FF4  6EDA               	movwf	fsr2h,c
 28861  013FF6  50DF               	movf	indf2,w,c
 28862  013FF8  020C               	mulwf	(btemp+11)^0,c
 28863                           
 28864                           ;stkvar	_temp @ sp[(-13)+8]
 28865  013FFA  0EFB               	movlw	-5
 28866  013FFC  006F FFCF FFE3     	movff	prodl,plusw1
 28867  014002  0EFC               	movlw	-4
 28868  014004  006F FFD3 FFE3     	movff	prodh,plusw1
 28869                           
 28870                           ;stkvar	_grs @ sp[(-13)+4]
 28871  01400A  50E1               	movf	fsr1l,w,c
 28872  01400C  0FF7               	addlw	-9
 28873  01400E  6ED9               	movwf	fsr2l,c
 28874  014010  50E2               	movf	fsr1h,w,c
 28875  014012  6EDA               	movwf	fsr2h,c
 28876  014014  0EFF               	movlw	255
 28877  014016  22DA               	addwfc	fsr2h,f,c
 28878                           
 28879                           ;stkvar	_temp @ sp[(-13)+8]
 28880  014018  0EFB               	movlw	-5
 28881  01401A  50E3               	movf	plusw1,w,c
 28882  01401C  26DE               	addwf	postinc2,f,c
 28883  01401E  0E00               	movlw	0
 28884  014020  22DE               	addwfc	postinc2,f,c
 28885  014022  22DE               	addwfc	postinc2,f,c
 28886  014024  22DE               	addwfc	postinc2,f,c
 28887                           
 28888                           ;stkvar	_prod @ sp[(-13)+0]
 28889  014026  50E1               	movf	fsr1l,w,c
 28890  014028  0FF3               	addlw	-13
 28891  01402A  6ED9               	movwf	fsr2l,c
 28892  01402C  50E2               	movf	fsr1h,w,c
 28893  01402E  6EDA               	movwf	fsr2h,c
 28894  014030  0EFF               	movlw	255
 28895  014032  22DA               	addwfc	fsr2h,f,c
 28896                           
 28897                           ;stkvar	_temp @ sp[(-13)+8]
 28898  014034  0EFC               	movlw	252
 28899  014036  24E1               	addwf	fsr1l,w,c
 28900  014038  6EE9               	movwf	fsr0l,c
 28901  01403A  0EFF               	movlw	255
 28902  01403C  20E2               	addwfc	fsr1h,w,c
 28903  01403E  6EEA               	movwf	fsr0h,c
 28904  014040  50EF               	movf	indf0,w,c
 28905  014042  26DE               	addwf	postinc2,f,c
 28906  014044  0E00               	movlw	0
 28907  014046  22DE               	addwfc	postinc2,f,c
 28908  014048  22DE               	addwfc	postinc2,f,c
 28909  01404A  22DE               	addwfc	postinc2,f,c
 28910                           
 28911                           ;stkvar	_b @ sp[(-13)+-4]
 28912  01404C  0EF1               	movlw	241
 28913  01404E  24E1               	addwf	fsr1l,w,c
 28914  014050  6ED9               	movwf	fsr2l,c
 28915  014052  0EFF               	movlw	255
 28916  014054  20E2               	addwfc	fsr1h,w,c
 28917  014056  6EDA               	movwf	fsr2h,c
 28918  014058  50DF               	movf	indf2,w,c
 28919  01405A  6E0C               	movwf	(btemp+11)^0,c
 28920                           
 28921                           ;stkvar	_a @ sp[(-13)+-8]
 28922  01405C  0EEB               	movlw	-21
 28923  01405E  50E3               	movf	plusw1,w,c
 28924  014060  020C               	mulwf	(btemp+11)^0,c
 28925                           
 28926                           ;stkvar	_temp @ sp[(-13)+8]
 28927  014062  0EFB               	movlw	-5
 28928  014064  006F FFCF FFE3     	movff	prodl,plusw1
 28929  01406A  0EFC               	movlw	-4
 28930  01406C  006F FFD3 FFE3     	movff	prodh,plusw1
 28931                           
 28932                           ;stkvar	_grs @ sp[(-13)+4]
 28933  014072  50E1               	movf	fsr1l,w,c
 28934  014074  0FF7               	addlw	-9
 28935  014076  6ED9               	movwf	fsr2l,c
 28936  014078  50E2               	movf	fsr1h,w,c
 28937  01407A  6EDA               	movwf	fsr2h,c
 28938  01407C  0EFF               	movlw	255
 28939  01407E  22DA               	addwfc	fsr2h,f,c
 28940                           
 28941                           ;stkvar	_temp @ sp[(-13)+8]
 28942  014080  0EFB               	movlw	-5
 28943  014082  50E3               	movf	plusw1,w,c
 28944  014084  26DE               	addwf	postinc2,f,c
 28945  014086  0E00               	movlw	0
 28946  014088  22DE               	addwfc	postinc2,f,c
 28947  01408A  22DE               	addwfc	postinc2,f,c
 28948  01408C  22DE               	addwfc	postinc2,f,c
 28949                           
 28950                           ;stkvar	_prod @ sp[(-13)+0]
 28951  01408E  50E1               	movf	fsr1l,w,c
 28952  014090  0FF3               	addlw	-13
 28953  014092  6ED9               	movwf	fsr2l,c
 28954  014094  50E2               	movf	fsr1h,w,c
 28955  014096  6EDA               	movwf	fsr2h,c
 28956  014098  0EFF               	movlw	255
 28957  01409A  22DA               	addwfc	fsr2h,f,c
 28958                           
 28959                           ;stkvar	_temp @ sp[(-13)+8]
 28960  01409C  0EFC               	movlw	252
 28961  01409E  24E1               	addwf	fsr1l,w,c
 28962  0140A0  6EE9               	movwf	fsr0l,c
 28963  0140A2  0EFF               	movlw	255
 28964  0140A4  20E2               	addwfc	fsr1h,w,c
 28965  0140A6  6EEA               	movwf	fsr0h,c
 28966  0140A8  50EF               	movf	indf0,w,c
 28967  0140AA  26DE               	addwf	postinc2,f,c
 28968  0140AC  0E00               	movlw	0
 28969  0140AE  22DE               	addwfc	postinc2,f,c
 28970  0140B0  22DE               	addwfc	postinc2,f,c
 28971  0140B2  22DE               	addwfc	postinc2,f,c
 28972                           
 28973                           ;stkvar	_grs @ sp[(-13)+4]
 28974  0140B4  50E1               	movf	fsr1l,w,c
 28975  0140B6  0FF7               	addlw	-9
 28976  0140B8  6ED9               	movwf	fsr2l,c
 28977  0140BA  50E2               	movf	fsr1h,w,c
 28978  0140BC  6EDA               	movwf	fsr2h,c
 28979  0140BE  0EFF               	movlw	255
 28980  0140C0  22DA               	addwfc	fsr2h,f,c
 28981  0140C2  0E08               	movlw	8
 28982  0140C4                     u6905:
 28983  0140C4  90D8               	bcf	status,0,c
 28984  0140C6  36DE               	rlcf	postinc2,f,c
 28985  0140C8  36DE               	rlcf	postinc2,f,c
 28986  0140CA  36DE               	rlcf	postinc2,f,c
 28987  0140CC  36DD               	rlcf	postdec2,f,c
 28988  0140CE  52DD               	movf	postdec2,f,c
 28989  0140D0  52DD               	movf	postdec2,f,c
 28990  0140D2  2EE8               	decfsz	wreg,f,c
 28991  0140D4  D7F7               	goto	u6905
 28992                           
 28993                           ;stkvar	_b @ sp[(-13)+-4]
 28994  0140D6  0EF0               	movlw	240
 28995  0140D8  24E1               	addwf	fsr1l,w,c
 28996  0140DA  6ED9               	movwf	fsr2l,c
 28997  0140DC  0EFF               	movlw	255
 28998  0140DE  20E2               	addwfc	fsr1h,w,c
 28999  0140E0  6EDA               	movwf	fsr2h,c
 29000  0140E2  50DF               	movf	indf2,w,c
 29001  0140E4  6E0C               	movwf	(btemp+11)^0,c
 29002                           
 29003                           ;stkvar	_a @ sp[(-13)+-8]
 29004  0140E6  0EEB               	movlw	-21
 29005  0140E8  50E3               	movf	plusw1,w,c
 29006  0140EA  020C               	mulwf	(btemp+11)^0,c
 29007                           
 29008                           ;stkvar	_temp @ sp[(-13)+8]
 29009  0140EC  0EFB               	movlw	-5
 29010  0140EE  006F FFCF FFE3     	movff	prodl,plusw1
 29011  0140F4  0EFC               	movlw	-4
 29012  0140F6  006F FFD3 FFE3     	movff	prodh,plusw1
 29013                           
 29014                           ;stkvar	_temp @ sp[(-13)+8]
 29015  0140FC  0EFB               	movlw	-5
 29016  0140FE  006F FF8C  F00B    	movff	plusw1,btemp+10
 29017  014104  0EFC               	movlw	-4
 29018  014106  006F FF8C  F00C    	movff	plusw1,btemp+11
 29019                           
 29020                           ;stkvar	_grs @ sp[(-13)+4]
 29021  01410C  50E1               	movf	fsr1l,w,c
 29022  01410E  0FF7               	addlw	-9
 29023  014110  6ED9               	movwf	fsr2l,c
 29024  014112  50E2               	movf	fsr1h,w,c
 29025  014114  6EDA               	movwf	fsr2h,c
 29026  014116  0EFF               	movlw	255
 29027  014118  22DA               	addwfc	fsr2h,f,c
 29028  01411A  500B               	movf	(btemp+10)^0,w,c
 29029  01411C  26DE               	addwf	postinc2,f,c
 29030  01411E  500C               	movf	(btemp+11)^0,w,c
 29031  014120  22DE               	addwfc	postinc2,f,c
 29032  014122  0E00               	movlw	0
 29033  014124  22DE               	addwfc	postinc2,f,c
 29034  014126  22DE               	addwfc	postinc2,f,c
 29035                           
 29036                           ;stkvar	_b @ sp[(-13)+-4]
 29037  014128  0EEF               	movlw	-17
 29038  01412A  006F FF8C  F00C    	movff	plusw1,btemp+11
 29039                           
 29040                           ;stkvar	_a @ sp[(-13)+-8]
 29041  014130  0EEC               	movlw	236
 29042  014132  24E1               	addwf	fsr1l,w,c
 29043  014134  6ED9               	movwf	fsr2l,c
 29044  014136  0EFF               	movlw	255
 29045  014138  20E2               	addwfc	fsr1h,w,c
 29046  01413A  6EDA               	movwf	fsr2h,c
 29047  01413C  50DF               	movf	indf2,w,c
 29048  01413E  020C               	mulwf	(btemp+11)^0,c
 29049                           
 29050                           ;stkvar	_temp @ sp[(-13)+8]
 29051  014140  0EFB               	movlw	-5
 29052  014142  006F FFCF FFE3     	movff	prodl,plusw1
 29053  014148  0EFC               	movlw	-4
 29054  01414A  006F FFD3 FFE3     	movff	prodh,plusw1
 29055                           
 29056                           ;stkvar	_temp @ sp[(-13)+8]
 29057  014150  0EFB               	movlw	-5
 29058  014152  006F FF8C  F00B    	movff	plusw1,btemp+10
 29059  014158  0EFC               	movlw	-4
 29060  01415A  006F FF8C  F00C    	movff	plusw1,btemp+11
 29061                           
 29062                           ;stkvar	_grs @ sp[(-13)+4]
 29063  014160  50E1               	movf	fsr1l,w,c
 29064  014162  0FF7               	addlw	-9
 29065  014164  6ED9               	movwf	fsr2l,c
 29066  014166  50E2               	movf	fsr1h,w,c
 29067  014168  6EDA               	movwf	fsr2h,c
 29068  01416A  0EFF               	movlw	255
 29069  01416C  22DA               	addwfc	fsr2h,f,c
 29070  01416E  500B               	movf	(btemp+10)^0,w,c
 29071  014170  26DE               	addwf	postinc2,f,c
 29072  014172  500C               	movf	(btemp+11)^0,w,c
 29073  014174  22DE               	addwfc	postinc2,f,c
 29074  014176  0E00               	movlw	0
 29075  014178  22DE               	addwfc	postinc2,f,c
 29076  01417A  22DE               	addwfc	postinc2,f,c
 29077                           
 29078                           ;stkvar	_grs @ sp[(-13)+4]
 29079  01417C  50E1               	movf	fsr1l,w,c
 29080  01417E  0FF7               	addlw	-9
 29081  014180  6ED9               	movwf	fsr2l,c
 29082  014182  50E2               	movf	fsr1h,w,c
 29083  014184  6EDA               	movwf	fsr2h,c
 29084  014186  0EFF               	movlw	255
 29085  014188  22DA               	addwfc	fsr2h,f,c
 29086  01418A  0E08               	movlw	8
 29087  01418C                     u6915:
 29088  01418C  90D8               	bcf	status,0,c
 29089  01418E  36DE               	rlcf	postinc2,f,c
 29090  014190  36DE               	rlcf	postinc2,f,c
 29091  014192  36DE               	rlcf	postinc2,f,c
 29092  014194  36DD               	rlcf	postdec2,f,c
 29093  014196  52DD               	movf	postdec2,f,c
 29094  014198  52DD               	movf	postdec2,f,c
 29095  01419A  2EE8               	decfsz	wreg,f,c
 29096  01419C  D7F7               	goto	u6915
 29097                           
 29098                           ;stkvar	_b @ sp[(-13)+-4]
 29099  01419E  0EEF               	movlw	-17
 29100  0141A0  006F FF8C  F00C    	movff	plusw1,btemp+11
 29101                           
 29102                           ;stkvar	_a @ sp[(-13)+-8]
 29103  0141A6  0EEB               	movlw	-21
 29104  0141A8  50E3               	movf	plusw1,w,c
 29105  0141AA  020C               	mulwf	(btemp+11)^0,c
 29106                           
 29107                           ;stkvar	_temp @ sp[(-13)+8]
 29108  0141AC  0EFB               	movlw	-5
 29109  0141AE  006F FFCF FFE3     	movff	prodl,plusw1
 29110  0141B4  0EFC               	movlw	-4
 29111  0141B6  006F FFD3 FFE3     	movff	prodh,plusw1
 29112                           
 29113                           ;stkvar	_temp @ sp[(-13)+8]
 29114  0141BC  0EFB               	movlw	-5
 29115  0141BE  006F FF8C  F00B    	movff	plusw1,btemp+10
 29116  0141C4  0EFC               	movlw	-4
 29117  0141C6  006F FF8C  F00C    	movff	plusw1,btemp+11
 29118                           
 29119                           ;stkvar	_grs @ sp[(-13)+4]
 29120  0141CC  50E1               	movf	fsr1l,w,c
 29121  0141CE  0FF7               	addlw	-9
 29122  0141D0  6ED9               	movwf	fsr2l,c
 29123  0141D2  50E2               	movf	fsr1h,w,c
 29124  0141D4  6EDA               	movwf	fsr2h,c
 29125  0141D6  0EFF               	movlw	255
 29126  0141D8  22DA               	addwfc	fsr2h,f,c
 29127  0141DA  500B               	movf	(btemp+10)^0,w,c
 29128  0141DC  26DE               	addwf	postinc2,f,c
 29129  0141DE  500C               	movf	(btemp+11)^0,w,c
 29130  0141E0  22DE               	addwfc	postinc2,f,c
 29131  0141E2  0E00               	movlw	0
 29132  0141E4  22DE               	addwfc	postinc2,f,c
 29133  0141E6  22DE               	addwfc	postinc2,f,c
 29134                           
 29135                           ;stkvar	_b @ sp[(-13)+-4]
 29136  0141E8  0EF0               	movlw	240
 29137  0141EA  24E1               	addwf	fsr1l,w,c
 29138  0141EC  6ED9               	movwf	fsr2l,c
 29139  0141EE  0EFF               	movlw	255
 29140  0141F0  20E2               	addwfc	fsr1h,w,c
 29141  0141F2  6EDA               	movwf	fsr2h,c
 29142  0141F4  50DF               	movf	indf2,w,c
 29143  0141F6  6E0C               	movwf	(btemp+11)^0,c
 29144                           
 29145                           ;stkvar	_a @ sp[(-13)+-8]
 29146  0141F8  0EED               	movlw	237
 29147  0141FA  24E1               	addwf	fsr1l,w,c
 29148  0141FC  6ED9               	movwf	fsr2l,c
 29149  0141FE  0EFF               	movlw	255
 29150  014200  20E2               	addwfc	fsr1h,w,c
 29151  014202  6EDA               	movwf	fsr2h,c
 29152  014204  50DF               	movf	indf2,w,c
 29153  014206  020C               	mulwf	(btemp+11)^0,c
 29154                           
 29155                           ;stkvar	_temp @ sp[(-13)+8]
 29156  014208  0EFB               	movlw	-5
 29157  01420A  006F FFCF FFE3     	movff	prodl,plusw1
 29158  014210  0EFC               	movlw	-4
 29159  014212  006F FFD3 FFE3     	movff	prodh,plusw1
 29160                           
 29161                           ;stkvar	_temp @ sp[(-13)+8]
 29162  014218  0EFB               	movlw	-5
 29163  01421A  006F FF8C  F00B    	movff	plusw1,btemp+10
 29164  014220  0EFC               	movlw	-4
 29165  014222  006F FF8C  F00C    	movff	plusw1,btemp+11
 29166                           
 29167                           ;stkvar	_prod @ sp[(-13)+0]
 29168  014228  50E1               	movf	fsr1l,w,c
 29169  01422A  0FF3               	addlw	-13
 29170  01422C  6ED9               	movwf	fsr2l,c
 29171  01422E  50E2               	movf	fsr1h,w,c
 29172  014230  6EDA               	movwf	fsr2h,c
 29173  014232  0EFF               	movlw	255
 29174  014234  22DA               	addwfc	fsr2h,f,c
 29175  014236  500B               	movf	(btemp+10)^0,w,c
 29176  014238  26DE               	addwf	postinc2,f,c
 29177  01423A  500C               	movf	(btemp+11)^0,w,c
 29178  01423C  22DE               	addwfc	postinc2,f,c
 29179  01423E  0E00               	movlw	0
 29180  014240  22DE               	addwfc	postinc2,f,c
 29181  014242  22DE               	addwfc	postinc2,f,c
 29182                           
 29183                           ;stkvar	_b @ sp[(-13)+-4]
 29184  014244  0EF1               	movlw	241
 29185  014246  24E1               	addwf	fsr1l,w,c
 29186  014248  6ED9               	movwf	fsr2l,c
 29187  01424A  0EFF               	movlw	255
 29188  01424C  20E2               	addwfc	fsr1h,w,c
 29189  01424E  6EDA               	movwf	fsr2h,c
 29190  014250  50DF               	movf	indf2,w,c
 29191  014252  6E0C               	movwf	(btemp+11)^0,c
 29192                           
 29193                           ;stkvar	_a @ sp[(-13)+-8]
 29194  014254  0EEC               	movlw	236
 29195  014256  24E1               	addwf	fsr1l,w,c
 29196  014258  6ED9               	movwf	fsr2l,c
 29197  01425A  0EFF               	movlw	255
 29198  01425C  20E2               	addwfc	fsr1h,w,c
 29199  01425E  6EDA               	movwf	fsr2h,c
 29200  014260  50DF               	movf	indf2,w,c
 29201  014262  020C               	mulwf	(btemp+11)^0,c
 29202                           
 29203                           ;stkvar	_temp @ sp[(-13)+8]
 29204  014264  0EFB               	movlw	-5
 29205  014266  006F FFCF FFE3     	movff	prodl,plusw1
 29206  01426C  0EFC               	movlw	-4
 29207  01426E  006F FFD3 FFE3     	movff	prodh,plusw1
 29208                           
 29209                           ;stkvar	_temp @ sp[(-13)+8]
 29210  014274  0EFB               	movlw	-5
 29211  014276  006F FF8C  F00B    	movff	plusw1,btemp+10
 29212  01427C  0EFC               	movlw	-4
 29213  01427E  006F FF8C  F00C    	movff	plusw1,btemp+11
 29214                           
 29215                           ;stkvar	_prod @ sp[(-13)+0]
 29216  014284  50E1               	movf	fsr1l,w,c
 29217  014286  0FF3               	addlw	-13
 29218  014288  6ED9               	movwf	fsr2l,c
 29219  01428A  50E2               	movf	fsr1h,w,c
 29220  01428C  6EDA               	movwf	fsr2h,c
 29221  01428E  0EFF               	movlw	255
 29222  014290  22DA               	addwfc	fsr2h,f,c
 29223  014292  500B               	movf	(btemp+10)^0,w,c
 29224  014294  26DE               	addwf	postinc2,f,c
 29225  014296  500C               	movf	(btemp+11)^0,w,c
 29226  014298  22DE               	addwfc	postinc2,f,c
 29227  01429A  0E00               	movlw	0
 29228  01429C  22DE               	addwfc	postinc2,f,c
 29229  01429E  22DE               	addwfc	postinc2,f,c
 29230                           
 29231                           ;stkvar	_b @ sp[(-13)+-4]
 29232  0142A0  0EF1               	movlw	241
 29233  0142A2  24E1               	addwf	fsr1l,w,c
 29234  0142A4  6ED9               	movwf	fsr2l,c
 29235  0142A6  0EFF               	movlw	255
 29236  0142A8  20E2               	addwfc	fsr1h,w,c
 29237  0142AA  6EDA               	movwf	fsr2h,c
 29238  0142AC  50DF               	movf	indf2,w,c
 29239  0142AE  6E0C               	movwf	(btemp+11)^0,c
 29240                           
 29241                           ;stkvar	_a @ sp[(-13)+-8]
 29242  0142B0  0EED               	movlw	237
 29243  0142B2  24E1               	addwf	fsr1l,w,c
 29244  0142B4  6ED9               	movwf	fsr2l,c
 29245  0142B6  0EFF               	movlw	255
 29246  0142B8  20E2               	addwfc	fsr1h,w,c
 29247  0142BA  6EDA               	movwf	fsr2h,c
 29248  0142BC  50DF               	movf	indf2,w,c
 29249  0142BE  020C               	mulwf	(btemp+11)^0,c
 29250                           
 29251                           ;stkvar	_temp @ sp[(-13)+8]
 29252  0142C0  0EFB               	movlw	-5
 29253  0142C2  006F FFCF FFE3     	movff	prodl,plusw1
 29254  0142C8  0EFC               	movlw	-4
 29255  0142CA  006F FFD3 FFE3     	movff	prodh,plusw1
 29256                           
 29257                           ;stkvar	_temp @ sp[(-13)+8]
 29258  0142D0  0EFB               	movlw	-5
 29259  0142D2  006F FF8C  F00B    	movff	plusw1,btemp+10
 29260  0142D8  0EFC               	movlw	-4
 29261  0142DA  006F FF8C  F00C    	movff	plusw1,btemp+11
 29262  0142E0  500B               	movf	(btemp+10)^0,w,c
 29263  0142E2  6E05               	movwf	(btemp+4)^0,c
 29264  0142E4  500C               	movf	(btemp+11)^0,w,c
 29265  0142E6  6E06               	movwf	(btemp+5)^0,c
 29266  0142E8  6A07               	clrf	(btemp+6)^0,c
 29267  0142EA  6A08               	clrf	(btemp+7)^0,c
 29268  0142EC  0060  F01C  F008   	movff	btemp+6,btemp+7
 29269  0142F2  0060  F018  F007   	movff	btemp+5,btemp+6
 29270  0142F8  0060  F014  F006   	movff	btemp+4,btemp+5
 29271  0142FE  6A05               	clrf	(btemp+4)^0,c
 29272                           
 29273                           ;stkvar	_prod @ sp[(-13)+0]
 29274  014300  50E1               	movf	fsr1l,w,c
 29275  014302  0FF3               	addlw	-13
 29276  014304  6ED9               	movwf	fsr2l,c
 29277  014306  50E2               	movf	fsr1h,w,c
 29278  014308  6EDA               	movwf	fsr2h,c
 29279  01430A  0EFF               	movlw	255
 29280  01430C  22DA               	addwfc	fsr2h,f,c
 29281  01430E  5005               	movf	(btemp+4)^0,w,c
 29282  014310  26DE               	addwf	postinc2,f,c
 29283  014312  5006               	movf	(btemp+5)^0,w,c
 29284  014314  22DE               	addwfc	postinc2,f,c
 29285  014316  5007               	movf	(btemp+6)^0,w,c
 29286  014318  22DE               	addwfc	postinc2,f,c
 29287  01431A  5008               	movf	(btemp+7)^0,w,c
 29288  01431C  22DE               	addwfc	postinc2,f,c
 29289                           
 29290                           ;stkvar	_prod @ sp[(-13)+0]
 29291  01431E  50E1               	movf	fsr1l,w,c
 29292  014320  0FF3               	addlw	-13
 29293  014322  6ED9               	movwf	fsr2l,c
 29294  014324  50E2               	movf	fsr1h,w,c
 29295  014326  6EDA               	movwf	fsr2h,c
 29296  014328  0EFF               	movlw	255
 29297  01432A  22DA               	addwfc	fsr2h,f,c
 29298                           
 29299                           ;stkvar	_grs @ sp[(-13)+4]
 29300  01432C  0EFA               	movlw	250
 29301  01432E  24E1               	addwf	fsr1l,w,c
 29302  014330  6EE9               	movwf	fsr0l,c
 29303  014332  0EFF               	movlw	255
 29304  014334  20E2               	addwfc	fsr1h,w,c
 29305  014336  6EEA               	movwf	fsr0h,c
 29306  014338  50EF               	movf	indf0,w,c
 29307  01433A  26DE               	addwf	postinc2,f,c
 29308  01433C  0E00               	movlw	0
 29309  01433E  22DE               	addwfc	postinc2,f,c
 29310  014340  22DE               	addwfc	postinc2,f,c
 29311  014342  22DE               	addwfc	postinc2,f,c
 29312                           
 29313                           ;stkvar	_grs @ sp[(-13)+4]
 29314  014344  50E1               	movf	fsr1l,w,c
 29315  014346  0FF7               	addlw	-9
 29316  014348  6ED9               	movwf	fsr2l,c
 29317  01434A  50E2               	movf	fsr1h,w,c
 29318  01434C  6EDA               	movwf	fsr2h,c
 29319  01434E  0EFF               	movlw	255
 29320  014350  22DA               	addwfc	fsr2h,f,c
 29321  014352  0E08               	movlw	8
 29322  014354                     u6925:
 29323  014354  90D8               	bcf	status,0,c
 29324  014356  36DE               	rlcf	postinc2,f,c
 29325  014358  36DE               	rlcf	postinc2,f,c
 29326  01435A  36DE               	rlcf	postinc2,f,c
 29327  01435C  36DD               	rlcf	postdec2,f,c
 29328  01435E  52DD               	movf	postdec2,f,c
 29329  014360  52DD               	movf	postdec2,f,c
 29330  014362  2EE8               	decfsz	wreg,f,c
 29331  014364  D7F7               	goto	u6925
 29332  014366  0E82               	movlw	130
 29333  014368  6E0B               	movwf	(btemp+10)^0,c
 29334  01436A  0EFF               	movlw	255
 29335  01436C  6E0C               	movwf	(btemp+11)^0,c
 29336                           
 29337                           ;stkvar	_bexp @ sp[(-13)+10]
 29338  01436E  0EFD               	movlw	-3
 29339  014370  50E3               	movf	plusw1,w,c
 29340  014372  6E09               	movwf	(btemp+8)^0,c
 29341  014374  6A0A               	clrf	(btemp+9)^0,c
 29342                           
 29343                           ;stkvar	_aexp @ sp[(-13)+11]
 29344  014376  0EFE               	movlw	-2
 29345  014378  50E3               	movf	plusw1,w,c
 29346  01437A  2609               	addwf	(btemp+8)^0,f,c
 29347  01437C  0E00               	movlw	0
 29348  01437E  220A               	addwfc	(btemp+9)^0,f,c
 29349  014380  500B               	movf	(btemp+10)^0,w,c
 29350  014382  2609               	addwf	(btemp+8)^0,f,c
 29351  014384  500C               	movf	(btemp+11)^0,w,c
 29352  014386  220A               	addwfc	(btemp+9)^0,f,c
 29353                           
 29354                           ;stkvar	_temp @ sp[(-13)+8]
 29355  014388  0EFB               	movlw	-5
 29356  01438A  0060  F027  FFE3   	movff	btemp+8,plusw1
 29357  014390  0EFC               	movlw	-4
 29358  014392  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29359  014398  D021               	goto	l8578
 29360  01439A                     l8568:
 29361                           
 29362                           ;stkvar	_prod @ sp[(-13)+0]
 29363  01439A  90D8               	bcf	status,0,c
 29364  01439C  0EF3               	movlw	-13
 29365  01439E  36E3               	rlcf	plusw1,f,c
 29366  0143A0  0EF4               	movlw	-12
 29367  0143A2  36E3               	rlcf	plusw1,f,c
 29368  0143A4  0EF5               	movlw	-11
 29369  0143A6  36E3               	rlcf	plusw1,f,c
 29370  0143A8  0EF6               	movlw	-10
 29371  0143AA  36E3               	rlcf	plusw1,f,c
 29372                           
 29373                           ;stkvar	_grs @ sp[(-13)+4]
 29374  0143AC  0EFA               	movlw	-6
 29375  0143AE  AEE3               	btfss	plusw1,7,c
 29376  0143B0  D002               	goto	l8574
 29377                           
 29378                           ;stkvar	_prod @ sp[(-13)+0]
 29379  0143B2  0EF3               	movlw	-13
 29380  0143B4  80E3               	bsf	plusw1,0,c
 29381  0143B6                     l8574:
 29382                           
 29383                           ;stkvar	_grs @ sp[(-13)+4]
 29384  0143B6  90D8               	bcf	status,0,c
 29385  0143B8  0EF7               	movlw	-9
 29386  0143BA  36E3               	rlcf	plusw1,f,c
 29387  0143BC  0EF8               	movlw	-8
 29388  0143BE  36E3               	rlcf	plusw1,f,c
 29389  0143C0  0EF9               	movlw	-7
 29390  0143C2  36E3               	rlcf	plusw1,f,c
 29391  0143C4  0EFA               	movlw	-6
 29392  0143C6  36E3               	rlcf	plusw1,f,c
 29393                           
 29394                           ;stkvar	_temp @ sp[(-13)+8]
 29395  0143C8  50E1               	movf	fsr1l,w,c
 29396  0143CA  0FFB               	addlw	-5
 29397  0143CC  6ED9               	movwf	fsr2l,c
 29398  0143CE  50E2               	movf	fsr1h,w,c
 29399  0143D0  6EDA               	movwf	fsr2h,c
 29400  0143D2  0EFF               	movlw	255
 29401  0143D4  22DA               	addwfc	fsr2h,f,c
 29402  0143D6  06DE               	decf	postinc2,f,c
 29403  0143D8  0E00               	movlw	0
 29404  0143DA  5ADD               	subwfb	postdec2,f,c
 29405  0143DC                     l8578:
 29406                           
 29407                           ;stkvar	_prod @ sp[(-13)+0]
 29408  0143DC  0EF5               	movlw	-11
 29409  0143DE  AEE3               	btfss	plusw1,7,c
 29410  0143E0  D7DC               	goto	l8568
 29411                           
 29412                           ;stkvar	_aexp @ sp[(-13)+11]
 29413  0143E2  0EFE               	movlw	-2
 29414  0143E4  6AE3               	clrf	plusw1,c
 29415                           
 29416                           ;stkvar	_grs @ sp[(-13)+4]
 29417  0143E6  0EFA               	movlw	-6
 29418  0143E8  AEE3               	btfss	plusw1,7,c
 29419  0143EA  D020               	goto	l8592
 29420                           
 29421                           ;stkvar	_grs @ sp[(-13)+4]
 29422  0143EC  50E1               	movf	fsr1l,w,c
 29423  0143EE  0FF7               	addlw	-9
 29424  0143F0  6ED9               	movwf	fsr2l,c
 29425  0143F2  50E2               	movf	fsr1h,w,c
 29426  0143F4  6EDA               	movwf	fsr2h,c
 29427  0143F6  0EFF               	movlw	255
 29428  0143F8  22DA               	addwfc	fsr2h,f,c
 29429  0143FA  0EFF               	movlw	255
 29430  0143FC  14DE               	andwf	postinc2,w,c
 29431  0143FE  6E09               	movwf	(btemp+8)^0,c
 29432  014400  0EFF               	movlw	255
 29433  014402  14DE               	andwf	postinc2,w,c
 29434  014404  6E0A               	movwf	(btemp+9)^0,c
 29435  014406  0EFF               	movlw	255
 29436  014408  14DE               	andwf	postinc2,w,c
 29437  01440A  6E0B               	movwf	(btemp+10)^0,c
 29438  01440C  0E7F               	movlw	127
 29439  01440E  14DE               	andwf	postinc2,w,c
 29440  014410  6E0C               	movwf	(btemp+11)^0,c
 29441  014412  5009               	movf	(btemp+8)^0,w,c
 29442  014414  100A               	iorwf	(btemp+9)^0,w,c
 29443  014416  100B               	iorwf	(btemp+10)^0,w,c
 29444  014418  100C               	iorwf	(btemp+11)^0,w,c
 29445  01441A  B4D8               	btfsc	status,2,c
 29446  01441C  D004               	goto	l8588
 29447  01441E                     u6960:
 29448                           
 29449                           ;stkvar	_aexp @ sp[(-13)+11]
 29450  01441E  0EFE               	movlw	-2
 29451  014420  6AE3               	clrf	plusw1,c
 29452  014422  2AE3               	incf	plusw1,f,c
 29453  014424  D003               	goto	l8592
 29454  014426                     l8588:
 29455                           
 29456                           ;stkvar	_prod @ sp[(-13)+0]
 29457  014426  0EF3               	movlw	-13
 29458  014428  B0E3               	btfsc	plusw1,0,c
 29459  01442A  D7F9               	goto	u6960
 29460  01442C                     l8592:
 29461                           
 29462                           ;stkvar	_aexp @ sp[(-13)+11]
 29463  01442C  0EFE               	movlw	-2
 29464  01442E  50E3               	movf	plusw1,w,c
 29465  014430  B4D8               	btfsc	status,2,c
 29466  014432  D036               	goto	l8602
 29467                           
 29468                           ;stkvar	_prod @ sp[(-13)+0]
 29469  014434  50E1               	movf	fsr1l,w,c
 29470  014436  0FF3               	addlw	-13
 29471  014438  6ED9               	movwf	fsr2l,c
 29472  01443A  50E2               	movf	fsr1h,w,c
 29473  01443C  6EDA               	movwf	fsr2h,c
 29474  01443E  0EFF               	movlw	255
 29475  014440  22DA               	addwfc	fsr2h,f,c
 29476  014442  2ADE               	incf	postinc2,f,c
 29477  014444  0E00               	movlw	0
 29478  014446  22DE               	addwfc	postinc2,f,c
 29479  014448  22DE               	addwfc	postinc2,f,c
 29480  01444A  22DE               	addwfc	postinc2,f,c
 29481                           
 29482                           ;stkvar	_prod @ sp[(-13)+0]
 29483  01444C  0EF6               	movlw	-10
 29484  01444E  A0E3               	btfss	plusw1,0,c
 29485  014450  D027               	goto	l8602
 29486  014452  0E01               	movlw	1
 29487  014454  6E0C               	movwf	(btemp+11)^0,c
 29488                           
 29489                           ;stkvar	_prod @ sp[(-13)+0]
 29490  014456  50E1               	movf	fsr1l,w,c
 29491  014458  0FF3               	addlw	-13
 29492  01445A  6ED9               	movwf	fsr2l,c
 29493  01445C  50E2               	movf	fsr1h,w,c
 29494  01445E  6EDA               	movwf	fsr2h,c
 29495  014460  0EFF               	movlw	255
 29496  014462  22DA               	addwfc	fsr2h,f,c
 29497  014464  280C               	incf	(btemp+11)^0,w,c
 29498  014466  52DE               	movf	postinc2,f,c
 29499  014468  D008               	goto	u7000
 29500  01446A                     u7005:
 29501  01446A  52DE               	movf	postinc2,f,c
 29502  01446C  90D8               	bcf	status,0,c
 29503  01446E  BEDC               	btfsc	preinc2,7,c
 29504  014470  80D8               	bsf	status,0,c
 29505  014472  32DD               	rrcf	postdec2,f,c
 29506  014474  32DD               	rrcf	postdec2,f,c
 29507  014476  32DD               	rrcf	postdec2,f,c
 29508  014478  32DE               	rrcf	postinc2,f,c
 29509  01447A                     u7000:
 29510  01447A  2EE8               	decfsz	wreg,f,c
 29511  01447C  D7F6               	goto	u7005
 29512                           
 29513                           ;stkvar	_temp @ sp[(-13)+8]
 29514  01447E  0EFB               	movlw	-5
 29515  014480  50E3               	movf	plusw1,w,c
 29516  014482  0F01               	addlw	1
 29517  014484  6E01               	movwf	btemp^0,c
 29518  014486  0EFB               	movlw	-5
 29519  014488  0060  F007  FFE3   	movff	btemp,plusw1
 29520  01448E  6A01               	clrf	btemp^0,c
 29521  014490  0EFC               	movlw	-4
 29522  014492  50E3               	movf	plusw1,w,c
 29523  014494  2001               	addwfc	btemp^0,w,c
 29524  014496  6E01               	movwf	btemp^0,c
 29525  014498  0EFC               	movlw	-4
 29526  01449A  0060  F007  FFE3   	movff	btemp,plusw1
 29527  0144A0                     l8602:
 29528                           
 29529                           ;stkvar	_temp @ sp[(-13)+8]
 29530  0144A0  0EFC               	movlw	-4
 29531  0144A2  BEE3               	btfsc	plusw1,7,c
 29532  0144A4  D020               	goto	l8606
 29533  0144A6  0EFC               	movlw	-4
 29534  0144A8  50E3               	movf	plusw1,w,c
 29535  0144AA  E104               	bnz	u7010
 29536  0144AC  0EFB               	movlw	-5
 29537  0144AE  28E3               	incf	plusw1,w,c
 29538  0144B0  A0D8               	btfss	status,0,c
 29539  0144B2  D019               	goto	l8606
 29540  0144B4                     u7010:
 29541  0144B4  0E00               	movlw	0
 29542  0144B6  6E09               	movwf	(btemp+8)^0,c
 29543  0144B8  0E00               	movlw	0
 29544  0144BA  6E0A               	movwf	(btemp+9)^0,c
 29545  0144BC  0E80               	movlw	128
 29546  0144BE  6E0B               	movwf	(btemp+10)^0,c
 29547  0144C0  0E7F               	movlw	127
 29548  0144C2  6E0C               	movwf	(btemp+11)^0,c
 29549                           
 29550                           ;stkvar	_prod @ sp[(-13)+0]
 29551  0144C4  0EF3               	movlw	-13
 29552  0144C6  0060  F027  FFE3   	movff	btemp+8,plusw1
 29553  0144CC  0EF4               	movlw	-12
 29554  0144CE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29555  0144D4  0EF5               	movlw	-11
 29556  0144D6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29557  0144DC  0EF6               	movlw	-10
 29558  0144DE  0060  F033  FFE3   	movff	btemp+11,plusw1
 29559  0144E4  D044               	goto	l8622
 29560  0144E6                     l8606:
 29561                           
 29562                           ;stkvar	_temp @ sp[(-13)+8]
 29563  0144E6  0EFC               	movlw	-4
 29564  0144E8  BEE3               	btfsc	plusw1,7,c
 29565  0144EA  D007               	goto	u7020
 29566  0144EC  0EFC               	movlw	-4
 29567  0144EE  50E3               	movf	plusw1,w,c
 29568  0144F0  E10F               	bnz	l8612
 29569  0144F2  0EFB               	movlw	-5
 29570  0144F4  04E3               	decf	plusw1,w,c
 29571  0144F6  B0D8               	btfsc	status,0,c
 29572  0144F8  D00B               	goto	l8612
 29573  0144FA                     u7020:
 29574                           
 29575                           ;stkvar	_prod @ sp[(-13)+0]
 29576  0144FA  0EF3               	movlw	-13
 29577  0144FC  6AE3               	clrf	plusw1,c
 29578  0144FE  0EF4               	movlw	-12
 29579  014500  6AE3               	clrf	plusw1,c
 29580  014502  0EF5               	movlw	-11
 29581  014504  6AE3               	clrf	plusw1,c
 29582  014506  0EF6               	movlw	-10
 29583  014508  6AE3               	clrf	plusw1,c
 29584                           
 29585                           ;stkvar	_sign @ sp[(-13)+12]
 29586  01450A  0EFF               	movlw	-1
 29587  01450C  6AE3               	clrf	plusw1,c
 29588  01450E  D02F               	goto	l8622
 29589  014510                     l8612:
 29590                           
 29591                           ;stkvar	_temp @ sp[(-13)+8]
 29592                           ;stkvar	_bexp @ sp[(-13)+10]
 29593  014510  0EFB               	movlw	-5
 29594  014512  006F FF8C  F001    	movff	plusw1,btemp
 29595  014518  0EFD               	movlw	-3
 29596  01451A  0060  F007  FFE3   	movff	btemp,plusw1
 29597                           
 29598                           ;stkvar	_prod @ sp[(-13)+0]
 29599  014520  50E1               	movf	fsr1l,w,c
 29600  014522  0FF3               	addlw	-13
 29601  014524  6ED9               	movwf	fsr2l,c
 29602  014526  50E2               	movf	fsr1h,w,c
 29603  014528  6EDA               	movwf	fsr2h,c
 29604  01452A  0EFF               	movlw	255
 29605  01452C  22DA               	addwfc	fsr2h,f,c
 29606  01452E  0EFF               	movlw	255
 29607  014530  16DE               	andwf	postinc2,f,c
 29608  014532  0EFF               	movlw	255
 29609  014534  16DE               	andwf	postinc2,f,c
 29610  014536  0E7F               	movlw	127
 29611  014538  16DE               	andwf	postinc2,f,c
 29612  01453A  0E00               	movlw	0
 29613  01453C  16DE               	andwf	postinc2,f,c
 29614                           
 29615                           ;stkvar	_bexp @ sp[(-13)+10]
 29616  01453E  0EFD               	movlw	-3
 29617  014540  A0E3               	btfss	plusw1,0,c
 29618  014542  D008               	goto	l8620
 29619                           
 29620                           ;stkvar	_prod @ sp[(-13)+0]
 29621  014544  0EF5               	movlw	245
 29622  014546  24E1               	addwf	fsr1l,w,c
 29623  014548  6ED9               	movwf	fsr2l,c
 29624  01454A  0EFF               	movlw	255
 29625  01454C  20E2               	addwfc	fsr1h,w,c
 29626  01454E  6EDA               	movwf	fsr2h,c
 29627  014550  0E00               	movlw	0
 29628  014552  8EDB               	bsf	plusw2,7,c
 29629  014554                     l8620:
 29630                           
 29631                           ;stkvar	_prod @ sp[(-13)+0]
 29632  014554  0EF6               	movlw	246
 29633  014556  24E1               	addwf	fsr1l,w,c
 29634  014558  6ED9               	movwf	fsr2l,c
 29635  01455A  0EFF               	movlw	255
 29636  01455C  20E2               	addwfc	fsr1h,w,c
 29637  01455E  6EDA               	movwf	fsr2h,c
 29638                           
 29639                           ;stkvar	_bexp @ sp[(-13)+10]
 29640  014560  0EFD               	movlw	-3
 29641  014562  006F FF8C  F00C    	movff	plusw1,btemp+11
 29642  014568  90D8               	bcf	status,0,c
 29643  01456A  300C               	rrcf	(btemp+11)^0,w,c
 29644  01456C  6EDF               	movwf	indf2,c
 29645  01456E                     l8622:
 29646                           
 29647                           ;stkvar	_sign @ sp[(-13)+12]
 29648  01456E  0EFF               	movlw	-1
 29649  014570  006F FF8C  F00C    	movff	plusw1,btemp+11
 29650                           
 29651                           ;stkvar	_prod @ sp[(-13)+0]
 29652  014576  0EF6               	movlw	246
 29653  014578  24E1               	addwf	fsr1l,w,c
 29654  01457A  6ED9               	movwf	fsr2l,c
 29655  01457C  0EFF               	movlw	255
 29656  01457E  20E2               	addwfc	fsr1h,w,c
 29657  014580  6EDA               	movwf	fsr2h,c
 29658  014582  500C               	movf	(btemp+11)^0,w,c
 29659  014584  12DF               	iorwf	indf2,f,c
 29660                           
 29661                           ;stkvar	_prod @ sp[(-13)+0]
 29662  014586  0EF3               	movlw	-13
 29663  014588  006F FF8C  F001    	movff	plusw1,btemp
 29664  01458E  0EF4               	movlw	-12
 29665  014590  006F FF8C  F002    	movff	plusw1,btemp+1
 29666  014596  0EF5               	movlw	-11
 29667  014598  006F FF8C  F003    	movff	plusw1,btemp+2
 29668  01459E  0EF6               	movlw	-10
 29669  0145A0  006F FF8C  F004    	movff	plusw1,btemp+3
 29670  0145A6                     l3073:
 29671                           
 29672                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 29673  0145A6  0EEB               	movlw	235
 29674  0145A8  26E1               	addwf	fsr1l,f,c
 29675  0145AA  0EFF               	movlw	255
 29676  0145AC  22E2               	addwfc	fsr1h,f,c
 29677  0145AE  0012               	return		;funcret
 29678  0145B0                     __end_of___flmul:
 29679                           	opt callstack 0
 29680                           
 29681 ;; *************** function _SYSTEM_Initialize *****************
 29682 ;; Defined at:
 29683 ;;		line 50 in file "mcc_generated_files/mcc.c"
 29684 ;; Parameters:    Size  Location     Type
 29685 ;;		None
 29686 ;; Auto vars:     Size  Location     Type
 29687 ;;		None
 29688 ;; Return value:  Size  Location     Type
 29689 ;;                  1  [STACK] void 
 29690 ;; Registers used:
 29691 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 29692 ;; Tracked objects:
 29693 ;;		On entry : 0/0
 29694 ;;		On exit  : 3F/3C
 29695 ;;		Unchanged: 0/0
 29696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29701 ;;Total ram usage:        0 bytes
 29702 ;; Hardware stack levels used:    1
 29703 ;; Hardware stack levels required when called:   17
 29704 ;; This function calls:
 29705 ;;		_ADCC_Initialize
 29706 ;;		_CLKREF_Initialize
 29707 ;;		_DMA1_Initialize
 29708 ;;		_DMA2_Initialize
 29709 ;;		_EXT_INT_Initialize
 29710 ;;		_FVR_Initialize
 29711 ;;		_INTERRUPT_Initialize
 29712 ;;		_OSCILLATOR_Initialize
 29713 ;;		_PIN_MANAGER_Initialize
 29714 ;;		_PMD_Initialize
 29715 ;;		_PWM8_Initialize
 29716 ;;		_SPI1_Initialize
 29717 ;;		_TMR2_Initialize
 29718 ;;		_TMR3_Initialize
 29719 ;;		_TMR5_Initialize
 29720 ;;		_TMR6_Initialize
 29721 ;;		_UART1_Initialize
 29722 ;;		_UART2_Initialize
 29723 ;; This function is called by:
 29724 ;;		_main
 29725 ;; This function uses a reentrant model
 29726 ;;
 29727                           
 29728                           	psect	text111
 29729  01B676                     __ptext111:
 29730                           	opt callstack 0
 29731  01B676                     _SYSTEM_Initialize:
 29732                           	opt callstack 13
 29733                           
 29734                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 29735                           
 29736                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29737                           ;incstack = 0
 29738  01B676  EC1F  F0D9         	call	_INTERRUPT_Initialize	;wreg free
 29739                           
 29740                           ; BSR set to: 57
 29741                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 29742  01B67A  EC70  F0E1         	call	_PMD_Initialize	;wreg free
 29743                           
 29744                           ; BSR set to: 57
 29745                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 29746  01B67E  EC80  F0D6         	call	_PIN_MANAGER_Initialize	;wreg free
 29747                           
 29748                           ; BSR set to: 58
 29749                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 29750  01B682  EC65  F0E1         	call	_OSCILLATOR_Initialize	;wreg free
 29751                           
 29752                           ; BSR set to: 57
 29753                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 29754  01B686  ECF5  F0E1         	call	_FVR_Initialize	;wreg free
 29755                           
 29756                           ; BSR set to: 62
 29757                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 29758  01B68A  ECB4  F0D8         	call	_ADCC_Initialize	;wreg free
 29759                           
 29760                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 29761  01B68E  EC43  F0E1         	call	_TMR2_Initialize	;wreg free
 29762                           
 29763                           ; BSR set to: 57
 29764                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 29765  01B692  EC5A  F0E1         	call	_PWM8_Initialize	;wreg free
 29766                           
 29767                           ; BSR set to: 63
 29768                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 29769  01B696  EC00  F0DE         	call	_EXT_INT_Initialize	;wreg free
 29770                           
 29771                           ; BSR set to: 57
 29772                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 29773  01B69A  ECD4  F0DE         	call	_TMR6_Initialize	;wreg free
 29774                           
 29775                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 29776  01B69E  ECCC  F0DB         	call	_TMR3_Initialize	;wreg free
 29777                           
 29778                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 29779  01B6A2  ECA8  F0DB         	call	_TMR5_Initialize	;wreg free
 29780                           
 29781                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 29782  01B6A6  EC84  F0DB         	call	_UART1_Initialize	;wreg free
 29783                           
 29784                           ; BSR set to: 57
 29785                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 29786  01B6AA  ECE6  F0D9         	call	_UART2_Initialize	;wreg free
 29787                           
 29788                           ; BSR set to: 57
 29789                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 29790  01B6AE  EC4F  F0E1         	call	_SPI1_Initialize	;wreg free
 29791                           
 29792                           ; BSR set to: 61
 29793                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 29794  01B6B2  EC70  F0DA         	call	_DMA2_Initialize	;wreg free
 29795                           
 29796                           ; BSR set to: 59
 29797                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 29798  01B6B6  EC7F  F0D8         	call	_DMA1_Initialize	;wreg free
 29799                           
 29800                           ; BSR set to: 59
 29801                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 29802  01B6BA  ECC9  F0E1         	call	_CLKREF_Initialize	;wreg free
 29803                           
 29804                           ; BSR set to: 60
 29805                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 29806  01B6BE  0012               	return		;funcret
 29807  01B6C0                     __end_of_SYSTEM_Initialize:
 29808                           	opt callstack 0
 29809                           
 29810 ;; *************** function _UART2_Initialize *****************
 29811 ;; Defined at:
 29812 ;;		line 78 in file "mcc_generated_files/uart2.c"
 29813 ;; Parameters:    Size  Location     Type
 29814 ;;		None
 29815 ;; Auto vars:     Size  Location     Type
 29816 ;;		None
 29817 ;; Return value:  Size  Location     Type
 29818 ;;                  1  [STACK] void 
 29819 ;; Registers used:
 29820 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29821 ;; Tracked objects:
 29822 ;;		On entry : 3F/39
 29823 ;;		On exit  : 3F/39
 29824 ;;		Unchanged: 0/0
 29825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29830 ;;Total ram usage:        0 bytes
 29831 ;; Hardware stack levels used:    1
 29832 ;; Hardware stack levels required when called:   16
 29833 ;; This function calls:
 29834 ;;		_UART2_SetRxInterruptHandler
 29835 ;;		_UART2_SetTxInterruptHandler
 29836 ;; This function is called by:
 29837 ;;		_SYSTEM_Initialize
 29838 ;; This function uses a reentrant model
 29839 ;;
 29840                           
 29841                           	psect	text112
 29842  01B3CC                     __ptext112:
 29843                           	opt callstack 0
 29844  01B3CC                     _UART2_Initialize:
 29845                           	opt callstack 13
 29846                           
 29847                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 29848                           
 29849                           ; BSR set to: 60
 29850                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29851                           ;incstack = 0
 29852  01B3CC  0139               	movlb	57	; () banked
 29853  01B3CE  9596               	bcf	150,2,b	;volatile
 29854                           
 29855                           ; BSR set to: 57
 29856                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 29857  01B3D0  0E68               	movlw	low _UART2_Receive_ISR
 29858  01B3D2  6EE6               	movwf	postinc1,c
 29859  01B3D4  0EC1               	movlw	high _UART2_Receive_ISR
 29860  01B3D6  6EE6               	movwf	postinc1,c
 29861  01B3D8  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 29862  01B3DA  6EE6               	movwf	postinc1,c
 29863  01B3DC  EC25  F0DF         	call	_UART2_SetRxInterruptHandler	;wreg free
 29864                           
 29865                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 29866  01B3E0  0139               	movlb	57	; () banked
 29867  01B3E2  9796               	bcf	150,3,b	;volatile
 29868                           
 29869                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 29870  01B3E4  0E7C               	movlw	low _UART2_Transmit_ISR
 29871  01B3E6  6EE6               	movwf	postinc1,c
 29872  01B3E8  0EBD               	movlw	high _UART2_Transmit_ISR
 29873  01B3EA  6EE6               	movwf	postinc1,c
 29874  01B3EC  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 29875  01B3EE  6EE6               	movwf	postinc1,c
 29876  01B3F0  EC11  F0DF         	call	_UART2_SetTxInterruptHandler	;wreg free
 29877                           
 29878                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 29879  01B3F4  013D               	movlb	61	; () banked
 29880  01B3F6  6BD4               	clrf	212,b	;volatile
 29881                           
 29882                           ; BSR set to: 61
 29883                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 29884  01B3F8  6BD6               	clrf	214,b	;volatile
 29885                           
 29886                           ; BSR set to: 61
 29887                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 29888  01B3FA  6BD8               	clrf	216,b	;volatile
 29889                           
 29890                           ; BSR set to: 61
 29891                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 29892  01B3FC  0EB0               	movlw	176
 29893  01B3FE  6FDA               	movwf	218,b	;volatile
 29894                           
 29895                           ; BSR set to: 61
 29896                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 29897  01B400  0E80               	movlw	128
 29898  01B402  6FDB               	movwf	219,b	;volatile
 29899                           
 29900                           ; BSR set to: 61
 29901                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 29902  01B404  6BDC               	clrf	220,b	;volatile
 29903                           
 29904                           ; BSR set to: 61
 29905                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 29906  01B406  0E82               	movlw	130
 29907  01B408  6FDD               	movwf	221,b	;volatile
 29908                           
 29909                           ; BSR set to: 61
 29910                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 29911  01B40A  0E06               	movlw	6
 29912  01B40C  6FDE               	movwf	222,b	;volatile
 29913                           
 29914                           ; BSR set to: 61
 29915                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 29916  01B40E  6BDF               	clrf	223,b	;volatile
 29917                           
 29918                           ; BSR set to: 61
 29919                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 29920  01B410  6BE0               	clrf	224,b	;volatile
 29921                           
 29922                           ; BSR set to: 61
 29923                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 29924  01B412  6BE1               	clrf	225,b	;volatile
 29925                           
 29926                           ; BSR set to: 61
 29927                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 29928  01B414  6BE2               	clrf	226,b	;volatile
 29929                           
 29930                           ; BSR set to: 61
 29931                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 29932  01B416  0100               	movlb	0	; () banked
 29933  01B418  6BAC               	clrf	_uart2TxHead& (0+255),b	;volatile
 29934                           
 29935                           ; BSR set to: 0
 29936                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 29937  01B41A  6A46               	clrf	_uart2TxTail^0,c	;volatile
 29938                           
 29939                           ; BSR set to: 0
 29940                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 29941  01B41C  0E40               	movlw	64
 29942  01B41E  6E45               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 29943                           
 29944                           ; BSR set to: 0
 29945                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 29946  01B420  6A44               	clrf	_uart2RxHead^0,c	;volatile
 29947                           
 29948                           ; BSR set to: 0
 29949                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 29950  01B422  6BAB               	clrf	_uart2RxTail& (0+255),b	;volatile
 29951                           
 29952                           ; BSR set to: 0
 29953                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 29954  01B424  6BAA               	clrf	_uart2RxCount& (0+255),b	;volatile
 29955                           
 29956                           ; BSR set to: 0
 29957                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 29958  01B426  0139               	movlb	57	; () banked
 29959  01B428  8596               	bsf	150,2,b	;volatile
 29960                           
 29961                           ; BSR set to: 57
 29962                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 29963  01B42A  0012               	return		;funcret
 29964  01B42C                     __end_of_UART2_Initialize:
 29965                           	opt callstack 0
 29966                           
 29967 ;; *************** function _UART2_SetTxInterruptHandler *****************
 29968 ;; Defined at:
 29969 ;;		line 252 in file "mcc_generated_files/uart2.c"
 29970 ;; Parameters:    Size  Location     Type
 29971 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29972 ;;		 -> UART2_Transmit_ISR(1), 
 29973 ;; Auto vars:     Size  Location     Type
 29974 ;;		None
 29975 ;; Return value:  Size  Location     Type
 29976 ;;                  1  [STACK] void 
 29977 ;; Registers used:
 29978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29979 ;; Tracked objects:
 29980 ;;		On entry : 3F/39
 29981 ;;		On exit  : 0/0
 29982 ;;		Unchanged: 0/0
 29983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29988 ;;Total ram usage:        0 bytes
 29989 ;; Hardware stack levels used:    1
 29990 ;; Hardware stack levels required when called:   15
 29991 ;; This function calls:
 29992 ;;		Nothing
 29993 ;; This function is called by:
 29994 ;;		_UART2_Initialize
 29995 ;; This function uses a reentrant model
 29996 ;;
 29997                           
 29998                           	psect	text113
 29999  01BE22                     __ptext113:
 30000                           	opt callstack 0
 30001  01BE22                     _UART2_SetTxInterruptHandler:
 30002                           	opt callstack 13
 30003                           
 30004                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 30005                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30006                           
 30007                           ; BSR set to: 57
 30008                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30009                           ;incstack = 0
 30010  01BE22  50E1               	movf	fsr1l,w,c
 30011  01BE24  0FFD               	addlw	-3
 30012  01BE26  6ED9               	movwf	fsr2l,c
 30013  01BE28  50E2               	movf	fsr1h,w,c
 30014  01BE2A  6EDA               	movwf	fsr2h,c
 30015  01BE2C  0EFF               	movlw	255
 30016  01BE2E  22DA               	addwfc	fsr2h,f,c
 30017  01BE30  006F FF78  F08E    	movff	postinc2,_UART2_TxInterruptHandler
 30018  01BE36  006F FF78  F08F    	movff	postinc2,_UART2_TxInterruptHandler+1
 30019  01BE3C  006F FF74  F090    	movff	postdec2,_UART2_TxInterruptHandler+2
 30020                           
 30021                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 30022  01BE42  52E5               	movf	postdec1,f,c
 30023  01BE44  52E5               	movf	postdec1,f,c
 30024  01BE46  52E5               	movf	postdec1,f,c
 30025  01BE48  0012               	return		;funcret
 30026  01BE4A                     __end_of_UART2_SetTxInterruptHandler:
 30027                           	opt callstack 0
 30028                           
 30029 ;; *************** function _UART2_SetRxInterruptHandler *****************
 30030 ;; Defined at:
 30031 ;;		line 248 in file "mcc_generated_files/uart2.c"
 30032 ;; Parameters:    Size  Location     Type
 30033 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30034 ;;		 -> UART2_Receive_ISR(1), 
 30035 ;; Auto vars:     Size  Location     Type
 30036 ;;		None
 30037 ;; Return value:  Size  Location     Type
 30038 ;;                  1  [STACK] void 
 30039 ;; Registers used:
 30040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30041 ;; Tracked objects:
 30042 ;;		On entry : 3F/39
 30043 ;;		On exit  : 0/0
 30044 ;;		Unchanged: 0/0
 30045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30050 ;;Total ram usage:        0 bytes
 30051 ;; Hardware stack levels used:    1
 30052 ;; Hardware stack levels required when called:   15
 30053 ;; This function calls:
 30054 ;;		Nothing
 30055 ;; This function is called by:
 30056 ;;		_UART2_Initialize
 30057 ;; This function uses a reentrant model
 30058 ;;
 30059                           
 30060                           	psect	text114
 30061  01BE4A                     __ptext114:
 30062                           	opt callstack 0
 30063  01BE4A                     _UART2_SetRxInterruptHandler:
 30064                           	opt callstack 13
 30065                           
 30066                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 30067                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30068                           
 30069                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30070                           ;incstack = 0
 30071  01BE4A  50E1               	movf	fsr1l,w,c
 30072  01BE4C  0FFD               	addlw	-3
 30073  01BE4E  6ED9               	movwf	fsr2l,c
 30074  01BE50  50E2               	movf	fsr1h,w,c
 30075  01BE52  6EDA               	movwf	fsr2h,c
 30076  01BE54  0EFF               	movlw	255
 30077  01BE56  22DA               	addwfc	fsr2h,f,c
 30078  01BE58  006F FF78  F091    	movff	postinc2,_UART2_RxInterruptHandler
 30079  01BE5E  006F FF78  F092    	movff	postinc2,_UART2_RxInterruptHandler+1
 30080  01BE64  006F FF74  F093    	movff	postdec2,_UART2_RxInterruptHandler+2
 30081                           
 30082                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 30083  01BE6A  52E5               	movf	postdec1,f,c
 30084  01BE6C  52E5               	movf	postdec1,f,c
 30085  01BE6E  52E5               	movf	postdec1,f,c
 30086  01BE70  0012               	return		;funcret
 30087  01BE72                     __end_of_UART2_SetRxInterruptHandler:
 30088                           	opt callstack 0
 30089                           
 30090 ;; *************** function _UART1_Initialize *****************
 30091 ;; Defined at:
 30092 ;;		line 75 in file "mcc_generated_files/uart1.c"
 30093 ;; Parameters:    Size  Location     Type
 30094 ;;		None
 30095 ;; Auto vars:     Size  Location     Type
 30096 ;;		None
 30097 ;; Return value:  Size  Location     Type
 30098 ;;                  1  [STACK] void 
 30099 ;; Registers used:
 30100 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 30101 ;; Tracked objects:
 30102 ;;		On entry : 0/39
 30103 ;;		On exit  : 3F/39
 30104 ;;		Unchanged: 0/0
 30105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30110 ;;Total ram usage:        0 bytes
 30111 ;; Hardware stack levels used:    1
 30112 ;; Hardware stack levels required when called:   16
 30113 ;; This function calls:
 30114 ;;		_UART1_SetRxInterruptHandler
 30115 ;; This function is called by:
 30116 ;;		_SYSTEM_Initialize
 30117 ;; This function uses a reentrant model
 30118 ;;
 30119                           
 30120                           	psect	text115
 30121  01B708                     __ptext115:
 30122                           	opt callstack 0
 30123  01B708                     _UART1_Initialize:
 30124                           	opt callstack 13
 30125                           
 30126                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 30127                           
 30128                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30129                           ;incstack = 0
 30130  01B708  0139               	movlb	57	; () banked
 30131  01B70A  9793               	bcf	147,3,b	;volatile
 30132                           
 30133                           ; BSR set to: 57
 30134                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 30135  01B70C  0E26               	movlw	low _UART1_Receive_ISR
 30136  01B70E  6EE6               	movwf	postinc1,c
 30137  01B710  0EC1               	movlw	high _UART1_Receive_ISR
 30138  01B712  6EE6               	movwf	postinc1,c
 30139  01B714  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 30140  01B716  6EE6               	movwf	postinc1,c
 30141  01B718  EC39  F0DF         	call	_UART1_SetRxInterruptHandler	;wreg free
 30142                           
 30143                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 30144  01B71C  013D               	movlb	61	; () banked
 30145  01B71E  6BEC               	clrf	236,b	;volatile
 30146                           
 30147                           ; BSR set to: 61
 30148                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 30149  01B720  6BED               	clrf	237,b	;volatile
 30150                           
 30151                           ; BSR set to: 61
 30152                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 30153  01B722  6BEE               	clrf	238,b	;volatile
 30154                           
 30155                           ; BSR set to: 61
 30156                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 30157  01B724  6BEF               	clrf	239,b	;volatile
 30158                           
 30159                           ; BSR set to: 61
 30160                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 30161  01B726  6BF0               	clrf	240,b	;volatile
 30162                           
 30163                           ; BSR set to: 61
 30164                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 30165  01B728  6BF1               	clrf	241,b	;volatile
 30166                           
 30167                           ; BSR set to: 61
 30168                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 30169  01B72A  0EB0               	movlw	176
 30170  01B72C  6FF2               	movwf	242,b	;volatile
 30171                           
 30172                           ; BSR set to: 61
 30173                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 30174  01B72E  0E80               	movlw	128
 30175  01B730  6FF3               	movwf	243,b	;volatile
 30176                           
 30177                           ; BSR set to: 61
 30178                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 30179  01B732  6BF4               	clrf	244,b	;volatile
 30180                           
 30181                           ; BSR set to: 61
 30182                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 30183  01B734  0E8A               	movlw	138
 30184  01B736  6FF5               	movwf	245,b	;volatile
 30185                           
 30186                           ; BSR set to: 61
 30187                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 30188  01B738  6BF6               	clrf	246,b	;volatile
 30189                           
 30190                           ; BSR set to: 61
 30191                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 30192  01B73A  6BF7               	clrf	247,b	;volatile
 30193                           
 30194                           ; BSR set to: 61
 30195                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 30196  01B73C  6BF8               	clrf	248,b	;volatile
 30197                           
 30198                           ; BSR set to: 61
 30199                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 30200  01B73E  6BF9               	clrf	249,b	;volatile
 30201                           
 30202                           ; BSR set to: 61
 30203                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 30204  01B740  6BFA               	clrf	250,b	;volatile
 30205                           
 30206                           ; BSR set to: 61
 30207                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 30208  01B742  6A47               	clrf	_uart1RxHead^0,c	;volatile
 30209                           
 30210                           ; BSR set to: 61
 30211                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 30212  01B744  0100               	movlb	0	; () banked
 30213  01B746  6BAE               	clrf	_uart1RxTail& (0+255),b	;volatile
 30214                           
 30215                           ; BSR set to: 0
 30216                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 30217  01B748  6BAD               	clrf	_uart1RxCount& (0+255),b	;volatile
 30218                           
 30219                           ; BSR set to: 0
 30220                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 30221  01B74A  0139               	movlb	57	; () banked
 30222  01B74C  8793               	bsf	147,3,b	;volatile
 30223                           
 30224                           ; BSR set to: 57
 30225                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 30226  01B74E  0012               	return		;funcret
 30227  01B750                     __end_of_UART1_Initialize:
 30228                           	opt callstack 0
 30229                           
 30230 ;; *************** function _UART1_SetRxInterruptHandler *****************
 30231 ;; Defined at:
 30232 ;;		line 207 in file "mcc_generated_files/uart1.c"
 30233 ;; Parameters:    Size  Location     Type
 30234 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30235 ;;		 -> UART1_Receive_ISR(1), 
 30236 ;; Auto vars:     Size  Location     Type
 30237 ;;		None
 30238 ;; Return value:  Size  Location     Type
 30239 ;;                  1  [STACK] void 
 30240 ;; Registers used:
 30241 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30242 ;; Tracked objects:
 30243 ;;		On entry : 3F/39
 30244 ;;		On exit  : 0/0
 30245 ;;		Unchanged: 0/0
 30246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30251 ;;Total ram usage:        0 bytes
 30252 ;; Hardware stack levels used:    1
 30253 ;; Hardware stack levels required when called:   15
 30254 ;; This function calls:
 30255 ;;		Nothing
 30256 ;; This function is called by:
 30257 ;;		_UART1_Initialize
 30258 ;; This function uses a reentrant model
 30259 ;;
 30260                           
 30261                           	psect	text116
 30262  01BE72                     __ptext116:
 30263                           	opt callstack 0
 30264  01BE72                     _UART1_SetRxInterruptHandler:
 30265                           	opt callstack 13
 30266                           
 30267                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 30268                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30269                           
 30270                           ; BSR set to: 57
 30271                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30272                           ;incstack = 0
 30273  01BE72  50E1               	movf	fsr1l,w,c
 30274  01BE74  0FFD               	addlw	-3
 30275  01BE76  6ED9               	movwf	fsr2l,c
 30276  01BE78  50E2               	movf	fsr1h,w,c
 30277  01BE7A  6EDA               	movwf	fsr2h,c
 30278  01BE7C  0EFF               	movlw	255
 30279  01BE7E  22DA               	addwfc	fsr2h,f,c
 30280  01BE80  006F FF78  F08B    	movff	postinc2,_UART1_RxInterruptHandler
 30281  01BE86  006F FF78  F08C    	movff	postinc2,_UART1_RxInterruptHandler+1
 30282  01BE8C  006F FF74  F08D    	movff	postdec2,_UART1_RxInterruptHandler+2
 30283                           
 30284                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 30285  01BE92  52E5               	movf	postdec1,f,c
 30286  01BE94  52E5               	movf	postdec1,f,c
 30287  01BE96  52E5               	movf	postdec1,f,c
 30288  01BE98  0012               	return		;funcret
 30289  01BE9A                     __end_of_UART1_SetRxInterruptHandler:
 30290                           	opt callstack 0
 30291                           
 30292 ;; *************** function _TMR6_Initialize *****************
 30293 ;; Defined at:
 30294 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 30295 ;; Parameters:    Size  Location     Type
 30296 ;;		None
 30297 ;; Auto vars:     Size  Location     Type
 30298 ;;		None
 30299 ;; Return value:  Size  Location     Type
 30300 ;;                  1  [STACK] void 
 30301 ;; Registers used:
 30302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 30303 ;; Tracked objects:
 30304 ;;		On entry : 3F/39
 30305 ;;		On exit  : 0/0
 30306 ;;		Unchanged: 0/0
 30307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30312 ;;Total ram usage:        0 bytes
 30313 ;; Hardware stack levels used:    1
 30314 ;; Hardware stack levels required when called:   16
 30315 ;; This function calls:
 30316 ;;		_TMR6_SetInterruptHandler
 30317 ;; This function is called by:
 30318 ;;		_SYSTEM_Initialize
 30319 ;; This function uses a reentrant model
 30320 ;;
 30321                           
 30322                           	psect	text117
 30323  01BDA8                     __ptext117:
 30324                           	opt callstack 0
 30325  01BDA8                     _TMR6_Initialize:
 30326                           	opt callstack 13
 30327                           
 30328                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 30329                           
 30330                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30331                           ;incstack = 0
 30332  01BDA8  0E01               	movlw	1
 30333  01BDAA  6E96               	movwf	150,c	;volatile
 30334                           
 30335                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 30336  01BDAC  6A95               	clrf	149,c	;volatile
 30337                           
 30338                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 30339  01BDAE  6A97               	clrf	151,c	;volatile
 30340                           
 30341                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 30342  01BDB0  0E7C               	movlw	124
 30343  01BDB2  6E93               	movwf	147,c	;volatile
 30344                           
 30345                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 30346  01BDB4  6A92               	clrf	146,c	;volatile
 30347                           
 30348                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 30349  01BDB6  0139               	movlb	57	; () banked
 30350  01BDB8  91A9               	bcf	169,0,b	;volatile
 30351                           
 30352                           ; BSR set to: 57
 30353                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 30354  01BDBA  8199               	bsf	153,0,b	;volatile
 30355                           
 30356                           ; BSR set to: 57
 30357                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 30358  01BDBC  0EDE               	movlw	low _TMR6_DefaultInterruptHandler
 30359  01BDBE  6EE6               	movwf	postinc1,c
 30360  01BDC0  0EB5               	movlw	high _TMR6_DefaultInterruptHandler
 30361  01BDC2  6EE6               	movwf	postinc1,c
 30362  01BDC4  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 30363  01BDC6  6EE6               	movwf	postinc1,c
 30364  01BDC8  EC4D  F0DF         	call	_TMR6_SetInterruptHandler	;wreg free
 30365                           
 30366                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 30367  01BDCC  0EE0               	movlw	224
 30368  01BDCE  6E94               	movwf	148,c	;volatile
 30369                           
 30370                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30371  01BDD0  0012               	return		;funcret
 30372  01BDD2                     __end_of_TMR6_Initialize:
 30373                           	opt callstack 0
 30374                           
 30375 ;; *************** function _TMR6_SetInterruptHandler *****************
 30376 ;; Defined at:
 30377 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 30378 ;; Parameters:    Size  Location     Type
 30379 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30380 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 30381 ;; Auto vars:     Size  Location     Type
 30382 ;;		None
 30383 ;; Return value:  Size  Location     Type
 30384 ;;                  1  [STACK] void 
 30385 ;; Registers used:
 30386 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30387 ;; Tracked objects:
 30388 ;;		On entry : 3F/39
 30389 ;;		On exit  : 0/0
 30390 ;;		Unchanged: 0/0
 30391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30396 ;;Total ram usage:        0 bytes
 30397 ;; Hardware stack levels used:    1
 30398 ;; Hardware stack levels required when called:   15
 30399 ;; This function calls:
 30400 ;;		Nothing
 30401 ;; This function is called by:
 30402 ;;		_TMR6_Initialize
 30403 ;; This function uses a reentrant model
 30404 ;;
 30405                           
 30406                           	psect	text118
 30407  01BE9A                     __ptext118:
 30408                           	opt callstack 0
 30409  01BE9A                     _TMR6_SetInterruptHandler:
 30410                           	opt callstack 13
 30411                           
 30412                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 30413                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30414                           
 30415                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30416                           ;incstack = 0
 30417  01BE9A  50E1               	movf	fsr1l,w,c
 30418  01BE9C  0FFD               	addlw	-3
 30419  01BE9E  6ED9               	movwf	fsr2l,c
 30420  01BEA0  50E2               	movf	fsr1h,w,c
 30421  01BEA2  6EDA               	movwf	fsr2h,c
 30422  01BEA4  0EFF               	movlw	255
 30423  01BEA6  22DA               	addwfc	fsr2h,f,c
 30424  01BEA8  006F FF78  F082    	movff	postinc2,_TMR6_InterruptHandler
 30425  01BEAE  006F FF78  F083    	movff	postinc2,_TMR6_InterruptHandler+1
 30426  01BEB4  006F FF74  F084    	movff	postdec2,_TMR6_InterruptHandler+2
 30427                           
 30428                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30429  01BEBA  52E5               	movf	postdec1,f,c
 30430  01BEBC  52E5               	movf	postdec1,f,c
 30431  01BEBE  52E5               	movf	postdec1,f,c
 30432  01BEC0  0012               	return		;funcret
 30433  01BEC2                     __end_of_TMR6_SetInterruptHandler:
 30434                           	opt callstack 0
 30435                           
 30436 ;; *************** function _TMR5_Initialize *****************
 30437 ;; Defined at:
 30438 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 30439 ;; Parameters:    Size  Location     Type
 30440 ;;		None
 30441 ;; Auto vars:     Size  Location     Type
 30442 ;;		None
 30443 ;; Return value:  Size  Location     Type
 30444 ;;                  1  [STACK] void 
 30445 ;; Registers used:
 30446 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 30447 ;; Tracked objects:
 30448 ;;		On entry : 0/39
 30449 ;;		On exit  : 0/0
 30450 ;;		Unchanged: 0/0
 30451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30456 ;;Total ram usage:        0 bytes
 30457 ;; Hardware stack levels used:    1
 30458 ;; Hardware stack levels required when called:   16
 30459 ;; This function calls:
 30460 ;;		_TMR5_SetInterruptHandler
 30461 ;; This function is called by:
 30462 ;;		_SYSTEM_Initialize
 30463 ;; This function uses a reentrant model
 30464 ;;
 30465                           
 30466                           	psect	text119
 30467  01B750                     __ptext119:
 30468                           	opt callstack 0
 30469  01B750                     _TMR5_Initialize:
 30470                           	opt callstack 13
 30471                           
 30472                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 30473                           
 30474                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30475                           ;incstack = 0
 30476  01B750  6A9B               	clrf	155,c	;volatile
 30477                           
 30478                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 30479  01B752  6A9C               	clrf	156,c	;volatile
 30480                           
 30481                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 30482  01B754  0E01               	movlw	1
 30483  01B756  6E9D               	movwf	157,c	;volatile
 30484                           
 30485                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 30486  01B758  0E63               	movlw	99
 30487  01B75A  6E99               	movwf	153,c	;volatile
 30488                           
 30489                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 30490  01B75C  0EC0               	movlw	192
 30491  01B75E  6E98               	movwf	152,c	;volatile
 30492                           
 30493                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 30494  01B760  5098               	movf	152,w,c	;volatile
 30495  01B762  006F FE64  F001    	movff	16281,btemp	;volatile
 30496  01B768  6A02               	clrf	(btemp+1)^0,c
 30497  01B76A  0060  F004  F002   	movff	btemp,btemp+1
 30498  01B770  6A01               	clrf	btemp^0,c
 30499  01B772  1001               	iorwf	btemp^0,w,c
 30500  01B774  0100               	movlb	0	; () banked
 30501  01B776  6FA2               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 30502  01B778  5002               	movf	(btemp+1)^0,w,c
 30503  01B77A  6FA3               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 30504                           
 30505                           ; BSR set to: 0
 30506                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 30507  01B77C  0139               	movlb	57	; () banked
 30508  01B77E  9DA8               	bcf	168,6,b	;volatile
 30509                           
 30510                           ; BSR set to: 57
 30511                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 30512  01B780  8D98               	bsf	152,6,b	;volatile
 30513                           
 30514                           ; BSR set to: 57
 30515                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 30516  01B782  0E28               	movlw	low _TMR5_DefaultInterruptHandler
 30517  01B784  6EE6               	movwf	postinc1,c
 30518  01B786  0EBB               	movlw	high _TMR5_DefaultInterruptHandler
 30519  01B788  6EE6               	movwf	postinc1,c
 30520  01B78A  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 30521  01B78C  6EE6               	movwf	postinc1,c
 30522  01B78E  EC61  F0DF         	call	_TMR5_SetInterruptHandler	;wreg free
 30523                           
 30524                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 30525  01B792  0E31               	movlw	49
 30526  01B794  6E9A               	movwf	154,c	;volatile
 30527                           
 30528                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30529  01B796  0012               	return		;funcret
 30530  01B798                     __end_of_TMR5_Initialize:
 30531                           	opt callstack 0
 30532                           
 30533 ;; *************** function _TMR5_SetInterruptHandler *****************
 30534 ;; Defined at:
 30535 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 30536 ;; Parameters:    Size  Location     Type
 30537 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30538 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 30539 ;; Auto vars:     Size  Location     Type
 30540 ;;		None
 30541 ;; Return value:  Size  Location     Type
 30542 ;;                  1  [STACK] void 
 30543 ;; Registers used:
 30544 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30545 ;; Tracked objects:
 30546 ;;		On entry : 3F/39
 30547 ;;		On exit  : 0/0
 30548 ;;		Unchanged: 0/0
 30549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30554 ;;Total ram usage:        0 bytes
 30555 ;; Hardware stack levels used:    1
 30556 ;; Hardware stack levels required when called:   15
 30557 ;; This function calls:
 30558 ;;		Nothing
 30559 ;; This function is called by:
 30560 ;;		_TMR5_Initialize
 30561 ;; This function uses a reentrant model
 30562 ;;
 30563                           
 30564                           	psect	text120
 30565  01BEC2                     __ptext120:
 30566                           	opt callstack 0
 30567  01BEC2                     _TMR5_SetInterruptHandler:
 30568                           	opt callstack 13
 30569                           
 30570                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 30571                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30572                           
 30573                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30574                           ;incstack = 0
 30575  01BEC2  50E1               	movf	fsr1l,w,c
 30576  01BEC4  0FFD               	addlw	-3
 30577  01BEC6  6ED9               	movwf	fsr2l,c
 30578  01BEC8  50E2               	movf	fsr1h,w,c
 30579  01BECA  6EDA               	movwf	fsr2h,c
 30580  01BECC  0EFF               	movlw	255
 30581  01BECE  22DA               	addwfc	fsr2h,f,c
 30582  01BED0  006F FF78  F07F    	movff	postinc2,_TMR5_InterruptHandler
 30583  01BED6  006F FF78  F080    	movff	postinc2,_TMR5_InterruptHandler+1
 30584  01BEDC  006F FF74  F081    	movff	postdec2,_TMR5_InterruptHandler+2
 30585                           
 30586                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30587  01BEE2  52E5               	movf	postdec1,f,c
 30588  01BEE4  52E5               	movf	postdec1,f,c
 30589  01BEE6  52E5               	movf	postdec1,f,c
 30590  01BEE8  0012               	return		;funcret
 30591  01BEEA                     __end_of_TMR5_SetInterruptHandler:
 30592                           	opt callstack 0
 30593                           
 30594 ;; *************** function _TMR3_Initialize *****************
 30595 ;; Defined at:
 30596 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 30597 ;; Parameters:    Size  Location     Type
 30598 ;;		None
 30599 ;; Auto vars:     Size  Location     Type
 30600 ;;		None
 30601 ;; Return value:  Size  Location     Type
 30602 ;;                  1  [STACK] void 
 30603 ;; Registers used:
 30604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 30605 ;; Tracked objects:
 30606 ;;		On entry : 0/39
 30607 ;;		On exit  : 0/0
 30608 ;;		Unchanged: 0/0
 30609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30614 ;;Total ram usage:        0 bytes
 30615 ;; Hardware stack levels used:    1
 30616 ;; Hardware stack levels required when called:   16
 30617 ;; This function calls:
 30618 ;;		_TMR3_SetInterruptHandler
 30619 ;; This function is called by:
 30620 ;;		_SYSTEM_Initialize
 30621 ;; This function uses a reentrant model
 30622 ;;
 30623                           
 30624                           	psect	text121
 30625  01B798                     __ptext121:
 30626                           	opt callstack 0
 30627  01B798                     _TMR3_Initialize:
 30628                           	opt callstack 13
 30629                           
 30630                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 30631                           
 30632                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30633                           ;incstack = 0
 30634  01B798  6AA7               	clrf	167,c	;volatile
 30635                           
 30636                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 30637  01B79A  6AA8               	clrf	168,c	;volatile
 30638                           
 30639                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 30640  01B79C  0E01               	movlw	1
 30641  01B79E  6EA9               	movwf	169,c	;volatile
 30642                           
 30643                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 30644  01B7A0  0E3C               	movlw	60
 30645  01B7A2  6EA5               	movwf	165,c	;volatile
 30646                           
 30647                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 30648  01B7A4  0EB0               	movlw	176
 30649  01B7A6  6EA4               	movwf	164,c	;volatile
 30650                           
 30651                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 30652  01B7A8  50A4               	movf	164,w,c	;volatile
 30653  01B7AA  006F FE94  F001    	movff	16293,btemp	;volatile
 30654  01B7B0  6A02               	clrf	(btemp+1)^0,c
 30655  01B7B2  0060  F004  F002   	movff	btemp,btemp+1
 30656  01B7B8  6A01               	clrf	btemp^0,c
 30657  01B7BA  1001               	iorwf	btemp^0,w,c
 30658  01B7BC  0100               	movlb	0	; () banked
 30659  01B7BE  6F9E               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 30660  01B7C0  5002               	movf	(btemp+1)^0,w,c
 30661  01B7C2  6F9F               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 30662                           
 30663                           ; BSR set to: 0
 30664                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 30665  01B7C4  0139               	movlb	57	; () banked
 30666  01B7C6  9DA6               	bcf	166,6,b	;volatile
 30667                           
 30668                           ; BSR set to: 57
 30669                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 30670  01B7C8  8D96               	bsf	150,6,b	;volatile
 30671                           
 30672                           ; BSR set to: 57
 30673                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 30674  01B7CA  0E14               	movlw	low _TMR3_DefaultInterruptHandler
 30675  01B7CC  6EE6               	movwf	postinc1,c
 30676  01B7CE  0EC4               	movlw	high _TMR3_DefaultInterruptHandler
 30677  01B7D0  6EE6               	movwf	postinc1,c
 30678  01B7D2  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 30679  01B7D4  6EE6               	movwf	postinc1,c
 30680  01B7D6  EC75  F0DF         	call	_TMR3_SetInterruptHandler	;wreg free
 30681                           
 30682                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 30683  01B7DA  0E31               	movlw	49
 30684  01B7DC  6EA6               	movwf	166,c	;volatile
 30685                           
 30686                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30687  01B7DE  0012               	return		;funcret
 30688  01B7E0                     __end_of_TMR3_Initialize:
 30689                           	opt callstack 0
 30690                           
 30691 ;; *************** function _TMR3_SetInterruptHandler *****************
 30692 ;; Defined at:
 30693 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 30694 ;; Parameters:    Size  Location     Type
 30695 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30696 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 30697 ;; Auto vars:     Size  Location     Type
 30698 ;;		None
 30699 ;; Return value:  Size  Location     Type
 30700 ;;                  1  [STACK] void 
 30701 ;; Registers used:
 30702 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30703 ;; Tracked objects:
 30704 ;;		On entry : 0/0
 30705 ;;		On exit  : 0/0
 30706 ;;		Unchanged: 0/0
 30707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30712 ;;Total ram usage:        0 bytes
 30713 ;; Hardware stack levels used:    1
 30714 ;; Hardware stack levels required when called:   15
 30715 ;; This function calls:
 30716 ;;		Nothing
 30717 ;; This function is called by:
 30718 ;;		_TMR3_Initialize
 30719 ;;		_init_bsoc
 30720 ;; This function uses a reentrant model
 30721 ;;
 30722                           
 30723                           	psect	text122
 30724  01BEEA                     __ptext122:
 30725                           	opt callstack 0
 30726  01BEEA                     _TMR3_SetInterruptHandler:
 30727                           	opt callstack 14
 30728                           
 30729                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 30730                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30731                           
 30732                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30733                           ;incstack = 0
 30734  01BEEA  50E1               	movf	fsr1l,w,c
 30735  01BEEC  0FFD               	addlw	-3
 30736  01BEEE  6ED9               	movwf	fsr2l,c
 30737  01BEF0  50E2               	movf	fsr1h,w,c
 30738  01BEF2  6EDA               	movwf	fsr2h,c
 30739  01BEF4  0EFF               	movlw	255
 30740  01BEF6  22DA               	addwfc	fsr2h,f,c
 30741  01BEF8  006F FF78  F07C    	movff	postinc2,_TMR3_InterruptHandler
 30742  01BEFE  006F FF78  F07D    	movff	postinc2,_TMR3_InterruptHandler+1
 30743  01BF04  006F FF74  F07E    	movff	postdec2,_TMR3_InterruptHandler+2
 30744                           
 30745                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30746  01BF0A  52E5               	movf	postdec1,f,c
 30747  01BF0C  52E5               	movf	postdec1,f,c
 30748  01BF0E  52E5               	movf	postdec1,f,c
 30749  01BF10  0012               	return		;funcret
 30750  01BF12                     __end_of_TMR3_SetInterruptHandler:
 30751                           	opt callstack 0
 30752                           
 30753 ;; *************** function _TMR2_Initialize *****************
 30754 ;; Defined at:
 30755 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 30756 ;; Parameters:    Size  Location     Type
 30757 ;;		None
 30758 ;; Auto vars:     Size  Location     Type
 30759 ;;		None
 30760 ;; Return value:  Size  Location     Type
 30761 ;;                  1  [STACK] void 
 30762 ;; Registers used:
 30763 ;;		wreg, status,2
 30764 ;; Tracked objects:
 30765 ;;		On entry : 0/3E
 30766 ;;		On exit  : 3F/39
 30767 ;;		Unchanged: 0/0
 30768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30773 ;;Total ram usage:        0 bytes
 30774 ;; Hardware stack levels used:    1
 30775 ;; Hardware stack levels required when called:   15
 30776 ;; This function calls:
 30777 ;;		Nothing
 30778 ;; This function is called by:
 30779 ;;		_SYSTEM_Initialize
 30780 ;; This function uses a reentrant model
 30781 ;;
 30782                           
 30783                           	psect	text123
 30784  01C286                     __ptext123:
 30785                           	opt callstack 0
 30786  01C286                     _TMR2_Initialize:
 30787                           	opt callstack 14
 30788                           
 30789                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 30790                           
 30791                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30792                           ;incstack = 0
 30793  01C286  0E01               	movlw	1
 30794  01C288  6EAE               	movwf	174,c	;volatile
 30795                           
 30796                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 30797  01C28A  6AAD               	clrf	173,c	;volatile
 30798                           
 30799                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 30800  01C28C  6AAF               	clrf	175,c	;volatile
 30801                           
 30802                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 30803  01C28E  0E63               	movlw	99
 30804  01C290  6EAB               	movwf	171,c	;volatile
 30805                           
 30806                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 30807  01C292  6AAA               	clrf	170,c	;volatile
 30808                           
 30809                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 30810  01C294  0139               	movlb	57	; () banked
 30811  01C296  95A4               	bcf	164,2,b	;volatile
 30812                           
 30813                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 30814  01C298  0EC0               	movlw	192
 30815  01C29A  6EAC               	movwf	172,c	;volatile
 30816                           
 30817                           ; BSR set to: 57
 30818                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30819  01C29C  0012               	return		;funcret
 30820  01C29E                     __end_of_TMR2_Initialize:
 30821                           	opt callstack 0
 30822                           
 30823 ;; *************** function _SPI1_Initialize *****************
 30824 ;; Defined at:
 30825 ;;		line 64 in file "mcc_generated_files/spi1.c"
 30826 ;; Parameters:    Size  Location     Type
 30827 ;;		None
 30828 ;; Auto vars:     Size  Location     Type
 30829 ;;		None
 30830 ;; Return value:  Size  Location     Type
 30831 ;;                  1  [STACK] void 
 30832 ;; Registers used:
 30833 ;;		wreg, status,2
 30834 ;; Tracked objects:
 30835 ;;		On entry : 3F/39
 30836 ;;		On exit  : 3F/3D
 30837 ;;		Unchanged: 0/0
 30838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30843 ;;Total ram usage:        0 bytes
 30844 ;; Hardware stack levels used:    1
 30845 ;; Hardware stack levels required when called:   15
 30846 ;; This function calls:
 30847 ;;		Nothing
 30848 ;; This function is called by:
 30849 ;;		_SYSTEM_Initialize
 30850 ;; This function uses a reentrant model
 30851 ;;
 30852                           
 30853                           	psect	text124
 30854  01C29E                     __ptext124:
 30855                           	opt callstack 0
 30856  01C29E                     _SPI1_Initialize:
 30857                           	opt callstack 14
 30858                           
 30859                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 30860                           
 30861                           ; BSR set to: 57
 30862                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30863                           ;incstack = 0
 30864  01C29E  0E40               	movlw	64
 30865  01C2A0  013D               	movlb	61	; () banked
 30866  01C2A2  6F15               	movwf	21,b	;volatile
 30867                           
 30868                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 30869  01C2A4  0E03               	movlw	3
 30870  01C2A6  6F16               	movwf	22,b	;volatile
 30871                           
 30872                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 30873  01C2A8  0E4F               	movlw	79
 30874  01C2AA  6F19               	movwf	25,b	;volatile
 30875                           
 30876                           ; BSR set to: 61
 30877                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 30878  01C2AC  6B1C               	clrf	28,b	;volatile
 30879                           
 30880                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 30881  01C2AE  0E83               	movlw	131
 30882  01C2B0  6F14               	movwf	20,b	;volatile
 30883                           
 30884                           ; BSR set to: 61
 30885                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30886  01C2B2  0012               	return		;funcret
 30887  01C2B4                     __end_of_SPI1_Initialize:
 30888                           	opt callstack 0
 30889                           
 30890 ;; *************** function _PWM8_Initialize *****************
 30891 ;; Defined at:
 30892 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 30893 ;; Parameters:    Size  Location     Type
 30894 ;;		None
 30895 ;; Auto vars:     Size  Location     Type
 30896 ;;		None
 30897 ;; Return value:  Size  Location     Type
 30898 ;;                  1  [STACK] void 
 30899 ;; Registers used:
 30900 ;;		wreg, status,2
 30901 ;; Tracked objects:
 30902 ;;		On entry : 3F/39
 30903 ;;		On exit  : 3F/3F
 30904 ;;		Unchanged: 0/0
 30905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30910 ;;Total ram usage:        0 bytes
 30911 ;; Hardware stack levels used:    1
 30912 ;; Hardware stack levels required when called:   15
 30913 ;; This function calls:
 30914 ;;		Nothing
 30915 ;; This function is called by:
 30916 ;;		_SYSTEM_Initialize
 30917 ;; This function uses a reentrant model
 30918 ;;
 30919                           
 30920                           	psect	text125
 30921  01C2B4                     __ptext125:
 30922                           	opt callstack 0
 30923  01C2B4                     _PWM8_Initialize:
 30924                           	opt callstack 14
 30925                           
 30926                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 30927                           
 30928                           ; BSR set to: 61
 30929                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30930                           ;incstack = 0
 30931  01C2B4  0E80               	movlw	128
 30932  01C2B6  6E62               	movwf	98,c	;volatile
 30933                           
 30934                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 30935  01C2B8  6A61               	clrf	97,c	;volatile
 30936                           
 30937                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 30938  01C2BA  0E40               	movlw	64
 30939  01C2BC  6E60               	movwf	96,c	;volatile
 30940                           
 30941                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 30942  01C2BE  013F               	movlb	63	; () banked
 30943  01C2C0  515F               	movf	95,w,b	;volatile
 30944  01C2C2  0B3F               	andlw	-193
 30945  01C2C4  0940               	iorlw	64
 30946  01C2C6  6F5F               	movwf	95,b	;volatile
 30947                           
 30948                           ; BSR set to: 63
 30949                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30950  01C2C8  0012               	return		;funcret
 30951  01C2CA                     __end_of_PWM8_Initialize:
 30952                           	opt callstack 0
 30953                           
 30954 ;; *************** function _PMD_Initialize *****************
 30955 ;; Defined at:
 30956 ;;		line 90 in file "mcc_generated_files/mcc.c"
 30957 ;; Parameters:    Size  Location     Type
 30958 ;;		None
 30959 ;; Auto vars:     Size  Location     Type
 30960 ;;		None
 30961 ;; Return value:  Size  Location     Type
 30962 ;;                  1  [STACK] void 
 30963 ;; Registers used:
 30964 ;;		None
 30965 ;; Tracked objects:
 30966 ;;		On entry : 3F/39
 30967 ;;		On exit  : 3F/39
 30968 ;;		Unchanged: 0/0
 30969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30974 ;;Total ram usage:        0 bytes
 30975 ;; Hardware stack levels used:    1
 30976 ;; Hardware stack levels required when called:   15
 30977 ;; This function calls:
 30978 ;;		Nothing
 30979 ;; This function is called by:
 30980 ;;		_SYSTEM_Initialize
 30981 ;; This function uses a reentrant model
 30982 ;;
 30983                           
 30984                           	psect	text126
 30985  01C2E0                     __ptext126:
 30986                           	opt callstack 0
 30987  01C2E0                     _PMD_Initialize:
 30988                           	opt callstack 14
 30989                           
 30990                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 30991                           
 30992                           ; BSR set to: 63
 30993                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30994                           ;incstack = 0
 30995  01C2E0  0139               	movlb	57	; () banked
 30996  01C2E2  6BC0               	clrf	192,b	;volatile
 30997                           
 30998                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 30999  01C2E4  6BC1               	clrf	193,b	;volatile
 31000                           
 31001                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 31002  01C2E6  6BC2               	clrf	194,b	;volatile
 31003                           
 31004                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 31005  01C2E8  6BC3               	clrf	195,b	;volatile
 31006                           
 31007                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 31008  01C2EA  6BC4               	clrf	196,b	;volatile
 31009                           
 31010                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 31011  01C2EC  6BC5               	clrf	197,b	;volatile
 31012                           
 31013                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 31014  01C2EE  6BC6               	clrf	198,b	;volatile
 31015                           
 31016                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 31017  01C2F0  6BC7               	clrf	199,b	;volatile
 31018                           
 31019                           ; BSR set to: 57
 31020                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 31021  01C2F2  0012               	return		;funcret
 31022  01C2F4                     __end_of_PMD_Initialize:
 31023                           	opt callstack 0
 31024                           
 31025 ;; *************** function _PIN_MANAGER_Initialize *****************
 31026 ;; Defined at:
 31027 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 31028 ;; Parameters:    Size  Location     Type
 31029 ;;		None
 31030 ;; Auto vars:     Size  Location     Type
 31031 ;;		None
 31032 ;; Return value:  Size  Location     Type
 31033 ;;                  1  [STACK] void 
 31034 ;; Registers used:
 31035 ;;		wreg, status,2
 31036 ;; Tracked objects:
 31037 ;;		On entry : 3F/39
 31038 ;;		On exit  : 3F/3A
 31039 ;;		Unchanged: 0/0
 31040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31045 ;;Total ram usage:        0 bytes
 31046 ;; Hardware stack levels used:    1
 31047 ;; Hardware stack levels required when called:   15
 31048 ;; This function calls:
 31049 ;;		Nothing
 31050 ;; This function is called by:
 31051 ;;		_SYSTEM_Initialize
 31052 ;; This function uses a reentrant model
 31053 ;;
 31054                           
 31055                           	psect	text127
 31056  01AD00                     __ptext127:
 31057                           	opt callstack 0
 31058  01AD00                     _PIN_MANAGER_Initialize:
 31059                           	opt callstack 14
 31060                           
 31061                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 31062                           
 31063                           ; BSR set to: 57
 31064                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31065                           ;incstack = 0
 31066  01AD00  0E07               	movlw	7
 31067  01AD02  6EBE               	movwf	190,c	;volatile
 31068                           
 31069                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 31070  01AD04  6ABD               	clrf	189,c	;volatile
 31071                           
 31072                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 31073  01AD06  6ABA               	clrf	186,c	;volatile
 31074                           
 31075                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x23;
 31076  01AD08  0E23               	movlw	35
 31077  01AD0A  6EBF               	movwf	191,c	;volatile
 31078                           
 31079                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 31080  01AD0C  6ABB               	clrf	187,c	;volatile
 31081                           
 31082                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 31083  01AD0E  0E07               	movlw	7
 31084  01AD10  6EBC               	movwf	188,c	;volatile
 31085                           
 31086                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 31087  01AD12  6AC6               	clrf	198,c	;volatile
 31088                           
 31089                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0C;
 31090  01AD14  0E0C               	movlw	12
 31091  01AD16  6EC7               	movwf	199,c	;volatile
 31092                           
 31093                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 31094  01AD18  68C2               	setf	194,c	;volatile
 31095                           
 31096                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 31097  01AD1A  0EBF               	movlw	191
 31098  01AD1C  6EC3               	movwf	195,c	;volatile
 31099                           
 31100                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 31101  01AD1E  0E90               	movlw	144
 31102  01AD20  6EC4               	movwf	196,c	;volatile
 31103                           
 31104                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 31105  01AD22  0E0C               	movlw	12
 31106  01AD24  6EC5               	movwf	197,c	;volatile
 31107                           
 31108                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 31109  01AD26  013A               	movlb	58	; () banked
 31110  01AD28  6B70               	clrf	112,b	;volatile
 31111                           
 31112                           ; BSR set to: 58
 31113                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 31114  01AD2A  6B60               	clrf	96,b	;volatile
 31115                           
 31116                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 31117  01AD2C  0E3C               	movlw	60
 31118  01AD2E  6F50               	movwf	80,b	;volatile
 31119                           
 31120                           ; BSR set to: 58
 31121                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 31122  01AD30  6B80               	clrf	128,b	;volatile
 31123                           
 31124                           ; BSR set to: 58
 31125                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 31126  01AD32  6B90               	clrf	144,b	;volatile
 31127                           
 31128                           ; BSR set to: 58
 31129                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 31130  01AD34  6940               	setf	64,b	;volatile
 31131                           
 31132                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 31133  01AD36  0E0C               	movlw	12
 31134  01AD38  6F71               	movwf	113,b	;volatile
 31135                           
 31136                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0C;
 31137  01AD3A  0E0C               	movlw	12
 31138  01AD3C  6F91               	movwf	145,b	;volatile
 31139                           
 31140                           ; BSR set to: 58
 31141                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 31142  01AD3E  6B81               	clrf	129,b	;volatile
 31143                           
 31144                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 31145  01AD40  0E83               	movlw	131
 31146  01AD42  6F51               	movwf	81,b	;volatile
 31147                           
 31148                           ; BSR set to: 58
 31149                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 31150  01AD44  6B41               	clrf	65,b	;volatile
 31151                           
 31152                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 31153  01AD46  0E97               	movlw	151
 31154  01AD48  6F61               	movwf	97,b	;volatile
 31155                           
 31156                           ; BSR set to: 58
 31157                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 31158  01AD4A  6B82               	clrf	130,b	;volatile
 31159                           
 31160                           ; BSR set to: 58
 31161                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 31162  01AD4C  6B92               	clrf	146,b	;volatile
 31163                           
 31164                           ; BSR set to: 58
 31165                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 31166  01AD4E  6B42               	clrf	66,b	;volatile
 31167                           
 31168                           ; BSR set to: 58
 31169                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 31170  01AD50  6B52               	clrf	82,b	;volatile
 31171                           
 31172                           ; BSR set to: 58
 31173                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 31174  01AD52  6B62               	clrf	98,b	;volatile
 31175                           
 31176                           ; BSR set to: 58
 31177                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 31178  01AD54  6B72               	clrf	114,b	;volatile
 31179                           
 31180                           ; BSR set to: 58
 31181                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 31182  01AD56  6943               	setf	67,b	;volatile
 31183                           
 31184                           ; BSR set to: 58
 31185                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 31186  01AD58  6953               	setf	83,b	;volatile
 31187                           
 31188                           ; BSR set to: 58
 31189                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 31190  01AD5A  6963               	setf	99,b	;volatile
 31191                           
 31192                           ; BSR set to: 58
 31193                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 31194  01AD5C  6973               	setf	115,b	;volatile
 31195                           
 31196                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 31197  01AD5E  0E07               	movlw	7
 31198  01AD60  6F83               	movwf	131,b	;volatile
 31199                           
 31200                           ; BSR set to: 58
 31201                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 31202  01AD62  6993               	setf	147,b	;volatile
 31203                           
 31204                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 31205  01AD64  0E0F               	movlw	15
 31206  01AD66  6FE8               	movwf	232,b	;volatile
 31207                           
 31208                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 31209  01AD68  0E13               	movlw	19
 31210  01AD6A  6FDE               	movwf	222,b	;volatile
 31211                           
 31212                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 31213  01AD6C  0E16               	movlw	22
 31214  01AD6E  6F0E               	movwf	14,b	;volatile
 31215                           
 31216                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 31217  01AD70  0E1E               	movlw	30
 31218  01AD72  6F13               	movwf	19,b	;volatile
 31219                           
 31220                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 31221  01AD74  0E08               	movlw	8
 31222  01AD76  6FC0               	movwf	192,b	;volatile
 31223                           
 31224                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 31225  01AD78  0E10               	movlw	16
 31226  01AD7A  6F19               	movwf	25,b	;volatile
 31227                           
 31228                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 31229  01AD7C  0E09               	movlw	9
 31230  01AD7E  6FC1               	movwf	193,b	;volatile
 31231                           
 31232                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 31233  01AD80  0E1F               	movlw	31
 31234  01AD82  6F15               	movwf	21,b	;volatile
 31235                           
 31236                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 31237  01AD84  0E13               	movlw	19
 31238  01AD86  6F16               	movwf	22,b	;volatile
 31239                           
 31240                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 31241  01AD88  0E17               	movlw	23
 31242  01AD8A  6FE5               	movwf	229,b	;volatile
 31243                           
 31244                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 31245  01AD8C  0E14               	movlw	20
 31246  01AD8E  6FDF               	movwf	223,b	;volatile
 31247                           
 31248                           ; BSR set to: 58
 31249                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 31250  01AD90  0012               	return		;funcret
 31251  01AD92                     __end_of_PIN_MANAGER_Initialize:
 31252                           	opt callstack 0
 31253                           
 31254 ;; *************** function _OSCILLATOR_Initialize *****************
 31255 ;; Defined at:
 31256 ;;		line 72 in file "mcc_generated_files/mcc.c"
 31257 ;; Parameters:    Size  Location     Type
 31258 ;;		None
 31259 ;; Auto vars:     Size  Location     Type
 31260 ;;		None
 31261 ;; Return value:  Size  Location     Type
 31262 ;;                  1  [STACK] void 
 31263 ;; Registers used:
 31264 ;;		wreg, status,2
 31265 ;; Tracked objects:
 31266 ;;		On entry : 3F/3A
 31267 ;;		On exit  : 3F/39
 31268 ;;		Unchanged: 0/0
 31269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31274 ;;Total ram usage:        0 bytes
 31275 ;; Hardware stack levels used:    1
 31276 ;; Hardware stack levels required when called:   15
 31277 ;; This function calls:
 31278 ;;		Nothing
 31279 ;; This function is called by:
 31280 ;;		_SYSTEM_Initialize
 31281 ;; This function uses a reentrant model
 31282 ;;
 31283                           
 31284                           	psect	text128
 31285  01C2CA                     __ptext128:
 31286                           	opt callstack 0
 31287  01C2CA                     _OSCILLATOR_Initialize:
 31288                           	opt callstack 14
 31289                           
 31290                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 31291                           
 31292                           ; BSR set to: 58
 31293                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31294                           ;incstack = 0
 31295  01C2CA  0E20               	movlw	32
 31296  01C2CC  0139               	movlb	57	; () banked
 31297  01C2CE  6FD9               	movwf	217,b	;volatile
 31298                           
 31299                           ; BSR set to: 57
 31300                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 31301  01C2D0  6BDB               	clrf	219,b	;volatile
 31302                           
 31303                           ; BSR set to: 57
 31304                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 31305  01C2D2  6BDD               	clrf	221,b	;volatile
 31306                           
 31307                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 31308  01C2D4  0E02               	movlw	2
 31309  01C2D6  6FDF               	movwf	223,b	;volatile
 31310                           
 31311                           ; BSR set to: 57
 31312                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 31313  01C2D8  6BDE               	clrf	222,b	;volatile
 31314  01C2DA                     l169:
 31315                           
 31316                           ; BSR set to: 57
 31317                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 31318  01C2DA  B1DC               	btfsc	220,0,b	;volatile
 31319  01C2DC  0012               	return	
 31320  01C2DE  D7FD               	goto	l169
 31321  01C2E0                     __end_of_OSCILLATOR_Initialize:
 31322                           	opt callstack 0
 31323                           
 31324 ;; *************** function _INTERRUPT_Initialize *****************
 31325 ;; Defined at:
 31326 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 31327 ;; Parameters:    Size  Location     Type
 31328 ;;		None
 31329 ;; Auto vars:     Size  Location     Type
 31330 ;;  state           1  [STACK] _Bool 
 31331 ;; Return value:  Size  Location     Type
 31332 ;;                  1  [STACK] void 
 31333 ;; Registers used:
 31334 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 31335 ;; Tracked objects:
 31336 ;;		On entry : 0/0
 31337 ;;		On exit  : 3F/39
 31338 ;;		Unchanged: 0/0
 31339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31344 ;;Total ram usage:        0 bytes
 31345 ;; Hardware stack levels used:    1
 31346 ;; Hardware stack levels required when called:   15
 31347 ;; This function calls:
 31348 ;;		Nothing
 31349 ;; This function is called by:
 31350 ;;		_SYSTEM_Initialize
 31351 ;; This function uses a reentrant model
 31352 ;;
 31353                           
 31354                           	psect	text129
 31355  01B23E                     __ptext129:
 31356                           	opt callstack 0
 31357  01B23E                     _INTERRUPT_Initialize:
 31358                           	opt callstack 0
 31359                           
 31360                           ; BSR set to: 57
 31361                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31362  01B23E  52E6               	movf	postinc1,f,c
 31363                           
 31364                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 31365                           
 31366                           ;incstack = 0
 31367  01B240  8AD2               	bsf	210,5,c	;volatile
 31368                           
 31369                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 31370  01B242  AED2               	btfss	16338,7,c	;volatile
 31371  01B244  D003               	goto	u9480
 31372  01B246  6A0C               	clrf	(btemp+11)^0,c
 31373  01B248  2A0C               	incf	(btemp+11)^0,f,c
 31374  01B24A  D001               	goto	u9498
 31375  01B24C                     u9480:
 31376  01B24C  6A0C               	clrf	(btemp+11)^0,c
 31377  01B24E                     u9498:
 31378                           
 31379                           ;stkvar	_state @ sp[(-1)+0]
 31380  01B24E  0EFF               	movlw	-1
 31381  01B250  0060  F033  FFE3   	movff	btemp+11,plusw1
 31382                           
 31383                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 31384  01B256  9ED2               	bcf	16338,7,c	;volatile
 31385                           
 31386                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 31387  01B258  0E55               	movlw	85
 31388  01B25A  6ED4               	movwf	212,c	;volatile
 31389                           
 31390                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 31391  01B25C  0EAA               	movlw	170
 31392  01B25E  6ED4               	movwf	212,c	;volatile
 31393                           
 31394                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 31395  01B260  90D4               	bcf	212,0,c	;volatile
 31396                           
 31397                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 31398  01B262  0138               	movlb	56	; () banked
 31399  01B264  6B9F               	clrf	159,b	;volatile
 31400                           
 31401                           ; BSR set to: 56
 31402                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 31403  01B266  6B9E               	clrf	158,b	;volatile
 31404                           
 31405                           ; BSR set to: 56
 31406                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 31407  01B268  0E08               	movlw	8
 31408  01B26A  6F9D               	movwf	157,b	;volatile
 31409                           
 31410                           ; BSR set to: 56
 31411                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 31412  01B26C  0E55               	movlw	85
 31413  01B26E  6ED4               	movwf	212,c	;volatile
 31414                           
 31415                           ; BSR set to: 56
 31416                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 31417  01B270  0EAA               	movlw	170
 31418  01B272  6ED4               	movwf	212,c	;volatile
 31419                           
 31420                           ; BSR set to: 56
 31421                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 31422  01B274  80D4               	bsf	212,0,c	;volatile
 31423                           
 31424                           ; BSR set to: 56
 31425                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 31426                           ;stkvar	_state @ sp[(-1)+0]
 31427  01B276  0EFF               	movlw	-1
 31428  01B278  B0E3               	btfsc	plusw1,0,c
 31429  01B27A  D002               	bra	u9505
 31430  01B27C  9ED2               	bcf	16338,7,c	;volatile
 31431  01B27E  D001               	bra	u9506
 31432  01B280                     u9505:
 31433  01B280  8ED2               	bsf	16338,7,c	;volatile
 31434  01B282                     u9506:
 31435                           
 31436                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 31437  01B282  0139               	movlb	57	; () banked
 31438  01B284  8782               	bsf	130,3,b	;volatile
 31439                           
 31440                           ; BSR set to: 57
 31441                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 31442  01B286  8382               	bsf	130,1,b	;volatile
 31443                           
 31444                           ; BSR set to: 57
 31445                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 31446  01B288  8182               	bsf	130,0,b	;volatile
 31447                           
 31448                           ; BSR set to: 57
 31449                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 31450  01B28A  8582               	bsf	130,2,b	;volatile
 31451                           
 31452                           ; BSR set to: 57
 31453                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 31454  01B28C  8786               	bsf	134,3,b	;volatile
 31455                           
 31456                           ; BSR set to: 57
 31457                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 31458  01B28E  8586               	bsf	134,2,b	;volatile
 31459                           
 31460                           ; BSR set to: 57
 31461                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 31462  01B290  8783               	bsf	131,3,b	;volatile
 31463                           
 31464                           ; BSR set to: 57
 31465                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 31466  01B292  8181               	bsf	129,0,b	;volatile
 31467                           
 31468                           ; BSR set to: 57
 31469                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 31470  01B294  9185               	bcf	133,0,b	;volatile
 31471                           
 31472                           ; BSR set to: 57
 31473                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 31474  01B296  8189               	bsf	137,0,b	;volatile
 31475                           
 31476                           ; BSR set to: 57
 31477                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 31478  01B298  9D88               	bcf	136,6,b	;volatile
 31479                           
 31480                           ; BSR set to: 57
 31481                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 31482  01B29A  9D86               	bcf	134,6,b	;volatile
 31483                           
 31484                           ; BSR set to: 57
 31485                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 31486  01B29C  8581               	bsf	129,2,b	;volatile
 31487                           
 31488                           ; BSR set to: 57
 31489                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 31490  01B29E  8781               	bsf	129,3,b	;volatile
 31491                           
 31492                           ; BSR set to: 57
 31493                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 31494  01B2A0  52E5               	movf	postdec1,f,c
 31495  01B2A2  0012               	return		;funcret
 31496  01B2A4                     __end_of_INTERRUPT_Initialize:
 31497                           	opt callstack 0
 31498                           
 31499 ;; *************** function _FVR_Initialize *****************
 31500 ;; Defined at:
 31501 ;;		line 58 in file "mcc_generated_files/fvr.c"
 31502 ;; Parameters:    Size  Location     Type
 31503 ;;		None
 31504 ;; Auto vars:     Size  Location     Type
 31505 ;;		None
 31506 ;; Return value:  Size  Location     Type
 31507 ;;                  1  [STACK] void 
 31508 ;; Registers used:
 31509 ;;		wreg, status,2
 31510 ;; Tracked objects:
 31511 ;;		On entry : 3F/39
 31512 ;;		On exit  : 3F/3E
 31513 ;;		Unchanged: 0/0
 31514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31519 ;;Total ram usage:        0 bytes
 31520 ;; Hardware stack levels used:    1
 31521 ;; Hardware stack levels required when called:   15
 31522 ;; This function calls:
 31523 ;;		Nothing
 31524 ;; This function is called by:
 31525 ;;		_SYSTEM_Initialize
 31526 ;; This function uses a reentrant model
 31527 ;;
 31528                           
 31529                           	psect	text130
 31530  01C3EA                     __ptext130:
 31531                           	opt callstack 0
 31532  01C3EA                     _FVR_Initialize:
 31533                           	opt callstack 14
 31534                           
 31535                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 31536                           
 31537                           ; BSR set to: 57
 31538                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31539                           ;incstack = 0
 31540  01C3EA  0EAF               	movlw	175
 31541  01C3EC  013E               	movlb	62	; () banked
 31542  01C3EE  6FC1               	movwf	193,b	;volatile
 31543                           
 31544                           ; BSR set to: 62
 31545                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 31546  01C3F0  0012               	return		;funcret
 31547  01C3F2                     __end_of_FVR_Initialize:
 31548                           	opt callstack 0
 31549                           
 31550 ;; *************** function _EXT_INT_Initialize *****************
 31551 ;; Defined at:
 31552 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 31553 ;; Parameters:    Size  Location     Type
 31554 ;;		None
 31555 ;; Auto vars:     Size  Location     Type
 31556 ;;		None
 31557 ;; Return value:  Size  Location     Type
 31558 ;;                  1  [STACK] void 
 31559 ;; Registers used:
 31560 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31561 ;; Tracked objects:
 31562 ;;		On entry : 3F/3F
 31563 ;;		On exit  : 3F/39
 31564 ;;		Unchanged: 0/0
 31565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31570 ;;Total ram usage:        0 bytes
 31571 ;; Hardware stack levels used:    1
 31572 ;; Hardware stack levels required when called:   16
 31573 ;; This function calls:
 31574 ;;		_INT0_SetInterruptHandler
 31575 ;;		_INT1_SetInterruptHandler
 31576 ;; This function is called by:
 31577 ;;		_SYSTEM_Initialize
 31578 ;; This function uses a reentrant model
 31579 ;;
 31580                           
 31581                           	psect	text131
 31582  01BC00                     __ptext131:
 31583                           	opt callstack 0
 31584  01BC00                     _EXT_INT_Initialize:
 31585                           	opt callstack 13
 31586                           
 31587                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 31588                           
 31589                           ; BSR set to: 62
 31590                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31591                           ;incstack = 0
 31592  01BC00  0139               	movlb	57	; () banked
 31593  01BC02  91A1               	bcf	161,0,b	;volatile
 31594                           
 31595                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 31596  01BC04  90D2               	bcf	210,0,c	;volatile
 31597                           
 31598                           ; BSR set to: 57
 31599                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 31600  01BC06  0E16               	movlw	low _INT0_DefaultInterruptHandler
 31601  01BC08  6EE6               	movwf	postinc1,c
 31602  01BC0A  0EC4               	movlw	high _INT0_DefaultInterruptHandler
 31603  01BC0C  6EE6               	movwf	postinc1,c
 31604  01BC0E  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 31605  01BC10  6EE6               	movwf	postinc1,c
 31606  01BC12  EC9D  F0DF         	call	_INT0_SetInterruptHandler	;wreg free
 31607                           
 31608                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 31609  01BC16  0139               	movlb	57	; () banked
 31610  01BC18  8191               	bsf	145,0,b	;volatile
 31611                           
 31612                           ; BSR set to: 57
 31613                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 31614  01BC1A  91A5               	bcf	165,0,b	;volatile
 31615                           
 31616                           ; BSR set to: 57
 31617                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 31618  01BC1C  92D2               	bcf	210,1,c	;volatile
 31619                           
 31620                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 31621  01BC1E  0E12               	movlw	low _INT1_DefaultInterruptHandler
 31622  01BC20  6EE6               	movwf	postinc1,c
 31623  01BC22  0EC4               	movlw	high _INT1_DefaultInterruptHandler
 31624  01BC24  6EE6               	movwf	postinc1,c
 31625  01BC26  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 31626  01BC28  6EE6               	movwf	postinc1,c
 31627  01BC2A  EC89  F0DF         	call	_INT1_SetInterruptHandler	;wreg free
 31628                           
 31629                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 31630  01BC2E  0139               	movlb	57	; () banked
 31631  01BC30  8195               	bsf	149,0,b	;volatile
 31632                           
 31633                           ; BSR set to: 57
 31634                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 31635  01BC32  0012               	return		;funcret
 31636  01BC34                     __end_of_EXT_INT_Initialize:
 31637                           	opt callstack 0
 31638                           
 31639 ;; *************** function _INT1_SetInterruptHandler *****************
 31640 ;; Defined at:
 31641 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 31642 ;; Parameters:    Size  Location     Type
 31643 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31644 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 31645 ;; Auto vars:     Size  Location     Type
 31646 ;;		None
 31647 ;; Return value:  Size  Location     Type
 31648 ;;                  1  [STACK] void 
 31649 ;; Registers used:
 31650 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31651 ;; Tracked objects:
 31652 ;;		On entry : 3F/39
 31653 ;;		On exit  : 0/0
 31654 ;;		Unchanged: 0/0
 31655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31660 ;;Total ram usage:        0 bytes
 31661 ;; Hardware stack levels used:    1
 31662 ;; Hardware stack levels required when called:   15
 31663 ;; This function calls:
 31664 ;;		Nothing
 31665 ;; This function is called by:
 31666 ;;		_EXT_INT_Initialize
 31667 ;;		_start_switch_handler
 31668 ;; This function uses a reentrant model
 31669 ;;
 31670                           
 31671                           	psect	text132
 31672  01BF12                     __ptext132:
 31673                           	opt callstack 0
 31674  01BF12                     _INT1_SetInterruptHandler:
 31675                           	opt callstack 14
 31676                           
 31677                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 31678                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31679                           
 31680                           ; BSR set to: 57
 31681                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31682                           ;incstack = 0
 31683  01BF12  50E1               	movf	fsr1l,w,c
 31684  01BF14  0FFD               	addlw	-3
 31685  01BF16  6ED9               	movwf	fsr2l,c
 31686  01BF18  50E2               	movf	fsr1h,w,c
 31687  01BF1A  6EDA               	movwf	fsr2h,c
 31688  01BF1C  0EFF               	movlw	255
 31689  01BF1E  22DA               	addwfc	fsr2h,f,c
 31690  01BF20  006F FF78  F094    	movff	postinc2,_INT1_InterruptHandler
 31691  01BF26  006F FF78  F095    	movff	postinc2,_INT1_InterruptHandler+1
 31692  01BF2C  006F FF74  F096    	movff	postdec2,_INT1_InterruptHandler+2
 31693                           
 31694                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 31695  01BF32  52E5               	movf	postdec1,f,c
 31696  01BF34  52E5               	movf	postdec1,f,c
 31697  01BF36  52E5               	movf	postdec1,f,c
 31698  01BF38  0012               	return		;funcret
 31699  01BF3A                     __end_of_INT1_SetInterruptHandler:
 31700                           	opt callstack 0
 31701                           
 31702 ;; *************** function _INT0_SetInterruptHandler *****************
 31703 ;; Defined at:
 31704 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 31705 ;; Parameters:    Size  Location     Type
 31706 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31707 ;;		 -> INT0_DefaultInterruptHandler(1), 
 31708 ;; Auto vars:     Size  Location     Type
 31709 ;;		None
 31710 ;; Return value:  Size  Location     Type
 31711 ;;                  1  [STACK] void 
 31712 ;; Registers used:
 31713 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31714 ;; Tracked objects:
 31715 ;;		On entry : 3F/39
 31716 ;;		On exit  : 0/0
 31717 ;;		Unchanged: 0/0
 31718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31723 ;;Total ram usage:        0 bytes
 31724 ;; Hardware stack levels used:    1
 31725 ;; Hardware stack levels required when called:   15
 31726 ;; This function calls:
 31727 ;;		Nothing
 31728 ;; This function is called by:
 31729 ;;		_EXT_INT_Initialize
 31730 ;; This function uses a reentrant model
 31731 ;;
 31732                           
 31733                           	psect	text133
 31734  01BF3A                     __ptext133:
 31735                           	opt callstack 0
 31736  01BF3A                     _INT0_SetInterruptHandler:
 31737                           	opt callstack 13
 31738                           
 31739                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 31740                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31741                           
 31742                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31743                           ;incstack = 0
 31744  01BF3A  50E1               	movf	fsr1l,w,c
 31745  01BF3C  0FFD               	addlw	-3
 31746  01BF3E  6ED9               	movwf	fsr2l,c
 31747  01BF40  50E2               	movf	fsr1h,w,c
 31748  01BF42  6EDA               	movwf	fsr2h,c
 31749  01BF44  0EFF               	movlw	255
 31750  01BF46  22DA               	addwfc	fsr2h,f,c
 31751  01BF48  006F FF78  F097    	movff	postinc2,_INT0_InterruptHandler
 31752  01BF4E  006F FF78  F098    	movff	postinc2,_INT0_InterruptHandler+1
 31753  01BF54  006F FF74  F099    	movff	postdec2,_INT0_InterruptHandler+2
 31754                           
 31755                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 31756  01BF5A  52E5               	movf	postdec1,f,c
 31757  01BF5C  52E5               	movf	postdec1,f,c
 31758  01BF5E  52E5               	movf	postdec1,f,c
 31759  01BF60  0012               	return		;funcret
 31760  01BF62                     __end_of_INT0_SetInterruptHandler:
 31761                           	opt callstack 0
 31762                           
 31763 ;; *************** function _DMA2_Initialize *****************
 31764 ;; Defined at:
 31765 ;;		line 61 in file "mcc_generated_files/dma2.c"
 31766 ;; Parameters:    Size  Location     Type
 31767 ;;		None
 31768 ;; Auto vars:     Size  Location     Type
 31769 ;;		None
 31770 ;; Return value:  Size  Location     Type
 31771 ;;                  1  [STACK] void 
 31772 ;; Registers used:
 31773 ;;		wreg, status,2
 31774 ;; Tracked objects:
 31775 ;;		On entry : 3F/3D
 31776 ;;		On exit  : 3F/3B
 31777 ;;		Unchanged: 0/0
 31778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31783 ;;Total ram usage:        0 bytes
 31784 ;; Hardware stack levels used:    1
 31785 ;; Hardware stack levels required when called:   15
 31786 ;; This function calls:
 31787 ;;		Nothing
 31788 ;; This function is called by:
 31789 ;;		_SYSTEM_Initialize
 31790 ;; This function uses a reentrant model
 31791 ;;
 31792                           
 31793                           	psect	text134
 31794  01B4E0                     __ptext134:
 31795                           	opt callstack 0
 31796  01B4E0                     _DMA2_Initialize:
 31797                           	opt callstack 14
 31798                           
 31799                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 31800                           
 31801                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31802                           ;incstack = 0
 31803  01B4E0  0E00               	movlw	0
 31804  01B4E2  013B               	movlb	59	; () banked
 31805  01B4E4  6FD9               	movwf	217,b	;volatile
 31806  01B4E6  0E10               	movlw	16
 31807  01B4E8  6FDA               	movwf	218,b	;volatile
 31808  01B4EA  0E00               	movlw	0
 31809  01B4EC  6FDB               	movwf	219,b	;volatile
 31810                           
 31811                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 31812  01B4EE  0E3F               	movlw	63
 31813  01B4F0  6FD1               	movwf	209,b	;volatile
 31814  01B4F2  0EBB               	movlw	187
 31815  01B4F4  6FD0               	movwf	208,b	;volatile
 31816                           
 31817                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 31818  01B4F6  0E03               	movlw	3
 31819  01B4F8  6FDD               	movwf	221,b	;volatile
 31820                           
 31821                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 31822  01B4FA  0E00               	movlw	0
 31823  01B4FC  6FD8               	movwf	216,b	;volatile
 31824  01B4FE  0E01               	movlw	1
 31825  01B500  6FD7               	movwf	215,b	;volatile
 31826                           
 31827                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 31828  01B502  0E00               	movlw	0
 31829  01B504  6FCF               	movwf	207,b	;volatile
 31830  01B506  0E01               	movlw	1
 31831  01B508  6FCE               	movwf	206,b	;volatile
 31832                           
 31833                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 31834  01B50A  0E1C               	movlw	28
 31835  01B50C  6FDF               	movwf	223,b	;volatile
 31836                           
 31837                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 31838  01B50E  0E3D               	movlw	61
 31839  01B510  6FDE               	movwf	222,b	;volatile
 31840                           
 31841                           ; BSR set to: 59
 31842                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 31843  01B512  0139               	movlb	57	; () banked
 31844  01B514  97A5               	bcf	165,3,b	;volatile
 31845                           
 31846                           ; BSR set to: 57
 31847                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 31848  01B516  95A5               	bcf	165,2,b	;volatile
 31849                           
 31850                           ; BSR set to: 57
 31851                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 31852  01B518  9BA5               	bcf	165,5,b	;volatile
 31853                           
 31854                           ; BSR set to: 57
 31855                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 31856  01B51A  99A5               	bcf	165,4,b	;volatile
 31857                           
 31858                           ; BSR set to: 57
 31859                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 31860  01B51C  9795               	bcf	149,3,b	;volatile
 31861                           
 31862                           ; BSR set to: 57
 31863                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 31864  01B51E  9595               	bcf	149,2,b	;volatile
 31865                           
 31866                           ; BSR set to: 57
 31867                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 31868  01B520  9B95               	bcf	149,5,b	;volatile
 31869                           
 31870                           ; BSR set to: 57
 31871                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 31872  01B522  9995               	bcf	149,4,b	;volatile
 31873  01B524  9ED2               	bcf	16338,7,c	;# 
 31874  01B526  0139               	banksel	14831	;# 
 31875  01B528  0E55               	movlw	85	;# 
 31876  01B52A  6FEF               	movwf	14831,b	;# 
 31877  01B52C  0EAA               	movlw	170	;# 
 31878  01B52E  6FEF               	movwf	14831,b	;# 
 31879  01B530  81EF               	bsf	14831,0,b	;# 
 31880  01B532  8ED2               	bsf	16338,7,c	;# 
 31881                           
 31882                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 31883  01B534  013B               	movlb	59	; () banked
 31884  01B536  6BDC               	clrf	220,b	;volatile
 31885                           
 31886                           ; BSR set to: 59
 31887                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31888  01B538  0012               	return		;funcret
 31889  01B53A                     __end_of_DMA2_Initialize:
 31890                           	opt callstack 0
 31891                           
 31892 ;; *************** function _DMA1_Initialize *****************
 31893 ;; Defined at:
 31894 ;;		line 86 in file "mcc_generated_files/dma1.c"
 31895 ;; Parameters:    Size  Location     Type
 31896 ;;		None
 31897 ;; Auto vars:     Size  Location     Type
 31898 ;;		None
 31899 ;; Return value:  Size  Location     Type
 31900 ;;                  1  [STACK] void 
 31901 ;; Registers used:
 31902 ;;		wreg, status,2
 31903 ;; Tracked objects:
 31904 ;;		On entry : 3F/3B
 31905 ;;		On exit  : 3F/3B
 31906 ;;		Unchanged: 0/0
 31907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31912 ;;Total ram usage:        0 bytes
 31913 ;; Hardware stack levels used:    1
 31914 ;; Hardware stack levels required when called:   15
 31915 ;; This function calls:
 31916 ;;		Nothing
 31917 ;; This function is called by:
 31918 ;;		_SYSTEM_Initialize
 31919 ;; This function uses a reentrant model
 31920 ;;
 31921                           
 31922                           	psect	text135
 31923  01B0FE                     __ptext135:
 31924                           	opt callstack 0
 31925  01B0FE                     _DMA1_Initialize:
 31926                           	opt callstack 14
 31927                           
 31928                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 31929                           
 31930                           ; BSR set to: 59
 31931                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31932                           ;incstack = 0
 31933  01B0FE  0E00               	movlw	0
 31934  01B100  013B               	movlb	59	; () banked
 31935  01B102  6FF9               	movwf	249,b	;volatile
 31936  01B104  0E10               	movlw	16
 31937  01B106  6FFA               	movwf	250,b	;volatile
 31938  01B108  0E00               	movlw	0
 31939  01B10A  6FFB               	movwf	251,b	;volatile
 31940                           
 31941                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 31942  01B10C  0E3D               	movlw	61
 31943  01B10E  6FF1               	movwf	241,b	;volatile
 31944  01B110  0E11               	movlw	17
 31945  01B112  6FF0               	movwf	240,b	;volatile
 31946                           
 31947                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 31948  01B114  0E03               	movlw	3
 31949  01B116  6FFD               	movwf	253,b	;volatile
 31950                           
 31951                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 31952  01B118  0E00               	movlw	0
 31953  01B11A  6FF8               	movwf	248,b	;volatile
 31954  01B11C  0E01               	movlw	1
 31955  01B11E  6FF7               	movwf	247,b	;volatile
 31956                           
 31957                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 31958  01B120  0E00               	movlw	0
 31959  01B122  6FEF               	movwf	239,b	;volatile
 31960  01B124  0E01               	movlw	1
 31961  01B126  6FEE               	movwf	238,b	;volatile
 31962                           
 31963                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 31964  01B128  0E15               	movlw	21
 31965  01B12A  6FFF               	movwf	255,b	;volatile
 31966                           
 31967                           ; BSR set to: 59
 31968                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 31969  01B12C  6BFE               	clrf	254,b	;volatile
 31970                           
 31971                           ; BSR set to: 59
 31972                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 31973  01B12E  0139               	movlb	57	; () banked
 31974  01B130  93A2               	bcf	162,1,b	;volatile
 31975                           
 31976                           ; BSR set to: 57
 31977                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 31978  01B132  91A2               	bcf	162,0,b	;volatile
 31979                           
 31980                           ; BSR set to: 57
 31981                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 31982  01B134  97A2               	bcf	162,3,b	;volatile
 31983                           
 31984                           ; BSR set to: 57
 31985                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 31986  01B136  95A2               	bcf	162,2,b	;volatile
 31987                           
 31988                           ; BSR set to: 57
 31989                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 31990  01B138  8392               	bsf	146,1,b	;volatile
 31991                           
 31992                           ; BSR set to: 57
 31993                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 31994  01B13A  8192               	bsf	146,0,b	;volatile
 31995                           
 31996                           ; BSR set to: 57
 31997                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 31998  01B13C  8792               	bsf	146,3,b	;volatile
 31999                           
 32000                           ; BSR set to: 57
 32001                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 32002  01B13E  8592               	bsf	146,2,b	;volatile
 32003                           
 32004                           ; BSR set to: 57
 32005                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 32006  01B140  6BF1               	clrf	241,b	;volatile
 32007                           
 32008                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 32009  01B142  0E01               	movlw	1
 32010  01B144  6FF2               	movwf	242,b	;volatile
 32011                           
 32012                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 32013  01B146  0E04               	movlw	4
 32014  01B148  6FF3               	movwf	243,b	;volatile
 32015                           
 32016                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 32017  01B14A  0E02               	movlw	2
 32018  01B14C  6FF4               	movwf	244,b	;volatile
 32019                           
 32020                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 32021  01B14E  0E03               	movlw	3
 32022  01B150  6FF7               	movwf	247,b	;volatile
 32023  01B152  9ED2               	bcf	16338,7,c	;# 
 32024  01B154  0139               	banksel	14831	;# 
 32025  01B156  0E55               	movlw	85	;# 
 32026  01B158  6FEF               	movwf	14831,b	;# 
 32027  01B15A  0EAA               	movlw	170	;# 
 32028  01B15C  6FEF               	movwf	14831,b	;# 
 32029  01B15E  81EF               	bsf	14831,0,b	;# 
 32030  01B160  8ED2               	bsf	16338,7,c	;# 
 32031                           
 32032                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 32033  01B162  013B               	movlb	59	; () banked
 32034  01B164  6BFC               	clrf	252,b	;volatile
 32035                           
 32036                           ; BSR set to: 59
 32037                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32038  01B166  0012               	return		;funcret
 32039  01B168                     __end_of_DMA1_Initialize:
 32040                           	opt callstack 0
 32041                           
 32042 ;; *************** function _CLKREF_Initialize *****************
 32043 ;; Defined at:
 32044 ;;		line 58 in file "mcc_generated_files/clkref.c"
 32045 ;; Parameters:    Size  Location     Type
 32046 ;;		None
 32047 ;; Auto vars:     Size  Location     Type
 32048 ;;		None
 32049 ;; Return value:  Size  Location     Type
 32050 ;;                  1  [STACK] void 
 32051 ;; Registers used:
 32052 ;;		wreg, status,2
 32053 ;; Tracked objects:
 32054 ;;		On entry : 3F/3B
 32055 ;;		On exit  : 3F/3C
 32056 ;;		Unchanged: 0/0
 32057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32062 ;;Total ram usage:        0 bytes
 32063 ;; Hardware stack levels used:    1
 32064 ;; Hardware stack levels required when called:   15
 32065 ;; This function calls:
 32066 ;;		Nothing
 32067 ;; This function is called by:
 32068 ;;		_SYSTEM_Initialize
 32069 ;; This function uses a reentrant model
 32070 ;;
 32071                           
 32072                           	psect	text136
 32073  01C392                     __ptext136:
 32074                           	opt callstack 0
 32075  01C392                     _CLKREF_Initialize:
 32076                           	opt callstack 14
 32077                           
 32078                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 32079                           
 32080                           ; BSR set to: 59
 32081                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32082                           ;incstack = 0
 32083  01C392  013C               	movlb	60	; () banked
 32084  01C394  6BE6               	clrf	230,b	;volatile
 32085                           
 32086                           ; BSR set to: 60
 32087                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 32088  01C396  0E94               	movlw	148
 32089  01C398  6FE5               	movwf	229,b	;volatile
 32090                           
 32091                           ; BSR set to: 60
 32092                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 32093  01C39A  0012               	return		;funcret
 32094  01C39C                     __end_of_CLKREF_Initialize:
 32095                           	opt callstack 0
 32096                           
 32097 ;; *************** function _ADCC_Initialize *****************
 32098 ;; Defined at:
 32099 ;;		line 65 in file "mcc_generated_files/adcc.c"
 32100 ;; Parameters:    Size  Location     Type
 32101 ;;		None
 32102 ;; Auto vars:     Size  Location     Type
 32103 ;;		None
 32104 ;; Return value:  Size  Location     Type
 32105 ;;                  1  [STACK] void 
 32106 ;; Registers used:
 32107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 32108 ;; Tracked objects:
 32109 ;;		On entry : 3F/3E
 32110 ;;		On exit  : 0/0
 32111 ;;		Unchanged: 0/0
 32112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32117 ;;Total ram usage:        0 bytes
 32118 ;; Hardware stack levels used:    1
 32119 ;; Hardware stack levels required when called:   16
 32120 ;; This function calls:
 32121 ;;		_ADCC_SetADIInterruptHandler
 32122 ;;		_ADCC_SetADTIInterruptHandler
 32123 ;; This function is called by:
 32124 ;;		_SYSTEM_Initialize
 32125 ;; This function uses a reentrant model
 32126 ;;
 32127                           
 32128                           	psect	text137
 32129  01B168                     __ptext137:
 32130                           	opt callstack 0
 32131  01B168                     _ADCC_Initialize:
 32132                           	opt callstack 13
 32133                           
 32134                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 32135                           
 32136                           ; BSR set to: 60
 32137                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32138                           ;incstack = 0
 32139  01B168  013E               	movlb	62	; () banked
 32140  01B16A  6BDE               	clrf	222,b	;volatile
 32141                           
 32142                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 32143  01B16C  6BDF               	clrf	223,b	;volatile
 32144                           
 32145                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 32146  01B16E  6BE0               	clrf	224,b	;volatile
 32147                           
 32148                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 32149  01B170  6BE1               	clrf	225,b	;volatile
 32150                           
 32151                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 32152  01B172  6BE4               	clrf	228,b	;volatile
 32153                           
 32154                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 32155  01B174  6BE5               	clrf	229,b	;volatile
 32156                           
 32157                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 32158  01B176  6BEA               	clrf	234,b	;volatile
 32159                           
 32160                           ; BSR set to: 62
 32161                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 32162  01B178  0E40               	movlw	64
 32163  01B17A  6FEC               	movwf	236,b	;volatile
 32164                           
 32165                           ; BSR set to: 62
 32166                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 32167  01B17C  6BF1               	clrf	241,b	;volatile
 32168                           
 32169                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 32170  01B17E  0E20               	movlw	32
 32171  01B180  6FF3               	movwf	243,b	;volatile
 32172                           
 32173                           ; BSR set to: 62
 32174                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 32175  01B182  6BF4               	clrf	244,b	;volatile
 32176                           
 32177                           ; BSR set to: 62
 32178                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 32179  01B184  6BF5               	clrf	245,b	;volatile
 32180                           
 32181                           ; BSR set to: 62
 32182                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 32183  01B186  6BF6               	clrf	246,b	;volatile
 32184                           
 32185                           ; BSR set to: 62
 32186                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 32187  01B188  6BF7               	clrf	247,b	;volatile
 32188                           
 32189                           ; BSR set to: 62
 32190                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 32191  01B18A  6BF9               	clrf	249,b	;volatile
 32192                           
 32193                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 32194  01B18C  0E5B               	movlw	91
 32195  01B18E  6FFA               	movwf	250,b	;volatile
 32196                           
 32197                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 32198  01B190  0E27               	movlw	39
 32199  01B192  6FFB               	movwf	251,b	;volatile
 32200                           
 32201                           ; BSR set to: 62
 32202                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 32203  01B194  6BFC               	clrf	252,b	;volatile
 32204                           
 32205                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 32206  01B196  0E02               	movlw	2
 32207  01B198  6FFD               	movwf	253,b	;volatile
 32208                           
 32209                           ; BSR set to: 62
 32210                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 32211  01B19A  6BFE               	clrf	254,b	;volatile
 32212                           
 32213                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 32214  01B19C  0E07               	movlw	7
 32215  01B19E  6FFF               	movwf	255,b	;volatile
 32216                           
 32217                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 32218  01B1A0  0E84               	movlw	132
 32219  01B1A2  6FF8               	movwf	248,b	;volatile
 32220                           
 32221                           ; BSR set to: 62
 32222                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 32223  01B1A4  0139               	movlb	57	; () banked
 32224  01B1A6  95A1               	bcf	161,2,b	;volatile
 32225                           
 32226                           ; BSR set to: 57
 32227                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 32228  01B1A8  8591               	bsf	145,2,b	;volatile
 32229                           
 32230                           ; BSR set to: 57
 32231                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 32232  01B1AA  0E18               	movlw	low _ADCC_DefaultInterruptHandler
 32233  01B1AC  6EE6               	movwf	postinc1,c
 32234  01B1AE  0EC4               	movlw	high _ADCC_DefaultInterruptHandler
 32235  01B1B0  6EE6               	movwf	postinc1,c
 32236  01B1B2  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 32237  01B1B4  6EE6               	movwf	postinc1,c
 32238  01B1B6  ECC5  F0DF         	call	_ADCC_SetADIInterruptHandler	;wreg free
 32239                           
 32240                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 32241  01B1BA  0139               	movlb	57	; () banked
 32242  01B1BC  97A1               	bcf	161,3,b	;volatile
 32243                           
 32244                           ; BSR set to: 57
 32245                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 32246  01B1BE  8791               	bsf	145,3,b	;volatile
 32247                           
 32248                           ; BSR set to: 57
 32249                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 32250  01B1C0  0E18               	movlw	low _ADCC_DefaultInterruptHandler
 32251  01B1C2  6EE6               	movwf	postinc1,c
 32252  01B1C4  0EC4               	movlw	high _ADCC_DefaultInterruptHandler
 32253  01B1C6  6EE6               	movwf	postinc1,c
 32254  01B1C8  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 32255  01B1CA  6EE6               	movwf	postinc1,c
 32256  01B1CC  ECB1  F0DF         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 32257                           
 32258                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32259  01B1D0  0012               	return		;funcret
 32260  01B1D2                     __end_of_ADCC_Initialize:
 32261                           	opt callstack 0
 32262                           
 32263 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 32264 ;; Defined at:
 32265 ;;		line 336 in file "mcc_generated_files/adcc.c"
 32266 ;; Parameters:    Size  Location     Type
 32267 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32268 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 32269 ;; Auto vars:     Size  Location     Type
 32270 ;;		None
 32271 ;; Return value:  Size  Location     Type
 32272 ;;                  1  [STACK] void 
 32273 ;; Registers used:
 32274 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32275 ;; Tracked objects:
 32276 ;;		On entry : 0/0
 32277 ;;		On exit  : 0/0
 32278 ;;		Unchanged: 0/0
 32279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32284 ;;Total ram usage:        0 bytes
 32285 ;; Hardware stack levels used:    1
 32286 ;; Hardware stack levels required when called:   15
 32287 ;; This function calls:
 32288 ;;		Nothing
 32289 ;; This function is called by:
 32290 ;;		_ADCC_Initialize
 32291 ;;		_start_adc_scan
 32292 ;; This function uses a reentrant model
 32293 ;;
 32294                           
 32295                           	psect	text138
 32296  01BF62                     __ptext138:
 32297                           	opt callstack 0
 32298  01BF62                     _ADCC_SetADTIInterruptHandler:
 32299                           	opt callstack 14
 32300                           
 32301                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 32302                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32303                           
 32304                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32305                           ;incstack = 0
 32306  01BF62  50E1               	movf	fsr1l,w,c
 32307  01BF64  0FFD               	addlw	-3
 32308  01BF66  6ED9               	movwf	fsr2l,c
 32309  01BF68  50E2               	movf	fsr1h,w,c
 32310  01BF6A  6EDA               	movwf	fsr2h,c
 32311  01BF6C  0EFF               	movlw	255
 32312  01BF6E  22DA               	addwfc	fsr2h,f,c
 32313  01BF70  006F FF78  F085    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 32314  01BF76  006F FF78  F086    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 32315  01BF7C  006F FF74  F087    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 32316                           
 32317                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 32318  01BF82  52E5               	movf	postdec1,f,c
 32319  01BF84  52E5               	movf	postdec1,f,c
 32320  01BF86  52E5               	movf	postdec1,f,c
 32321  01BF88  0012               	return		;funcret
 32322  01BF8A                     __end_of_ADCC_SetADTIInterruptHandler:
 32323                           	opt callstack 0
 32324                           
 32325 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 32326 ;; Defined at:
 32327 ;;		line 323 in file "mcc_generated_files/adcc.c"
 32328 ;; Parameters:    Size  Location     Type
 32329 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32330 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 32331 ;; Auto vars:     Size  Location     Type
 32332 ;;		None
 32333 ;; Return value:  Size  Location     Type
 32334 ;;                  1  [STACK] void 
 32335 ;; Registers used:
 32336 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32337 ;; Tracked objects:
 32338 ;;		On entry : 6/0
 32339 ;;		On exit  : 0/0
 32340 ;;		Unchanged: 0/0
 32341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32346 ;;Total ram usage:        0 bytes
 32347 ;; Hardware stack levels used:    1
 32348 ;; Hardware stack levels required when called:   15
 32349 ;; This function calls:
 32350 ;;		Nothing
 32351 ;; This function is called by:
 32352 ;;		_ADCC_Initialize
 32353 ;;		_start_adc_scan
 32354 ;; This function uses a reentrant model
 32355 ;;
 32356                           
 32357                           	psect	text139
 32358  01BF8A                     __ptext139:
 32359                           	opt callstack 0
 32360  01BF8A                     _ADCC_SetADIInterruptHandler:
 32361                           	opt callstack 14
 32362                           
 32363                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 32364                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32365                           
 32366                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32367                           ;incstack = 0
 32368  01BF8A  50E1               	movf	fsr1l,w,c
 32369  01BF8C  0FFD               	addlw	-3
 32370  01BF8E  6ED9               	movwf	fsr2l,c
 32371  01BF90  50E2               	movf	fsr1h,w,c
 32372  01BF92  6EDA               	movwf	fsr2h,c
 32373  01BF94  0EFF               	movlw	255
 32374  01BF96  22DA               	addwfc	fsr2h,f,c
 32375  01BF98  006F FF78  F088    	movff	postinc2,_ADCC_ADI_InterruptHandler
 32376  01BF9E  006F FF78  F089    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 32377  01BFA4  006F FF74  F08A    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 32378                           
 32379                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 32380  01BFAA  52E5               	movf	postdec1,f,c
 32381  01BFAC  52E5               	movf	postdec1,f,c
 32382  01BFAE  52E5               	movf	postdec1,f,c
 32383  01BFB0  0012               	return		;funcret
 32384  01BFB2                     __end_of_ADCC_SetADIInterruptHandler:
 32385                           	opt callstack 0
 32386                           
 32387 ;; *************** function _INT1_ISR *****************
 32388 ;; Defined at:
 32389 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 32390 ;; Parameters:    Size  Location     Type
 32391 ;;		None
 32392 ;; Auto vars:     Size  Location     Type
 32393 ;;		None
 32394 ;; Return value:  Size  Location     Type
 32395 ;;                  1    wreg      void 
 32396 ;; Registers used:
 32397 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 32398 ;; Tracked objects:
 32399 ;;		On entry : 0/0
 32400 ;;		On exit  : 0/0
 32401 ;;		Unchanged: 0/0
 32402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32405 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32406 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32407 ;;Total ram usage:        4 bytes
 32408 ;; Hardware stack levels used:    1
 32409 ;; Hardware stack levels required when called:    5
 32410 ;; This function calls:
 32411 ;;		_INT1_CallBack
 32412 ;; This function is called by:
 32413 ;;		Interrupt level 1
 32414 ;; This function uses a non-reentrant model
 32415 ;;
 32416                           
 32417                           	psect	text140
 32418  01BA78                     __ptext140:
 32419                           	opt callstack 0
 32420  01BA78                     _INT1_ISR:
 32421                           	opt callstack 11
 32422                           
 32423                           ;incstack = 0
 32424  01BA78  006F FF60  F027    	movff	status,??_INT1_ISR
 32425  01BA7E  0060  F004  F028   	movff	btemp,??_INT1_ISR+1
 32426  01BA84  0060  F02C  F029   	movff	btemp+10,??_INT1_ISR+2
 32427  01BA8A  0060  F030  F02A   	movff	btemp+11,??_INT1_ISR+3
 32428  01BA90  EE16  F0AF         	lfsr	1,___intlo_sp
 32429                           
 32430                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 32431  01BA94  0139               	movlb	57	; () banked
 32432  01BA96  91A5               	bcf	165,0,b	;volatile
 32433                           
 32434                           ; BSR set to: 57
 32435                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 32436  01BA98  EC28  F0E0         	call	_INT1_CallBack	;wreg free
 32437  01BA9C  0060  F0A8  F00C   	movff	??_INT1_ISR+3,btemp+11
 32438  01BAA2  0060  F0A4  F00B   	movff	??_INT1_ISR+2,btemp+10
 32439  01BAA8  0060  F0A0  F001   	movff	??_INT1_ISR+1,btemp
 32440  01BAAE  0060  F09F  FFD8   	movff	??_INT1_ISR,status
 32441  01BAB4  0011               	retfie		f
 32442  01BAB6                     __end_of_INT1_ISR:
 32443                           	opt callstack 0
 32444                           
 32445 ;; *************** function _INT1_CallBack *****************
 32446 ;; Defined at:
 32447 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 32448 ;; Parameters:    Size  Location     Type
 32449 ;;		None
 32450 ;; Auto vars:     Size  Location     Type
 32451 ;;		None
 32452 ;; Return value:  Size  Location     Type
 32453 ;;                  1  [STACK] void 
 32454 ;; Registers used:
 32455 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 32456 ;; Tracked objects:
 32457 ;;		On entry : 3F/39
 32458 ;;		On exit  : 0/0
 32459 ;;		Unchanged: 0/0
 32460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32465 ;;Total ram usage:        0 bytes
 32466 ;; Hardware stack levels used:    1
 32467 ;; Hardware stack levels required when called:    4
 32468 ;; This function calls:
 32469 ;;		Absolute function
 32470 ;;		_INT1_DefaultInterruptHandler
 32471 ;;		_switch_handler
 32472 ;; This function is called by:
 32473 ;;		_INT1_ISR
 32474 ;; This function uses a reentrant model
 32475 ;;
 32476                           
 32477                           	psect	text141
 32478  01C050                     __ptext141:
 32479                           	opt callstack 0
 32480  01C050                     _INT1_CallBack:
 32481                           	opt callstack 11
 32482                           
 32483                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 32484                           
 32485                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32486                           ;incstack = 0
 32487  01C050  0100               	movlb	0	; () banked
 32488  01C052  5194               	movf	_INT1_InterruptHandler& (0+255),w,b
 32489  01C054  1195               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 32490  01C056  1196               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 32491  01C058  B4D8               	btfsc	status,2,c
 32492  01C05A  0012               	return	
 32493                           
 32494                           ; BSR set to: 0
 32495                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 32496  01C05C  D801               	call	u1005_28
 32497  01C05E  0012               	return	
 32498  01C060                     u1005_28:
 32499  01C060  0005               	push	
 32500  01C062  6EFA               	movwf	pclath,c
 32501  01C064  5194               	movf	_INT1_InterruptHandler& (0+255),w,b
 32502  01C066  6EFD               	movwf	tosl,c
 32503  01C068  5195               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 32504  01C06A  6EFE               	movwf	tosh,c
 32505  01C06C  5196               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 32506  01C06E  6EFF               	movwf	tosu,c
 32507  01C070  50FA               	movf	pclath,w,c
 32508  01C072  0012               	return		;indir
 32509  01C074                     __end_of_INT1_CallBack:
 32510                           	opt callstack 0
 32511                           
 32512 ;; *************** function _INT1_DefaultInterruptHandler *****************
 32513 ;; Defined at:
 32514 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 32515 ;; Parameters:    Size  Location     Type
 32516 ;;		None
 32517 ;; Auto vars:     Size  Location     Type
 32518 ;;		None
 32519 ;; Return value:  Size  Location     Type
 32520 ;;                  1  [STACK] void 
 32521 ;; Registers used:
 32522 ;;		None
 32523 ;; Tracked objects:
 32524 ;;		On entry : 3F/0
 32525 ;;		On exit  : 0/0
 32526 ;;		Unchanged: 0/0
 32527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32532 ;;Total ram usage:        0 bytes
 32533 ;; Hardware stack levels used:    1
 32534 ;; Hardware stack levels required when called:    3
 32535 ;; This function calls:
 32536 ;;		Nothing
 32537 ;; This function is called by:
 32538 ;;		_EXT_INT_Initialize
 32539 ;;		_INT1_CallBack
 32540 ;; This function uses a reentrant model
 32541 ;;
 32542                           
 32543                           	psect	text142
 32544  01C412                     __ptext142:
 32545                           	opt callstack 0
 32546  01C412                     _INT1_DefaultInterruptHandler:
 32547                           	opt callstack 11
 32548                           
 32549                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32550                           
 32551                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32552                           ;incstack = 0
 32553  01C412  0012               	return		;funcret
 32554  01C414                     __end_of_INT1_DefaultInterruptHandler:
 32555                           	opt callstack 0
 32556                           
 32557 ;; *************** function _switch_handler *****************
 32558 ;; Defined at:
 32559 ;;		line 58 in file "dio.c"
 32560 ;; Parameters:    Size  Location     Type
 32561 ;;		None
 32562 ;; Auto vars:     Size  Location     Type
 32563 ;;  i               1  [STACK] unsigned char 
 32564 ;;  sw_value        1  [STACK] unsigned char 
 32565 ;; Return value:  Size  Location     Type
 32566 ;;                  1  [STACK] void 
 32567 ;; Registers used:
 32568 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 32569 ;; Tracked objects:
 32570 ;;		On entry : 3F/0
 32571 ;;		On exit  : 0/0
 32572 ;;		Unchanged: 0/0
 32573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32578 ;;Total ram usage:        0 bytes
 32579 ;; Hardware stack levels used:    1
 32580 ;; Hardware stack levels required when called:    3
 32581 ;; This function calls:
 32582 ;;		Nothing
 32583 ;; This function is called by:
 32584 ;;		_start_switch_handler
 32585 ;;		_INT1_CallBack
 32586 ;; This function uses a reentrant model
 32587 ;;
 32588                           
 32589                           	psect	text143
 32590  019724                     __ptext143:
 32591                           	opt callstack 0
 32592  019724                     _switch_handler:
 32593                           	opt callstack 0
 32594                           
 32595                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32596  019724  52E6               	movf	postinc1,f,c
 32597  019726  52E6               	movf	postinc1,f,c
 32598                           
 32599                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 32600                           ;stkvar	_i @ sp[(-2)+0]
 32601                           
 32602                           ;incstack = 0
 32603  019728  0EFE               	movlw	-2
 32604  01972A  6AE3               	clrf	plusw1,c
 32605  01972C  9ABF               	bcf	191,5,c	;volatile
 32606                           
 32607                           ;dio.c: 72:  __nop();
 32608  01972E  F000               	nop	
 32609                           
 32610                           ;dio.c: 73:  __nop();
 32611  019730  F000               	nop	
 32612                           
 32613                           ;dio.c: 74:  __nop();
 32614  019732  F000               	nop	
 32615                           
 32616                           ;dio.c: 75:  __nop();
 32617  019734  F000               	nop	
 32618                           
 32619                           ;dio.c: 76:  __nop();
 32620  019736  F000               	nop	
 32621                           
 32622                           ;dio.c: 77:  __nop();
 32623  019738  F000               	nop	
 32624  01973A  D013               	goto	l10700
 32625  01973C                     l10688:
 32626                           
 32627                           ;dio.c: 82:    sw_value = PORTFbits.RF3;
 32628  01973C  A6CF               	btfss	207,3,c	;volatile
 32629  01973E  D00B               	goto	u974_20
 32630  019740  D007               	goto	u974_21
 32631  019742                     u973_28:
 32632                           
 32633                           ;stkvar	_sw_value @ sp[(-2)+1]
 32634  019742  0EFF               	movlw	-1
 32635  019744  0060  F033  FFE3   	movff	btemp+11,plusw1
 32636                           
 32637                           ;dio.c: 83:    break;
 32638  01974A  D021               	goto	l10702
 32639  01974C                     l10690:
 32640                           
 32641                           ;dio.c: 85:    sw_value = PORTFbits.RF2;
 32642  01974C  A4CF               	btfss	207,2,c	;volatile
 32643  01974E  D003               	goto	u974_20
 32644  019750                     u974_21:
 32645  019750  6A0C               	clrf	(btemp+11)^0,c
 32646  019752  2A0C               	incf	(btemp+11)^0,f,c
 32647  019754  D7F6               	goto	u973_28
 32648  019756                     u974_20:
 32649  019756  6A0C               	clrf	(btemp+11)^0,c
 32650  019758  D7F4               	goto	u973_28
 32651  01975A                     l10692:
 32652                           
 32653                           ;dio.c: 88:    sw_value = 1;
 32654                           ;stkvar	_sw_value @ sp[(-2)+1]
 32655  01975A  0EFF               	movlw	-1
 32656  01975C  6AE3               	clrf	plusw1,c
 32657  01975E  2AE3               	incf	plusw1,f,c
 32658                           
 32659                           ;dio.c: 89:    break;
 32660  019760  D016               	goto	l10702
 32661  019762                     l10700:
 32662                           
 32663                           ;stkvar	_i @ sp[(-2)+0]
 32664  019762  0EFE               	movlw	-2
 32665  019764  50E3               	movf	plusw1,w,c
 32666  019766  6E0B               	movwf	(btemp+10)^0,c
 32667  019768  6A0C               	clrf	(btemp+11)^0,c
 32668                           
 32669                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32670                           ; Switch size 1, requested type "simple"
 32671                           ; Number of cases is 1, Range of values is 0 to 0
 32672                           ; switch strategies available:
 32673                           ; Name         Instructions Cycles
 32674                           ; simple_byte            4     3 (average)
 32675                           ;	Chosen strategy is simple_byte
 32676  01976A  500C               	movf	(btemp+11)^0,w,c
 32677  01976C  0A00               	xorlw	0	; case 0
 32678  01976E  A4D8               	btfss	status,2,c
 32679  019770  D7F4               	goto	l10692
 32680                           
 32681                           ; Switch size 1, requested type "simple"
 32682                           ; Number of cases is 4, Range of values is 0 to 3
 32683                           ; switch strategies available:
 32684                           ; Name         Instructions Cycles
 32685                           ; simple_byte           13     7 (average)
 32686                           ;	Chosen strategy is simple_byte
 32687  019772  500B               	movf	(btemp+10)^0,w,c
 32688  019774  0A00               	xorlw	0	; case 0
 32689  019776  B4D8               	btfsc	status,2,c
 32690  019778  D7F0               	goto	l10692
 32691  01977A  0A01               	xorlw	1	; case 1
 32692  01977C  B4D8               	btfsc	status,2,c
 32693  01977E  D7ED               	goto	l10692
 32694  019780  0A03               	xorlw	3	; case 2
 32695  019782  B4D8               	btfsc	status,2,c
 32696  019784  D7E3               	goto	l10690
 32697  019786  0A01               	xorlw	1	; case 3
 32698  019788  B4D8               	btfsc	status,2,c
 32699  01978A  D7D8               	goto	l10688
 32700  01978C  D7E6               	goto	l10692
 32701  01978E                     l10702:
 32702                           
 32703                           ;dio.c: 99:   if (sw_value) {
 32704                           ;stkvar	_sw_value @ sp[(-2)+1]
 32705  01978E  0EFF               	movlw	-1
 32706  019790  50E3               	movf	plusw1,w,c
 32707  019792  B4D8               	btfsc	status,2,c
 32708  019794  D018               	goto	l10708
 32709                           
 32710                           ;dio.c: 100:    if (S.button[i].sw == SW_ON) {
 32711                           ;stkvar	_i @ sp[(-2)+0]
 32712  019796  0EFE               	movlw	-2
 32713  019798  50E3               	movf	plusw1,w,c
 32714  01979A  0D05               	mullw	5
 32715  01979C  0E54               	movlw	low _S
 32716  01979E  24F3               	addwf	243,w,c
 32717  0197A0  6ED9               	movwf	fsr2l,c
 32718  0197A2  0E02               	movlw	high _S
 32719  0197A4  20F4               	addwfc	prodh,w,c
 32720  0197A6  6EDA               	movwf	fsr2h,c
 32721  0197A8  04DE               	decf	postinc2,w,c
 32722  0197AA  A4D8               	btfss	status,2,c
 32723  0197AC  D049               	goto	l10716
 32724                           
 32725                           ;dio.c: 101:     S.button[i].sw = SW_OFF;
 32726                           ;stkvar	_i @ sp[(-2)+0]
 32727  0197AE  0EFE               	movlw	-2
 32728  0197B0  50E3               	movf	plusw1,w,c
 32729  0197B2  0D05               	mullw	5
 32730  0197B4  0E54               	movlw	low _S
 32731  0197B6  24F3               	addwf	243,w,c
 32732  0197B8  6ED9               	movwf	fsr2l,c
 32733  0197BA  0E02               	movlw	high _S
 32734  0197BC  20F4               	addwfc	prodh,w,c
 32735  0197BE  6EDA               	movwf	fsr2h,c
 32736  0197C0  0E00               	movlw	0
 32737  0197C2  6EDF               	movwf	indf2,c
 32738  0197C4  D03D               	goto	l10716
 32739  0197C6                     l10708:
 32740                           
 32741                           ;dio.c: 104:    if (S.button[i].sw == SW_OFF) {
 32742                           ;stkvar	_i @ sp[(-2)+0]
 32743  0197C6  0EFE               	movlw	-2
 32744  0197C8  50E3               	movf	plusw1,w,c
 32745  0197CA  0D05               	mullw	5
 32746  0197CC  0E54               	movlw	low _S
 32747  0197CE  24F3               	addwf	243,w,c
 32748  0197D0  6ED9               	movwf	fsr2l,c
 32749  0197D2  0E02               	movlw	high _S
 32750  0197D4  20F4               	addwfc	prodh,w,c
 32751  0197D6  6EDA               	movwf	fsr2h,c
 32752  0197D8  50DF               	movf	indf2,w,c
 32753  0197DA  A4D8               	btfss	status,2,c
 32754  0197DC  D031               	goto	l10716
 32755                           
 32756                           ;dio.c: 105:     S.button[i].sw = SW_ON;
 32757                           ;stkvar	_i @ sp[(-2)+0]
 32758  0197DE  0EFE               	movlw	-2
 32759  0197E0  50E3               	movf	plusw1,w,c
 32760  0197E2  0D05               	mullw	5
 32761  0197E4  0E54               	movlw	low _S
 32762  0197E6  24F3               	addwf	243,w,c
 32763  0197E8  6ED9               	movwf	fsr2l,c
 32764  0197EA  0E02               	movlw	high _S
 32765  0197EC  20F4               	addwfc	prodh,w,c
 32766  0197EE  6EDA               	movwf	fsr2h,c
 32767  0197F0  0E01               	movlw	1
 32768  0197F2  6EDF               	movwf	indf2,c
 32769                           
 32770                           ;dio.c: 106:     S.button[i].count = V.timerint_count;
 32771  0197F4  EE20  F1C2         	lfsr	2,_V+187	;volatile
 32772                           
 32773                           ;stkvar	_i @ sp[(-2)+0]
 32774  0197F8  0EFE               	movlw	-2
 32775  0197FA  50E3               	movf	plusw1,w,c
 32776  0197FC  0D05               	mullw	5
 32777  0197FE  0E55               	movlw	low (_S+1)
 32778  019800  24F3               	addwf	243,w,c
 32779  019802  6EE9               	movwf	fsr0l,c
 32780  019804  0E02               	movlw	high (_S+1)
 32781  019806  20F4               	addwfc	prodh,w,c
 32782  019808  6EEA               	movwf	fsr0h,c
 32783  01980A  006F FF7B FFEE     	movff	postinc2,postinc0
 32784  019810  006F FF7B FFEE     	movff	postinc2,postinc0
 32785  019816  006F FF7B FFEE     	movff	postinc2,postinc0
 32786  01981C  006F FF7B FFEE     	movff	postinc2,postinc0
 32787                           
 32788                           ;dio.c: 107:     S.sw_bitmap |= 1 << i;
 32789                           ;stkvar	_i @ sp[(-2)+0]
 32790  019822  0EFE               	movlw	-2
 32791  019824  006F FF8C  F00C    	movff	plusw1,btemp+11
 32792  01982A  0E01               	movlw	1
 32793  01982C  6E0B               	movwf	(btemp+10)^0,c
 32794  01982E  2A0C               	incf	(btemp+11)^0,f,c
 32795  019830  D002               	goto	u978_24
 32796  019832                     u978_25:
 32797  019832  90D8               	bcf	status,0,c
 32798  019834  360B               	rlcf	(btemp+10)^0,f,c
 32799  019836                     u978_24:
 32800  019836  2E0C               	decfsz	(btemp+11)^0,f,c
 32801  019838  D7FC               	goto	u978_25
 32802  01983A  500B               	movf	(btemp+10)^0,w,c
 32803  01983C  0102               	movlb	2	; () banked
 32804  01983E  137C               	iorwf	(_S+40)& (0+255),f,b	;volatile
 32805  019840                     l10716:
 32806                           
 32807                           ;dio.c: 110:  } while (++i < 4);
 32808                           ;stkvar	_i @ sp[(-2)+0]
 32809  019840  0EFE               	movlw	-2
 32810  019842  2AE3               	incf	plusw1,f,c
 32811  019844  0EFE               	movlw	-2
 32812  019846  006F FF8C  F001    	movff	plusw1,btemp
 32813  01984C  0E03               	movlw	3
 32814  01984E  6401               	cpfsgt	btemp^0,c
 32815  019850  D788               	goto	l10700
 32816                           
 32817                           ;dio.c: 119:  do { LATFbits.LATF5 = 1; } while(0);
 32818  019852  8ABF               	bsf	191,5,c	;volatile
 32819                           
 32820                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 32821  019854  52E5               	movf	postdec1,f,c
 32822  019856  52E5               	movf	postdec1,f,c
 32823  019858  0012               	return		;funcret
 32824  01985A                     __end_of_switch_handler:
 32825                           	opt callstack 0
 32826                           
 32827 ;; *************** function _TMR5_ISR *****************
 32828 ;; Defined at:
 32829 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 32830 ;; Parameters:    Size  Location     Type
 32831 ;;		None
 32832 ;; Auto vars:     Size  Location     Type
 32833 ;;		None
 32834 ;; Return value:  Size  Location     Type
 32835 ;;                  1    wreg      void 
 32836 ;; Registers used:
 32837 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 32838 ;; Tracked objects:
 32839 ;;		On entry : 0/0
 32840 ;;		On exit  : 3F/0
 32841 ;;		Unchanged: 0/0
 32842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32845 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32846 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32847 ;;Total ram usage:       15 bytes
 32848 ;; Hardware stack levels used:    1
 32849 ;; Hardware stack levels required when called:    9
 32850 ;; This function calls:
 32851 ;;		_TMR5_CallBack
 32852 ;;		_TMR5_WriteTimer
 32853 ;; This function is called by:
 32854 ;;		Interrupt level 1
 32855 ;; This function uses a non-reentrant model
 32856 ;;
 32857                           
 32858                           	psect	text144
 32859  01A0D4                     __ptext144:
 32860                           	opt callstack 0
 32861  01A0D4                     _TMR5_ISR:
 32862                           	opt callstack 7
 32863                           
 32864                           ;incstack = 0
 32865  01A0D4  006F FF60  F02D    	movff	status,??_TMR5_ISR+2
 32866  01A0DA  0060  F004  F02E   	movff	btemp,??_TMR5_ISR+3
 32867  01A0E0  0060  F008  F02F   	movff	btemp+1,??_TMR5_ISR+4
 32868  01A0E6  0060  F00C  F030   	movff	btemp+2,??_TMR5_ISR+5
 32869  01A0EC  0060  F010  F031   	movff	btemp+3,??_TMR5_ISR+6
 32870  01A0F2  0060  F014  F032   	movff	btemp+4,??_TMR5_ISR+7
 32871  01A0F8  0060  F018  F033   	movff	btemp+5,??_TMR5_ISR+8
 32872  01A0FE  0060  F01C  F034   	movff	btemp+6,??_TMR5_ISR+9
 32873  01A104  0060  F020  F035   	movff	btemp+7,??_TMR5_ISR+10
 32874  01A10A  0060  F024  F036   	movff	btemp+8,??_TMR5_ISR+11
 32875  01A110  0060  F028  F037   	movff	btemp+9,??_TMR5_ISR+12
 32876  01A116  0060  F02C  F038   	movff	btemp+10,??_TMR5_ISR+13
 32877  01A11C  0060  F030  F039   	movff	btemp+11,??_TMR5_ISR+14
 32878  01A122  EE16  F0AF         	lfsr	1,___intlo_sp
 32879                           
 32880                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 32881  01A126  0139               	movlb	57	; () banked
 32882  01A128  9DA8               	bcf	168,6,b	;volatile
 32883                           
 32884                           ; BSR set to: 57
 32885                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 32886  01A12A  0060  F28B  FFE6   	movff	_timer5ReloadVal,postinc1
 32887  01A130  0060  F28F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 32888  01A136  ECFC  F0DC         	call	_TMR5_WriteTimer	;wreg free
 32889                           
 32890                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 32891  01A13A  0101               	movlb	1	; () banked
 32892  01A13C  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
 32893  01A13E  6E2B               	movwf	??_TMR5_ISR^0,c
 32894  01A140  6A2C               	clrf	(??_TMR5_ISR+1)^0,c
 32895  01A142  0E05               	movlw	5
 32896  01A144  262B               	addwf	??_TMR5_ISR^0,f,c
 32897  01A146  0E00               	movlw	0
 32898  01A148  222C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 32899  01A14A  0100               	movlb	0	; () banked
 32900  01A14C  4BA0               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 32901  01A14E  2BA1               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 32902  01A150  502B               	movf	??_TMR5_ISR^0,w,c
 32903  01A152  5DA0               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 32904  01A154  502C               	movf	(??_TMR5_ISR+1)^0,w,c
 32905  01A156  59A1               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 32906  01A158  A0D8               	btfss	status,0,c
 32907  01A15A  D005               	goto	i1l1029
 32908                           
 32909                           ; BSR set to: 0
 32910                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 32911  01A15C  EC3A  F0E0         	call	_TMR5_CallBack	;wreg free
 32912                           
 32913                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 32914  01A160  0100               	movlb	0	; () banked
 32915  01A162  6BA0               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 32916  01A164  6BA1               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 32917  01A166                     i1l1029:
 32918                           
 32919                           ; BSR set to: 0
 32920  01A166  0060  F0E4  F00C   	movff	??_TMR5_ISR+14,btemp+11
 32921  01A16C  0060  F0E0  F00B   	movff	??_TMR5_ISR+13,btemp+10
 32922  01A172  0060  F0DC  F00A   	movff	??_TMR5_ISR+12,btemp+9
 32923  01A178  0060  F0D8  F009   	movff	??_TMR5_ISR+11,btemp+8
 32924  01A17E  0060  F0D4  F008   	movff	??_TMR5_ISR+10,btemp+7
 32925  01A184  0060  F0D0  F007   	movff	??_TMR5_ISR+9,btemp+6
 32926  01A18A  0060  F0CC  F006   	movff	??_TMR5_ISR+8,btemp+5
 32927  01A190  0060  F0C8  F005   	movff	??_TMR5_ISR+7,btemp+4
 32928  01A196  0060  F0C4  F004   	movff	??_TMR5_ISR+6,btemp+3
 32929  01A19C  0060  F0C0  F003   	movff	??_TMR5_ISR+5,btemp+2
 32930  01A1A2  0060  F0BC  F002   	movff	??_TMR5_ISR+4,btemp+1
 32931  01A1A8  0060  F0B8  F001   	movff	??_TMR5_ISR+3,btemp
 32932  01A1AE  0060  F0B7  FFD8   	movff	??_TMR5_ISR+2,status
 32933  01A1B4  0011               	retfie		f
 32934  01A1B6                     __end_of_TMR5_ISR:
 32935                           	opt callstack 0
 32936                           
 32937 ;; *************** function _TMR5_WriteTimer *****************
 32938 ;; Defined at:
 32939 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 32940 ;; Parameters:    Size  Location     Type
 32941 ;;  timerVal        2  [STACK] unsigned short 
 32942 ;; Auto vars:     Size  Location     Type
 32943 ;;		None
 32944 ;; Return value:  Size  Location     Type
 32945 ;;                  1  [STACK] void 
 32946 ;; Registers used:
 32947 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 32948 ;; Tracked objects:
 32949 ;;		On entry : 3F/39
 32950 ;;		On exit  : 0/0
 32951 ;;		Unchanged: 0/0
 32952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32957 ;;Total ram usage:        0 bytes
 32958 ;; Hardware stack levels used:    1
 32959 ;; Hardware stack levels required when called:    3
 32960 ;; This function calls:
 32961 ;;		Nothing
 32962 ;; This function is called by:
 32963 ;;		_TMR5_ISR
 32964 ;; This function uses a reentrant model
 32965 ;;
 32966                           
 32967                           	psect	text145
 32968  01B9F8                     __ptext145:
 32969                           	opt callstack 0
 32970  01B9F8                     _TMR5_WriteTimer:
 32971                           	opt callstack 12
 32972                           
 32973                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 32974                           
 32975                           ; BSR set to: 0
 32976                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32977                           ;incstack = 0
 32978  01B9F8  A49A               	btfss	154,2,c	;volatile
 32979  01B9FA  D00F               	goto	l10920
 32980                           
 32981                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 32982  01B9FC  909A               	bcf	154,0,c	;volatile
 32983                           
 32984                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 32985                           ;stkvar	_timerVal @ sp[(0)+-2]
 32986  01B9FE  0EFF               	movlw	255
 32987  01BA00  24E1               	addwf	fsr1l,w,c
 32988  01BA02  6ED9               	movwf	fsr2l,c
 32989  01BA04  0EFF               	movlw	255
 32990  01BA06  20E2               	addwfc	fsr1h,w,c
 32991  01BA08  6EDA               	movwf	fsr2h,c
 32992  01BA0A  50DF               	movf	indf2,w,c
 32993  01BA0C  6E99               	movwf	153,c	;volatile
 32994                           
 32995                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 32996                           ;stkvar	_timerVal @ sp[(0)+-2]
 32997  01BA0E  0EFE               	movlw	-2
 32998  01BA10  006F FF8F FF98     	movff	plusw1,16280	;volatile
 32999                           
 33000                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 33001  01BA16  809A               	bsf	154,0,c	;volatile
 33002                           
 33003                           ;mcc_generated_files/tmr5.c: 144:  } else {
 33004  01BA18  D00C               	goto	l1012
 33005  01BA1A                     l10920:
 33006                           
 33007                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 33008                           ;stkvar	_timerVal @ sp[(0)+-2]
 33009  01BA1A  0EFF               	movlw	255
 33010  01BA1C  24E1               	addwf	fsr1l,w,c
 33011  01BA1E  6ED9               	movwf	fsr2l,c
 33012  01BA20  0EFF               	movlw	255
 33013  01BA22  20E2               	addwfc	fsr1h,w,c
 33014  01BA24  6EDA               	movwf	fsr2h,c
 33015  01BA26  50DF               	movf	indf2,w,c
 33016  01BA28  6E99               	movwf	153,c	;volatile
 33017                           
 33018                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 33019                           ;stkvar	_timerVal @ sp[(0)+-2]
 33020  01BA2A  0EFE               	movlw	-2
 33021  01BA2C  006F FF8F FF98     	movff	plusw1,16280	;volatile
 33022  01BA32                     l1012:
 33023                           
 33024                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 33025  01BA32  52E5               	movf	postdec1,f,c
 33026  01BA34  52E5               	movf	postdec1,f,c
 33027  01BA36  0012               	return		;funcret
 33028  01BA38                     __end_of_TMR5_WriteTimer:
 33029                           	opt callstack 0
 33030                           
 33031 ;; *************** function _TMR5_CallBack *****************
 33032 ;; Defined at:
 33033 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 33034 ;; Parameters:    Size  Location     Type
 33035 ;;		None
 33036 ;; Auto vars:     Size  Location     Type
 33037 ;;		None
 33038 ;; Return value:  Size  Location     Type
 33039 ;;                  1  [STACK] void 
 33040 ;; Registers used:
 33041 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 33042 ;; Tracked objects:
 33043 ;;		On entry : 3F/0
 33044 ;;		On exit  : 0/0
 33045 ;;		Unchanged: 0/0
 33046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33051 ;;Total ram usage:        0 bytes
 33052 ;; Hardware stack levels used:    1
 33053 ;; Hardware stack levels required when called:    8
 33054 ;; This function calls:
 33055 ;;		Absolute function
 33056 ;;		_TMR5_DefaultInterruptHandler
 33057 ;; This function is called by:
 33058 ;;		_TMR5_ISR
 33059 ;; This function uses a reentrant model
 33060 ;;
 33061                           
 33062                           	psect	text146
 33063  01C074                     __ptext146:
 33064                           	opt callstack 0
 33065  01C074                     _TMR5_CallBack:
 33066                           	opt callstack 7
 33067                           
 33068                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 33069                           
 33070                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33071                           ;incstack = 0
 33072  01C074  0100               	movlb	0	; () banked
 33073  01C076  517F               	movf	_TMR5_InterruptHandler& (0+255),w,b
 33074  01C078  1180               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 33075  01C07A  1181               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 33076  01C07C  B4D8               	btfsc	status,2,c
 33077  01C07E  0012               	return	
 33078                           
 33079                           ; BSR set to: 0
 33080                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 33081  01C080  D801               	call	u1014_28
 33082  01C082  0012               	return	
 33083  01C084                     u1014_28:
 33084  01C084  0005               	push	
 33085  01C086  6EFA               	movwf	pclath,c
 33086  01C088  517F               	movf	_TMR5_InterruptHandler& (0+255),w,b
 33087  01C08A  6EFD               	movwf	tosl,c
 33088  01C08C  5180               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 33089  01C08E  6EFE               	movwf	tosh,c
 33090  01C090  5181               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 33091  01C092  6EFF               	movwf	tosu,c
 33092  01C094  50FA               	movf	pclath,w,c
 33093  01C096  0012               	return		;indir
 33094  01C098                     __end_of_TMR5_CallBack:
 33095                           	opt callstack 0
 33096                           
 33097 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 33098 ;; Defined at:
 33099 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 33100 ;; Parameters:    Size  Location     Type
 33101 ;;		None
 33102 ;; Auto vars:     Size  Location     Type
 33103 ;;		None
 33104 ;; Return value:  Size  Location     Type
 33105 ;;                  1  [STACK] void 
 33106 ;; Registers used:
 33107 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 33108 ;; Tracked objects:
 33109 ;;		On entry : 3F/0
 33110 ;;		On exit  : 0/0
 33111 ;;		Unchanged: 0/0
 33112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33117 ;;Total ram usage:        0 bytes
 33118 ;; Hardware stack levels used:    1
 33119 ;; Hardware stack levels required when called:    7
 33120 ;; This function calls:
 33121 ;;		_check_day_time
 33122 ;; This function is called by:
 33123 ;;		_TMR5_Initialize
 33124 ;;		_TMR5_CallBack
 33125 ;; This function uses a reentrant model
 33126 ;;
 33127                           
 33128                           	psect	text147
 33129  01BB28                     __ptext147:
 33130                           	opt callstack 0
 33131  01BB28                     _TMR5_DefaultInterruptHandler:
 33132                           	opt callstack 7
 33133                           
 33134                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 33135                           
 33136                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33137                           ;incstack = 0
 33138  01BB28  A0BE               	btfss	190,0,c	;volatile
 33139  01BB2A  D002               	goto	u954_20
 33140  01BB2C  0E01               	movlw	1
 33141  01BB2E  D001               	goto	u954_26
 33142  01BB30                     u954_20:
 33143  01BB30  0E00               	movlw	0
 33144  01BB32                     u954_26:
 33145  01BB32  0AFF               	xorlw	255
 33146  01BB34  6E0C               	movwf	(btemp+11)^0,c
 33147  01BB36  50BE               	movf	190,w,c	;volatile
 33148  01BB38  180C               	xorwf	(btemp+11)^0,w,c
 33149  01BB3A  0BFE               	andlw	-2
 33150  01BB3C  180C               	xorwf	(btemp+11)^0,w,c
 33151  01BB3E  6EBE               	movwf	190,c	;volatile
 33152                           
 33153                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 33154  01BB40  0E01               	movlw	1
 33155  01BB42  0101               	movlb	1	; () banked
 33156  01BB44  27C2               	addwf	(_V+187)& (0+255),f,b	;volatile
 33157  01BB46  0E00               	movlw	0
 33158  01BB48  23C3               	addwfc	(_V+188)& (0+255),f,b	;volatile
 33159  01BB4A  23C4               	addwfc	(_V+189)& (0+255),f,b	;volatile
 33160  01BB4C  23C5               	addwfc	(_V+190)& (0+255),f,b	;volatile
 33161                           
 33162                           ; BSR set to: 1
 33163                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 33164  01BB4E  0E01               	movlw	1
 33165  01BB50  2788               	addwf	(_V+129)& (0+255),f,b	;volatile
 33166  01BB52  0E00               	movlw	0
 33167  01BB54  2389               	addwfc	(_V+130)& (0+255),f,b	;volatile
 33168  01BB56  238A               	addwfc	(_V+131)& (0+255),f,b	;volatile
 33169  01BB58  238B               	addwfc	(_V+132)& (0+255),f,b	;volatile
 33170                           
 33171                           ; BSR set to: 1
 33172                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 33173  01BB5A  EC11  F0C5         	call	_check_day_time	;wreg free
 33174                           
 33175                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33176  01BB5E  0012               	return		;funcret
 33177  01BB60                     __end_of_TMR5_DefaultInterruptHandler:
 33178                           	opt callstack 0
 33179                           
 33180 ;; *************** function _check_day_time *****************
 33181 ;; Defined at:
 33182 ;;		line 165 in file "mbmc.c"
 33183 ;; Parameters:    Size  Location     Type
 33184 ;;		None
 33185 ;; Auto vars:     Size  Location     Type
 33186 ;;  light           4  [STACK] float 
 33187 ;; Return value:  Size  Location     Type
 33188 ;;                  1  [STACK] _Bool 
 33189 ;; Registers used:
 33190 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 33191 ;; Tracked objects:
 33192 ;;		On entry : 3F/1
 33193 ;;		On exit  : 0/0
 33194 ;;		Unchanged: 0/0
 33195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33200 ;;Total ram usage:        0 bytes
 33201 ;; Hardware stack levels used:    1
 33202 ;; Hardware stack levels required when called:    6
 33203 ;; This function calls:
 33204 ;;		___flge
 33205 ;;		_conv_raw_result
 33206 ;;		_get_ac_charger_relay
 33207 ;;		_set_ac_charger_relay
 33208 ;; This function is called by:
 33209 ;;		_TMR5_DefaultInterruptHandler
 33210 ;; This function uses a reentrant model
 33211 ;;
 33212                           
 33213                           	psect	text148
 33214  018A22                     __ptext148:
 33215                           	opt callstack 0
 33216  018A22                     _check_day_time:
 33217                           	opt callstack 0
 33218                           
 33219                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33220  018A22  52E6               	movf	postinc1,f,c
 33221  018A24  52E6               	movf	postinc1,f,c
 33222  018A26  52E6               	movf	postinc1,f,c
 33223  018A28  52E6               	movf	postinc1,f,c
 33224                           
 33225                           ;mbmc.c: 167:  static uint8_t day_delay = 0;;mbmc.c: 168:  float light;;mbmc.c: 170:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 33226                           
 33227                           ;incstack = 0
 33228  018A2A  0E00               	movlw	0
 33229  018A2C  6EE6               	movwf	postinc1,c
 33230  018A2E  0E0D               	movlw	13
 33231  018A30  6EE6               	movwf	postinc1,c
 33232  018A32  EC73  F0A9         	call	_conv_raw_result	;wreg free
 33233                           
 33234                           ;stkvar	_light @ sp[(-4)+0]
 33235  018A36  0EFC               	movlw	-4
 33236  018A38  0060  F007  FFE3   	movff	btemp,plusw1
 33237  018A3E  0EFD               	movlw	-3
 33238  018A40  0060  F00B  FFE3   	movff	btemp+1,plusw1
 33239  018A46  0EFE               	movlw	-2
 33240  018A48  0060  F00F  FFE3   	movff	btemp+2,plusw1
 33241  018A4E  0EFF               	movlw	-1
 33242  018A50  0060  F013  FFE3   	movff	btemp+3,plusw1
 33243                           
 33244                           ;mbmc.c: 172:  if (!day_delay++ && V.system_stable) {
 33245  018A56  2A41               	incf	check_day_time@day_delay^0,f,c
 33246  018A58  0441               	decf	check_day_time@day_delay^0,w,c
 33247  018A5A  A4D8               	btfss	status,2,c
 33248  018A5C  D0A9               	goto	l1956
 33249  018A5E  0101               	movlb	1	; () banked
 33250  018A60  51B5               	movf	(_V+174)& (0+255),w,b	;volatile
 33251  018A62  B4D8               	btfsc	status,2,c
 33252  018A64  D0A5               	goto	l1956
 33253                           
 33254                           ; BSR set to: 1
 33255                           ;mbmc.c: 173:   if (C.soc > 15) {
 33256  018A66  EE21  F3B5         	lfsr	2,_C+182	;volatile
 33257  018A6A  0E01               	movlw	1
 33258  018A6C  50DB               	movf	plusw2,w,c
 33259  018A6E  E104               	bnz	u933_20
 33260  018A70  0E10               	movlw	16
 33261  018A72  5CDE               	subwf	postinc2,w,c
 33262  018A74  A0D8               	btfss	status,0,c
 33263  018A76  D073               	goto	l9976
 33264  018A78                     u933_20:
 33265                           
 33266                           ; BSR set to: 1
 33267                           ;mbmc.c: 174:    if (!C.day) {
 33268  018A78  EE22  F021         	lfsr	2,_C+290	;volatile
 33269  018A7C  50DF               	movf	indf2,w,c
 33270  018A7E  A4D8               	btfss	status,2,c
 33271  018A80  D035               	goto	l9964
 33272                           
 33273                           ; BSR set to: 1
 33274                           ;mbmc.c: 175:     if (light > 22.0) {
 33275                           ;stkvar	_light @ sp[(-4)+0]
 33276  018A82  0EFC               	movlw	-4
 33277  018A84  006F FF8F FFE6     	movff	plusw1,postinc1
 33278  018A8A  006F FF8F FFE6     	movff	plusw1,postinc1
 33279  018A90  006F FF8F FFE6     	movff	plusw1,postinc1
 33280  018A96  006F FF8F FFE6     	movff	plusw1,postinc1
 33281  018A9C  0E00               	movlw	0
 33282  018A9E  6EE6               	movwf	postinc1,c
 33283  018AA0  0E00               	movlw	0
 33284  018AA2  6EE6               	movwf	postinc1,c
 33285  018AA4  0EB0               	movlw	176
 33286  018AA6  6EE6               	movwf	postinc1,c
 33287  018AA8  0E41               	movlw	65
 33288  018AAA  6EE6               	movwf	postinc1,c
 33289  018AAC  ECE8  F0C8         	call	___flge	;wreg free
 33290  018AB0  B001               	btfsc	btemp& (0+255),0,c
 33291  018AB2  D07E               	goto	l1956
 33292                           
 33293                           ;mbmc.c: 176:      C.day = 1;
 33294  018AB4  0E01               	movlw	1
 33295  018AB6  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 33296                           
 33297                           ;mbmc.c: 177:      C.day_start = V.ticks;
 33298  018ABC  EE20  F188         	lfsr	2,_V+129	;volatile
 33299  018AC0  006F FF78  F822    	movff	postinc2,_C+291	;volatile
 33300  018AC6  006F FF78  F823    	movff	postinc2,_C+292	;volatile
 33301  018ACC  006F FF78  F824    	movff	postinc2,_C+293	;volatile
 33302  018AD2  006F FF74  F825    	movff	postdec2,_C+294	;volatile
 33303                           
 33304                           ;mbmc.c: 178:      if (get_ac_charger_relay()) {
 33305  018AD8  ECBB  F0E1         	call	_get_ac_charger_relay	;wreg free
 33306  018ADC  5001               	movf	btemp^0,w,c
 33307  018ADE  B4D8               	btfsc	status,2,c
 33308  018AE0  D06B               	goto	l1952
 33309                           
 33310                           ;mbmc.c: 179:       set_ac_charger_relay(0);
 33311  018AE2  0E00               	movlw	0
 33312  018AE4  6EE6               	movwf	postinc1,c
 33313  018AE6  ECA5  F0E1         	call	_set_ac_charger_relay	;wreg free
 33314  018AEA  D066               	goto	l1952
 33315  018AEC                     l9964:
 33316                           
 33317                           ; BSR set to: 1
 33318                           ;mbmc.c: 184:     if (light < 12.0) {
 33319  018AEC  0E00               	movlw	0
 33320  018AEE  6EE6               	movwf	postinc1,c
 33321  018AF0  0E00               	movlw	0
 33322  018AF2  6EE6               	movwf	postinc1,c
 33323  018AF4  0E40               	movlw	64
 33324  018AF6  6EE6               	movwf	postinc1,c
 33325  018AF8  0E41               	movlw	65
 33326  018AFA  6EE6               	movwf	postinc1,c
 33327                           
 33328                           ;stkvar	_light @ sp[(-8)+0]
 33329  018AFC  0EF8               	movlw	-8
 33330  018AFE  006F FF8F FFE6     	movff	plusw1,postinc1
 33331  018B04  006F FF8F FFE6     	movff	plusw1,postinc1
 33332  018B0A  006F FF8F FFE6     	movff	plusw1,postinc1
 33333  018B10  006F FF8F FFE6     	movff	plusw1,postinc1
 33334  018B16  ECE8  F0C8         	call	___flge	;wreg free
 33335  018B1A  B001               	btfsc	btemp& (0+255),0,c
 33336  018B1C  D049               	goto	l1956
 33337                           
 33338                           ;mbmc.c: 185:      C.day = 0;
 33339  018B1E  0E00               	movlw	0
 33340  018B20  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 33341                           
 33342                           ;mbmc.c: 186:      C.day_end = V.ticks;
 33343  018B26  EE20  F188         	lfsr	2,_V+129	;volatile
 33344  018B2A  006F FF78  F826    	movff	postinc2,_C+295	;volatile
 33345  018B30  006F FF78  F827    	movff	postinc2,_C+296	;volatile
 33346  018B36  006F FF78  F828    	movff	postinc2,_C+297	;volatile
 33347  018B3C  006F FF74  F829    	movff	postdec2,_C+298	;volatile
 33348                           
 33349                           ;mbmc.c: 190:      if ((C.soc < 40)) {
 33350  018B42  EE21  F3B5         	lfsr	2,_C+182	;volatile
 33351  018B46  0E01               	movlw	1
 33352  018B48  50DB               	movf	plusw2,w,c
 33353  018B4A  E136               	bnz	l1952
 33354  018B4C  0E28               	movlw	40
 33355  018B4E  5CDE               	subwf	postinc2,w,c
 33356  018B50  B0D8               	btfsc	status,0,c
 33357  018B52  D032               	goto	l1952
 33358                           
 33359                           ;mbmc.c: 191:       set_ac_charger_relay(1);
 33360  018B54  0E01               	movlw	1
 33361  018B56  6EE6               	movwf	postinc1,c
 33362  018B58  ECA5  F0E1         	call	_set_ac_charger_relay	;wreg free
 33363  018B5C  D02D               	goto	l1952
 33364  018B5E                     l9976:
 33365                           
 33366                           ; BSR set to: 1
 33367                           ;mbmc.c: 197:    if (C.p_pv < C.p_inverter) {
 33368  018B5E  EE21  F377         	lfsr	2,_C+120	;volatile
 33369  018B62  006F FF7B FFE6     	movff	postinc2,postinc1
 33370  018B68  006F FF7B FFE6     	movff	postinc2,postinc1
 33371  018B6E  006F FF7B FFE6     	movff	postinc2,postinc1
 33372  018B74  006F FF7B FFE6     	movff	postinc2,postinc1
 33373  018B7A  EE21  F37B         	lfsr	2,_C+124	;volatile
 33374  018B7E  006F FF7B FFE6     	movff	postinc2,postinc1
 33375  018B84  006F FF7B FFE6     	movff	postinc2,postinc1
 33376  018B8A  006F FF7B FFE6     	movff	postinc2,postinc1
 33377  018B90  006F FF7B FFE6     	movff	postinc2,postinc1
 33378  018B96  ECE8  F0C8         	call	___flge	;wreg free
 33379  018B9A  B001               	btfsc	btemp& (0+255),0,c
 33380  018B9C  D009               	goto	l1956
 33381                           
 33382                           ;mbmc.c: 198:     if (!get_ac_charger_relay()) {
 33383  018B9E  ECBB  F0E1         	call	_get_ac_charger_relay	;wreg free
 33384  018BA2  5001               	movf	btemp^0,w,c
 33385  018BA4  A4D8               	btfss	status,2,c
 33386  018BA6  D004               	goto	l1956
 33387                           
 33388                           ;mbmc.c: 199:      set_ac_charger_relay(1);
 33389  018BA8  0E01               	movlw	1
 33390  018BAA  6EE6               	movwf	postinc1,c
 33391  018BAC  ECA5  F0E1         	call	_set_ac_charger_relay	;wreg free
 33392  018BB0                     l1956:
 33393                           
 33394                           ;mbmc.c: 204:  if (day_delay >= 240)
 33395  018BB0  0EEF               	movlw	239
 33396  018BB2  6441               	cpfsgt	check_day_time@day_delay^0,c
 33397  018BB4  D001               	goto	l1952
 33398                           
 33399                           ;mbmc.c: 205:   day_delay = 0;
 33400  018BB6  6A41               	clrf	check_day_time@day_delay^0,c
 33401  018BB8                     l1952:
 33402                           
 33403                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 33404  018BB8  52E5               	movf	postdec1,f,c
 33405  018BBA  52E5               	movf	postdec1,f,c
 33406  018BBC  52E5               	movf	postdec1,f,c
 33407  018BBE  52E5               	movf	postdec1,f,c
 33408  018BC0  0012               	return		;funcret
 33409  018BC2                     __end_of_check_day_time:
 33410                           	opt callstack 0
 33411                           
 33412 ;; *************** function _set_ac_charger_relay *****************
 33413 ;; Defined at:
 33414 ;;		line 135 in file "mbmc.c"
 33415 ;; Parameters:    Size  Location     Type
 33416 ;;  mode            1  [STACK] const _Bool 
 33417 ;; Auto vars:     Size  Location     Type
 33418 ;;		None
 33419 ;; Return value:  Size  Location     Type
 33420 ;;                  1  [STACK] void 
 33421 ;; Registers used:
 33422 ;;		wreg, fsr1l, fsr1h
 33423 ;; Tracked objects:
 33424 ;;		On entry : 0/1
 33425 ;;		On exit  : 0/0
 33426 ;;		Unchanged: 0/0
 33427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33432 ;;Total ram usage:        0 bytes
 33433 ;; Hardware stack levels used:    1
 33434 ;; Hardware stack levels required when called:    3
 33435 ;; This function calls:
 33436 ;;		Nothing
 33437 ;; This function is called by:
 33438 ;;		_check_day_time
 33439 ;; This function uses a reentrant model
 33440 ;;
 33441                           
 33442                           	psect	text149
 33443  01C34A                     __ptext149:
 33444                           	opt callstack 0
 33445  01C34A                     _set_ac_charger_relay:
 33446                           	opt callstack 9
 33447                           
 33448                           ;mbmc.c: 135: void set_ac_charger_relay(const _Bool mode);mbmc.c: 136: {;mbmc.c: 137:  L
      +                          ATDbits.LATD6 = mode;
 33449                           ;stkvar	_mode @ sp[(0)+-1]
 33450                           
 33451                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33452                           ;incstack = 0
 33453  01C34A  0EFF               	movlw	-1
 33454  01C34C  B0E3               	btfsc	plusw1,0,c
 33455  01C34E  D002               	bra	u928_25
 33456  01C350  9CBD               	bcf	189,6,c	;volatile
 33457  01C352  D001               	bra	u928_26
 33458  01C354                     u928_25:
 33459  01C354  8CBD               	bsf	189,6,c	;volatile
 33460  01C356                     u928_26:
 33461                           
 33462                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 33463  01C356  52E5               	movf	postdec1,f,c
 33464  01C358  0012               	return		;funcret
 33465  01C35A                     __end_of_set_ac_charger_relay:
 33466                           	opt callstack 0
 33467                           
 33468 ;; *************** function _get_ac_charger_relay *****************
 33469 ;; Defined at:
 33470 ;;		line 140 in file "mbmc.c"
 33471 ;; Parameters:    Size  Location     Type
 33472 ;;		None
 33473 ;; Auto vars:     Size  Location     Type
 33474 ;;		None
 33475 ;; Return value:  Size  Location     Type
 33476 ;;                  1  [STACK] _Bool 
 33477 ;; Registers used:
 33478 ;;		btemp
 33479 ;; Tracked objects:
 33480 ;;		On entry : 0/1
 33481 ;;		On exit  : 0/0
 33482 ;;		Unchanged: 0/0
 33483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33488 ;;Total ram usage:        0 bytes
 33489 ;; Hardware stack levels used:    1
 33490 ;; Hardware stack levels required when called:    3
 33491 ;; This function calls:
 33492 ;;		Nothing
 33493 ;; This function is called by:
 33494 ;;		_check_day_time
 33495 ;;		_calc_bsoc
 33496 ;; This function uses a reentrant model
 33497 ;;
 33498                           
 33499                           	psect	text150
 33500  01C376                     __ptext150:
 33501                           	opt callstack 0
 33502  01C376                     _get_ac_charger_relay:
 33503                           	opt callstack 10
 33504                           
 33505                           ;mbmc.c: 142:  return LATDbits.LATD6;
 33506                           
 33507                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33508                           ;incstack = 0
 33509  01C376  ACBD               	btfss	189,6,c	;volatile
 33510  01C378  D003               	goto	u947_20
 33511  01C37A  6A01               	clrf	btemp^0,c
 33512  01C37C  2A01               	incf	btemp^0,f,c
 33513  01C37E  0012               	return	
 33514  01C380                     u947_20:
 33515  01C380  6A01               	clrf	btemp^0,c
 33516                           
 33517                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 33518  01C382  0012               	return		;funcret
 33519  01C384                     __end_of_get_ac_charger_relay:
 33520                           	opt callstack 0
 33521                           
 33522 ;; *************** function _TMR3_ISR *****************
 33523 ;; Defined at:
 33524 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 33525 ;; Parameters:    Size  Location     Type
 33526 ;;		None
 33527 ;; Auto vars:     Size  Location     Type
 33528 ;;		None
 33529 ;; Return value:  Size  Location     Type
 33530 ;;                  1    wreg      void 
 33531 ;; Registers used:
 33532 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 33533 ;; Tracked objects:
 33534 ;;		On entry : 0/0
 33535 ;;		On exit  : 3F/0
 33536 ;;		Unchanged: 0/0
 33537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33540 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33541 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33542 ;;Total ram usage:       25 bytes
 33543 ;; Hardware stack levels used:    1
 33544 ;; Hardware stack levels required when called:   14
 33545 ;; This function calls:
 33546 ;;		_TMR3_CallBack
 33547 ;;		_TMR3_WriteTimer
 33548 ;; This function is called by:
 33549 ;;		Interrupt level 1
 33550 ;; This function uses a non-reentrant model
 33551 ;;
 33552                           
 33553                           	psect	text151
 33554  019334                     __ptext151:
 33555                           	opt callstack 0
 33556  019334                     _TMR3_ISR:
 33557                           	opt callstack 2
 33558                           
 33559                           ;incstack = 0
 33560  019334  006F FF60  F0E5    	movff	status,??_TMR3_ISR
 33561  01933A  006F FFD8  F0E6    	movff	tblptrl,??_TMR3_ISR+1
 33562  019340  006F FFDC  F0E7    	movff	tblptrh,??_TMR3_ISR+2
 33563  019346  006F FFE0  F0E8    	movff	tblptru,??_TMR3_ISR+3
 33564  01934C  006F FFD4  F0E9    	movff	tablat,??_TMR3_ISR+4
 33565  019352  0060  F004  F0EA   	movff	btemp,??_TMR3_ISR+5
 33566  019358  0060  F008  F0EB   	movff	btemp+1,??_TMR3_ISR+6
 33567  01935E  0060  F00C  F0EC   	movff	btemp+2,??_TMR3_ISR+7
 33568  019364  0060  F010  F0ED   	movff	btemp+3,??_TMR3_ISR+8
 33569  01936A  0060  F014  F0EE   	movff	btemp+4,??_TMR3_ISR+9
 33570  019370  0060  F018  F0EF   	movff	btemp+5,??_TMR3_ISR+10
 33571  019376  0060  F01C  F0F0   	movff	btemp+6,??_TMR3_ISR+11
 33572  01937C  0060  F020  F0F1   	movff	btemp+7,??_TMR3_ISR+12
 33573  019382  0060  F024  F0F2   	movff	btemp+8,??_TMR3_ISR+13
 33574  019388  0060  F028  F0F3   	movff	btemp+9,??_TMR3_ISR+14
 33575  01938E  0060  F02C  F0F4   	movff	btemp+10,??_TMR3_ISR+15
 33576  019394  0060  F030  F0F5   	movff	btemp+11,??_TMR3_ISR+16
 33577  01939A  0060  F044  F0F6   	movff	btemp+16,??_TMR3_ISR+17
 33578  0193A0  0060  F048  F0F7   	movff	btemp+17,??_TMR3_ISR+18
 33579  0193A6  0060  F04C  F0F8   	movff	btemp+18,??_TMR3_ISR+19
 33580  0193AC  0060  F050  F0F9   	movff	btemp+19,??_TMR3_ISR+20
 33581  0193B2  0060  F054  F0FA   	movff	btemp+20,??_TMR3_ISR+21
 33582  0193B8  0060  F058  F0FB   	movff	btemp+21,??_TMR3_ISR+22
 33583  0193BE  0060  F05C  F0FC   	movff	btemp+22,??_TMR3_ISR+23
 33584  0193C4  0060  F060  F0FD   	movff	btemp+23,??_TMR3_ISR+24
 33585  0193CA  EE16  F0AF         	lfsr	1,___intlo_sp
 33586                           
 33587                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 33588  0193CE  0139               	movlb	57	; () banked
 33589  0193D0  9DA6               	bcf	166,6,b	;volatile
 33590                           
 33591                           ; BSR set to: 57
 33592                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 33593  0193D2  0060  F27B  FFE6   	movff	_timer3ReloadVal,postinc1
 33594  0193D8  0060  F27F  FFE6   	movff	_timer3ReloadVal+1,postinc1
 33595  0193DE  EC1C  F0DD         	call	_TMR3_WriteTimer	;wreg free
 33596                           
 33597                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 33598  0193E2  0100               	movlb	0	; () banked
 33599  0193E4  4B9C               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 33600  0193E6  2B9D               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 33601  0193E8  519D               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 33602  0193EA  E104               	bnz	i1u1276_20
 33603  0193EC  0E28               	movlw	40
 33604  0193EE  5D9C               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 33605  0193F0  A0D8               	btfss	status,0,c
 33606  0193F2  D005               	goto	i1l1217
 33607  0193F4                     i1u1276_20:
 33608                           
 33609                           ; BSR set to: 0
 33610                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 33611  0193F4  EC4C  F0E0         	call	_TMR3_CallBack	;wreg free
 33612                           
 33613                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 33614  0193F8  0100               	movlb	0	; () banked
 33615  0193FA  6B9C               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 33616  0193FC  6B9D               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 33617  0193FE                     i1l1217:
 33618                           
 33619                           ; BSR set to: 0
 33620  0193FE  0060  F3F4  F018   	movff	??_TMR3_ISR+24,btemp+23
 33621  019404  0060  F3F0  F017   	movff	??_TMR3_ISR+23,btemp+22
 33622  01940A  0060  F3EC  F016   	movff	??_TMR3_ISR+22,btemp+21
 33623  019410  0060  F3E8  F015   	movff	??_TMR3_ISR+21,btemp+20
 33624  019416  0060  F3E4  F014   	movff	??_TMR3_ISR+20,btemp+19
 33625  01941C  0060  F3E0  F013   	movff	??_TMR3_ISR+19,btemp+18
 33626  019422  0060  F3DC  F012   	movff	??_TMR3_ISR+18,btemp+17
 33627  019428  0060  F3D8  F011   	movff	??_TMR3_ISR+17,btemp+16
 33628  01942E  0060  F3D4  F00C   	movff	??_TMR3_ISR+16,btemp+11
 33629  019434  0060  F3D0  F00B   	movff	??_TMR3_ISR+15,btemp+10
 33630  01943A  0060  F3CC  F00A   	movff	??_TMR3_ISR+14,btemp+9
 33631  019440  0060  F3C8  F009   	movff	??_TMR3_ISR+13,btemp+8
 33632  019446  0060  F3C4  F008   	movff	??_TMR3_ISR+12,btemp+7
 33633  01944C  0060  F3C0  F007   	movff	??_TMR3_ISR+11,btemp+6
 33634  019452  0060  F3BC  F006   	movff	??_TMR3_ISR+10,btemp+5
 33635  019458  0060  F3B8  F005   	movff	??_TMR3_ISR+9,btemp+4
 33636  01945E  0060  F3B4  F004   	movff	??_TMR3_ISR+8,btemp+3
 33637  019464  0060  F3B0  F003   	movff	??_TMR3_ISR+7,btemp+2
 33638  01946A  0060  F3AC  F002   	movff	??_TMR3_ISR+6,btemp+1
 33639  019470  0060  F3A8  F001   	movff	??_TMR3_ISR+5,btemp
 33640  019476  0060  F3A7  FFF5   	movff	??_TMR3_ISR+4,tablat
 33641  01947C  0060  F3A3  FFF8   	movff	??_TMR3_ISR+3,tblptru
 33642  019482  0060  F39F  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 33643  019488  0060  F39B  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 33644  01948E  0060  F397  FFD8   	movff	??_TMR3_ISR,status
 33645  019494  0011               	retfie		f
 33646  019496                     __end_of_TMR3_ISR:
 33647                           	opt callstack 0
 33648                           
 33649 ;; *************** function _TMR3_WriteTimer *****************
 33650 ;; Defined at:
 33651 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 33652 ;; Parameters:    Size  Location     Type
 33653 ;;  timerVal        2  [STACK] unsigned short 
 33654 ;; Auto vars:     Size  Location     Type
 33655 ;;		None
 33656 ;; Return value:  Size  Location     Type
 33657 ;;                  1  [STACK] void 
 33658 ;; Registers used:
 33659 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 33660 ;; Tracked objects:
 33661 ;;		On entry : 3F/39
 33662 ;;		On exit  : 0/0
 33663 ;;		Unchanged: 0/0
 33664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33669 ;;Total ram usage:        0 bytes
 33670 ;; Hardware stack levels used:    1
 33671 ;; Hardware stack levels required when called:    3
 33672 ;; This function calls:
 33673 ;;		Nothing
 33674 ;; This function is called by:
 33675 ;;		_TMR3_ISR
 33676 ;; This function uses a reentrant model
 33677 ;;
 33678                           
 33679                           	psect	text152
 33680  01BA38                     __ptext152:
 33681                           	opt callstack 0
 33682  01BA38                     _TMR3_WriteTimer:
 33683                           	opt callstack 12
 33684                           
 33685                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 33686                           
 33687                           ; BSR set to: 0
 33688                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33689                           ;incstack = 0
 33690  01BA38  A4A6               	btfss	166,2,c	;volatile
 33691  01BA3A  D00F               	goto	l10938
 33692                           
 33693                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 33694  01BA3C  90A6               	bcf	166,0,c	;volatile
 33695                           
 33696                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 33697                           ;stkvar	_timerVal @ sp[(0)+-2]
 33698  01BA3E  0EFF               	movlw	255
 33699  01BA40  24E1               	addwf	fsr1l,w,c
 33700  01BA42  6ED9               	movwf	fsr2l,c
 33701  01BA44  0EFF               	movlw	255
 33702  01BA46  20E2               	addwfc	fsr1h,w,c
 33703  01BA48  6EDA               	movwf	fsr2h,c
 33704  01BA4A  50DF               	movf	indf2,w,c
 33705  01BA4C  6EA5               	movwf	165,c	;volatile
 33706                           
 33707                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 33708                           ;stkvar	_timerVal @ sp[(0)+-2]
 33709  01BA4E  0EFE               	movlw	-2
 33710  01BA50  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 33711                           
 33712                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 33713  01BA56  80A6               	bsf	166,0,c	;volatile
 33714                           
 33715                           ;mcc_generated_files/tmr3.c: 141:     }
 33716  01BA58  D00C               	goto	l1200
 33717  01BA5A                     l10938:
 33718                           
 33719                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 33720                           ;stkvar	_timerVal @ sp[(0)+-2]
 33721  01BA5A  0EFF               	movlw	255
 33722  01BA5C  24E1               	addwf	fsr1l,w,c
 33723  01BA5E  6ED9               	movwf	fsr2l,c
 33724  01BA60  0EFF               	movlw	255
 33725  01BA62  20E2               	addwfc	fsr1h,w,c
 33726  01BA64  6EDA               	movwf	fsr2h,c
 33727  01BA66  50DF               	movf	indf2,w,c
 33728  01BA68  6EA5               	movwf	165,c	;volatile
 33729                           
 33730                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 33731                           ;stkvar	_timerVal @ sp[(0)+-2]
 33732  01BA6A  0EFE               	movlw	-2
 33733  01BA6C  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 33734  01BA72                     l1200:
 33735                           
 33736                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 33737  01BA72  52E5               	movf	postdec1,f,c
 33738  01BA74  52E5               	movf	postdec1,f,c
 33739  01BA76  0012               	return		;funcret
 33740  01BA78                     __end_of_TMR3_WriteTimer:
 33741                           	opt callstack 0
 33742                           
 33743 ;; *************** function _TMR3_CallBack *****************
 33744 ;; Defined at:
 33745 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 33746 ;; Parameters:    Size  Location     Type
 33747 ;;		None
 33748 ;; Auto vars:     Size  Location     Type
 33749 ;;		None
 33750 ;; Return value:  Size  Location     Type
 33751 ;;                  1  [STACK] void 
 33752 ;; Registers used:
 33753 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 33754 ;; Tracked objects:
 33755 ;;		On entry : 3F/0
 33756 ;;		On exit  : 0/0
 33757 ;;		Unchanged: 0/0
 33758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33763 ;;Total ram usage:        0 bytes
 33764 ;; Hardware stack levels used:    1
 33765 ;; Hardware stack levels required when called:   13
 33766 ;; This function calls:
 33767 ;;		Absolute function
 33768 ;;		_TMR3_DefaultInterruptHandler
 33769 ;;		_calc_bsoc
 33770 ;; This function is called by:
 33771 ;;		_TMR3_ISR
 33772 ;; This function uses a reentrant model
 33773 ;;
 33774                           
 33775                           	psect	text153
 33776  01C098                     __ptext153:
 33777                           	opt callstack 0
 33778  01C098                     _TMR3_CallBack:
 33779                           	opt callstack 2
 33780                           
 33781                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 33782                           
 33783                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33784                           ;incstack = 0
 33785  01C098  0100               	movlb	0	; () banked
 33786  01C09A  517C               	movf	_TMR3_InterruptHandler& (0+255),w,b
 33787  01C09C  117D               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 33788  01C09E  117E               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 33789  01C0A0  B4D8               	btfsc	status,2,c
 33790  01C0A2  0012               	return	
 33791                           
 33792                           ; BSR set to: 0
 33793                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 33794  01C0A4  D801               	call	u1263_28
 33795  01C0A6  0012               	return	
 33796  01C0A8                     u1263_28:
 33797  01C0A8  0005               	push	
 33798  01C0AA  6EFA               	movwf	pclath,c
 33799  01C0AC  517C               	movf	_TMR3_InterruptHandler& (0+255),w,b
 33800  01C0AE  6EFD               	movwf	tosl,c
 33801  01C0B0  517D               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 33802  01C0B2  6EFE               	movwf	tosh,c
 33803  01C0B4  517E               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 33804  01C0B6  6EFF               	movwf	tosu,c
 33805  01C0B8  50FA               	movf	pclath,w,c
 33806  01C0BA  0012               	return		;indir
 33807  01C0BC                     __end_of_TMR3_CallBack:
 33808                           	opt callstack 0
 33809                           
 33810 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 33811 ;; Defined at:
 33812 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 33813 ;; Parameters:    Size  Location     Type
 33814 ;;		None
 33815 ;; Auto vars:     Size  Location     Type
 33816 ;;		None
 33817 ;; Return value:  Size  Location     Type
 33818 ;;                  1  [STACK] void 
 33819 ;; Registers used:
 33820 ;;		None
 33821 ;; Tracked objects:
 33822 ;;		On entry : 3F/0
 33823 ;;		On exit  : 0/0
 33824 ;;		Unchanged: 0/0
 33825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33830 ;;Total ram usage:        0 bytes
 33831 ;; Hardware stack levels used:    1
 33832 ;; Hardware stack levels required when called:    3
 33833 ;; This function calls:
 33834 ;;		Nothing
 33835 ;; This function is called by:
 33836 ;;		_TMR3_Initialize
 33837 ;;		_TMR3_CallBack
 33838 ;; This function uses a reentrant model
 33839 ;;
 33840                           
 33841                           	psect	text154
 33842  01C414                     __ptext154:
 33843                           	opt callstack 0
 33844  01C414                     _TMR3_DefaultInterruptHandler:
 33845                           	opt callstack 11
 33846                           
 33847                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33848                           
 33849                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33850                           ;incstack = 0
 33851  01C414  0012               	return		;funcret
 33852  01C416                     __end_of_TMR3_DefaultInterruptHandler:
 33853                           	opt callstack 0
 33854                           
 33855 ;; *************** function _calc_bsoc *****************
 33856 ;; Defined at:
 33857 ;;		line 39 in file "bsoc.c"
 33858 ;; Parameters:    Size  Location     Type
 33859 ;;		None
 33860 ;; Auto vars:     Size  Location     Type
 33861 ;;  adj             4  [STACK] float 
 33862 ;;  log_ptr         2  [STACK] PTR unsigned char 
 33863 ;;		 -> port_data(512), 
 33864 ;; Return value:  Size  Location     Type
 33865 ;;                  1  [STACK] void 
 33866 ;; Registers used:
 33867 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 33868 ;; Tracked objects:
 33869 ;;		On entry : 3F/0
 33870 ;;		On exit  : 5/1
 33871 ;;		Unchanged: 0/0
 33872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33877 ;;Total ram usage:        0 bytes
 33878 ;; Hardware stack levels used:    1
 33879 ;; Hardware stack levels required when called:   12
 33880 ;; This function calls:
 33881 ;;		_StartTimer
 33882 ;;		___asfladd
 33883 ;;		___fldiv
 33884 ;;		___flge
 33885 ;;		___flmul
 33886 ;;		___flneg
 33887 ;;		___fltol
 33888 ;;		_fabsf
 33889 ;;		_get_ac_charger_relay
 33890 ;;		_port_data_dma_ptr
 33891 ;;		_send_port_data_dma
 33892 ;;		_sprintf
 33893 ;;		_strlen
 33894 ;; This function is called by:
 33895 ;;		_init_bsoc
 33896 ;;		_TMR3_CallBack
 33897 ;; This function uses a reentrant model
 33898 ;;
 33899                           
 33900                           	psect	text155
 33901  013350                     __ptext155:
 33902                           	opt callstack 0
 33903  013350                     _calc_bsoc:
 33904                           	opt callstack 0
 33905                           
 33906                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33907  013350  0E06               	movlw	6
 33908  013352  26E1               	addwf	fsr1l,f,c
 33909  013354  0E00               	movlw	0
 33910  013356  22E2               	addwfc	fsr1h,f,c
 33911                           
 33912                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 33913                           
 33914                           ;incstack = 0
 33915  013358  0E00               	movlw	0
 33916  01335A  6E09               	movwf	(btemp+8)^0,c
 33917  01335C  0E00               	movlw	0
 33918  01335E  6E0A               	movwf	(btemp+9)^0,c
 33919  013360  0E80               	movlw	128
 33920  013362  6E0B               	movwf	(btemp+10)^0,c
 33921  013364  0E3F               	movlw	63
 33922  013366  6E0C               	movwf	(btemp+11)^0,c
 33923                           
 33924                           ;stkvar	_adj @ sp[(-6)+0]
 33925  013368  0EFA               	movlw	-6
 33926  01336A  0060  F027  FFE3   	movff	btemp+8,plusw1
 33927  013370  0EFB               	movlw	-5
 33928  013372  0060  F02B  FFE3   	movff	btemp+9,plusw1
 33929  013378  0EFC               	movlw	-4
 33930  01337A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33931  013380  0EFD               	movlw	-3
 33932  013382  0060  F033  FFE3   	movff	btemp+11,plusw1
 33933  013388  82BE               	bsf	190,1,c	;volatile
 33934                           
 33935                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 33936  01338A  0E00               	movlw	0
 33937  01338C  6EE6               	movwf	postinc1,c
 33938  01338E  0E00               	movlw	0
 33939  013390  6EE6               	movwf	postinc1,c
 33940  013392  0E61               	movlw	97
 33941  013394  6EE6               	movwf	postinc1,c
 33942  013396  0E45               	movlw	69
 33943  013398  6EE6               	movwf	postinc1,c
 33944  01339A  EE21  F343         	lfsr	2,_C+68	;volatile
 33945  01339E  006F FF7B FFE6     	movff	postinc2,postinc1
 33946  0133A4  006F FF7B FFE6     	movff	postinc2,postinc1
 33947  0133AA  006F FF7B FFE6     	movff	postinc2,postinc1
 33948  0133B0  006F FF7B FFE6     	movff	postinc2,postinc1
 33949  0133B6  ECB6  F0A6         	call	___fldiv	;wreg free
 33950  0133BA  0060  F007  FFE6   	movff	btemp,postinc1
 33951  0133C0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33952  0133C6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33953  0133CC  0060  F013  FFE6   	movff	btemp+3,postinc1
 33954  0133D2  0E8F               	movlw	low (_C+144)
 33955  0133D4  6EE6               	movwf	postinc1,c
 33956  0133D6  0E07               	movlw	high (_C+144)
 33957  0133D8  6EE6               	movwf	postinc1,c
 33958  0133DA  ECD0  F0D7         	call	___asfladd	;wreg free
 33959                           
 33960                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 33961  0133DE  EE21  F38F         	lfsr	2,_C+144	;volatile
 33962  0133E2  006F FF7B FFE6     	movff	postinc2,postinc1
 33963  0133E8  006F FF7B FFE6     	movff	postinc2,postinc1
 33964  0133EE  006F FF7B FFE6     	movff	postinc2,postinc1
 33965  0133F4  006F FF7B FFE6     	movff	postinc2,postinc1
 33966  0133FA  EE21  F38B         	lfsr	2,_C+140	;volatile
 33967  0133FE  006F FF7B FFE6     	movff	postinc2,postinc1
 33968  013404  006F FF7B FFE6     	movff	postinc2,postinc1
 33969  01340A  006F FF7B FFE6     	movff	postinc2,postinc1
 33970  013410  006F FF7B FFE6     	movff	postinc2,postinc1
 33971  013416  ECE8  F0C8         	call	___flge	;wreg free
 33972  01341A  B001               	btfsc	btemp& (0+255),0,c
 33973  01341C  D00E               	goto	l13024
 33974                           
 33975                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 33976  01341E  EE21  F38B         	lfsr	2,_C+140	;volatile
 33977  013422  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
 33978  013428  006F FF78  F790    	movff	postinc2,_C+145	;volatile
 33979  01342E  006F FF78  F791    	movff	postinc2,_C+146	;volatile
 33980  013434  006F FF74  F792    	movff	postdec2,_C+147	;volatile
 33981  01343A                     l13024:
 33982                           
 33983                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 33984  01343A  0ECD               	movlw	205
 33985  01343C  6EE6               	movwf	postinc1,c
 33986  01343E  0ECC               	movlw	204
 33987  013440  6EE6               	movwf	postinc1,c
 33988  013442  0ECC               	movlw	204
 33989  013444  6EE6               	movwf	postinc1,c
 33990  013446  0E3D               	movlw	61
 33991  013448  6EE6               	movwf	postinc1,c
 33992  01344A  EE21  F38F         	lfsr	2,_C+144	;volatile
 33993  01344E  006F FF7B FFE6     	movff	postinc2,postinc1
 33994  013454  006F FF7B FFE6     	movff	postinc2,postinc1
 33995  01345A  006F FF7B FFE6     	movff	postinc2,postinc1
 33996  013460  006F FF7B FFE6     	movff	postinc2,postinc1
 33997  013466  ECE8  F0C8         	call	___flge	;wreg free
 33998  01346A  B001               	btfsc	btemp& (0+255),0,c
 33999  01346C  D010               	goto	l13028
 34000                           
 34001                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 34002  01346E  0ECD               	movlw	205
 34003  013470  006F FFA0  F78F    	movff	wreg,_C+144	;volatile
 34004  013476  0ECC               	movlw	204
 34005  013478  006F FFA0  F790    	movff	wreg,_C+145	;volatile
 34006  01347E  0ECC               	movlw	204
 34007  013480  006F FFA0  F791    	movff	wreg,_C+146	;volatile
 34008  013486  0E3D               	movlw	61
 34009  013488  006F FFA0  F792    	movff	wreg,_C+147	;volatile
 34010  01348E                     l13028:
 34011                           
 34012                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 34013  01348E  EE21  F343         	lfsr	2,_C+68	;volatile
 34014  013492  006F FF7B FFE6     	movff	postinc2,postinc1
 34015  013498  006F FF7B FFE6     	movff	postinc2,postinc1
 34016  01349E  006F FF7B FFE6     	movff	postinc2,postinc1
 34017  0134A4  006F FF7B FFE6     	movff	postinc2,postinc1
 34018  0134AA  0E0A               	movlw	10
 34019  0134AC  6EE6               	movwf	postinc1,c
 34020  0134AE  0ED7               	movlw	215
 34021  0134B0  6EE6               	movwf	postinc1,c
 34022  0134B2  0E23               	movlw	35
 34023  0134B4  6EE6               	movwf	postinc1,c
 34024  0134B6  0E3C               	movlw	60
 34025  0134B8  6EE6               	movwf	postinc1,c
 34026  0134BA  ECE8  F0C8         	call	___flge	;wreg free
 34027  0134BE  B001               	btfsc	btemp& (0+255),0,c
 34028  0134C0  D01C               	goto	l13032
 34029                           
 34030                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 34031  0134C2  0061  FEF4  F009   	movff	_C+190,btemp+8	;volatile
 34032  0134C8  0061  FEF8  F00A   	movff	_C+191,btemp+9	;volatile
 34033  0134CE  0061  FEFC  F00B   	movff	_C+192,btemp+10	;volatile
 34034  0134D4  0061  FF00  F00C   	movff	_C+193,btemp+11	;volatile
 34035                           
 34036                           ;stkvar	_adj @ sp[(-6)+0]
 34037  0134DA  0EFA               	movlw	-6
 34038  0134DC  0060  F027  FFE3   	movff	btemp+8,plusw1
 34039  0134E2  0EFB               	movlw	-5
 34040  0134E4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 34041  0134EA  0EFC               	movlw	-4
 34042  0134EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 34043  0134F2  0EFD               	movlw	-3
 34044  0134F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 34045  0134FA                     l13032:
 34046                           
 34047                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 34048  0134FA  0E0A               	movlw	10
 34049  0134FC  6EE6               	movwf	postinc1,c
 34050  0134FE  0ED7               	movlw	215
 34051  013500  6EE6               	movwf	postinc1,c
 34052  013502  0E23               	movlw	35
 34053  013504  6EE6               	movwf	postinc1,c
 34054  013506  0E3C               	movlw	60
 34055  013508  6EE6               	movwf	postinc1,c
 34056  01350A  EE21  F343         	lfsr	2,_C+68	;volatile
 34057  01350E  006F FF7B FFE6     	movff	postinc2,postinc1
 34058  013514  006F FF7B FFE6     	movff	postinc2,postinc1
 34059  01351A  006F FF7B FFE6     	movff	postinc2,postinc1
 34060  013520  006F FF7B FFE6     	movff	postinc2,postinc1
 34061  013526  ECE8  F0C8         	call	___flge	;wreg free
 34062  01352A  B001               	btfsc	btemp& (0+255),0,c
 34063  01352C  D01C               	goto	l13036
 34064                           
 34065                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 34066  01352E  0061  FEE4  F009   	movff	_C+186,btemp+8	;volatile
 34067  013534  0061  FEE8  F00A   	movff	_C+187,btemp+9	;volatile
 34068  01353A  0061  FEEC  F00B   	movff	_C+188,btemp+10	;volatile
 34069  013540  0061  FEF0  F00C   	movff	_C+189,btemp+11	;volatile
 34070                           
 34071                           ;stkvar	_adj @ sp[(-6)+0]
 34072  013546  0EFA               	movlw	-6
 34073  013548  0060  F027  FFE3   	movff	btemp+8,plusw1
 34074  01354E  0EFB               	movlw	-5
 34075  013550  0060  F02B  FFE3   	movff	btemp+9,plusw1
 34076  013556  0EFC               	movlw	-4
 34077  013558  0060  F02F  FFE3   	movff	btemp+10,plusw1
 34078  01355E  0EFD               	movlw	-3
 34079  013560  0060  F033  FFE3   	movff	btemp+11,plusw1
 34080  013566                     l13036:
 34081                           
 34082                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 34083  013566  0E00               	movlw	0
 34084  013568  6EE6               	movwf	postinc1,c
 34085  01356A  0E00               	movlw	0
 34086  01356C  6EE6               	movwf	postinc1,c
 34087  01356E  0E61               	movlw	97
 34088  013570  6EE6               	movwf	postinc1,c
 34089  013572  0E45               	movlw	69
 34090  013574  6EE6               	movwf	postinc1,c
 34091                           
 34092                           ;stkvar	_adj @ sp[(-10)+0]
 34093  013576  0EF6               	movlw	-10
 34094  013578  006F FF8F FFE6     	movff	plusw1,postinc1
 34095  01357E  006F FF8F FFE6     	movff	plusw1,postinc1
 34096  013584  006F FF8F FFE6     	movff	plusw1,postinc1
 34097  01358A  006F FF8F FFE6     	movff	plusw1,postinc1
 34098  013590  EE21  F343         	lfsr	2,_C+68	;volatile
 34099  013594  006F FF7B FFE6     	movff	postinc2,postinc1
 34100  01359A  006F FF7B FFE6     	movff	postinc2,postinc1
 34101  0135A0  006F FF7B FFE6     	movff	postinc2,postinc1
 34102  0135A6  006F FF7B FFE6     	movff	postinc2,postinc1
 34103  0135AC  ECC3  F09E         	call	___flmul	;wreg free
 34104  0135B0  0060  F007  FFE6   	movff	btemp,postinc1
 34105  0135B6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34106  0135BC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34107  0135C2  0060  F013  FFE6   	movff	btemp+3,postinc1
 34108  0135C8  ECB6  F0A6         	call	___fldiv	;wreg free
 34109  0135CC  0060  F007  FFE6   	movff	btemp,postinc1
 34110  0135D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34111  0135D8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34112  0135DE  0060  F013  FFE6   	movff	btemp+3,postinc1
 34113  0135E4  0E8F               	movlw	low (_C+144)
 34114  0135E6  6EE6               	movwf	postinc1,c
 34115  0135E8  0E07               	movlw	high (_C+144)
 34116  0135EA  6EE6               	movwf	postinc1,c
 34117  0135EC  ECD0  F0D7         	call	___asfladd	;wreg free
 34118                           
 34119                           ;bsoc.c: 59:  C.dynamic_ah_adj = C.dynamic_ah;
 34120  0135F0  EE21  F38F         	lfsr	2,_C+144	;volatile
 34121  0135F4  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
 34122  0135FA  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
 34123  013600  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
 34124  013606  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
 34125                           
 34126                           ;bsoc.c: 60:  if (C.dynamic_ah_adj > (C.bank_ah))
 34127  01360C  EE21  F39B         	lfsr	2,_C+156	;volatile
 34128  013610  006F FF7B FFE6     	movff	postinc2,postinc1
 34129  013616  006F FF7B FFE6     	movff	postinc2,postinc1
 34130  01361C  006F FF7B FFE6     	movff	postinc2,postinc1
 34131  013622  006F FF7B FFE6     	movff	postinc2,postinc1
 34132  013628  EE21  F38B         	lfsr	2,_C+140	;volatile
 34133  01362C  006F FF7B FFE6     	movff	postinc2,postinc1
 34134  013632  006F FF7B FFE6     	movff	postinc2,postinc1
 34135  013638  006F FF7B FFE6     	movff	postinc2,postinc1
 34136  01363E  006F FF7B FFE6     	movff	postinc2,postinc1
 34137  013644  ECE8  F0C8         	call	___flge	;wreg free
 34138  013648  B001               	btfsc	btemp& (0+255),0,c
 34139  01364A  D00E               	goto	l13044
 34140                           
 34141                           ;bsoc.c: 61:   C.dynamic_ah_adj = C.bank_ah;
 34142  01364C  EE21  F38B         	lfsr	2,_C+140	;volatile
 34143  013650  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
 34144  013656  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
 34145  01365C  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
 34146  013662  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
 34147  013668                     l13044:
 34148                           
 34149                           ;bsoc.c: 62:  if (C.dynamic_ah_adj < 0.1)
 34150  013668  0ECD               	movlw	205
 34151  01366A  6EE6               	movwf	postinc1,c
 34152  01366C  0ECC               	movlw	204
 34153  01366E  6EE6               	movwf	postinc1,c
 34154  013670  0ECC               	movlw	204
 34155  013672  6EE6               	movwf	postinc1,c
 34156  013674  0E3D               	movlw	61
 34157  013676  6EE6               	movwf	postinc1,c
 34158  013678  EE21  F39B         	lfsr	2,_C+156	;volatile
 34159  01367C  006F FF7B FFE6     	movff	postinc2,postinc1
 34160  013682  006F FF7B FFE6     	movff	postinc2,postinc1
 34161  013688  006F FF7B FFE6     	movff	postinc2,postinc1
 34162  01368E  006F FF7B FFE6     	movff	postinc2,postinc1
 34163  013694  ECE8  F0C8         	call	___flge	;wreg free
 34164  013698  B001               	btfsc	btemp& (0+255),0,c
 34165  01369A  D010               	goto	l13048
 34166                           
 34167                           ;bsoc.c: 63:   C.dynamic_ah_adj = 0.1;
 34168  01369C  0ECD               	movlw	205
 34169  01369E  006F FFA0  F79B    	movff	wreg,_C+156	;volatile
 34170  0136A4  0ECC               	movlw	204
 34171  0136A6  006F FFA0  F79C    	movff	wreg,_C+157	;volatile
 34172  0136AC  0ECC               	movlw	204
 34173  0136AE  006F FFA0  F79D    	movff	wreg,_C+158	;volatile
 34174  0136B4  0E3D               	movlw	61
 34175  0136B6  006F FFA0  F79E    	movff	wreg,_C+159	;volatile
 34176  0136BC                     l13048:
 34177                           
 34178                           ;bsoc.c: 66:  C.pv_ah += (C.c_pv / 3600.0);
 34179  0136BC  0E00               	movlw	0
 34180  0136BE  6EE6               	movwf	postinc1,c
 34181  0136C0  0E00               	movlw	0
 34182  0136C2  6EE6               	movwf	postinc1,c
 34183  0136C4  0E61               	movlw	97
 34184  0136C6  6EE6               	movwf	postinc1,c
 34185  0136C8  0E45               	movlw	69
 34186  0136CA  6EE6               	movwf	postinc1,c
 34187  0136CC  EE21  F347         	lfsr	2,_C+72	;volatile
 34188  0136D0  006F FF7B FFE6     	movff	postinc2,postinc1
 34189  0136D6  006F FF7B FFE6     	movff	postinc2,postinc1
 34190  0136DC  006F FF7B FFE6     	movff	postinc2,postinc1
 34191  0136E2  006F FF7B FFE6     	movff	postinc2,postinc1
 34192  0136E8  ECB6  F0A6         	call	___fldiv	;wreg free
 34193  0136EC  0060  F007  FFE6   	movff	btemp,postinc1
 34194  0136F2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34195  0136F8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34196  0136FE  0060  F013  FFE6   	movff	btemp+3,postinc1
 34197  013704  0E93               	movlw	low (_C+148)
 34198  013706  6EE6               	movwf	postinc1,c
 34199  013708  0E07               	movlw	high (_C+148)
 34200  01370A  6EE6               	movwf	postinc1,c
 34201  01370C  ECD0  F0D7         	call	___asfladd	;wreg free
 34202                           
 34203                           ;bsoc.c: 67:  C.pvkw += (C.p_pv / 3600.0);
 34204  013710  0E00               	movlw	0
 34205  013712  6EE6               	movwf	postinc1,c
 34206  013714  0E00               	movlw	0
 34207  013716  6EE6               	movwf	postinc1,c
 34208  013718  0E61               	movlw	97
 34209  01371A  6EE6               	movwf	postinc1,c
 34210  01371C  0E45               	movlw	69
 34211  01371E  6EE6               	movwf	postinc1,c
 34212  013720  EE21  F37B         	lfsr	2,_C+124	;volatile
 34213  013724  006F FF7B FFE6     	movff	postinc2,postinc1
 34214  01372A  006F FF7B FFE6     	movff	postinc2,postinc1
 34215  013730  006F FF7B FFE6     	movff	postinc2,postinc1
 34216  013736  006F FF7B FFE6     	movff	postinc2,postinc1
 34217  01373C  ECB6  F0A6         	call	___fldiv	;wreg free
 34218  013740  0060  F007  FFE6   	movff	btemp,postinc1
 34219  013746  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34220  01374C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34221  013752  0060  F013  FFE6   	movff	btemp+3,postinc1
 34222  013758  0EA7               	movlw	low (_C+168)
 34223  01375A  6EE6               	movwf	postinc1,c
 34224  01375C  0E07               	movlw	high (_C+168)
 34225  01375E  6EE6               	movwf	postinc1,c
 34226  013760  ECD0  F0D7         	call	___asfladd	;wreg free
 34227                           
 34228                           ;bsoc.c: 68:  C.invkw += (C.p_inverter / 3600.0);
 34229  013764  0E00               	movlw	0
 34230  013766  6EE6               	movwf	postinc1,c
 34231  013768  0E00               	movlw	0
 34232  01376A  6EE6               	movwf	postinc1,c
 34233  01376C  0E61               	movlw	97
 34234  01376E  6EE6               	movwf	postinc1,c
 34235  013770  0E45               	movlw	69
 34236  013772  6EE6               	movwf	postinc1,c
 34237  013774  EE21  F377         	lfsr	2,_C+120	;volatile
 34238  013778  006F FF7B FFE6     	movff	postinc2,postinc1
 34239  01377E  006F FF7B FFE6     	movff	postinc2,postinc1
 34240  013784  006F FF7B FFE6     	movff	postinc2,postinc1
 34241  01378A  006F FF7B FFE6     	movff	postinc2,postinc1
 34242  013790  ECB6  F0A6         	call	___fldiv	;wreg free
 34243  013794  0060  F007  FFE6   	movff	btemp,postinc1
 34244  01379A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34245  0137A0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34246  0137A6  0060  F013  FFE6   	movff	btemp+3,postinc1
 34247  0137AC  0EAB               	movlw	low (_C+172)
 34248  0137AE  6EE6               	movwf	postinc1,c
 34249  0137B0  0E07               	movlw	high (_C+172)
 34250  0137B2  6EE6               	movwf	postinc1,c
 34251  0137B4  ECD0  F0D7         	call	___asfladd	;wreg free
 34252                           
 34253                           ;bsoc.c: 69:  C.loadkw += (C.p_load / 3600.0);
 34254  0137B8  0E00               	movlw	0
 34255  0137BA  6EE6               	movwf	postinc1,c
 34256  0137BC  0E00               	movlw	0
 34257  0137BE  6EE6               	movwf	postinc1,c
 34258  0137C0  0E61               	movlw	97
 34259  0137C2  6EE6               	movwf	postinc1,c
 34260  0137C4  0E45               	movlw	69
 34261  0137C6  6EE6               	movwf	postinc1,c
 34262  0137C8  EE21  F373         	lfsr	2,_C+116	;volatile
 34263  0137CC  006F FF7B FFE6     	movff	postinc2,postinc1
 34264  0137D2  006F FF7B FFE6     	movff	postinc2,postinc1
 34265  0137D8  006F FF7B FFE6     	movff	postinc2,postinc1
 34266  0137DE  006F FF7B FFE6     	movff	postinc2,postinc1
 34267  0137E4  ECB6  F0A6         	call	___fldiv	;wreg free
 34268  0137E8  0060  F007  FFE6   	movff	btemp,postinc1
 34269  0137EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34270  0137F4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34271  0137FA  0060  F013  FFE6   	movff	btemp+3,postinc1
 34272  013800  0EAF               	movlw	low (_C+176)
 34273  013802  6EE6               	movwf	postinc1,c
 34274  013804  0E07               	movlw	high (_C+176)
 34275  013806  6EE6               	movwf	postinc1,c
 34276  013808  ECD0  F0D7         	call	___asfladd	;wreg free
 34277                           
 34278                           ;bsoc.c: 70:  if (C.p_bat > 0.0)
 34279  01380C  EE21  F37F         	lfsr	2,_C+128	;volatile
 34280  013810  006F FF7B FFE6     	movff	postinc2,postinc1
 34281  013816  006F FF7B FFE6     	movff	postinc2,postinc1
 34282  01381C  006F FF7B FFE6     	movff	postinc2,postinc1
 34283  013822  006F FF7B FFE6     	movff	postinc2,postinc1
 34284  013828  0E00               	movlw	0
 34285  01382A  6EE6               	movwf	postinc1,c
 34286  01382C  0E00               	movlw	0
 34287  01382E  6EE6               	movwf	postinc1,c
 34288  013830  0E00               	movlw	0
 34289  013832  6EE6               	movwf	postinc1,c
 34290  013834  0E00               	movlw	0
 34291  013836  6EE6               	movwf	postinc1,c
 34292  013838  ECE8  F0C8         	call	___flge	;wreg free
 34293  01383C  B001               	btfsc	btemp& (0+255),0,c
 34294  01383E  D02A               	goto	l13054
 34295                           
 34296                           ;bsoc.c: 71:   C.bkwi += (C.p_bat / 3600.0);
 34297  013840  0E00               	movlw	0
 34298  013842  6EE6               	movwf	postinc1,c
 34299  013844  0E00               	movlw	0
 34300  013846  6EE6               	movwf	postinc1,c
 34301  013848  0E61               	movlw	97
 34302  01384A  6EE6               	movwf	postinc1,c
 34303  01384C  0E45               	movlw	69
 34304  01384E  6EE6               	movwf	postinc1,c
 34305  013850  EE21  F37F         	lfsr	2,_C+128	;volatile
 34306  013854  006F FF7B FFE6     	movff	postinc2,postinc1
 34307  01385A  006F FF7B FFE6     	movff	postinc2,postinc1
 34308  013860  006F FF7B FFE6     	movff	postinc2,postinc1
 34309  013866  006F FF7B FFE6     	movff	postinc2,postinc1
 34310  01386C  ECB6  F0A6         	call	___fldiv	;wreg free
 34311  013870  0060  F007  FFE6   	movff	btemp,postinc1
 34312  013876  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34313  01387C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34314  013882  0060  F013  FFE6   	movff	btemp+3,postinc1
 34315  013888  0E9F               	movlw	low (_C+160)
 34316  01388A  6EE6               	movwf	postinc1,c
 34317  01388C  0E07               	movlw	high (_C+160)
 34318  01388E  6EE6               	movwf	postinc1,c
 34319  013890  ECD0  F0D7         	call	___asfladd	;wreg free
 34320  013894                     l13054:
 34321                           
 34322                           ;bsoc.c: 72:  if (C.p_bat < 0.0)
 34323  013894  EE21  F37F         	lfsr	2,_C+128	;volatile
 34324  013898  0E03               	movlw	3
 34325  01389A  AEDB               	btfss	plusw2,7,c
 34326  01389C  D038               	goto	l13058
 34327                           
 34328                           ;bsoc.c: 73:   C.bkwo += fabsf(C.p_bat / 3600.0);
 34329  01389E  0E00               	movlw	0
 34330  0138A0  6EE6               	movwf	postinc1,c
 34331  0138A2  0E00               	movlw	0
 34332  0138A4  6EE6               	movwf	postinc1,c
 34333  0138A6  0E61               	movlw	97
 34334  0138A8  6EE6               	movwf	postinc1,c
 34335  0138AA  0E45               	movlw	69
 34336  0138AC  6EE6               	movwf	postinc1,c
 34337  0138AE  EE21  F37F         	lfsr	2,_C+128	;volatile
 34338  0138B2  006F FF7B FFE6     	movff	postinc2,postinc1
 34339  0138B8  006F FF7B FFE6     	movff	postinc2,postinc1
 34340  0138BE  006F FF7B FFE6     	movff	postinc2,postinc1
 34341  0138C4  006F FF7B FFE6     	movff	postinc2,postinc1
 34342  0138CA  ECB6  F0A6         	call	___fldiv	;wreg free
 34343  0138CE  0060  F007  FFE6   	movff	btemp,postinc1
 34344  0138D4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34345  0138DA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34346  0138E0  0060  F013  FFE6   	movff	btemp+3,postinc1
 34347  0138E6  ECA0  F0D3         	call	_fabsf	;wreg free
 34348  0138EA  0060  F007  FFE6   	movff	btemp,postinc1
 34349  0138F0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34350  0138F6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34351  0138FC  0060  F013  FFE6   	movff	btemp+3,postinc1
 34352  013902  0EA3               	movlw	low (_C+164)
 34353  013904  6EE6               	movwf	postinc1,c
 34354  013906  0E07               	movlw	high (_C+164)
 34355  013908  6EE6               	movwf	postinc1,c
 34356  01390A  ECD0  F0D7         	call	___asfladd	;wreg free
 34357  01390E                     l13058:
 34358                           
 34359                           ;bsoc.c: 75:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 34360  01390E  0E00               	movlw	0
 34361  013910  6EE6               	movwf	postinc1,c
 34362  013912  0E00               	movlw	0
 34363  013914  6EE6               	movwf	postinc1,c
 34364  013916  0EC8               	movlw	200
 34365  013918  6EE6               	movwf	postinc1,c
 34366  01391A  0E42               	movlw	66
 34367  01391C  6EE6               	movwf	postinc1,c
 34368  01391E  EE21  F38B         	lfsr	2,_C+140	;volatile
 34369  013922  006F FF7B FFE6     	movff	postinc2,postinc1
 34370  013928  006F FF7B FFE6     	movff	postinc2,postinc1
 34371  01392E  006F FF7B FFE6     	movff	postinc2,postinc1
 34372  013934  006F FF7B FFE6     	movff	postinc2,postinc1
 34373  01393A  EE21  F39B         	lfsr	2,_C+156	;volatile
 34374  01393E  006F FF7B FFE6     	movff	postinc2,postinc1
 34375  013944  006F FF7B FFE6     	movff	postinc2,postinc1
 34376  01394A  006F FF7B FFE6     	movff	postinc2,postinc1
 34377  013950  006F FF7B FFE6     	movff	postinc2,postinc1
 34378  013956  ECB6  F0A6         	call	___fldiv	;wreg free
 34379  01395A  0060  F007  FFE6   	movff	btemp,postinc1
 34380  013960  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34381  013966  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34382  01396C  0060  F013  FFE6   	movff	btemp+3,postinc1
 34383  013972  ECC3  F09E         	call	___flmul	;wreg free
 34384  013976  0060  F007  FFE6   	movff	btemp,postinc1
 34385  01397C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34386  013982  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34387  013988  0060  F013  FFE6   	movff	btemp+3,postinc1
 34388  01398E  EC2F  F0C8         	call	___fltol	;wreg free
 34389  013992  0060  F004  F00B   	movff	btemp,btemp+10
 34390  013998  0060  F008  F00C   	movff	btemp+1,btemp+11
 34391  01399E  0E01               	movlw	1
 34392  0139A0  260B               	addwf	(btemp+10)^0,f,c
 34393  0139A2  0E00               	movlw	0
 34394  0139A4  220C               	addwfc	(btemp+11)^0,f,c
 34395  0139A6  0060  F02C  F7B5   	movff	btemp+10,_C+182	;volatile
 34396  0139AC  0060  F030  F7B6   	movff	btemp+11,_C+183	;volatile
 34397                           
 34398                           ;bsoc.c: 76:  if (C.soc > 100)
 34399  0139B2  EE21  F3B5         	lfsr	2,_C+182	;volatile
 34400  0139B6  0E01               	movlw	1
 34401  0139B8  50DB               	movf	plusw2,w,c
 34402  0139BA  E104               	bnz	u1256_20
 34403  0139BC  0E65               	movlw	101
 34404  0139BE  5CDE               	subwf	postinc2,w,c
 34405  0139C0  A0D8               	btfss	status,0,c
 34406  0139C2  D008               	goto	l13064
 34407  0139C4                     u1256_20:
 34408                           
 34409                           ;bsoc.c: 77:   C.soc = 100;
 34410  0139C4  0E64               	movlw	100
 34411  0139C6  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
 34412  0139CC  0E00               	movlw	0
 34413  0139CE  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
 34414  0139D4                     l13064:
 34415                           
 34416                           ;bsoc.c: 79:  if (C.c_bat < 0.0) {
 34417  0139D4  EE21  F343         	lfsr	2,_C+68	;volatile
 34418  0139D8  0E03               	movlw	3
 34419  0139DA  AEDB               	btfss	plusw2,7,c
 34420  0139DC  D047               	goto	l2093
 34421                           
 34422                           ;bsoc.c: 80:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 34423  0139DE  EE21  F343         	lfsr	2,_C+68	;volatile
 34424  0139E2  006F FF7B FFE6     	movff	postinc2,postinc1
 34425  0139E8  006F FF7B FFE6     	movff	postinc2,postinc1
 34426  0139EE  006F FF7B FFE6     	movff	postinc2,postinc1
 34427  0139F4  006F FF7B FFE6     	movff	postinc2,postinc1
 34428  0139FA  EE21  F39B         	lfsr	2,_C+156	;volatile
 34429  0139FE  006F FF7B FFE6     	movff	postinc2,postinc1
 34430  013A04  006F FF7B FFE6     	movff	postinc2,postinc1
 34431  013A0A  006F FF7B FFE6     	movff	postinc2,postinc1
 34432  013A10  006F FF7B FFE6     	movff	postinc2,postinc1
 34433  013A16  ECB6  F0A6         	call	___fldiv	;wreg free
 34434  013A1A  0060  F007  FFE6   	movff	btemp,postinc1
 34435  013A20  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34436  013A26  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34437  013A2C  0060  F013  FFE6   	movff	btemp+3,postinc1
 34438  013A32  EC60  F0DB         	call	___flneg	;wreg free
 34439  013A36  0060  F007  FFE6   	movff	btemp,postinc1
 34440  013A3C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34441  013A42  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34442  013A48  0060  F013  FFE6   	movff	btemp+3,postinc1
 34443  013A4E  EC2F  F0C8         	call	___fltol	;wreg free
 34444  013A52  0060  F004  F00B   	movff	btemp,btemp+10
 34445  013A58  0060  F008  F00C   	movff	btemp+1,btemp+11
 34446  013A5E  0060  F02C  F7B3   	movff	btemp+10,_C+180	;volatile
 34447  013A64  0060  F030  F7B4   	movff	btemp+11,_C+181	;volatile
 34448                           
 34449                           ;bsoc.c: 81:  } else {
 34450  013A6A  D008               	goto	l13068
 34451  013A6C                     l2093:
 34452                           
 34453                           ;bsoc.c: 82:   C.runtime = 120;
 34454  013A6C  0E78               	movlw	120
 34455  013A6E  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 34456  013A74  0E00               	movlw	0
 34457  013A76  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 34458  013A7C                     l13068:
 34459                           
 34460                           ;bsoc.c: 84:  if (C.runtime > 120)
 34461  013A7C  EE21  F3B3         	lfsr	2,_C+180	;volatile
 34462  013A80  0E01               	movlw	1
 34463  013A82  50DB               	movf	plusw2,w,c
 34464  013A84  E104               	bnz	u1258_20
 34465  013A86  0E79               	movlw	121
 34466  013A88  5CDE               	subwf	postinc2,w,c
 34467  013A8A  A0D8               	btfss	status,0,c
 34468  013A8C  D008               	goto	l13072
 34469  013A8E                     u1258_20:
 34470                           
 34471                           ;bsoc.c: 85:   C.runtime = 120;
 34472  013A8E  0E78               	movlw	120
 34473  013A90  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 34474  013A96  0E00               	movlw	0
 34475  013A98  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 34476  013A9E                     l13072:
 34477                           
 34478                           ;bsoc.c: 87:  V.lowint_count++;
 34479  013A9E  0E01               	movlw	1
 34480  013AA0  0101               	movlb	1	; () banked
 34481  013AA2  27BA               	addwf	(_V+179)& (0+255),f,b	;volatile
 34482  013AA4  0E00               	movlw	0
 34483  013AA6  23BB               	addwfc	(_V+180)& (0+255),f,b	;volatile
 34484  013AA8  23BC               	addwfc	(_V+181)& (0+255),f,b	;volatile
 34485  013AAA  23BD               	addwfc	(_V+182)& (0+255),f,b	;volatile
 34486                           
 34487                           ;bsoc.c: 89:  if (!log_update_wait++ && V.system_stable) {
 34488  013AAC  2A40               	incf	calc_bsoc@log_update_wait^0,f,c
 34489  013AAE  0440               	decf	calc_bsoc@log_update_wait^0,w,c
 34490  013AB0  A4D8               	btfss	status,2,c
 34491  013AB2  D15B               	goto	l13084
 34492                           
 34493                           ; BSR set to: 1
 34494  013AB4  51B5               	movf	(_V+174)& (0+255),w,b	;volatile
 34495  013AB6  B4D8               	btfsc	status,2,c
 34496  013AB8  D158               	goto	l13084
 34497                           
 34498                           ; BSR set to: 1
 34499                           ;bsoc.c: 90:   log_ptr = port_data_dma_ptr();
 34500  013ABA  ECCE  F0E1         	call	_port_data_dma_ptr	;wreg free
 34501                           
 34502                           ;stkvar	_log_ptr @ sp[(-6)+4]
 34503  013ABE  0EFF               	movlw	-1
 34504  013AC0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 34505  013AC6  0EFE               	movlw	-2
 34506  013AC8  0060  F007  FFE3   	movff	btemp,plusw1
 34507                           
 34508                           ;bsoc.c: 91:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 34509  013ACE  EE21  F3B9         	lfsr	2,_C+186	;volatile
 34510  013AD2  006F FF7B FFE6     	movff	postinc2,postinc1
 34511  013AD8  006F FF7B FFE6     	movff	postinc2,postinc1
 34512  013ADE  006F FF7B FFE6     	movff	postinc2,postinc1
 34513  013AE4  006F FF7B FFE6     	movff	postinc2,postinc1
 34514  013AEA  EE21  F3BD         	lfsr	2,_C+190	;volatile
 34515  013AEE  006F FF7B FFE6     	movff	postinc2,postinc1
 34516  013AF4  006F FF7B FFE6     	movff	postinc2,postinc1
 34517  013AFA  006F FF7B FFE6     	movff	postinc2,postinc1
 34518  013B00  006F FF7B FFE6     	movff	postinc2,postinc1
 34519  013B06  EE21  F39B         	lfsr	2,_C+156	;volatile
 34520  013B0A  006F FF7B FFE6     	movff	postinc2,postinc1
 34521  013B10  006F FF7B FFE6     	movff	postinc2,postinc1
 34522  013B16  006F FF7B FFE6     	movff	postinc2,postinc1
 34523  013B1C  006F FF7B FFE6     	movff	postinc2,postinc1
 34524  013B22  EE22  F026         	lfsr	2,_C+295	;volatile
 34525  013B26  006F FF7B FFE6     	movff	postinc2,postinc1
 34526  013B2C  006F FF7B FFE6     	movff	postinc2,postinc1
 34527  013B32  006F FF7B FFE6     	movff	postinc2,postinc1
 34528  013B38  006F FF7B FFE6     	movff	postinc2,postinc1
 34529  013B3E  EE22  F022         	lfsr	2,_C+291	;volatile
 34530  013B42  006F FF7B FFE6     	movff	postinc2,postinc1
 34531  013B48  006F FF7B FFE6     	movff	postinc2,postinc1
 34532  013B4E  006F FF7B FFE6     	movff	postinc2,postinc1
 34533  013B54  006F FF7B FFE6     	movff	postinc2,postinc1
 34534  013B5A  EE22  F021         	lfsr	2,_C+290	;volatile
 34535  013B5E  50DF               	movf	indf2,w,c
 34536  013B60  6EE6               	movwf	postinc1,c
 34537  013B62  0E00               	movlw	0
 34538  013B64  6EE6               	movwf	postinc1,c
 34539  013B66  ECBB  F0E1         	call	_get_ac_charger_relay	;wreg free
 34540  013B6A  5001               	movf	btemp^0,w,c
 34541  013B6C  6EE6               	movwf	postinc1,c
 34542  013B6E  0E00               	movlw	0
 34543  013B70  6EE6               	movwf	postinc1,c
 34544  013B72  EE21  F367         	lfsr	2,_C+104	;volatile
 34545  013B76  006F FF7B FFE6     	movff	postinc2,postinc1
 34546  013B7C  006F FF7B FFE6     	movff	postinc2,postinc1
 34547  013B82  006F FF7B FFE6     	movff	postinc2,postinc1
 34548  013B88  006F FF7B FFE6     	movff	postinc2,postinc1
 34549  013B8E  EE21  F387         	lfsr	2,_C+136	;volatile
 34550  013B92  006F FF7B FFE6     	movff	postinc2,postinc1
 34551  013B98  006F FF7B FFE6     	movff	postinc2,postinc1
 34552  013B9E  006F FF7B FFE6     	movff	postinc2,postinc1
 34553  013BA4  006F FF7B FFE6     	movff	postinc2,postinc1
 34554  013BAA  EE21  F3B3         	lfsr	2,_C+180	;volatile
 34555  013BAE  006F FF78  F00B    	movff	postinc2,btemp+10
 34556  013BB4  006F FF74  F00C    	movff	postdec2,btemp+11
 34557  013BBA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 34558  013BC0  0060  F033  FFE6   	movff	btemp+11,postinc1
 34559  013BC6  EE21  F3B5         	lfsr	2,_C+182	;volatile
 34560  013BCA  006F FF78  F00B    	movff	postinc2,btemp+10
 34561  013BD0  006F FF74  F00C    	movff	postdec2,btemp+11
 34562  013BD6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 34563  013BDC  0060  F033  FFE6   	movff	btemp+11,postinc1
 34564  013BE2  EE21  F393         	lfsr	2,_C+148	;volatile
 34565  013BE6  006F FF7B FFE6     	movff	postinc2,postinc1
 34566  013BEC  006F FF7B FFE6     	movff	postinc2,postinc1
 34567  013BF2  006F FF7B FFE6     	movff	postinc2,postinc1
 34568  013BF8  006F FF7B FFE6     	movff	postinc2,postinc1
 34569  013BFE  EE21  F38F         	lfsr	2,_C+144	;volatile
 34570  013C02  006F FF7B FFE6     	movff	postinc2,postinc1
 34571  013C08  006F FF7B FFE6     	movff	postinc2,postinc1
 34572  013C0E  006F FF7B FFE6     	movff	postinc2,postinc1
 34573  013C14  006F FF7B FFE6     	movff	postinc2,postinc1
 34574  013C1A  EE21  F377         	lfsr	2,_C+120	;volatile
 34575  013C1E  006F FF7B FFE6     	movff	postinc2,postinc1
 34576  013C24  006F FF7B FFE6     	movff	postinc2,postinc1
 34577  013C2A  006F FF7B FFE6     	movff	postinc2,postinc1
 34578  013C30  006F FF7B FFE6     	movff	postinc2,postinc1
 34579  013C36  EE21  F373         	lfsr	2,_C+116	;volatile
 34580  013C3A  006F FF7B FFE6     	movff	postinc2,postinc1
 34581  013C40  006F FF7B FFE6     	movff	postinc2,postinc1
 34582  013C46  006F FF7B FFE6     	movff	postinc2,postinc1
 34583  013C4C  006F FF7B FFE6     	movff	postinc2,postinc1
 34584  013C52  EE21  F37B         	lfsr	2,_C+124	;volatile
 34585  013C56  006F FF7B FFE6     	movff	postinc2,postinc1
 34586  013C5C  006F FF7B FFE6     	movff	postinc2,postinc1
 34587  013C62  006F FF7B FFE6     	movff	postinc2,postinc1
 34588  013C68  006F FF7B FFE6     	movff	postinc2,postinc1
 34589  013C6E  EE21  F37F         	lfsr	2,_C+128	;volatile
 34590  013C72  006F FF7B FFE6     	movff	postinc2,postinc1
 34591  013C78  006F FF7B FFE6     	movff	postinc2,postinc1
 34592  013C7E  006F FF7B FFE6     	movff	postinc2,postinc1
 34593  013C84  006F FF7B FFE6     	movff	postinc2,postinc1
 34594  013C8A  EE21  F363         	lfsr	2,_C+100	;volatile
 34595  013C8E  006F FF7B FFE6     	movff	postinc2,postinc1
 34596  013C94  006F FF7B FFE6     	movff	postinc2,postinc1
 34597  013C9A  006F FF7B FFE6     	movff	postinc2,postinc1
 34598  013CA0  006F FF7B FFE6     	movff	postinc2,postinc1
 34599  013CA6  EE21  F34B         	lfsr	2,_C+76	;volatile
 34600  013CAA  006F FF7B FFE6     	movff	postinc2,postinc1
 34601  013CB0  006F FF7B FFE6     	movff	postinc2,postinc1
 34602  013CB6  006F FF7B FFE6     	movff	postinc2,postinc1
 34603  013CBC  006F FF7B FFE6     	movff	postinc2,postinc1
 34604  013CC2  EE21  F34F         	lfsr	2,_C+80	;volatile
 34605  013CC6  006F FF7B FFE6     	movff	postinc2,postinc1
 34606  013CCC  006F FF7B FFE6     	movff	postinc2,postinc1
 34607  013CD2  006F FF7B FFE6     	movff	postinc2,postinc1
 34608  013CD8  006F FF7B FFE6     	movff	postinc2,postinc1
 34609  013CDE  EE21  F353         	lfsr	2,_C+84	;volatile
 34610  013CE2  006F FF7B FFE6     	movff	postinc2,postinc1
 34611  013CE8  006F FF7B FFE6     	movff	postinc2,postinc1
 34612  013CEE  006F FF7B FFE6     	movff	postinc2,postinc1
 34613  013CF4  006F FF7B FFE6     	movff	postinc2,postinc1
 34614  013CFA  0060  F623  FFE6   	movff	_V+129,postinc1
 34615  013D00  0060  F627  FFE6   	movff	_V+130,postinc1
 34616  013D06  0060  F62B  FFE6   	movff	_V+131,postinc1
 34617  013D0C  0060  F62F  FFE6   	movff	_V+132,postinc1
 34618  013D12  0E31               	movlw	49
 34619  013D14  6EE6               	movwf	postinc1,c
 34620  013D16  0E00               	movlw	0
 34621  013D18  6EE6               	movwf	postinc1,c
 34622  013D1A  0ED7               	movlw	low STR_64
 34623  013D1C  6EE6               	movwf	postinc1,c
 34624  013D1E  0EFB               	movlw	high STR_64
 34625  013D20  6EE6               	movwf	postinc1,c
 34626                           
 34627                           ;stkvar	_log_ptr @ sp[(-90)+4]
 34628  013D22  0EAA               	movlw	-86
 34629  013D24  006F FF8F FFE6     	movff	plusw1,postinc1
 34630  013D2A  006F FF8F FFE6     	movff	plusw1,postinc1
 34631  013D30  0E56               	movlw	86
 34632  013D32  6EE6               	movwf	postinc1,c
 34633  013D34  ECF4  F0CE         	call	_sprintf	;wreg free
 34634                           
 34635                           ; BSR set to: 0
 34636                           ;bsoc.c: 97:   StartTimer(TMR_DISPLAY, 125);
 34637  013D38  0E7D               	movlw	125
 34638  013D3A  6EE6               	movwf	postinc1,c
 34639  013D3C  0E00               	movlw	0
 34640  013D3E  6EE6               	movwf	postinc1,c
 34641  013D40  0E0A               	movlw	10
 34642  013D42  6EE6               	movwf	postinc1,c
 34643  013D44  ECDC  F0DC         	call	_StartTimer	;wreg free
 34644                           
 34645                           ;bsoc.c: 98:   send_port_data_dma(strlen((char*) log_ptr));
 34646                           ;stkvar	_log_ptr @ sp[(-6)+4]
 34647  013D48  0EFE               	movlw	-2
 34648  013D4A  006F FF8F FFE6     	movff	plusw1,postinc1
 34649  013D50  006F FF8F FFE6     	movff	plusw1,postinc1
 34650  013D56  EC9A  F0D5         	call	_strlen	;wreg free
 34651  013D5A  0060  F007  FFE6   	movff	btemp,postinc1
 34652  013D60  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34653  013D66  ECC6  F0DA         	call	_send_port_data_dma	;wreg free
 34654  013D6A                     l13084:
 34655                           
 34656                           ;bsoc.c: 100:  if (log_update_wait >= 10)
 34657  013D6A  0E09               	movlw	9
 34658  013D6C  6440               	cpfsgt	calc_bsoc@log_update_wait^0,c
 34659  013D6E  D001               	goto	l2097
 34660                           
 34661                           ;bsoc.c: 101:   log_update_wait = 0;
 34662  013D70  6A40               	clrf	calc_bsoc@log_update_wait^0,c
 34663  013D72                     l2097:
 34664                           
 34665                           ;bsoc.c: 103:  C.update = 0;
 34666  013D72  0E00               	movlw	0
 34667  013D74  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 34668                           
 34669                           ;bsoc.c: 105:  do { LATEbits.LATE1 = 0; } while(0);
 34670  013D7A  92BE               	bcf	190,1,c	;volatile
 34671                           
 34672                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 34673  013D7C  0EFA               	movlw	250
 34674  013D7E  26E1               	addwf	fsr1l,f,c
 34675  013D80  0EFF               	movlw	255
 34676  013D82  22E2               	addwfc	fsr1h,f,c
 34677  013D84  0012               	return		;funcret
 34678  013D86                     __end_of_calc_bsoc:
 34679                           	opt callstack 0
 34680                           
 34681 ;; *************** function _send_port_data_dma *****************
 34682 ;; Defined at:
 34683 ;;		line 398 in file "eadog.c"
 34684 ;; Parameters:    Size  Location     Type
 34685 ;;  dsize           2  [STACK] unsigned short 
 34686 ;; Auto vars:     Size  Location     Type
 34687 ;;		None
 34688 ;; Return value:  Size  Location     Type
 34689 ;;                  1  [STACK] void 
 34690 ;; Registers used:
 34691 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 34692 ;; Tracked objects:
 34693 ;;		On entry : 0/0
 34694 ;;		On exit  : 3F/3B
 34695 ;;		Unchanged: 0/0
 34696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34701 ;;Total ram usage:        0 bytes
 34702 ;; Hardware stack levels used:    1
 34703 ;; Hardware stack levels required when called:    3
 34704 ;; This function calls:
 34705 ;;		Nothing
 34706 ;; This function is called by:
 34707 ;;		_calc_bsoc
 34708 ;; This function uses a reentrant model
 34709 ;;
 34710                           
 34711                           	psect	text156
 34712  01B58C                     __ptext156:
 34713                           	opt callstack 0
 34714  01B58C                     _send_port_data_dma:
 34715                           	opt callstack 10
 34716                           
 34717                           ;eadog.c: 398: void send_port_data_dma(uint16_t dsize);eadog.c: 399: {;eadog.c: 400:  if
      +                           (dsize > 512)
 34718                           ;stkvar	_dsize @ sp[(0)+-2]
 34719                           
 34720                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34721                           ;incstack = 0
 34722  01B58C  0EFE               	movlw	-2
 34723  01B58E  04E3               	decf	plusw1,w,c
 34724  01B590  0EFF               	movlw	-1
 34725  01B592  006F FF8C  F001    	movff	plusw1,btemp
 34726  01B598  0E02               	movlw	2
 34727  01B59A  5A01               	subwfb	btemp^0,f,c
 34728  01B59C  A0D8               	btfss	status,0,c
 34729  01B59E  D00C               	goto	l10086
 34730                           
 34731                           ;eadog.c: 401:   dsize = 512;
 34732  01B5A0  0E00               	movlw	0
 34733  01B5A2  6E0B               	movwf	(btemp+10)^0,c
 34734  01B5A4  0E02               	movlw	2
 34735  01B5A6  6E0C               	movwf	(btemp+11)^0,c
 34736                           
 34737                           ;stkvar	_dsize @ sp[(0)+-2]
 34738  01B5A8  0EFE               	movlw	-2
 34739  01B5AA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 34740  01B5B0  0EFF               	movlw	-1
 34741  01B5B2  0060  F033  FFE3   	movff	btemp+11,plusw1
 34742  01B5B8                     l10086:
 34743                           
 34744                           ;eadog.c: 403:  DMA2CON0bits.EN = 0;
 34745  01B5B8  013B               	movlb	59	; () banked
 34746  01B5BA  9FDC               	bcf	220,7,b	;volatile
 34747                           
 34748                           ; BSR set to: 59
 34749                           ;eadog.c: 404:  DMA2SSZ = dsize;
 34750                           ;stkvar	_dsize @ sp[(0)+-2]
 34751  01B5BC  0EFE               	movlw	-2
 34752  01B5BE  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 34753  01B5C4  0EFF               	movlw	-1
 34754  01B5C6  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 34755                           
 34756                           ; BSR set to: 59
 34757                           ;eadog.c: 405:  DMA2DSZ = 1;
 34758  01B5CC  0E00               	movlw	0
 34759  01B5CE  6FCF               	movwf	207,b	;volatile
 34760  01B5D0  0E01               	movlw	1
 34761  01B5D2  6FCE               	movwf	206,b	;volatile
 34762                           
 34763                           ; BSR set to: 59
 34764                           ;eadog.c: 406:  DMA2CON0bits.EN = 1;
 34765  01B5D4  8FDC               	bsf	220,7,b	;volatile
 34766                           
 34767                           ; BSR set to: 59
 34768                           ;eadog.c: 407:  DMA2CON0bits.DMA2SIRQEN = 1;
 34769  01B5D6  8DDC               	bsf	220,6,b	;volatile
 34770                           
 34771                           ; BSR set to: 59
 34772                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 34773  01B5D8  52E5               	movf	postdec1,f,c
 34774  01B5DA  52E5               	movf	postdec1,f,c
 34775  01B5DC  0012               	return		;funcret
 34776  01B5DE                     __end_of_send_port_data_dma:
 34777                           	opt callstack 0
 34778                           
 34779 ;; *************** function _port_data_dma_ptr *****************
 34780 ;; Defined at:
 34781 ;;		line 413 in file "eadog.c"
 34782 ;; Parameters:    Size  Location     Type
 34783 ;;		None
 34784 ;; Auto vars:     Size  Location     Type
 34785 ;;		None
 34786 ;; Return value:  Size  Location     Type
 34787 ;;                  2  [STACK] PTR unsigned char 
 34788 ;; Registers used:
 34789 ;;		wreg, status,2, status,0, btemp, btemp+1
 34790 ;; Tracked objects:
 34791 ;;		On entry : 3F/1
 34792 ;;		On exit  : 0/0
 34793 ;;		Unchanged: 0/0
 34794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34799 ;;Total ram usage:        0 bytes
 34800 ;; Hardware stack levels used:    1
 34801 ;; Hardware stack levels required when called:    3
 34802 ;; This function calls:
 34803 ;;		Nothing
 34804 ;; This function is called by:
 34805 ;;		_calc_bsoc
 34806 ;; This function uses a reentrant model
 34807 ;;
 34808                           
 34809                           	psect	text157
 34810  01C39C                     __ptext157:
 34811                           	opt callstack 0
 34812  01C39C                     _port_data_dma_ptr:
 34813                           	opt callstack 10
 34814                           
 34815                           ;eadog.c: 415:  return port_data;
 34816                           
 34817                           ; BSR set to: 59
 34818                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34819                           ;incstack = 0
 34820  01C39C  0EFF               	movlw	low _port_data
 34821  01C39E  6E01               	movwf	btemp^0,c
 34822  01C3A0  0E04               	movlw	high _port_data
 34823  01C3A2  6E02               	movwf	(btemp+1)^0,c
 34824                           
 34825                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34826  01C3A4  0012               	return		;funcret
 34827  01C3A6                     __end_of_port_data_dma_ptr:
 34828                           	opt callstack 0
 34829                           
 34830 ;; *************** function ___asfladd *****************
 34831 ;; Defined at:
 34832 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 34833 ;; Parameters:    Size  Location     Type
 34834 ;;  f1p             2  [STACK] PTR 
 34835 ;;		 -> C(299), 
 34836 ;;  f2              4  [STACK] PTR 
 34837 ;; Auto vars:     Size  Location     Type
 34838 ;;		None
 34839 ;; Return value:  Size  Location     Type
 34840 ;;                  4  [STACK] PTR 
 34841 ;; Registers used:
 34842 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 34843 ;; Tracked objects:
 34844 ;;		On entry : 0/0
 34845 ;;		On exit  : 0/0
 34846 ;;		Unchanged: 0/0
 34847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34852 ;;Total ram usage:        0 bytes
 34853 ;; Hardware stack levels used:    1
 34854 ;; Hardware stack levels required when called:    4
 34855 ;; This function calls:
 34856 ;;		___fladd
 34857 ;; This function is called by:
 34858 ;;		_calc_bsoc
 34859 ;; This function uses a reentrant model
 34860 ;;
 34861                           
 34862                           	psect	text158
 34863  01AFA0                     __ptext158:
 34864                           	opt callstack 0
 34865  01AFA0                     ___asfladd:
 34866                           	opt callstack 9
 34867                           
 34868                           ;	Return value of ___asfladd is never used
 34869                           ;stkvar	_f2 @ sp[(0)+-6]
 34870                           
 34871                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34872                           ;incstack = 0
 34873  01AFA0  0EFA               	movlw	-6
 34874  01AFA2  006F FF8F FFE6     	movff	plusw1,postinc1
 34875  01AFA8  006F FF8F FFE6     	movff	plusw1,postinc1
 34876  01AFAE  006F FF8F FFE6     	movff	plusw1,postinc1
 34877  01AFB4  006F FF8F FFE6     	movff	plusw1,postinc1
 34878                           
 34879                           ;stkvar	_f1p @ sp[(-4)+-2]
 34880  01AFBA  0EFA               	movlw	-6
 34881  01AFBC  006F FF8F FFD9     	movff	plusw1,fsr2l
 34882  01AFC2  0EFB               	movlw	-5
 34883  01AFC4  006F FF8F FFDA     	movff	plusw1,fsr2h
 34884  01AFCA  006F FF7B FFE6     	movff	postinc2,postinc1
 34885  01AFD0  006F FF7B FFE6     	movff	postinc2,postinc1
 34886  01AFD6  006F FF7B FFE6     	movff	postinc2,postinc1
 34887  01AFDC  006F FF7B FFE6     	movff	postinc2,postinc1
 34888  01AFE2  ECD8  F0A2         	call	___fladd	;wreg free
 34889                           
 34890                           ;stkvar	_f1p @ sp[(0)+-2]
 34891  01AFE6  0EFE               	movlw	-2
 34892  01AFE8  006F FF8F FFD9     	movff	plusw1,fsr2l
 34893  01AFEE  0EFF               	movlw	-1
 34894  01AFF0  006F FF8F FFDA     	movff	plusw1,fsr2h
 34895  01AFF6  0060  F007  FFDE   	movff	btemp,postinc2
 34896  01AFFC  0060  F00B  FFDE   	movff	btemp+1,postinc2
 34897  01B002  0060  F00F  FFDE   	movff	btemp+2,postinc2
 34898  01B008  0060  F013  FFDE   	movff	btemp+3,postinc2
 34899                           
 34900                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 34901  01B00E  0EFA               	movlw	250
 34902  01B010  26E1               	addwf	fsr1l,f,c
 34903  01B012  0EFF               	movlw	255
 34904  01B014  22E2               	addwfc	fsr1h,f,c
 34905  01B016  0012               	return		;funcret
 34906  01B018                     __end_of___asfladd:
 34907                           	opt callstack 0
 34908                           
 34909 ;; *************** function _INT0_ISR *****************
 34910 ;; Defined at:
 34911 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 34912 ;; Parameters:    Size  Location     Type
 34913 ;;		None
 34914 ;; Auto vars:     Size  Location     Type
 34915 ;;		None
 34916 ;; Return value:  Size  Location     Type
 34917 ;;                  1    wreg      void 
 34918 ;; Registers used:
 34919 ;;		wreg, status,2, status,0, pclath, tosl
 34920 ;; Tracked objects:
 34921 ;;		On entry : 0/0
 34922 ;;		On exit  : 0/0
 34923 ;;		Unchanged: 0/0
 34924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34929 ;;Total ram usage:        0 bytes
 34930 ;; Hardware stack levels used:    1
 34931 ;; Hardware stack levels required when called:    2
 34932 ;; This function calls:
 34933 ;;		_INT0_CallBack
 34934 ;; This function is called by:
 34935 ;;		Interrupt level 2
 34936 ;; This function uses a non-reentrant model
 34937 ;;
 34938                           
 34939                           	psect	text159
 34940  01C384                     __ptext159:
 34941                           	opt callstack 0
 34942  01C384                     _INT0_ISR:
 34943                           	opt callstack 2
 34944                           
 34945                           ;incstack = 0
 34946  01C384  EE14  F15E         	lfsr	1,___inthi_sp
 34947                           
 34948                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 34949  01C388  0139               	movlb	57	; () banked
 34950  01C38A  91A1               	bcf	161,0,b	;volatile
 34951                           
 34952                           ; BSR set to: 57
 34953                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 34954  01C38C  EC5E  F0E0         	call	_INT0_CallBack	;wreg free
 34955  01C390  0011               	retfie		f
 34956  01C392                     __end_of_INT0_ISR:
 34957                           	opt callstack 0
 34958                           
 34959 ;; *************** function _INT0_CallBack *****************
 34960 ;; Defined at:
 34961 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 34962 ;; Parameters:    Size  Location     Type
 34963 ;;		None
 34964 ;; Auto vars:     Size  Location     Type
 34965 ;;		None
 34966 ;; Return value:  Size  Location     Type
 34967 ;;                  1  [STACK] void 
 34968 ;; Registers used:
 34969 ;;		wreg, status,2, status,0, pclath, tosl
 34970 ;; Tracked objects:
 34971 ;;		On entry : 3F/39
 34972 ;;		On exit  : 0/0
 34973 ;;		Unchanged: 0/0
 34974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34979 ;;Total ram usage:        0 bytes
 34980 ;; Hardware stack levels used:    1
 34981 ;; Hardware stack levels required when called:    1
 34982 ;; This function calls:
 34983 ;;		Absolute function
 34984 ;;		_INT0_DefaultInterruptHandler
 34985 ;; This function is called by:
 34986 ;;		_INT0_ISR
 34987 ;; This function uses a reentrant model
 34988 ;;
 34989                           
 34990                           	psect	text160
 34991  01C0BC                     __ptext160:
 34992                           	opt callstack 0
 34993  01C0BC                     _INT0_CallBack:
 34994                           	opt callstack 2
 34995                           
 34996                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 34997                           
 34998                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34999                           ;incstack = 0
 35000  01C0BC  0100               	movlb	0	; () banked
 35001  01C0BE  5197               	movf	_INT0_InterruptHandler& (0+255),w,b
 35002  01C0C0  1198               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 35003  01C0C2  1199               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 35004  01C0C4  B4D8               	btfsc	status,2,c
 35005  01C0C6  0012               	return	
 35006                           
 35007                           ; BSR set to: 0
 35008                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 35009  01C0C8  D801               	call	u1003_48
 35010  01C0CA  0012               	return	
 35011  01C0CC                     u1003_48:
 35012  01C0CC  0005               	push	
 35013  01C0CE  6EFA               	movwf	pclath,c
 35014  01C0D0  5197               	movf	_INT0_InterruptHandler& (0+255),w,b
 35015  01C0D2  6EFD               	movwf	tosl,c
 35016  01C0D4  5198               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 35017  01C0D6  6EFE               	movwf	tosh,c
 35018  01C0D8  5199               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 35019  01C0DA  6EFF               	movwf	tosu,c
 35020  01C0DC  50FA               	movf	pclath,w,c
 35021  01C0DE  0012               	return		;indir
 35022  01C0E0                     __end_of_INT0_CallBack:
 35023                           	opt callstack 0
 35024                           
 35025 ;; *************** function _INT0_DefaultInterruptHandler *****************
 35026 ;; Defined at:
 35027 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 35028 ;; Parameters:    Size  Location     Type
 35029 ;;		None
 35030 ;; Auto vars:     Size  Location     Type
 35031 ;;		None
 35032 ;; Return value:  Size  Location     Type
 35033 ;;                  1  [STACK] void 
 35034 ;; Registers used:
 35035 ;;		None
 35036 ;; Tracked objects:
 35037 ;;		On entry : 3F/0
 35038 ;;		On exit  : 0/0
 35039 ;;		Unchanged: 0/0
 35040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35045 ;;Total ram usage:        0 bytes
 35046 ;; Hardware stack levels used:    1
 35047 ;; This function calls:
 35048 ;;		Nothing
 35049 ;; This function is called by:
 35050 ;;		_EXT_INT_Initialize
 35051 ;;		_INT0_CallBack
 35052 ;; This function uses a reentrant model
 35053 ;;
 35054                           
 35055                           	psect	text161
 35056  01C416                     __ptext161:
 35057                           	opt callstack 0
 35058  01C416                     _INT0_DefaultInterruptHandler:
 35059                           	opt callstack 2
 35060                           
 35061                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 35062                           
 35063                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35064                           ;incstack = 0
 35065  01C416  0012               	return		;funcret
 35066  01C418                     __end_of_INT0_DefaultInterruptHandler:
 35067                           	opt callstack 0
 35068                           
 35069 ;; *************** function _Default_ISR *****************
 35070 ;; Defined at:
 35071 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 35072 ;; Parameters:    Size  Location     Type
 35073 ;;		None
 35074 ;; Auto vars:     Size  Location     Type
 35075 ;;		None
 35076 ;; Return value:  Size  Location     Type
 35077 ;;                  1    wreg      void 
 35078 ;; Registers used:
 35079 ;;		None
 35080 ;; Tracked objects:
 35081 ;;		On entry : 0/0
 35082 ;;		On exit  : 0/0
 35083 ;;		Unchanged: 0/0
 35084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35089 ;;Total ram usage:        0 bytes
 35090 ;; Hardware stack levels used:    1
 35091 ;; This function calls:
 35092 ;;		Nothing
 35093 ;; This function is called by:
 35094 ;;		Interrupt level 2
 35095 ;; This function uses a non-reentrant model
 35096 ;;
 35097                           
 35098                           	psect	text162
 35099  01C40C                     __ptext162:
 35100                           	opt callstack 0
 35101  01C40C                     _Default_ISR:
 35102                           	opt callstack 4
 35103                           
 35104                           ;incstack = 0
 35105  01C40C  EE14  F15E         	lfsr	1,___inthi_sp
 35106  01C410  0011               	retfie		f
 35107  01C412                     __end_of_Default_ISR:
 35108                           	opt callstack 0
 35109                           
 35110 ;; *************** function _ADCC_ISR *****************
 35111 ;; Defined at:
 35112 ;;		line 314 in file "mcc_generated_files/adcc.c"
 35113 ;; Parameters:    Size  Location     Type
 35114 ;;		None
 35115 ;; Auto vars:     Size  Location     Type
 35116 ;;		None
 35117 ;; Return value:  Size  Location     Type
 35118 ;;                  1    wreg      void 
 35119 ;; Registers used:
 35120 ;;		wreg, status,2, status,0, pclath, tosl
 35121 ;; Tracked objects:
 35122 ;;		On entry : 0/0
 35123 ;;		On exit  : 0/0
 35124 ;;		Unchanged: 0/0
 35125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35130 ;;Total ram usage:        0 bytes
 35131 ;; Hardware stack levels used:    1
 35132 ;; Hardware stack levels required when called:    1
 35133 ;; This function calls:
 35134 ;;		Absolute function
 35135 ;;		_ADCC_DefaultInterruptHandler
 35136 ;;		_adc_int_handler
 35137 ;; This function is called by:
 35138 ;;		Interrupt level 2
 35139 ;; This function uses a non-reentrant model
 35140 ;;
 35141                           
 35142                           	psect	text163
 35143  01BD50                     __ptext163:
 35144                           	opt callstack 0
 35145  01BD50                     _ADCC_ISR:
 35146                           	opt callstack 3
 35147                           
 35148                           ;incstack = 0
 35149  01BD50  EE14  F15E         	lfsr	1,___inthi_sp
 35150                           
 35151                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 35152  01BD54  0139               	movlb	57	; () banked
 35153  01BD56  95A1               	bcf	161,2,b	;volatile
 35154                           
 35155                           ; BSR set to: 57
 35156                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 35157  01BD58  0100               	movlb	0	; () banked
 35158  01BD5A  5188               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 35159  01BD5C  1189               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 35160  01BD5E  118A               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 35161  01BD60  B4D8               	btfsc	status,2,c
 35162  01BD62  0011               	retfie		f
 35163                           
 35164                           ; BSR set to: 0
 35165                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 35166  01BD64  D801               	call	i2u1050_48
 35167  01BD66  0011               	retfie		f
 35168  01BD68                     i2u1050_48:
 35169  01BD68  0005               	push	
 35170  01BD6A  6EFA               	movwf	pclath,c
 35171  01BD6C  5188               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 35172  01BD6E  6EFD               	movwf	tosl,c
 35173  01BD70  5189               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 35174  01BD72  6EFE               	movwf	tosh,c
 35175  01BD74  518A               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 35176  01BD76  6EFF               	movwf	tosu,c
 35177  01BD78  50FA               	movf	pclath,w,c
 35178  01BD7A  0012               	return		;indir
 35179  01BD7C                     __end_of_ADCC_ISR:
 35180                           	opt callstack 0
 35181                           
 35182 ;; *************** function _adc_int_t_handler *****************
 35183 ;; Defined at:
 35184 ;;		line 168 in file "daq.c"
 35185 ;; Parameters:    Size  Location     Type
 35186 ;;		None
 35187 ;; Auto vars:     Size  Location     Type
 35188 ;;		None
 35189 ;; Return value:  Size  Location     Type
 35190 ;;                  1  [STACK] void 
 35191 ;; Registers used:
 35192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 35193 ;; Tracked objects:
 35194 ;;		On entry : 3F/0
 35195 ;;		On exit  : 1/0
 35196 ;;		Unchanged: 0/0
 35197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35202 ;;Total ram usage:        0 bytes
 35203 ;; Hardware stack levels used:    1
 35204 ;; Hardware stack levels required when called:    1
 35205 ;; This function calls:
 35206 ;;		_ADCC_DischargeSampleCapacitor
 35207 ;;		_ADCC_StartConversion
 35208 ;; This function is called by:
 35209 ;;		_start_adc_scan
 35210 ;;		_ADCC_ThresholdISR
 35211 ;; This function uses a reentrant model
 35212 ;;
 35213                           
 35214                           	psect	text164
 35215  01AF22                     __ptext164:
 35216                           	opt callstack 0
 35217  01AF22                     _adc_int_t_handler:
 35218                           	opt callstack 2
 35219                           
 35220                           ;daq.c: 173:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 35221                           
 35222                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35223                           ;incstack = 0
 35224  01AF22  013E               	movlb	62	; () banked
 35225  01AF24  51E6               	movf	230,w,b	;volatile
 35226  01AF26  006F FB9C  F001    	movff	16103,btemp	;volatile
 35227  01AF2C  6A02               	clrf	(btemp+1)^0,c
 35228  01AF2E  0060  F004  F002   	movff	btemp,btemp+1
 35229  01AF34  6A01               	clrf	btemp^0,c
 35230  01AF36  2601               	addwf	btemp^0,f,c
 35231  01AF38  0E00               	movlw	0
 35232  01AF3A  2202               	addwfc	(btemp+1)^0,f,c
 35233  01AF3C  0100               	movlb	0	; () banked
 35234  01AF3E  51E1               	movf	(_R+50)& (0+255),w,b	;volatile
 35235  01AF40  0D02               	mullw	2
 35236  01AF42  50F3               	movf	243,w,c
 35237  01AF44  0FAF               	addlw	low _R
 35238  01AF46  6ED9               	movwf	fsr2l,c
 35239  01AF48  6ADA               	clrf	fsr2h,c
 35240  01AF4A  0060  F007  FFDE   	movff	btemp,postinc2
 35241  01AF50  0060  F00B  FFDD   	movff	btemp+1,postdec2
 35242  01AF56                     l11340:
 35243                           
 35244                           ;daq.c: 175:   if (++R.scan_index > 0XD) {
 35245  01AF56  0100               	movlb	0	; () banked
 35246  01AF58  2BE1               	incf	(_R+50)& (0+255),f,b	;volatile
 35247  01AF5A  0E0D               	movlw	13
 35248  01AF5C  65E1               	cpfsgt	(_R+50)& (0+255),b	;volatile
 35249  01AF5E  D003               	goto	l11346
 35250                           
 35251                           ; BSR set to: 0
 35252                           ;daq.c: 176:    R.done = 1;
 35253  01AF60  0E01               	movlw	1
 35254  01AF62  6FE4               	movwf	(_R+53)& (0+255),b	;volatile
 35255  01AF64  0012               	return	
 35256  01AF66                     l11346:
 35257                           
 35258                           ; BSR set to: 0
 35259                           ;daq.c: 182:  } while (!((R.scan_select >> R.scan_index) &0x1));
 35260  01AF66  0060  F384  F00C   	movff	_R+50,btemp+11	;volatile
 35261  01AF6C  EE20  F0E2         	lfsr	2,_R+51	;volatile
 35262  01AF70  006F FF78  F009    	movff	postinc2,btemp+8
 35263  01AF76  006F FF74  F00A    	movff	postdec2,btemp+9
 35264  01AF7C  2A0C               	incf	(btemp+11)^0,f,c
 35265  01AF7E  D003               	goto	u1047_44
 35266  01AF80                     u1047_45:
 35267  01AF80  90D8               	bcf	status,0,c
 35268  01AF82  320A               	rrcf	(btemp+9)^0,f,c
 35269  01AF84  3209               	rrcf	(btemp+8)^0,f,c
 35270  01AF86                     u1047_44:
 35271  01AF86  2E0C               	decfsz	(btemp+11)^0,f,c
 35272  01AF88  D7FB               	goto	u1047_45
 35273  01AF8A  A009               	btfss	(btemp+8)^0,0,c
 35274  01AF8C  D7E4               	goto	l11340
 35275                           
 35276                           ;daq.c: 183:  ADCC_DischargeSampleCapacitor();
 35277  01AF8E  ECE5  F0E1         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 35278                           
 35279                           ; BSR set to: 62
 35280                           ;daq.c: 184:  ADCC_StartConversion(R.scan_index & 0xf);
 35281  01AF92  0100               	movlb	0	; () banked
 35282  01AF94  51E1               	movf	(_R+50)& (0+255),w,b	;volatile
 35283  01AF96  0B0F               	andlw	15
 35284  01AF98  6EE6               	movwf	postinc1,c
 35285  01AF9A  EC84  F0E1         	call	_ADCC_StartConversion	;wreg free
 35286                           
 35287                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35288  01AF9E  0012               	return		;funcret
 35289  01AFA0                     __end_of_adc_int_t_handler:
 35290                           	opt callstack 0
 35291                           
 35292 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 35293 ;; Defined at:
 35294 ;;		line 339 in file "mcc_generated_files/adcc.c"
 35295 ;; Parameters:    Size  Location     Type
 35296 ;;		None
 35297 ;; Auto vars:     Size  Location     Type
 35298 ;;		None
 35299 ;; Return value:  Size  Location     Type
 35300 ;;                  1  [STACK] void 
 35301 ;; Registers used:
 35302 ;;		None
 35303 ;; Tracked objects:
 35304 ;;		On entry : 3F/0
 35305 ;;		On exit  : 0/0
 35306 ;;		Unchanged: 0/0
 35307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35312 ;;Total ram usage:        0 bytes
 35313 ;; Hardware stack levels used:    1
 35314 ;; This function calls:
 35315 ;;		Nothing
 35316 ;; This function is called by:
 35317 ;;		_ADCC_Initialize
 35318 ;;		_ADCC_ISR
 35319 ;;		_ADCC_ThresholdISR
 35320 ;; This function uses a reentrant model
 35321 ;;
 35322                           
 35323                           	psect	text165
 35324  01C418                     __ptext165:
 35325                           	opt callstack 0
 35326  01C418                     _ADCC_DefaultInterruptHandler:
 35327                           	opt callstack 3
 35328                           
 35329                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 35330                           
 35331                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35332                           ;incstack = 0
 35333  01C418  0012               	return		;funcret
 35334  01C41A                     __end_of_ADCC_DefaultInterruptHandler:
 35335                           	opt callstack 0
 35336                           
 35337 ;; *************** function _adc_int_handler *****************
 35338 ;; Defined at:
 35339 ;;		line 158 in file "daq.c"
 35340 ;; Parameters:    Size  Location     Type
 35341 ;;		None
 35342 ;; Auto vars:     Size  Location     Type
 35343 ;;		None
 35344 ;; Return value:  Size  Location     Type
 35345 ;;                  1  [STACK] void 
 35346 ;; Registers used:
 35347 ;;		None
 35348 ;; Tracked objects:
 35349 ;;		On entry : 3F/0
 35350 ;;		On exit  : 0/0
 35351 ;;		Unchanged: 0/0
 35352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35357 ;;Total ram usage:        0 bytes
 35358 ;; Hardware stack levels used:    1
 35359 ;; This function calls:
 35360 ;;		Nothing
 35361 ;; This function is called by:
 35362 ;;		_start_adc_scan
 35363 ;;		_ADCC_ISR
 35364 ;; This function uses a reentrant model
 35365 ;;
 35366                           
 35367                           	psect	text166
 35368  01C41A                     __ptext166:
 35369                           	opt callstack 0
 35370  01C41A                     _adc_int_handler:
 35371                           	opt callstack 3
 35372                           
 35373                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 35374                           
 35375                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35376                           ;incstack = 0
 35377  01C41A  0012               	return		;funcret
 35378  01C41C                     __end_of_adc_int_handler:
 35379                           	opt callstack 0
 35380                           
 35381 ;; *************** function _ADCC_ThresholdISR *****************
 35382 ;; Defined at:
 35383 ;;		line 327 in file "mcc_generated_files/adcc.c"
 35384 ;; Parameters:    Size  Location     Type
 35385 ;;		None
 35386 ;; Auto vars:     Size  Location     Type
 35387 ;;		None
 35388 ;; Return value:  Size  Location     Type
 35389 ;;                  1    wreg      void 
 35390 ;; Registers used:
 35391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 35392 ;; Tracked objects:
 35393 ;;		On entry : 0/0
 35394 ;;		On exit  : 0/0
 35395 ;;		Unchanged: 0/0
 35396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35399 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35400 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35401 ;;Total ram usage:        5 bytes
 35402 ;; Hardware stack levels used:    1
 35403 ;; Hardware stack levels required when called:    2
 35404 ;; This function calls:
 35405 ;;		Absolute function
 35406 ;;		_ADCC_DefaultInterruptHandler
 35407 ;;		_adc_int_t_handler
 35408 ;; This function is called by:
 35409 ;;		Interrupt level 2
 35410 ;; This function uses a non-reentrant model
 35411 ;;
 35412                           
 35413                           	psect	text167
 35414  01B1D4                     __ptext167:
 35415                           	opt callstack 0
 35416  01B1D4                     _ADCC_ThresholdISR:
 35417                           	opt callstack 2
 35418                           
 35419                           ;incstack = 0
 35420  01B1D4  0060  F004  F021   	movff	btemp,??_ADCC_ThresholdISR
 35421  01B1DA  0060  F008  F022   	movff	btemp+1,??_ADCC_ThresholdISR+1
 35422  01B1E0  0060  F024  F023   	movff	btemp+8,??_ADCC_ThresholdISR+2
 35423  01B1E6  0060  F028  F024   	movff	btemp+9,??_ADCC_ThresholdISR+3
 35424  01B1EC  0060  F030  F025   	movff	btemp+11,??_ADCC_ThresholdISR+4
 35425  01B1F2  EE14  F15E         	lfsr	1,___inthi_sp
 35426                           
 35427                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 35428  01B1F6  0139               	movlb	57	; () banked
 35429  01B1F8  97A1               	bcf	161,3,b	;volatile
 35430                           
 35431                           ; BSR set to: 57
 35432                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 35433  01B1FA  0100               	movlb	0	; () banked
 35434  01B1FC  5185               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 35435  01B1FE  1186               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 35436  01B200  1187               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 35437  01B202  B4D8               	btfsc	status,2,c
 35438  01B204  D00C               	goto	i2u1052_49
 35439                           
 35440                           ; BSR set to: 0
 35441                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 35442  01B206  D801               	call	i2u1052_48
 35443  01B208  D00A               	goto	i2u1052_49
 35444  01B20A                     i2u1052_48:
 35445  01B20A  0005               	push	
 35446  01B20C  6EFA               	movwf	pclath,c
 35447  01B20E  5185               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 35448  01B210  6EFD               	movwf	tosl,c
 35449  01B212  5186               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 35450  01B214  6EFE               	movwf	tosh,c
 35451  01B216  5187               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 35452  01B218  6EFF               	movwf	tosu,c
 35453  01B21A  50FA               	movf	pclath,w,c
 35454  01B21C  0012               	return		;indir
 35455  01B21E                     i2u1052_49:
 35456  01B21E  0060  F094  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 35457  01B224  0060  F090  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 35458  01B22A  0060  F08C  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 35459  01B230  0060  F088  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 35460  01B236  0060  F084  F001   	movff	??_ADCC_ThresholdISR,btemp
 35461  01B23C  0011               	retfie		f
 35462  01B23E                     __end_of_ADCC_ThresholdISR:
 35463                           	opt callstack 0
 35464                           
 35465 ;; *************** function _UART1_rx_vect_isr *****************
 35466 ;; Defined at:
 35467 ;;		line 181 in file "mcc_generated_files/uart1.c"
 35468 ;; Parameters:    Size  Location     Type
 35469 ;;		None
 35470 ;; Auto vars:     Size  Location     Type
 35471 ;;		None
 35472 ;; Return value:  Size  Location     Type
 35473 ;;                  1    wreg      void 
 35474 ;; Registers used:
 35475 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 35476 ;; Tracked objects:
 35477 ;;		On entry : 0/0
 35478 ;;		On exit  : 0/0
 35479 ;;		Unchanged: 0/0
 35480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35485 ;;Total ram usage:        0 bytes
 35486 ;; Hardware stack levels used:    1
 35487 ;; Hardware stack levels required when called:    1
 35488 ;; This function calls:
 35489 ;;		Absolute function
 35490 ;;		_UART1_Receive_ISR
 35491 ;; This function is called by:
 35492 ;;		Interrupt level 2
 35493 ;; This function uses a non-reentrant model
 35494 ;;
 35495                           
 35496                           	psect	text168
 35497  01BFB4                     __ptext168:
 35498                           	opt callstack 0
 35499  01BFB4                     _UART1_rx_vect_isr:
 35500                           	opt callstack 3
 35501                           
 35502                           ;incstack = 0
 35503  01BFB4  EE14  F15E         	lfsr	1,___inthi_sp
 35504                           
 35505                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 35506  01BFB8  0100               	movlb	0	; () banked
 35507  01BFBA  518B               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 35508  01BFBC  118C               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 35509  01BFBE  118D               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 35510  01BFC0  B4D8               	btfsc	status,2,c
 35511  01BFC2  0011               	retfie		f
 35512                           
 35513                           ; BSR set to: 0
 35514                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 35515  01BFC4  D801               	call	i2u1054_48
 35516  01BFC6  0011               	retfie		f
 35517  01BFC8                     i2u1054_48:
 35518  01BFC8  0005               	push	
 35519  01BFCA  6EFA               	movwf	pclath,c
 35520  01BFCC  518B               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 35521  01BFCE  6EFD               	movwf	tosl,c
 35522  01BFD0  518C               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 35523  01BFD2  6EFE               	movwf	tosh,c
 35524  01BFD4  518D               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 35525  01BFD6  6EFF               	movwf	tosu,c
 35526  01BFD8  50FA               	movf	pclath,w,c
 35527  01BFDA  0012               	return		;indir
 35528  01BFDC                     __end_of_UART1_rx_vect_isr:
 35529                           	opt callstack 0
 35530                           
 35531 ;; *************** function _UART1_Receive_ISR *****************
 35532 ;; Defined at:
 35533 ;;		line 192 in file "mcc_generated_files/uart1.c"
 35534 ;; Parameters:    Size  Location     Type
 35535 ;;		None
 35536 ;; Auto vars:     Size  Location     Type
 35537 ;;		None
 35538 ;; Return value:  Size  Location     Type
 35539 ;;                  1  [STACK] void 
 35540 ;; Registers used:
 35541 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35542 ;; Tracked objects:
 35543 ;;		On entry : 3F/0
 35544 ;;		On exit  : 3F/0
 35545 ;;		Unchanged: 0/0
 35546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35551 ;;Total ram usage:        0 bytes
 35552 ;; Hardware stack levels used:    1
 35553 ;; This function calls:
 35554 ;;		Nothing
 35555 ;; This function is called by:
 35556 ;;		_UART1_Initialize
 35557 ;;		_UART1_rx_vect_isr
 35558 ;; This function uses a reentrant model
 35559 ;;
 35560                           
 35561                           	psect	text169
 35562  01C126                     __ptext169:
 35563                           	opt callstack 0
 35564  01C126                     _UART1_Receive_ISR:
 35565                           	opt callstack 3
 35566                           
 35567                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 35568                           
 35569                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35570                           ;incstack = 0
 35571  01C126  0ED9               	movlw	low _uart1RxBuffer
 35572  01C128  2447               	addwf	_uart1RxHead^0,w,c	;volatile
 35573  01C12A  6ED9               	movwf	fsr2l,c
 35574  01C12C  6ADA               	clrf	fsr2h,c
 35575  01C12E  0E01               	movlw	high _uart1RxBuffer
 35576  01C130  22DA               	addwfc	fsr2h,f,c
 35577  01C132  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 35578  01C138  2A47               	incf	_uart1RxHead^0,f,c	;volatile
 35579                           
 35580                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 35581  01C13A  0E07               	movlw	7
 35582  01C13C  6447               	cpfsgt	_uart1RxHead^0,c
 35583  01C13E  D001               	goto	l10882
 35584                           
 35585                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 35586  01C140  6A47               	clrf	_uart1RxHead^0,c	;volatile
 35587  01C142                     l10882:
 35588                           
 35589                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 35590  01C142  0100               	movlb	0	; () banked
 35591  01C144  2BAD               	incf	_uart1RxCount& (0+255),f,b	;volatile
 35592                           
 35593                           ; BSR set to: 0
 35594                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35595  01C146  0012               	return		;funcret
 35596  01C148                     __end_of_UART1_Receive_ISR:
 35597                           	opt callstack 0
 35598                           
 35599 ;; *************** function _UART2_tx_vect_isr *****************
 35600 ;; Defined at:
 35601 ;;		line 195 in file "mcc_generated_files/uart2.c"
 35602 ;; Parameters:    Size  Location     Type
 35603 ;;		None
 35604 ;; Auto vars:     Size  Location     Type
 35605 ;;		None
 35606 ;; Return value:  Size  Location     Type
 35607 ;;                  1    wreg      void 
 35608 ;; Registers used:
 35609 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 35610 ;; Tracked objects:
 35611 ;;		On entry : 0/0
 35612 ;;		On exit  : 0/0
 35613 ;;		Unchanged: 0/0
 35614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35619 ;;Total ram usage:        0 bytes
 35620 ;; Hardware stack levels used:    1
 35621 ;; Hardware stack levels required when called:    1
 35622 ;; This function calls:
 35623 ;;		Absolute function
 35624 ;;		_UART2_Transmit_ISR
 35625 ;; This function is called by:
 35626 ;;		Interrupt level 2
 35627 ;; This function uses a non-reentrant model
 35628 ;;
 35629                           
 35630                           	psect	text170
 35631  01BFDC                     __ptext170:
 35632                           	opt callstack 0
 35633  01BFDC                     _UART2_tx_vect_isr:
 35634                           	opt callstack 3
 35635                           
 35636                           ; BSR set to: 0
 35637                           ;incstack = 0
 35638  01BFDC  EE14  F15E         	lfsr	1,___inthi_sp
 35639                           
 35640                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 35641  01BFE0  0100               	movlb	0	; () banked
 35642  01BFE2  518E               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 35643  01BFE4  118F               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 35644  01BFE6  1190               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 35645  01BFE8  B4D8               	btfsc	status,2,c
 35646  01BFEA  0011               	retfie		f
 35647                           
 35648                           ; BSR set to: 0
 35649                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 35650  01BFEC  D801               	call	i2u1056_48
 35651  01BFEE  0011               	retfie		f
 35652  01BFF0                     i2u1056_48:
 35653  01BFF0  0005               	push	
 35654  01BFF2  6EFA               	movwf	pclath,c
 35655  01BFF4  518E               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 35656  01BFF6  6EFD               	movwf	tosl,c
 35657  01BFF8  518F               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 35658  01BFFA  6EFE               	movwf	tosh,c
 35659  01BFFC  5190               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 35660  01BFFE  6EFF               	movwf	tosu,c
 35661  01C000  50FA               	movf	pclath,w,c
 35662  01C002  0012               	return		;indir
 35663  01C004                     __end_of_UART2_tx_vect_isr:
 35664                           	opt callstack 0
 35665                           
 35666 ;; *************** function _UART2_Transmit_ISR *****************
 35667 ;; Defined at:
 35668 ;;		line 213 in file "mcc_generated_files/uart2.c"
 35669 ;; Parameters:    Size  Location     Type
 35670 ;;		None
 35671 ;; Auto vars:     Size  Location     Type
 35672 ;;		None
 35673 ;; Return value:  Size  Location     Type
 35674 ;;                  1  [STACK] void 
 35675 ;; Registers used:
 35676 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35677 ;; Tracked objects:
 35678 ;;		On entry : 3F/0
 35679 ;;		On exit  : 3B/39
 35680 ;;		Unchanged: 0/0
 35681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35686 ;;Total ram usage:        0 bytes
 35687 ;; Hardware stack levels used:    1
 35688 ;; This function calls:
 35689 ;;		Nothing
 35690 ;; This function is called by:
 35691 ;;		_UART2_Initialize
 35692 ;;		_UART2_tx_vect_isr
 35693 ;; This function uses a reentrant model
 35694 ;;
 35695                           
 35696                           	psect	text171
 35697  01BD7C                     __ptext171:
 35698                           	opt callstack 0
 35699  01BD7C                     _UART2_Transmit_ISR:
 35700                           	opt callstack 3
 35701                           
 35702                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 35703                           
 35704                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35705                           ;incstack = 0
 35706  01BD7C  0E40               	movlw	64
 35707  01BD7E  6045               	cpfslt	_uart2TxBufferRemaining^0,c
 35708  01BD80  D010               	goto	l673
 35709                           
 35710                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 35711  01BD82  0E00               	movlw	low _uart2TxBuffer
 35712  01BD84  2446               	addwf	_uart2TxTail^0,w,c	;volatile
 35713  01BD86  6ED9               	movwf	fsr2l,c
 35714  01BD88  6ADA               	clrf	fsr2h,c
 35715  01BD8A  0E03               	movlw	high _uart2TxBuffer
 35716  01BD8C  22DA               	addwfc	fsr2h,f,c
 35717  01BD8E  50DF               	movf	indf2,w,c
 35718  01BD90  013D               	movlb	61	; () banked
 35719  01BD92  6FD2               	movwf	210,b	;volatile
 35720                           
 35721                           ; BSR set to: 61
 35722  01BD94  2A46               	incf	_uart2TxTail^0,f,c	;volatile
 35723                           
 35724                           ; BSR set to: 61
 35725                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 35726  01BD96  0E3F               	movlw	63
 35727  01BD98  6446               	cpfsgt	_uart2TxTail^0,c
 35728  01BD9A  D001               	goto	l10894
 35729                           
 35730                           ; BSR set to: 61
 35731                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 35732  01BD9C  6A46               	clrf	_uart2TxTail^0,c	;volatile
 35733  01BD9E                     l10894:
 35734                           
 35735                           ; BSR set to: 61
 35736                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 35737  01BD9E  2A45               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 35738                           
 35739                           ;mcc_generated_files/uart2.c: 224:     }
 35740  01BDA0  0012               	return	
 35741  01BDA2                     l673:
 35742                           
 35743                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 35744  01BDA2  0139               	movlb	57	; () banked
 35745  01BDA4  9796               	bcf	150,3,b	;volatile
 35746                           
 35747                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 35748  01BDA6  0012               	return		;funcret
 35749  01BDA8                     __end_of_UART2_Transmit_ISR:
 35750                           	opt callstack 0
 35751                           
 35752 ;; *************** function _UART2_rx_vect_isr *****************
 35753 ;; Defined at:
 35754 ;;		line 203 in file "mcc_generated_files/uart2.c"
 35755 ;; Parameters:    Size  Location     Type
 35756 ;;		None
 35757 ;; Auto vars:     Size  Location     Type
 35758 ;;		None
 35759 ;; Return value:  Size  Location     Type
 35760 ;;                  1    wreg      void 
 35761 ;; Registers used:
 35762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 35763 ;; Tracked objects:
 35764 ;;		On entry : 0/0
 35765 ;;		On exit  : 0/0
 35766 ;;		Unchanged: 0/0
 35767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35772 ;;Total ram usage:        0 bytes
 35773 ;; Hardware stack levels used:    1
 35774 ;; Hardware stack levels required when called:    1
 35775 ;; This function calls:
 35776 ;;		Absolute function
 35777 ;;		_UART2_Receive_ISR
 35778 ;; This function is called by:
 35779 ;;		Interrupt level 2
 35780 ;; This function uses a non-reentrant model
 35781 ;;
 35782                           
 35783                           	psect	text172
 35784  01C004                     __ptext172:
 35785                           	opt callstack 0
 35786  01C004                     _UART2_rx_vect_isr:
 35787                           	opt callstack 3
 35788                           
 35789                           ;incstack = 0
 35790  01C004  EE14  F15E         	lfsr	1,___inthi_sp
 35791                           
 35792                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 35793  01C008  0100               	movlb	0	; () banked
 35794  01C00A  5191               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 35795  01C00C  1192               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 35796  01C00E  1193               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 35797  01C010  B4D8               	btfsc	status,2,c
 35798  01C012  0011               	retfie		f
 35799                           
 35800                           ; BSR set to: 0
 35801                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 35802  01C014  D801               	call	i2u1058_48
 35803  01C016  0011               	retfie		f
 35804  01C018                     i2u1058_48:
 35805  01C018  0005               	push	
 35806  01C01A  6EFA               	movwf	pclath,c
 35807  01C01C  5191               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 35808  01C01E  6EFD               	movwf	tosl,c
 35809  01C020  5192               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 35810  01C022  6EFE               	movwf	tosh,c
 35811  01C024  5193               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 35812  01C026  6EFF               	movwf	tosu,c
 35813  01C028  50FA               	movf	pclath,w,c
 35814  01C02A  0012               	return		;indir
 35815  01C02C                     __end_of_UART2_rx_vect_isr:
 35816                           	opt callstack 0
 35817                           
 35818 ;; *************** function _UART2_Receive_ISR *****************
 35819 ;; Defined at:
 35820 ;;		line 233 in file "mcc_generated_files/uart2.c"
 35821 ;; Parameters:    Size  Location     Type
 35822 ;;		None
 35823 ;; Auto vars:     Size  Location     Type
 35824 ;;		None
 35825 ;; Return value:  Size  Location     Type
 35826 ;;                  1  [STACK] void 
 35827 ;; Registers used:
 35828 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35829 ;; Tracked objects:
 35830 ;;		On entry : 3F/0
 35831 ;;		On exit  : 3F/0
 35832 ;;		Unchanged: 0/0
 35833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35838 ;;Total ram usage:        0 bytes
 35839 ;; Hardware stack levels used:    1
 35840 ;; This function calls:
 35841 ;;		Nothing
 35842 ;; This function is called by:
 35843 ;;		_UART2_Initialize
 35844 ;;		_UART2_rx_vect_isr
 35845 ;; This function uses a reentrant model
 35846 ;;
 35847                           
 35848                           	psect	text173
 35849  01C168                     __ptext173:
 35850                           	opt callstack 0
 35851  01C168                     _UART2_Receive_ISR:
 35852                           	opt callstack 3
 35853                           
 35854                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 35855                           
 35856                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35857                           ;incstack = 0
 35858  01C168  0E00               	movlw	low _uart2RxBuffer
 35859  01C16A  2444               	addwf	_uart2RxHead^0,w,c	;volatile
 35860  01C16C  6ED9               	movwf	fsr2l,c
 35861  01C16E  6ADA               	clrf	fsr2h,c
 35862  01C170  0E04               	movlw	high _uart2RxBuffer
 35863  01C172  22DA               	addwfc	fsr2h,f,c
 35864  01C174  006F F743 FFDF     	movff	15824,indf2	;volatile
 35865  01C17A  2A44               	incf	_uart2RxHead^0,f,c	;volatile
 35866                           
 35867                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 35868  01C17C  2844               	incf	_uart2RxHead^0,w,c
 35869  01C17E  B4D8               	btfsc	status,2,c
 35870                           
 35871                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 35872  01C180  6A44               	clrf	_uart2RxHead^0,c	;volatile
 35873                           
 35874                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 35875  01C182  0100               	movlb	0	; () banked
 35876  01C184  2BAA               	incf	_uart2RxCount& (0+255),f,b	;volatile
 35877                           
 35878                           ; BSR set to: 0
 35879                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35880  01C186  0012               	return		;funcret
 35881  01C188                     __end_of_UART2_Receive_ISR:
 35882                           	opt callstack 0
 35883                           
 35884 ;; *************** function _TMR6_ISR *****************
 35885 ;; Defined at:
 35886 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 35887 ;; Parameters:    Size  Location     Type
 35888 ;;		None
 35889 ;; Auto vars:     Size  Location     Type
 35890 ;;		None
 35891 ;; Return value:  Size  Location     Type
 35892 ;;                  1    wreg      void 
 35893 ;; Registers used:
 35894 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 35895 ;; Tracked objects:
 35896 ;;		On entry : 0/0
 35897 ;;		On exit  : 0/0
 35898 ;;		Unchanged: 0/0
 35899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35902 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35903 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35904 ;;Total ram usage:        1 bytes
 35905 ;; Hardware stack levels used:    1
 35906 ;; Hardware stack levels required when called:    2
 35907 ;; This function calls:
 35908 ;;		_TMR6_CallBack
 35909 ;; This function is called by:
 35910 ;;		Interrupt level 2
 35911 ;; This function uses a non-reentrant model
 35912 ;;
 35913                           
 35914                           	psect	text174
 35915  01C254                     __ptext174:
 35916                           	opt callstack 0
 35917  01C254                     _TMR6_ISR:
 35918                           	opt callstack 2
 35919                           
 35920                           ; BSR set to: 0
 35921                           ;incstack = 0
 35922  01C254  0060  F004  F026   	movff	btemp,??_TMR6_ISR
 35923  01C25A  EE14  F15E         	lfsr	1,___inthi_sp
 35924                           
 35925                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 35926  01C25E  0139               	movlb	57	; () banked
 35927  01C260  91A9               	bcf	169,0,b	;volatile
 35928                           
 35929                           ; BSR set to: 57
 35930                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 35931  01C262  EC70  F0E0         	call	_TMR6_CallBack	;wreg free
 35932  01C266  0060  F098  F001   	movff	??_TMR6_ISR,btemp
 35933  01C26C  0011               	retfie		f
 35934  01C26E                     __end_of_TMR6_ISR:
 35935                           	opt callstack 0
 35936                           
 35937 ;; *************** function _TMR6_CallBack *****************
 35938 ;; Defined at:
 35939 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 35940 ;; Parameters:    Size  Location     Type
 35941 ;;		None
 35942 ;; Auto vars:     Size  Location     Type
 35943 ;;		None
 35944 ;; Return value:  Size  Location     Type
 35945 ;;                  1  [STACK] void 
 35946 ;; Registers used:
 35947 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 35948 ;; Tracked objects:
 35949 ;;		On entry : 3F/39
 35950 ;;		On exit  : 0/0
 35951 ;;		Unchanged: 0/0
 35952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35957 ;;Total ram usage:        0 bytes
 35958 ;; Hardware stack levels used:    1
 35959 ;; Hardware stack levels required when called:    1
 35960 ;; This function calls:
 35961 ;;		Absolute function
 35962 ;;		_TMR6_DefaultInterruptHandler
 35963 ;; This function is called by:
 35964 ;;		_TMR6_ISR
 35965 ;; This function uses a reentrant model
 35966 ;;
 35967                           
 35968                           	psect	text175
 35969  01C0E0                     __ptext175:
 35970                           	opt callstack 0
 35971  01C0E0                     _TMR6_CallBack:
 35972                           	opt callstack 2
 35973                           
 35974                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 35975                           
 35976                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35977                           ;incstack = 0
 35978  01C0E0  0100               	movlb	0	; () banked
 35979  01C0E2  5182               	movf	_TMR6_InterruptHandler& (0+255),w,b
 35980  01C0E4  1183               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 35981  01C0E6  1184               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 35982  01C0E8  B4D8               	btfsc	status,2,c
 35983  01C0EA  0012               	return	
 35984                           
 35985                           ; BSR set to: 0
 35986                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 35987  01C0EC  D801               	call	u1011_48
 35988  01C0EE  0012               	return	
 35989  01C0F0                     u1011_48:
 35990  01C0F0  0005               	push	
 35991  01C0F2  6EFA               	movwf	pclath,c
 35992  01C0F4  5182               	movf	_TMR6_InterruptHandler& (0+255),w,b
 35993  01C0F6  6EFD               	movwf	tosl,c
 35994  01C0F8  5183               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 35995  01C0FA  6EFE               	movwf	tosh,c
 35996  01C0FC  5184               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 35997  01C0FE  6EFF               	movwf	tosu,c
 35998  01C100  50FA               	movf	pclath,w,c
 35999  01C102  0012               	return		;indir
 36000  01C104                     __end_of_TMR6_CallBack:
 36001                           	opt callstack 0
 36002                           
 36003 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 36004 ;; Defined at:
 36005 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 36006 ;; Parameters:    Size  Location     Type
 36007 ;;		None
 36008 ;; Auto vars:     Size  Location     Type
 36009 ;;  i               1  [STACK] unsigned char 
 36010 ;; Return value:  Size  Location     Type
 36011 ;;                  1  [STACK] void 
 36012 ;; Registers used:
 36013 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 36014 ;; Tracked objects:
 36015 ;;		On entry : 3F/0
 36016 ;;		On exit  : 0/0
 36017 ;;		Unchanged: 0/0
 36018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36023 ;;Total ram usage:        0 bytes
 36024 ;; Hardware stack levels used:    1
 36025 ;; This function calls:
 36026 ;;		Nothing
 36027 ;; This function is called by:
 36028 ;;		_TMR6_Initialize
 36029 ;;		_TMR6_CallBack
 36030 ;; This function uses a reentrant model
 36031 ;;
 36032                           
 36033                           	psect	text176
 36034  01B5DE                     __ptext176:
 36035                           	opt callstack 0
 36036  01B5DE                     _TMR6_DefaultInterruptHandler:
 36037                           	opt callstack 0
 36038                           
 36039                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36040  01B5DE  52E6               	movf	postinc1,f,c
 36041                           
 36042                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 36043                           ;stkvar	_i @ sp[(-1)+0]
 36044                           
 36045                           ;incstack = 0
 36046  01B5E0  0EFF               	movlw	-1
 36047  01B5E2  6AE3               	clrf	plusw1,c
 36048  01B5E4                     l10476:
 36049                           
 36050                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 36051                           ;stkvar	_i @ sp[(-1)+0]
 36052  01B5E4  0EFF               	movlw	-1
 36053  01B5E6  50E3               	movf	plusw1,w,c
 36054  01B5E8  0D02               	mullw	2
 36055  01B5EA  0E7D               	movlw	low _tickCount
 36056  01B5EC  24F3               	addwf	243,w,c
 36057  01B5EE  6ED9               	movwf	fsr2l,c
 36058  01B5F0  0E02               	movlw	high _tickCount
 36059  01B5F2  20F4               	addwfc	prodh,w,c
 36060  01B5F4  6EDA               	movwf	fsr2h,c
 36061  01B5F6  50DE               	movf	postinc2,w,c
 36062  01B5F8  10DE               	iorwf	postinc2,w,c
 36063  01B5FA  B4D8               	btfsc	status,2,c
 36064  01B5FC  D00C               	goto	l10480
 36065                           
 36066                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 36067                           ;stkvar	_i @ sp[(-1)+0]
 36068  01B5FE  0EFF               	movlw	-1
 36069  01B600  50E3               	movf	plusw1,w,c
 36070  01B602  0D02               	mullw	2
 36071  01B604  0E7D               	movlw	low _tickCount
 36072  01B606  24F3               	addwf	243,w,c
 36073  01B608  6ED9               	movwf	fsr2l,c
 36074  01B60A  0E02               	movlw	high _tickCount
 36075  01B60C  20F4               	addwfc	prodh,w,c
 36076  01B60E  6EDA               	movwf	fsr2h,c
 36077  01B610  06DE               	decf	postinc2,f,c
 36078  01B612  0E00               	movlw	0
 36079  01B614  5ADD               	subwfb	postdec2,f,c
 36080  01B616                     l10480:
 36081                           
 36082                           ;mcc_generated_files/tmr6.c: 207:  }
 36083                           ;stkvar	_i @ sp[(-1)+0]
 36084  01B616  0EFF               	movlw	-1
 36085  01B618  2AE3               	incf	plusw1,f,c
 36086                           
 36087                           ;stkvar	_i @ sp[(-1)+0]
 36088  01B61A  0EFF               	movlw	-1
 36089  01B61C  006F FF8C  F001    	movff	plusw1,btemp
 36090  01B622  0E0C               	movlw	12
 36091  01B624  6401               	cpfsgt	btemp^0,c
 36092  01B626  D7DE               	goto	l10476
 36093                           
 36094                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 36095  01B628  52E5               	movf	postdec1,f,c
 36096  01B62A  0012               	return		;funcret
 36097  01B62C                     __end_of_TMR6_DefaultInterruptHandler:
 36098                           	opt callstack 0
 36099                           
 36100 ;; *************** function _DMA1_DMASCNT_ISR *****************
 36101 ;; Defined at:
 36102 ;;		line 126 in file "mcc_generated_files/dma1.c"
 36103 ;; Parameters:    Size  Location     Type
 36104 ;;		None
 36105 ;; Auto vars:     Size  Location     Type
 36106 ;;		None
 36107 ;; Return value:  Size  Location     Type
 36108 ;;                  1    wreg      void 
 36109 ;; Registers used:
 36110 ;;		None
 36111 ;; Tracked objects:
 36112 ;;		On entry : 0/0
 36113 ;;		On exit  : 3F/1
 36114 ;;		Unchanged: 0/0
 36115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36120 ;;Total ram usage:        0 bytes
 36121 ;; Hardware stack levels used:    1
 36122 ;; This function calls:
 36123 ;;		Nothing
 36124 ;; This function is called by:
 36125 ;;		Interrupt level 2
 36126 ;; This function uses a non-reentrant model
 36127 ;;
 36128                           
 36129                           	psect	text177
 36130  01C2F4                     __ptext177:
 36131                           	opt callstack 0
 36132  01C2F4                     _DMA1_DMASCNT_ISR:
 36133                           	opt callstack 4
 36134                           
 36135                           ;incstack = 0
 36136  01C2F4  EE14  F15E         	lfsr	1,___inthi_sp
 36137                           
 36138                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 36139  01C2F8  0139               	movlb	57	; () banked
 36140  01C2FA  91A2               	bcf	162,0,b	;volatile
 36141                           
 36142                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 36143  01C2FC  0101               	movlb	1	; () banked
 36144  01C2FE  97CD               	bcf	_spi_link& (0+255),3,b	;volatile
 36145                           
 36146                           ; BSR set to: 1
 36147                           
 36148                           ;mcc_generated_files/dma1.c: 134:  do { LATCbits.LATC2 = 1; } while(0);
 36149  01C300  84BC               	bsf	188,2,c	;volatile
 36150                           
 36151                           ; BSR set to: 1
 36152                           
 36153                           ;mcc_generated_files/dma1.c: 135:  do { LATCbits.LATC0 = 1; } while(0);
 36154  01C302  80BC               	bsf	188,0,c	;volatile
 36155                           
 36156                           ; BSR set to: 1
 36157                           
 36158                           ;mcc_generated_files/dma1.c: 136:  do { LATFbits.LATF0 = 1; } while(0);
 36159  01C304  80BF               	bsf	191,0,c	;volatile
 36160                           
 36161                           ; BSR set to: 1
 36162  01C306  0011               	retfie		f
 36163  01C308                     __end_of_DMA1_DMASCNT_ISR:
 36164                           	opt callstack 0
 36165                           
 36166 ;; *************** function _DMA1_DMADCNT_ISR *****************
 36167 ;; Defined at:
 36168 ;;		line 139 in file "mcc_generated_files/dma1.c"
 36169 ;; Parameters:    Size  Location     Type
 36170 ;;		None
 36171 ;; Auto vars:     Size  Location     Type
 36172 ;;		None
 36173 ;; Return value:  Size  Location     Type
 36174 ;;                  1    wreg      void 
 36175 ;; Registers used:
 36176 ;;		None
 36177 ;; Tracked objects:
 36178 ;;		On entry : 0/0
 36179 ;;		On exit  : 3F/39
 36180 ;;		Unchanged: 0/0
 36181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36186 ;;Total ram usage:        0 bytes
 36187 ;; Hardware stack levels used:    1
 36188 ;; This function calls:
 36189 ;;		Nothing
 36190 ;; This function is called by:
 36191 ;;		Interrupt level 2
 36192 ;; This function uses a non-reentrant model
 36193 ;;
 36194                           
 36195                           	psect	text178
 36196  01C3A8                     __ptext178:
 36197                           	opt callstack 0
 36198  01C3A8                     _DMA1_DMADCNT_ISR:
 36199                           	opt callstack 4
 36200                           
 36201                           ; BSR set to: 1
 36202                           ;incstack = 0
 36203  01C3A8  EE14  F15E         	lfsr	1,___inthi_sp
 36204                           
 36205                           ;mcc_generated_files/dma1.c: 141:  PIR2bits.DMA1DCNTIF = 0;
 36206  01C3AC  0139               	movlb	57	; () banked
 36207  01C3AE  93A2               	bcf	162,1,b	;volatile
 36208                           
 36209                           ; BSR set to: 57
 36210  01C3B0  0011               	retfie		f
 36211  01C3B2                     __end_of_DMA1_DMADCNT_ISR:
 36212                           	opt callstack 0
 36213                           
 36214 ;; *************** function _DMA1_DMAA_ISR *****************
 36215 ;; Defined at:
 36216 ;;		line 149 in file "mcc_generated_files/dma1.c"
 36217 ;; Parameters:    Size  Location     Type
 36218 ;;		None
 36219 ;; Auto vars:     Size  Location     Type
 36220 ;;		None
 36221 ;; Return value:  Size  Location     Type
 36222 ;;                  1    wreg      void 
 36223 ;; Registers used:
 36224 ;;		None
 36225 ;; Tracked objects:
 36226 ;;		On entry : 0/0
 36227 ;;		On exit  : 3F/39
 36228 ;;		Unchanged: 0/0
 36229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36234 ;;Total ram usage:        0 bytes
 36235 ;; Hardware stack levels used:    1
 36236 ;; This function calls:
 36237 ;;		Nothing
 36238 ;; This function is called by:
 36239 ;;		Interrupt level 2
 36240 ;; This function uses a non-reentrant model
 36241 ;;
 36242                           
 36243                           	psect	text179
 36244  01C3B4                     __ptext179:
 36245                           	opt callstack 0
 36246  01C3B4                     _DMA1_DMAA_ISR:
 36247                           	opt callstack 4
 36248                           
 36249                           ; BSR set to: 57
 36250                           ;incstack = 0
 36251  01C3B4  EE14  F15E         	lfsr	1,___inthi_sp
 36252                           
 36253                           ;mcc_generated_files/dma1.c: 152:  PIR2bits.DMA1AIF = 0;
 36254  01C3B8  0139               	movlb	57	; () banked
 36255  01C3BA  97A2               	bcf	162,3,b	;volatile
 36256                           
 36257                           ; BSR set to: 57
 36258  01C3BC  0011               	retfie		f
 36259  01C3BE                     __end_of_DMA1_DMAA_ISR:
 36260                           	opt callstack 0
 36261                           
 36262 ;; *************** function _DMA1_DMAOR_ISR *****************
 36263 ;; Defined at:
 36264 ;;		line 160 in file "mcc_generated_files/dma1.c"
 36265 ;; Parameters:    Size  Location     Type
 36266 ;;		None
 36267 ;; Auto vars:     Size  Location     Type
 36268 ;;		None
 36269 ;; Return value:  Size  Location     Type
 36270 ;;                  1    wreg      void 
 36271 ;; Registers used:
 36272 ;;		None
 36273 ;; Tracked objects:
 36274 ;;		On entry : 0/0
 36275 ;;		On exit  : 3F/39
 36276 ;;		Unchanged: 0/0
 36277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36282 ;;Total ram usage:        0 bytes
 36283 ;; Hardware stack levels used:    1
 36284 ;; This function calls:
 36285 ;;		Nothing
 36286 ;; This function is called by:
 36287 ;;		Interrupt level 2
 36288 ;; This function uses a non-reentrant model
 36289 ;;
 36290                           
 36291                           	psect	text180
 36292  01C3C0                     __ptext180:
 36293                           	opt callstack 0
 36294  01C3C0                     _DMA1_DMAOR_ISR:
 36295                           	opt callstack 4
 36296                           
 36297                           ; BSR set to: 57
 36298                           ;incstack = 0
 36299  01C3C0  EE14  F15E         	lfsr	1,___inthi_sp
 36300                           
 36301                           ;mcc_generated_files/dma1.c: 163:  PIR2bits.DMA1ORIF = 0;
 36302  01C3C4  0139               	movlb	57	; () banked
 36303  01C3C6  95A2               	bcf	162,2,b	;volatile
 36304                           
 36305                           ; BSR set to: 57
 36306  01C3C8  0011               	retfie		f
 36307  01C3CA                     __end_of_DMA1_DMAOR_ISR:
 36308                           	opt callstack 0
 36309                           
 36310                           ;
 36311                           ; Interrupt Vector Table @ 0x8
 36312                           ;
 36313                           
 36314                           	psect	ivt0x8
 36315  000008                     __pivt0x8:
 36316                           	opt callstack 0
 36317  000008                     ivt0x8_base:
 36318                           	opt callstack 0
 36319                           
 36320                           ; Vector 0 : SWINT
 36321  000008  7103               	dw	_Default_ISR shr (0+2)
 36322                           
 36323                           ; Vector 1 : HLVD
 36324  00000A  7103               	dw	_Default_ISR shr (0+2)
 36325                           
 36326                           ; Vector 2 : OSF
 36327  00000C  7103               	dw	_Default_ISR shr (0+2)
 36328                           
 36329                           ; Vector 3 : CSW
 36330  00000E  7103               	dw	_Default_ISR shr (0+2)
 36331                           
 36332                           ; Vector 4 : NVM
 36333  000010  7103               	dw	_Default_ISR shr (0+2)
 36334                           
 36335                           ; Vector 5 : SCAN
 36336  000012  7103               	dw	_Default_ISR shr (0+2)
 36337                           
 36338                           ; Vector 6 : CRC
 36339  000014  7103               	dw	_Default_ISR shr (0+2)
 36340                           
 36341                           ; Vector 7 : IOC
 36342  000016  7103               	dw	_Default_ISR shr (0+2)
 36343                           
 36344                           ; Vector 8 : INT0
 36345  000018  70E1               	dw	_INT0_ISR shr (0+2)
 36346                           
 36347                           ; Vector 9 : ZCD
 36348  00001A  7103               	dw	_Default_ISR shr (0+2)
 36349                           
 36350                           ; Vector 10 : AD
 36351  00001C  6F54               	dw	_ADCC_ISR shr (0+2)
 36352                           
 36353                           ; Vector 11 : ADT
 36354  00001E  6C75               	dw	_ADCC_ThresholdISR shr (0+2)
 36355                           
 36356                           ; Vector 12 : CMP1
 36357  000020  7103               	dw	_Default_ISR shr (0+2)
 36358                           
 36359                           ; Vector 13 : SMT1
 36360  000022  7103               	dw	_Default_ISR shr (0+2)
 36361                           
 36362                           ; Vector 14 : SMT1PRA
 36363  000024  7103               	dw	_Default_ISR shr (0+2)
 36364                           
 36365                           ; Vector 15 : SMT1PRW
 36366  000026  7103               	dw	_Default_ISR shr (0+2)
 36367                           
 36368                           ; Vector 16 : DMA1SCNT
 36369  000028  70BD               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 36370                           
 36371                           ; Vector 17 : DMA1DCNT
 36372  00002A  70EA               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 36373                           
 36374                           ; Vector 18 : DMA1OR
 36375  00002C  70F0               	dw	_DMA1_DMAOR_ISR shr (0+2)
 36376                           
 36377                           ; Vector 19 : DMA1A
 36378  00002E  70ED               	dw	_DMA1_DMAA_ISR shr (0+2)
 36379                           
 36380                           ; Vector 20 : SPI1RX
 36381  000030  7103               	dw	_Default_ISR shr (0+2)
 36382                           
 36383                           ; Vector 21 : SPI1TX
 36384  000032  7103               	dw	_Default_ISR shr (0+2)
 36385                           
 36386                           ; Vector 22 : SPI1
 36387  000034  7103               	dw	_Default_ISR shr (0+2)
 36388                           
 36389                           ; Vector 23 : I2C1RX
 36390  000036  7103               	dw	_Default_ISR shr (0+2)
 36391                           
 36392                           ; Vector 24 : I2C1TX
 36393  000038  7103               	dw	_Default_ISR shr (0+2)
 36394                           
 36395                           ; Vector 25 : I2C1
 36396  00003A  7103               	dw	_Default_ISR shr (0+2)
 36397                           
 36398                           ; Vector 26 : I2C1E
 36399  00003C  7103               	dw	_Default_ISR shr (0+2)
 36400                           
 36401                           ; Vector 27 : U1RX
 36402  00003E  6FED               	dw	_UART1_rx_vect_isr shr (0+2)
 36403                           
 36404                           ; Vector 28 : U1TX
 36405  000040  7103               	dw	_Default_ISR shr (0+2)
 36406                           
 36407                           ; Vector 29 : U1E
 36408  000042  7103               	dw	_Default_ISR shr (0+2)
 36409                           
 36410                           ; Vector 30 : U1
 36411  000044  7103               	dw	_Default_ISR shr (0+2)
 36412                           
 36413                           ; Vector 31 : TMR0
 36414  000046  7103               	dw	_Default_ISR shr (0+2)
 36415                           
 36416                           ; Vector 32 : TMR1
 36417  000048  7103               	dw	_Default_ISR shr (0+2)
 36418                           
 36419                           ; Vector 33 : TMR1G
 36420  00004A  7103               	dw	_Default_ISR shr (0+2)
 36421                           
 36422                           ; Vector 34 : TMR2
 36423  00004C  7103               	dw	_Default_ISR shr (0+2)
 36424                           
 36425                           ; Vector 35 : CCP1
 36426  00004E  7103               	dw	_Default_ISR shr (0+2)
 36427                           
 36428                           ; Vector 36 : Undefined
 36429  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 36430                           
 36431                           ; Vector 37 : NCO1
 36432  000052  7103               	dw	_Default_ISR shr (0+2)
 36433                           
 36434                           ; Vector 38 : CWG1
 36435  000054  7103               	dw	_Default_ISR shr (0+2)
 36436                           
 36437                           ; Vector 39 : CLC1
 36438  000056  7103               	dw	_Default_ISR shr (0+2)
 36439                           
 36440                           ; Vector 40 : INT1
 36441  000058  6E9E               	dw	_INT1_ISR shr (0+2)
 36442                           
 36443                           ; Vector 41 : CMP2
 36444  00005A  7103               	dw	_Default_ISR shr (0+2)
 36445                           
 36446                           ; Vector 42 : DMA2SCNT
 36447  00005C  7103               	dw	_Default_ISR shr (0+2)
 36448                           
 36449                           ; Vector 43 : DMA2DCNT
 36450  00005E  7103               	dw	_Default_ISR shr (0+2)
 36451                           
 36452                           ; Vector 44 : DMA2OR
 36453  000060  7103               	dw	_Default_ISR shr (0+2)
 36454                           
 36455                           ; Vector 45 : DMA2A
 36456  000062  7103               	dw	_Default_ISR shr (0+2)
 36457                           
 36458                           ; Vector 46 : I2C2RX
 36459  000064  7103               	dw	_Default_ISR shr (0+2)
 36460                           
 36461                           ; Vector 47 : I2C2TX
 36462  000066  7103               	dw	_Default_ISR shr (0+2)
 36463                           
 36464                           ; Vector 48 : I2C2
 36465  000068  7103               	dw	_Default_ISR shr (0+2)
 36466                           
 36467                           ; Vector 49 : I2C2E
 36468  00006A  7103               	dw	_Default_ISR shr (0+2)
 36469                           
 36470                           ; Vector 50 : U2RX
 36471  00006C  7001               	dw	_UART2_rx_vect_isr shr (0+2)
 36472                           
 36473                           ; Vector 51 : U2TX
 36474  00006E  6FF7               	dw	_UART2_tx_vect_isr shr (0+2)
 36475                           
 36476                           ; Vector 52 : U2E
 36477  000070  7103               	dw	_Default_ISR shr (0+2)
 36478                           
 36479                           ; Vector 53 : U2
 36480  000072  7103               	dw	_Default_ISR shr (0+2)
 36481                           
 36482                           ; Vector 54 : TMR3
 36483  000074  64CD               	dw	_TMR3_ISR shr (0+2)
 36484                           
 36485                           ; Vector 55 : TMR3G
 36486  000076  7103               	dw	_Default_ISR shr (0+2)
 36487                           
 36488                           ; Vector 56 : TMR4
 36489  000078  7103               	dw	_Default_ISR shr (0+2)
 36490                           
 36491                           ; Vector 57 : CCP2
 36492  00007A  7103               	dw	_Default_ISR shr (0+2)
 36493                           
 36494                           ; Vector 58 : Undefined
 36495  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 36496                           
 36497                           ; Vector 59 : CWG2
 36498  00007E  7103               	dw	_Default_ISR shr (0+2)
 36499                           
 36500                           ; Vector 60 : CLC2
 36501  000080  7103               	dw	_Default_ISR shr (0+2)
 36502                           
 36503                           ; Vector 61 : INT2
 36504  000082  7103               	dw	_Default_ISR shr (0+2)
 36505                           
 36506                           ; Vector 62 : Undefined
 36507  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 36508                           
 36509                           ; Vector 63 : Undefined
 36510  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 36511                           
 36512                           ; Vector 64 : Undefined
 36513  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 36514                           
 36515                           ; Vector 65 : Undefined
 36516  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 36517                           
 36518                           ; Vector 66 : Undefined
 36519  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 36520                           
 36521                           ; Vector 67 : Undefined
 36522  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 36523                           
 36524                           ; Vector 68 : Undefined
 36525  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 36526                           
 36527                           ; Vector 69 : Undefined
 36528  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 36529                           
 36530                           ; Vector 70 : TMR5
 36531  000094  6835               	dw	_TMR5_ISR shr (0+2)
 36532                           
 36533                           ; Vector 71 : TMR5G
 36534  000096  7103               	dw	_Default_ISR shr (0+2)
 36535                           
 36536                           ; Vector 72 : TMR6
 36537  000098  7095               	dw	_TMR6_ISR shr (0+2)
 36538                           
 36539                           ; Vector 73 : CCP3
 36540  00009A  7103               	dw	_Default_ISR shr (0+2)
 36541                           
 36542                           ; Vector 74 : CWG3
 36543  00009C  7103               	dw	_Default_ISR shr (0+2)
 36544                           
 36545                           ; Vector 75 : CLC3
 36546  00009E  7103               	dw	_Default_ISR shr (0+2)
 36547                           
 36548                           ; Vector 76 : Undefined
 36549  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 36550                           
 36551                           ; Vector 77 : Undefined
 36552  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 36553                           
 36554                           ; Vector 78 : Undefined
 36555  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 36556                           
 36557                           ; Vector 79 : Undefined
 36558  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 36559                           
 36560                           ; Vector 80 : CCP4
 36561  0000A8  7103               	dw	_Default_ISR shr (0+2)
 36562                           
 36563                           ; Vector 81 : CLC4
 36564  0000AA  7103               	dw	_Default_ISR shr (0+2)
 36565  0000AC                     ivt0x8_undefint:
 36566                           	opt callstack 0
 36567  0000AC  00FF               	reset	
 36568                           
 36569                           	psect	text181
 36570  000000                     __ptext181:
 36571                           	opt callstack 0
 36572                           
 36573                           	psect	rparam
 36574  0000                     
 36575                           	psect	temp
 36576  000001                     btemp:
 36577                           	opt callstack 0
 36578  000001                     	ds	32
 36579  0000                     wtemp0	set	btemp
 36580  0000                     wtemp1	set	btemp+2
 36581  0000                     wtemp2	set	btemp+4
 36582  0000                     wtemp3	set	btemp+6
 36583  0000                     wtemp4	set	btemp+8
 36584  0000                     wtemp5	set	btemp+10
 36585  0000                     wtemp8	set	btemp+1
 36586  0000                     ttemp0	set	btemp
 36587  0000                     ttemp1	set	btemp+3
 36588  0000                     ttemp2	set	btemp+6
 36589  0000                     ttemp3	set	btemp+9
 36590  0000                     ttemp5	set	btemp+1
 36591  0000                     ttemp6	set	btemp+4
 36592  0000                     ttemp7	set	btemp+8
 36593  0000                     ltemp0	set	btemp
 36594  0000                     ltemp1	set	btemp+4
 36595  0000                     ltemp2	set	btemp+8
 36596  0000                     lltemp0	set	btemp
 36597  0000                     lltemp1	set	btemp+8
 36598  0000                     lltemp2	set	btemp+16
 36599  0000                     lltemp3	set	btemp+24
 36600                           tosu	equ	0x3FFF
 36601                           tosh	equ	0x3FFE
 36602                           tosl	equ	0x3FFD
 36603                           stkptr	equ	0x3FFC
 36604                           pclatu	equ	0x3FFB
 36605                           pclath	equ	0x3FFA
 36606                           pcl	equ	0x3FF9
 36607                           tblptru	equ	0x3FF8
 36608                           tblptrh	equ	0x3FF7
 36609                           tblptrl	equ	0x3FF6
 36610                           tablat	equ	0x3FF5
 36611                           prodh	equ	0x3FF4
 36612                           prodl	equ	0x3FF3
 36613                           indf0	equ	0x3FEF
 36614                           postinc0	equ	0x3FEE
 36615                           postdec0	equ	0x3FED
 36616                           preinc0	equ	0x3FEC
 36617                           plusw0	equ	0x3FEB
 36618                           fsr0h	equ	0x3FEA
 36619                           fsr0l	equ	0x3FE9
 36620                           wreg	equ	0x3FE8
 36621                           indf1	equ	0x3FE7
 36622                           postinc1	equ	0x3FE6
 36623                           postdec1	equ	0x3FE5
 36624                           preinc1	equ	0x3FE4
 36625                           plusw1	equ	0x3FE3
 36626                           fsr1h	equ	0x3FE2
 36627                           fsr1l	equ	0x3FE1
 36628                           bsr	equ	0x3FE0
 36629                           indf2	equ	0x3FDF
 36630                           postinc2	equ	0x3FDE
 36631                           postdec2	equ	0x3FDD
 36632                           preinc2	equ	0x3FDC
 36633                           plusw2	equ	0x3FDB
 36634                           fsr2h	equ	0x3FDA
 36635                           fsr2l	equ	0x3FD9
 36636                           status	equ	0x3FD8


Data Sizes:
    Strings     1064
    Constant    492
    Data        1070
    BSS         1305
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     25      39
    BANK0           160     25     158
    BANK1           256      0     251
    BANK2           256      0     231
    BANK3           256      0     198
    BANK4           256      0     255
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_101(CODE[1]), STR_63(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_98(CODE[3]), STR_94(CODE[3]), STR_89(CODE[3]), STR_84(CODE[3]), 
		 -> STR_79(CODE[3]), STR_75(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_98(CODE[3]), STR_94(CODE[3]), STR_89(CODE[3]), STR_84(CODE[3]), 
		 -> STR_79(CODE[3]), STR_75(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 121
		 -> ct(STACK[3]), STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), 
		 -> STR_48(CODE[19]), STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[23]), 
		 -> STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), 
		 -> STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 121
		 -> ct(STACK[3]), STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), 
		 -> STR_48(CODE[19]), STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[23]), 
		 -> STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), 
		 -> STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_46(CODE[9]), STR_45(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_46(CODE[9]), STR_45(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_70(CODE[4]), STR_69(CODE[4]), STR_66(CODE[4]), STR_65(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_70(CODE[4]), STR_69(CODE[4]), STR_66(CODE[4]), STR_65(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_44(CODE[3]), STR_43(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), 
		 -> STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[23]), 
		 -> STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), 
		 -> STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S6279_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    f1p	PTR  size(2) Largest target is 299
		 -> C(BIGRAM[299]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_46(CODE[9]), STR_45(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_46(CODE[9]), STR_45(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_46(CODE[9]), 
		 -> STR_45(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> STR_3(CODE[5]), V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    h	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    h	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    sp__hid_input	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    h	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    S4742tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_46(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_45(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[191]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[191]), 

    sp__hid_display	PTR struct H_data size(2) Largest target is 7
		 -> H(BANK1[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1995spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1995spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  478179
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                            _set_dac
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _set_dac                                              0     0      0      44
                  _SPI1_Exchange8bit
                    _dac_spi_control
 ---------------------------------------------------------------------------------
 (2) _dac_spi_control                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0   10397
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         7     3      4     136
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          2     0      2     647
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            2     0      2     175
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1   10561
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31221
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   12957
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     2     0      2      62
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  248792
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0  124143
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (18) _sprintf                                            96    10     86   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   94094
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   93830
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31190
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1   31115
                             _printf
                     _ringBufS_flush
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    9380
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    7144
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (17) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (17) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR5_ISR                                           15    15      0    7483
                                             10 COMRAM    15    15      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR5_CallBack                                       0     0      0    7393
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultInterruptHandler                        0     0      0    7393
                     _check_day_time
 ---------------------------------------------------------------------------------
 (18) _check_day_time                                      4     4      0    7393
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
 ---------------------------------------------------------------------------------
 (19) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    7144
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR3_ISR                                           25    25      0   35586
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR3_CallBack                                       0     0      0   35496
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (17) _calc_bsoc                                           6     6      0   35496
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _sprintf                                            96    10     86   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (18) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (18) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (17) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (28) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (28) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 27
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fladd
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_dac
     _SPI1_Exchange8bit
     _dac_spi_control
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
       _wdtdelay
     _wait_lcd_done
       _wdtdelay
   _wait_lcd_done
     _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fladd
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     50D      69       15.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      FF      13       99.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C6      11       77.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E7       9       90.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FB       7       98.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      9E       5       98.8%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     19      27       1       61.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     46C      58        0.0%
DATA                 0      0     979       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Jan 17 19:13:04 2020

                     _SPI1_Exchange8bit C188                __end_of_set_display_info C200  
                                     _C 06FF                                       _D 082A  
                                     _H 01C6                                       _P 01EF  
                                     _R 00AF                                       _S 0254  
                                     _T FABB                                       _V 0107  
      __end_of_TMR5_SetInterruptHandler BEEA            __end_of_start_switch_handler C168  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FBC3                  __end_of_FVR_Initialize C3F2  
                        _check_day_time 8A22                             __CFG_LVP$ON 000000  
                                   l169 C2DA                                     l807 C196  
                                   l673 BDA2                                     _GIE 01FE97  
                                   _abs B826                                     _pad 9BC4  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize C286  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack C0BC  
                     _update_adc_result BAB6                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 00BA                           _INT1_CallBack C050  
                          __CFG_ZCD$OFF 000000                                    l1012 BA32  
                                  l1200 BA72                                    l2018 A436  
                                  l2027 8860                                    l3004 4BF2  
                                  l3113 8680                                    l2218 58D8  
                                  l1602 ACF8                                    l1354 18FE  
                                  l1338 12A2                                    l2139 7418  
                       _timer3ReloadVal 009E                                    l1380 2364  
                                  l1364 19A2                                    l1356 1902  
                                  l2093 3A6C                                    l3037 52DC  
                                  l2254 123A                                    l2422 3346  
                                  l1374 1BA6                                    l1375 1DCE  
                                  l3144 B866                                    l3136 8D4E  
                                  l2336 7506                                    l2097 3D72  
                                  l3073 45A6                                    l1473 B490  
                                  l1617 BBAE                                    l1811 57F4  
                                  l2283 066A                                    l3244 9AA2  
                                  l2372 610A                                    l1733 C1FC  
                                  l2357 6830                                    l2198 9C20  
                                  l3175 7BC4                                    l3511 826A  
                                  l2714 A5C4                                    l2298 0B1A  
                                  l1851 B088                                    l1676 BB0C  
                                  l2725 9328                                    l1693 9DE4  
                                  l1685 8326                                    l2718 9254  
                                  l1598 A93C                                    l3526 AF18  
                                  l1686 8482                    _ADCC_StartConversion C308  
                                  l1952 8BB8                                    l2752 91C6  
                                  l3539 AE94                                    l1939 9F06  
                                  l1956 8BB0                                    l1892 8A18  
                                  l8000 4C14                                    l8002 4C26  
                                  l8020 4C60                                    l8006 4C32  
                                  l8032 4CBE                                    l8016 4C5A  
                                  l2992 4D62                                    l8200 66BC  
                                  l8042 4CEA                                    l8130 B856  
                                  l8210 67C2                                    l8202 670C  
                                  l8054 4D42                                    l8046 4D02  
                                  l8206 6754                                    l8048 4D12  
                                  l8304 7FA6                                    l8144 8CEC  
                                  l8410 5116                                    l8402 50E4  
                                  l8330 4E02                                    l8250 7790  
                                  l8154 8D46                                    l8420 5158  
                                  l8404 50E8                                    l8324 4DC2  
                                  l8244 773C                                    l8148 8CF0  
                                  l8172 AF08                                    l8228 AE84  
                                  l8430 51A2                                    l8350 4EE0  
                                  l8334 4E18                                    l8504 3EEA  
                                  l8416 5132                                    l8344 4EA0  
                                  l8336 4E48                                    l8256 77D6  
                                  l8602 44A0                                    l8506 3EF0  
                                  l8450 5258                                    l8434 51A8  
                                  l8362 4F64                                    l8354 4EF6  
                                  l8186 659E                                    l8620 4554  
                                  l8612 4510                                    l8516 3F42  
                                  l8508 3F20                                    l8444 521C  
                                  l8356 4F26                                    l7820 AB7C  
                                  l8268 78A8                                    l8622 456E  
                                  l8606 44E6                                    l8462 52B0  
                                  l8480 3DDC                                    l8464 52C0  
                                  l8456 5288                                    l8376 4FB8  
                                  l8368 4F9E                                    l8296 7EFA  
                                  l8288 7E72                                    l8800 9174  
                                  l8490 3E52                                    l8394 507E  
                                  l8386 5048                                    l9442 7974  
                                  l7818 AB5A                                    l8642 94BA  
                                  l8714 9BAA                                    l8706 9B76  
                                  l8730 A5C2                                    l8722 A54C  
                                  l7932 496E                                    l7852 4646  
                                  l8396 5090                                    l9460 7A4E  
                                  l9452 7A0A                                    l9444 7996  
                                  l8574 43B6                                    l8486 3E1C  
                                  l7934 4980                                    l7942 49BA  
                                  l7918 48DC                                    l7870 46F6  
                                  l7846 4606                                    l9462 7A72  
                                  l8654 94F0                                    l8726 A58E  
                                  l8814 8F2C                                    l8592 442C  
                                  l8568 439A                                    l8488 3E22  
                                  l7960 4A56                                    l7928 494E  
                                  l7880 474C                                    l7864 46C4  
                                  l7856 465C                                    l8744 92A2  
                                  l9464 7AB0                                    l8648 94D0  
                                  l8578 43DC                                    l8498 3EAA  
                                  l7962 4A68                                    l7970 4AA4  
                                  l7938 498A                                    l7882 477C  
                                  l7858 468C                                    l8738 9212  
                                  l9810 5318                                    l9458 7A36  
                                  l8826 8FFE                                    l8588 4426  
                                  l7876 4736                                    l8756 9326  
                                  l8748 92F0                                    l9820 546A  
                                  l9804 52E8                                    l9468 7B18  
                                  l8676 95CA                                    l8668 9596  
                                  l8692 9ADE                                    l8764 B6DE  
                                  l7982 4B7C                                    l7966 4A72  
                                  l8862 B57C                                    l9478 7BB4  
                                  l8790 9132                                    l8774 90B0  
                                  l9494 80DC                                    l8846 96CA  
                                  l8838 961E                                    l7992 4BD6  
                                  l7984 4BA2                                    l7888 479E  
                                  l9760 853C                                    l9752 84D0  
                                  l9832 55AA                                    l9824 5578  
                                  l8696 9AF6                                    l8688 9ACC  
                                  l8792 914E                                    l9496 8148  
                                  l9762 854A                                    l9850 57C2  
                                  l9772 85AC                                    l9764 8560  
                                  l9844 5726                                    l9836 5646  
                                  l9774 85CA                                    l9766 857E  
                                  l8798 915E                                    STR_1 FF1E  
                                  l9784 85FE                                    l9776 85E0  
                                  STR_2 FF09                                    STR_3 FFD2  
                                  l9794 8660                                    l9858 57D4  
                                  STR_4 FECA                                    STR_5 FEA0  
                                  l9964 8AEC                                    l9876 BE1A  
                                  STR_6 FEA0                                    STR_7 FEA0  
                                  STR_8 FEB5                                    STR_9 FC84  
                                  l9976 8B5E                                    l9994 BBB8  
                                  _LATA 003FBA                                    _LATB 003FBB  
                                  _LATC 003FBC                                    _LATD 003FBD  
                                  _LATE 003FBE                                    _LATF 003FBF  
                                  _T2PR 003FAB                                    u6110 8D3E  
                                  u7000 447A                                    u6120 8D40  
                                  u6105 8D20                                    u7010 44B4  
                                  u6050 B83A                                    _T6PR 003F93  
                                  u7020 44FA                                    u6060 8C70  
                                  u5500 BCB8                                    u6300 AE42  
                                  _PMD0 0039C0                                    u7005 446A  
                                  _PMD1 0039C1                                    u6230 6662  
                                  u5510 BCBA                                    u6150 AEC6  
                                  u6310 AE44                                    _PMD2 0039C2  
                                  u6215 65BC                                    _PMD3 0039C3  
                                  u6400 77D0                                    u7200 A5BE  
                                  u6216 65C2                                    u6160 AEC8  
                                  _PMD4 0039C4                                    u6065 8C66  
                                  u6217 65D0                                    _PMD5 0039C5  
                                  u5610 4902                                    u6330 BCE8  
                                  u6410 7802                                    u6250 673A  
                                  _PMD6 0039C6                                    u6235 6658  
                                  _PMD7 0039C7                                    u5620 4922  
                                  u6340 BCEA                                    u6500 7EC2  
                                  u7140 9B22                                    u6180 6536  
                                  u5621 491C                                    u5470 ABAA  
                                  u6430 78E0                                    u6510 7EF4  
                                  u7070 951C                                    u6190 6582  
                                  u6255 6730                                    u6360 7736  
                                  u6520 7F26                                    u7160 9B96  
                                  u6280 B8EA                                    u6185 652C  
                                  u5810 4C38                                    u5730 4A9A  
                                  u6450 7932                                    u7090 95B6  
                                  u7410 9036                                    u6290 B8EC  
                                  u5900 4CCE                                    u5660 49B2  
                                  u6700 5110                                    u9100 85F4  
                                  u6380 778C                                    u6540 7FDE  
                                  u7260 B6DA                                    u7340 917C  
                                  u5477 AB9C                                    u5830 4C52  
                                  u5670 49D2                                    u5638 4924  
                                  u7270 9090                                    u7430 9618  
                                  u5735 4A8A                                    u6391 7796  
                                  u6800 526C                                    u6560 8030  
                                  u6480 7E6C                                    u7360 91A6  
                                  u7280 90A4                                    u7440 964A  
                                  u5665 49A2                                    u5770 4BC4  
                                  u7290 90DE                                    u7275 9086  
                                  u7371 8EEC                                    u6740 519A  
                                  u9204 5592                                    u7380 8F26  
                                  u7460 9702                                    u5940 BC88  
                                  u9205 558C                                    u5870 4CAE  
                                  u7390 8F58                                    u5950 BC8A  
                                  u7295 90D4                                    u9224 5660  
                                  u9144 5302                                    u7480 B558  
                                  u6905 40C4                                    u9225 565A  
                                  u9145 52FC                                    u9250 568A  
                                  u7490 B578                                    u8610 7B5E  
                                  u6915 418C                                    u5875 4C9E  
                                  u6780 51F6                                    u9244 5682  
                                  u9164 5332                                    u8620 7B60  
                                  u8700 8210                                    u6925 4354  
                                  u9245 567C                                    u9165 532C  
                                  u6790 5230                                    u8710 823E  
                                  u6960 441E                                    u9600 887C  
                                  u9184 5354                                    u9505 B280  
                                  u6785 51E6                                    u9185 534E  
                                  u9425 B926                                    u8705 820A  
                                  u9506 B282                                    u6890 3F30  
                                  u8707 81FC                                    u8660 8176  
                                  u8717 8230                                    u8590 7A06  
                                  u9480 B24C                                    u9720 C110  
                                  _PLLR 01CEE0                                    u8667 8168  
                                  u9555 C334                                    u9556 C336  
                                  u9565 C324                                    u9726 C112  
                                  u9566 C326                                    u9498 B24E  
                                  _WPUA 003A41                                    _WPUB 003A51  
                                  _WPUC 003A61                                    _WPUD 003A71  
                                  _WPUE 003A81                                    _WPUF 003A91  
                      __end_of_ADCC_ISR BD7C                           __CFG_FCMEN$ON 000000  
                                  _dbuf 0297                                    _cp_h FBD3  
                                  _cp_l FBCF                                    _atoi 795A  
                                  _ctoa AD92                                    _main 1244  
                                  _dtoa 57FA                                    _nanf B36A  
                                  _seed 01F3                                    _prec 003C  
                                  _nout 009A                                    _spin FB4B  
                                  fsr0h 003FEA                                    fsr1h 003FE2  
                                  indf0 003FEF                                    fsr2h 003FDA  
                                  fsr0l 003FE9                                    indf1 003FE7  
                                  indf2 003FDF                                    fsr1l 003FE1  
                                  fsr2l 003FD9                                    _stoa 741C  
                                  btemp 0001                                    _utoa 67EC  
                                  _xtoa 60C6                  __end_of_check_adc_scan C3DA  
                         ___fpclassifyf 8BC2                                    prodh 003FF4  
                                  prodl 003FF3                                    start 00AE  
                       _timer5ReloadVal 00A2               __end_of_SPI1_Exchange8bit C1A6  
             __size_of_clear_hid_pflags 0046                         _TMR3_Initialize B798  
           __size_of_set_load_relay_one 0010             __size_of_set_load_relay_two 0010  
                         __CFG_CSWEN$ON 000000                       _UART1_rx_vect_isr BFB4  
                          ___param_bank 000000                  __end_of_check_day_time 8BC2  
                    ?_UART1_rx_vect_isr 0021                        __end_of_INT0_ISR C392  
                      __end_of_INT1_ISR BAB6          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma A944           __end_of_OSCILLATOR_Initialize C2E0  
                                 l11100 7204                                   l10052 BD34  
                                 l11120 7284                                   l11112 725E  
                                 l11104 7210                                   l11204 60B8  
                                 l11052 9FD8                                   l10086 B5B8  
                                 l11038 8EB8                                   l12006 99B8  
                                 l12022 AC24                                   l12110 ADDC  
                                 l11142 73DE                                   l11046 9F26  
                                 l11160 A6CC                                   l11144 7408  
                                 l12018 ABE6                                   l12050 7018  
                                 l11074 7160                                   l11340 AF56  
                                 l10700 9762                                   l10540 889E  
                                 l12108 ADB0                                   l12300 05F6  
                                 l12044 6FAE                                   l11156 A68E  
                                 l11084 71A6                                   l11076 7170  
                                 l10702 978E                                   l12070 9BF0  
                                 l12142 5912                                   l12134 58C8  
                                 l12302 0602                                   l12206 00F0  
                                 l12214 0146                                   l12038 6EF0  
                                 l11094 71DC                                   l11078 7176  
                                 l13006 A3D0                                   l10480 B616  
                                 l13032 34FA                                   l13024 343A  
                                 l10552 88DE                                   l12080 9C66  
                                 l12224 01EA                                   l12232 0258  
                                 l10632 BAD6                                   l11088 71B2  
                                 l11346 AF66                                   l12074 9C18  
                                 l12146 5930                                   l12090 A2DE  
                                 l12322 06F0                                   l12242 02FC  
                                 l12250 032A                                   l12226 0216  
                                 l12058 70C6                                   l10476 B5E4  
                                 l13044 3668                                   l13036 3566  
                                 l13028 348E                                   l10716 9840  
                                 l10708 97C6                                   l10548 88CA  
                                 l12084 9CB0                                   l12076 9C2A  
                                 l12180 5C30                                   l12156 5B42  
                                 l12404 0D90                                   l12412 0EA2  
                                 l12228 022C                                   l13300 12AA  
                                 l13054 3894                                   l13206 B0F4  
                                 l10590 BB22                                   l12318 06B8  
                                 l12262 0406                                   l10822 A65C  
                                 l10662 B05E                                   l13302 12BC  
                                 l13072 3A9E                                   l13064 39D4  
                                 l13048 36BC                                   l10920 BA1A  
                                 l12176 5BF4                                   l12440 0FF0  
                                 l12424 0F3A                                   l12360 0B12  
                                 l12352 0A48                                   l12328 077A  
                                 l12280 0554                                   l12264 0470  
                                 l12520 75A8                                   l12512 753C  
                                 l12600 6170                                   l13232 82F6  
                                 l10656 B04C                                   l13058 390E  
                                 l10690 974C                                   l12450 1092  
                                 l12362 0B34                                   l12338 0926  
                                 l12258 0396                                   l12194 00AC  
                                 l12530 765E                                   l10818 A5E0  
                                 l13410 17B0                                   l13084 3D6A  
                                 l13068 3A7C                                   l10692 975A  
                                 l12460 10E2                                   l12292 0594  
                                 l12284 057C                                   l12268 04D2  
                                 l12516 7578                                   l13420 1906  
                                 PRLOCK 0039EF                                   l12438 0FD6  
                                 l12286 058E                                   l12534 769A  
                                 l12526 7632                                   l12710 2642  
                                 l13246 841E                                   l13166 869E  
                                 l13422 1934                                   l10688 973C  
                                 l12376 0C32                                   l12624 62C6  
                                 l12608 61D0                                   l12632 634C  
                                 l12712 2658                                   l13352 146E  
                                 l10882 C142                                   l10938 BA5A  
                                 l13178 8752                                   l13530 22DE  
                                 l13506 2264                                   l13442 198E  
                                 l13514 228E                                   l13434 1968  
                                 l12476 119A                                   l12388 0CBA  
                                 l12396 0D24                                   l12556 687C  
                                 l12548 6820                                   l12804 2DE8  
                                 l12708 2608                                   l13188 882A  
                                 l13532 22F6                                   l13524 22CC  
                                 l13452 19B2                                   l10894 BD9E  
                                 l12566 6A72                                   l12814 2F0A  
                                 l12750 2994                                   l13542 233A  
                                 l13294 1284                                   l12496 7488  
                                 l12648 6436                                   l12824 2FC0  
                                 l12728 27BC                                   l13552 2390  
                                 l13480 204E                                   l13464 1AB2  
                                 l13296 128C                                   l12594 6134  
                                 l12770 2BA6                                   l12762 2AEE  
                                 l12746 2940                                   l12738 2854  
                                 l12690 24D6                                   l12906 A81A  
                                 l12930 A948                                   l13538 2314  
                                 l13490 21E2                                   l12588 60FA  
                                 l12852 3274                                   l12908 A85C  
                                 l12932 A950                                   l13476 1FEE  
                                 l13492 220E                                   l12862 32D2  
                                 l12838 313C                                   l12774 2BDA  
                                 l12686 2486                                   l12934 A95A  
                                 l12942 A970                                   l13398 16D6  
                                 l12688 24C0                                   l12936 A968  
                                 l12944 A99C                                   l12858 32CE  
                                 l12794 2D3A                                   l12868 32F2  
                                 l12886 AA44                                   l12966 9CFC  
                       __end_of___aodiv 795A                            _Volts_to_SOC A5CE  
                                 _ADCAP 003EF5                                   _ADACT 003EFE  
                       __end_of___fladd 4D6C                                   _ADCLK 003EFF  
                       __end_of___aomod 8054                                   _ADPCH 003EF1  
                       __end_of___fldiv 52E6                                   _ADREF 003EFD  
                       __end_of___awdiv 95E4                         __end_of___flneg B708  
                                 STR_10 FD56                                   STR_11 FE32  
                                 STR_12 FEDF                                   STR_21 FF83  
                                 STR_13 FEF4                                   STR_14 FF48  
                                 STR_30 FE5E                                   STR_22 FE1C  
                                 STR_15 FF33                                   STR_23 FE06  
                                 STR_31 FD6C                                   STR_40 FE8A  
                                 STR_24 FDF0                                   STR_32 FD82  
                                 STR_16 FD40                                   STR_41 FE8A  
                                 STR_25 FDDA                                   STR_33 FD98  
                                 STR_17 FC50                           __CFG_WDTE$OFF 000000  
                                 STR_50 FFBF                                   STR_42 FE8A  
                                 STR_26 FDC4                                   STR_34 FCE4  
                                 STR_18 FC6A                                   STR_43 FFFC  
                                 STR_51 FFA4                                   STR_19 FF94  
                                 STR_27 FDAE                                   STR_35 FD29  
                                 STR_52 FFA4                                   STR_44 FFF9  
                                 STR_28 FE74                                   STR_36 FCCD  
                       __end_of___awmod 9BC4                                   STR_53 FFA4  
                                 STR_45 FFB3                                   STR_29 FE48  
                                 STR_37 FCB6                                   STR_70 FFE3  
                                 STR_46 FFC9                                   STR_38 FCFB  
                                 STR_54 FC9E                                   STR_63 FC4F  
                                 STR_47 FF5D                                   STR_39 FD12  
                                 STR_48 FF5D                                   STR_56 FF70  
                                 STR_64 FBD7                                   _ADRPT 003EEC  
                                 STR_73 FFEA                                   STR_65 FFD7  
                                 STR_49 FFBF                                   STR_82 FFED  
                                 STR_66 FFDF                                   STR_75 FFEA  
                                 STR_84 FFED                                   STR_92 FFF6  
                                 STR_77 FFF0                                   STR_69 FFDB  
                                 STR_94 FFF6                                   STR_79 FFF0  
                                 STR_87 FFF3                                   STR_96 FFE7  
                       __end_of___flmul 45B0                                   STR_89 FFF3  
                                 STR_98 FFE7                         __end_of___flsub B8B2  
                       __end_of___fltol 91D0                                   u11100 58FE  
                                 u11110 5B56                                   u11030 582A  
                                 u11040 582C                                   u12000 6348  
                                 u11121 5B86                                   u11130 5B9C  
                                 u11210 00DA                                   u12010 6368  
                                 u11131 5B9A                                   u11140 5BB0  
                                 u11060 589C                                   u12100 251E  
                                 u10340 AAB2                                   u12021 6398  
                                 u12005 632A                                   u10341 AAAC  
                                 u11150 5BB4                                   u12030 63AE  
                                 u12110 2520                                   u12031 63AC  
                                 u11080 58AE                                   u11240 0194  
                                 u12040 63C2                                   u12120 2546  
                                 u10360 AAFA                                   u10361 AAF4  
                                 u11170 5BCA                                   u11330 050E  
                                 u11250 0196                                   u12050 63C6  
                       __end_of___lodiv 905E                                   u11500 0A18  
                                 u12220 28A8                                   u11430 0648  
                                 u12150 26A0                                   u10358 AAB4  
                                 u11600 0EE4                                   u11360 0562  
                                 u11280 02A6                                   u12240 2A1C  
                                 u12160 26A2                                   u11290 02A8  
                                 u12170 26C8                                   u10378 AAFC  
                                 _U1P1H 003DED                                   u12340 3014  
                                 _U1P2H 003DEF                                   u11390 05C6  
                                 u12270 2C94                                   u12430 A3AC  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 _T3CLK 003FA9                                   u11800 76C0  
                                 u12360 31C4                                   u12280 2C96  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 u10850 99AC                                   u10930 713A  
                                 _U1P3L 003DF0                                   u11660 10B8  
                                 u11820 6806                                   u11900 60E0  
                                 u12380 AA24                                   u12460 A412  
                                 u10870 9A28                                   _U2P1L 003DD4  
                                 u11680 116E                                   u11760 759E  
                                 u12448 A3AE                                   u12800 1588  
                                 _T3CON 003FA6                                   _U2P2L 003DD6  
                                 u11690 1170                                   u11770 75E4  
                                 u11930 61C8                                   _U2P3L 003DD8  
                                 u11851 6AB4                                   u10980 A358  
                                 u11860 6ACA                                   u11940 621C  
                                 u12740 846E                                   u12820 17DE  
                                 u11861 6AC8                                   u11870 6ADE  
                                 u11950 621E                                   u12750 8470  
                                 u12478 A414                                   _T5CLK 003F9D  
                                 u11880 6AE2                                   u12920 2254  
                                 u11777 75D6                         __end_of___lomod 9724  
                                 u11970 627C                                   u12930 226C  
                                 u10987 A34A                                   u11980 627E  
                                 u12940 227E                                   _T2HLT 003FAD  
                                 u12926 2256                                   u12936 226E  
                                 _T5CON 003F9A                                   u12946 2280  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 0085  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 0026  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR3H 003FA5                                   _TMR5H 003F99  
                                 _TMR3L 003FA4                                   _TMR5L 003F98  
             __end_of_update_adc_result BAF0                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR C40C  
               __size_of_clear_adc_scan 0006       __size_of_TMR3_SetInterruptHandler 0028  
     __size_of_TMR6_SetInterruptHandler 0028                           __CFG_WRTB$OFF 000000  
                      __end_of_TMR3_ISR 9496                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR A1B6  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR C26E  
                          _DMA1CON1bits 003BFD              __size_of_send_lcd_data_dma 004A  
                                 _fabsf A740                                   _flags 003E  
              __size_of_calc_model_data 044C                            _DMA2CON0bits 003BDC  
                          _DMA2CON1bits 003BDD            __end_of_get_ac_charger_relay C384  
                                 _fputc 9988              __size_of_send_lcd_cmd_long 0040  
                       __end_of_isalpha B8F6                                   _fputs ABD6  
                       __end_of_isdigit BCF4                         __end_of_ivln2_h FBCF  
                    __CFG_MCLRE$EXTMCLR 000000                                   _srand BBCC  
                                 _width 003A                                   _putch C23A  
          __end_of_set_ac_charger_relay C35A                         __end_of_islower BC94  
                       __end_of_isspace B58C                _INT1_SetInterruptHandler BF12  
                       __end_of_set_dac AB34                         __end_of_isupper BCC4  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0001                                   ltemp1 0005  
                                 ltemp2 0009                __size_of_DMA1_Initialize 006A  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0001                                   ttemp1 0004  
                                 ttemp2 0007                                   ttemp3 000A  
                                 ttemp5 0002                                   ttemp6 0005  
                                 ttemp7 0009                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler BE9A             _UART1_SetRxInterruptHandler BE72  
                                 wtemp0 0001                                   wtemp1 0003  
                                 wtemp2 0005                                   wtemp3 0007  
                                 wtemp4 0009                                   wtemp5 000B  
                                 wtemp8 0002                         __end_of_sprintf 9EF2  
                       __end_of_tolower AF22                         __end_of_strncmp 8274  
                       __end_of_toupper AE9E               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr BFDC                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize B750                   __end_of_ringBufS_init BDFA  
                       __initialization A1B6                       _UART2_rx_vect_isr C004  
                          __end_of_cp_h FBD7                            __end_of_cp_l FBD3  
                          __end_of_atoi 7BCE                            __end_of_ctoa AE1A  
                          __end_of_main 23A4                            __end_of_dtoa 5C7A  
                          __end_of_nanf B3CC                            __end_of_spin FBC3  
                          __end_of_stoa 76DA                            __end_of_utoa 6B2C  
                          __end_of_xtoa 6480                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0021                 __end_of_TMR2_Initialize C29E  
                 __end_of_send_lcd_data C050                __size_of_DMA2_Initialize 005A  
            __end_of_check_enter_button B0FE                _TMR5_SetInterruptHandler BEC2  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 0014  
                 _TMR3_InterruptHandler 007C                       _port_data_dma_ptr C39C  
                    esr_check@esr_state 00A4                     ??_UART2_rx_vect_isr 0026  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize BDA8  
                       _PWM8_Initialize C2B4                        _UART1_Initialize B708  
                     _UART2_tx_vect_isr BFDC                      _UART2_Transmit_ISR BD7C  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan B2A4  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue B8F6  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0021                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _T3GATE 003FA8                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _T3GCON 003FA7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                _RB6PPS 003A0E                                  i1l1029 A166  
                                i1l1217 93FE                    _start_switch_handler C148  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
               __end_of_TMR3_Initialize B7E0                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright C368  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                u933_20 8A78                                  u928_25 C354  
                                u928_26 C356                                  u954_20 BB30  
                                u954_26 BB32                                  u947_20 C380  
                  __size_of_hid_display 01DC                                  u974_20 9756  
                                u973_28 9742                                  u974_21 9750  
                                u978_24 9836                                  u978_25 9832  
                      __end_of___xxtofl 868A   __end_of_ADCC_DischargeSampleCapacitor C3D2  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor C3CA  
              __end_of_send_lcd_cmd_dma C1C4                         _TMR3_WriteTimer BA38  
                   ??_UART2_tx_vect_isr 0026               __end_of_UART2_rx_vect_isr C02C  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize C392  
                      _UART2_Initialize B3CC                                  _WaitMs BB96  
                       _conv_raw_result 52E6                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 91D0  
                                ___fleq A50A                       _ADCC_ThresholdISR B1D4  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush AC6E  
                                _efgtoa 0000                                  _floorf 6480  
                     dac_spi_control@S0 0042                       dac_spi_control@S1 00A8  
                     dac_spi_control@S2 00A7                       dac_spi_control@SB 00A5  
                     dac_spi_control@SC 00A6                      ?_ADCC_ThresholdISR 0021  
                                _memset 6E58                    __size_of_help_button 0038  
                                clear_0 A228                                  clear_1 A23C  
                                clear_2 A24E                                  clear_3 A25A  
                                clear_4 A266                                  clear_5 A272  
                                clear_6 A27E               __end_of_port_data_dma_ptr C3A6  
                                _printf B308                      _eaDogM_WriteString A9EC  
                                _strcpy A296                               ?_ADCC_ISR 0021  
                                _strlen AB34                      __size_of_TimerDone 0028  
                          __pdataBIGRAM 04FF                         _ADCC_Initialize B168  
                        _PMD_Initialize C2E0              __size_of_update_adc_result 003A  
             __end_of_UART2_tx_vect_isr C004                                  lltemp0 0001  
                                lltemp1 0009                                  lltemp2 0011  
                                lltemp3 0019                     ??_ADCC_ThresholdISR 0021  
                __end_of_start_adc_scan B308                            __mediumconst F9EA  
                                preinc2 003FDC                  __size_of_init_port_dma 0030  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay B4E0  
                      __end_of_spinners 9FE8                        __end_of_vfprintf A89A  
                            _StartTimer B9B8                      __size_of___asfladd 0078  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize B798  
                     _SYSTEM_Initialize B676                              __accesstop 0060  
               __end_of__initialization A290                               ?_INT0_ISR 0021  
                             ?_INT1_ISR 0021                    __end_of_display_help C3EA  
                  __end_of_display_info C3E2               __end_of_CLKREF_Initialize C39C  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0028  
                       _TMR5_WriteTimer B9F8                   _set_temp_display_help C33A  
                      _clear_hid_pflags B7E0                   __end_of_TMR3_CallBack C0BC  
             __end_of_ADCC_ThresholdISR B23E                      __size_of_calc_bsoc 0A36  
                __end_of_ringBufS_flush AD00                          __pcstackCOMRAM 0021  
                            ___inthi_sp 115E                              ___intlo_sp 18AF  
                          __pidataBANK0 BB60                            __pidataBANK1 A43C  
           __size_of_send_port_data_dma 0052                           __end_of_fabsf A7EE  
                             ?_TMR3_ISR 0021                               ?_TMR5_ISR 0021  
                             ?_TMR6_ISR 0021                          ivt0x8_undefint 00AC  
                         __end_of_fputc 9AAC                           __end_of_fputs AC6E  
                  _get_ac_charger_relay C376                           __end_of_srand BC00  
                 __end_of_TMR5_CallBack C098                           __end_of_putch C254  
                  _set_ac_charger_relay C34A                 __end_of_PWM8_Initialize C2CA  
               __end_of_TMR6_Initialize BDD2                       _adc_int_t_handler AF22  
                __end_of_PMD_Initialize C2F4                              __end_of_bp FBCB  
                            ??_ADCC_ISR 0021                   __end_of_TMR6_CallBack C104  
           __size_of_EXT_INT_Initialize 0034                calc_bsoc@log_update_wait 0040  
                __size_of_calc_ror_data 0186                           _DMA1_DMAA_ISR C3B4  
                 TMR3_ISR@CountCallBack 009C                          _clear_adc_scan C3F2  
                    __size_of_hid_input 00D2                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 0091               __end_of_SYSTEM_Initialize B6C0  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
               __end_of_TMR3_WriteTimer BA78                              __pbssBANK0 0060  
                            __pbssBANK1 01CD                              __pbssBANK2 0200  
                            __pbssBANK3 0300                              __pbssBANK4 0400  
                            _check_help 8274                 __end_of_conv_raw_result 57FA  
                    __size_of_esr_check 02D8                   _INT0_InterruptHandler 0097  
                            ??_INT0_ISR 0021                              ??_INT1_ISR 0027  
                     __end_of_TimerDone BE22                        _DMA1_DMADCNT_ISR C3A8  
                    __size_of_init_bsoc 0246              __size_of_UART2_rx_vect_isr 0028  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01BC  
                         _init_port_dma BC34                   __end_of_wait_lcd_done C23A  
      __end_of_TMR3_SetInterruptHandler BF12                         __CFG_PPS1WAY$ON 000000  
      __end_of_TMR6_SetInterruptHandler BEC2                              ??_TMR3_ISR 00E5  
               __end_of_ADCC_Initialize B1D2                              ??_TMR5_ISR 002B  
             __end_of_adc_int_t_handler AFA0                              ??_TMR6_ISR 0026  
                     __end_of___asfladd B018                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9    __end_of_ADCC_SetADTIInterruptHandler BF8A  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler BF62  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
            __size_of_port_data_dma_ptr 000A                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR C126  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan C3F8                                 u1011_48 C0F0  
                               u1003_48 C0CC                                 u1005_28 C060  
                               u1014_28 C084                          ?_DMA1_DMAA_ISR 0021  
                      _DMA1_DMASCNT_ISR C2F4                                 u1047_44 AF86  
                               u1047_45 AF80                                 _U1ERRIE 003DFA  
                    __size_of_set_vterm 001E                                 _U1ERRIR 003DF9  
                               _U2ERRIE 003DE2                                 _U2ERRIR 003DE1  
                               u1256_20 39C4                                 u1263_28 C0A8  
                               u1258_20 3A8E                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0021              __size_of_UART2_tx_vect_isr 0028  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                       _dac_spi_control B018                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0FAC                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                       __end_of_calc_bsoc 3D86  
                               _SPI1TXB 003D11                                 _OSCTUNE 0039DE  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch BD22  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer BA38  
               __size_of_switch_handler 0136                      __size_of_stop_bsoc 0006  
            __end_of_set_load_relay_one C33A              __end_of_set_load_relay_two C32A  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
                         _calc_ror_data 8D58                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 006A  
                         _mode_lamp_dim C26E                                 __Lparam 0000  
              __end_of_UART1_Initialize B750                       __end_of_hid_input A43C  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 76DA  
                               ___fladd 45B0                                 ___aomod 7E14  
                               ___fldiv 4D6C                                 ___awdiv 9496  
                               ___flneg B6C0                                 ___awmod 9AAC  
                               ___flmul 3D86                                 ___flsub B86C  
                               ___fltol 905E                                 ___lodiv 8EDE  
                               ___lomod 95E4               __end_of_UART1_Receive_ISR C148  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display A0D2                                 __pcinit A1B6  
              __end_of_mode_lamp_bright C376                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand C35A  
                               __ramtop 2000                                 __ptext0 1244  
                               __ptext1 B42C                                 __ptext2 C148  
                               __ptext3 BBCC                                 __ptext4 9EF2  
                               __ptext5 AA92                                 __ptext6 B018  
                               __ptext7 BC34                                 __ptext8 9FE8  
                               __ptext9 C02C                       __end_of_esr_check 741C  
                     _UART2_Receive_ISR C168                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize C2CA  
                          __size_of_abs 0046                            __size_of_pad 0114  
                     __end_of_init_bsoc 7E14                                 us646999 7944  
                               us742999 9048                                 _isalpha B8B2  
                               _isdigit BCC4                                 us657999 8042  
                               _ivln2_h FBCB                                 us747999 9714  
                             _T3CONbits 003FA6                                 _mode_sw 00A9  
                     __end_of_lp_filter 8A22                                 _islower BC64  
                               _isspace B53A                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                                 _set_dac AA92  
              __end_of_UART2_Initialize B42C                                 _isupper BC94  
            __size_of_SYSTEM_Initialize 004A                                 _sprintf 9DE8  
                               _tolower AE9E                   __size_of_display_help 0008  
                               _utctime 01EB                   __size_of_display_info 0008  
                               _strncmp 8054                                 _toupper AE1A  
                  end_of_initialization A290               __size_of_convert_adc_data 00B8  
                    _check_enter_button B08C                               i1u1276_20 93F4  
   __end_of_UART2_SetRxInterruptHandler BE72             _UART2_SetRxInterruptHandler BE4A  
                             i2u1050_48 BD68                               i2u1052_48 B20A  
                             i2u1052_49 B21E                               i2u1054_48 BFC8  
                             i2u1056_48 BFF0                               i2u1058_48 C018  
               check_day_time@day_delay 0041                       __end_of_set_vterm C1E2  
                     __end_of_vfpfcnvrt 3350                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 007E                     __size_of_StartTimer 0040  
                     __end_of_start_lcd C404               __end_of_UART2_Receive_ISR C188  
                        wdtdelay@dcount 0078                 __end_of_dac_spi_control B08C  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 0027  
                 _INT1_InterruptHandler 0094                               _PORTBbits 003FCB  
                     __end_of_stop_bsoc C40A                _TMR3_SetInterruptHandler BEEA  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler BE9A  
                          _display_help C3E2                   _TMR5_InterruptHandler 007F  
                          _display_info C3DA    __size_of_UART2_SetTxInterruptHandler 0028  
              __end_of_clear_hid_pflags B826                       __size_of_ADCC_ISR 002C  
   __end_of_ADCC_SetADIInterruptHandler BFB2             _ADCC_SetADIInterruptHandler BF8A  
                            _update_lcd 9CD8                         _calc_model_data 5C7A  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                            _static_soc B42C                         _DMA1_Initialize B0FE  
                            _start_bsoc C104                  __size_of_send_lcd_data 0024  
                       _SPI1_Initialize C29E                   __end_of_get_vterm_ptr BD22  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs BBCC            __end_of_INTERRUPT_Initialize B2A4  
                            _vterm_dump 985A                          __end_of___flge 9332  
                        __end_of___fleq A5CE    __end_of_INT0_DefaultInterruptHandler C418  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler C416  
            __size_of_UART1_Receive_ISR 0022                         _DMA2_Initialize B4E0  
                         __pidataBIGRAM 6B2C                          __end_of_efgtoa 1244  
                     __size_of_TMR3_ISR 0162                       __size_of_TMR5_ISR 00E2  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 67EC             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 01E7                          __end_of_memset 7144  
                        __end_of_printf B36A                __end_of_DMA1_DMADCNT_ISR C3B2  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack C0E0  
                        __end_of_strcpy A36A                          __end_of_strlen ABD6  
                   start_initialization A1B6    __end_of_TMR5_DefaultInterruptHandler BB60  
 __size_of_TMR5_DefaultInterruptHandler 0038            _TMR5_DefaultInterruptHandler BB28  
       __size_of_PIN_MANAGER_Initialize 0092                             __end_of_abs B86C  
                 __end_of_INT1_CallBack C074               __size_of_set_display_info 001E  
                           __end_of_pad 9CD8                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd B9B8                          _switch_handler 9724  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 01D9                   __end_of___fpclassifyf 8D58  
                         _uart2RxBuffer 0400                __end_of_DMA1_DMASCNT_ISR C308  
                         _uart2TxBuffer 0300                          _DMA1_DMAOR_ISR C3C0  
                   __end_of_hid_display 8866              __end_of_send_port_data_dma B5DE  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone BDFA  
                         _ringBufS_init BDD2                             __pdataBANK0 00AF  
                           __pdataBANK1 0100              __size_of_UART2_Receive_ISR 0020  
                   __size_of_get_switch 002C              __end_of_EXT_INT_Initialize BC34  
               __end_of_calc_model_data 60C6                           _send_lcd_data C02C  
                   __end_of_help_button BB28         __end_of_eaDogM_WriteStringAtPos A9EC  
                   __end_of_BVSOC_TABLE FABB                               ___asfladd AFA0  
                  calc_model_data@bcror 0070                             __pbssBIGRAM 082A  
               __end_of_DMA1_Initialize B168                    calc_model_data@bvror 0074  
                           __pbssCOMRAM 003A        __end_of_INT0_SetInterruptHandler BF62  
                         __pcstackBANK0 00E5                __size_of_TMR2_Initialize 0018  
                __size_of_TMR3_CallBack 0024                  __end_of_switch_handler 985A  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize C2B4  
              _UART1_RxInterruptHandler 008B                _UART2_TxInterruptHandler 008E  
                             __end_of_T FB4B                        _convert_adc_data A688  
                             _calc_bsoc 3350               __size_of_ringBufS_put_dma 00AA  
                          _init_display 9FE8                  __end_of_DMA1_DMAOR_ISR C3CA  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 0082  
                    calc_ror_data@bcror 0068                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize B53A                      calc_ror_data@bvror 006C  
                _PIN_MANAGER_Initialize AD00                __size_of_TMR3_Initialize 0048  
                  __end_of_wait_lcd_set C3FE                           __pmediumconst F9EA  
                             __ptext100 C200                               __ptext101 8486  
                             __ptext110 3D86                               __ptext102 4D6C  
                             __ptext111 B676                               __ptext103 91D0  
                             __ptext120 BEC2                               __ptext112 B3CC  
                             __ptext104 5C7A                               __ptext121 B798  
                             __ptext113 BE22                               __ptext105 C404  
                             __ptext130 C3EA                               __ptext122 BEEA  
                             __ptext114 BE4A                               __ptext106 C104  
                             __ptext131 BC00                               __ptext123 C286  
                             __ptext115 B708                               __ptext107 8866  
                             __ptext140 BA78                               __ptext132 BF12  
                             __ptext124 C29E                               __ptext116 BE72  
                             __ptext108 B86C                               __ptext141 C050  
                             __ptext133 BF3A                               __ptext125 C2B4  
                             __ptext117 BDA8                               __ptext109 45B0  
                             __ptext150 C376                               __ptext142 C412  
                             __ptext134 B4E0                               __ptext126 C2E0  
                             __ptext118 BE9A                               __ptext151 9334  
                             __ptext143 9724                               __ptext135 B0FE  
                             __ptext127 AD00                               __ptext119 B750  
                             __ptext160 C0BC                               __ptext152 BA38  
                             __ptext144 A0D4                               __ptext136 C392  
                             __ptext128 C2CA                               __ptext161 C416  
                             __ptext153 C098                               __ptext145 B9F8  
                             __ptext137 B168                               __ptext129 B23E  
                             __ptext170 BFDC                               __ptext162 C40C  
                             __ptext154 C414                               __ptext146 C074  
                             __ptext138 BF62                               __ptext171 BD7C  
                             __ptext163 BD50                               __ptext155 3350  
                             __ptext147 BB28                               __ptext139 BF8A  
                             __ptext180 C3C0                               __ptext172 C004  
                             __ptext164 AF22                               __ptext156 B58C  
                             __ptext148 8A22                               __ptext181 0000  
                             __ptext173 C168                               __ptext165 C418  
                             __ptext157 C39C                               __ptext149 C34A  
                             __ptext174 C254                               __ptext166 C41A  
                             __ptext158 AFA0                               __ptext175 C0E0  
                             __ptext167 B1D4                               __ptext159 C384  
                             __ptext176 B5DE                               __ptext168 BFB4  
                             __ptext177 C2F4                               __ptext169 C126  
                             __ptext178 C3A8                               __ptext179 C3B4  
                             _hid_input A36A                      __end_of_StartTimer B9F8  
                    _set_load_relay_one C32A                      _set_load_relay_two C31A  
                     __size_of_wdtdelay 005A                       __size_of_spinners 00F6  
                     __size_of_vfprintf 00AC                                _ADCC_ISR BD50  
                __CFG_BBSIZE$BBSIZE_512 000000                               fabsf@F463 0060  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
                             _esr_check 7144                 __size_of_get_raw_result 001E  
                        __size_of_fabsf 00AE                               _init_bsoc 7BCE  
                __size_of_wait_lcd_done 001C                          __size_of_fputc 0124  
                              _T2CLKCON 003FAE                          __size_of_fputs 0098  
                             _lp_filter 8866                             _hid_display 868A  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize B23E                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0020                         ?_DMA1_DMAOR_ISR 0021  
                              _INT0_ISR C384                                _INT1_ISR BA78  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE                                _LATFbits 003FBF  
     __size_of_INT1_SetInterruptHandler 0028                                _IPR1bits 003981  
                              _IPR2bits 003982                                _PIE1bits 003991  
                              _IPR3bits 003983                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 027D                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                            _SPI1CON0bits 003D14  
                             _ring_buf1 0383                               _ring_buf2 0340  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                           _TMR3_CallBack C098  
                              _PIR5bits 0039A5                                _PIR6bits 0039A6  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
              __size_of_TMR5_Initialize 0048                               _set_vterm C1C4  
                   __size_of_update_lcd 0110                             _help_button BAF0  
                              _TMR3_ISR 9334                             _BVSOC_TABLE F9EB  
                              _TMR5_ISR A0D4                                _TMR6_ISR C254  
                             _port_data 04FF                     __size_of_static_soc 005A  
                             _vfpfcnvrt 23A4                            _SPI1INTFbits 003D1A  
                   __size_of_start_bsoc 0022                           _TMR5_CallBack C074  
                            _ADCON0bits 003EF8                      __end_of_check_help 8486  
                             _start_lcd C3FE                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 001E                           _TMR6_CallBack C0E0  
                 __size_of_send_lcd_cmd 0040       __size_of_TMR5_SetInterruptHandler 0028  
                             _stop_bsoc C404                        _set_display_info C1E2  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                           _INTCON0bits 003FD2                               copy_data0 A1CA  
                             copy_data1 A1F0                               copy_data2 A212  
              _INT0_SetInterruptHandler BF3A                     __size_of_vterm_dump 012E  
   __end_of_UART2_SetTxInterruptHandler BE4A             _UART2_SetTxInterruptHandler BE22  
                          _uart1RxCount 00AD                            _uart2RxCount 00AA  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 00A8  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_TMR3_WriteTimer 0040  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000                __size_of_conv_raw_result 0514  
                         _wait_lcd_done C21E                            _send_lcd_cmd B978  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
         __size_of_get_ac_charger_relay 000E                        __size_of___aomod 0240  
                       _adc_int_handler C41A                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                      __size_of___lodiv 0180                        __size_of___lomod 0140  
         __size_of_set_ac_charger_relay 0010                      __end_of_get_switch BD4E  
               __size_of_check_day_time 01A0                   __end_of_DMA1_DMAA_ISR C3BE  
                    ___fpclassifyf@F463 0064    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0200                                ___xxtofl 8486  
                     ?_DMA1_DMADCNT_ISR 0021             __size_of_check_enter_button 0072  
              __size_of_ADCC_Initialize 006A             __end_of_eaDogM_WriteCommand C368  
                      __size_of_isalpha 0044                        __size_of_isdigit 0030  
                              __pivt0x8 0008                        __size_of_islower 0030  
                      __size_of_isspace 0052                      ??_DMA1_DMADCNT_ISR 0027  
                      __size_of_set_dac 00A2                                __ptext10 B938  
                              __ptext11 B978                                __ptext20 BAB6  
                              __ptext12 C188                                __ptext21 B2A4  
                              __ptext13 BDD2                                __ptext30 B7E0  
                              __ptext22 C308                                __ptext14 7BCE  
                              __ptext31 8274                                __ptext23 C3CA  
                              __ptext15 A5CE                                __ptext40 B486  
                              __ptext32 985A                                __ptext24 C3F2  
                              __ptext16 868A                                __ptext41 B62C  
                              __ptext33 9DE8                                __ptext25 C3D2  
                              __ptext17 A36A                                __ptext50 60C6  
                              __ptext42 A9EC                                __ptext34 BCF4  
                              __ptext26 C31A                                __ptext18 BD22  
                              __ptext51 AE1A                                __ptext43 C3F8  
                              __ptext35 BB96                                __ptext27 C32A  
                              __ptext19 7144                                __ptext60 AE9E  
                              __ptext52 BC64                                __ptext44 C3FE  
                              __ptext36 9CD8                                __ptext28 C35A  
                              __ptext61 BC94                                __ptext53 B8B2  
                              __ptext45 AC6E                                __ptext37 A944  
                              __ptext29 A688                                __ptext70 57FA  
                              __ptext62 A296                                __ptext54 67EC  
                              __ptext46 6E58                                __ptext38 C1A6  
                              __ptext71 B826                                __ptext63 6480  
                              __ptext55 95E4                                __ptext47 B308  
                              __ptext39 C21E                                __ptext80 A89A  
                              __ptext72 7E14                                __ptext64 8BC2  
                              __ptext56 8EDE                                __ptext48 A7EE  
                              __ptext81 795A                                __ptext73 76DA  
                              __ptext65 905E                                __ptext57 8054  
                              __ptext49 23A4                                __ptext90 BAF0  
                              __ptext82 B53A                                __ptext74 AD92  
                              __ptext66 B6C0                                __ptext58 741C  
                              __ptext91 BDFA                                __ptext83 BCC4  
                              __ptext75 9BC4                                __ptext67 A50A  
                              __ptext59 0000                                __ptext92 B9B8  
                              __ptext84 C1C4                                __ptext76 AB34  
                              __ptext68 9AAC                                __ptext93 C3DA  
                              __ptext85 C33A                                __ptext77 ABD6  
                              __ptext69 9496                                __ptext94 C3E2  
                              __ptext86 C1E2                                __ptext78 9988  
                              __ptext95 B08C                                __ptext87 C26E  
                              __ptext79 C23A                                __ptext96 8D58  
                              __ptext88 C368                                __ptext97 A740  
                              __ptext89 B8F6                                __ptext98 52E6  
                              __ptext99 B36A                        __size_of_isupper 0030  
                              us1102999 5814                        __size_of_sprintf 010A  
                      __size_of_tolower 0084                                us1171999 742E  
                              us1183999 6852                                us1192999 6146  
                      __size_of_strncmp 0220                        __size_of_toupper 0084  
                      _ringBufS_put_dma A89A                    __end_of_Volts_to_SOC A688  
                         __size_of_atoi 0274                           __size_of_ctoa 0088  
                         __size_of_main 1160                           __size_of_dtoa 0480  
                         __size_of_nanf 0062                   __size_of_wait_lcd_set 0006  
                         __size_of_stoa 02BE                           __size_of_utoa 0340  
                         __size_of_xtoa 03BA                     dac_spi_control@init 0043  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0021  
                 __end_of_init_port_dma BC64                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 0088  
                             stoa@F1166 0100                      ??_DMA1_DMASCNT_ISR 0027  
          __end_of_ADCC_StartConversion C31A                                _spi_link 01CD  
                              _wdtdelay B486              __end_of_UART2_Transmit_ISR BDA8  
                              _spinners 9EF2                                _vfprintf A7EE  
              __end_of_convert_adc_data A740              __end_of_PWM8_LoadDutyValue B938  
  __end_of_TMR3_DefaultInterruptHandler C416   __size_of_TMR3_DefaultInterruptHandler 0002  
          _TMR3_DefaultInterruptHandler C414    __end_of_INT1_DefaultInterruptHandler C414  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler C412  
                    _send_port_data_dma B58C                           ??_Default_ISR 0021  
                           _uart1RxHead 0047                  __size_of_get_vterm_ptr 002E  
                           _uart2RxHead 0044                             _uart1RxTail 00AE  
                        _get_raw_result C200                             _uart2TxHead 00AC  
                           _uart2RxTail 00AB                               spinners@s 01E1  
                           _uart2TxTail 0046                            _wait_lcd_set C3F8  
                    _EXT_INT_Initialize BC00    __end_of_TMR6_DefaultInterruptHandler B62C  
 __size_of_TMR6_DefaultInterruptHandler 004E            _TMR6_DefaultInterruptHandler B5DE  
                     _send_lcd_data_dma B62C    __end_of_ADCC_DefaultInterruptHandler C41A  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler C418  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long B938          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help C34A                   __end_of_calc_ror_data 8EDE  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString AA92  
                 __end_of_mode_lamp_dim C286                 __end_of_adc_int_handler C41C  
                __size_of_INT0_CallBack 0024                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0024  
                    __end_of_update_lcd 9DE8                  _uart2TxBufferRemaining 0045  
                    __end_of_static_soc B486                      __end_of_start_bsoc C126  
                        _FVR_Initialize C3EA                  __end_of_get_raw_result C21E  
                      _send_lcd_cmd_dma C1A6                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 00A0        __end_of_INT1_SetInterruptHandler BF3A  
             __size_of_UART1_Initialize 0048                __size_of_dac_spi_control 0074  
             __end_of_send_lcd_data_dma B676                        ??_DMA1_DMAOR_ISR 0027  
             __end_of_send_lcd_cmd_long B978                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR C412          __end_of_PIN_MANAGER_Initialize AD92  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump 9988  
               _eaDogM_WriteStringAtPos A944                           _get_vterm_ptr BCF4  
                        _check_adc_scan C3D2               __size_of_UART2_Initialize 0060  
