

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Mar 17 15:53:54 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1,inline
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1,inline
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=4,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=4,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=4,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=4,class=CODE,delta=1
   111                           	psect	text90,global,reloc=4,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=4,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=4,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=4,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=4,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=4,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=4,class=CODE,delta=1
   125                           	psect	text104,global,reloc=4,class=CODE,delta=1
   126                           	psect	text105,global,reloc=4,class=CODE,delta=1
   127                           	psect	text106,global,reloc=4,class=CODE,delta=1
   128                           	psect	text107,global,reloc=4,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   133                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   136                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   137  0000                     
   138                           ; Version 2.05
   139                           ; Generated 20/12/2018 GMT
   140                           ; 
   141                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   142                           ; All rights reserved.
   143                           ; 
   144                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   145                           ; 
   146                           ; Redistribution and use in source and binary forms, with or without modification, are
   147                           ; permitted provided that the following conditions are met:
   148                           ; 
   149                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   150                           ;        conditions and the following disclaimer.
   151                           ; 
   152                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   153                           ;        of conditions and the following disclaimer in the documentation and/or other
   154                           ;        materials provided with the distribution.
   155                           ; 
   156                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   157                           ;        software without specific prior written permission.
   158                           ; 
   159                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   160                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   161                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   162                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   163                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   164                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   165                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   166                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   167                           ; 
   168                           ; 
   169                           ; Code-generator required, PIC18F57K42 Definitions
   170                           ; 
   171                           ; SFR Addresses
   172  0000                     
   173 ;;_mode	offset	0
   174 ;;_rxData	offset	0
   175 ;;_t_link	offset=-1 (param)
   176 ;;_k	offset	0
   177 ;;_checksum	offset	2
   178 ;;_i	offset	4
   179 ;;_byte_block	offset=-2 (param)
   180 ;;_length	offset=-3 (param)
   181 ;;_fake	offset=-4 (param)
   182 ;;_s_uart	offset=-5 (param)
   183 ;;_i	offset	0
   184 ;;_sum	offset	2
   185 ;;_byte_block	offset=-2 (param)
   186 ;;_byte_count	offset=-4 (param)
   187 ;;_bufData	offset=-1 (param)
   188 ;;_txData	offset=-1 (param)
   189 ;;_bufData	offset=-1 (param)
   190 ;;_stream	offset=-6 (param)
   191 ;;_function	offset=-7 (param)
   192 ;;_f	offset	0
   193 ;;_ap	offset	5
   194 ;;_s	offset=-2 (param)
   195 ;;_fmt	offset=-3 (param)
   196 ;;_rxData	offset	0
   197 ;;_r_link	offset=-1 (param)
   198 ;;_txData	offset=-1 (param)
   199 ;;_rxData	offset	0
   200 ;;_m_link	offset=-1 (param)
   201 ;;_byte_block	offset=-1 (param)
   202 ;;_clear	offset=-2 (param)
   203 ;;_numMilliseconds	offset=-2 (param)
   204 ;;_timer	offset=-1 (param)
   205 ;;_timer	offset=-1 (param)
   206 ;;_count	offset=-3 (param)
   207 ;;_readValue	offset	0
   208 ;;_readValue	offset	0
   209 ;;_cmd	offset=-1 (param)
   210 ;;_cmd	offset=-1 (param)
   211 ;;_data	offset=-1 (param)
   212 ;;__this	offset=-2 (param)
   213 ;;_r	offset=-1 (param)
   214 ;;_c	offset=-2 (param)
   215 ;;_strPtr	offset=-3 (param)
   216 ;;_strPtr	offset=-1 (param)
   217 ;;_cmd	offset=-1 (param)
   218 ;;_strPtr	offset=-1 (param)
   219 ;;_delay	offset=-4 (param)
   220 ;;__this	offset=-2 (param)
   221 ;;_clearBuffer	offset=-3 (param)
   222 ;;_s	offset	0
   223 ;;_k	offset	2
   224 ;;_dest	offset=-2 (param)
   225 ;;_c	offset=-4 (param)
   226 ;;_n	offset=-6 (param)
   227 ;;_ap	offset	0
   228 ;;_fmt	offset=-2 (param)
   229 ;;_cfmt	offset	0
   230 ;;_fp	offset=-2 (param)
   231 ;;_fmt	offset=-3 (param)
   232 ;;_ap	offset=-5 (param)
   233 ;;_ll	offset	0
   234 ;;_cp	offset	8
   235 ;;_c	offset	10
   236 ;;_fp	offset=-2 (param)
   237 ;;_fmt	offset=-4 (param)
   238 ;;_ap	offset=-6 (param)
   239 ;;_r	offset	0
   240 ;;_l	offset	1
   241 ;;__l	offset=-1 (param)
   242 ;;__r	offset=-2 (param)
   243 ;;_n	offset=-4 (param)
   244 ;;_nuls	offset	0
   245 ;;_l	offset	7
   246 ;;_p	offset	9
   247 ;;_cp	offset	11
   248 ;;_w	offset	13
   249 ;;_i	offset	15
   250 ;;_fp	offset=-2 (param)
   251 ;;_s	offset=-4 (param)
   252 ;;_dtoa$3806	offset	0
   253 ;;_n	offset	2
   254 ;;_i	offset	10
   255 ;;_s	offset	12
   256 ;;_w	offset	14
   257 ;;_p	offset	16
   258 ;;_fp	offset=-2 (param)
   259 ;;_d	offset=-10 (param)
   260 ;;_a	offset=-2 (param)
   261 ;;_sign	offset	0
   262 ;;_counter	offset	1
   263 ;;_dividend	offset=-8 (param)
   264 ;;_divisor	offset=-16 (param)
   265 ;;_quotient	offset	0
   266 ;;_sign	offset	8
   267 ;;_counter	offset	9
   268 ;;_dividend	offset=-8 (param)
   269 ;;_divisor	offset=-16 (param)
   270 ;;_w	offset	0
   271 ;;_fp	offset=-2 (param)
   272 ;;_c	offset=-3 (param)
   273 ;;_w	offset	0
   274 ;;_i	offset	2
   275 ;;_fp	offset=-2 (param)
   276 ;;_buf	offset=-4 (param)
   277 ;;_p	offset=-6 (param)
   278 ;;_a	offset	0
   279 ;;_s	offset=-2 (param)
   280 ;;_i	offset	0
   281 ;;_c	offset	2
   282 ;;_s	offset=-2 (param)
   283 ;;_fp	offset=-4 (param)
   284 ;;_c	offset=-2 (param)
   285 ;;_fp	offset=-4 (param)
   286 ;;_c	offset=-1 (param)
   287 ;;__this	offset=-2 (param)
   288 ;;_c	offset=-3 (param)
   289 ;;_InterruptHandler	offset=-3 (param)
   290 ;;_InterruptHandler	offset=-3 (param)
   291 ;;_InterruptHandler	offset=-3 (param)
   292 ;;_InterruptHandler	offset=-3 (param)
   293 ;;_InterruptHandler	offset=-3 (param)
   294 ;;_InterruptHandler	offset=-3 (param)
   295 ;;_state	offset	0
   296 ;;_InterruptHandler	offset=-3 (param)
   297 ;;_InterruptHandler	offset=-3 (param)
   298 ;;_InterruptHandler	offset=-3 (param)
   299 ;;_InterruptHandler	offset=-3 (param)
   300 ;;_i	offset	0
   301 ;;_timerVal	offset=-2 (param)
   302                           
   303                           	psect	idataCOMRAM
   304  00619A                     __pidataCOMRAM:
   305                           	opt callstack 0
   306                           
   307                           ;initializer for r_protocol@retry
   308  00619A  03                 	db	3
   309                           
   310                           	psect	idataBANK0
   311  00558E                     __pidataBANK0:
   312                           	opt callstack 0
   313                           
   314                           ;initializer for stoa@F1142
   315  00558E  28                 	db	40
   316  00558F  6E                 	db	110
   317  005590  75                 	db	117
   318  005591  6C                 	db	108
   319  005592  6C                 	db	108
   320  005593  29                 	db	41
   321  005594  00                 	db	0
   322                           
   323                           ;initializer for _V
   324  005595  00                 	db	0
   325  005596  00                 	db	0
   326  005597  00                 	db	0
   327  005598  00                 	db	0
   328  005599  00                 	db	0
   329  00559A  00                 	db	0
   330  00559B  00                 	db	0
   331  00559C  00                 	db	0
   332  00559D  00                 	db	0
   333  00559E  00                 	db	0
   334  00559F  00                 	db	0
   335  0055A0  00                 	db	0
   336  0055A1  00                 	db	0
   337  0055A2  00                 	db	0
   338  0055A3  00                 	db	0
   339  0055A4  00                 	db	0
   340  0055A5  00                 	db	0
   341  0055A6  00                 	db	0
   342  0055A7  00                 	db	0
   343  0055A8  00                 	db	0
   344  0055A9  00                 	db	0
   345  0055AA  00                 	db	0
   346  0055AB  00                 	db	0
   347  0055AC  00                 	db	0
   348  0055AD  00                 	db	0
   349  0055AE  00                 	db	0
   350  0055AF  00                 	db	0
   351  0055B0  00                 	db	0
   352  0055B1  00                 	db	0
   353  0055B2  00                 	db	0
   354  0055B3  00                 	db	0
   355  0055B4  00                 	db	0
   356  0055B5  00                 	db	0
   357  0055B6  00                 	db	0
   358  0055B7  00                 	db	0
   359  0055B8  00                 	db	0
   360  0055B9  00                 	db	0
   361  0055BA  00                 	db	0
   362  0055BB  00                 	db	0
   363  0055BC  00                 	db	0
   364  0055BD  00                 	db	0
   365  0055BE  00                 	db	0
   366  0055BF  00                 	db	0
   367  0055C0  00                 	db	0
   368  0055C1  00                 	db	0
   369  0055C2  00                 	db	0
   370  0055C3  00                 	db	0
   371  0055C4  00                 	db	0
   372  0055C5  00                 	db	0
   373  0055C6  00                 	db	0
   374  0055C7  00                 	db	0
   375  0055C8  00                 	db	0
   376  0055C9  00                 	db	0
   377  0055CA  00                 	db	0
   378  0055CB  00                 	db	0
   379  0055CC  00                 	db	0
   380  0055CD  00                 	db	0
   381  0055CE  00                 	db	0
   382  0055CF  00                 	db	0
   383  0055D0  00                 	db	0
   384  0055D1  00                 	db	0
   385  0055D2  00                 	db	0
   386  0055D3  00                 	db	0
   387  0055D4  00                 	db	0
   388  0055D5  00                 	db	0
   389  0055D6  00                 	db	0
   390  0055D7  00                 	db	0
   391  0055D8  00                 	db	0
   392  0055D9  00                 	db	0
   393  0055DA  0000               	dw	0
   394  0055DC  0000               	dw	0
   395  0055DE  0000               	dw	0
   396  0055E0  0000               	dw	0
   397  0055E2  00                 	db	0
   398  0055E3  00                 	db	0
   399  0055E4  00                 	db	0
   400  0055E5  00                 	db	0
   401  0055E6  00                 	db	0
   402  0055E7  0000               	dw	0
   403  0055E9  0000               	dw	0
   404  0055EB  00                 	db	0
   405  0055EC  00                 	db	0
   406  0055ED  01                 	db	1
   407                           
   408                           	psect	idataBANK1
   409  004E76                     __pidataBANK1:
   410                           	opt callstack 0
   411                           
   412                           ;initializer for _H10
   413  004E76  0000               	dw	0
   414  004E78  0001               	dw	1
   415  004E7A  0000               	dw	0
   416  004E7C  01                 	db	1
   417  004E7D  80                 	db	128
   418  004E7E  01                 	db	1
   419  004E7F  81                 	db	129
   420  004E80  00                 	db	0
   421  004E81  00                 	db	0
   422  004E82  0A                 	db	10
   423  004E83  0000               	dw	0
   424  004E85  00                 	db	0
   425  004E86  00                 	db	0
   426  004E87  00                 	db	0
   427  004E88  00                 	db	0
   428  004E89  00                 	db	0
   429  004E8A  00                 	db	0
   430  004E8B  00                 	db	0
   431  004E8C  00                 	db	0
   432  004E8D  00                 	db	0
   433  004E8E  00                 	db	0
   434  004E8F  0A                 	db	10
   435  004E90  0000               	dw	0
   436  004E92  0001               	dw	1
   437  004E94  0000               	dw	0
   438  004E96  01                 	db	1
   439  004E97  80                 	db	128
   440  004E98  00                 	db	0
   441  004E99  01                 	db	1
   442  004E9A  00                 	db	0
   443  004E9B  00                 	db	0
   444  004E9C  0A                 	db	10
   445  004E9D  0000               	dw	0
   446  004E9F  0001               	dw	1
   447  004EA1  0000               	dw	0
   448  004EA3  01                 	db	1
   449  004EA4  80                 	db	128
   450  004EA5  01                 	db	1
   451  004EA6  81                 	db	129
   452  004EA7  00                 	db	0
   453  004EA8  80                 	db	128
   454  004EA9  0A                 	db	10
   455  004EAA  0000               	dw	0
   456  004EAC  0001               	dw	1
   457  004EAE  0000               	dw	0
   458  004EB0  01                 	db	1
   459  004EB1  80                 	db	128
   460  004EB2  11                 	db	17
   461  004EB3  82                 	db	130
   462  004EB4  00                 	db	0
   463  004EB5  00                 	db	0
   464  004EB6  0A                 	db	10
   465                           
   466                           ;initializer for _H12
   467  004EB7  0000               	dw	0
   468  004EB9  00                 	db	0
   469  004EBA  01                 	db	1
   470  004EBB  0001               	dw	1
   471  004EBD  0000               	dw	0
   472  004EBF  01                 	db	1
   473  004EC0  80                 	db	128
   474  004EC1  02                 	db	2
   475  004EC2  01                 	db	1
   476  004EC3  00                 	db	0
   477  004EC4  00                 	db	0
   478  004EC5  0C                 	db	12
   479  004EC6  0000               	dw	0
   480  004EC8  00                 	db	0
   481  004EC9  01                 	db	1
   482  004ECA  0001               	dw	1
   483  004ECC  0000               	dw	0
   484  004ECE  01                 	db	1
   485  004ECF  80                 	db	128
   486  004ED0  0D                 	db	13
   487  004ED1  81                 	db	129
   488  004ED2  00                 	db	0
   489  004ED3  00                 	db	0
   490  004ED4  0C                 	db	12
   491                           
   492                           ;initializer for _H24
   493  004ED5  0000               	dw	0
   494  004ED7  41                 	db	65
   495  004ED8  20                 	db	32
   496  004ED9  30                 	db	48
   497  004EDA  31                 	db	49
   498  004EDB  30                 	db	48
   499  004EDC  39                 	db	57
   500  004EDD  31                 	db	49
   501  004EDE  31                 	db	49
   502  004EDF  30                 	db	48
   503  004EE0  38                 	db	56
   504  004EE1  34                 	db	52
   505  004EE2  36                 	db	54
   506  004EE3  30                 	db	48
   507  004EE4  30                 	db	48
   508  004EE5  0001               	dw	1
   509  004EE7  0000               	dw	0
   510  004EE9  01                 	db	1
   511  004EEA  80                 	db	128
   512  004EEB  12                 	db	18
   513  004EEC  02                 	db	2
   514  004EED  00                 	db	0
   515  004EEE  00                 	db	0
   516  004EEF  18                 	db	24
   517                           
   518                           ;initializer for _H17
   519  004EF0  0000               	dw	0
   520  004EF2  00                 	db	0
   521  004EF3  01                 	db	1
   522  004EF4  00                 	db	0
   523  004EF5  01                 	db	1
   524  004EF6  21                 	db	33
   525  004EF7  02                 	db	2
   526  004EF8  01                 	db	1
   527  004EF9  0001               	dw	1
   528  004EFB  0000               	dw	0
   529  004EFD  01                 	db	1
   530  004EFE  80                 	db	128
   531  004EFF  0E                 	db	14
   532  004F00  01                 	db	1
   533  004F01  00                 	db	0
   534  004F02  00                 	db	0
   535  004F03  11                 	db	17
   536                           
   537                           ;initializer for _H14
   538  004F04  0000               	dw	0
   539  004F06  00                 	db	0
   540  004F07  41                 	db	65
   541  004F08  11                 	db	17
   542  004F09  01                 	db	1
   543  004F0A  0001               	dw	1
   544  004F0C  0000               	dw	0
   545  004F0E  01                 	db	1
   546  004F0F  80                 	db	128
   547  004F10  04                 	db	4
   548  004F11  01                 	db	1
   549  004F12  00                 	db	0
   550  004F13  00                 	db	0
   551  004F14  0E                 	db	14
   552                           
   553                           ;initializer for _H13
   554  004F15  0000               	dw	0
   555  004F17  00                 	db	0
   556  004F18  01                 	db	1
   557  004F19  21                 	db	33
   558  004F1A  0001               	dw	1
   559  004F1C  0000               	dw	0
   560  004F1E  01                 	db	1
   561  004F1F  80                 	db	128
   562  004F20  0C                 	db	12
   563  004F21  06                 	db	6
   564  004F22  00                 	db	0
   565  004F23  00                 	db	0
   566  004F24  0D                 	db	13
   567                           
   568                           	psect	idataBANK3
   569  005A52                     __pidataBANK3:
   570                           	opt callstack 0
   571                           
   572                           ;initializer for _H53
   573  005A52  0000               	dw	0
   574  005A54  00                 	db	0
   575  005A55  00                 	db	0
   576  005A56  00                 	db	0
   577  005A57  00                 	db	0
   578  005A58  00                 	db	0
   579  005A59  00                 	db	0
   580  005A5A  00                 	db	0
   581  005A5B  00                 	db	0
   582  005A5C  00                 	db	0
   583  005A5D  00                 	db	0
   584  005A5E  00                 	db	0
   585  005A5F  00                 	db	0
   586  005A60  00                 	db	0
   587  005A61  00                 	db	0
   588  005A62  00                 	db	0
   589  005A63  00                 	db	0
   590  005A64  00                 	db	0
   591  005A65  00                 	db	0
   592  005A66  00                 	db	0
   593  005A67  00                 	db	0
   594  005A68  00                 	db	0
   595  005A69  00                 	db	0
   596  005A6A  00                 	db	0
   597  005A6B  00                 	db	0
   598  005A6C  00                 	db	0
   599  005A6D  00                 	db	0
   600  005A6E  00                 	db	0
   601  005A6F  00                 	db	0
   602  005A70  00                 	db	0
   603  005A71  00                 	db	0
   604  005A72  00                 	db	0
   605  005A73  00                 	db	0
   606  005A74  00                 	db	0
   607  005A75  00                 	db	0
   608  005A76  00                 	db	0
   609  005A77  00                 	db	0
   610  005A78  00                 	db	0
   611  005A79  00                 	db	0
   612  005A7A  00                 	db	0
   613  005A7B  46                 	db	70
   614  005A7C  01                 	db	1
   615  005A7D  41                 	db	65
   616  005A7E  00                 	db	0
   617  005A7F  0001               	dw	1
   618  005A81  0000               	dw	0
   619  005A83  01                 	db	1
   620  005A84  80                 	db	128
   621  005A85  03                 	db	3
   622  005A86  8A                 	db	138
   623  005A87  00                 	db	0
   624  005A88  00                 	db	0
   625  005A89  35                 	db	53
   626  0000                     _IVTADL	set	14493
   627  0000                     _IVTADH	set	14494
   628  0000                     _IVTADU	set	14495
   629  0000                     _PIE8bits	set	14744
   630  0000                     _PIR8bits	set	14760
   631  0000                     _SCANPR	set	14839
   632  0000                     _DMA2PR	set	14836
   633  0000                     _DMA1PR	set	14835
   634  0000                     _MAINPR	set	14834
   635  0000                     _ISRPR	set	14833
   636  0000                     _PIE2bits	set	14738
   637  0000                     _PIR2bits	set	14754
   638  0000                     _PIE9bits	set	14745
   639  0000                     _PIR9bits	set	14761
   640  0000                     _PIE6bits	set	14742
   641  0000                     _PIE3bits	set	14739
   642  0000                     _PMD7	set	14791
   643  0000                     _PMD6	set	14790
   644  0000                     _PMD5	set	14789
   645  0000                     _PMD4	set	14788
   646  0000                     _PMD3	set	14787
   647  0000                     _PMD2	set	14786
   648  0000                     _PMD1	set	14785
   649  0000                     _PMD0	set	14784
   650  0000                     _OSCTUNE	set	14814
   651  0000                     _OSCFRQ	set	14815
   652  0000                     _OSCEN	set	14813
   653  0000                     _OSCCON3	set	14811
   654  0000                     _OSCCON1	set	14809
   655  0000                     _IPR8bits	set	14728
   656  0000                     _IPR9bits	set	14729
   657  0000                     _IPR7bits	set	14727
   658  0000                     _IPR5bits	set	14725
   659  0000                     _IPR1bits	set	14721
   660  0000                     _IPR3bits	set	14723
   661  0000                     _IPR6bits	set	14726
   662  0000                     _IPR2bits	set	14722
   663  0000                     _PIE7bits	set	14743
   664  0000                     _PIE5bits	set	14741
   665  0000                     _PIE1bits	set	14737
   666  0000                     _PIR7bits	set	14759
   667  0000                     _PIR5bits	set	14757
   668  0000                     _PIR1bits	set	14753
   669  0000                     _PLLR	set	118496
   670  0000                     _SPI1SDIPPS	set	15071
   671  0000                     _RC6PPS	set	14870
   672  0000                     _RC5PPS	set	14869
   673  0000                     _RA6PPS	set	14854
   674  0000                     _RA5PPS	set	14853
   675  0000                     _RA4PPS	set	14852
   676  0000                     _SPI1SCKPPS	set	15070
   677  0000                     _U1RXPPS	set	15077
   678  0000                     _INT1PPS	set	15041
   679  0000                     _INT2PPS	set	15042
   680  0000                     _INT0PPS	set	15040
   681  0000                     _RC3PPS	set	14867
   682  0000                     _RB6PPS	set	14862
   683  0000                     _U2RXPPS	set	15080
   684  0000                     _SLRCONF	set	14995
   685  0000                     _SLRCONE	set	14979
   686  0000                     _SLRCOND	set	14963
   687  0000                     _SLRCONC	set	14947
   688  0000                     _SLRCONB	set	14931
   689  0000                     _SLRCONA	set	14915
   690  0000                     _ODCOND	set	14962
   691  0000                     _ODCONC	set	14946
   692  0000                     _ODCONB	set	14930
   693  0000                     _ODCONA	set	14914
   694  0000                     _ODCONF	set	14994
   695  0000                     _ODCONE	set	14978
   696  0000                     _WPUC	set	14945
   697  0000                     _WPUA	set	14913
   698  0000                     _WPUB	set	14929
   699  0000                     _WPUE	set	14977
   700  0000                     _WPUF	set	14993
   701  0000                     _WPUD	set	14961
   702  0000                     _ANSELA	set	14912
   703  0000                     _ANSELF	set	14992
   704  0000                     _ANSELE	set	14976
   705  0000                     _ANSELB	set	14928
   706  0000                     _ANSELC	set	14944
   707  0000                     _ANSELD	set	14960
   708  0000                     _DMA1SSA	set	15353
   709  0000                     _DMA1DSZ	set	15342
   710  0000                     _DMA1SSZ	set	15351
   711  0000                     _DMA1DSA	set	15344
   712  0000                     _DMA1CON0bits	set	15356
   713  0000                     _DMA1CON1bits	set	15357
   714  0000                     _DMA1CON0	set	15356
   715  0000                     _DMA1AIRQ	set	15358
   716  0000                     _DMA1SIRQ	set	15359
   717  0000                     _DMA1CON1	set	15357
   718  0000                     _CLC1CON	set	15476
   719  0000                     _CLC1GLS3	set	15485
   720  0000                     _CLC1GLS2	set	15484
   721  0000                     _CLC1GLS1	set	15483
   722  0000                     _CLC1GLS0	set	15482
   723  0000                     _CLC1SEL3	set	15481
   724  0000                     _CLC1SEL2	set	15480
   725  0000                     _CLC1SEL1	set	15479
   726  0000                     _CLC1SEL0	set	15478
   727  0000                     _CLC1POL	set	15477
   728  0000                     _CLKRCON	set	15589
   729  0000                     _CLKRCLK	set	15590
   730  0000                     _MD1CARL	set	15613
   731  0000                     _MD1CARH	set	15614
   732  0000                     _MD1SRC	set	15612
   733  0000                     _MD1CON1bits	set	15611
   734  0000                     _MD1CON0bits	set	15610
   735  0000                     _SPI1INTFbits	set	15642
   736  0000                     _SPI1RXB	set	15632
   737  0000                     _SPI1TXB	set	15633
   738  0000                     _SPI1TCNTL	set	15634
   739  0000                     _SPI1CON0	set	15636
   740  0000                     _SPI1CLK	set	15644
   741  0000                     _SPI1BAUD	set	15641
   742  0000                     _SPI1CON2	set	15638
   743  0000                     _SPI1CON1	set	15637
   744  0000                     _U2RXB	set	15824
   745  0000                     _U2TXB	set	15826
   746  0000                     _U2ERRIE	set	15842
   747  0000                     _U2ERRIR	set	15841
   748  0000                     _U2UIR	set	15840
   749  0000                     _U2FIFO	set	15839
   750  0000                     _U2BRGH	set	15838
   751  0000                     _U2BRGL	set	15837
   752  0000                     _U2CON2	set	15836
   753  0000                     _U2CON1	set	15835
   754  0000                     _U2CON0	set	15834
   755  0000                     _U2P3L	set	15832
   756  0000                     _U2P2L	set	15830
   757  0000                     _U2P1L	set	15828
   758  0000                     _U1RXB	set	15848
   759  0000                     _U1TXB	set	15850
   760  0000                     _U1ERRIE	set	15866
   761  0000                     _U1ERRIR	set	15865
   762  0000                     _U1UIR	set	15864
   763  0000                     _U1FIFO	set	15863
   764  0000                     _U1BRGH	set	15862
   765  0000                     _U1BRGL	set	15861
   766  0000                     _U1CON2	set	15860
   767  0000                     _U1CON1	set	15859
   768  0000                     _U1CON0	set	15858
   769  0000                     _U1P3H	set	15857
   770  0000                     _U1P3L	set	15856
   771  0000                     _U1P2H	set	15855
   772  0000                     _U1P2L	set	15854
   773  0000                     _U1P1H	set	15853
   774  0000                     _U1P1L	set	15852
   775  0000                     _ADCON0	set	16120
   776  0000                     _ADCLK	set	16127
   777  0000                     _ADACT	set	16126
   778  0000                     _ADREF	set	16125
   779  0000                     _ADSTAT	set	16124
   780  0000                     _ADCON3	set	16123
   781  0000                     _ADCON2	set	16122
   782  0000                     _ADCON1	set	16121
   783  0000                     _ADPREH	set	16119
   784  0000                     _ADPREL	set	16118
   785  0000                     _ADCAP	set	16117
   786  0000                     _ADACQH	set	16116
   787  0000                     _ADACQL	set	16115
   788  0000                     _ADPCH	set	16113
   789  0000                     _ADRPT	set	16108
   790  0000                     _ADACCU	set	16106
   791  0000                     _ADSTPTH	set	16101
   792  0000                     _ADSTPTL	set	16100
   793  0000                     _ADUTHH	set	16097
   794  0000                     _ADUTHL	set	16096
   795  0000                     _ADLTHH	set	16095
   796  0000                     _ADLTHL	set	16094
   797  0000                     _NCO1CONbits	set	16190
   798  0000                     _NCO1INCL	set	16187
   799  0000                     _NCO1INCH	set	16188
   800  0000                     _NCO1INCU	set	16189
   801  0000                     _NCO1ACCL	set	16184
   802  0000                     _NCO1ACCH	set	16185
   803  0000                     _NCO1ACCU	set	16186
   804  0000                     _NCO1CLK	set	16191
   805  0000                     _NCO1CON	set	16190
   806  0000                     _LATCbits	set	16316
   807  0000                     _LATDbits	set	16317
   808  0000                     _PORTBbits	set	16331
   809  0000                     _LATEbits	set	16318
   810  0000                     _T5CONbits	set	16282
   811  0000                     _T5CON	set	16282
   812  0000                     _TMR5L	set	16280
   813  0000                     _TMR5H	set	16281
   814  0000                     _T5CLK	set	16285
   815  0000                     _T5GATE	set	16284
   816  0000                     _T5GCON	set	16283
   817  0000                     _T6CON	set	16276
   818  0000                     _T6TMR	set	16274
   819  0000                     _T6PR	set	16275
   820  0000                     _T6RST	set	16279
   821  0000                     _T6HLT	set	16277
   822  0000                     _T6CLKCON	set	16278
   823  0000                     _TRISD	set	16325
   824  0000                     _TRISC	set	16324
   825  0000                     _TRISB	set	16323
   826  0000                     _TRISA	set	16322
   827  0000                     _TRISF	set	16327
   828  0000                     _TRISE	set	16326
   829  0000                     _LATC	set	16316
   830  0000                     _LATB	set	16315
   831  0000                     _LATF	set	16319
   832  0000                     _LATA	set	16314
   833  0000                     _LATD	set	16317
   834  0000                     _LATE	set	16318
   835  0000                     _IVTLOCKbits	set	16340
   836  0000                     _IVTLOCK	set	16340
   837  0000                     _INTCON0bits	set	16338
   838  0000                     _GIE	set	130711
   839                           
   840                           	psect	smallconst
   841  002000                     __psmallconst:
   842                           	opt callstack 0
   843  002000  00                 	db	0
   844  002001                     STR_15:
   845  002001  20                 	db	32
   846  002002  52                 	db	82	;'R'
   847  002003  25                 	db	37
   848  002004  64                 	db	100	;'d'
   849  002005  20                 	db	32
   850  002006  54                 	db	84	;'T'
   851  002007  25                 	db	37
   852  002008  64                 	db	100	;'d'
   853  002009  20                 	db	32
   854  00200A  46                 	db	70	;'F'
   855  00200B  52                 	db	82	;'R'
   856  00200C  25                 	db	37
   857  00200D  64                 	db	100	;'d'
   858  00200E  20                 	db	32
   859  00200F  46                 	db	70	;'F'
   860  002010  53                 	db	83	;'S'
   861  002011  25                 	db	37
   862  002012  64                 	db	100	;'d'
   863  002013  20                 	db	32
   864  002014  23                 	db	35
   865  002015  00                 	db	0
   866  002016                     STR_9:
   867  002016  45                 	db	69	;'E'
   868  002017  20                 	db	32
   869  002018  52                 	db	82	;'R'
   870  002019  25                 	db	37
   871  00201A  64                 	db	100	;'d'
   872  00201B  20                 	db	32
   873  00201C  54                 	db	84	;'T'
   874  00201D  25                 	db	37
   875  00201E  64                 	db	100	;'d'
   876  00201F  20                 	db	32
   877  002020  45                 	db	69	;'E'
   878  002021  25                 	db	37
   879  002022  64                 	db	100	;'d'
   880  002023  20                 	db	32
   881  002024  41                 	db	65	;'A'
   882  002025  25                 	db	37
   883  002026  64                 	db	100	;'d'
   884  002027  20                 	db	32
   885  002028  23                 	db	35
   886  002029  00                 	db	0
   887  00202A                     STR_11:
   888  00202A  20                 	db	32
   889  00202B  4C                 	db	76	;'L'
   890  00202C  4F                 	db	79	;'O'
   891  00202D  47                 	db	71	;'G'
   892  00202E  20                 	db	32
   893  00202F  4D                 	db	77	;'M'
   894  002030  4F                 	db	79	;'O'
   895  002031  44                 	db	68	;'D'
   896  002032  45                 	db	69	;'E'
   897  002033  20                 	db	32
   898  002034  25                 	db	37
   899  002035  64                 	db	100	;'d'
   900  002036  20                 	db	32
   901  002037  20                 	db	32
   902  002038  20                 	db	32
   903  002039  20                 	db	32
   904  00203A  20                 	db	32
   905  00203B  23                 	db	35
   906  00203C  00                 	db	0
   907  00203D                     STR_5:
   908  00203D  20                 	db	32
   909  00203E  48                 	db	72	;'H'
   910  00203F  4F                 	db	79	;'O'
   911  002040  53                 	db	83	;'S'
   912  002041  54                 	db	84	;'T'
   913  002042  20                 	db	32
   914  002043  4D                 	db	77	;'M'
   915  002044  4F                 	db	79	;'O'
   916  002045  44                 	db	68	;'D'
   917  002046  45                 	db	69	;'E'
   918  002047  20                 	db	32
   919  002048  25                 	db	37
   920  002049  6C                 	db	108	;'l'
   921  00204A  64                 	db	100	;'d'
   922  00204B  20                 	db	32
   923  00204C  20                 	db	32
   924  00204D  20                 	db	32
   925  00204E  23                 	db	35
   926  00204F  00                 	db	0
   927  002050                     STR_12:
   928  002050  20                 	db	32
   929  002051  53                 	db	83	;'S'
   930  002052  25                 	db	37
   931  002053  64                 	db	100	;'d'
   932  002054  46                 	db	70	;'F'
   933  002055  25                 	db	37
   934  002056  64                 	db	100	;'d'
   935  002057  20                 	db	32
   936  002058  23                 	db	35
   937  002059  25                 	db	37
   938  00205A  6C                 	db	108	;'l'
   939  00205B  64                 	db	100	;'d'
   940  00205C  20                 	db	32
   941  00205D  20                 	db	32
   942  00205E  20                 	db	32
   943  00205F  20                 	db	32
   944  002060  00                 	db	0
   945  002061                     STR_1:
   946  002061  20                 	db	32
   947  002062  52                 	db	82	;'R'
   948  002063  56                 	db	86	;'V'
   949  002064  49                 	db	73	;'I'
   950  002065  20                 	db	32
   951  002066  48                 	db	72	;'H'
   952  002067  4F                 	db	79	;'O'
   953  002068  53                 	db	83	;'S'
   954  002069  54                 	db	84	;'T'
   955  00206A  20                 	db	32
   956  00206B  54                 	db	84	;'T'
   957  00206C  45                 	db	69	;'E'
   958  00206D  53                 	db	83	;'S'
   959  00206E  54                 	db	84	;'T'
   960  00206F  45                 	db	69	;'E'
   961  002070  52                 	db	82	;'R'
   962  002071  00                 	db	0
   963  002072                     STR_4:
   964  002072  20                 	db	32
   965  002073  46                 	db	70	;'F'
   966  002074  47                 	db	71	;'G'
   967  002075  42                 	db	66	;'B'
   968  002076  40                 	db	64	;'@'
   969  002077  4D                 	db	77	;'M'
   970  002078  43                 	db	67	;'C'
   971  002079  48                 	db	72	;'H'
   972  00207A  50                 	db	80	;'P'
   973  00207B  20                 	db	32
   974  00207C  46                 	db	70	;'F'
   975  00207D  41                 	db	65	;'A'
   976  00207E  42                 	db	66	;'B'
   977  00207F  34                 	db	52	;'4'
   978  002080  00                 	db	0
   979  002081                     STR_6:
   980  002081  20                 	db	32
   981  002082  53                 	db	83	;'S'
   982  002083  25                 	db	37
   983  002084  64                 	db	100	;'d'
   984  002085  46                 	db	70	;'F'
   985  002086  25                 	db	37
   986  002087  64                 	db	100	;'d'
   987  002088  20                 	db	32
   988  002089  23                 	db	35
   989  00208A  20                 	db	32
   990  00208B  20                 	db	32
   991  00208C  20                 	db	32
   992  00208D  20                 	db	32
   993  00208E  00                 	db	0
   994  00208F                     STR_2:
   995  00208F  20                 	db	32
   996  002090  56                 	db	86	;'V'
   997  002091  65                 	db	101	;'e'
   998  002092  72                 	db	114	;'r'
   999  002093  73                 	db	115	;'s'
  1000  002094  69                 	db	105	;'i'
  1001  002095  6F                 	db	111	;'o'
  1002  002096  6E                 	db	110	;'n'
  1003  002097  20                 	db	32
  1004  002098  25                 	db	37
  1005  002099  73                 	db	115	;'s'
  1006  00209A  00                 	db	0
  1007  00209B                     STR_8:
  1008  00209B  20                 	db	32
  1009  00209C  4F                 	db	79	;'O'
  1010  00209D  4B                 	db	75	;'K'
  1011  00209E  20                 	db	32
  1012  00209F  23                 	db	35
  1013  0020A0  00                 	db	0
  1014  0020A1                     STR_7:
  1015  0020A1  20                 	db	32
  1016  0020A2  4F                 	db	79	;'O'
  1017  0020A3  4B                 	db	75	;'K'
  1018  0020A4  51                 	db	81	;'Q'
  1019  0020A5  23                 	db	35
  1020  0020A6  00                 	db	0
  1021  0020A7                     STR_3:
  1022  0020A7  30                 	db	48	;'0'
  1023  0020A8  2E                 	db	46
  1024  0020A9  37                 	db	55	;'7'
  1025  0020AA  33                 	db	51	;'3'
  1026  0020AB  41                 	db	65	;'A'
  1027  0020AC  00                 	db	0
  1028  0020AD                     STR_19:
  1029  0020AD  6C                 	db	108	;'l'
  1030  0020AE  64                 	db	100	;'d'
  1031  0020AF  00                 	db	0
  1032  0020B0                     STR_23:
  1033  0020B0  6C                 	db	108	;'l'
  1034  0020B1  69                 	db	105	;'i'
  1035  0020B2  00                 	db	0
  1036  0020B3                     STR_17:
  1037  0020B3  25                 	db	37
  1038  0020B4  63                 	db	99	;'c'
  1039  0020B5  00                 	db	0
  1040  0000                     
  1041                           ; #config settings
  1042  0020B6  00                 	db	0	; dummy byte at the end
  1043  0000                     
  1044                           	psect	cinit
  1045  004CDE                     __pcinit:
  1046                           	opt callstack 0
  1047  004CDE                     start_initialization:
  1048                           	opt callstack 0
  1049  004CDE                     __initialization:
  1050                           	opt callstack 0
  1051                           
  1052                           ; Initialize objects allocated to BANK3 (56 bytes)
  1053                           ; load TBLPTR registers with __pidataBANK3
  1054  004CDE  0E52               	movlw	low __pidataBANK3
  1055  004CE0  6EF6               	movwf	tblptrl,c
  1056  004CE2  0E5A               	movlw	high __pidataBANK3
  1057  004CE4  6EF7               	movwf	tblptrh,c
  1058  004CE6  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1059  004CE8  6EF8               	movwf	tblptru,c
  1060  004CEA  EE00  F386         	lfsr	0,__pdataBANK3
  1061  004CEE  EE20 F038          	lfsr	2,56
  1062  004CF2                     copy_data0:
  1063  004CF2  0009               	tblrd		*+
  1064  004CF4  006F FFD7 FFEE     	movff	tablat,postinc0
  1065  004CFA  50DD               	movf	postdec2,w,c
  1066  004CFC  50D9               	movf	fsr2l,w,c
  1067  004CFE  E1F9               	bnz	copy_data0
  1068                           
  1069                           ; Initialize objects allocated to BANK1 (175 bytes)
  1070                           ; load TBLPTR registers with __pidataBANK1
  1071  004D00  0E76               	movlw	low __pidataBANK1
  1072  004D02  6EF6               	movwf	tblptrl,c
  1073  004D04  0E4E               	movlw	high __pidataBANK1
  1074  004D06  6EF7               	movwf	tblptrh,c
  1075  004D08  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1076  004D0A  6EF8               	movwf	tblptru,c
  1077  004D0C  EE00  F100         	lfsr	0,__pdataBANK1
  1078  004D10  EE20 F0AF          	lfsr	2,175
  1079  004D14                     copy_data1:
  1080  004D14  0009               	tblrd		*+
  1081  004D16  006F FFD7 FFEE     	movff	tablat,postinc0
  1082  004D1C  50DD               	movf	postdec2,w,c
  1083  004D1E  50D9               	movf	fsr2l,w,c
  1084  004D20  E1F9               	bnz	copy_data1
  1085                           
  1086                           ; Initialize objects allocated to BANK0 (96 bytes)
  1087                           ; load TBLPTR registers with __pidataBANK0
  1088  004D22  0E8E               	movlw	low __pidataBANK0
  1089  004D24  6EF6               	movwf	tblptrl,c
  1090  004D26  0E55               	movlw	high __pidataBANK0
  1091  004D28  6EF7               	movwf	tblptrh,c
  1092  004D2A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1093  004D2C  6EF8               	movwf	tblptru,c
  1094  004D2E  EE00  F060         	lfsr	0,__pdataBANK0
  1095  004D32  EE20 F060          	lfsr	2,96
  1096  004D36                     copy_data2:
  1097  004D36  0009               	tblrd		*+
  1098  004D38  006F FFD7 FFEE     	movff	tablat,postinc0
  1099  004D3E  50DD               	movf	postdec2,w,c
  1100  004D40  50D9               	movf	fsr2l,w,c
  1101  004D42  E1F9               	bnz	copy_data2
  1102                           
  1103                           ; Initialize objects allocated to COMRAM (1 bytes)
  1104                           ; load TBLPTR registers with __pidataCOMRAM
  1105  004D44  0E9A               	movlw	low __pidataCOMRAM
  1106  004D46  6EF6               	movwf	tblptrl,c
  1107  004D48  0E61               	movlw	high __pidataCOMRAM
  1108  004D4A  6EF7               	movwf	tblptrh,c
  1109  004D4C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1110  004D4E  6EF8               	movwf	tblptru,c
  1111  004D50  0009               	tblrd		*+	;fetch initializer
  1112  004D52  006F FFD4  F05D    	movff	tablat,__pdataCOMRAM
  1113                           
  1114                           ; Clear objects allocated to BANK3 (134 bytes)
  1115  004D58  EE00  F300         	lfsr	0,__pbssBANK3
  1116  004D5C  0E86               	movlw	134
  1117  004D5E                     clear_0:
  1118  004D5E  6AEE               	clrf	postinc0,c
  1119  004D60  06E8               	decf	wreg,f,c
  1120  004D62  E1FD               	bnz	clear_0
  1121                           
  1122                           ; Clear objects allocated to BANK2 (256 bytes)
  1123  004D64  EE00  F200         	lfsr	0,__pbssBANK2
  1124  004D68  EE20 F100          	lfsr	2,256
  1125  004D6C                     clear_1:
  1126  004D6C  6AEE               	clrf	postinc0,c
  1127  004D6E  50DD               	movf	postdec2,w,c
  1128  004D70  50D9               	movf	fsr2l,w,c
  1129  004D72  E1FC               	bnz	clear_1
  1130  004D74  50DA               	movf	fsr2h,w,c
  1131  004D76  E1FA               	bnz	clear_1
  1132                           
  1133                           ; Clear objects allocated to BANK1 (32 bytes)
  1134  004D78  EE00  F1AF         	lfsr	0,__pbssBANK1
  1135  004D7C  0E20               	movlw	32
  1136  004D7E                     clear_2:
  1137  004D7E  6AEE               	clrf	postinc0,c
  1138  004D80  06E8               	decf	wreg,f,c
  1139  004D82  E1FD               	bnz	clear_2
  1140                           
  1141                           ; Clear objects allocated to BANK0 (58 bytes)
  1142  004D84  EE00  F0C0         	lfsr	0,__pbssBANK0
  1143  004D88  0E3A               	movlw	58
  1144  004D8A                     clear_3:
  1145  004D8A  6AEE               	clrf	postinc0,c
  1146  004D8C  06E8               	decf	wreg,f,c
  1147  004D8E  E1FD               	bnz	clear_3
  1148                           
  1149                           ; Clear objects allocated to COMRAM (58 bytes)
  1150  004D90  EE00  F001         	lfsr	0,__pbssCOMRAM
  1151  004D94  0E3A               	movlw	58
  1152  004D96                     clear_4:
  1153  004D96  6AEE               	clrf	postinc0,c
  1154  004D98  06E8               	decf	wreg,f,c
  1155  004D9A  E1FD               	bnz	clear_4
  1156                           
  1157                           ;
  1158                           ; Setup IVTBASE
  1159                           ;
  1160  004D9C  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1161  004D9E  6ED5               	movwf	213,c
  1162  004DA0  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1163  004DA2  6ED6               	movwf	214,c
  1164  004DA4  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1165  004DA6  6ED7               	movwf	215,c
  1166  004DA8                     end_of_initialization:
  1167                           	opt callstack 0
  1168  004DA8                     __end_of__initialization:
  1169                           	opt callstack 0
  1170  004DA8  0100               	movlb	0
  1171  004DAA  EF5C  F010         	goto	_main	;jump to C main() function
  1172                           
  1173                           	psect	bssCOMRAM
  1174  000001                     __pbssCOMRAM:
  1175                           	opt callstack 0
  1176  000001                     secs_II_message@block:
  1177                           	opt callstack 0
  1178  000001                     	ds	7
  1179  000008                     _ADCC_ADI_InterruptHandler:
  1180                           	opt callstack 0
  1181  000008                     	ds	3
  1182  00000B                     _UART1_TxInterruptHandler:
  1183                           	opt callstack 0
  1184  00000B                     	ds	3
  1185  00000E                     _UART1_RxInterruptHandler:
  1186                           	opt callstack 0
  1187  00000E                     	ds	3
  1188  000011                     _UART2_TxInterruptHandler:
  1189                           	opt callstack 0
  1190  000011                     	ds	3
  1191  000014                     _UART2_RxInterruptHandler:
  1192                           	opt callstack 0
  1193  000014                     	ds	3
  1194  000017                     _INT2_InterruptHandler:
  1195                           	opt callstack 0
  1196  000017                     	ds	3
  1197  00001A                     _INT1_InterruptHandler:
  1198                           	opt callstack 0
  1199  00001A                     	ds	3
  1200  00001D                     _INT0_InterruptHandler:
  1201                           	opt callstack 0
  1202  00001D                     	ds	3
  1203  000020                     _width:
  1204                           	opt callstack 0
  1205  000020                     	ds	2
  1206  000022                     _prec:
  1207                           	opt callstack 0
  1208  000022                     	ds	2
  1209  000024                     _flags:
  1210                           	opt callstack 0
  1211  000024                     	ds	2
  1212  000026                     TMR5_ISR@CountCallBack:
  1213                           	opt callstack 0
  1214  000026                     	ds	2
  1215  000028                     _timer5ReloadVal:
  1216                           	opt callstack 0
  1217  000028                     	ds	2
  1218  00002A                     t_protocol@requeue:
  1219                           	opt callstack 0
  1220  00002A                     	ds	1
  1221  00002B                     t_protocol@retry:
  1222                           	opt callstack 0
  1223  00002B                     	ds	1
  1224  00002C                     r_protocol@rxData_l:
  1225                           	opt callstack 0
  1226  00002C                     	ds	1
  1227  00002D                     m_protocol@rxData_l:
  1228                           	opt callstack 0
  1229  00002D                     	ds	1
  1230  00002E                     _mode_sw:
  1231                           	opt callstack 0
  1232  00002E                     	ds	1
  1233  00002F                     _uart2RxCount:
  1234                           	opt callstack 0
  1235  00002F                     	ds	1
  1236  000030                     _uart2RxTail:
  1237                           	opt callstack 0
  1238  000030                     	ds	1
  1239  000031                     _uart2RxHead:
  1240                           	opt callstack 0
  1241  000031                     	ds	1
  1242  000032                     _uart2TxBufferRemaining:
  1243                           	opt callstack 0
  1244  000032                     	ds	1
  1245  000033                     _uart2TxTail:
  1246                           	opt callstack 0
  1247  000033                     	ds	1
  1248  000034                     _uart2TxHead:
  1249                           	opt callstack 0
  1250  000034                     	ds	1
  1251  000035                     _uart1RxCount:
  1252                           	opt callstack 0
  1253  000035                     	ds	1
  1254  000036                     _uart1RxTail:
  1255                           	opt callstack 0
  1256  000036                     	ds	1
  1257  000037                     _uart1RxHead:
  1258                           	opt callstack 0
  1259  000037                     	ds	1
  1260  000038                     _uart1TxBufferRemaining:
  1261                           	opt callstack 0
  1262  000038                     	ds	1
  1263  000039                     _uart1TxTail:
  1264                           	opt callstack 0
  1265  000039                     	ds	1
  1266  00003A                     _uart1TxHead:
  1267                           	opt callstack 0
  1268  00003A                     	ds	1
  1269                           
  1270                           	psect	dataCOMRAM
  1271  00005D                     __pdataCOMRAM:
  1272                           	opt callstack 0
  1273  00005D                     r_protocol@retry:
  1274                           	opt callstack 0
  1275  00005D                     	ds	1
  1276                           
  1277                           	psect	bssBANK0
  1278  0000C0                     __pbssBANK0:
  1279                           	opt callstack 0
  1280  0000C0                     _r_block:
  1281                           	opt callstack 0
  1282  0000C0                     	ds	13
  1283  0000CD                     _spi_link:
  1284                           	opt callstack 0
  1285  0000CD                     	ds	12
  1286  0000D9                     _tickCount:
  1287                           	opt callstack 0
  1288  0000D9                     	ds	12
  1289  0000E5                     t_protocol@block:
  1290                           	opt callstack 0
  1291  0000E5                     	ds	7
  1292  0000EC                     wdtdelay@dcount:
  1293                           	opt callstack 0
  1294  0000EC                     	ds	4
  1295  0000F0                     _TMR5_InterruptHandler:
  1296                           	opt callstack 0
  1297  0000F0                     	ds	3
  1298  0000F3                     _TMR6_InterruptHandler:
  1299                           	opt callstack 0
  1300  0000F3                     	ds	3
  1301  0000F6                     _nout:
  1302                           	opt callstack 0
  1303  0000F6                     	ds	2
  1304  0000F8                     run_checksum@sum:
  1305                           	opt callstack 0
  1306  0000F8                     	ds	2
  1307                           
  1308                           	psect	dataBANK0
  1309  000060                     __pdataBANK0:
  1310                           	opt callstack 0
  1311  000060                     stoa@F1142:
  1312                           	opt callstack 0
  1313  000060                     	ds	7
  1314  000067                     _V:
  1315                           	opt callstack 0
  1316  000067                     	ds	89
  1317                           
  1318                           	psect	bssBANK1
  1319  0001AF                     __pbssBANK1:
  1320                           	opt callstack 0
  1321  0001AF                     _dbuf:
  1322                           	opt callstack 0
  1323  0001AF                     	ds	32
  1324                           
  1325                           	psect	dataBANK1
  1326  000100                     __pdataBANK1:
  1327                           	opt callstack 0
  1328  000100                     _H10:
  1329                           	opt callstack 0
  1330  000100                     	ds	65
  1331  000141                     _H12:
  1332                           	opt callstack 0
  1333  000141                     	ds	30
  1334  00015F                     _H24:
  1335                           	opt callstack 0
  1336  00015F                     	ds	27
  1337  00017A                     _H17:
  1338                           	opt callstack 0
  1339  00017A                     	ds	20
  1340  00018E                     _H14:
  1341                           	opt callstack 0
  1342  00018E                     	ds	17
  1343  00019F                     _H13:
  1344                           	opt callstack 0
  1345  00019F                     	ds	16
  1346                           
  1347                           	psect	bssBANK2
  1348  000200                     __pbssBANK2:
  1349                           	opt callstack 0
  1350  000200                     _uart2RxBuffer:
  1351                           	opt callstack 0
  1352  000200                     	ds	64
  1353  000240                     _uart2TxBuffer:
  1354                           	opt callstack 0
  1355  000240                     	ds	64
  1356  000280                     _uart1RxBuffer:
  1357                           	opt callstack 0
  1358  000280                     	ds	64
  1359  0002C0                     _uart1TxBuffer:
  1360                           	opt callstack 0
  1361  0002C0                     	ds	64
  1362                           
  1363                           	psect	bssBANK3
  1364  000300                     __pbssBANK3:
  1365                           	opt callstack 0
  1366  000300                     _ring_buf2:
  1367                           	opt callstack 0
  1368  000300                     	ds	67
  1369  000343                     _ring_buf1:
  1370                           	opt callstack 0
  1371  000343                     	ds	67
  1372                           
  1373                           	psect	dataBANK3
  1374  000386                     __pdataBANK3:
  1375                           	opt callstack 0
  1376  000386                     _H53:
  1377                           	opt callstack 0
  1378  000386                     	ds	56
  1379                           
  1380                           	psect	cstackCOMRAM
  1381  00005B                     __pcstackCOMRAM:
  1382                           	opt callstack 0
  1383  00005B                     ??_TMR6_ISR:
  1384  00005B                     
  1385                           ; 1 bytes @ 0x0
  1386  00005B                     	ds	1
  1387  00005C                     ??_TMR5_ISR:
  1388                           
  1389                           ; 1 bytes @ 0x1
  1390  00005C                     	ds	1
  1391                           
  1392 ;;
  1393 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1394 ;;
  1395 ;; *************** function _main *****************
  1396 ;; Defined at:
  1397 ;;		line 283 in file "main.c"
  1398 ;; Parameters:    Size  Location     Type
  1399 ;;		None
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;  mode            1  [STACK] enum E16896
  1402 ;; Return value:  Size  Location     Type
  1403 ;;                  1  [STACK] void 
  1404 ;; Registers used:
  1405 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh
      +, tblptru, prodl, prodh
  1406 ;; Tracked objects:
  1407 ;;		On entry : 0/0
  1408 ;;		On exit  : 4/0
  1409 ;;		Unchanged: 0/0
  1410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1415 ;;Total ram usage:        0 bytes
  1416 ;; Hardware stack levels required when called:   14
  1417 ;; This function calls:
  1418 ;;		_SYSTEM_Initialize
  1419 ;;		_WaitMs
  1420 ;;		_eaDogM_WriteCommand
  1421 ;;		_eaDogM_WriteStringAtPos
  1422 ;;		_init_display
  1423 ;;		_m_protocol
  1424 ;;		_r_protocol
  1425 ;;		_sprintf
  1426 ;;		_t_protocol
  1427 ;;		_wait_lcd_done
  1428 ;; This function is called by:
  1429 ;;		Startup code after reset
  1430 ;; This function uses a reentrant model
  1431 ;;
  1432                           
  1433                           	psect	text0
  1434  0020B8                     __ptext0:
  1435                           	opt callstack 0
  1436  0020B8                     _main:
  1437                           	opt callstack 0
  1438                           
  1439                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1440  0020B8  52E6               	movf	postinc1,f,c
  1441                           
  1442                           ;main.c: 285:  UI_STATES mode;;main.c: 288:  SYSTEM_Initialize();
  1443                           
  1444                           ;incstack = 0
  1445  0020BA  EC2F  F02C         	call	_SYSTEM_Initialize	;wreg free
  1446                           
  1447                           ; BSR set to: 60
  1448                           ;main.c: 291:  (INTCON0bits.GIEH = 1);
  1449  0020BE  8ED2               	bsf	16338,7,c	;volatile
  1450                           
  1451                           ; BSR set to: 60
  1452                           ;main.c: 294:  (INTCON0bits.GIEL = 1);
  1453  0020C0  8CD2               	bsf	16338,6,c	;volatile
  1454                           
  1455                           ; BSR set to: 60
  1456                           ;main.c: 296:  V.ui_state = UI_STATE_INIT;
  1457  0020C2  0100               	movlb	0	; () banked
  1458  0020C4  6B68               	clrf	(_V+1)& (0+255),b
  1459                           
  1460                           ; BSR set to: 0
  1461                           ;main.c: 297:  if (PORTBbits.RB0) {
  1462  0020C6  A0CB               	btfss	16331,0,c	;volatile
  1463  0020C8  D004               	goto	l8271
  1464                           
  1465                           ; BSR set to: 0
  1466                           ;main.c: 298:   mode = UI_STATE_HOST;
  1467                           ;stkvar	_mode @ sp[(-1)+0]
  1468  0020CA  0EFF               	movlw	-1
  1469  0020CC  6AE3               	clrf	plusw1,c
  1470  0020CE  2AE3               	incf	plusw1,f,c
  1471                           
  1472                           ;main.c: 299:  } else {
  1473  0020D0  D004               	goto	l8273
  1474  0020D2                     l8271:
  1475                           
  1476                           ; BSR set to: 0
  1477                           ;main.c: 300:   mode = UI_STATE_LOG;
  1478                           ;stkvar	_mode @ sp[(-1)+0]
  1479  0020D2  0EFF               	movlw	-1
  1480  0020D4  6AE3               	clrf	plusw1,c
  1481  0020D6  80E3               	bsf	plusw1,0,c
  1482  0020D8  82E3               	bsf	plusw1,1,c	;indir
  1483  0020DA                     l8273:
  1484                           
  1485                           ; BSR set to: 0
  1486                           ;main.c: 303:  if (mode == UI_STATE_LOG) {
  1487                           ;stkvar	_mode @ sp[(-1)+0]
  1488  0020DA  0EFF               	movlw	-1
  1489  0020DC  006F FF8C  F03B    	movff	plusw1,btemp
  1490  0020E2  0E03               	movlw	3
  1491  0020E4  183B               	xorwf	btemp,w,c
  1492  0020E6  A4D8               	btfss	status,2,c
  1493  0020E8  D003               	goto	l1220
  1494                           
  1495                           ; BSR set to: 0
  1496                           
  1497                           ;main.c: 304:   do { LATDbits.LATD0 = 1; } while(0);
  1498  0020EA  80BD               	bsf	16317,0,c	;volatile
  1499                           
  1500                           ; BSR set to: 0
  1501                           
  1502                           ;main.c: 305:   do { LATDbits.LATD1 = 1; } while(0);
  1503  0020EC  82BD               	bsf	16317,1,c	;volatile
  1504  0020EE  D1FF               	goto	l8435
  1505  0020F0                     l1220:
  1506                           
  1507                           ; BSR set to: 0
  1508  0020F0  90BD               	bcf	16317,0,c	;volatile
  1509                           
  1510                           ; BSR set to: 0
  1511                           
  1512                           ;main.c: 308:   do { LATDbits.LATD1 = 0; } while(0);
  1513  0020F2  92BD               	bcf	16317,1,c	;volatile
  1514  0020F4  D1FC               	goto	l8435
  1515  0020F6                     l8275:
  1516                           
  1517                           ; BSR set to: 0
  1518                           ;main.c: 314:    init_display();
  1519  0020F6  EC91  F025         	call	_init_display	;wreg free
  1520                           
  1521                           ; BSR set to: 61
  1522                           ;main.c: 315:    eaDogM_WriteCommand(0b00001100);
  1523  0020FA  0E0C               	movlw	12
  1524  0020FC  6EE6               	movwf	postinc1,c
  1525  0020FE  EC72  F030         	call	_eaDogM_WriteCommand	;wreg free
  1526                           
  1527                           ; BSR set to: 0
  1528                           ;main.c: 317:    V.ui_state = mode;
  1529                           ;stkvar	_mode @ sp[(-1)+0]
  1530  002102  0EFF               	movlw	-1
  1531  002104  006F FF8C  F068    	movff	plusw1,_V+1
  1532                           
  1533                           ; BSR set to: 0
  1534                           ;main.c: 318:    V.s_state = SEQ_STATE_INIT;
  1535  00210A  6B67               	clrf	_V& (0+255),b
  1536                           
  1537                           ; BSR set to: 0
  1538                           ;main.c: 347:    sprintf(V.buf, " RVI HOST TESTER");
  1539  00210C  0E61               	movlw	STR_1& (0+255)
  1540  00210E  6EE6               	movwf	postinc1,c
  1541  002110  0E67               	movlw	_V& (0+255)
  1542  002112  0F05               	addlw	5
  1543  002114  6EE6               	movwf	postinc1,c
  1544  002116  0E02               	movlw	2
  1545  002118  6EE6               	movwf	postinc1,c
  1546  00211A  ECD7  F026         	call	_sprintf	;wreg free
  1547                           
  1548                           ; BSR set to: 0
  1549                           ;main.c: 348:    wait_lcd_done();
  1550  00211E  EC01  F030         	call	_wait_lcd_done	;wreg free
  1551                           
  1552                           ; BSR set to: 0
  1553                           ;main.c: 349:    eaDogM_WriteStringAtPos(0, 0, V.buf);
  1554  002122  0E67               	movlw	_V& (0+255)
  1555  002124  0F05               	addlw	5
  1556  002126  6EE6               	movwf	postinc1,c
  1557  002128  0E00               	movlw	0
  1558  00212A  6EE6               	movwf	postinc1,c
  1559  00212C  0E00               	movlw	0
  1560  00212E  6EE6               	movwf	postinc1,c
  1561  002130  EC5B  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  1562                           
  1563                           ; BSR set to: 59
  1564                           ;main.c: 350:    sprintf(V.buf, " Version %s", "0.73A");
  1565  002134  0EA7               	movlw	STR_3& (0+255)
  1566  002136  6E46               	movwf	btemp+11,c
  1567  002138  0060  F11B  FFE6   	movff	btemp+11,postinc1
  1568  00213E  0E20               	movlw	high __smallconst
  1569  002140  6EE6               	movwf	postinc1,c
  1570  002142  0E8F               	movlw	STR_2& (0+255)
  1571  002144  6EE6               	movwf	postinc1,c
  1572  002146  0E67               	movlw	_V& (0+255)
  1573  002148  0F05               	addlw	5
  1574  00214A  6EE6               	movwf	postinc1,c
  1575  00214C  0E04               	movlw	4
  1576  00214E  6EE6               	movwf	postinc1,c
  1577  002150  ECD7  F026         	call	_sprintf	;wreg free
  1578                           
  1579                           ; BSR set to: 0
  1580                           ;main.c: 351:    wait_lcd_done();
  1581  002154  EC01  F030         	call	_wait_lcd_done	;wreg free
  1582                           
  1583                           ; BSR set to: 0
  1584                           ;main.c: 352:    eaDogM_WriteStringAtPos(1, 0, V.buf);
  1585  002158  0E67               	movlw	_V& (0+255)
  1586  00215A  0F05               	addlw	5
  1587  00215C  6EE6               	movwf	postinc1,c
  1588  00215E  0E00               	movlw	0
  1589  002160  6EE6               	movwf	postinc1,c
  1590  002162  0E01               	movlw	1
  1591  002164  6EE6               	movwf	postinc1,c
  1592  002166  EC5B  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  1593                           
  1594                           ; BSR set to: 59
  1595                           ;main.c: 353:    sprintf(V.buf, " FGB@MCHP FAB4");
  1596  00216A  0E72               	movlw	STR_4& (0+255)
  1597  00216C  6EE6               	movwf	postinc1,c
  1598  00216E  0E67               	movlw	_V& (0+255)
  1599  002170  0F05               	addlw	5
  1600  002172  6EE6               	movwf	postinc1,c
  1601  002174  0E02               	movlw	2
  1602  002176  6EE6               	movwf	postinc1,c
  1603  002178  ECD7  F026         	call	_sprintf	;wreg free
  1604                           
  1605                           ; BSR set to: 0
  1606                           ;main.c: 354:    wait_lcd_done();
  1607  00217C  EC01  F030         	call	_wait_lcd_done	;wreg free
  1608                           
  1609                           ; BSR set to: 0
  1610                           ;main.c: 355:    eaDogM_WriteStringAtPos(2, 0, V.buf);
  1611  002180  0E67               	movlw	_V& (0+255)
  1612  002182  0F05               	addlw	5
  1613  002184  6EE6               	movwf	postinc1,c
  1614  002186  0E00               	movlw	0
  1615  002188  6EE6               	movwf	postinc1,c
  1616  00218A  0E02               	movlw	2
  1617  00218C  6EE6               	movwf	postinc1,c
  1618  00218E  EC5B  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  1619                           
  1620                           ; BSR set to: 59
  1621                           ;main.c: 357:    WaitMs(3000);
  1622  002192  0EB8               	movlw	184
  1623  002194  6EE6               	movwf	postinc1,c
  1624  002196  0E0B               	movlw	11
  1625  002198  6EE6               	movwf	postinc1,c
  1626  00219A  ECC7  F02D         	call	_WaitMs	;wreg free
  1627                           
  1628                           ;main.c: 358:    break;
  1629  00219E  D1BB               	goto	l1263
  1630  0021A0                     l1230:
  1631                           
  1632                           ; BSR set to: 0
  1633                           ;main.c: 362:     V.r_l_state = LINK_STATE_IDLE;
  1634  0021A0  6B6A               	clrf	(_V+3)& (0+255),b
  1635                           
  1636                           ;main.c: 363:     V.t_l_state = LINK_STATE_IDLE;
  1637  0021A2  6B6B               	clrf	(_V+4)& (0+255),b
  1638                           
  1639                           ; BSR set to: 0
  1640                           ;main.c: 364:     V.s_state = SEQ_STATE_RX;
  1641  0021A4  0E01               	movlw	1
  1642  0021A6  6F67               	movwf	_V& (0+255),b
  1643                           
  1644                           ;main.c: 365:     if (!V.error && !V.abort) {
  1645  0021A8  51B6               	movf	(_V+79)& (0+255),w,b
  1646  0021AA  A4D8               	btfss	status,2,c
  1647  0021AC  D0DC               	goto	l8375
  1648                           
  1649                           ; BSR set to: 0
  1650  0021AE  51B7               	movf	(_V+80)& (0+255),w,b
  1651  0021B0  A4D8               	btfss	status,2,c
  1652  0021B2  D0D9               	goto	l8375
  1653                           
  1654                           ; BSR set to: 0
  1655                           ;main.c: 366:      sprintf(V.buf, " HOST MODE %ld   #", V.ticks);
  1656  0021B4  0060  F2B3  FFE6   	movff	_V+69,postinc1
  1657  0021BA  0060  F2B7  FFE6   	movff	_V+70,postinc1
  1658  0021C0  0060  F2BB  FFE6   	movff	_V+71,postinc1
  1659  0021C6  0060  F2BF  FFE6   	movff	_V+72,postinc1
  1660  0021CC  0E3D               	movlw	STR_5& (0+255)
  1661  0021CE  6EE6               	movwf	postinc1,c
  1662  0021D0  0E67               	movlw	_V& (0+255)
  1663  0021D2  0F05               	addlw	5
  1664  0021D4  6EE6               	movwf	postinc1,c
  1665  0021D6  0E06               	movlw	6
  1666  0021D8  6EE6               	movwf	postinc1,c
  1667  0021DA  ECD7  F026         	call	_sprintf	;wreg free
  1668  0021DE                     l8309:
  1669                           
  1670                           ; BSR set to: 0
  1671                           ;main.c: 367:      V.buf[16] = 0;
  1672  0021DE  6B7C               	clrf	(_V+21)& (0+255),b
  1673                           
  1674                           ; BSR set to: 0
  1675                           ;main.c: 368:      wait_lcd_done();
  1676  0021E0  EC01  F030         	call	_wait_lcd_done	;wreg free
  1677                           
  1678                           ; BSR set to: 0
  1679                           ;main.c: 369:      eaDogM_WriteStringAtPos(2, 0, V.buf);
  1680  0021E4  0E67               	movlw	_V& (0+255)
  1681  0021E6  0F05               	addlw	5
  1682  0021E8  6EE6               	movwf	postinc1,c
  1683  0021EA  0E00               	movlw	0
  1684  0021EC  6EE6               	movwf	postinc1,c
  1685  0021EE  0E02               	movlw	2
  1686  0021F0  6EE6               	movwf	postinc1,c
  1687  0021F2  EC5B  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  1688  0021F6  D0B7               	goto	l8375
  1689  0021F8                     l8315:
  1690                           
  1691                           ; BSR set to: 0
  1692                           ;main.c: 380:     if (r_protocol(&V.r_l_state) == LINK_STATE_DONE) {
  1693  0021F8  0E67               	movlw	_V& (0+255)
  1694  0021FA  0F03               	addlw	3
  1695  0021FC  6EE6               	movwf	postinc1,c
  1696  0021FE  EC04  F01B         	call	_r_protocol	;wreg free
  1697  002202  0E04               	movlw	4
  1698  002204  183B               	xorwf	btemp,w,c
  1699  002206  A4D8               	btfss	status,2,c
  1700  002208  D029               	goto	l8333
  1701                           
  1702                           ;main.c: 381:      sprintf(V.buf, " S%dF%d #    ", V.stream, V.function);
  1703  00220A  0100               	movlb	0	; () banked
  1704  00220C  51B5               	movf	(_V+78)& (0+255),w,b
  1705  00220E  6EE6               	movwf	postinc1,c
  1706  002210  0E00               	movlw	0
  1707  002212  6EE6               	movwf	postinc1,c
  1708  002214  51B4               	movf	(_V+77)& (0+255),w,b
  1709  002216  6EE6               	movwf	postinc1,c
  1710  002218  0E00               	movlw	0
  1711  00221A  6EE6               	movwf	postinc1,c
  1712  00221C  0E81               	movlw	STR_6& (0+255)
  1713  00221E  6EE6               	movwf	postinc1,c
  1714  002220  0E67               	movlw	_V& (0+255)
  1715  002222  0F05               	addlw	5
  1716  002224  6EE6               	movwf	postinc1,c
  1717  002226  0E06               	movlw	6
  1718  002228  6EE6               	movwf	postinc1,c
  1719  00222A  ECD7  F026         	call	_sprintf	;wreg free
  1720                           
  1721                           ; BSR set to: 0
  1722                           ;main.c: 382:      V.buf[11] = 0;
  1723  00222E  6B77               	clrf	(_V+16)& (0+255),b
  1724                           
  1725                           ; BSR set to: 0
  1726                           ;main.c: 383:      wait_lcd_done();
  1727  002230  EC01  F030         	call	_wait_lcd_done	;wreg free
  1728                           
  1729                           ; BSR set to: 0
  1730                           ;main.c: 384:      eaDogM_WriteStringAtPos(0, 0, V.buf);
  1731  002234  0E67               	movlw	_V& (0+255)
  1732  002236  0F05               	addlw	5
  1733  002238  6EE6               	movwf	postinc1,c
  1734  00223A  0E00               	movlw	0
  1735  00223C  6EE6               	movwf	postinc1,c
  1736  00223E  0E00               	movlw	0
  1737  002240  6EE6               	movwf	postinc1,c
  1738  002242  EC5B  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  1739                           
  1740                           ; BSR set to: 59
  1741                           ;main.c: 388:      if (V.wbit) {
  1742  002246  0100               	movlb	0	; () banked
  1743  002248  A3BD               	btfss	(_V+86)& (0+255),1,b
  1744  00224A  D006               	goto	l8331
  1745                           
  1746                           ; BSR set to: 0
  1747                           ;main.c: 389:       V.s_state = SEQ_STATE_TX;
  1748  00224C  0E02               	movlw	2
  1749  00224E  6F67               	movwf	_V& (0+255),b
  1750                           
  1751                           ;main.c: 390:       V.failed_send = 0;
  1752  002250  0E87               	movlw	-121
  1753  002252  17BD               	andwf	(_V+86)& (0+255),f,b
  1754                           
  1755                           ; BSR set to: 0
  1756                           ;main.c: 391:       V.t_l_state = LINK_STATE_IDLE;
  1757  002254  6B6B               	clrf	(_V+4)& (0+255),b
  1758                           
  1759                           ;main.c: 392:      } else {
  1760  002256  D002               	goto	l8333
  1761  002258                     l8331:
  1762                           
  1763                           ; BSR set to: 0
  1764                           ;main.c: 393:       V.s_state = SEQ_STATE_TRIGGER;
  1765  002258  0E03               	movlw	3
  1766  00225A  6F67               	movwf	_V& (0+255),b
  1767  00225C                     l8333:
  1768                           
  1769                           ;main.c: 396:     if (V.r_l_state == LINK_STATE_ERROR)
  1770  00225C  0E06               	movlw	6
  1771  00225E  0100               	movlb	0	; () banked
  1772  002260  196A               	xorwf	(_V+3)& (0+255),w,b
  1773  002262  A4D8               	btfss	status,2,c
  1774  002264  D080               	goto	l8375
  1775  002266                     u5210:
  1776                           
  1777                           ; BSR set to: 0
  1778                           ;main.c: 397:      V.s_state = SEQ_STATE_ERROR;
  1779  002266  0E06               	movlw	6
  1780  002268  6F67               	movwf	_V& (0+255),b
  1781  00226A  D07D               	goto	l8375
  1782  00226C                     l8337:
  1783                           
  1784                           ; BSR set to: 0
  1785                           ;main.c: 403:     if (t_protocol(&V.t_l_state) == LINK_STATE_DONE) {
  1786  00226C  0E67               	movlw	_V& (0+255)
  1787  00226E  0F04               	addlw	4
  1788  002270  6EE6               	movwf	postinc1,c
  1789  002272  EC0B  F01F         	call	_t_protocol	;wreg free
  1790  002276  0E04               	movlw	4
  1791  002278  183B               	xorwf	btemp,w,c
  1792  00227A  A4D8               	btfss	status,2,c
  1793  00227C  D003               	goto	l8341
  1794                           
  1795                           ;main.c: 404:      V.s_state = SEQ_STATE_TRIGGER;
  1796  00227E  0E03               	movlw	3
  1797  002280  0100               	movlb	0	; () banked
  1798  002282  6F67               	movwf	_V& (0+255),b
  1799  002284                     l8341:
  1800                           
  1801                           ;main.c: 406:     if (V.t_l_state == LINK_STATE_ERROR)
  1802  002284  0E06               	movlw	6
  1803  002286  0100               	movlb	0	; () banked
  1804  002288  196B               	xorwf	(_V+4)& (0+255),w,b
  1805  00228A  B4D8               	btfsc	status,2,c
  1806  00228C  D7EC               	goto	u5210
  1807  00228E  D06B               	goto	l8375
  1808  002290                     l1241:
  1809                           
  1810                           ; BSR set to: 0
  1811                           ;main.c: 410:     if (V.queue) {
  1812  002290  A9BE               	btfss	(_V+87)& (0+255),4,b
  1813  002292  D01C               	goto	l8355
  1814                           
  1815                           ; BSR set to: 0
  1816  002294  A4BE               	btfss	16318,2,c	;volatile
  1817  002296  D002               	goto	u5250
  1818  002298  0E01               	movlw	1
  1819  00229A  D001               	goto	u5256
  1820  00229C                     u5250:
  1821  00229C  0E00               	movlw	0
  1822  00229E                     u5256:
  1823  00229E  0AFF               	xorlw	255
  1824  0022A0  6E46               	movwf	btemp+11,c
  1825  0022A2  4646               	rlncf	btemp+11,f,c
  1826  0022A4  4646               	rlncf	btemp+11,f,c
  1827  0022A6  50BE               	movf	16318,w,c	;volatile
  1828  0022A8  1846               	xorwf	btemp+11,w,c
  1829  0022AA  0BFB               	andlw	-5
  1830  0022AC  1846               	xorwf	btemp+11,w,c
  1831  0022AE  6EBE               	movwf	16318,c	;volatile
  1832                           
  1833                           ; BSR set to: 0
  1834                           ;main.c: 412:      V.r_l_state = LINK_STATE_IDLE;
  1835  0022B0  6B6A               	clrf	(_V+3)& (0+255),b
  1836                           
  1837                           ; BSR set to: 0
  1838                           ;main.c: 413:      V.t_l_state = LINK_STATE_IDLE;
  1839  0022B2  6B6B               	clrf	(_V+4)& (0+255),b
  1840                           
  1841                           ; BSR set to: 0
  1842                           ;main.c: 414:      V.s_state = SEQ_STATE_TX;
  1843  0022B4  0E02               	movlw	2
  1844  0022B6  6F67               	movwf	_V& (0+255),b
  1845                           
  1846                           ; BSR set to: 0
  1847                           ;main.c: 415:      sprintf(V.buf, " OKQ#");
  1848  0022B8  0EA1               	movlw	STR_7& (0+255)
  1849  0022BA  6EE6               	movwf	postinc1,c
  1850  0022BC  0E67               	movlw	_V& (0+255)
  1851  0022BE  0F05               	addlw	5
  1852  0022C0  6EE6               	movwf	postinc1,c
  1853  0022C2  0E02               	movlw	2
  1854  0022C4  6EE6               	movwf	postinc1,c
  1855  0022C6  ECD7  F026         	call	_sprintf	;wreg free
  1856                           
  1857                           ;main.c: 416:     } else {
  1858  0022CA  D00B               	goto	l8359
  1859  0022CC                     l8355:
  1860                           
  1861                           ; BSR set to: 0
  1862                           ;main.c: 417:      V.s_state = SEQ_STATE_DONE;
  1863  0022CC  0E05               	movlw	5
  1864  0022CE  6F67               	movwf	_V& (0+255),b
  1865                           
  1866                           ; BSR set to: 0
  1867                           ;main.c: 418:      sprintf(V.buf, " OK #");
  1868  0022D0  0E9B               	movlw	STR_8& (0+255)
  1869  0022D2  6EE6               	movwf	postinc1,c
  1870  0022D4  0E67               	movlw	_V& (0+255)
  1871  0022D6  0F05               	addlw	5
  1872  0022D8  6EE6               	movwf	postinc1,c
  1873  0022DA  0E02               	movlw	2
  1874  0022DC  6EE6               	movwf	postinc1,c
  1875  0022DE  ECD7  F026         	call	_sprintf	;wreg free
  1876  0022E2                     l8359:
  1877                           
  1878                           ; BSR set to: 0
  1879                           ;main.c: 420:     wait_lcd_done();
  1880  0022E2  EC01  F030         	call	_wait_lcd_done	;wreg free
  1881                           
  1882                           ; BSR set to: 0
  1883                           ;main.c: 421:     eaDogM_WriteStringAtPos(0, 11, V.buf);
  1884  0022E6  0E67               	movlw	_V& (0+255)
  1885  0022E8  0F05               	addlw	5
  1886  0022EA  6EE6               	movwf	postinc1,c
  1887  0022EC  0E0B               	movlw	11
  1888  0022EE  6EE6               	movwf	postinc1,c
  1889  0022F0  0E00               	movlw	0
  1890  0022F2  6EE6               	movwf	postinc1,c
  1891  0022F4  EC5B  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  1892                           
  1893                           ;main.c: 422:     break;
  1894  0022F8  D036               	goto	l8375
  1895  0022FA                     l1246:
  1896                           
  1897                           ; BSR set to: 0
  1898                           ;main.c: 424:     V.s_state = SEQ_STATE_INIT;
  1899  0022FA  6B67               	clrf	_V& (0+255),b
  1900                           
  1901                           ;main.c: 425:     break;
  1902  0022FC  D034               	goto	l8375
  1903  0022FE                     l1248:
  1904                           
  1905                           ; BSR set to: 0
  1906                           ;main.c: 428:     V.s_state = SEQ_STATE_INIT;
  1907  0022FE  6B67               	clrf	_V& (0+255),b
  1908                           
  1909                           ; BSR set to: 0
  1910                           ;main.c: 429:     sprintf(V.buf, "E R%d T%d E%d A%d #", V.r_l_state, V.t_l_state, V.erro
      +                          r, V.abort);
  1911  002300  51B7               	movf	(_V+80)& (0+255),w,b
  1912  002302  6EE6               	movwf	postinc1,c
  1913  002304  0E00               	movlw	0
  1914  002306  6EE6               	movwf	postinc1,c
  1915  002308  51B6               	movf	(_V+79)& (0+255),w,b
  1916  00230A  6EE6               	movwf	postinc1,c
  1917  00230C  0E00               	movlw	0
  1918  00230E  6EE6               	movwf	postinc1,c
  1919  002310  516B               	movf	(_V+4)& (0+255),w,b
  1920  002312  6EE6               	movwf	postinc1,c
  1921  002314  0E00               	movlw	0
  1922  002316  6EE6               	movwf	postinc1,c
  1923  002318  516A               	movf	(_V+3)& (0+255),w,b
  1924  00231A  6EE6               	movwf	postinc1,c
  1925  00231C  0E00               	movlw	0
  1926  00231E  6EE6               	movwf	postinc1,c
  1927  002320  0E16               	movlw	STR_9& (0+255)
  1928  002322  6EE6               	movwf	postinc1,c
  1929  002324  0E67               	movlw	_V& (0+255)
  1930  002326  0F05               	addlw	5
  1931  002328  6EE6               	movwf	postinc1,c
  1932  00232A  0E0A               	movlw	10
  1933  00232C  6EE6               	movwf	postinc1,c
  1934  00232E  ECD7  F026         	call	_sprintf	;wreg free
  1935  002332  D755               	goto	l8309
  1936  002334                     l8373:
  1937                           
  1938                           ; BSR set to: 0
  1939  002334  5167               	movf	_V& (0+255),w,b
  1940  002336  6E45               	movwf	btemp+10,c
  1941  002338  6A46               	clrf	btemp+11,c
  1942                           
  1943                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1944                           ; Switch size 1, requested type "simple"
  1945                           ; Number of cases is 1, Range of values is 0 to 0
  1946                           ; switch strategies available:
  1947                           ; Name         Instructions Cycles
  1948                           ; simple_byte            4     3 (average)
  1949                           ;	Chosen strategy is simple_byte
  1950  00233A  5046               	movf	btemp+11,w,c
  1951  00233C  0A00               	xorlw	0	; case 0
  1952  00233E  A4D8               	btfss	status,2,c
  1953  002340  D7DE               	goto	l1248
  1954                           
  1955                           ; BSR set to: 0
  1956                           ; Switch size 1, requested type "simple"
  1957                           ; Number of cases is 6, Range of values is 0 to 6
  1958                           ; switch strategies available:
  1959                           ; Name         Instructions Cycles
  1960                           ; simple_byte           19    10 (average)
  1961                           ;	Chosen strategy is simple_byte
  1962  002342  5045               	movf	btemp+10,w,c
  1963  002344  0A00               	xorlw	0	; case 0
  1964  002346  B4D8               	btfsc	status,2,c
  1965  002348  D72B               	goto	l1230
  1966  00234A  0A01               	xorlw	1	; case 1
  1967  00234C  B4D8               	btfsc	status,2,c
  1968  00234E  D754               	goto	l8315
  1969  002350  0A03               	xorlw	3	; case 2
  1970  002352  B4D8               	btfsc	status,2,c
  1971  002354  D78B               	goto	l8337
  1972  002356  0A01               	xorlw	1	; case 3
  1973  002358  B4D8               	btfsc	status,2,c
  1974  00235A  D79A               	goto	l1241
  1975  00235C  0A06               	xorlw	6	; case 5
  1976  00235E  B4D8               	btfsc	status,2,c
  1977  002360  D7CC               	goto	l1246
  1978  002362  0A03               	xorlw	3	; case 6
  1979  002364  D7CC               	goto	l1248
  1980  002366                     l8375:
  1981                           
  1982                           ;main.c: 435:    if (!V.error && !V.abort) {
  1983  002366  0100               	movlb	0	; () banked
  1984  002368  51B6               	movf	(_V+79)& (0+255),w,b
  1985  00236A  A4D8               	btfss	status,2,c
  1986  00236C  D0D4               	goto	l1263
  1987                           
  1988                           ; BSR set to: 0
  1989  00236E  51B7               	movf	(_V+80)& (0+255),w,b
  1990  002370  A4D8               	btfss	status,2,c
  1991  002372  D0D1               	goto	l1263
  1992                           
  1993                           ; BSR set to: 0
  1994                           ;main.c: 436:     sprintf(V.buf, " HOST MODE %ld   #", V.ticks);
  1995  002374  0060  F2B3  FFE6   	movff	_V+69,postinc1
  1996  00237A  0060  F2B7  FFE6   	movff	_V+70,postinc1
  1997  002380  0060  F2BB  FFE6   	movff	_V+71,postinc1
  1998  002386  0060  F2BF  FFE6   	movff	_V+72,postinc1
  1999  00238C  0E3D               	movlw	STR_5& (0+255)
  2000  00238E  6EE6               	movwf	postinc1,c
  2001  002390  0E67               	movlw	_V& (0+255)
  2002  002392  0F05               	addlw	5
  2003  002394  6EE6               	movwf	postinc1,c
  2004  002396  0E06               	movlw	6
  2005  002398  6EE6               	movwf	postinc1,c
  2006  00239A  ECD7  F026         	call	_sprintf	;wreg free
  2007  00239E                     l8381:
  2008                           
  2009                           ; BSR set to: 0
  2010                           ;main.c: 437:     V.buf[16] = 0;
  2011  00239E  6B7C               	clrf	(_V+21)& (0+255),b
  2012                           
  2013                           ; BSR set to: 0
  2014                           ;main.c: 438:     wait_lcd_done();
  2015  0023A0  EC01  F030         	call	_wait_lcd_done	;wreg free
  2016                           
  2017                           ; BSR set to: 0
  2018                           ;main.c: 439:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  2019  0023A4  0E67               	movlw	_V& (0+255)
  2020  0023A6  0F05               	addlw	5
  2021  0023A8  6EE6               	movwf	postinc1,c
  2022  0023AA  0E00               	movlw	0
  2023  0023AC  6EE6               	movwf	postinc1,c
  2024  0023AE  0E02               	movlw	2
  2025  0023B0  6EE6               	movwf	postinc1,c
  2026  0023B2  EC5B  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  2027  0023B6  D0AF               	goto	l1263
  2028  0023B8                     l1252:
  2029                           
  2030                           ; BSR set to: 0
  2031                           ;main.c: 445:     V.m_l_state = LINK_STATE_IDLE;
  2032  0023B8  6B69               	clrf	(_V+2)& (0+255),b
  2033                           
  2034                           ; BSR set to: 0
  2035                           ;main.c: 446:     V.s_state = SEQ_STATE_RX;
  2036  0023BA  0E01               	movlw	1
  2037  0023BC  6F67               	movwf	_V& (0+255),b
  2038                           
  2039                           ; BSR set to: 0
  2040                           ;main.c: 447:     sprintf(V.buf, " LOG MODE %d     #", V.uart);
  2041  0023BE  51BF               	movf	(_V+88)& (0+255),w,b
  2042  0023C0  6EE6               	movwf	postinc1,c
  2043  0023C2  0E00               	movlw	0
  2044  0023C4  6EE6               	movwf	postinc1,c
  2045  0023C6  0E2A               	movlw	STR_11& (0+255)
  2046  0023C8  6EE6               	movwf	postinc1,c
  2047  0023CA  0E67               	movlw	_V& (0+255)
  2048  0023CC  0F05               	addlw	5
  2049  0023CE  6EE6               	movwf	postinc1,c
  2050  0023D0  0E04               	movlw	4
  2051  0023D2  6EE6               	movwf	postinc1,c
  2052  0023D4  ECD7  F026         	call	_sprintf	;wreg free
  2053                           
  2054                           ; BSR set to: 0
  2055                           ;main.c: 448:     V.buf[16] = 0;
  2056  0023D8  6B7C               	clrf	(_V+21)& (0+255),b
  2057                           
  2058                           ; BSR set to: 0
  2059                           ;main.c: 449:     wait_lcd_done();
  2060  0023DA  EC01  F030         	call	_wait_lcd_done	;wreg free
  2061                           
  2062                           ; BSR set to: 0
  2063                           ;main.c: 450:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  2064  0023DE  0E67               	movlw	_V& (0+255)
  2065  0023E0  0F05               	addlw	5
  2066  0023E2  6EE6               	movwf	postinc1,c
  2067  0023E4  0E00               	movlw	0
  2068  0023E6  6EE6               	movwf	postinc1,c
  2069  0023E8  0E02               	movlw	2
  2070  0023EA  6EE6               	movwf	postinc1,c
  2071  0023EC  EC5B  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  2072                           
  2073                           ;main.c: 459:     break;
  2074  0023F0  D06D               	goto	l8425
  2075  0023F2                     l8397:
  2076                           
  2077                           ; BSR set to: 0
  2078                           ;main.c: 464:     if (m_protocol(&V.m_l_state) == LINK_STATE_DONE) {
  2079  0023F2  0E67               	movlw	_V& (0+255)
  2080  0023F4  0F02               	addlw	2
  2081  0023F6  6EE6               	movwf	postinc1,c
  2082  0023F8  EC57  F017         	call	_m_protocol	;wreg free
  2083  0023FC  0E04               	movlw	4
  2084  0023FE  183B               	xorwf	btemp,w,c
  2085  002400  A4D8               	btfss	status,2,c
  2086  002402  D02D               	goto	l8409
  2087                           
  2088                           ;main.c: 465:      sprintf(V.buf, " S%dF%d #%ld    ", V.stream, V.function, V.ticks);
  2089  002404  0060  F2B3  FFE6   	movff	_V+69,postinc1
  2090  00240A  0060  F2B7  FFE6   	movff	_V+70,postinc1
  2091  002410  0060  F2BB  FFE6   	movff	_V+71,postinc1
  2092  002416  0060  F2BF  FFE6   	movff	_V+72,postinc1
  2093  00241C  0100               	movlb	0	; () banked
  2094  00241E  51B5               	movf	(_V+78)& (0+255),w,b
  2095  002420  6EE6               	movwf	postinc1,c
  2096  002422  0E00               	movlw	0
  2097  002424  6EE6               	movwf	postinc1,c
  2098  002426  51B4               	movf	(_V+77)& (0+255),w,b
  2099  002428  6EE6               	movwf	postinc1,c
  2100  00242A  0E00               	movlw	0
  2101  00242C  6EE6               	movwf	postinc1,c
  2102  00242E  0E50               	movlw	STR_12& (0+255)
  2103  002430  6EE6               	movwf	postinc1,c
  2104  002432  0E67               	movlw	_V& (0+255)
  2105  002434  0F05               	addlw	5
  2106  002436  6EE6               	movwf	postinc1,c
  2107  002438  0E0A               	movlw	10
  2108  00243A  6EE6               	movwf	postinc1,c
  2109  00243C  ECD7  F026         	call	_sprintf	;wreg free
  2110                           
  2111                           ; BSR set to: 0
  2112                           ;main.c: 466:      V.buf[11] = 0;
  2113  002440  6B77               	clrf	(_V+16)& (0+255),b
  2114                           
  2115                           ; BSR set to: 0
  2116                           ;main.c: 467:      wait_lcd_done();
  2117  002442  EC01  F030         	call	_wait_lcd_done	;wreg free
  2118                           
  2119                           ; BSR set to: 0
  2120                           ;main.c: 468:      eaDogM_WriteStringAtPos(V.uart - 1, 0, V.buf);
  2121  002446  0E67               	movlw	_V& (0+255)
  2122  002448  0F05               	addlw	5
  2123  00244A  6EE6               	movwf	postinc1,c
  2124  00244C  0E00               	movlw	0
  2125  00244E  6EE6               	movwf	postinc1,c
  2126  002450  05BF               	decf	(_V+88)& (0+255),w,b
  2127  002452  6EE6               	movwf	postinc1,c
  2128  002454  EC5B  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  2129                           
  2130                           ; BSR set to: 59
  2131                           ;main.c: 469:      V.s_state = SEQ_STATE_TRIGGER;
  2132  002458  0E03               	movlw	3
  2133  00245A  0100               	movlb	0	; () banked
  2134  00245C  6F67               	movwf	_V& (0+255),b
  2135  00245E                     l8409:
  2136                           
  2137                           ;main.c: 471:     if (V.m_l_state == LINK_STATE_ERROR)
  2138  00245E  0E06               	movlw	6
  2139  002460  0100               	movlb	0	; () banked
  2140  002462  1969               	xorwf	(_V+2)& (0+255),w,b
  2141  002464  A4D8               	btfss	status,2,c
  2142  002466  D032               	goto	l8425
  2143                           
  2144                           ; BSR set to: 0
  2145                           ;main.c: 472:      V.s_state = SEQ_STATE_ERROR;
  2146  002468  0E06               	movlw	6
  2147  00246A  6F67               	movwf	_V& (0+255),b
  2148  00246C  D02F               	goto	l8425
  2149  00246E                     l8413:
  2150                           
  2151                           ; BSR set to: 0
  2152                           ;main.c: 475:     V.s_state = SEQ_STATE_DONE;
  2153  00246E  0E05               	movlw	5
  2154  002470  6F67               	movwf	_V& (0+255),b
  2155                           
  2156                           ; BSR set to: 0
  2157                           ;main.c: 476:     sprintf(V.buf, " OK #");
  2158  002472  0E9B               	movlw	STR_8& (0+255)
  2159  002474  6EE6               	movwf	postinc1,c
  2160  002476  0E67               	movlw	_V& (0+255)
  2161  002478  0F05               	addlw	5
  2162  00247A  6EE6               	movwf	postinc1,c
  2163  00247C  0E02               	movlw	2
  2164  00247E  6EE6               	movwf	postinc1,c
  2165  002480  ECD7  F026         	call	_sprintf	;wreg free
  2166                           
  2167                           ; BSR set to: 0
  2168                           ;main.c: 477:     wait_lcd_done();
  2169  002484  EC01  F030         	call	_wait_lcd_done	;wreg free
  2170                           
  2171                           ; BSR set to: 0
  2172                           ;main.c: 478:     eaDogM_WriteStringAtPos(V.uart - 1, 11, V.buf);
  2173  002488  0E67               	movlw	_V& (0+255)
  2174  00248A  0F05               	addlw	5
  2175  00248C  6EE6               	movwf	postinc1,c
  2176  00248E  0E0B               	movlw	11
  2177  002490  6EE6               	movwf	postinc1,c
  2178  002492  05BF               	decf	(_V+88)& (0+255),w,b
  2179  002494  6EE6               	movwf	postinc1,c
  2180  002496  EC5B  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  2181                           
  2182                           ;main.c: 479:     break;
  2183  00249A  D018               	goto	l8425
  2184  00249C                     l1258:
  2185                           
  2186                           ; BSR set to: 0
  2187                           ;main.c: 481:     V.s_state = SEQ_STATE_INIT;
  2188  00249C  6B67               	clrf	_V& (0+255),b
  2189                           
  2190                           ;main.c: 482:     break;
  2191  00249E  D016               	goto	l8425
  2192  0024A0                     l8423:
  2193                           
  2194                           ; BSR set to: 0
  2195  0024A0  5167               	movf	_V& (0+255),w,b
  2196  0024A2  6E45               	movwf	btemp+10,c
  2197  0024A4  6A46               	clrf	btemp+11,c
  2198                           
  2199                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2200                           ; Switch size 1, requested type "simple"
  2201                           ; Number of cases is 1, Range of values is 0 to 0
  2202                           ; switch strategies available:
  2203                           ; Name         Instructions Cycles
  2204                           ; simple_byte            4     3 (average)
  2205                           ;	Chosen strategy is simple_byte
  2206  0024A6  5046               	movf	btemp+11,w,c
  2207  0024A8  0A00               	xorlw	0	; case 0
  2208  0024AA  A4D8               	btfss	status,2,c
  2209  0024AC  D7F7               	goto	l1258
  2210                           
  2211                           ; BSR set to: 0
  2212                           ; Switch size 1, requested type "simple"
  2213                           ; Number of cases is 5, Range of values is 0 to 6
  2214                           ; switch strategies available:
  2215                           ; Name         Instructions Cycles
  2216                           ; simple_byte           16     9 (average)
  2217                           ;	Chosen strategy is simple_byte
  2218  0024AE  5045               	movf	btemp+10,w,c
  2219  0024B0  0A00               	xorlw	0	; case 0
  2220  0024B2  B4D8               	btfsc	status,2,c
  2221  0024B4  D781               	goto	l1252
  2222  0024B6  0A01               	xorlw	1	; case 1
  2223  0024B8  B4D8               	btfsc	status,2,c
  2224  0024BA  D79B               	goto	l8397
  2225  0024BC  0A02               	xorlw	2	; case 3
  2226  0024BE  B4D8               	btfsc	status,2,c
  2227  0024C0  D7D6               	goto	l8413
  2228  0024C2  0A06               	xorlw	6	; case 5
  2229  0024C4  B4D8               	btfsc	status,2,c
  2230  0024C6  D7EA               	goto	l1258
  2231  0024C8  0A03               	xorlw	3	; case 6
  2232  0024CA  D7E8               	goto	l1258
  2233  0024CC                     l8425:
  2234                           
  2235                           ;main.c: 488:    sprintf(V.buf, " LOG MODE %d     #", V.uart);
  2236  0024CC  0100               	movlb	0	; () banked
  2237  0024CE  51BF               	movf	(_V+88)& (0+255),w,b
  2238  0024D0  6EE6               	movwf	postinc1,c
  2239  0024D2  0E00               	movlw	0
  2240  0024D4  6EE6               	movwf	postinc1,c
  2241  0024D6  0E2A               	movlw	STR_11& (0+255)
  2242  0024D8  6EE6               	movwf	postinc1,c
  2243  0024DA  0E67               	movlw	_V& (0+255)
  2244  0024DC  0F05               	addlw	5
  2245  0024DE  6EE6               	movwf	postinc1,c
  2246  0024E0  0E04               	movlw	4
  2247  0024E2  6EE6               	movwf	postinc1,c
  2248  0024E4  ECD7  F026         	call	_sprintf	;wreg free
  2249  0024E8  D75A               	goto	l8381
  2250  0024EA                     l1262:
  2251                           
  2252                           ; BSR set to: 0
  2253                           ;main.c: 495:    V.ui_state = UI_STATE_INIT;
  2254  0024EA  6B68               	clrf	(_V+1)& (0+255),b
  2255                           
  2256                           ;main.c: 496:    break;
  2257  0024EC  D014               	goto	l1263
  2258  0024EE                     l8435:
  2259  0024EE  0100               	movlb	0	; () banked
  2260  0024F0  5168               	movf	(_V+1)& (0+255),w,b
  2261  0024F2  6E45               	movwf	btemp+10,c
  2262  0024F4  6A46               	clrf	btemp+11,c
  2263                           
  2264                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2265                           ; Switch size 1, requested type "simple"
  2266                           ; Number of cases is 1, Range of values is 0 to 0
  2267                           ; switch strategies available:
  2268                           ; Name         Instructions Cycles
  2269                           ; simple_byte            4     3 (average)
  2270                           ;	Chosen strategy is simple_byte
  2271  0024F6  5046               	movf	btemp+11,w,c
  2272  0024F8  0A00               	xorlw	0	; case 0
  2273  0024FA  A4D8               	btfss	status,2,c
  2274  0024FC  D7F6               	goto	l1262
  2275                           
  2276                           ; BSR set to: 0
  2277                           ; Switch size 1, requested type "simple"
  2278                           ; Number of cases is 4, Range of values is 0 to 4
  2279                           ; switch strategies available:
  2280                           ; Name         Instructions Cycles
  2281                           ; simple_byte           13     7 (average)
  2282                           ;	Chosen strategy is simple_byte
  2283  0024FE  5045               	movf	btemp+10,w,c
  2284  002500  0A00               	xorlw	0	; case 0
  2285  002502  B4D8               	btfsc	status,2,c
  2286  002504  D5F8               	goto	l8275
  2287  002506  0A01               	xorlw	1	; case 1
  2288  002508  B4D8               	btfsc	status,2,c
  2289  00250A  D714               	goto	l8373
  2290  00250C  0A02               	xorlw	2	; case 3
  2291  00250E  B4D8               	btfsc	status,2,c
  2292  002510  D7C7               	goto	l8423
  2293  002512  0A07               	xorlw	7	; case 4
  2294  002514  D7EA               	goto	l1262
  2295  002516                     l1263:
  2296  002516  82BE               	bsf	16318,1,c	;volatile
  2297                           
  2298                           ;main.c: 499:   sprintf(V.buf, " R%d T%d FR%d FS%d #", V.r_l_state, V.t_l_state, V.faile
      +                          d_receive, V.failed_send);
  2299  002518  0100               	movlb	0	; () banked
  2300  00251A  31BD               	rrcf	(_V+86)& (0+255),w,b
  2301  00251C  32E8               	rrcf	wreg,f,c
  2302  00251E  32E8               	rrcf	wreg,f,c
  2303  002520  0B0F               	andlw	15
  2304  002522  6EE6               	movwf	postinc1,c
  2305  002524  0E00               	movlw	0
  2306  002526  6EE6               	movwf	postinc1,c
  2307  002528  51BE               	movf	(_V+87)& (0+255),w,b
  2308  00252A  0B0F               	andlw	15
  2309  00252C  6EE6               	movwf	postinc1,c
  2310  00252E  0E00               	movlw	0
  2311  002530  6EE6               	movwf	postinc1,c
  2312  002532  516B               	movf	(_V+4)& (0+255),w,b
  2313  002534  6EE6               	movwf	postinc1,c
  2314  002536  0E00               	movlw	0
  2315  002538  6EE6               	movwf	postinc1,c
  2316  00253A  516A               	movf	(_V+3)& (0+255),w,b
  2317  00253C  6EE6               	movwf	postinc1,c
  2318  00253E  0E00               	movlw	0
  2319  002540  6EE6               	movwf	postinc1,c
  2320  002542  0E01               	movlw	STR_15& (0+255)
  2321  002544  6EE6               	movwf	postinc1,c
  2322  002546  0E67               	movlw	_V& (0+255)
  2323  002548  0F05               	addlw	5
  2324  00254A  6EE6               	movwf	postinc1,c
  2325  00254C  0E0A               	movlw	10
  2326  00254E  6EE6               	movwf	postinc1,c
  2327  002550  ECD7  F026         	call	_sprintf	;wreg free
  2328                           
  2329                           ; BSR set to: 0
  2330                           ;main.c: 500:   V.buf[16] = 0;
  2331  002554  6B7C               	clrf	(_V+21)& (0+255),b
  2332                           
  2333                           ; BSR set to: 0
  2334                           ;main.c: 501:   wait_lcd_done();
  2335  002556  EC01  F030         	call	_wait_lcd_done	;wreg free
  2336                           
  2337                           ; BSR set to: 0
  2338                           ;main.c: 502:   if (mode != UI_STATE_LOG)
  2339                           ;stkvar	_mode @ sp[(-1)+0]
  2340  00255A  0EFF               	movlw	-1
  2341  00255C  006F FF8C  F03B    	movff	plusw1,btemp
  2342  002562  0E03               	movlw	3
  2343  002564  183B               	xorwf	btemp,w,c
  2344  002566  B4D8               	btfsc	status,2,c
  2345  002568  D009               	goto	l8447
  2346                           
  2347                           ; BSR set to: 0
  2348                           ;main.c: 503:    eaDogM_WriteStringAtPos(1, 0, V.buf);
  2349  00256A  0E67               	movlw	_V& (0+255)
  2350  00256C  0F05               	addlw	5
  2351  00256E  6EE6               	movwf	postinc1,c
  2352  002570  0E00               	movlw	0
  2353  002572  6EE6               	movwf	postinc1,c
  2354  002574  0E01               	movlw	1
  2355  002576  6EE6               	movwf	postinc1,c
  2356  002578  EC5B  F02D         	call	_eaDogM_WriteStringAtPos	;wreg free
  2357  00257C                     l8447:
  2358  00257C  92BE               	bcf	16318,1,c	;volatile
  2359  00257E  D7B7               	goto	l8435
  2360  002580                     __end_of_main:
  2361                           	opt callstack 0
  2362                           
  2363 ;; *************** function _t_protocol *****************
  2364 ;; Defined at:
  2365 ;;		line 302 in file "gemsecs.c"
  2366 ;; Parameters:    Size  Location     Type
  2367 ;;  t_link          1  [STACK] PTR enum E16163
  2368 ;;		 -> V(89), 
  2369 ;; Auto vars:     Size  Location     Type
  2370 ;;  rxData          1  [STACK] unsigned char 
  2371 ;; Return value:  Size  Location     Type
  2372 ;;                  1  [STACK] enum E16903
  2373 ;; Registers used:
  2374 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2384 ;;Total ram usage:        0 bytes
  2385 ;; Hardware stack levels used:    1
  2386 ;; Hardware stack levels required when called:    5
  2387 ;; This function calls:
  2388 ;;		_StartTimer
  2389 ;;		_TimerDone
  2390 ;;		_UART1_Read
  2391 ;;		_UART1_Write
  2392 ;;		_UART1_is_rx_ready
  2393 ;;		_UART1_put_buffer
  2394 ;;		_secs_II_message
  2395 ;;		_secs_send
  2396 ;; This function is called by:
  2397 ;;		_main
  2398 ;; This function uses a reentrant model
  2399 ;;
  2400                           
  2401                           	psect	text1
  2402  003E16                     __ptext1:
  2403                           	opt callstack 0
  2404  003E16                     _t_protocol:
  2405                           	opt callstack 0
  2406                           
  2407                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2408  003E16  52E6               	movf	postinc1,f,c
  2409                           
  2410                           ;gemsecs.c: 302: LINK_STATES t_protocol(LINK_STATES * t_link);gemsecs.c: 303: {;gemsecs.
      +                          c: 304:  uint8_t rxData;;gemsecs.c: 305:  static uint8_t retry, requeue = 0;;gemsecs.c: 
      +                          306:  static response_type block;;gemsecs.c: 308:  switch (*t_link) {
  2411                           
  2412                           ;incstack = 0
  2413  003E18  D10D               	goto	l8243
  2414  003E1A                     l1634:
  2415                           
  2416                           ;gemsecs.c: 310:   V.error = LINK_ERROR_NONE;
  2417  003E1A  0100               	movlb	0	; () banked
  2418  003E1C  6BB6               	clrf	(_V+79)& (0+255),b
  2419                           
  2420                           ; BSR set to: 0
  2421                           ;gemsecs.c: 311:   retry = 3;
  2422  003E1E  0E03               	movlw	3
  2423  003E20  6E2B               	movwf	t_protocol@retry,c
  2424                           
  2425                           ; BSR set to: 0
  2426                           ;gemsecs.c: 312:   UART1_Write(0x05);
  2427  003E22  0E05               	movlw	5
  2428  003E24  6EE6               	movwf	postinc1,c
  2429  003E26  EC8F  F02C         	call	_UART1_Write	;wreg free
  2430                           
  2431                           ; BSR set to: 57
  2432                           ;gemsecs.c: 313:   StartTimer(TMR_T2, 2000);
  2433  003E2A  0ED0               	movlw	208
  2434  003E2C  6EE6               	movwf	postinc1,c
  2435  003E2E  0E07               	movlw	7
  2436  003E30  6EE6               	movwf	postinc1,c
  2437  003E32  0E02               	movlw	2
  2438  003E34  6EE6               	movwf	postinc1,c
  2439  003E36  EC0B  F02D         	call	_StartTimer	;wreg free
  2440                           
  2441                           ;gemsecs.c: 314:   *t_link = LINK_STATE_ENQ;
  2442                           ;stkvar	_t_link @ sp[(-1)+-1]
  2443  003E3A  0EFE               	movlw	-2
  2444  003E3C  50E3               	movf	plusw1,w,c
  2445  003E3E  6ED9               	movwf	fsr2l,c
  2446  003E40  6ADA               	clrf	fsr2h,c
  2447  003E42  0E01               	movlw	1
  2448  003E44  D0F5               	goto	L5
  2449  003E46                     l8159:
  2450                           
  2451                           ;gemsecs.c: 321:   if (TimerDone(TMR_T2)) {
  2452  003E46  0E02               	movlw	2
  2453  003E48  6EE6               	movwf	postinc1,c
  2454  003E4A  EC7D  F02F         	call	_TimerDone	;wreg free
  2455  003E4E  503B               	movf	btemp,w,c
  2456  003E50  B4D8               	btfsc	status,2,c
  2457  003E52  D01A               	goto	l8169
  2458                           
  2459                           ;gemsecs.c: 322:    if (!retry--) {
  2460  003E54  062B               	decf	t_protocol@retry,f,c
  2461  003E56  282B               	incf	t_protocol@retry,w,c
  2462  003E58  A4D8               	btfss	status,2,c
  2463  003E5A  D00D               	goto	l8167
  2464                           
  2465                           ;gemsecs.c: 323:     V.error = LINK_ERROR_T2;
  2466  003E5C  0E02               	movlw	2
  2467  003E5E  0100               	movlb	0	; () banked
  2468  003E60  6FB6               	movwf	(_V+79)& (0+255),b
  2469                           
  2470                           ;gemsecs.c: 324:     V.failed_send = 1;
  2471  003E62  51BD               	movf	(_V+86)& (0+255),w,b
  2472  003E64  0B87               	andlw	-121
  2473  003E66  0908               	iorlw	8
  2474  003E68  6FBD               	movwf	(_V+86)& (0+255),b
  2475                           
  2476                           ; BSR set to: 0
  2477                           ;gemsecs.c: 325:     *t_link = LINK_STATE_NAK;
  2478                           ;stkvar	_t_link @ sp[(-1)+-1]
  2479  003E6A  0EFE               	movlw	-2
  2480  003E6C  50E3               	movf	plusw1,w,c
  2481  003E6E  6ED9               	movwf	fsr2l,c
  2482  003E70  6ADA               	clrf	fsr2h,c
  2483  003E72  0E05               	movlw	5
  2484  003E74  D0DD               	goto	L5
  2485  003E76                     l8167:
  2486                           
  2487                           ;gemsecs.c: 327:     StartTimer(TMR_T2, 2000);
  2488  003E76  0ED0               	movlw	208
  2489  003E78  6EE6               	movwf	postinc1,c
  2490  003E7A  0E07               	movlw	7
  2491  003E7C  6EE6               	movwf	postinc1,c
  2492  003E7E  0E02               	movlw	2
  2493  003E80  6EE6               	movwf	postinc1,c
  2494  003E82  EC0B  F02D         	call	_StartTimer	;wreg free
  2495  003E86  D0F7               	goto	l8245
  2496  003E88                     l8169:
  2497                           
  2498                           ;gemsecs.c: 330:    if (UART1_is_rx_ready()) {
  2499  003E88  ECBB  F030         	call	_UART1_is_rx_ready	;wreg free
  2500  003E8C  503B               	movf	btemp,w,c
  2501  003E8E  B4D8               	btfsc	status,2,c
  2502  003E90  D0F2               	goto	l8245
  2503                           
  2504                           ;gemsecs.c: 331:     rxData = UART1_Read();
  2505  003E92  ECCD  F02C         	call	_UART1_Read	;wreg free
  2506                           
  2507                           ;stkvar	_rxData @ sp[(-1)+0]
  2508  003E96  0EFF               	movlw	-1
  2509  003E98  0060  F0EF  FFE3   	movff	btemp,plusw1
  2510                           
  2511                           ; BSR set to: 57
  2512                           ;gemsecs.c: 332:     if (rxData == 0x04) {
  2513                           ;stkvar	_rxData @ sp[(-1)+0]
  2514  003E9E  0EFF               	movlw	-1
  2515  003EA0  006F FF8C  F03B    	movff	plusw1,btemp
  2516  003EA6  0E04               	movlw	4
  2517  003EA8  183B               	xorwf	btemp,w,c
  2518  003EAA  A4D8               	btfss	status,2,c
  2519  003EAC  D00E               	goto	l8179
  2520                           
  2521                           ; BSR set to: 57
  2522                           ;gemsecs.c: 333:      StartTimer(TMR_T3, 5000);
  2523  003EAE  0E88               	movlw	136
  2524  003EB0  6EE6               	movwf	postinc1,c
  2525  003EB2  0E13               	movlw	19
  2526  003EB4  6EE6               	movwf	postinc1,c
  2527  003EB6  0E03               	movlw	3
  2528  003EB8  6EE6               	movwf	postinc1,c
  2529  003EBA  EC0B  F02D         	call	_StartTimer	;wreg free
  2530                           
  2531                           ;gemsecs.c: 334:      *t_link = LINK_STATE_EOT;
  2532                           ;stkvar	_t_link @ sp[(-1)+-1]
  2533  003EBE  0EFE               	movlw	-2
  2534  003EC0  50E3               	movf	plusw1,w,c
  2535  003EC2  6ED9               	movwf	fsr2l,c
  2536  003EC4  6ADA               	clrf	fsr2h,c
  2537  003EC6  0E02               	movlw	2
  2538  003EC8  6EDF               	movwf	indf2,c
  2539  003ECA                     l8179:
  2540                           
  2541                           ;gemsecs.c: 336:     if (rxData == 0x05) {
  2542                           ;stkvar	_rxData @ sp[(-1)+0]
  2543  003ECA  0EFF               	movlw	-1
  2544  003ECC  006F FF8C  F03B    	movff	plusw1,btemp
  2545  003ED2  0E05               	movlw	5
  2546  003ED4  183B               	xorwf	btemp,w,c
  2547  003ED6  A4D8               	btfss	status,2,c
  2548  003ED8  D0CE               	goto	l8245
  2549                           
  2550                           ;gemsecs.c: 337:      UART1_put_buffer(0x04);
  2551  003EDA  0E04               	movlw	4
  2552  003EDC  6EE6               	movwf	postinc1,c
  2553  003EDE  ECB2  F02D         	call	_UART1_put_buffer	;wreg free
  2554  003EE2                     l8183:
  2555                           
  2556                           ;gemsecs.c: 338:      *t_link = LINK_STATE_DONE;
  2557                           ;stkvar	_t_link @ sp[(-1)+-1]
  2558  003EE2  0EFE               	movlw	-2
  2559  003EE4  50E3               	movf	plusw1,w,c
  2560  003EE6  6ED9               	movwf	fsr2l,c
  2561  003EE8  6ADA               	clrf	fsr2h,c
  2562  003EEA  0E04               	movlw	4
  2563  003EEC  D0A1               	goto	L5
  2564  003EEE                     l8185:
  2565                           
  2566                           ;gemsecs.c: 344:   if (!requeue)
  2567  003EEE  502A               	movf	t_protocol@requeue,w,c
  2568  003EF0  A4D8               	btfss	status,2,c
  2569  003EF2  D010               	goto	l8189
  2570                           
  2571                           ;gemsecs.c: 345:    block = secs_II_message(V.stream, V.function);
  2572  003EF4  0100               	movlb	0	; () banked
  2573  003EF6  51B5               	movf	(_V+78)& (0+255),w,b
  2574  003EF8  6EE6               	movwf	postinc1,c
  2575  003EFA  51B4               	movf	(_V+77)& (0+255),w,b
  2576  003EFC  6EE6               	movwf	postinc1,c
  2577  003EFE  EC78  F021         	call	_secs_II_message	;wreg free
  2578  003F02  EE20  F0E5         	lfsr	2,t_protocol@block
  2579  003F06  0E06               	movlw	6
  2580  003F08                     u5061:
  2581  003F08  52E5               	movf	postdec1,f,c
  2582  003F0A  006F FF9F FFDB     	movff	indf1,plusw2
  2583  003F10  06E8               	decf	wreg,f,c
  2584  003F12  E2FA               	bc	u5061
  2585  003F14                     l8189:
  2586                           
  2587                           ;gemsecs.c: 347:   if (V.abort == LINK_ERROR_ABORT) {
  2588  003F14  0E07               	movlw	7
  2589  003F16  0100               	movlb	0	; () banked
  2590  003F18  19B7               	xorwf	(_V+80)& (0+255),w,b
  2591  003F1A  A4D8               	btfss	status,2,c
  2592  003F1C  D019               	goto	l8197
  2593                           
  2594                           ; BSR set to: 0
  2595                           ;gemsecs.c: 348:    secs_send((uint8_t*) block.header, block.length, 0, 1);
  2596  003F1E  0E01               	movlw	1
  2597  003F20  6EE6               	movwf	postinc1,c
  2598  003F22  0E00               	movlw	0
  2599  003F24  6EE6               	movwf	postinc1,c
  2600  003F26  51E7               	movf	(t_protocol@block+2)& (0+255),w,b
  2601  003F28  6EE6               	movwf	postinc1,c
  2602  003F2A  0060  F397  FFE6   	movff	t_protocol@block,postinc1
  2603  003F30  0060  F39B  FFE6   	movff	t_protocol@block+1,postinc1
  2604  003F36  EC44  F020         	call	_secs_send	;wreg free
  2605                           
  2606                           ;gemsecs.c: 349:    V.failed_send = 2;
  2607  003F3A  0100               	movlb	0	; () banked
  2608  003F3C  51BD               	movf	(_V+86)& (0+255),w,b
  2609  003F3E  0B87               	andlw	-121
  2610  003F40  0910               	iorlw	16
  2611  003F42  6FBD               	movwf	(_V+86)& (0+255),b
  2612                           
  2613                           ; BSR set to: 0
  2614                           ;gemsecs.c: 350:    *t_link = LINK_STATE_ERROR;
  2615                           ;stkvar	_t_link @ sp[(-1)+-1]
  2616  003F44  0EFE               	movlw	-2
  2617  003F46  50E3               	movf	plusw1,w,c
  2618  003F48  6ED9               	movwf	fsr2l,c
  2619  003F4A  6ADA               	clrf	fsr2h,c
  2620  003F4C  0E06               	movlw	6
  2621  003F4E  D070               	goto	L5
  2622  003F50                     l8197:
  2623                           
  2624                           ; BSR set to: 0
  2625                           ;gemsecs.c: 352:    if (!requeue) {
  2626  003F50  502A               	movf	t_protocol@requeue,w,c
  2627  003F52  A4D8               	btfss	status,2,c
  2628  003F54  D014               	goto	l1648
  2629                           
  2630                           ; BSR set to: 0
  2631                           ;gemsecs.c: 353:     secs_send((uint8_t*) block.header, block.length, 0, 1);
  2632  003F56  0E01               	movlw	1
  2633  003F58  6EE6               	movwf	postinc1,c
  2634  003F5A  0E00               	movlw	0
  2635  003F5C  6EE6               	movwf	postinc1,c
  2636  003F5E  51E7               	movf	(t_protocol@block+2)& (0+255),w,b
  2637  003F60  6EE6               	movwf	postinc1,c
  2638  003F62  0060  F397  FFE6   	movff	t_protocol@block,postinc1
  2639  003F68  0060  F39B  FFE6   	movff	t_protocol@block+1,postinc1
  2640  003F6E  EC44  F020         	call	_secs_send	;wreg free
  2641                           
  2642                           ;gemsecs.c: 354:     if (V.queue)
  2643  003F72  0100               	movlb	0	; () banked
  2644  003F74  A9BE               	btfss	(_V+87)& (0+255),4,b
  2645  003F76  D013               	goto	l8207
  2646                           
  2647                           ; BSR set to: 0
  2648                           ;gemsecs.c: 355:      requeue = 1;
  2649  003F78  0E01               	movlw	1
  2650  003F7A  6E2A               	movwf	t_protocol@requeue,c
  2651  003F7C  D010               	goto	l8207
  2652  003F7E                     l1648:
  2653                           
  2654                           ; BSR set to: 0
  2655                           ;gemsecs.c: 357:     requeue = 0;
  2656  003F7E  6A2A               	clrf	t_protocol@requeue,c
  2657                           
  2658                           ;gemsecs.c: 358:     V.queue = 0;
  2659  003F80  99BE               	bcf	(_V+87)& (0+255),4,b
  2660                           
  2661                           ; BSR set to: 0
  2662                           ;gemsecs.c: 359:     secs_send((uint8_t*) block.reply, block.reply_length, 0, 1);
  2663  003F82  0E01               	movlw	1
  2664  003F84  6EE6               	movwf	postinc1,c
  2665  003F86  0E00               	movlw	0
  2666  003F88  6EE6               	movwf	postinc1,c
  2667  003F8A  51EA               	movf	(t_protocol@block+5)& (0+255),w,b
  2668  003F8C  6EE6               	movwf	postinc1,c
  2669  003F8E  0060  F3A3  FFE6   	movff	t_protocol@block+3,postinc1
  2670  003F94  0060  F3A7  FFE6   	movff	t_protocol@block+4,postinc1
  2671  003F9A  EC44  F020         	call	_secs_send	;wreg free
  2672  003F9E                     l8207:
  2673                           
  2674                           ;gemsecs.c: 361:    if (V.error == LINK_ERROR_NONE) {
  2675  003F9E  0100               	movlb	0	; () banked
  2676  003FA0  51B6               	movf	(_V+79)& (0+255),w,b
  2677  003FA2  A4D8               	btfss	status,2,c
  2678  003FA4  D006               	goto	l8211
  2679                           
  2680                           ; BSR set to: 0
  2681                           ;gemsecs.c: 362:     *t_link = LINK_STATE_ACK;
  2682                           ;stkvar	_t_link @ sp[(-1)+-1]
  2683  003FA6  0EFE               	movlw	-2
  2684  003FA8  50E3               	movf	plusw1,w,c
  2685  003FAA  6ED9               	movwf	fsr2l,c
  2686  003FAC  6ADA               	clrf	fsr2h,c
  2687  003FAE  0E03               	movlw	3
  2688  003FB0  D03F               	goto	L5
  2689  003FB2                     l8211:
  2690                           
  2691                           ; BSR set to: 0
  2692                           ;gemsecs.c: 364:     V.failed_send = 3;
  2693  003FB2  51BD               	movf	(_V+86)& (0+255),w,b
  2694  003FB4  0B87               	andlw	-121
  2695  003FB6  0918               	iorlw	24
  2696  003FB8  D7C4               	goto	L6
  2697  003FBA                     l8215:
  2698                           
  2699                           ;gemsecs.c: 374:   if (TimerDone(TMR_T3)) {
  2700  003FBA  0E03               	movlw	3
  2701  003FBC  6EE6               	movwf	postinc1,c
  2702  003FBE  EC7D  F02F         	call	_TimerDone	;wreg free
  2703  003FC2  503B               	movf	btemp,w,c
  2704  003FC4  B4D8               	btfsc	status,2,c
  2705  003FC6  D007               	goto	l8221
  2706                           
  2707                           ;gemsecs.c: 375:    V.error = LINK_ERROR_T3;
  2708  003FC8  0E03               	movlw	3
  2709  003FCA  0100               	movlb	0	; () banked
  2710  003FCC  6FB6               	movwf	(_V+79)& (0+255),b
  2711                           
  2712                           ;gemsecs.c: 376:    V.failed_send = 4;
  2713  003FCE  51BD               	movf	(_V+86)& (0+255),w,b
  2714  003FD0  0B87               	andlw	-121
  2715  003FD2  0920               	iorlw	32
  2716  003FD4  D749               	goto	L7
  2717  003FD6                     l8221:
  2718                           
  2719                           ;gemsecs.c: 379:    if (UART1_is_rx_ready()) {
  2720  003FD6  ECBB  F030         	call	_UART1_is_rx_ready	;wreg free
  2721  003FDA  503B               	movf	btemp,w,c
  2722  003FDC  B4D8               	btfsc	status,2,c
  2723  003FDE  D04B               	goto	l8245
  2724                           
  2725                           ;gemsecs.c: 380:     rxData = UART1_Read();
  2726  003FE0  ECCD  F02C         	call	_UART1_Read	;wreg free
  2727                           
  2728                           ;stkvar	_rxData @ sp[(-1)+0]
  2729  003FE4  0EFF               	movlw	-1
  2730  003FE6  0060  F0EF  FFE3   	movff	btemp,plusw1
  2731                           
  2732                           ; BSR set to: 57
  2733                           ;gemsecs.c: 381:     if (rxData == 0x06) {
  2734                           ;stkvar	_rxData @ sp[(-1)+0]
  2735  003FEC  0EFF               	movlw	-1
  2736  003FEE  006F FF8C  F03B    	movff	plusw1,btemp
  2737  003FF4  0E06               	movlw	6
  2738  003FF6  183B               	xorwf	btemp,w,c
  2739  003FF8  A4D8               	btfss	status,2,c
  2740  003FFA  D03D               	goto	l8245
  2741                           
  2742                           ; BSR set to: 57
  2743                           ;gemsecs.c: 382:      V.failed_send = 0;
  2744  003FFC  0E87               	movlw	-121
  2745  003FFE  0100               	movlb	0	; () banked
  2746  004000  17BD               	andwf	(_V+86)& (0+255),f,b
  2747  004002  D76F               	goto	l8183
  2748  004004                     l8231:
  2749                           
  2750                           ;gemsecs.c: 389:   *t_link = LINK_STATE_ERROR;
  2751                           ;stkvar	_t_link @ sp[(-1)+-1]
  2752  004004  0EFE               	movlw	-2
  2753  004006  50E3               	movf	plusw1,w,c
  2754  004008  6ED9               	movwf	fsr2l,c
  2755  00400A  6ADA               	clrf	fsr2h,c
  2756  00400C  0E06               	movlw	6
  2757  00400E  6EDF               	movwf	indf2,c
  2758                           
  2759                           ;gemsecs.c: 390:   while ((uart1RxCount)) {
  2760  004010  D002               	goto	l8235
  2761  004012                     l8233:
  2762                           
  2763                           ;gemsecs.c: 391:    UART1_Read();
  2764  004012  ECCD  F02C         	call	_UART1_Read	;wreg free
  2765  004016                     l8235:
  2766                           
  2767                           ;gemsecs.c: 390:   while ((uart1RxCount)) {
  2768  004016  5035               	movf	_uart1RxCount,w,c	;volatile
  2769  004018  B4D8               	btfsc	status,2,c
  2770  00401A  D02D               	goto	l8245
  2771  00401C  D7FA               	goto	l8233
  2772  00401E                     l8237:
  2773                           
  2774                           ;gemsecs.c: 397:   V.failed_send = 0;
  2775  00401E  0E87               	movlw	-121
  2776  004020  0100               	movlb	0	; () banked
  2777  004022  17BD               	andwf	(_V+86)& (0+255),f,b
  2778                           
  2779                           ;gemsecs.c: 398:   break;
  2780  004024  D028               	goto	l8245
  2781  004026                     l8239:
  2782                           
  2783                           ;gemsecs.c: 400:   *t_link = LINK_STATE_IDLE;
  2784                           ;stkvar	_t_link @ sp[(-1)+-1]
  2785  004026  0EFE               	movlw	-2
  2786  004028  50E3               	movf	plusw1,w,c
  2787  00402A  6ED9               	movwf	fsr2l,c
  2788  00402C  6ADA               	clrf	fsr2h,c
  2789  00402E  0E00               	movlw	0
  2790  004030                     L5:
  2791  004030  6EDF               	movwf	indf2,c
  2792                           
  2793                           ;gemsecs.c: 402:   break;
  2794  004032  D021               	goto	l8245
  2795  004034                     l8243:
  2796                           
  2797                           ;stkvar	_t_link @ sp[(-1)+-1]
  2798  004034  0EFE               	movlw	-2
  2799  004036  50E3               	movf	plusw1,w,c
  2800  004038  6ED9               	movwf	fsr2l,c
  2801  00403A  6ADA               	clrf	fsr2h,c
  2802  00403C  50DF               	movf	indf2,w,c
  2803  00403E  6E45               	movwf	btemp+10,c
  2804  004040  6A46               	clrf	btemp+11,c
  2805                           
  2806                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2807                           ; Switch size 1, requested type "simple"
  2808                           ; Number of cases is 1, Range of values is 0 to 0
  2809                           ; switch strategies available:
  2810                           ; Name         Instructions Cycles
  2811                           ; simple_byte            4     3 (average)
  2812                           ;	Chosen strategy is simple_byte
  2813  004042  5046               	movf	btemp+11,w,c
  2814  004044  0A00               	xorlw	0	; case 0
  2815  004046  A4D8               	btfss	status,2,c
  2816  004048  D7EE               	goto	l8239
  2817                           
  2818                           ; Switch size 1, requested type "simple"
  2819                           ; Number of cases is 7, Range of values is 0 to 6
  2820                           ; switch strategies available:
  2821                           ; Name         Instructions Cycles
  2822                           ; simple_byte           22    12 (average)
  2823                           ;	Chosen strategy is simple_byte
  2824  00404A  5045               	movf	btemp+10,w,c
  2825  00404C  0A00               	xorlw	0	; case 0
  2826  00404E  B4D8               	btfsc	status,2,c
  2827  004050  D6E4               	goto	l1634
  2828  004052  0A01               	xorlw	1	; case 1
  2829  004054  B4D8               	btfsc	status,2,c
  2830  004056  D6F7               	goto	l8159
  2831  004058  0A03               	xorlw	3	; case 2
  2832  00405A  B4D8               	btfsc	status,2,c
  2833  00405C  D748               	goto	l8185
  2834  00405E  0A01               	xorlw	1	; case 3
  2835  004060  B4D8               	btfsc	status,2,c
  2836  004062  D7AB               	goto	l8215
  2837  004064  0A07               	xorlw	7	; case 4
  2838  004066  B4D8               	btfsc	status,2,c
  2839  004068  D7DA               	goto	l8237
  2840  00406A  0A01               	xorlw	1	; case 5
  2841  00406C  B4D8               	btfsc	status,2,c
  2842  00406E  D7CA               	goto	l8231
  2843  004070  0A03               	xorlw	3	; case 6
  2844  004072  A4D8               	btfss	status,2,c
  2845  004074  D7D8               	goto	l8239
  2846  004076                     l8245:
  2847                           
  2848                           ;gemsecs.c: 405:  return *t_link;
  2849                           ;stkvar	_t_link @ sp[(-1)+-1]
  2850  004076  0EFE               	movlw	-2
  2851  004078  50E3               	movf	plusw1,w,c
  2852  00407A  6ED9               	movwf	fsr2l,c
  2853  00407C  6ADA               	clrf	fsr2h,c
  2854  00407E  50DF               	movf	indf2,w,c
  2855  004080  6E3B               	movwf	btemp,c
  2856                           
  2857                           ; _t_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  2858  004082  52E5               	movf	postdec1,f,c
  2859  004084  52E5               	movf	postdec1,f,c
  2860  004086  0012               	return		;funcret
  2861  004088                     __end_of_t_protocol:
  2862                           	opt callstack 0
  2863                           
  2864 ;; *************** function _secs_send *****************
  2865 ;; Defined at:
  2866 ;;		line 409 in file "gemsecs.c"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;  byte_block      2  [STACK] PTR unsigned char 
  2869 ;;		 -> H53(56), H24(27), H17(20), H14(17), 
  2870 ;;		 -> H13(16), H12(30), H10(65), 
  2871 ;;  length          1  [STACK] unsigned char 
  2872 ;;  fake            1  [STACK] _Bool 
  2873 ;;  s_uart          1  [STACK] unsigned char 
  2874 ;; Auto vars:     Size  Location     Type
  2875 ;;  k               2  [STACK] PTR unsigned char 
  2876 ;;		 -> H53(56), H24(27), H17(20), H14(17), 
  2877 ;;		 -> H13(16), H12(30), H10(65), 
  2878 ;;  checksum        2  [STACK] unsigned short 
  2879 ;;  i               1  [STACK] unsigned char 
  2880 ;; Return value:  Size  Location     Type
  2881 ;;                  1  [STACK] _Bool 
  2882 ;; Registers used:
  2883 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11
  2884 ;; Tracked objects:
  2885 ;;		On entry : 3F/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2893 ;;Total ram usage:        0 bytes
  2894 ;; Hardware stack levels used:    1
  2895 ;; Hardware stack levels required when called:    4
  2896 ;; This function calls:
  2897 ;;		_UART1_Write
  2898 ;;		_UART1_is_tx_ready
  2899 ;;		_UART1_put_buffer
  2900 ;;		_UART2_Write
  2901 ;;		_UART2_is_tx_ready
  2902 ;;		_UART2_put_buffer
  2903 ;;		_block_checksum
  2904 ;; This function is called by:
  2905 ;;		_t_protocol
  2906 ;; This function uses a reentrant model
  2907 ;;
  2908                           
  2909                           	psect	text2
  2910  004088                     __ptext2:
  2911                           	opt callstack 0
  2912  004088                     _secs_send:
  2913                           	opt callstack 0
  2914                           
  2915                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2916  004088  0E05               	movlw	5
  2917  00408A  26E1               	addwf	fsr1l,f,c
  2918  00408C  0E00               	movlw	0
  2919  00408E  22E2               	addwfc	fsr1h,f,c
  2920                           
  2921                           ;gemsecs.c: 409: _Bool secs_send(uint8_t *byte_block, uint8_t length, _Bool fake, uint8_
      +                          t s_uart);gemsecs.c: 410: {;gemsecs.c: 411:  uint8_t i, *k;;gemsecs.c: 412:  uint16_t ch
      +                          ecksum;;gemsecs.c: 414:  k = (uint8_t *) byte_block;
  2922                           ;stkvar	_byte_block @ sp[(-5)+-2]
  2923                           
  2924                           ;incstack = 0
  2925  004090  0EF9               	movlw	-7
  2926  004092  006F FF8C  F045    	movff	plusw1,btemp+10
  2927  004098  0EFA               	movlw	-6
  2928  00409A  006F FF8C  F046    	movff	plusw1,btemp+11
  2929                           
  2930                           ;stkvar	_k @ sp[(-5)+0]
  2931  0040A0  0EFC               	movlw	-4
  2932  0040A2  0060  F11B  FFE3   	movff	btemp+11,plusw1
  2933  0040A8  0EFB               	movlw	-5
  2934  0040AA  0060  F117  FFE3   	movff	btemp+10,plusw1
  2935                           
  2936                           ;gemsecs.c: 416:  ++V.ticks;
  2937  0040B0  0E01               	movlw	1
  2938  0040B2  0100               	movlb	0	; () banked
  2939  0040B4  27AC               	addwf	(_V+69)& (0+255),f,b
  2940  0040B6  0E00               	movlw	0
  2941  0040B8  23AD               	addwfc	(_V+70)& (0+255),f,b
  2942  0040BA  23AE               	addwfc	(_V+71)& (0+255),f,b
  2943  0040BC  23AF               	addwfc	(_V+72)& (0+255),f,b
  2944                           
  2945                           ; BSR set to: 0
  2946                           ;gemsecs.c: 417:  V.error = LINK_ERROR_NONE;
  2947  0040BE  6BB6               	clrf	(_V+79)& (0+255),b
  2948                           
  2949                           ; BSR set to: 0
  2950                           ;gemsecs.c: 418:  if ((length - 3) != k[length - 1]) {
  2951                           ;stkvar	_length @ sp[(-5)+-3]
  2952  0040C0  0EF8               	movlw	-8
  2953  0040C2  50E3               	movf	plusw1,w,c
  2954  0040C4  6E45               	movwf	btemp+10,c
  2955  0040C6  6A46               	clrf	btemp+11,c
  2956                           
  2957                           ;stkvar	_k @ sp[(-5)+0]
  2958  0040C8  0EFB               	movlw	-5
  2959  0040CA  50E3               	movf	plusw1,w,c
  2960  0040CC  2645               	addwf	btemp+10,f,c
  2961  0040CE  0EFC               	movlw	-4
  2962  0040D0  50E3               	movf	plusw1,w,c
  2963  0040D2  2246               	addwfc	btemp+11,f,c
  2964  0040D4  0EFF               	movlw	255
  2965  0040D6  2445               	addwf	btemp+10,w,c
  2966  0040D8  6ED9               	movwf	fsr2l,c
  2967  0040DA  0EFF               	movlw	255
  2968  0040DC  2046               	addwfc	btemp+11,w,c
  2969  0040DE  6EDA               	movwf	fsr2h,c
  2970  0040E0  50DF               	movf	indf2,w,c
  2971  0040E2  6E45               	movwf	btemp+10,c
  2972  0040E4  6A46               	clrf	btemp+11,c
  2973  0040E6  0EFD               	movlw	253
  2974  0040E8  6E43               	movwf	btemp+8,c
  2975  0040EA  0EFF               	movlw	255
  2976  0040EC  6E44               	movwf	btemp+9,c
  2977                           
  2978                           ;stkvar	_length @ sp[(-5)+-3]
  2979  0040EE  0EF8               	movlw	-8
  2980  0040F0  50E3               	movf	plusw1,w,c
  2981  0040F2  6E41               	movwf	btemp+6,c
  2982  0040F4  6A42               	clrf	btemp+7,c
  2983  0040F6  5043               	movf	btemp+8,w,c
  2984  0040F8  2641               	addwf	btemp+6,f,c
  2985  0040FA  5044               	movf	btemp+9,w,c
  2986  0040FC  2242               	addwfc	btemp+7,f,c
  2987  0040FE  5045               	movf	btemp+10,w,c
  2988  004100  1841               	xorwf	btemp+6,w,c
  2989  004102  E104               	bnz	u4910
  2990  004104  5046               	movf	btemp+11,w,c
  2991  004106  1842               	xorwf	btemp+7,w,c
  2992  004108  B4D8               	btfsc	status,2,c
  2993  00410A  D003               	goto	l7979
  2994  00410C                     u4910:
  2995                           
  2996                           ; BSR set to: 0
  2997                           ;gemsecs.c: 419:   V.error = LINK_ERROR_SEND;
  2998  00410C  0E08               	movlw	8
  2999  00410E  6FB6               	movwf	(_V+79)& (0+255),b
  3000  004110  D0EA               	goto	l1669
  3001  004112                     l7979:
  3002                           
  3003                           ; BSR set to: 0
  3004                           ;gemsecs.c: 428:  checksum = block_checksum(&k[2], length - 3);
  3005  004112  0EFD               	movlw	253
  3006  004114  6E45               	movwf	btemp+10,c
  3007  004116  0EFF               	movlw	255
  3008  004118  6E46               	movwf	btemp+11,c
  3009                           
  3010                           ;stkvar	_length @ sp[(-5)+-3]
  3011  00411A  0EF8               	movlw	-8
  3012  00411C  50E3               	movf	plusw1,w,c
  3013  00411E  6E43               	movwf	btemp+8,c
  3014  004120  6A44               	clrf	btemp+9,c
  3015  004122  5045               	movf	btemp+10,w,c
  3016  004124  2643               	addwf	btemp+8,f,c
  3017  004126  5046               	movf	btemp+11,w,c
  3018  004128  2244               	addwfc	btemp+9,f,c
  3019  00412A  0060  F10F  FFE6   	movff	btemp+8,postinc1
  3020  004130  0060  F113  FFE6   	movff	btemp+9,postinc1
  3021                           
  3022                           ;stkvar	_k @ sp[(-7)+0]
  3023  004136  0EF9               	movlw	-7
  3024  004138  50E3               	movf	plusw1,w,c
  3025  00413A  0F02               	addlw	2
  3026  00413C  6E45               	movwf	btemp+10,c
  3027  00413E  0EFA               	movlw	-6
  3028  004140  006F FF8C  F046    	movff	plusw1,btemp+11
  3029  004146  0E00               	movlw	0
  3030  004148  2246               	addwfc	btemp+11,f,c
  3031  00414A  0060  F117  FFE6   	movff	btemp+10,postinc1
  3032  004150  0060  F11B  FFE6   	movff	btemp+11,postinc1
  3033  004156  EC06  F026         	call	_block_checksum	;wreg free
  3034                           
  3035                           ;stkvar	_checksum @ sp[(-5)+2]
  3036  00415A  0EFD               	movlw	-3
  3037  00415C  0060  F0EF  FFE3   	movff	btemp,plusw1
  3038  004162  0EFE               	movlw	-2
  3039  004164  0060  F0F3  FFE3   	movff	btemp+1,plusw1
  3040                           
  3041                           ;gemsecs.c: 429:  k[0] = checksum & 0xff;
  3042                           ;stkvar	_checksum @ sp[(-5)+2]
  3043                           ;stkvar	_k @ sp[(-5)+0]
  3044  00416A  0EFB               	movlw	-5
  3045  00416C  006F FF8F FFD9     	movff	plusw1,fsr2l
  3046  004172  0EFC               	movlw	-4
  3047  004174  006F FF8F FFDA     	movff	plusw1,fsr2h
  3048  00417A  0EFD               	movlw	-3
  3049  00417C  006F FF8F FFDF     	movff	plusw1,indf2
  3050                           
  3051                           ;gemsecs.c: 430:  k[1] = (checksum >> 8)&0xff;
  3052                           ;stkvar	_checksum @ sp[(-5)+2]
  3053  004182  0EFE               	movlw	254
  3054  004184  24E1               	addwf	fsr1l,w,c
  3055  004186  6ED9               	movwf	fsr2l,c
  3056  004188  0EFF               	movlw	255
  3057  00418A  20E2               	addwfc	fsr1h,w,c
  3058  00418C  6EDA               	movwf	fsr2h,c
  3059                           
  3060                           ;stkvar	_k @ sp[(-5)+0]
  3061  00418E  0EFB               	movlw	-5
  3062  004190  006F FF8C  F045    	movff	plusw1,btemp+10
  3063  004196  0EFC               	movlw	-4
  3064  004198  006F FF8C  F046    	movff	plusw1,btemp+11
  3065  00419E  0E01               	movlw	1
  3066  0041A0  2445               	addwf	btemp+10,w,c
  3067  0041A2  6EE9               	movwf	fsr0l,c
  3068  0041A4  0E00               	movlw	0
  3069  0041A6  2046               	addwfc	btemp+11,w,c
  3070  0041A8  6EEA               	movwf	fsr0h,c
  3071  0041AA  006F FF7F FFEF     	movff	indf2,indf0
  3072                           
  3073                           ;gemsecs.c: 431:  V.t_checksum = checksum;
  3074                           ;stkvar	_checksum @ sp[(-5)+2]
  3075  0041B0  0EFD               	movlw	-3
  3076  0041B2  006F FF8C  F0BB    	movff	plusw1,_V+84
  3077  0041B8  0EFE               	movlw	-2
  3078  0041BA  006F FF8C  F0BC    	movff	plusw1,_V+85
  3079                           
  3080                           ;gemsecs.c: 433:  switch (s_uart) {
  3081  0041C0  D082               	goto	l8025
  3082  0041C2                     l7987:
  3083  0041C2  ECAF  F030         	call	_UART2_is_tx_ready	;wreg free
  3084  0041C6  0E3F               	movlw	63
  3085  0041C8  643B               	cpfsgt	btemp,c
  3086  0041CA  D7FB               	goto	l7987
  3087                           
  3088                           ;gemsecs.c: 436:   for (i = length; i > 0; i--) {
  3089                           ;stkvar	_length @ sp[(-5)+-3]
  3090                           ;stkvar	_i @ sp[(-5)+4]
  3091  0041CC  0EF8               	movlw	-8
  3092  0041CE  006F FF8C  F03B    	movff	plusw1,btemp
  3093  0041D4  0EFF               	movlw	-1
  3094  0041D6  0060  F0EF  FFE3   	movff	btemp,plusw1
  3095  0041DC                     l7991:
  3096                           
  3097                           ;stkvar	_i @ sp[(-5)+4]
  3098  0041DC  0EFF               	movlw	-1
  3099  0041DE  50E3               	movf	plusw1,w,c
  3100  0041E0  B4D8               	btfsc	status,2,c
  3101  0041E2  D081               	goto	l1669
  3102                           
  3103                           ;gemsecs.c: 437:    if (fake) {
  3104                           ;stkvar	_fake @ sp[(-5)+-4]
  3105  0041E4  0EF7               	movlw	-9
  3106  0041E6  50E3               	movf	plusw1,w,c
  3107  0041E8  B4D8               	btfsc	status,2,c
  3108  0041EA  D015               	goto	l7999
  3109                           
  3110                           ;gemsecs.c: 438:     UART2_put_buffer(k[i - 1]);
  3111                           ;stkvar	_i @ sp[(-5)+4]
  3112  0041EC  0EFF               	movlw	-1
  3113  0041EE  50E3               	movf	plusw1,w,c
  3114  0041F0  6E45               	movwf	btemp+10,c
  3115  0041F2  6A46               	clrf	btemp+11,c
  3116                           
  3117                           ;stkvar	_k @ sp[(-5)+0]
  3118  0041F4  0EFB               	movlw	-5
  3119  0041F6  50E3               	movf	plusw1,w,c
  3120  0041F8  2645               	addwf	btemp+10,f,c
  3121  0041FA  0EFC               	movlw	-4
  3122  0041FC  50E3               	movf	plusw1,w,c
  3123  0041FE  2246               	addwfc	btemp+11,f,c
  3124  004200  0EFF               	movlw	255
  3125  004202  2445               	addwf	btemp+10,w,c
  3126  004204  6ED9               	movwf	fsr2l,c
  3127  004206  0EFF               	movlw	255
  3128  004208  2046               	addwfc	btemp+11,w,c
  3129  00420A  6EDA               	movwf	fsr2h,c
  3130  00420C  50DF               	movf	indf2,w,c
  3131  00420E  6EE6               	movwf	postinc1,c
  3132  004210  EC9D  F02D         	call	_UART2_put_buffer	;wreg free
  3133                           
  3134                           ;gemsecs.c: 439:    } else {
  3135  004214  D014               	goto	l8001
  3136  004216                     l7999:
  3137                           
  3138                           ;gemsecs.c: 441:     UART2_Write(k[i - 1]);
  3139                           ;stkvar	_i @ sp[(-5)+4]
  3140  004216  0EFF               	movlw	-1
  3141  004218  50E3               	movf	plusw1,w,c
  3142  00421A  6E45               	movwf	btemp+10,c
  3143  00421C  6A46               	clrf	btemp+11,c
  3144                           
  3145                           ;stkvar	_k @ sp[(-5)+0]
  3146  00421E  0EFB               	movlw	-5
  3147  004220  50E3               	movf	plusw1,w,c
  3148  004222  2645               	addwf	btemp+10,f,c
  3149  004224  0EFC               	movlw	-4
  3150  004226  50E3               	movf	plusw1,w,c
  3151  004228  2246               	addwfc	btemp+11,f,c
  3152  00422A  0EFF               	movlw	255
  3153  00422C  2445               	addwf	btemp+10,w,c
  3154  00422E  6ED9               	movwf	fsr2l,c
  3155  004230  0EFF               	movlw	255
  3156  004232  2046               	addwfc	btemp+11,w,c
  3157  004234  6EDA               	movwf	fsr2h,c
  3158  004236  50DF               	movf	indf2,w,c
  3159  004238  6EE6               	movwf	postinc1,c
  3160  00423A  EC70  F02C         	call	_UART2_Write	;wreg free
  3161  00423E                     l8001:
  3162                           
  3163                           ; BSR set to: 57
  3164                           ;gemsecs.c: 443:   }
  3165                           ;stkvar	_i @ sp[(-5)+4]
  3166  00423E  0EFF               	movlw	-1
  3167  004240  06E3               	decf	plusw1,f,c
  3168  004242  D7CC               	goto	l7991
  3169  004244                     l8005:
  3170  004244  ECB3  F030         	call	_UART1_is_tx_ready	;wreg free
  3171  004248  0E3F               	movlw	63
  3172  00424A  643B               	cpfsgt	btemp,c
  3173  00424C  D7FB               	goto	l8005
  3174                           
  3175                           ;gemsecs.c: 448:   for (i = length; i > 0; i--) {
  3176                           ;stkvar	_length @ sp[(-5)+-3]
  3177                           ;stkvar	_i @ sp[(-5)+4]
  3178  00424E  0EF8               	movlw	-8
  3179  004250  006F FF8C  F03B    	movff	plusw1,btemp
  3180  004256  0EFF               	movlw	-1
  3181  004258  0060  F0EF  FFE3   	movff	btemp,plusw1
  3182  00425E                     l8009:
  3183                           
  3184                           ;stkvar	_i @ sp[(-5)+4]
  3185  00425E  0EFF               	movlw	-1
  3186  004260  50E3               	movf	plusw1,w,c
  3187  004262  B4D8               	btfsc	status,2,c
  3188  004264  D040               	goto	l1669
  3189                           
  3190                           ;gemsecs.c: 449:    if (fake) {
  3191                           ;stkvar	_fake @ sp[(-5)+-4]
  3192  004266  0EF7               	movlw	-9
  3193  004268  50E3               	movf	plusw1,w,c
  3194  00426A  B4D8               	btfsc	status,2,c
  3195  00426C  D015               	goto	l8017
  3196                           
  3197                           ;gemsecs.c: 450:     UART1_put_buffer(k[i - 1]);
  3198                           ;stkvar	_i @ sp[(-5)+4]
  3199  00426E  0EFF               	movlw	-1
  3200  004270  50E3               	movf	plusw1,w,c
  3201  004272  6E45               	movwf	btemp+10,c
  3202  004274  6A46               	clrf	btemp+11,c
  3203                           
  3204                           ;stkvar	_k @ sp[(-5)+0]
  3205  004276  0EFB               	movlw	-5
  3206  004278  50E3               	movf	plusw1,w,c
  3207  00427A  2645               	addwf	btemp+10,f,c
  3208  00427C  0EFC               	movlw	-4
  3209  00427E  50E3               	movf	plusw1,w,c
  3210  004280  2246               	addwfc	btemp+11,f,c
  3211  004282  0EFF               	movlw	255
  3212  004284  2445               	addwf	btemp+10,w,c
  3213  004286  6ED9               	movwf	fsr2l,c
  3214  004288  0EFF               	movlw	255
  3215  00428A  2046               	addwfc	btemp+11,w,c
  3216  00428C  6EDA               	movwf	fsr2h,c
  3217  00428E  50DF               	movf	indf2,w,c
  3218  004290  6EE6               	movwf	postinc1,c
  3219  004292  ECB2  F02D         	call	_UART1_put_buffer	;wreg free
  3220                           
  3221                           ;gemsecs.c: 451:    } else {
  3222  004296  D014               	goto	l8019
  3223  004298                     l8017:
  3224                           
  3225                           ;gemsecs.c: 453:     UART1_Write(k[i - 1]);
  3226                           ;stkvar	_i @ sp[(-5)+4]
  3227  004298  0EFF               	movlw	-1
  3228  00429A  50E3               	movf	plusw1,w,c
  3229  00429C  6E45               	movwf	btemp+10,c
  3230  00429E  6A46               	clrf	btemp+11,c
  3231                           
  3232                           ;stkvar	_k @ sp[(-5)+0]
  3233  0042A0  0EFB               	movlw	-5
  3234  0042A2  50E3               	movf	plusw1,w,c
  3235  0042A4  2645               	addwf	btemp+10,f,c
  3236  0042A6  0EFC               	movlw	-4
  3237  0042A8  50E3               	movf	plusw1,w,c
  3238  0042AA  2246               	addwfc	btemp+11,f,c
  3239  0042AC  0EFF               	movlw	255
  3240  0042AE  2445               	addwf	btemp+10,w,c
  3241  0042B0  6ED9               	movwf	fsr2l,c
  3242  0042B2  0EFF               	movlw	255
  3243  0042B4  2046               	addwfc	btemp+11,w,c
  3244  0042B6  6EDA               	movwf	fsr2h,c
  3245  0042B8  50DF               	movf	indf2,w,c
  3246  0042BA  6EE6               	movwf	postinc1,c
  3247  0042BC  EC8F  F02C         	call	_UART1_Write	;wreg free
  3248  0042C0                     l8019:
  3249                           
  3250                           ; BSR set to: 57
  3251                           ;gemsecs.c: 455:   }
  3252                           ;stkvar	_i @ sp[(-5)+4]
  3253  0042C0  0EFF               	movlw	-1
  3254  0042C2  06E3               	decf	plusw1,f,c
  3255  0042C4  D7CC               	goto	l8009
  3256  0042C6                     l8025:
  3257                           
  3258                           ;stkvar	_s_uart @ sp[(-5)+-5]
  3259  0042C6  0EF6               	movlw	-10
  3260  0042C8  50E3               	movf	plusw1,w,c
  3261  0042CA  6E45               	movwf	btemp+10,c
  3262  0042CC  6A46               	clrf	btemp+11,c
  3263                           
  3264                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3265                           ; Switch size 1, requested type "simple"
  3266                           ; Number of cases is 1, Range of values is 0 to 0
  3267                           ; switch strategies available:
  3268                           ; Name         Instructions Cycles
  3269                           ; simple_byte            4     3 (average)
  3270                           ;	Chosen strategy is simple_byte
  3271  0042CE  5046               	movf	btemp+11,w,c
  3272  0042D0  0A00               	xorlw	0	; case 0
  3273  0042D2  A4D8               	btfss	status,2,c
  3274  0042D4  D7B7               	goto	l8005
  3275                           
  3276                           ; Switch size 1, requested type "simple"
  3277                           ; Number of cases is 2, Range of values is 1 to 2
  3278                           ; switch strategies available:
  3279                           ; Name         Instructions Cycles
  3280                           ; simple_byte            7     4 (average)
  3281                           ;	Chosen strategy is simple_byte
  3282  0042D6  5045               	movf	btemp+10,w,c
  3283  0042D8  0A01               	xorlw	1	; case 1
  3284  0042DA  B4D8               	btfsc	status,2,c
  3285  0042DC  D7B3               	goto	l8005
  3286  0042DE  0A03               	xorlw	3	; case 2
  3287  0042E0  B4D8               	btfsc	status,2,c
  3288  0042E2  D76F               	goto	l7987
  3289  0042E4  D7AF               	goto	l8005
  3290  0042E6                     l1669:
  3291                           
  3292                           ; _secs_send: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, arg
      +                          size = 5, vargsize = 0
  3293  0042E6  0EF6               	movlw	246
  3294  0042E8  26E1               	addwf	fsr1l,f,c
  3295  0042EA  0EFF               	movlw	255
  3296  0042EC  22E2               	addwfc	fsr1h,f,c
  3297  0042EE  0012               	return		;funcret
  3298  0042F0                     __end_of_secs_send:
  3299                           	opt callstack 0
  3300                           
  3301 ;; *************** function _block_checksum *****************
  3302 ;; Defined at:
  3303 ;;		line 18 in file "gemsecs.c"
  3304 ;; Parameters:    Size  Location     Type
  3305 ;;  byte_block      2  [STACK] PTR unsigned char 
  3306 ;;		 -> H53(56), H24(27), H17(20), H14(17), 
  3307 ;;		 -> H13(16), H12(30), H10(65), 
  3308 ;;  byte_count      2  [STACK] unsigned short 
  3309 ;; Auto vars:     Size  Location     Type
  3310 ;;  i               2  [STACK] unsigned short 
  3311 ;;  sum             2  [STACK] unsigned short 
  3312 ;; Return value:  Size  Location     Type
  3313 ;;                  2  [STACK] unsigned short 
  3314 ;; Registers used:
  3315 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  3316 ;; Tracked objects:
  3317 ;;		On entry : 3F/0
  3318 ;;		On exit  : 0/0
  3319 ;;		Unchanged: 0/0
  3320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3325 ;;Total ram usage:        0 bytes
  3326 ;; Hardware stack levels used:    1
  3327 ;; Hardware stack levels required when called:    3
  3328 ;; This function calls:
  3329 ;;		Nothing
  3330 ;; This function is called by:
  3331 ;;		_secs_send
  3332 ;; This function uses a reentrant model
  3333 ;;
  3334                           
  3335                           	psect	text3
  3336  004C0C                     __ptext3:
  3337                           	opt callstack 0
  3338  004C0C                     _block_checksum:
  3339                           	opt callstack 0
  3340                           
  3341                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3342  004C0C  52E6               	movf	postinc1,f,c
  3343  004C0E  52E6               	movf	postinc1,f,c
  3344  004C10  52E6               	movf	postinc1,f,c
  3345  004C12  52E6               	movf	postinc1,f,c
  3346                           
  3347                           ;gemsecs.c: 18: uint16_t block_checksum(uint8_t *byte_block, uint16_t byte_count);gemsec
      +                          s.c: 19: {;gemsecs.c: 20:  uint16_t sum = 0, i;
  3348                           ;stkvar	_sum @ sp[(-4)+2]
  3349                           
  3350                           ;incstack = 0
  3351  004C14  0EFE               	movlw	-2
  3352  004C16  6AE3               	clrf	plusw1,c
  3353  004C18  0EFF               	movlw	-1
  3354  004C1A  6AE3               	clrf	plusw1,c
  3355                           
  3356                           ;gemsecs.c: 22:  for (i = 0; i < byte_count; i++) {
  3357                           ;stkvar	_i @ sp[(-4)+0]
  3358  004C1C  0EFC               	movlw	-4
  3359  004C1E  6AE3               	clrf	plusw1,c
  3360  004C20  0EFD               	movlw	-3
  3361  004C22  6AE3               	clrf	plusw1,c
  3362  004C24  D039               	goto	l7887
  3363  004C26                     l7883:
  3364                           
  3365                           ;gemsecs.c: 23:   sum += byte_block[i];
  3366                           ;stkvar	_i @ sp[(-4)+0]
  3367  004C26  0EFC               	movlw	-4
  3368  004C28  006F FF8C  F045    	movff	plusw1,btemp+10
  3369  004C2E  0EFD               	movlw	-3
  3370  004C30  006F FF8C  F046    	movff	plusw1,btemp+11
  3371                           
  3372                           ;stkvar	_byte_block @ sp[(-4)+-2]
  3373  004C36  0EFA               	movlw	-6
  3374  004C38  006F FF8C  F043    	movff	plusw1,btemp+8
  3375  004C3E  0EFB               	movlw	-5
  3376  004C40  006F FF8C  F044    	movff	plusw1,btemp+9
  3377  004C46  5045               	movf	btemp+10,w,c
  3378  004C48  2443               	addwf	btemp+8,w,c
  3379  004C4A  6ED9               	movwf	fsr2l,c
  3380  004C4C  5046               	movf	btemp+11,w,c
  3381  004C4E  2044               	addwfc	btemp+9,w,c
  3382  004C50  6EDA               	movwf	fsr2h,c
  3383  004C52  50DF               	movf	indf2,w,c
  3384  004C54  6E46               	movwf	btemp+11,c
  3385                           
  3386                           ;stkvar	_sum @ sp[(-4)+2]
  3387  004C56  0EFE               	movlw	-2
  3388  004C58  50E3               	movf	plusw1,w,c
  3389  004C5A  2446               	addwf	btemp+11,w,c
  3390  004C5C  6E3B               	movwf	btemp,c
  3391  004C5E  0EFE               	movlw	-2
  3392  004C60  0060  F0EF  FFE3   	movff	btemp,plusw1
  3393  004C66  6A3B               	clrf	btemp,c
  3394  004C68  0EFF               	movlw	-1
  3395  004C6A  50E3               	movf	plusw1,w,c
  3396  004C6C  223B               	addwfc	btemp,f,c
  3397  004C6E  0EFF               	movlw	-1
  3398  004C70  0060  F0EF  FFE3   	movff	btemp,plusw1
  3399                           
  3400                           ;gemsecs.c: 24:  }
  3401                           ;stkvar	_i @ sp[(-4)+0]
  3402  004C76  0EFC               	movlw	-4
  3403  004C78  50E3               	movf	plusw1,w,c
  3404  004C7A  0F01               	addlw	1
  3405  004C7C  6E3B               	movwf	btemp,c
  3406  004C7E  0EFC               	movlw	-4
  3407  004C80  0060  F0EF  FFE3   	movff	btemp,plusw1
  3408  004C86  6A3B               	clrf	btemp,c
  3409  004C88  0EFD               	movlw	-3
  3410  004C8A  50E3               	movf	plusw1,w,c
  3411  004C8C  203B               	addwfc	btemp,w,c
  3412  004C8E  6E3B               	movwf	btemp,c
  3413  004C90  0EFD               	movlw	-3
  3414  004C92  0060  F0EF  FFE3   	movff	btemp,plusw1
  3415  004C98                     l7887:
  3416                           
  3417                           ;stkvar	_byte_count @ sp[(-4)+-4]
  3418  004C98  0EF8               	movlw	-8
  3419  004C9A  006F FF8C  F045    	movff	plusw1,btemp+10
  3420  004CA0  0EF9               	movlw	-7
  3421  004CA2  006F FF8C  F046    	movff	plusw1,btemp+11
  3422                           
  3423                           ;stkvar	_i @ sp[(-4)+0]
  3424  004CA8  0EFC               	movlw	-4
  3425  004CAA  006F FF8C  F043    	movff	plusw1,btemp+8
  3426  004CB0  0EFD               	movlw	-3
  3427  004CB2  006F FF8C  F044    	movff	plusw1,btemp+9
  3428  004CB8  5045               	movf	btemp+10,w,c
  3429  004CBA  5C43               	subwf	btemp+8,w,c
  3430  004CBC  5046               	movf	btemp+11,w,c
  3431  004CBE  5844               	subwfb	btemp+9,w,c
  3432  004CC0  A0D8               	btfss	status,0,c
  3433  004CC2  D7B1               	goto	l7883
  3434                           
  3435                           ;gemsecs.c: 25:  return sum;
  3436                           ;stkvar	_sum @ sp[(-4)+2]
  3437  004CC4  0EFE               	movlw	-2
  3438  004CC6  006F FF8C  F03B    	movff	plusw1,btemp
  3439  004CCC  0EFF               	movlw	-1
  3440  004CCE  006F FF8C  F03C    	movff	plusw1,btemp+1
  3441                           
  3442                           ; _block_checksum: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4
      +                          , argsize = 4, vargsize = 0
  3443  004CD4  0EF8               	movlw	248
  3444  004CD6  26E1               	addwf	fsr1l,f,c
  3445  004CD8  0EFF               	movlw	255
  3446  004CDA  22E2               	addwfc	fsr1h,f,c
  3447  004CDC  0012               	return		;funcret
  3448  004CDE                     __end_of_block_checksum:
  3449                           	opt callstack 0
  3450                           
  3451 ;; *************** function _UART2_put_buffer *****************
  3452 ;; Defined at:
  3453 ;;		line 257 in file "mcc_generated_files/uart2.c"
  3454 ;; Parameters:    Size  Location     Type
  3455 ;;  bufData         1  [STACK] unsigned char 
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;		None
  3458 ;; Return value:  Size  Location     Type
  3459 ;;                  1  [STACK] void 
  3460 ;; Registers used:
  3461 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3462 ;; Tracked objects:
  3463 ;;		On entry : 0/0
  3464 ;;		On exit  : 3F/39
  3465 ;;		Unchanged: 0/0
  3466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3471 ;;Total ram usage:        0 bytes
  3472 ;; Hardware stack levels used:    1
  3473 ;; Hardware stack levels required when called:    3
  3474 ;; This function calls:
  3475 ;;		Nothing
  3476 ;; This function is called by:
  3477 ;;		_secs_send
  3478 ;; This function uses a reentrant model
  3479 ;;
  3480                           
  3481                           	psect	text4
  3482  005B3A                     __ptext4:
  3483                           	opt callstack 0
  3484  005B3A                     _UART2_put_buffer:
  3485                           	opt callstack 25
  3486                           
  3487                           ;mcc_generated_files/uart2.c: 257: void UART2_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart2.c: 258: {;mcc_generated_files/uart2.c: 259:  PIE6bits.U2RXIE = 0;
  3488                           
  3489                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3490                           ;incstack = 0
  3491  005B3A  0139               	movlb	57	; () banked
  3492  005B3C  9596               	bcf	150,2,b	;volatile
  3493                           
  3494                           ; BSR set to: 57
  3495                           ;mcc_generated_files/uart2.c: 260:  uart2RxBuffer[uart2RxHead++] = bufData;
  3496                           ;stkvar	_bufData @ sp[(0)+-1]
  3497  005B3E  0E00               	movlw	low _uart2RxBuffer
  3498  005B40  2431               	addwf	_uart2RxHead,w,c	;volatile
  3499  005B42  6ED9               	movwf	fsr2l,c
  3500  005B44  6ADA               	clrf	fsr2h,c
  3501  005B46  0E02               	movlw	high _uart2RxBuffer
  3502  005B48  22DA               	addwfc	fsr2h,f,c
  3503  005B4A  0EFF               	movlw	-1
  3504  005B4C  006F FF8F FFDF     	movff	plusw1,indf2
  3505                           
  3506                           ; BSR set to: 57
  3507  005B52  2A31               	incf	_uart2RxHead,f,c	;volatile
  3508                           
  3509                           ; BSR set to: 57
  3510                           ;mcc_generated_files/uart2.c: 261:  if (sizeof(uart2RxBuffer) <= uart2RxHead) {
  3511  005B54  0E3F               	movlw	63
  3512  005B56  6431               	cpfsgt	_uart2RxHead,c
  3513  005B58  D001               	goto	l5757
  3514                           
  3515                           ; BSR set to: 57
  3516                           ;mcc_generated_files/uart2.c: 262:   uart2RxHead = 0;
  3517  005B5A  6A31               	clrf	_uart2RxHead,c	;volatile
  3518  005B5C                     l5757:
  3519                           
  3520                           ; BSR set to: 57
  3521                           ;mcc_generated_files/uart2.c: 265:  uart2RxCount++;
  3522  005B5C  2A2F               	incf	_uart2RxCount,f,c	;volatile
  3523                           
  3524                           ; BSR set to: 57
  3525                           ;mcc_generated_files/uart2.c: 266:  PIE6bits.U2RXIE = 1;
  3526  005B5E  8596               	bsf	150,2,b	;volatile
  3527                           
  3528                           ; BSR set to: 57
  3529                           ; _UART2_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  3530  005B60  52E5               	movf	postdec1,f,c
  3531  005B62  0012               	return		;funcret
  3532  005B64                     __end_of_UART2_put_buffer:
  3533                           	opt callstack 0
  3534                           
  3535 ;; *************** function _UART2_is_tx_ready *****************
  3536 ;; Defined at:
  3537 ;;		line 142 in file "mcc_generated_files/uart2.c"
  3538 ;; Parameters:    Size  Location     Type
  3539 ;;		None
  3540 ;; Auto vars:     Size  Location     Type
  3541 ;;		None
  3542 ;; Return value:  Size  Location     Type
  3543 ;;                  1  [STACK] unsigned char 
  3544 ;; Registers used:
  3545 ;;		btemp
  3546 ;; Tracked objects:
  3547 ;;		On entry : 0/0
  3548 ;;		On exit  : 0/0
  3549 ;;		Unchanged: 0/0
  3550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3555 ;;Total ram usage:        0 bytes
  3556 ;; Hardware stack levels used:    1
  3557 ;; Hardware stack levels required when called:    3
  3558 ;; This function calls:
  3559 ;;		Nothing
  3560 ;; This function is called by:
  3561 ;;		_secs_send
  3562 ;; This function uses a reentrant model
  3563 ;;
  3564                           
  3565                           	psect	text5
  3566  00615E                     __ptext5:
  3567                           	opt callstack 0
  3568  00615E                     _UART2_is_tx_ready:
  3569                           	opt callstack 25
  3570                           
  3571                           ;mcc_generated_files/uart2.c: 144:     return uart2TxBufferRemaining;
  3572                           
  3573                           ; BSR set to: 57
  3574                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3575                           ;incstack = 0
  3576  00615E  0060  F0C8  F03B   	movff	_uart2TxBufferRemaining,btemp	;volatile
  3577                           
  3578                           ; _UART2_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  3579  006164  0012               	return		;funcret
  3580  006166                     __end_of_UART2_is_tx_ready:
  3581                           	opt callstack 0
  3582                           
  3583 ;; *************** function _UART2_Write *****************
  3584 ;; Defined at:
  3585 ;;		line 172 in file "mcc_generated_files/uart2.c"
  3586 ;; Parameters:    Size  Location     Type
  3587 ;;  txData          1  [STACK] unsigned char 
  3588 ;; Auto vars:     Size  Location     Type
  3589 ;;		None
  3590 ;; Return value:  Size  Location     Type
  3591 ;;                  1  [STACK] void 
  3592 ;; Registers used:
  3593 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3594 ;; Tracked objects:
  3595 ;;		On entry : 0/0
  3596 ;;		On exit  : 3F/39
  3597 ;;		Unchanged: 0/0
  3598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3603 ;;Total ram usage:        0 bytes
  3604 ;; Hardware stack levels used:    1
  3605 ;; Hardware stack levels required when called:    3
  3606 ;; This function calls:
  3607 ;;		Nothing
  3608 ;; This function is called by:
  3609 ;;		_secs_send
  3610 ;; This function uses a reentrant model
  3611 ;;
  3612                           
  3613                           	psect	text6
  3614  0058E0                     __ptext6:
  3615                           	opt callstack 0
  3616  0058E0                     _UART2_Write:
  3617                           	opt callstack 25
  3618                           
  3619                           ;mcc_generated_files/uart2.c: 174:     while(0 == uart2TxBufferRemaining)
  3620                           
  3621                           ;mcc_generated_files/uart2.c: 172: void UART2_Write(uint8_t txData);mcc_generated_files/
      +                          uart2.c: 173: {;mcc_generated_files/uart2.c: 174:     while(0 == uart2TxBufferRemaining)
  3622                           
  3623                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3624                           ;incstack = 0
  3625  0058E0  5032               	movf	_uart2TxBufferRemaining,w,c	;volatile
  3626  0058E2  B4D8               	btfsc	status,2,c
  3627  0058E4  D7FD               	goto	_UART2_Write
  3628                           
  3629                           ;mcc_generated_files/uart2.c: 178:     if(0 == PIE6bits.U2TXIE)
  3630  0058E6  0139               	movlb	57	; () banked
  3631  0058E8  B796               	btfsc	150,3,b	;volatile
  3632  0058EA  D005               	goto	l699
  3633                           
  3634                           ; BSR set to: 57
  3635                           ;mcc_generated_files/uart2.c: 179:     {;mcc_generated_files/uart2.c: 180:         U2TXB
      +                           = txData;
  3636                           ;stkvar	_txData @ sp[(0)+-1]
  3637  0058EC  0EFF               	movlw	-1
  3638  0058EE  006F FF8F FDD2     	movff	plusw1,15826	;volatile
  3639                           
  3640                           ;mcc_generated_files/uart2.c: 181:     }
  3641  0058F4  D011               	goto	l5745
  3642  0058F6                     l699:
  3643                           
  3644                           ; BSR set to: 57
  3645                           ;mcc_generated_files/uart2.c: 183:     {;mcc_generated_files/uart2.c: 184:         PIE6b
      +                          its.U2TXIE = 0;
  3646  0058F6  9796               	bcf	150,3,b	;volatile
  3647                           
  3648                           ; BSR set to: 57
  3649                           ;mcc_generated_files/uart2.c: 185:         uart2TxBuffer[uart2TxHead++] = txData;
  3650                           ;stkvar	_txData @ sp[(0)+-1]
  3651  0058F8  0E40               	movlw	low _uart2TxBuffer
  3652  0058FA  2434               	addwf	_uart2TxHead,w,c	;volatile
  3653  0058FC  6ED9               	movwf	fsr2l,c
  3654  0058FE  6ADA               	clrf	fsr2h,c
  3655  005900  0E02               	movlw	high _uart2TxBuffer
  3656  005902  22DA               	addwfc	fsr2h,f,c
  3657  005904  0EFF               	movlw	-1
  3658  005906  006F FF8F FFDF     	movff	plusw1,indf2
  3659                           
  3660                           ; BSR set to: 57
  3661  00590C  2A34               	incf	_uart2TxHead,f,c	;volatile
  3662                           
  3663                           ; BSR set to: 57
  3664                           ;mcc_generated_files/uart2.c: 186:         if(sizeof(uart2TxBuffer) <= uart2TxHead)
  3665  00590E  0E3F               	movlw	63
  3666  005910  6434               	cpfsgt	_uart2TxHead,c
  3667  005912  D001               	goto	l5743
  3668                           
  3669                           ; BSR set to: 57
  3670                           ;mcc_generated_files/uart2.c: 187:         {;mcc_generated_files/uart2.c: 188:          
      +                             uart2TxHead = 0;
  3671  005914  6A34               	clrf	_uart2TxHead,c	;volatile
  3672  005916                     l5743:
  3673                           
  3674                           ; BSR set to: 57
  3675                           ;mcc_generated_files/uart2.c: 190:         uart2TxBufferRemaining--;
  3676  005916  0632               	decf	_uart2TxBufferRemaining,f,c	;volatile
  3677  005918                     l5745:
  3678                           
  3679                           ; BSR set to: 57
  3680                           ;mcc_generated_files/uart2.c: 192:     PIE6bits.U2TXIE = 1;
  3681  005918  8796               	bsf	150,3,b	;volatile
  3682                           
  3683                           ; BSR set to: 57
  3684                           ; _UART2_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  3685  00591A  52E5               	movf	postdec1,f,c
  3686  00591C  0012               	return		;funcret
  3687  00591E                     __end_of_UART2_Write:
  3688                           	opt callstack 0
  3689                           
  3690 ;; *************** function _UART1_put_buffer *****************
  3691 ;; Defined at:
  3692 ;;		line 250 in file "mcc_generated_files/uart1.c"
  3693 ;; Parameters:    Size  Location     Type
  3694 ;;  bufData         1  [STACK] unsigned char 
  3695 ;; Auto vars:     Size  Location     Type
  3696 ;;		None
  3697 ;; Return value:  Size  Location     Type
  3698 ;;                  1  [STACK] void 
  3699 ;; Registers used:
  3700 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3701 ;; Tracked objects:
  3702 ;;		On entry : 0/39
  3703 ;;		On exit  : 3F/39
  3704 ;;		Unchanged: 0/0
  3705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3710 ;;Total ram usage:        0 bytes
  3711 ;; Hardware stack levels used:    1
  3712 ;; Hardware stack levels required when called:    3
  3713 ;; This function calls:
  3714 ;;		Nothing
  3715 ;; This function is called by:
  3716 ;;		_t_protocol
  3717 ;;		_secs_send
  3718 ;; This function uses a reentrant model
  3719 ;;
  3720                           
  3721                           	psect	text7
  3722  005B64                     __ptext7:
  3723                           	opt callstack 0
  3724  005B64                     _UART1_put_buffer:
  3725                           	opt callstack 25
  3726                           
  3727                           ;mcc_generated_files/uart1.c: 250: void UART1_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart1.c: 251: {;mcc_generated_files/uart1.c: 252:  PIE3bits.U1RXIE = 0;
  3728                           
  3729                           ; BSR set to: 57
  3730                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3731                           ;incstack = 0
  3732  005B64  0139               	movlb	57	; () banked
  3733  005B66  9793               	bcf	147,3,b	;volatile
  3734                           
  3735                           ; BSR set to: 57
  3736                           ;mcc_generated_files/uart1.c: 253:  uart1RxBuffer[uart1RxHead++] = bufData;
  3737                           ;stkvar	_bufData @ sp[(0)+-1]
  3738  005B68  0E80               	movlw	low _uart1RxBuffer
  3739  005B6A  2437               	addwf	_uart1RxHead,w,c	;volatile
  3740  005B6C  6ED9               	movwf	fsr2l,c
  3741  005B6E  6ADA               	clrf	fsr2h,c
  3742  005B70  0E02               	movlw	high _uart1RxBuffer
  3743  005B72  22DA               	addwfc	fsr2h,f,c
  3744  005B74  0EFF               	movlw	-1
  3745  005B76  006F FF8F FFDF     	movff	plusw1,indf2
  3746                           
  3747                           ; BSR set to: 57
  3748  005B7C  2A37               	incf	_uart1RxHead,f,c	;volatile
  3749                           
  3750                           ; BSR set to: 57
  3751                           ;mcc_generated_files/uart1.c: 254:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
  3752  005B7E  0E3F               	movlw	63
  3753  005B80  6437               	cpfsgt	_uart1RxHead,c
  3754  005B82  D001               	goto	l5721
  3755                           
  3756                           ; BSR set to: 57
  3757                           ;mcc_generated_files/uart1.c: 255:   uart1RxHead = 0;
  3758  005B84  6A37               	clrf	_uart1RxHead,c	;volatile
  3759  005B86                     l5721:
  3760                           
  3761                           ; BSR set to: 57
  3762                           ;mcc_generated_files/uart1.c: 258:  uart1RxCount++;
  3763  005B86  2A35               	incf	_uart1RxCount,f,c	;volatile
  3764                           
  3765                           ; BSR set to: 57
  3766                           ;mcc_generated_files/uart1.c: 259:  PIE3bits.U1RXIE = 1;
  3767  005B88  8793               	bsf	147,3,b	;volatile
  3768                           
  3769                           ; BSR set to: 57
  3770                           ; _UART1_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  3771  005B8A  52E5               	movf	postdec1,f,c
  3772  005B8C  0012               	return		;funcret
  3773  005B8E                     __end_of_UART1_put_buffer:
  3774                           	opt callstack 0
  3775                           
  3776 ;; *************** function _UART1_is_tx_ready *****************
  3777 ;; Defined at:
  3778 ;;		line 151 in file "mcc_generated_files/uart1.c"
  3779 ;; Parameters:    Size  Location     Type
  3780 ;;		None
  3781 ;; Auto vars:     Size  Location     Type
  3782 ;;		None
  3783 ;; Return value:  Size  Location     Type
  3784 ;;                  1  [STACK] unsigned char 
  3785 ;; Registers used:
  3786 ;;		btemp
  3787 ;; Tracked objects:
  3788 ;;		On entry : 0/0
  3789 ;;		On exit  : 0/0
  3790 ;;		Unchanged: 0/0
  3791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3796 ;;Total ram usage:        0 bytes
  3797 ;; Hardware stack levels used:    1
  3798 ;; Hardware stack levels required when called:    3
  3799 ;; This function calls:
  3800 ;;		Nothing
  3801 ;; This function is called by:
  3802 ;;		_secs_send
  3803 ;; This function uses a reentrant model
  3804 ;;
  3805                           
  3806                           	psect	text8
  3807  006166                     __ptext8:
  3808                           	opt callstack 0
  3809  006166                     _UART1_is_tx_ready:
  3810                           	opt callstack 25
  3811                           
  3812                           ;mcc_generated_files/uart1.c: 153:  return uart1TxBufferRemaining;
  3813                           
  3814                           ; BSR set to: 57
  3815                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3816                           ;incstack = 0
  3817  006166  0060  F0E0  F03B   	movff	_uart1TxBufferRemaining,btemp	;volatile
  3818                           
  3819                           ; _UART1_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  3820  00616C  0012               	return		;funcret
  3821  00616E                     __end_of_UART1_is_tx_ready:
  3822                           	opt callstack 0
  3823                           
  3824 ;; *************** function _secs_II_message *****************
  3825 ;; Defined at:
  3826 ;;		line 465 in file "gemsecs.c"
  3827 ;; Parameters:    Size  Location     Type
  3828 ;;  stream          1  [STACK] unsigned char 
  3829 ;;  function        1  [STACK] unsigned char 
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;		None
  3832 ;; Return value:  Size  Location     Type
  3833 ;;                  7  [STACK] struct response_type
  3834 ;; Registers used:
  3835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  3836 ;; Tracked objects:
  3837 ;;		On entry : 3F/0
  3838 ;;		On exit  : 3E/0
  3839 ;;		Unchanged: 0/0
  3840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3845 ;;Total ram usage:        0 bytes
  3846 ;; Hardware stack levels used:    1
  3847 ;; Hardware stack levels required when called:    3
  3848 ;; This function calls:
  3849 ;;		Nothing
  3850 ;; This function is called by:
  3851 ;;		_t_protocol
  3852 ;; This function uses a reentrant model
  3853 ;;
  3854                           
  3855                           	psect	text9
  3856  0042F0                     __ptext9:
  3857                           	opt callstack 0
  3858  0042F0                     _secs_II_message:
  3859                           	opt callstack 0
  3860                           
  3861                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 var
      +                          gsize = 0, retsize = 7 argfudge = 5
  3862  0042F0  0E05               	movlw	5
  3863  0042F2  26E1               	addwf	fsr1l,f,c
  3864  0042F4  0E00               	movlw	0
  3865  0042F6  22E2               	addwfc	fsr1h,f,c
  3866                           
  3867                           ;gemsecs.c: 465: response_type secs_II_message(uint8_t stream, uint8_t function);gemsecs
      +                          .c: 466: {;gemsecs.c: 467:  static response_type block;;gemsecs.c: 469:  V.abort = LINK_
      +                          ERROR_NONE;
  3868                           
  3869                           ;incstack = 0
  3870  0042F8  0100               	movlb	0	; () banked
  3871  0042FA  6BB7               	clrf	(_V+80)& (0+255),b
  3872                           
  3873                           ;gemsecs.c: 470:  V.queue = 0;
  3874  0042FC  99BE               	bcf	(_V+87)& (0+255),4,b
  3875                           
  3876                           ;gemsecs.c: 471:  block.respond = 0;
  3877  0042FE  9007               	bcf	secs_II_message@block+6,0,c
  3878                           
  3879                           ;gemsecs.c: 473:  switch (stream) {
  3880  004300  D0F3               	goto	l6207
  3881  004302                     l6075:
  3882                           
  3883                           ; BSR set to: 0
  3884                           ;gemsecs.c: 477:    block.header = (uint8_t*) & H12[0];
  3885  004302  0E41               	movlw	low _H12
  3886  004304  6E01               	movwf	secs_II_message@block,c
  3887  004306  0E01               	movlw	high _H12
  3888  004308  6E02               	movwf	secs_II_message@block+1,c
  3889                           
  3890                           ; BSR set to: 0
  3891                           ;gemsecs.c: 478:    block.length = sizeof(header12);
  3892  00430A  0E0F               	movlw	15
  3893  00430C  6E03               	movwf	secs_II_message@block+2,c
  3894                           
  3895                           ; BSR set to: 0
  3896                           ;gemsecs.c: 479:    H12[0].block.block.systemb = V.systemb;
  3897  00430E  C0B0  F145         	movff	_V+73,_H12+4
  3898  004312  C0B1  F146         	movff	_V+74,_H12+5
  3899  004316  C0B2  F147         	movff	_V+75,_H12+6
  3900  00431A  C0B3  F148         	movff	_V+76,_H12+7
  3901                           
  3902                           ; BSR set to: 0
  3903                           ;gemsecs.c: 480:    H10[0].block.block.systemb = V.systemb;
  3904  00431E  C0B0  F102         	movff	_V+73,_H10+2
  3905  004322  C0B1  F103         	movff	_V+74,_H10+3
  3906  004326  C0B2  F104         	movff	_V+75,_H10+4
  3907  00432A  C0B3  F105         	movff	_V+76,_H10+5
  3908                           
  3909                           ; BSR set to: 0
  3910                           ;gemsecs.c: 481:    block.respond = 1;
  3911  00432E  8007               	bsf	secs_II_message@block+6,0,c
  3912                           
  3913                           ; BSR set to: 0
  3914                           ;gemsecs.c: 482:    block.reply = (uint8_t*) & H10[0];
  3915  004330  0E00               	movlw	low _H10
  3916  004332  6E04               	movwf	secs_II_message@block+3,c
  3917  004334  0E01               	movlw	high _H10
  3918  004336  6E05               	movwf	secs_II_message@block+4,c
  3919                           
  3920                           ;gemsecs.c: 483:    block.reply_length = sizeof(header10);
  3921  004338  0E0D               	movlw	13
  3922  00433A                     L8:
  3923  00433A  6E06               	movwf	secs_II_message@block+5,c
  3924                           
  3925                           ; BSR set to: 0
  3926                           ;gemsecs.c: 484:    V.queue = 1;
  3927  00433C  89BE               	bsf	(_V+87)& (0+255),4,b
  3928                           
  3929                           ;gemsecs.c: 485:    break;
  3930  00433E  D0ED               	goto	l6209
  3931  004340                     l6089:
  3932                           
  3933                           ; BSR set to: 0
  3934                           ;gemsecs.c: 487:    block.header = (uint8_t*) & H14[0];
  3935  004340  0E8E               	movlw	low _H14
  3936  004342  6E01               	movwf	secs_II_message@block,c
  3937  004344  0E01               	movlw	high _H14
  3938  004346  6E02               	movwf	secs_II_message@block+1,c
  3939                           
  3940                           ; BSR set to: 0
  3941                           ;gemsecs.c: 488:    block.length = sizeof(header14);
  3942  004348  0E11               	movlw	17
  3943  00434A  6E03               	movwf	secs_II_message@block+2,c
  3944                           
  3945                           ; BSR set to: 0
  3946                           ;gemsecs.c: 489:    H14[0].block.block.systemb = V.systemb;
  3947  00434C  C0B0  F194         	movff	_V+73,_H14+6
  3948  004350  C0B1  F195         	movff	_V+74,_H14+7
  3949  004354  C0B2  F196         	movff	_V+75,_H14+8
  3950  004358  C0B3  F197         	movff	_V+76,_H14+9
  3951                           
  3952                           ;gemsecs.c: 490:    break;
  3953  00435C  D0DE               	goto	l6209
  3954  00435E                     l6095:
  3955                           
  3956                           ; BSR set to: 0
  3957                           ;gemsecs.c: 492:    block.header = (uint8_t*) & H17[0];
  3958  00435E  0E7A               	movlw	low _H17
  3959  004360  6E01               	movwf	secs_II_message@block,c
  3960  004362  0E01               	movlw	high _H17
  3961  004364  6E02               	movwf	secs_II_message@block+1,c
  3962                           
  3963                           ; BSR set to: 0
  3964                           ;gemsecs.c: 493:    block.length = sizeof(header17);
  3965  004366  0E14               	movlw	20
  3966  004368  6E03               	movwf	secs_II_message@block+2,c
  3967                           
  3968                           ; BSR set to: 0
  3969                           ;gemsecs.c: 494:    H17[0].block.block.systemb = V.systemb;
  3970  00436A  C0B0  F183         	movff	_V+73,_H17+9
  3971  00436E  C0B1  F184         	movff	_V+74,_H17+10
  3972  004372  C0B2  F185         	movff	_V+75,_H17+11
  3973  004376  C0B3  F186         	movff	_V+76,_H17+12
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;gemsecs.c: 495:    H12[1].block.block.systemb = V.systemb;
  3977  00437A  C0B0  F154         	movff	_V+73,_H12+19
  3978  00437E  C0B1  F155         	movff	_V+74,_H12+20
  3979  004382  C0B2  F156         	movff	_V+75,_H12+21
  3980  004386  C0B3  F157         	movff	_V+76,_H12+22
  3981                           
  3982                           ; BSR set to: 0
  3983                           ;gemsecs.c: 496:    block.respond = 1;
  3984  00438A  8007               	bsf	secs_II_message@block+6,0,c
  3985                           
  3986                           ; BSR set to: 0
  3987                           ;gemsecs.c: 497:    block.reply = (uint8_t*) & H12[1];
  3988  00438C  0E50               	movlw	low (_H12+15)
  3989  00438E  6E04               	movwf	secs_II_message@block+3,c
  3990  004390  0E01               	movlw	high (_H12+15)
  3991  004392  6E05               	movwf	secs_II_message@block+4,c
  3992                           
  3993                           ;gemsecs.c: 498:    block.reply_length = sizeof(header12);
  3994  004394  0E0F               	movlw	15
  3995  004396  D7D1               	goto	L8
  3996  004398                     l6109:
  3997                           
  3998                           ; BSR set to: 0
  3999                           ;gemsecs.c: 502:    block.header = (uint8_t*) & H10[2];
  4000  004398  0E1A               	movlw	low (_H10+26)
  4001  00439A  6E01               	movwf	secs_II_message@block,c
  4002  00439C  0E01               	movlw	high (_H10+26)
  4003  00439E  6E02               	movwf	secs_II_message@block+1,c
  4004                           
  4005                           ; BSR set to: 0
  4006                           ;gemsecs.c: 503:    block.length = sizeof(header10);
  4007  0043A0  0E0D               	movlw	13
  4008  0043A2  6E03               	movwf	secs_II_message@block+2,c
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;gemsecs.c: 504:    H10[2].block.block.systemb = V.systemb;
  4012  0043A4  C0B0  F11C         	movff	_V+73,_H10+28
  4013  0043A8  C0B1  F11D         	movff	_V+74,_H10+29
  4014  0043AC  C0B2  F11E         	movff	_V+75,_H10+30
  4015  0043B0  C0B3  F11F         	movff	_V+76,_H10+31
  4016                           
  4017                           ; BSR set to: 0
  4018                           ;gemsecs.c: 505:    V.abort = LINK_ERROR_ABORT;
  4019  0043B4  0E07               	movlw	7
  4020  0043B6  6FB7               	movwf	(_V+80)& (0+255),b
  4021                           
  4022                           ;gemsecs.c: 506:    break;
  4023  0043B8  D0B0               	goto	l6209
  4024  0043BA                     l6119:
  4025                           
  4026                           ; BSR set to: 0
  4027                           ;stkvar	_function @ sp[(0)+-7]
  4028  0043BA  0EF9               	movlw	-7
  4029  0043BC  50E3               	movf	plusw1,w,c
  4030  0043BE  6E45               	movwf	btemp+10,c
  4031  0043C0  6A46               	clrf	btemp+11,c
  4032                           
  4033                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4034                           ; Switch size 1, requested type "simple"
  4035                           ; Number of cases is 1, Range of values is 0 to 0
  4036                           ; switch strategies available:
  4037                           ; Name         Instructions Cycles
  4038                           ; simple_byte            4     3 (average)
  4039                           ;	Chosen strategy is simple_byte
  4040  0043C2  5046               	movf	btemp+11,w,c
  4041  0043C4  0A00               	xorlw	0	; case 0
  4042  0043C6  A4D8               	btfss	status,2,c
  4043  0043C8  D7E7               	goto	l6109
  4044                           
  4045                           ; BSR set to: 0
  4046                           ; Switch size 1, requested type "simple"
  4047                           ; Number of cases is 3, Range of values is 1 to 13
  4048                           ; switch strategies available:
  4049                           ; Name         Instructions Cycles
  4050                           ; simple_byte           10     6 (average)
  4051                           ;	Chosen strategy is simple_byte
  4052  0043CA  5045               	movf	btemp+10,w,c
  4053  0043CC  0A01               	xorlw	1	; case 1
  4054  0043CE  B4D8               	btfsc	status,2,c
  4055  0043D0  D798               	goto	l6075
  4056  0043D2  0A02               	xorlw	2	; case 3
  4057  0043D4  B4D8               	btfsc	status,2,c
  4058  0043D6  D7B4               	goto	l6089
  4059  0043D8  0A0E               	xorlw	14	; case 13
  4060  0043DA  B4D8               	btfsc	status,2,c
  4061  0043DC  D7C0               	goto	l6095
  4062  0043DE  D7DC               	goto	l6109
  4063  0043E0                     l6121:
  4064                           
  4065                           ; BSR set to: 0
  4066                           ;gemsecs.c: 512:    block.header = (uint8_t*) & H24[0];
  4067  0043E0  0E5F               	movlw	low _H24
  4068  0043E2  6E01               	movwf	secs_II_message@block,c
  4069  0043E4  0E01               	movlw	high _H24
  4070  0043E6  6E02               	movwf	secs_II_message@block+1,c
  4071                           
  4072                           ; BSR set to: 0
  4073                           ;gemsecs.c: 513:    block.length = sizeof(header24);
  4074  0043E8  0E1B               	movlw	27
  4075  0043EA  6E03               	movwf	secs_II_message@block+2,c
  4076                           
  4077                           ; BSR set to: 0
  4078                           ;gemsecs.c: 514:    H24[0].block.block.systemb = V.systemb;
  4079  0043EC  C0B0  F16F         	movff	_V+73,_H24+16
  4080  0043F0  C0B1  F170         	movff	_V+74,_H24+17
  4081  0043F4  C0B2  F171         	movff	_V+75,_H24+18
  4082  0043F8  C0B3  F172         	movff	_V+76,_H24+19
  4083                           
  4084                           ; BSR set to: 0
  4085                           ;gemsecs.c: 515:    H24[0].data[12] = 12;
  4086  0043FC  0E0C               	movlw	12
  4087  0043FE  0101               	movlb	1	; () banked
  4088  004400  6F6D               	movwf	(_H24+14)& (0+255),b
  4089                           
  4090                           ;gemsecs.c: 516:    break;
  4091  004402  D08B               	goto	l6209
  4092  004404                     l6139:
  4093                           
  4094                           ; BSR set to: 0
  4095                           ;stkvar	_function @ sp[(0)+-7]
  4096  004404  0EF9               	movlw	-7
  4097  004406  50E3               	movf	plusw1,w,c
  4098  004408  6E45               	movwf	btemp+10,c
  4099  00440A  6A46               	clrf	btemp+11,c
  4100                           
  4101                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4102                           ; Switch size 1, requested type "simple"
  4103                           ; Number of cases is 1, Range of values is 0 to 0
  4104                           ; switch strategies available:
  4105                           ; Name         Instructions Cycles
  4106                           ; simple_byte            4     3 (average)
  4107                           ;	Chosen strategy is simple_byte
  4108  00440C  5046               	movf	btemp+11,w,c
  4109  00440E  0A00               	xorlw	0	; case 0
  4110  004410  A4D8               	btfss	status,2,c
  4111  004412  D7C2               	goto	l6109
  4112                           
  4113                           ; BSR set to: 0
  4114                           ; Switch size 1, requested type "simple"
  4115                           ; Number of cases is 1, Range of values is 17 to 17
  4116                           ; switch strategies available:
  4117                           ; Name         Instructions Cycles
  4118                           ; simple_byte            4     3 (average)
  4119                           ;	Chosen strategy is simple_byte
  4120  004414  5045               	movf	btemp+10,w,c
  4121  004416  0A11               	xorlw	17	; case 17
  4122  004418  B4D8               	btfsc	status,2,c
  4123  00441A  D7E2               	goto	l6121
  4124  00441C  D7BD               	goto	l6109
  4125  00441E                     l6141:
  4126                           
  4127                           ; BSR set to: 0
  4128                           ;gemsecs.c: 528:    block.header = (uint8_t*) & H13[0];
  4129  00441E  0E9F               	movlw	low _H13
  4130  004420  6E01               	movwf	secs_II_message@block,c
  4131  004422  0E01               	movlw	high _H13
  4132  004424  6E02               	movwf	secs_II_message@block+1,c
  4133                           
  4134                           ; BSR set to: 0
  4135                           ;gemsecs.c: 529:    block.length = sizeof(header13);
  4136  004426  0E10               	movlw	16
  4137  004428  6E03               	movwf	secs_II_message@block+2,c
  4138                           
  4139                           ; BSR set to: 0
  4140                           ;gemsecs.c: 530:    H13[0].block.block.systemb = V.systemb;
  4141  00442A  C0B0  F1A4         	movff	_V+73,_H13+5
  4142  00442E  C0B1  F1A5         	movff	_V+74,_H13+6
  4143  004432  C0B2  F1A6         	movff	_V+75,_H13+7
  4144  004436  C0B3  F1A7         	movff	_V+76,_H13+8
  4145                           
  4146                           ;gemsecs.c: 531:    break;
  4147  00443A  D06F               	goto	l6209
  4148  00443C                     l6157:
  4149                           
  4150                           ; BSR set to: 0
  4151                           ;stkvar	_function @ sp[(0)+-7]
  4152  00443C  0EF9               	movlw	-7
  4153  00443E  50E3               	movf	plusw1,w,c
  4154  004440  6E45               	movwf	btemp+10,c
  4155  004442  6A46               	clrf	btemp+11,c
  4156                           
  4157                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4158                           ; Switch size 1, requested type "simple"
  4159                           ; Number of cases is 1, Range of values is 0 to 0
  4160                           ; switch strategies available:
  4161                           ; Name         Instructions Cycles
  4162                           ; simple_byte            4     3 (average)
  4163                           ;	Chosen strategy is simple_byte
  4164  004444  5046               	movf	btemp+11,w,c
  4165  004446  0A00               	xorlw	0	; case 0
  4166  004448  A4D8               	btfss	status,2,c
  4167  00444A  D7A6               	goto	l6109
  4168                           
  4169                           ; BSR set to: 0
  4170                           ; Switch size 1, requested type "simple"
  4171                           ; Number of cases is 1, Range of values is 11 to 11
  4172                           ; switch strategies available:
  4173                           ; Name         Instructions Cycles
  4174                           ; simple_byte            4     3 (average)
  4175                           ;	Chosen strategy is simple_byte
  4176  00444C  5045               	movf	btemp+10,w,c
  4177  00444E  0A0B               	xorlw	11	; case 11
  4178  004450  B4D8               	btfsc	status,2,c
  4179  004452  D7E5               	goto	l6141
  4180  004454  D7A1               	goto	l6109
  4181  004456                     l6169:
  4182                           
  4183                           ; BSR set to: 0
  4184                           ;stkvar	_function @ sp[(0)+-7]
  4185  004456  0EF9               	movlw	-7
  4186  004458  50E3               	movf	plusw1,w,c
  4187  00445A  6E45               	movwf	btemp+10,c
  4188  00445C  6A46               	clrf	btemp+11,c
  4189                           
  4190                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4191                           ; Switch size 1, requested type "simple"
  4192                           ; Number of cases is 1, Range of values is 0 to 0
  4193                           ; switch strategies available:
  4194                           ; Name         Instructions Cycles
  4195                           ; simple_byte            4     3 (average)
  4196                           ;	Chosen strategy is simple_byte
  4197  00445E  5046               	movf	btemp+11,w,c
  4198  004460  0A00               	xorlw	0	; case 0
  4199  004462  A4D8               	btfss	status,2,c
  4200  004464  D799               	goto	l6109
  4201                           
  4202                           ; BSR set to: 0
  4203                           ; Switch size 1, requested type "simple"
  4204                           ; Number of cases is 7, Range of values is 1 to 13
  4205                           ; switch strategies available:
  4206                           ; Name         Instructions Cycles
  4207                           ; simple_byte           22    12 (average)
  4208                           ;	Chosen strategy is simple_byte
  4209  004466  5045               	movf	btemp+10,w,c
  4210  004468  0A01               	xorlw	1	; case 1
  4211  00446A  B4D8               	btfsc	status,2,c
  4212  00446C  D056               	goto	l6209
  4213  00446E  0A02               	xorlw	2	; case 3
  4214  004470  B4D8               	btfsc	status,2,c
  4215  004472  D053               	goto	l6209
  4216  004474  0A06               	xorlw	6	; case 5
  4217  004476  B4D8               	btfsc	status,2,c
  4218  004478  D050               	goto	l6209
  4219  00447A  0A02               	xorlw	2	; case 7
  4220  00447C  B4D8               	btfsc	status,2,c
  4221  00447E  D04D               	goto	l6209
  4222  004480  0A0E               	xorlw	14	; case 9
  4223  004482  B4D8               	btfsc	status,2,c
  4224  004484  D04A               	goto	l6209
  4225  004486  0A02               	xorlw	2	; case 11
  4226  004488  B4D8               	btfsc	status,2,c
  4227  00448A  D047               	goto	l6209
  4228  00448C  0A06               	xorlw	6	; case 13
  4229  00448E  B4D8               	btfsc	status,2,c
  4230  004490  D044               	goto	l6209
  4231  004492  D782               	goto	l6109
  4232  004494                     l6171:
  4233                           
  4234                           ; BSR set to: 0
  4235                           ;gemsecs.c: 567:    block.header = (uint8_t*) & H12[0];
  4236  004494  0E41               	movlw	low _H12
  4237  004496  6E01               	movwf	secs_II_message@block,c
  4238  004498  0E01               	movlw	high _H12
  4239  00449A  6E02               	movwf	secs_II_message@block+1,c
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;gemsecs.c: 568:    block.length = sizeof(header12);
  4243  00449C  0E0F               	movlw	15
  4244  00449E  6E03               	movwf	secs_II_message@block+2,c
  4245                           
  4246                           ; BSR set to: 0
  4247                           ;gemsecs.c: 569:    H12[0].block.block.systemb = V.systemb;
  4248  0044A0  C0B0  F145         	movff	_V+73,_H12+4
  4249  0044A4  C0B1  F146         	movff	_V+74,_H12+5
  4250  0044A8  C0B2  F147         	movff	_V+75,_H12+6
  4251  0044AC  C0B3  F148         	movff	_V+76,_H12+7
  4252                           
  4253                           ; BSR set to: 0
  4254                           ;gemsecs.c: 570:    H53[0].block.block.systemb = V.systemb;
  4255  0044B0  C0B0  F3B3         	movff	_V+73,_H53+45
  4256  0044B4  C0B1  F3B4         	movff	_V+74,_H53+46
  4257  0044B8  C0B2  F3B5         	movff	_V+75,_H53+47
  4258  0044BC  C0B3  F3B6         	movff	_V+76,_H53+48
  4259                           
  4260                           ; BSR set to: 0
  4261                           ;gemsecs.c: 571:    block.respond = 1;
  4262  0044C0  8007               	bsf	secs_II_message@block+6,0,c
  4263                           
  4264                           ; BSR set to: 0
  4265                           ;gemsecs.c: 572:    block.reply = (uint8_t*) & H53[0];
  4266  0044C2  0E86               	movlw	low _H53
  4267  0044C4  6E04               	movwf	secs_II_message@block+3,c
  4268  0044C6  0E03               	movlw	high _H53
  4269  0044C8  6E05               	movwf	secs_II_message@block+4,c
  4270                           
  4271                           ;gemsecs.c: 573:    block.reply_length = sizeof(header53);
  4272  0044CA  0E38               	movlw	56
  4273  0044CC  D736               	goto	L8
  4274  0044CE                     l6195:
  4275                           
  4276                           ; BSR set to: 0
  4277                           ;stkvar	_function @ sp[(0)+-7]
  4278  0044CE  0EF9               	movlw	-7
  4279  0044D0  50E3               	movf	plusw1,w,c
  4280  0044D2  6E45               	movwf	btemp+10,c
  4281  0044D4  6A46               	clrf	btemp+11,c
  4282                           
  4283                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4284                           ; Switch size 1, requested type "simple"
  4285                           ; Number of cases is 1, Range of values is 0 to 0
  4286                           ; switch strategies available:
  4287                           ; Name         Instructions Cycles
  4288                           ; simple_byte            4     3 (average)
  4289                           ;	Chosen strategy is simple_byte
  4290  0044D6  5046               	movf	btemp+11,w,c
  4291  0044D8  0A00               	xorlw	0	; case 0
  4292  0044DA  A4D8               	btfss	status,2,c
  4293  0044DC  D75D               	goto	l6109
  4294                           
  4295                           ; BSR set to: 0
  4296                           ; Switch size 1, requested type "simple"
  4297                           ; Number of cases is 1, Range of values is 1 to 1
  4298                           ; switch strategies available:
  4299                           ; Name         Instructions Cycles
  4300                           ; simple_byte            4     3 (average)
  4301                           ;	Chosen strategy is simple_byte
  4302  0044DE  5045               	movf	btemp+10,w,c
  4303  0044E0  0A01               	xorlw	1	; case 1
  4304  0044E2  B4D8               	btfsc	status,2,c
  4305  0044E4  D7D7               	goto	l6171
  4306  0044E6  D758               	goto	l6109
  4307  0044E8                     l6207:
  4308                           
  4309                           ; BSR set to: 0
  4310                           ;stkvar	_stream @ sp[(0)+-6]
  4311  0044E8  0EFA               	movlw	-6
  4312  0044EA  50E3               	movf	plusw1,w,c
  4313  0044EC  6E45               	movwf	btemp+10,c
  4314  0044EE  6A46               	clrf	btemp+11,c
  4315                           
  4316                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4317                           ; Switch size 1, requested type "simple"
  4318                           ; Number of cases is 1, Range of values is 0 to 0
  4319                           ; switch strategies available:
  4320                           ; Name         Instructions Cycles
  4321                           ; simple_byte            4     3 (average)
  4322                           ;	Chosen strategy is simple_byte
  4323  0044F0  5046               	movf	btemp+11,w,c
  4324  0044F2  0A00               	xorlw	0	; case 0
  4325  0044F4  A4D8               	btfss	status,2,c
  4326  0044F6  D750               	goto	l6109
  4327                           
  4328                           ; BSR set to: 0
  4329                           ; Switch size 1, requested type "simple"
  4330                           ; Number of cases is 5, Range of values is 1 to 10
  4331                           ; switch strategies available:
  4332                           ; Name         Instructions Cycles
  4333                           ; simple_byte           16     9 (average)
  4334                           ;	Chosen strategy is simple_byte
  4335  0044F8  5045               	movf	btemp+10,w,c
  4336  0044FA  0A01               	xorlw	1	; case 1
  4337  0044FC  B4D8               	btfsc	status,2,c
  4338  0044FE  D75D               	goto	l6119
  4339  004500  0A03               	xorlw	3	; case 2
  4340  004502  B4D8               	btfsc	status,2,c
  4341  004504  D77F               	goto	l6139
  4342  004506  0A04               	xorlw	4	; case 6
  4343  004508  B4D8               	btfsc	status,2,c
  4344  00450A  D798               	goto	l6157
  4345  00450C  0A0F               	xorlw	15	; case 9
  4346  00450E  B4D8               	btfsc	status,2,c
  4347  004510  D7A2               	goto	l6169
  4348  004512  0A03               	xorlw	3	; case 10
  4349  004514  B4D8               	btfsc	status,2,c
  4350  004516  D7DB               	goto	l6195
  4351  004518  D73F               	goto	l6109
  4352  00451A                     l6209:
  4353                           
  4354                           ;gemsecs.c: 592:  return(block);
  4355  00451A  EE20  F001         	lfsr	2,secs_II_message@block
  4356                           
  4357                           ;stkvar	?_secs_II_message @ sp[(0)+-7]
  4358  00451E  0E07               	movlw	7
  4359  004520  6E3B               	movwf	btemp,c
  4360  004522  0EF9               	movlw	-7
  4361  004524                     us331999:
  4362  004524  006F FF7B FFE3     	movff	postinc2,plusw1
  4363  00452A  28E8               	incf	wreg,w,c
  4364  00452C  2E3B               	decfsz	btemp,f,c
  4365  00452E  D7FA               	bra	us331999
  4366                           
  4367                           ; _secs_II_message: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          7, argsize = 7, vargsize = 0
  4368  004530  0012               	return		;funcret
  4369  004532                     __end_of_secs_II_message:
  4370                           	opt callstack 0
  4371                           
  4372 ;; *************** function _sprintf *****************
  4373 ;; Defined at:
  4374 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;  s               1  [STACK] PTR unsigned char 
  4377 ;;		 -> V(89), 
  4378 ;;  fmt             1  [STACK] PTR const unsigned char 
  4379 ;;		 -> STR_15(21), STR_14(19), STR_13(6), STR_12(17), 
  4380 ;;		 -> STR_11(19), STR_10(19), STR_9(20), STR_8(6), 
  4381 ;;		 -> STR_7(6), STR_6(14), STR_5(19), STR_4(15), 
  4382 ;;		 -> STR_2(12), STR_1(17), 
  4383 ;; Auto vars:     Size  Location     Type
  4384 ;;  f               5  [STACK] struct _IO_FILE
  4385 ;;  ap              2  [STACK] PTR void [1]
  4386 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4387 ;;  ret             2    0        int 
  4388 ;; Return value:  Size  Location     Type
  4389 ;;                  2  [STACK] int 
  4390 ;; Registers used:
  4391 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  4392 ;; Tracked objects:
  4393 ;;		On entry : 4/0
  4394 ;;		On exit  : 3F/0
  4395 ;;		Unchanged: 0/0
  4396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4401 ;;Total ram usage:        0 bytes
  4402 ;; Hardware stack levels used:    1
  4403 ;; Hardware stack levels required when called:   11
  4404 ;; This function calls:
  4405 ;;		_vfprintf
  4406 ;; This function is called by:
  4407 ;;		_main
  4408 ;; This function uses a reentrant model
  4409 ;;
  4410                           
  4411                           	psect	text10
  4412  004DAE                     __ptext10:
  4413                           	opt callstack 0
  4414  004DAE                     _sprintf:
  4415                           	opt callstack 0
  4416                           
  4417                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 2 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4418  004DAE  0E07               	movlw	7
  4419  004DB0  26E1               	addwf	fsr1l,f,c
  4420  004DB2  0E00               	movlw	0
  4421  004DB4  22E2               	addwfc	fsr1h,f,c
  4422                           
  4423                           ;stkvar	?_sprintf @ sp[(-7)+-3]
  4424                           
  4425                           ;incstack = 0
  4426  004DB6  0EF6               	movlw	246
  4427  004DB8  24E1               	addwf	fsr1l,w,c
  4428  004DBA  6E45               	movwf	btemp+10,c
  4429  004DBC  0EFF               	movlw	255
  4430  004DBE  20E2               	addwfc	fsr1h,w,c
  4431  004DC0  6E46               	movwf	btemp+11,c
  4432                           
  4433                           ;stkvar	_ap @ sp[(-7)+5]
  4434  004DC2  0EFF               	movlw	-1
  4435  004DC4  0060  F11B  FFE3   	movff	btemp+11,plusw1
  4436  004DCA  0EFE               	movlw	-2
  4437  004DCC  0060  F117  FFE3   	movff	btemp+10,plusw1
  4438                           
  4439                           ;stkvar	_s @ sp[(-7)+-2]
  4440  004DD2  0EF7               	movlw	-9
  4441  004DD4  006F FF8C  F046    	movff	plusw1,btemp+11
  4442                           
  4443                           ;stkvar	_f @ sp[(-7)+0]
  4444  004DDA  0EF9               	movlw	-7
  4445  004DDC  0060  F11B  FFE3   	movff	btemp+11,plusw1
  4446                           
  4447                           ;stkvar	_f @ sp[(-7)+0]
  4448  004DE2  0EFA               	movlw	250
  4449  004DE4  24E1               	addwf	fsr1l,w,c
  4450  004DE6  6ED9               	movwf	fsr2l,c
  4451  004DE8  0EFF               	movlw	255
  4452  004DEA  20E2               	addwfc	fsr1h,w,c
  4453  004DEC  6EDA               	movwf	fsr2h,c
  4454  004DEE  0E00               	movlw	0
  4455  004DF0  6EDE               	movwf	postinc2,c
  4456  004DF2  0E00               	movlw	0
  4457  004DF4  6EDD               	movwf	postdec2,c
  4458                           
  4459                           ;stkvar	_f @ sp[(-7)+0]
  4460  004DF6  0EFC               	movlw	252
  4461  004DF8  24E1               	addwf	fsr1l,w,c
  4462  004DFA  6ED9               	movwf	fsr2l,c
  4463  004DFC  0EFF               	movlw	255
  4464  004DFE  20E2               	addwfc	fsr1h,w,c
  4465  004E00  6EDA               	movwf	fsr2h,c
  4466  004E02  0E00               	movlw	0
  4467  004E04  6EDE               	movwf	postinc2,c
  4468  004E06  0E00               	movlw	0
  4469  004E08  6EDD               	movwf	postdec2,c
  4470                           
  4471                           ;stkvar	_ap @ sp[(-7)+5]
  4472  004E0A  0EFE               	movlw	254
  4473  004E0C  24E1               	addwf	fsr1l,w,c
  4474  004E0E  6E3B               	movwf	btemp,c
  4475  004E10  0EFF               	movlw	255
  4476  004E12  20E2               	addwfc	fsr1h,w,c
  4477  004E14  6E3C               	movwf	btemp+1,c
  4478  004E16  0060  F0EF  FFE6   	movff	btemp,postinc1
  4479  004E1C  0060  F0F3  FFE6   	movff	btemp+1,postinc1
  4480                           
  4481                           ;stkvar	_fmt @ sp[(-9)+-3]
  4482  004E22  0EF4               	movlw	-12
  4483  004E24  50E3               	movf	plusw1,w,c
  4484  004E26  6EE6               	movwf	postinc1,c
  4485                           
  4486                           ;stkvar	_f @ sp[(-10)+0]
  4487  004E28  0EF6               	movlw	246
  4488  004E2A  24E1               	addwf	fsr1l,w,c
  4489  004E2C  6E3B               	movwf	btemp,c
  4490  004E2E  0EFF               	movlw	255
  4491  004E30  20E2               	addwfc	fsr1h,w,c
  4492  004E32  6E3C               	movwf	btemp+1,c
  4493  004E34  0060  F0EF  FFE6   	movff	btemp,postinc1
  4494  004E3A  0060  F0F3  FFE6   	movff	btemp+1,postinc1
  4495  004E40  ECD7  F028         	call	_vfprintf	;wreg free
  4496                           
  4497                           ; BSR set to: 0
  4498                           ;stkvar	_f @ sp[(-7)+0]
  4499  004E44  0EFA               	movlw	250
  4500  004E46  24E1               	addwf	fsr1l,w,c
  4501  004E48  6ED9               	movwf	fsr2l,c
  4502  004E4A  0EFF               	movlw	255
  4503  004E4C  20E2               	addwfc	fsr1h,w,c
  4504  004E4E  6EDA               	movwf	fsr2h,c
  4505  004E50  50DF               	movf	indf2,w,c
  4506  004E52  6E46               	movwf	btemp+11,c
  4507                           
  4508                           ;stkvar	_s @ sp[(-7)+-2]
  4509  004E54  0EF7               	movlw	-9
  4510  004E56  50E3               	movf	plusw1,w,c
  4511  004E58  2446               	addwf	btemp+11,w,c
  4512  004E5A  6ED9               	movwf	fsr2l,c
  4513  004E5C  6ADA               	clrf	fsr2h,c
  4514  004E5E  0E00               	movlw	0
  4515  004E60  6EDF               	movwf	indf2,c
  4516                           
  4517                           ; BSR set to: 0
  4518                           ; _sprintf: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, args
      +                          ize = 2, vargsize = 0
  4519  004E62  0EF9               	movlw	249
  4520  004E64  26E1               	addwf	fsr1l,f,c
  4521  004E66  0EFF               	movlw	255
  4522  004E68  22E2               	addwfc	fsr1h,f,c
  4523  004E6A  52E5               	movf	postdec1,f,c
  4524  004E6C  50E7               	movf	indf1,w,c
  4525  004E6E  5EE1               	subwf	fsr1l,f,c
  4526  004E70  0E00               	movlw	0
  4527  004E72  5AE2               	subwfb	fsr1h,f,c
  4528  004E74  0012               	return		;funcret
  4529  004E76                     __end_of_sprintf:
  4530                           	opt callstack 0
  4531                           
  4532 ;; *************** function _r_protocol *****************
  4533 ;; Defined at:
  4534 ;;		line 197 in file "gemsecs.c"
  4535 ;; Parameters:    Size  Location     Type
  4536 ;;  r_link          1  [STACK] PTR enum E16163
  4537 ;;		 -> V(89), 
  4538 ;; Auto vars:     Size  Location     Type
  4539 ;;  rxData          1  [STACK] unsigned char 
  4540 ;; Return value:  Size  Location     Type
  4541 ;;                  1  [STACK] enum E16903
  4542 ;; Registers used:
  4543 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  4544 ;; Tracked objects:
  4545 ;;		On entry : 0/0
  4546 ;;		On exit  : 0/0
  4547 ;;		Unchanged: 0/0
  4548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4553 ;;Total ram usage:        0 bytes
  4554 ;; Hardware stack levels used:    1
  4555 ;; Hardware stack levels required when called:    5
  4556 ;; This function calls:
  4557 ;;		_StartTimer
  4558 ;;		_TimerDone
  4559 ;;		_UART1_Read
  4560 ;;		_UART1_Write
  4561 ;;		_UART1_is_rx_ready
  4562 ;;		_WaitMs
  4563 ;;		_run_checksum
  4564 ;; This function is called by:
  4565 ;;		_main
  4566 ;; This function uses a reentrant model
  4567 ;;
  4568                           
  4569                           	psect	text11
  4570  003608                     __ptext11:
  4571                           	opt callstack 0
  4572  003608                     _r_protocol:
  4573                           	opt callstack 0
  4574                           
  4575                           ; BSR set to: 0
  4576                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4577  003608  52E6               	movf	postinc1,f,c
  4578                           
  4579                           ;gemsecs.c: 197: LINK_STATES r_protocol(LINK_STATES * r_link);gemsecs.c: 198: {;gemsecs.
      +                          c: 199:  uint8_t rxData;;gemsecs.c: 200:  static uint8_t rxData_l = 0, retry = 3;;gemsec
      +                          s.c: 202:  switch (*r_link) {
  4580                           
  4581                           ;incstack = 0
  4582  00360A  D13C               	goto	l6599
  4583  00360C                     l6493:
  4584                           
  4585                           ;gemsecs.c: 204:   if (UART1_is_rx_ready()) {
  4586  00360C  ECBB  F030         	call	_UART1_is_rx_ready	;wreg free
  4587  003610  503B               	movf	btemp,w,c
  4588  003612  B4D8               	btfsc	status,2,c
  4589  003614  D158               	goto	l6601
  4590                           
  4591                           ;gemsecs.c: 205:    rxData = UART1_Read();
  4592  003616  ECCD  F02C         	call	_UART1_Read	;wreg free
  4593                           
  4594                           ;stkvar	_rxData @ sp[(-1)+0]
  4595  00361A  0EFF               	movlw	-1
  4596  00361C  0060  F0EF  FFE3   	movff	btemp,plusw1
  4597                           
  4598                           ; BSR set to: 57
  4599                           ;gemsecs.c: 206:    if (rxData == 0x05) {
  4600                           ;stkvar	_rxData @ sp[(-1)+0]
  4601  003622  0EFF               	movlw	-1
  4602  003624  006F FF8C  F03B    	movff	plusw1,btemp
  4603  00362A  0E05               	movlw	5
  4604  00362C  183B               	xorwf	btemp,w,c
  4605  00362E  A4D8               	btfss	status,2,c
  4606  003630  D14A               	goto	l6601
  4607                           
  4608                           ; BSR set to: 57
  4609                           ;gemsecs.c: 207:     V.error = LINK_ERROR_NONE;
  4610  003632  0100               	movlb	0	; () banked
  4611  003634  6BB6               	clrf	(_V+79)& (0+255),b
  4612                           
  4613                           ; BSR set to: 0
  4614                           ;gemsecs.c: 208:     *r_link = LINK_STATE_ENQ;
  4615                           ;stkvar	_r_link @ sp[(-1)+-1]
  4616  003636  0EFE               	movlw	-2
  4617  003638  50E3               	movf	plusw1,w,c
  4618  00363A  6ED9               	movwf	fsr2l,c
  4619  00363C  6ADA               	clrf	fsr2h,c
  4620  00363E  0E01               	movlw	1
  4621  003640  D108               	goto	L13
  4622  003642                     l1597:
  4623                           
  4624                           ;gemsecs.c: 213:   rxData_l = 0;
  4625  003642  6A2C               	clrf	r_protocol@rxData_l,c
  4626                           
  4627                           ;gemsecs.c: 214:   UART1_Write(0x04);
  4628  003644  0E04               	movlw	4
  4629  003646  6EE6               	movwf	postinc1,c
  4630  003648  EC8F  F02C         	call	_UART1_Write	;wreg free
  4631                           
  4632                           ; BSR set to: 57
  4633                           ;gemsecs.c: 215:   StartTimer(TMR_T2, 2000);
  4634  00364C  0ED0               	movlw	208
  4635  00364E  6EE6               	movwf	postinc1,c
  4636  003650  0E07               	movlw	7
  4637  003652  6EE6               	movwf	postinc1,c
  4638  003654  0E02               	movlw	2
  4639  003656  6EE6               	movwf	postinc1,c
  4640  003658  EC0B  F02D         	call	_StartTimer	;wreg free
  4641                           
  4642                           ;gemsecs.c: 216:   *r_link = LINK_STATE_EOT;
  4643                           ;stkvar	_r_link @ sp[(-1)+-1]
  4644  00365C  0EFE               	movlw	-2
  4645  00365E  50E3               	movf	plusw1,w,c
  4646  003660  6ED9               	movwf	fsr2l,c
  4647  003662  6ADA               	clrf	fsr2h,c
  4648  003664  0E02               	movlw	2
  4649  003666  D0F5               	goto	L13
  4650  003668                     l6509:
  4651                           
  4652                           ;gemsecs.c: 224:   if (TimerDone(TMR_T2)) {
  4653  003668  0E02               	movlw	2
  4654  00366A  6EE6               	movwf	postinc1,c
  4655  00366C  EC7D  F02F         	call	_TimerDone	;wreg free
  4656  003670  503B               	movf	btemp,w,c
  4657  003672  B4D8               	btfsc	status,2,c
  4658  003674  D017               	goto	l6519
  4659                           
  4660                           ;gemsecs.c: 225:    if (!retry--) {
  4661  003676  065D               	decf	r_protocol@retry,f,c
  4662  003678  285D               	incf	r_protocol@retry,w,c
  4663  00367A  A4D8               	btfss	status,2,c
  4664  00367C  D00D               	goto	l6517
  4665                           
  4666                           ;gemsecs.c: 226:     V.error = LINK_ERROR_T2;
  4667  00367E  0E02               	movlw	2
  4668  003680  0100               	movlb	0	; () banked
  4669  003682  6FB6               	movwf	(_V+79)& (0+255),b
  4670                           
  4671                           ;gemsecs.c: 227:     V.failed_receive = 1;
  4672  003684  51BE               	movf	(_V+87)& (0+255),w,b
  4673  003686  0BF0               	andlw	-16
  4674  003688  0901               	iorlw	1
  4675  00368A  6FBE               	movwf	(_V+87)& (0+255),b
  4676                           
  4677                           ; BSR set to: 0
  4678                           ;gemsecs.c: 228:     *r_link = LINK_STATE_NAK;
  4679                           ;stkvar	_r_link @ sp[(-1)+-1]
  4680  00368C  0EFE               	movlw	-2
  4681  00368E  50E3               	movf	plusw1,w,c
  4682  003690  6ED9               	movwf	fsr2l,c
  4683  003692  6ADA               	clrf	fsr2h,c
  4684  003694  0E05               	movlw	5
  4685  003696  D0DD               	goto	L13
  4686  003698                     l6517:
  4687                           
  4688                           ;gemsecs.c: 230:     *r_link = LINK_STATE_IDLE;
  4689                           ;stkvar	_r_link @ sp[(-1)+-1]
  4690  003698  0EFE               	movlw	-2
  4691  00369A  50E3               	movf	plusw1,w,c
  4692  00369C  6ED9               	movwf	fsr2l,c
  4693  00369E  6ADA               	clrf	fsr2h,c
  4694  0036A0  0E00               	movlw	0
  4695  0036A2  D0D7               	goto	L13
  4696  0036A4                     l6519:
  4697                           
  4698                           ;gemsecs.c: 233:    if (UART1_is_rx_ready()) {
  4699  0036A4  ECBB  F030         	call	_UART1_is_rx_ready	;wreg free
  4700  0036A8  503B               	movf	btemp,w,c
  4701  0036AA  B4D8               	btfsc	status,2,c
  4702  0036AC  D10C               	goto	l6601
  4703                           
  4704                           ;gemsecs.c: 234:     rxData = UART1_Read();
  4705  0036AE  ECCD  F02C         	call	_UART1_Read	;wreg free
  4706                           
  4707                           ;stkvar	_rxData @ sp[(-1)+0]
  4708  0036B2  0EFF               	movlw	-1
  4709  0036B4  0060  F0EF  FFE3   	movff	btemp,plusw1
  4710                           
  4711                           ; BSR set to: 57
  4712                           ;gemsecs.c: 235:     if (rxData_l == 0) {
  4713  0036BA  502C               	movf	r_protocol@rxData_l,w,c
  4714  0036BC  A4D8               	btfss	status,2,c
  4715  0036BE  D00C               	goto	l6531
  4716                           
  4717                           ; BSR set to: 57
  4718                           ;gemsecs.c: 236:      r_block.length = rxData;
  4719                           ;stkvar	_rxData @ sp[(-1)+0]
  4720  0036C0  0EFF               	movlw	-1
  4721  0036C2  006F FF8C  F0CC    	movff	plusw1,_r_block+12
  4722                           
  4723                           ; BSR set to: 57
  4724                           ;gemsecs.c: 237:      run_checksum(0, 1);
  4725  0036C8  0E01               	movlw	1
  4726  0036CA  6EE6               	movwf	postinc1,c
  4727  0036CC  0E00               	movlw	0
  4728  0036CE  6EE6               	movwf	postinc1,c
  4729  0036D0  EC45  F02D         	call	_run_checksum	;wreg free
  4730                           
  4731                           ; BSR set to: 0
  4732                           ;gemsecs.c: 238:      rxData_l++;
  4733  0036D4  2A2C               	incf	r_protocol@rxData_l,f,c
  4734                           
  4735                           ;gemsecs.c: 239:     } else {
  4736  0036D6  D0F7               	goto	l6601
  4737  0036D8                     l6531:
  4738                           
  4739                           ; BSR set to: 57
  4740                           ;gemsecs.c: 243:      if (rxData_l <= sizeof(block10))
  4741  0036D8  0E0B               	movlw	11
  4742  0036DA  602C               	cpfslt	r_protocol@rxData_l,c
  4743  0036DC  D00C               	goto	l6535
  4744                           
  4745                           ; BSR set to: 57
  4746                           ;gemsecs.c: 244:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  4747                           ;stkvar	_rxData @ sp[(-1)+0]
  4748  0036DE  502C               	movf	r_protocol@rxData_l,w,c
  4749  0036E0  0819               	sublw	low (_H10+25)
  4750  0036E2  6ED9               	movwf	fsr2l,c
  4751  0036E4  0E00               	movlw	0
  4752  0036E6  A0D8               	btfss	status,0,c
  4753  0036E8  2AE8               	incf	wreg,f,c
  4754  0036EA  0801               	sublw	high (_H10+25)
  4755  0036EC  6EDA               	movwf	fsr2h,c
  4756  0036EE  0EFF               	movlw	-1
  4757  0036F0  006F FF8F FFDF     	movff	plusw1,indf2
  4758  0036F6                     l6535:
  4759                           
  4760                           ; BSR set to: 57
  4761                           ;gemsecs.c: 245:      if (rxData_l <= r_block.length)
  4762  0036F6  502C               	movf	r_protocol@rxData_l,w,c
  4763  0036F8  0100               	movlb	0	; () banked
  4764  0036FA  5DCC               	subwf	(_r_block+12)& (0+255),w,b
  4765  0036FC  A0D8               	btfss	status,0,c
  4766  0036FE  D00D               	goto	l6539
  4767                           
  4768                           ; BSR set to: 0
  4769                           ;gemsecs.c: 246:       V.r_checksum = run_checksum(rxData, 0);
  4770  003700  0E00               	movlw	0
  4771  003702  6EE6               	movwf	postinc1,c
  4772                           
  4773                           ;stkvar	_rxData @ sp[(-2)+0]
  4774  003704  0EFE               	movlw	-2
  4775  003706  50E3               	movf	plusw1,w,c
  4776  003708  6EE6               	movwf	postinc1,c
  4777  00370A  EC45  F02D         	call	_run_checksum	;wreg free
  4778  00370E  0060  F0EC  F0B9   	movff	btemp,_V+82
  4779  003714  0060  F0F0  F0BA   	movff	btemp+1,_V+83
  4780  00371A                     l6539:
  4781                           
  4782                           ; BSR set to: 0
  4783                           ;gemsecs.c: 248:      if (rxData_l == r_block.length + 1)
  4784  00371A  502C               	movf	r_protocol@rxData_l,w,c
  4785  00371C  6E45               	movwf	btemp+10,c
  4786  00371E  6A46               	clrf	btemp+11,c
  4787  003720  51CC               	movf	(_r_block+12)& (0+255),w,b
  4788  003722  6E43               	movwf	btemp+8,c
  4789  003724  6A44               	clrf	btemp+9,c
  4790  003726  0E01               	movlw	1
  4791  003728  2643               	addwf	btemp+8,f,c
  4792  00372A  0E00               	movlw	0
  4793  00372C  2244               	addwfc	btemp+9,f,c
  4794  00372E  5045               	movf	btemp+10,w,c
  4795  003730  1843               	xorwf	btemp+8,w,c
  4796  003732  E109               	bnz	l6543
  4797  003734  5046               	movf	btemp+11,w,c
  4798  003736  1844               	xorwf	btemp+9,w,c
  4799  003738  A4D8               	btfss	status,2,c
  4800  00373A  D005               	goto	l6543
  4801                           
  4802                           ; BSR set to: 0
  4803                           ;gemsecs.c: 249:       H10[1].checksum = (uint16_t) rxData << 8;
  4804                           ;stkvar	_rxData @ sp[(-1)+0]
  4805  00373C  0EFF               	movlw	-1
  4806  00373E  50E3               	movf	plusw1,w,c
  4807  003740  0101               	movlb	1	; () banked
  4808  003742  6F0E               	movwf	(_H10+14)& (0+255),b
  4809  003744  6B0D               	clrf	(_H10+13)& (0+255),b
  4810  003746                     l6543:
  4811                           
  4812                           ;gemsecs.c: 250:      if (rxData_l == r_block.length + 2)
  4813  003746  502C               	movf	r_protocol@rxData_l,w,c
  4814  003748  6E45               	movwf	btemp+10,c
  4815  00374A  6A46               	clrf	btemp+11,c
  4816  00374C  0100               	movlb	0	; () banked
  4817  00374E  51CC               	movf	(_r_block+12)& (0+255),w,b
  4818  003750  6E43               	movwf	btemp+8,c
  4819  003752  6A44               	clrf	btemp+9,c
  4820  003754  0E02               	movlw	2
  4821  003756  2643               	addwf	btemp+8,f,c
  4822  003758  0E00               	movlw	0
  4823  00375A  2244               	addwfc	btemp+9,f,c
  4824  00375C  5045               	movf	btemp+10,w,c
  4825  00375E  1843               	xorwf	btemp+8,w,c
  4826  003760  E10A               	bnz	l6547
  4827  003762  5046               	movf	btemp+11,w,c
  4828  003764  1844               	xorwf	btemp+9,w,c
  4829  003766  A4D8               	btfss	status,2,c
  4830  003768  D006               	goto	l6547
  4831                           
  4832                           ; BSR set to: 0
  4833                           ;gemsecs.c: 251:       H10[1].checksum += rxData;
  4834                           ;stkvar	_rxData @ sp[(-1)+0]
  4835  00376A  0EFF               	movlw	-1
  4836  00376C  50E3               	movf	plusw1,w,c
  4837  00376E  0101               	movlb	1	; () banked
  4838  003770  270D               	addwf	(_H10+13)& (0+255),f,b
  4839  003772  0E00               	movlw	0
  4840  003774  230E               	addwfc	(_H10+14)& (0+255),f,b
  4841  003776                     l6547:
  4842                           
  4843                           ;gemsecs.c: 253:      rxData_l++;
  4844  003776  2A2C               	incf	r_protocol@rxData_l,f,c
  4845                           
  4846                           ;gemsecs.c: 254:      if (rxData_l > (r_block.length + 2)) {
  4847  003778  502C               	movf	r_protocol@rxData_l,w,c
  4848  00377A  6E45               	movwf	btemp+10,c
  4849  00377C  6A46               	clrf	btemp+11,c
  4850  00377E  0100               	movlb	0	; () banked
  4851  003780  51CC               	movf	(_r_block+12)& (0+255),w,b
  4852  003782  6E43               	movwf	btemp+8,c
  4853  003784  6A44               	clrf	btemp+9,c
  4854  003786  0E02               	movlw	2
  4855  003788  2643               	addwf	btemp+8,f,c
  4856  00378A  0E00               	movlw	0
  4857  00378C  2244               	addwfc	btemp+9,f,c
  4858  00378E  5045               	movf	btemp+10,w,c
  4859  003790  5C43               	subwf	btemp+8,w,c
  4860  003792  5044               	movf	btemp+9,w,c
  4861  003794  0A80               	xorlw	128
  4862  003796  6E3B               	movwf	btemp,c
  4863  003798  5046               	movf	btemp+11,w,c
  4864  00379A  0A80               	xorlw	128
  4865  00379C  583B               	subwfb	btemp,w,c
  4866  00379E  B0D8               	btfsc	status,0,c
  4867  0037A0  D092               	goto	l6601
  4868                           
  4869                           ; BSR set to: 0
  4870                           ;gemsecs.c: 255:       if (V.r_checksum == H10[1].checksum) {
  4871  0037A2  0101               	movlb	1	; () banked
  4872  0037A4  510D               	movf	(_H10+13)& (0+255),w,b
  4873  0037A6  0100               	movlb	0	; () banked
  4874  0037A8  19B9               	xorwf	(_V+82)& (0+255),w,b
  4875  0037AA  E10E               	bnz	l6557
  4876  0037AC  0101               	movlb	1	; () banked
  4877  0037AE  510E               	movf	(_H10+14)& (0+255),w,b
  4878  0037B0  0100               	movlb	0	; () banked
  4879  0037B2  19BA               	xorwf	(_V+83)& (0+255),w,b
  4880  0037B4  A4D8               	btfss	status,2,c
  4881  0037B6  D008               	goto	l6557
  4882                           
  4883                           ; BSR set to: 0
  4884                           ;gemsecs.c: 256:        *r_link = LINK_STATE_ACK;
  4885                           ;stkvar	_r_link @ sp[(-1)+-1]
  4886  0037B8  0EFE               	movlw	-2
  4887  0037BA  50E3               	movf	plusw1,w,c
  4888  0037BC  6ED9               	movwf	fsr2l,c
  4889  0037BE  6ADA               	clrf	fsr2h,c
  4890  0037C0  0E03               	movlw	3
  4891  0037C2  D047               	goto	L13
  4892  0037C4                     l6555:
  4893  0037C4  ECCD  F02C         	call	_UART1_Read	;wreg free
  4894  0037C8                     l6557:
  4895                           
  4896                           ;gemsecs.c: 258:        while (UART1_is_rx_ready())
  4897  0037C8  ECBB  F030         	call	_UART1_is_rx_ready	;wreg free
  4898  0037CC  503B               	movf	btemp,w,c
  4899  0037CE  A4D8               	btfss	status,2,c
  4900  0037D0  D7F9               	goto	l6555
  4901                           
  4902                           ;gemsecs.c: 260:        WaitMs(500);
  4903  0037D2  0EF4               	movlw	244
  4904  0037D4  6EE6               	movwf	postinc1,c
  4905  0037D6  0E01               	movlw	1
  4906  0037D8  6EE6               	movwf	postinc1,c
  4907  0037DA  ECC7  F02D         	call	_WaitMs	;wreg free
  4908                           
  4909                           ;gemsecs.c: 261:        V.error = LINK_ERROR_CHECKSUM;
  4910  0037DE  0E05               	movlw	5
  4911  0037E0  0100               	movlb	0	; () banked
  4912  0037E2  6FB6               	movwf	(_V+79)& (0+255),b
  4913                           
  4914                           ; BSR set to: 0
  4915                           ;gemsecs.c: 262:        V.failed_receive = 2;
  4916  0037E4  51BE               	movf	(_V+87)& (0+255),w,b
  4917  0037E6  0BF0               	andlw	-16
  4918  0037E8  0902               	iorlw	2
  4919  0037EA  D74F               	goto	L14
  4920  0037EC                     l6567:
  4921                           
  4922                           ;gemsecs.c: 271:   V.stream = H10[1].block.block.stream;
  4923  0037EC  0101               	movlb	1	; () banked
  4924  0037EE  5116               	movf	(_H10+22)& (0+255),w,b
  4925  0037F0  0B7F               	andlw	127
  4926  0037F2  0100               	movlb	0	; () banked
  4927  0037F4  6FB4               	movwf	(_V+77)& (0+255),b
  4928                           
  4929                           ; BSR set to: 0
  4930                           ;gemsecs.c: 272:   V.function = H10[1].block.block.function;
  4931  0037F6  C115  F0B5         	movff	_H10+21,_V+78
  4932                           
  4933                           ; BSR set to: 0
  4934                           ;gemsecs.c: 273:   V.systemb = H10[1].block.block.systemb;
  4935  0037FA  C10F  F0B0         	movff	_H10+15,_V+73
  4936  0037FE  C110  F0B1         	movff	_H10+16,_V+74
  4937  003802  C111  F0B2         	movff	_H10+17,_V+75
  4938  003806  C112  F0B3         	movff	_H10+18,_V+76
  4939                           
  4940                           ; BSR set to: 0
  4941                           ;gemsecs.c: 274:   V.rbit = H10[1].block.block.rbit;
  4942  00380A  0101               	movlb	1	; () banked
  4943  00380C  AF18               	btfss	(_H10+24)& (0+255),7,b
  4944  00380E  D003               	bra	u3625
  4945  003810  0100               	movlb	0	; () banked
  4946  003812  81BD               	bsf	(_V+86)& (0+255),0,b
  4947  003814  D002               	bra	u3627
  4948  003816                     u3625:
  4949  003816  0100               	movlb	0	; () banked
  4950  003818  91BD               	bcf	(_V+86)& (0+255),0,b
  4951  00381A                     u3627:
  4952                           
  4953                           ; BSR set to: 0
  4954                           ;gemsecs.c: 275:   V.wbit = H10[1].block.block.wbit;
  4955  00381A  0101               	movlb	1	; () banked
  4956  00381C  AF16               	btfss	(_H10+22)& (0+255),7,b
  4957  00381E  D003               	bra	u3635
  4958  003820  0100               	movlb	0	; () banked
  4959  003822  83BD               	bsf	(_V+86)& (0+255),1,b
  4960  003824  D002               	bra	u3637
  4961  003826                     u3635:
  4962  003826  0100               	movlb	0	; () banked
  4963  003828  93BD               	bcf	(_V+86)& (0+255),1,b
  4964  00382A                     u3637:
  4965                           
  4966                           ; BSR set to: 0
  4967                           ;gemsecs.c: 276:   V.ebit = H10[1].block.block.ebit;
  4968  00382A  0101               	movlb	1	; () banked
  4969  00382C  AF14               	btfss	(_H10+20)& (0+255),7,b
  4970  00382E  D003               	bra	u3645
  4971  003830  0100               	movlb	0	; () banked
  4972  003832  85BD               	bsf	(_V+86)& (0+255),2,b
  4973  003834  D002               	bra	u3647
  4974  003836                     u3645:
  4975  003836  0100               	movlb	0	; () banked
  4976  003838  95BD               	bcf	(_V+86)& (0+255),2,b
  4977  00383A                     u3647:
  4978                           
  4979                           ; BSR set to: 0
  4980                           ;gemsecs.c: 277:   UART1_Write(0x06);
  4981  00383A  0E06               	movlw	6
  4982  00383C  6EE6               	movwf	postinc1,c
  4983  00383E  EC8F  F02C         	call	_UART1_Write	;wreg free
  4984                           
  4985                           ; BSR set to: 57
  4986                           ;gemsecs.c: 278:   V.failed_receive = 0;
  4987  003842  0EF0               	movlw	-16
  4988  003844  0100               	movlb	0	; () banked
  4989  003846  17BE               	andwf	(_V+87)& (0+255),f,b
  4990                           
  4991                           ;gemsecs.c: 279:   *r_link = LINK_STATE_DONE;
  4992                           ;stkvar	_r_link @ sp[(-1)+-1]
  4993  003848  0EFE               	movlw	-2
  4994  00384A  50E3               	movf	plusw1,w,c
  4995  00384C  6ED9               	movwf	fsr2l,c
  4996  00384E  6ADA               	clrf	fsr2h,c
  4997  003850  0E04               	movlw	4
  4998  003852                     L13:
  4999  003852  6EDF               	movwf	indf2,c
  5000                           
  5001                           ;gemsecs.c: 280:   break;
  5002  003854  D038               	goto	l6601
  5003  003856                     l6583:
  5004                           
  5005                           ;gemsecs.c: 282:   UART1_Write(0x15);
  5006  003856  0E15               	movlw	21
  5007  003858  6EE6               	movwf	postinc1,c
  5008  00385A  EC8F  F02C         	call	_UART1_Write	;wreg free
  5009                           
  5010                           ; BSR set to: 57
  5011                           ;gemsecs.c: 283:   *r_link = LINK_STATE_ERROR;
  5012                           ;stkvar	_r_link @ sp[(-1)+-1]
  5013  00385E  0EFE               	movlw	-2
  5014  003860  50E3               	movf	plusw1,w,c
  5015  003862  6ED9               	movwf	fsr2l,c
  5016  003864  6ADA               	clrf	fsr2h,c
  5017  003866  0E06               	movlw	6
  5018  003868  6EDF               	movwf	indf2,c
  5019                           
  5020                           ;gemsecs.c: 284:   while ((uart1RxCount)) {
  5021  00386A  D002               	goto	l6589
  5022  00386C                     l6587:
  5023                           
  5024                           ; BSR set to: 57
  5025                           ;gemsecs.c: 285:    UART1_Read();
  5026  00386C  ECCD  F02C         	call	_UART1_Read	;wreg free
  5027  003870                     l6589:
  5028                           
  5029                           ; BSR set to: 57
  5030                           ;gemsecs.c: 284:   while ((uart1RxCount)) {
  5031  003870  5035               	movf	_uart1RxCount,w,c	;volatile
  5032  003872  A4D8               	btfss	status,2,c
  5033  003874  D7FB               	goto	l6587
  5034                           
  5035                           ; BSR set to: 57
  5036                           ;gemsecs.c: 287:   retry = 3;
  5037  003876  0E03               	movlw	3
  5038  003878  6E5D               	movwf	r_protocol@retry,c
  5039                           
  5040                           ;gemsecs.c: 288:   break;
  5041  00387A  D025               	goto	l6601
  5042  00387C                     l6593:
  5043                           
  5044                           ;gemsecs.c: 292:   V.failed_receive = 0;
  5045  00387C  0EF0               	movlw	-16
  5046  00387E  0100               	movlb	0	; () banked
  5047  003880  17BE               	andwf	(_V+87)& (0+255),f,b
  5048  003882  D70A               	goto	l6517
  5049  003884                     l6599:
  5050                           
  5051                           ;stkvar	_r_link @ sp[(-1)+-1]
  5052  003884  0EFE               	movlw	-2
  5053  003886  50E3               	movf	plusw1,w,c
  5054  003888  6ED9               	movwf	fsr2l,c
  5055  00388A  6ADA               	clrf	fsr2h,c
  5056  00388C  50DF               	movf	indf2,w,c
  5057  00388E  6E45               	movwf	btemp+10,c
  5058  003890  6A46               	clrf	btemp+11,c
  5059                           
  5060                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5061                           ; Switch size 1, requested type "simple"
  5062                           ; Number of cases is 1, Range of values is 0 to 0
  5063                           ; switch strategies available:
  5064                           ; Name         Instructions Cycles
  5065                           ; simple_byte            4     3 (average)
  5066                           ;	Chosen strategy is simple_byte
  5067  003892  5046               	movf	btemp+11,w,c
  5068  003894  0A00               	xorlw	0	; case 0
  5069  003896  A4D8               	btfss	status,2,c
  5070  003898  D6FF               	goto	l6517
  5071                           
  5072                           ; Switch size 1, requested type "simple"
  5073                           ; Number of cases is 7, Range of values is 0 to 6
  5074                           ; switch strategies available:
  5075                           ; Name         Instructions Cycles
  5076                           ; simple_byte           22    12 (average)
  5077                           ;	Chosen strategy is simple_byte
  5078  00389A  5045               	movf	btemp+10,w,c
  5079  00389C  0A00               	xorlw	0	; case 0
  5080  00389E  B4D8               	btfsc	status,2,c
  5081  0038A0  D6B5               	goto	l6493
  5082  0038A2  0A01               	xorlw	1	; case 1
  5083  0038A4  B4D8               	btfsc	status,2,c
  5084  0038A6  D6CD               	goto	l1597
  5085  0038A8  0A03               	xorlw	3	; case 2
  5086  0038AA  B4D8               	btfsc	status,2,c
  5087  0038AC  D6DD               	goto	l6509
  5088  0038AE  0A01               	xorlw	1	; case 3
  5089  0038B0  B4D8               	btfsc	status,2,c
  5090  0038B2  D79C               	goto	l6567
  5091  0038B4  0A07               	xorlw	7	; case 4
  5092  0038B6  B4D8               	btfsc	status,2,c
  5093  0038B8  D7E1               	goto	l6593
  5094  0038BA  0A01               	xorlw	1	; case 5
  5095  0038BC  B4D8               	btfsc	status,2,c
  5096  0038BE  D7CB               	goto	l6583
  5097  0038C0  0A03               	xorlw	3	; case 6
  5098  0038C2  A4D8               	btfss	status,2,c
  5099  0038C4  D6E9               	goto	l6517
  5100  0038C6                     l6601:
  5101                           
  5102                           ;gemsecs.c: 299:  return *r_link;
  5103                           ;stkvar	_r_link @ sp[(-1)+-1]
  5104  0038C6  0EFE               	movlw	-2
  5105  0038C8  50E3               	movf	plusw1,w,c
  5106  0038CA  6ED9               	movwf	fsr2l,c
  5107  0038CC  6ADA               	clrf	fsr2h,c
  5108  0038CE  50DF               	movf	indf2,w,c
  5109  0038D0  6E3B               	movwf	btemp,c
  5110                           
  5111                           ; _r_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5112  0038D2  52E5               	movf	postdec1,f,c
  5113  0038D4  52E5               	movf	postdec1,f,c
  5114  0038D6  0012               	return		;funcret
  5115  0038D8                     __end_of_r_protocol:
  5116                           	opt callstack 0
  5117                           
  5118 ;; *************** function _UART1_Write *****************
  5119 ;; Defined at:
  5120 ;;		line 179 in file "mcc_generated_files/uart1.c"
  5121 ;; Parameters:    Size  Location     Type
  5122 ;;  txData          1  [STACK] unsigned char 
  5123 ;; Auto vars:     Size  Location     Type
  5124 ;;		None
  5125 ;; Return value:  Size  Location     Type
  5126 ;;                  1  [STACK] void 
  5127 ;; Registers used:
  5128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5129 ;; Tracked objects:
  5130 ;;		On entry : 0/0
  5131 ;;		On exit  : 3F/39
  5132 ;;		Unchanged: 0/0
  5133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5138 ;;Total ram usage:        0 bytes
  5139 ;; Hardware stack levels used:    1
  5140 ;; Hardware stack levels required when called:    3
  5141 ;; This function calls:
  5142 ;;		Nothing
  5143 ;; This function is called by:
  5144 ;;		_r_protocol
  5145 ;;		_t_protocol
  5146 ;;		_secs_send
  5147 ;; This function uses a reentrant model
  5148 ;;
  5149                           
  5150                           	psect	text12
  5151  00591E                     __ptext12:
  5152                           	opt callstack 0
  5153  00591E                     _UART1_Write:
  5154                           	opt callstack 25
  5155                           
  5156                           ;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  5157                           
  5158                           ;mcc_generated_files/uart1.c: 179: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 180: {;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  5159                           
  5160                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5161                           ;incstack = 0
  5162  00591E  5038               	movf	_uart1TxBufferRemaining,w,c	;volatile
  5163  005920  B4D8               	btfsc	status,2,c
  5164  005922  D7FD               	goto	_UART1_Write
  5165                           
  5166                           ;mcc_generated_files/uart1.c: 184:  if (0 == PIE3bits.U1TXIE) {
  5167  005924  0139               	movlb	57	; () banked
  5168  005926  B993               	btfsc	147,4,b	;volatile
  5169  005928  D005               	goto	l579
  5170                           
  5171                           ; BSR set to: 57
  5172                           ;mcc_generated_files/uart1.c: 185:   U1TXB = txData;
  5173                           ;stkvar	_txData @ sp[(0)+-1]
  5174  00592A  0EFF               	movlw	-1
  5175  00592C  006F FF8F FDEA     	movff	plusw1,15850	;volatile
  5176                           
  5177                           ;mcc_generated_files/uart1.c: 186:  } else {
  5178  005932  D011               	goto	l5709
  5179  005934                     l579:
  5180                           
  5181                           ; BSR set to: 57
  5182                           ;mcc_generated_files/uart1.c: 187:   PIE3bits.U1TXIE = 0;
  5183  005934  9993               	bcf	147,4,b	;volatile
  5184                           
  5185                           ; BSR set to: 57
  5186                           ;mcc_generated_files/uart1.c: 188:   uart1TxBuffer[uart1TxHead++] = txData;
  5187                           ;stkvar	_txData @ sp[(0)+-1]
  5188  005936  0EC0               	movlw	low _uart1TxBuffer
  5189  005938  243A               	addwf	_uart1TxHead,w,c	;volatile
  5190  00593A  6ED9               	movwf	fsr2l,c
  5191  00593C  6ADA               	clrf	fsr2h,c
  5192  00593E  0E02               	movlw	high _uart1TxBuffer
  5193  005940  22DA               	addwfc	fsr2h,f,c
  5194  005942  0EFF               	movlw	-1
  5195  005944  006F FF8F FFDF     	movff	plusw1,indf2
  5196                           
  5197                           ; BSR set to: 57
  5198  00594A  2A3A               	incf	_uart1TxHead,f,c	;volatile
  5199                           
  5200                           ; BSR set to: 57
  5201                           ;mcc_generated_files/uart1.c: 189:   if (sizeof(uart1TxBuffer) <= uart1TxHead) {
  5202  00594C  0E3F               	movlw	63
  5203  00594E  643A               	cpfsgt	_uart1TxHead,c
  5204  005950  D001               	goto	l5707
  5205                           
  5206                           ; BSR set to: 57
  5207                           ;mcc_generated_files/uart1.c: 190:    uart1TxHead = 0;
  5208  005952  6A3A               	clrf	_uart1TxHead,c	;volatile
  5209  005954                     l5707:
  5210                           
  5211                           ; BSR set to: 57
  5212                           ;mcc_generated_files/uart1.c: 192:   uart1TxBufferRemaining--;
  5213  005954  0638               	decf	_uart1TxBufferRemaining,f,c	;volatile
  5214  005956                     l5709:
  5215                           
  5216                           ; BSR set to: 57
  5217                           ;mcc_generated_files/uart1.c: 194:  PIE3bits.U1TXIE = 1;
  5218  005956  8993               	bsf	147,4,b	;volatile
  5219                           
  5220                           ; BSR set to: 57
  5221                           ; _UART1_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  5222  005958  52E5               	movf	postdec1,f,c
  5223  00595A  0012               	return		;funcret
  5224  00595C                     __end_of_UART1_Write:
  5225                           	opt callstack 0
  5226                           
  5227 ;; *************** function _m_protocol *****************
  5228 ;; Defined at:
  5229 ;;		line 42 in file "gemsecs.c"
  5230 ;; Parameters:    Size  Location     Type
  5231 ;;  m_link          1  [STACK] PTR enum E16163
  5232 ;;		 -> V(89), 
  5233 ;; Auto vars:     Size  Location     Type
  5234 ;;  rxData          1  [STACK] unsigned char 
  5235 ;; Return value:  Size  Location     Type
  5236 ;;                  1  [STACK] enum E16903
  5237 ;; Registers used:
  5238 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  5239 ;; Tracked objects:
  5240 ;;		On entry : 0/0
  5241 ;;		On exit  : 0/0
  5242 ;;		Unchanged: 0/0
  5243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5248 ;;Total ram usage:        0 bytes
  5249 ;; Hardware stack levels used:    1
  5250 ;; Hardware stack levels required when called:    5
  5251 ;; This function calls:
  5252 ;;		_StartTimer
  5253 ;;		_TimerDone
  5254 ;;		_UART1_Read
  5255 ;;		_UART1_is_rx_ready
  5256 ;;		_UART2_Read
  5257 ;;		_UART2_is_rx_ready
  5258 ;;		_WaitMs
  5259 ;;		_run_checksum
  5260 ;; This function is called by:
  5261 ;;		_main
  5262 ;; This function uses a reentrant model
  5263 ;;
  5264                           
  5265                           	psect	text13
  5266  002EAE                     __ptext13:
  5267                           	opt callstack 0
  5268  002EAE                     _m_protocol:
  5269                           	opt callstack 0
  5270                           
  5271                           ; BSR set to: 57
  5272                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5273  002EAE  52E6               	movf	postinc1,f,c
  5274                           
  5275                           ;gemsecs.c: 42: LINK_STATES m_protocol(LINK_STATES *m_link);gemsecs.c: 43: {;gemsecs.c: 
      +                          44:  uint8_t rxData;;gemsecs.c: 45:  static uint8_t rxData_l = 0;;gemsecs.c: 47:  switch
      +                           (*m_link) {
  5276                           
  5277                           ;incstack = 0
  5278  002EB0  D20B               	goto	l6885
  5279  002EB2                     l6719:
  5280                           
  5281                           ;gemsecs.c: 52:   if (UART1_is_rx_ready()) {
  5282  002EB2  ECBB  F030         	call	_UART1_is_rx_ready	;wreg free
  5283  002EB6  503B               	movf	btemp,w,c
  5284  002EB8  B4D8               	btfsc	status,2,c
  5285  002EBA  D021               	goto	l6733
  5286                           
  5287                           ;gemsecs.c: 53:    rxData = UART1_Read();
  5288  002EBC  ECCD  F02C         	call	_UART1_Read	;wreg free
  5289                           
  5290                           ;stkvar	_rxData @ sp[(-1)+0]
  5291  002EC0  0EFF               	movlw	-1
  5292  002EC2  0060  F0EF  FFE3   	movff	btemp,plusw1
  5293                           
  5294                           ; BSR set to: 57
  5295                           ;gemsecs.c: 54:    if (rxData == 0x05) {
  5296                           ;stkvar	_rxData @ sp[(-1)+0]
  5297  002EC8  0EFF               	movlw	-1
  5298  002ECA  006F FF8C  F03B    	movff	plusw1,btemp
  5299  002ED0  0E05               	movlw	5
  5300  002ED2  183B               	xorwf	btemp,w,c
  5301  002ED4  A4D8               	btfss	status,2,c
  5302  002ED6  D013               	goto	l6733
  5303                           
  5304                           ; BSR set to: 57
  5305                           ;gemsecs.c: 55:     V.uart = 1;
  5306  002ED8  0E01               	movlw	1
  5307  002EDA  0100               	movlb	0	; () banked
  5308  002EDC  6FBF               	movwf	(_V+88)& (0+255),b
  5309                           
  5310                           ; BSR set to: 0
  5311                           ;gemsecs.c: 56:     StartTimer(TMR_T2, 2000);
  5312  002EDE  0ED0               	movlw	208
  5313  002EE0  6EE6               	movwf	postinc1,c
  5314  002EE2  0E07               	movlw	7
  5315  002EE4  6EE6               	movwf	postinc1,c
  5316  002EE6  0E02               	movlw	2
  5317  002EE8  6EE6               	movwf	postinc1,c
  5318  002EEA  EC0B  F02D         	call	_StartTimer	;wreg free
  5319                           
  5320                           ;gemsecs.c: 57:     V.error = LINK_ERROR_NONE;
  5321  002EEE  0100               	movlb	0	; () banked
  5322  002EF0  6BB6               	clrf	(_V+79)& (0+255),b
  5323                           
  5324                           ; BSR set to: 0
  5325                           ;gemsecs.c: 58:     *m_link = LINK_STATE_ENQ;
  5326                           ;stkvar	_m_link @ sp[(-1)+-1]
  5327  002EF2  0EFE               	movlw	-2
  5328  002EF4  50E3               	movf	plusw1,w,c
  5329  002EF6  6ED9               	movwf	fsr2l,c
  5330  002EF8  6ADA               	clrf	fsr2h,c
  5331  002EFA  0E01               	movlw	1
  5332  002EFC  6EDF               	movwf	indf2,c
  5333  002EFE                     l6733:
  5334                           
  5335                           ;gemsecs.c: 61:   if (UART2_is_rx_ready()) {
  5336  002EFE  ECB7  F030         	call	_UART2_is_rx_ready	;wreg free
  5337  002F02  503B               	movf	btemp,w,c
  5338  002F04  B4D8               	btfsc	status,2,c
  5339  002F06  D201               	goto	l6887
  5340                           
  5341                           ;gemsecs.c: 62:    rxData = UART2_Read();
  5342  002F08  ECAE  F02C         	call	_UART2_Read	;wreg free
  5343                           
  5344                           ;stkvar	_rxData @ sp[(-1)+0]
  5345  002F0C  0EFF               	movlw	-1
  5346  002F0E  0060  F0EF  FFE3   	movff	btemp,plusw1
  5347                           
  5348                           ; BSR set to: 57
  5349                           ;gemsecs.c: 63:    if (rxData == 0x05) {
  5350                           ;stkvar	_rxData @ sp[(-1)+0]
  5351  002F14  0EFF               	movlw	-1
  5352  002F16  006F FF8C  F03B    	movff	plusw1,btemp
  5353  002F1C  0E05               	movlw	5
  5354  002F1E  183B               	xorwf	btemp,w,c
  5355  002F20  A4D8               	btfss	status,2,c
  5356  002F22  D1F3               	goto	l6887
  5357                           
  5358                           ; BSR set to: 57
  5359                           ;gemsecs.c: 64:     V.uart = 2;
  5360  002F24  0E02               	movlw	2
  5361  002F26  0100               	movlb	0	; () banked
  5362  002F28  6FBF               	movwf	(_V+88)& (0+255),b
  5363                           
  5364                           ; BSR set to: 0
  5365                           ;gemsecs.c: 65:     StartTimer(TMR_T2, 2000);
  5366  002F2A  0ED0               	movlw	208
  5367  002F2C  6EE6               	movwf	postinc1,c
  5368  002F2E  0E07               	movlw	7
  5369  002F30  6EE6               	movwf	postinc1,c
  5370  002F32  0E02               	movlw	2
  5371  002F34  6EE6               	movwf	postinc1,c
  5372  002F36  EC0B  F02D         	call	_StartTimer	;wreg free
  5373                           
  5374                           ;gemsecs.c: 66:     V.error = LINK_ERROR_NONE;
  5375  002F3A  0100               	movlb	0	; () banked
  5376  002F3C  6BB6               	clrf	(_V+79)& (0+255),b
  5377                           
  5378                           ; BSR set to: 0
  5379                           ;gemsecs.c: 67:     *m_link = LINK_STATE_ENQ;
  5380                           ;stkvar	_m_link @ sp[(-1)+-1]
  5381  002F3E  0EFE               	movlw	-2
  5382  002F40  50E3               	movf	plusw1,w,c
  5383  002F42  6ED9               	movwf	fsr2l,c
  5384  002F44  6ADA               	clrf	fsr2h,c
  5385  002F46  0E01               	movlw	1
  5386  002F48  D1BD               	goto	L20
  5387  002F4A                     l1544:
  5388                           
  5389                           ;gemsecs.c: 79:   V.error = LINK_ERROR_NONE;
  5390  002F4A  0100               	movlb	0	; () banked
  5391  002F4C  6BB6               	clrf	(_V+79)& (0+255),b
  5392                           
  5393                           ; BSR set to: 0
  5394                           ;gemsecs.c: 80:   *m_link = LINK_STATE_EOT;
  5395                           ;stkvar	_m_link @ sp[(-1)+-1]
  5396  002F4E  0EFE               	movlw	-2
  5397  002F50  50E3               	movf	plusw1,w,c
  5398  002F52  6ED9               	movwf	fsr2l,c
  5399  002F54  6ADA               	clrf	fsr2h,c
  5400  002F56  0E02               	movlw	2
  5401  002F58  6EDF               	movwf	indf2,c
  5402                           
  5403                           ; BSR set to: 0
  5404                           ;gemsecs.c: 81:   StartTimer(TMR_T2, 2000);
  5405  002F5A  0ED0               	movlw	208
  5406  002F5C  6EE6               	movwf	postinc1,c
  5407  002F5E  0E07               	movlw	7
  5408  002F60  6EE6               	movwf	postinc1,c
  5409  002F62  0E02               	movlw	2
  5410  002F64  6EE6               	movwf	postinc1,c
  5411  002F66  EC0B  F02D         	call	_StartTimer	;wreg free
  5412                           
  5413                           ;gemsecs.c: 82:   break;
  5414  002F6A  D1CF               	goto	l6887
  5415  002F6C                     l6751:
  5416                           
  5417                           ;gemsecs.c: 84:   if (TimerDone(TMR_T2)) {
  5418  002F6C  0E02               	movlw	2
  5419  002F6E  6EE6               	movwf	postinc1,c
  5420  002F70  EC7D  F02F         	call	_TimerDone	;wreg free
  5421  002F74  503B               	movf	btemp,w,c
  5422  002F76  B4D8               	btfsc	status,2,c
  5423  002F78  D00D               	goto	l6757
  5424                           
  5425                           ;gemsecs.c: 85:    V.error = LINK_ERROR_T2;
  5426  002F7A  0E02               	movlw	2
  5427  002F7C  0100               	movlb	0	; () banked
  5428  002F7E  6FB6               	movwf	(_V+79)& (0+255),b
  5429                           
  5430                           ;gemsecs.c: 86:    V.failed_receive = 2;
  5431  002F80  51BE               	movf	(_V+87)& (0+255),w,b
  5432  002F82  0BF0               	andlw	-16
  5433  002F84  0902               	iorlw	2
  5434  002F86  6FBE               	movwf	(_V+87)& (0+255),b
  5435                           
  5436                           ; BSR set to: 0
  5437                           ;gemsecs.c: 87:    *m_link = LINK_STATE_NAK;
  5438                           ;stkvar	_m_link @ sp[(-1)+-1]
  5439  002F88  0EFE               	movlw	-2
  5440  002F8A  50E3               	movf	plusw1,w,c
  5441  002F8C  6ED9               	movwf	fsr2l,c
  5442  002F8E  6ADA               	clrf	fsr2h,c
  5443  002F90  0E05               	movlw	5
  5444  002F92  D198               	goto	L20
  5445  002F94                     l6757:
  5446                           
  5447                           ;gemsecs.c: 89:    if (UART1_is_rx_ready()) {
  5448  002F94  ECBB  F030         	call	_UART1_is_rx_ready	;wreg free
  5449  002F98  503B               	movf	btemp,w,c
  5450  002F9A  B4D8               	btfsc	status,2,c
  5451  002F9C  D0A5               	goto	l6805
  5452                           
  5453                           ;gemsecs.c: 90:     rxData = UART1_Read();
  5454  002F9E  ECCD  F02C         	call	_UART1_Read	;wreg free
  5455                           
  5456                           ;stkvar	_rxData @ sp[(-1)+0]
  5457  002FA2  0EFF               	movlw	-1
  5458  002FA4  0060  F0EF  FFE3   	movff	btemp,plusw1
  5459                           
  5460                           ; BSR set to: 57
  5461                           ;gemsecs.c: 91:     if (rxData_l == 0) {
  5462  002FAA  502D               	movf	m_protocol@rxData_l,w,c
  5463  002FAC  A4D8               	btfss	status,2,c
  5464  002FAE  D00C               	goto	l6769
  5465                           
  5466                           ; BSR set to: 57
  5467                           ;gemsecs.c: 92:      r_block.length = rxData;
  5468                           ;stkvar	_rxData @ sp[(-1)+0]
  5469  002FB0  0EFF               	movlw	-1
  5470  002FB2  006F FF8C  F0CC    	movff	plusw1,_r_block+12
  5471                           
  5472                           ; BSR set to: 57
  5473                           ;gemsecs.c: 93:      run_checksum(0, 1);
  5474  002FB8  0E01               	movlw	1
  5475  002FBA  6EE6               	movwf	postinc1,c
  5476  002FBC  0E00               	movlw	0
  5477  002FBE  6EE6               	movwf	postinc1,c
  5478  002FC0  EC45  F02D         	call	_run_checksum	;wreg free
  5479                           
  5480                           ; BSR set to: 0
  5481                           ;gemsecs.c: 94:      rxData_l++;
  5482  002FC4  2A2D               	incf	m_protocol@rxData_l,f,c
  5483                           
  5484                           ;gemsecs.c: 95:     } else {
  5485  002FC6  D090               	goto	l6805
  5486  002FC8                     l6769:
  5487                           
  5488                           ; BSR set to: 57
  5489                           ;gemsecs.c: 99:      if (rxData_l <= sizeof(block10))
  5490  002FC8  0E0B               	movlw	11
  5491  002FCA  602D               	cpfslt	m_protocol@rxData_l,c
  5492  002FCC  D00C               	goto	l6773
  5493                           
  5494                           ; BSR set to: 57
  5495                           ;gemsecs.c: 100:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  5496                           ;stkvar	_rxData @ sp[(-1)+0]
  5497  002FCE  502D               	movf	m_protocol@rxData_l,w,c
  5498  002FD0  0819               	sublw	low (_H10+25)
  5499  002FD2  6ED9               	movwf	fsr2l,c
  5500  002FD4  0E00               	movlw	0
  5501  002FD6  A0D8               	btfss	status,0,c
  5502  002FD8  2AE8               	incf	wreg,f,c
  5503  002FDA  0801               	sublw	high (_H10+25)
  5504  002FDC  6EDA               	movwf	fsr2h,c
  5505  002FDE  0EFF               	movlw	-1
  5506  002FE0  006F FF8F FFDF     	movff	plusw1,indf2
  5507  002FE6                     l6773:
  5508                           
  5509                           ; BSR set to: 57
  5510                           ;gemsecs.c: 101:      if (rxData_l <= r_block.length)
  5511  002FE6  502D               	movf	m_protocol@rxData_l,w,c
  5512  002FE8  0100               	movlb	0	; () banked
  5513  002FEA  5DCC               	subwf	(_r_block+12)& (0+255),w,b
  5514  002FEC  A0D8               	btfss	status,0,c
  5515  002FEE  D00D               	goto	l6777
  5516                           
  5517                           ; BSR set to: 0
  5518                           ;gemsecs.c: 102:       V.r_checksum = run_checksum(rxData, 0);
  5519  002FF0  0E00               	movlw	0
  5520  002FF2  6EE6               	movwf	postinc1,c
  5521                           
  5522                           ;stkvar	_rxData @ sp[(-2)+0]
  5523  002FF4  0EFE               	movlw	-2
  5524  002FF6  50E3               	movf	plusw1,w,c
  5525  002FF8  6EE6               	movwf	postinc1,c
  5526  002FFA  EC45  F02D         	call	_run_checksum	;wreg free
  5527  002FFE  0060  F0EC  F0B9   	movff	btemp,_V+82
  5528  003004  0060  F0F0  F0BA   	movff	btemp+1,_V+83
  5529  00300A                     l6777:
  5530                           
  5531                           ; BSR set to: 0
  5532                           ;gemsecs.c: 104:      if (rxData_l == r_block.length + 1)
  5533  00300A  502D               	movf	m_protocol@rxData_l,w,c
  5534  00300C  6E45               	movwf	btemp+10,c
  5535  00300E  6A46               	clrf	btemp+11,c
  5536  003010  51CC               	movf	(_r_block+12)& (0+255),w,b
  5537  003012  6E43               	movwf	btemp+8,c
  5538  003014  6A44               	clrf	btemp+9,c
  5539  003016  0E01               	movlw	1
  5540  003018  2643               	addwf	btemp+8,f,c
  5541  00301A  0E00               	movlw	0
  5542  00301C  2244               	addwfc	btemp+9,f,c
  5543  00301E  5045               	movf	btemp+10,w,c
  5544  003020  1843               	xorwf	btemp+8,w,c
  5545  003022  E109               	bnz	l6781
  5546  003024  5046               	movf	btemp+11,w,c
  5547  003026  1844               	xorwf	btemp+9,w,c
  5548  003028  A4D8               	btfss	status,2,c
  5549  00302A  D005               	goto	l6781
  5550                           
  5551                           ; BSR set to: 0
  5552                           ;gemsecs.c: 105:       H10[1].checksum = (uint16_t) rxData << 8;
  5553                           ;stkvar	_rxData @ sp[(-1)+0]
  5554  00302C  0EFF               	movlw	-1
  5555  00302E  50E3               	movf	plusw1,w,c
  5556  003030  0101               	movlb	1	; () banked
  5557  003032  6F0E               	movwf	(_H10+14)& (0+255),b
  5558  003034  6B0D               	clrf	(_H10+13)& (0+255),b
  5559  003036                     l6781:
  5560                           
  5561                           ;gemsecs.c: 106:      if (rxData_l == r_block.length + 2)
  5562  003036  502D               	movf	m_protocol@rxData_l,w,c
  5563  003038  6E45               	movwf	btemp+10,c
  5564  00303A  6A46               	clrf	btemp+11,c
  5565  00303C  0100               	movlb	0	; () banked
  5566  00303E  51CC               	movf	(_r_block+12)& (0+255),w,b
  5567  003040  6E43               	movwf	btemp+8,c
  5568  003042  6A44               	clrf	btemp+9,c
  5569  003044  0E02               	movlw	2
  5570  003046  2643               	addwf	btemp+8,f,c
  5571  003048  0E00               	movlw	0
  5572  00304A  2244               	addwfc	btemp+9,f,c
  5573  00304C  5045               	movf	btemp+10,w,c
  5574  00304E  1843               	xorwf	btemp+8,w,c
  5575  003050  E10A               	bnz	l6785
  5576  003052  5046               	movf	btemp+11,w,c
  5577  003054  1844               	xorwf	btemp+9,w,c
  5578  003056  A4D8               	btfss	status,2,c
  5579  003058  D006               	goto	l6785
  5580                           
  5581                           ; BSR set to: 0
  5582                           ;gemsecs.c: 107:       H10[1].checksum += rxData;
  5583                           ;stkvar	_rxData @ sp[(-1)+0]
  5584  00305A  0EFF               	movlw	-1
  5585  00305C  50E3               	movf	plusw1,w,c
  5586  00305E  0101               	movlb	1	; () banked
  5587  003060  270D               	addwf	(_H10+13)& (0+255),f,b
  5588  003062  0E00               	movlw	0
  5589  003064  230E               	addwfc	(_H10+14)& (0+255),f,b
  5590  003066                     l6785:
  5591                           
  5592                           ;gemsecs.c: 109:      rxData_l++;
  5593  003066  2A2D               	incf	m_protocol@rxData_l,f,c
  5594                           
  5595                           ;gemsecs.c: 110:      if (rxData_l > (r_block.length + 2)) {
  5596  003068  502D               	movf	m_protocol@rxData_l,w,c
  5597  00306A  6E45               	movwf	btemp+10,c
  5598  00306C  6A46               	clrf	btemp+11,c
  5599  00306E  0100               	movlb	0	; () banked
  5600  003070  51CC               	movf	(_r_block+12)& (0+255),w,b
  5601  003072  6E43               	movwf	btemp+8,c
  5602  003074  6A44               	clrf	btemp+9,c
  5603  003076  0E02               	movlw	2
  5604  003078  2643               	addwf	btemp+8,f,c
  5605  00307A  0E00               	movlw	0
  5606  00307C  2244               	addwfc	btemp+9,f,c
  5607  00307E  5045               	movf	btemp+10,w,c
  5608  003080  5C43               	subwf	btemp+8,w,c
  5609  003082  5044               	movf	btemp+9,w,c
  5610  003084  0A80               	xorlw	128
  5611  003086  6E3B               	movwf	btemp,c
  5612  003088  5046               	movf	btemp+11,w,c
  5613  00308A  0A80               	xorlw	128
  5614  00308C  583B               	subwfb	btemp,w,c
  5615  00308E  B0D8               	btfsc	status,0,c
  5616  003090  D02B               	goto	l6805
  5617                           
  5618                           ; BSR set to: 0
  5619                           ;gemsecs.c: 111:       if (V.r_checksum == H10[1].checksum) {
  5620  003092  0101               	movlb	1	; () banked
  5621  003094  510D               	movf	(_H10+13)& (0+255),w,b
  5622  003096  0100               	movlb	0	; () banked
  5623  003098  19B9               	xorwf	(_V+82)& (0+255),w,b
  5624  00309A  E10E               	bnz	l6795
  5625  00309C  0101               	movlb	1	; () banked
  5626  00309E  510E               	movf	(_H10+14)& (0+255),w,b
  5627  0030A0  0100               	movlb	0	; () banked
  5628  0030A2  19BA               	xorwf	(_V+83)& (0+255),w,b
  5629  0030A4  A4D8               	btfss	status,2,c
  5630  0030A6  D008               	goto	l6795
  5631                           
  5632                           ; BSR set to: 0
  5633                           ;gemsecs.c: 112:        *m_link = LINK_STATE_ACK;
  5634                           ;stkvar	_m_link @ sp[(-1)+-1]
  5635  0030A8  0EFE               	movlw	-2
  5636  0030AA  50E3               	movf	plusw1,w,c
  5637  0030AC  6ED9               	movwf	fsr2l,c
  5638  0030AE  6ADA               	clrf	fsr2h,c
  5639  0030B0  0E03               	movlw	3
  5640  0030B2  D019               	goto	L17
  5641  0030B4                     l6793:
  5642  0030B4  ECCD  F02C         	call	_UART1_Read	;wreg free
  5643  0030B8                     l6795:
  5644                           
  5645                           ;gemsecs.c: 114:        while (UART1_is_rx_ready())
  5646  0030B8  ECBB  F030         	call	_UART1_is_rx_ready	;wreg free
  5647  0030BC  503B               	movf	btemp,w,c
  5648  0030BE  A4D8               	btfss	status,2,c
  5649  0030C0  D7F9               	goto	l6793
  5650                           
  5651                           ;gemsecs.c: 116:        WaitMs(500);
  5652  0030C2  0EF4               	movlw	244
  5653  0030C4  6EE6               	movwf	postinc1,c
  5654  0030C6  0E01               	movlw	1
  5655  0030C8  6EE6               	movwf	postinc1,c
  5656  0030CA  ECC7  F02D         	call	_WaitMs	;wreg free
  5657                           
  5658                           ;gemsecs.c: 117:        V.error = LINK_ERROR_CHECKSUM;
  5659  0030CE  0E05               	movlw	5
  5660  0030D0  0100               	movlb	0	; () banked
  5661  0030D2  6FB6               	movwf	(_V+79)& (0+255),b
  5662                           
  5663                           ; BSR set to: 0
  5664                           ;gemsecs.c: 118:        V.failed_receive = 3;
  5665  0030D4  51BE               	movf	(_V+87)& (0+255),w,b
  5666  0030D6  0BF0               	andlw	-16
  5667  0030D8  0903               	iorlw	3
  5668  0030DA  6FBE               	movwf	(_V+87)& (0+255),b
  5669                           
  5670                           ; BSR set to: 0
  5671                           ;gemsecs.c: 119:        *m_link = LINK_STATE_NAK;
  5672                           ;stkvar	_m_link @ sp[(-1)+-1]
  5673  0030DC  0EFE               	movlw	-2
  5674  0030DE  50E3               	movf	plusw1,w,c
  5675  0030E0  6ED9               	movwf	fsr2l,c
  5676  0030E2  6ADA               	clrf	fsr2h,c
  5677  0030E4  0E05               	movlw	5
  5678  0030E6                     L17:
  5679  0030E6  6EDF               	movwf	indf2,c
  5680  0030E8                     l6805:
  5681                           
  5682                           ;gemsecs.c: 125:    if (UART2_is_rx_ready()) {
  5683  0030E8  ECB7  F030         	call	_UART2_is_rx_ready	;wreg free
  5684  0030EC  503B               	movf	btemp,w,c
  5685  0030EE  B4D8               	btfsc	status,2,c
  5686  0030F0  D10C               	goto	l6887
  5687                           
  5688                           ;gemsecs.c: 126:     rxData = UART2_Read();
  5689  0030F2  ECAE  F02C         	call	_UART2_Read	;wreg free
  5690                           
  5691                           ;stkvar	_rxData @ sp[(-1)+0]
  5692  0030F6  0EFF               	movlw	-1
  5693  0030F8  0060  F0EF  FFE3   	movff	btemp,plusw1
  5694                           
  5695                           ; BSR set to: 57
  5696                           ;gemsecs.c: 127:     if (rxData_l == 0) {
  5697  0030FE  502D               	movf	m_protocol@rxData_l,w,c
  5698  003100  A4D8               	btfss	status,2,c
  5699  003102  D00C               	goto	l6817
  5700                           
  5701                           ; BSR set to: 57
  5702                           ;gemsecs.c: 128:      r_block.length = rxData;
  5703                           ;stkvar	_rxData @ sp[(-1)+0]
  5704  003104  0EFF               	movlw	-1
  5705  003106  006F FF8C  F0CC    	movff	plusw1,_r_block+12
  5706                           
  5707                           ; BSR set to: 57
  5708                           ;gemsecs.c: 129:      run_checksum(0, 1);
  5709  00310C  0E01               	movlw	1
  5710  00310E  6EE6               	movwf	postinc1,c
  5711  003110  0E00               	movlw	0
  5712  003112  6EE6               	movwf	postinc1,c
  5713  003114  EC45  F02D         	call	_run_checksum	;wreg free
  5714                           
  5715                           ; BSR set to: 0
  5716                           ;gemsecs.c: 130:      rxData_l++;
  5717  003118  2A2D               	incf	m_protocol@rxData_l,f,c
  5718                           
  5719                           ;gemsecs.c: 131:     } else {
  5720  00311A  D0F7               	goto	l6887
  5721  00311C                     l6817:
  5722                           
  5723                           ; BSR set to: 57
  5724                           ;gemsecs.c: 135:      if (rxData_l <= sizeof(block10))
  5725  00311C  0E0B               	movlw	11
  5726  00311E  602D               	cpfslt	m_protocol@rxData_l,c
  5727  003120  D00C               	goto	l6821
  5728                           
  5729                           ; BSR set to: 57
  5730                           ;gemsecs.c: 136:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  5731                           ;stkvar	_rxData @ sp[(-1)+0]
  5732  003122  502D               	movf	m_protocol@rxData_l,w,c
  5733  003124  0819               	sublw	low (_H10+25)
  5734  003126  6ED9               	movwf	fsr2l,c
  5735  003128  0E00               	movlw	0
  5736  00312A  A0D8               	btfss	status,0,c
  5737  00312C  2AE8               	incf	wreg,f,c
  5738  00312E  0801               	sublw	high (_H10+25)
  5739  003130  6EDA               	movwf	fsr2h,c
  5740  003132  0EFF               	movlw	-1
  5741  003134  006F FF8F FFDF     	movff	plusw1,indf2
  5742  00313A                     l6821:
  5743                           
  5744                           ; BSR set to: 57
  5745                           ;gemsecs.c: 137:      if (rxData_l <= r_block.length)
  5746  00313A  502D               	movf	m_protocol@rxData_l,w,c
  5747  00313C  0100               	movlb	0	; () banked
  5748  00313E  5DCC               	subwf	(_r_block+12)& (0+255),w,b
  5749  003140  A0D8               	btfss	status,0,c
  5750  003142  D00D               	goto	l6825
  5751                           
  5752                           ; BSR set to: 0
  5753                           ;gemsecs.c: 138:       V.r_checksum = run_checksum(rxData, 0);
  5754  003144  0E00               	movlw	0
  5755  003146  6EE6               	movwf	postinc1,c
  5756                           
  5757                           ;stkvar	_rxData @ sp[(-2)+0]
  5758  003148  0EFE               	movlw	-2
  5759  00314A  50E3               	movf	plusw1,w,c
  5760  00314C  6EE6               	movwf	postinc1,c
  5761  00314E  EC45  F02D         	call	_run_checksum	;wreg free
  5762  003152  0060  F0EC  F0B9   	movff	btemp,_V+82
  5763  003158  0060  F0F0  F0BA   	movff	btemp+1,_V+83
  5764  00315E                     l6825:
  5765                           
  5766                           ; BSR set to: 0
  5767                           ;gemsecs.c: 140:      if (rxData_l == r_block.length + 1)
  5768  00315E  502D               	movf	m_protocol@rxData_l,w,c
  5769  003160  6E45               	movwf	btemp+10,c
  5770  003162  6A46               	clrf	btemp+11,c
  5771  003164  51CC               	movf	(_r_block+12)& (0+255),w,b
  5772  003166  6E43               	movwf	btemp+8,c
  5773  003168  6A44               	clrf	btemp+9,c
  5774  00316A  0E01               	movlw	1
  5775  00316C  2643               	addwf	btemp+8,f,c
  5776  00316E  0E00               	movlw	0
  5777  003170  2244               	addwfc	btemp+9,f,c
  5778  003172  5045               	movf	btemp+10,w,c
  5779  003174  1843               	xorwf	btemp+8,w,c
  5780  003176  E109               	bnz	l6829
  5781  003178  5046               	movf	btemp+11,w,c
  5782  00317A  1844               	xorwf	btemp+9,w,c
  5783  00317C  A4D8               	btfss	status,2,c
  5784  00317E  D005               	goto	l6829
  5785                           
  5786                           ; BSR set to: 0
  5787                           ;gemsecs.c: 141:       H10[1].checksum = (uint16_t) rxData << 8;
  5788                           ;stkvar	_rxData @ sp[(-1)+0]
  5789  003180  0EFF               	movlw	-1
  5790  003182  50E3               	movf	plusw1,w,c
  5791  003184  0101               	movlb	1	; () banked
  5792  003186  6F0E               	movwf	(_H10+14)& (0+255),b
  5793  003188  6B0D               	clrf	(_H10+13)& (0+255),b
  5794  00318A                     l6829:
  5795                           
  5796                           ;gemsecs.c: 142:      if (rxData_l == r_block.length + 2)
  5797  00318A  502D               	movf	m_protocol@rxData_l,w,c
  5798  00318C  6E45               	movwf	btemp+10,c
  5799  00318E  6A46               	clrf	btemp+11,c
  5800  003190  0100               	movlb	0	; () banked
  5801  003192  51CC               	movf	(_r_block+12)& (0+255),w,b
  5802  003194  6E43               	movwf	btemp+8,c
  5803  003196  6A44               	clrf	btemp+9,c
  5804  003198  0E02               	movlw	2
  5805  00319A  2643               	addwf	btemp+8,f,c
  5806  00319C  0E00               	movlw	0
  5807  00319E  2244               	addwfc	btemp+9,f,c
  5808  0031A0  5045               	movf	btemp+10,w,c
  5809  0031A2  1843               	xorwf	btemp+8,w,c
  5810  0031A4  E10A               	bnz	l6833
  5811  0031A6  5046               	movf	btemp+11,w,c
  5812  0031A8  1844               	xorwf	btemp+9,w,c
  5813  0031AA  A4D8               	btfss	status,2,c
  5814  0031AC  D006               	goto	l6833
  5815                           
  5816                           ; BSR set to: 0
  5817                           ;gemsecs.c: 143:       H10[1].checksum += rxData;
  5818                           ;stkvar	_rxData @ sp[(-1)+0]
  5819  0031AE  0EFF               	movlw	-1
  5820  0031B0  50E3               	movf	plusw1,w,c
  5821  0031B2  0101               	movlb	1	; () banked
  5822  0031B4  270D               	addwf	(_H10+13)& (0+255),f,b
  5823  0031B6  0E00               	movlw	0
  5824  0031B8  230E               	addwfc	(_H10+14)& (0+255),f,b
  5825  0031BA                     l6833:
  5826                           
  5827                           ;gemsecs.c: 145:      rxData_l++;
  5828  0031BA  2A2D               	incf	m_protocol@rxData_l,f,c
  5829                           
  5830                           ;gemsecs.c: 146:      if (rxData_l > (r_block.length + 2)) {
  5831  0031BC  502D               	movf	m_protocol@rxData_l,w,c
  5832  0031BE  6E45               	movwf	btemp+10,c
  5833  0031C0  6A46               	clrf	btemp+11,c
  5834  0031C2  0100               	movlb	0	; () banked
  5835  0031C4  51CC               	movf	(_r_block+12)& (0+255),w,b
  5836  0031C6  6E43               	movwf	btemp+8,c
  5837  0031C8  6A44               	clrf	btemp+9,c
  5838  0031CA  0E02               	movlw	2
  5839  0031CC  2643               	addwf	btemp+8,f,c
  5840  0031CE  0E00               	movlw	0
  5841  0031D0  2244               	addwfc	btemp+9,f,c
  5842  0031D2  5045               	movf	btemp+10,w,c
  5843  0031D4  5C43               	subwf	btemp+8,w,c
  5844  0031D6  5044               	movf	btemp+9,w,c
  5845  0031D8  0A80               	xorlw	128
  5846  0031DA  6E3B               	movwf	btemp,c
  5847  0031DC  5046               	movf	btemp+11,w,c
  5848  0031DE  0A80               	xorlw	128
  5849  0031E0  583B               	subwfb	btemp,w,c
  5850  0031E2  B0D8               	btfsc	status,0,c
  5851  0031E4  D092               	goto	l6887
  5852                           
  5853                           ; BSR set to: 0
  5854                           ;gemsecs.c: 147:       if (V.r_checksum == H10[1].checksum) {
  5855  0031E6  0101               	movlb	1	; () banked
  5856  0031E8  510D               	movf	(_H10+13)& (0+255),w,b
  5857  0031EA  0100               	movlb	0	; () banked
  5858  0031EC  19B9               	xorwf	(_V+82)& (0+255),w,b
  5859  0031EE  E10E               	bnz	l6843
  5860  0031F0  0101               	movlb	1	; () banked
  5861  0031F2  510E               	movf	(_H10+14)& (0+255),w,b
  5862  0031F4  0100               	movlb	0	; () banked
  5863  0031F6  19BA               	xorwf	(_V+83)& (0+255),w,b
  5864  0031F8  A4D8               	btfss	status,2,c
  5865  0031FA  D008               	goto	l6843
  5866                           
  5867                           ; BSR set to: 0
  5868                           ;gemsecs.c: 148:        *m_link = LINK_STATE_ACK;
  5869                           ;stkvar	_m_link @ sp[(-1)+-1]
  5870  0031FC  0EFE               	movlw	-2
  5871  0031FE  50E3               	movf	plusw1,w,c
  5872  003200  6ED9               	movwf	fsr2l,c
  5873  003202  6ADA               	clrf	fsr2h,c
  5874  003204  0E03               	movlw	3
  5875  003206  D05E               	goto	L20
  5876  003208                     l6841:
  5877  003208  ECAE  F02C         	call	_UART2_Read	;wreg free
  5878  00320C                     l6843:
  5879                           
  5880                           ;gemsecs.c: 150:        while (UART2_is_rx_ready())
  5881  00320C  ECB7  F030         	call	_UART2_is_rx_ready	;wreg free
  5882  003210  503B               	movf	btemp,w,c
  5883  003212  A4D8               	btfss	status,2,c
  5884  003214  D7F9               	goto	l6841
  5885                           
  5886                           ;gemsecs.c: 152:        WaitMs(500);
  5887  003216  0EF4               	movlw	244
  5888  003218  6EE6               	movwf	postinc1,c
  5889  00321A  0E01               	movlw	1
  5890  00321C  6EE6               	movwf	postinc1,c
  5891  00321E  ECC7  F02D         	call	_WaitMs	;wreg free
  5892                           
  5893                           ;gemsecs.c: 153:        V.error = LINK_ERROR_CHECKSUM;
  5894  003222  0E05               	movlw	5
  5895  003224  0100               	movlb	0	; () banked
  5896  003226  6FB6               	movwf	(_V+79)& (0+255),b
  5897                           
  5898                           ; BSR set to: 0
  5899                           ;gemsecs.c: 154:        V.failed_receive = 4;
  5900  003228  51BE               	movf	(_V+87)& (0+255),w,b
  5901  00322A  0BF0               	andlw	-16
  5902  00322C  0904               	iorlw	4
  5903  00322E  D6AB               	goto	L19
  5904  003230                     l6853:
  5905                           
  5906                           ;gemsecs.c: 166:   V.stream = H10[1].block.block.stream;
  5907  003230  0101               	movlb	1	; () banked
  5908  003232  5116               	movf	(_H10+22)& (0+255),w,b
  5909  003234  0B7F               	andlw	127
  5910  003236  0100               	movlb	0	; () banked
  5911  003238  6FB4               	movwf	(_V+77)& (0+255),b
  5912                           
  5913                           ; BSR set to: 0
  5914                           ;gemsecs.c: 167:   V.function = H10[1].block.block.function;
  5915  00323A  C115  F0B5         	movff	_H10+21,_V+78
  5916                           
  5917                           ; BSR set to: 0
  5918                           ;gemsecs.c: 168:   V.systemb = H10[1].block.block.systemb;
  5919  00323E  C10F  F0B0         	movff	_H10+15,_V+73
  5920  003242  C110  F0B1         	movff	_H10+16,_V+74
  5921  003246  C111  F0B2         	movff	_H10+17,_V+75
  5922  00324A  C112  F0B3         	movff	_H10+18,_V+76
  5923                           
  5924                           ; BSR set to: 0
  5925                           ;gemsecs.c: 169:   V.rbit = H10[1].block.block.rbit;
  5926  00324E  0101               	movlb	1	; () banked
  5927  003250  AF18               	btfss	(_H10+24)& (0+255),7,b
  5928  003252  D003               	bra	u4045
  5929  003254  0100               	movlb	0	; () banked
  5930  003256  81BD               	bsf	(_V+86)& (0+255),0,b
  5931  003258  D002               	bra	u4047
  5932  00325A                     u4045:
  5933  00325A  0100               	movlb	0	; () banked
  5934  00325C  91BD               	bcf	(_V+86)& (0+255),0,b
  5935  00325E                     u4047:
  5936                           
  5937                           ; BSR set to: 0
  5938                           ;gemsecs.c: 170:   V.wbit = H10[1].block.block.wbit;
  5939  00325E  0101               	movlb	1	; () banked
  5940  003260  AF16               	btfss	(_H10+22)& (0+255),7,b
  5941  003262  D003               	bra	u4055
  5942  003264  0100               	movlb	0	; () banked
  5943  003266  83BD               	bsf	(_V+86)& (0+255),1,b
  5944  003268  D002               	bra	u4057
  5945  00326A                     u4055:
  5946  00326A  0100               	movlb	0	; () banked
  5947  00326C  93BD               	bcf	(_V+86)& (0+255),1,b
  5948  00326E                     u4057:
  5949                           
  5950                           ; BSR set to: 0
  5951                           ;gemsecs.c: 171:   V.ebit = H10[1].block.block.ebit;
  5952  00326E  0101               	movlb	1	; () banked
  5953  003270  AF14               	btfss	(_H10+20)& (0+255),7,b
  5954  003272  D003               	bra	u4065
  5955  003274  0100               	movlb	0	; () banked
  5956  003276  85BD               	bsf	(_V+86)& (0+255),2,b
  5957  003278  D002               	bra	u4067
  5958  00327A                     u4065:
  5959  00327A  0100               	movlb	0	; () banked
  5960  00327C  95BD               	bcf	(_V+86)& (0+255),2,b
  5961  00327E                     u4067:
  5962                           
  5963                           ; BSR set to: 0
  5964                           ;gemsecs.c: 172:   V.failed_receive = 0;
  5965  00327E  0EF0               	movlw	-16
  5966  003280  17BE               	andwf	(_V+87)& (0+255),f,b
  5967                           
  5968                           ; BSR set to: 0
  5969                           ;gemsecs.c: 173:   *m_link = LINK_STATE_DONE;
  5970                           ;stkvar	_m_link @ sp[(-1)+-1]
  5971  003282  0EFE               	movlw	-2
  5972  003284  50E3               	movf	plusw1,w,c
  5973  003286  6ED9               	movwf	fsr2l,c
  5974  003288  6ADA               	clrf	fsr2h,c
  5975  00328A  0E04               	movlw	4
  5976  00328C  D01B               	goto	L20
  5977  00328E                     l6869:
  5978                           
  5979                           ;gemsecs.c: 176:   *m_link = LINK_STATE_ERROR;
  5980                           ;stkvar	_m_link @ sp[(-1)+-1]
  5981  00328E  0EFE               	movlw	-2
  5982  003290  50E3               	movf	plusw1,w,c
  5983  003292  6ED9               	movwf	fsr2l,c
  5984  003294  6ADA               	clrf	fsr2h,c
  5985  003296  0E06               	movlw	6
  5986  003298  6EDF               	movwf	indf2,c
  5987                           
  5988                           ;gemsecs.c: 177:   while ((uart1RxCount)) {
  5989  00329A  D002               	goto	l6873
  5990  00329C                     l6871:
  5991                           
  5992                           ;gemsecs.c: 178:    UART1_Read();
  5993  00329C  ECCD  F02C         	call	_UART1_Read	;wreg free
  5994  0032A0                     l6873:
  5995                           
  5996                           ;gemsecs.c: 177:   while ((uart1RxCount)) {
  5997  0032A0  5035               	movf	_uart1RxCount,w,c	;volatile
  5998  0032A2  B4D8               	btfsc	status,2,c
  5999  0032A4  D003               	goto	l6877
  6000  0032A6  D7FA               	goto	l6871
  6001  0032A8                     l6875:
  6002                           
  6003                           ;gemsecs.c: 181:    UART2_Read();
  6004  0032A8  ECAE  F02C         	call	_UART2_Read	;wreg free
  6005  0032AC                     l6877:
  6006                           
  6007                           ;gemsecs.c: 180:   while ((uart2RxCount)) {
  6008  0032AC  502F               	movf	_uart2RxCount,w,c	;volatile
  6009  0032AE  B4D8               	btfsc	status,2,c
  6010  0032B0  D02C               	goto	l6887
  6011  0032B2  D7FA               	goto	l6875
  6012  0032B4                     l6879:
  6013                           
  6014                           ;gemsecs.c: 187:   V.failed_receive = 0;
  6015  0032B4  0EF0               	movlw	-16
  6016  0032B6  0100               	movlb	0	; () banked
  6017  0032B8  17BE               	andwf	(_V+87)& (0+255),f,b
  6018  0032BA                     l6881:
  6019                           
  6020                           ;gemsecs.c: 189:   *m_link = LINK_STATE_IDLE;
  6021                           ;stkvar	_m_link @ sp[(-1)+-1]
  6022  0032BA  0EFE               	movlw	-2
  6023  0032BC  50E3               	movf	plusw1,w,c
  6024  0032BE  6ED9               	movwf	fsr2l,c
  6025  0032C0  6ADA               	clrf	fsr2h,c
  6026  0032C2  0E00               	movlw	0
  6027  0032C4                     L20:
  6028  0032C4  6EDF               	movwf	indf2,c
  6029                           
  6030                           ;gemsecs.c: 191:   break;
  6031  0032C6  D021               	goto	l6887
  6032  0032C8                     l6885:
  6033                           
  6034                           ;stkvar	_m_link @ sp[(-1)+-1]
  6035  0032C8  0EFE               	movlw	-2
  6036  0032CA  50E3               	movf	plusw1,w,c
  6037  0032CC  6ED9               	movwf	fsr2l,c
  6038  0032CE  6ADA               	clrf	fsr2h,c
  6039  0032D0  50DF               	movf	indf2,w,c
  6040  0032D2  6E45               	movwf	btemp+10,c
  6041  0032D4  6A46               	clrf	btemp+11,c
  6042                           
  6043                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6044                           ; Switch size 1, requested type "simple"
  6045                           ; Number of cases is 1, Range of values is 0 to 0
  6046                           ; switch strategies available:
  6047                           ; Name         Instructions Cycles
  6048                           ; simple_byte            4     3 (average)
  6049                           ;	Chosen strategy is simple_byte
  6050  0032D6  5046               	movf	btemp+11,w,c
  6051  0032D8  0A00               	xorlw	0	; case 0
  6052  0032DA  A4D8               	btfss	status,2,c
  6053  0032DC  D7EE               	goto	l6881
  6054                           
  6055                           ; Switch size 1, requested type "simple"
  6056                           ; Number of cases is 7, Range of values is 0 to 6
  6057                           ; switch strategies available:
  6058                           ; Name         Instructions Cycles
  6059                           ; simple_byte           22    12 (average)
  6060                           ;	Chosen strategy is simple_byte
  6061  0032DE  5045               	movf	btemp+10,w,c
  6062  0032E0  0A00               	xorlw	0	; case 0
  6063  0032E2  B4D8               	btfsc	status,2,c
  6064  0032E4  D5E6               	goto	l6719
  6065  0032E6  0A01               	xorlw	1	; case 1
  6066  0032E8  B4D8               	btfsc	status,2,c
  6067  0032EA  D62F               	goto	l1544
  6068  0032EC  0A03               	xorlw	3	; case 2
  6069  0032EE  B4D8               	btfsc	status,2,c
  6070  0032F0  D63D               	goto	l6751
  6071  0032F2  0A01               	xorlw	1	; case 3
  6072  0032F4  B4D8               	btfsc	status,2,c
  6073  0032F6  D79C               	goto	l6853
  6074  0032F8  0A07               	xorlw	7	; case 4
  6075  0032FA  B4D8               	btfsc	status,2,c
  6076  0032FC  D7DB               	goto	l6879
  6077  0032FE  0A01               	xorlw	1	; case 5
  6078  003300  B4D8               	btfsc	status,2,c
  6079  003302  D7C5               	goto	l6869
  6080  003304  0A03               	xorlw	3	; case 6
  6081  003306  A4D8               	btfss	status,2,c
  6082  003308  D7D8               	goto	l6881
  6083  00330A                     l6887:
  6084                           
  6085                           ;gemsecs.c: 194:  return *m_link;
  6086                           ;stkvar	_m_link @ sp[(-1)+-1]
  6087  00330A  0EFE               	movlw	-2
  6088  00330C  50E3               	movf	plusw1,w,c
  6089  00330E  6ED9               	movwf	fsr2l,c
  6090  003310  6ADA               	clrf	fsr2h,c
  6091  003312  50DF               	movf	indf2,w,c
  6092  003314  6E3B               	movwf	btemp,c
  6093                           
  6094                           ; _m_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6095  003316  52E5               	movf	postdec1,f,c
  6096  003318  52E5               	movf	postdec1,f,c
  6097  00331A  0012               	return		;funcret
  6098  00331C                     __end_of_m_protocol:
  6099                           	opt callstack 0
  6100                           
  6101 ;; *************** function _run_checksum *****************
  6102 ;; Defined at:
  6103 ;;		line 31 in file "gemsecs.c"
  6104 ;; Parameters:    Size  Location     Type
  6105 ;;  byte_block      1  [STACK] unsigned char 
  6106 ;;  clear           1  [STACK] _Bool 
  6107 ;; Auto vars:     Size  Location     Type
  6108 ;;		None
  6109 ;; Return value:  Size  Location     Type
  6110 ;;                  2  [STACK] unsigned short 
  6111 ;; Registers used:
  6112 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  6113 ;; Tracked objects:
  6114 ;;		On entry : 6/39
  6115 ;;		On exit  : 3F/0
  6116 ;;		Unchanged: 0/0
  6117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6122 ;;Total ram usage:        0 bytes
  6123 ;; Hardware stack levels used:    1
  6124 ;; Hardware stack levels required when called:    3
  6125 ;; This function calls:
  6126 ;;		Nothing
  6127 ;; This function is called by:
  6128 ;;		_m_protocol
  6129 ;;		_r_protocol
  6130 ;; This function uses a reentrant model
  6131 ;;
  6132                           
  6133                           	psect	text14
  6134  005A8A                     __ptext14:
  6135                           	opt callstack 0
  6136  005A8A                     _run_checksum:
  6137                           	opt callstack 26
  6138                           
  6139                           ;gemsecs.c: 31: uint16_t run_checksum(uint8_t byte_block, _Bool clear);gemsecs.c: 32: {;
      +                          gemsecs.c: 33:  static uint16_t sum = 0;;gemsecs.c: 35:  if (clear)
  6140                           ;stkvar	_clear @ sp[(0)+-2]
  6141                           
  6142                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6143                           ;incstack = 0
  6144  005A8A  0EFE               	movlw	-2
  6145  005A8C  50E3               	movf	plusw1,w,c
  6146  005A8E  B4D8               	btfsc	status,2,c
  6147  005A90  D003               	goto	l6067
  6148                           
  6149                           ;gemsecs.c: 36:   sum = 0;
  6150  005A92  0100               	movlb	0	; () banked
  6151  005A94  6BF8               	clrf	run_checksum@sum& (0+255),b
  6152  005A96  6BF9               	clrf	(run_checksum@sum+1)& (0+255),b
  6153  005A98                     l6067:
  6154                           
  6155                           ;gemsecs.c: 38:  sum += byte_block;
  6156                           ;stkvar	_byte_block @ sp[(0)+-1]
  6157  005A98  0EFF               	movlw	-1
  6158  005A9A  50E3               	movf	plusw1,w,c
  6159  005A9C  0100               	movlb	0	; () banked
  6160  005A9E  27F8               	addwf	run_checksum@sum& (0+255),f,b
  6161  005AA0  0E00               	movlw	0
  6162  005AA2  23F9               	addwfc	(run_checksum@sum+1)& (0+255),f,b
  6163                           
  6164                           ; BSR set to: 0
  6165                           ;gemsecs.c: 39:  return sum;
  6166  005AA4  0060  F3E0  F03B   	movff	run_checksum@sum,btemp
  6167  005AAA  0060  F3E4  F03C   	movff	run_checksum@sum+1,btemp+1
  6168                           
  6169                           ; BSR set to: 0
  6170                           ; _run_checksum: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
  6171  005AB0  52E5               	movf	postdec1,f,c
  6172  005AB2  52E5               	movf	postdec1,f,c
  6173  005AB4  0012               	return		;funcret
  6174  005AB6                     __end_of_run_checksum:
  6175                           	opt callstack 0
  6176                           
  6177 ;; *************** function _WaitMs *****************
  6178 ;; Defined at:
  6179 ;;		line 31 in file "timers.c"
  6180 ;; Parameters:    Size  Location     Type
  6181 ;;  numMilliseco    2  [STACK] unsigned short 
  6182 ;; Auto vars:     Size  Location     Type
  6183 ;;		None
  6184 ;; Return value:  Size  Location     Type
  6185 ;;                  1  [STACK] void 
  6186 ;; Registers used:
  6187 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6188 ;; Tracked objects:
  6189 ;;		On entry : 0/3B
  6190 ;;		On exit  : 0/0
  6191 ;;		Unchanged: 0/0
  6192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6197 ;;Total ram usage:        0 bytes
  6198 ;; Hardware stack levels used:    1
  6199 ;; Hardware stack levels required when called:    4
  6200 ;; This function calls:
  6201 ;;		_StartTimer
  6202 ;;		_TimerDone
  6203 ;; This function is called by:
  6204 ;;		_main
  6205 ;;		_m_protocol
  6206 ;;		_r_protocol
  6207 ;; This function uses a reentrant model
  6208 ;;
  6209                           
  6210                           	psect	text15
  6211  005B8E                     __ptext15:
  6212                           	opt callstack 0
  6213  005B8E                     _WaitMs:
  6214                           	opt callstack 25
  6215                           
  6216                           ;timers.c: 31: void WaitMs(uint16_t numMilliseconds);timers.c: 32: {;timers.c: 33:  Star
      +                          tTimer(TMR_INTERNAL, numMilliseconds);
  6217                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  6218                           
  6219                           ; BSR set to: 0
  6220                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6221                           ;incstack = 0
  6222  005B8E  0EFE               	movlw	-2
  6223  005B90  006F FF8F FFE6     	movff	plusw1,postinc1
  6224  005B96  006F FF8F FFE6     	movff	plusw1,postinc1
  6225  005B9C  0E00               	movlw	0
  6226  005B9E  6EE6               	movwf	postinc1,c
  6227  005BA0  EC0B  F02D         	call	_StartTimer	;wreg free
  6228  005BA4                     l6005:
  6229                           
  6230                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
  6231  005BA4  0E00               	movlw	0
  6232  005BA6  6EE6               	movwf	postinc1,c
  6233  005BA8  EC7D  F02F         	call	_TimerDone	;wreg free
  6234  005BAC  503B               	movf	btemp,w,c
  6235  005BAE  B4D8               	btfsc	status,2,c
  6236  005BB0  D7F9               	goto	l6005
  6237                           
  6238                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  6239  005BB2  52E5               	movf	postdec1,f,c
  6240  005BB4  52E5               	movf	postdec1,f,c
  6241  005BB6  0012               	return		;funcret
  6242  005BB8                     __end_of_WaitMs:
  6243                           	opt callstack 0
  6244                           
  6245 ;; *************** function _TimerDone *****************
  6246 ;; Defined at:
  6247 ;;		line 20 in file "timers.c"
  6248 ;; Parameters:    Size  Location     Type
  6249 ;;  timer           1  [STACK] unsigned char 
  6250 ;; Auto vars:     Size  Location     Type
  6251 ;;		None
  6252 ;; Return value:  Size  Location     Type
  6253 ;;                  1  [STACK] _Bool 
  6254 ;; Registers used:
  6255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  6256 ;; Tracked objects:
  6257 ;;		On entry : 0/0
  6258 ;;		On exit  : 0/0
  6259 ;;		Unchanged: 0/0
  6260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6265 ;;Total ram usage:        0 bytes
  6266 ;; Hardware stack levels used:    1
  6267 ;; Hardware stack levels required when called:    3
  6268 ;; This function calls:
  6269 ;;		Nothing
  6270 ;; This function is called by:
  6271 ;;		_m_protocol
  6272 ;;		_r_protocol
  6273 ;;		_t_protocol
  6274 ;;		_WaitMs
  6275 ;; This function uses a reentrant model
  6276 ;;
  6277                           
  6278                           	psect	text16
  6279  005EFA                     __ptext16:
  6280                           	opt callstack 0
  6281  005EFA                     _TimerDone:
  6282                           	opt callstack 26
  6283                           
  6284                           ;timers.c: 20: __attribute__((inline)) _Bool TimerDone(uint8_t timer);timers.c: 21: {;ti
      +                          mers.c: 22:  if (tickCount[timer] == 0) {
  6285                           ;stkvar	_timer @ sp[(0)+-1]
  6286                           
  6287                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6288                           ;incstack = 0
  6289  005EFA  0EFF               	movlw	-1
  6290  005EFC  50E3               	movf	plusw1,w,c
  6291  005EFE  0D02               	mullw	2
  6292  005F00  50F3               	movf	prodl,w,c
  6293  005F02  0FD9               	addlw	low _tickCount
  6294  005F04  6ED9               	movwf	fsr2l,c
  6295  005F06  6ADA               	clrf	fsr2h,c
  6296  005F08  50DE               	movf	postinc2,w,c
  6297  005F0A  10DE               	iorwf	postinc2,w,c
  6298  005F0C  A4D8               	btfss	status,2,c
  6299  005F0E  D002               	goto	l5811
  6300                           
  6301                           ;timers.c: 23:   return 1;
  6302  005F10  0E01               	movlw	1
  6303  005F12  D001               	goto	L21
  6304  005F14                     l5811:
  6305                           
  6306                           ;timers.c: 25:  return 0;
  6307  005F14  0E00               	movlw	0
  6308  005F16                     L21:
  6309  005F16  6E3B               	movwf	btemp,c
  6310                           
  6311                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  6312  005F18  52E5               	movf	postdec1,f,c
  6313  005F1A  0012               	return		;funcret
  6314  005F1C                     __end_of_TimerDone:
  6315                           	opt callstack 0
  6316                           
  6317 ;; *************** function _StartTimer *****************
  6318 ;; Defined at:
  6319 ;;		line 12 in file "timers.c"
  6320 ;; Parameters:    Size  Location     Type
  6321 ;;  timer           1  [STACK] unsigned char 
  6322 ;;  count           2  [STACK] unsigned short 
  6323 ;; Auto vars:     Size  Location     Type
  6324 ;;		None
  6325 ;; Return value:  Size  Location     Type
  6326 ;;                  1  [STACK] void 
  6327 ;; Registers used:
  6328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6329 ;; Tracked objects:
  6330 ;;		On entry : 0/39
  6331 ;;		On exit  : 0/0
  6332 ;;		Unchanged: 0/0
  6333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6338 ;;Total ram usage:        0 bytes
  6339 ;; Hardware stack levels used:    1
  6340 ;; Hardware stack levels required when called:    3
  6341 ;; This function calls:
  6342 ;;		Nothing
  6343 ;; This function is called by:
  6344 ;;		_m_protocol
  6345 ;;		_r_protocol
  6346 ;;		_t_protocol
  6347 ;;		_WaitMs
  6348 ;; This function uses a reentrant model
  6349 ;;
  6350                           
  6351                           	psect	text17
  6352  005A16                     __ptext17:
  6353                           	opt callstack 0
  6354  005A16                     _StartTimer:
  6355                           	opt callstack 26
  6356                           
  6357                           ;timers.c: 12: __attribute__((inline)) void StartTimer(uint8_t timer, uint16_t count);ti
      +                          mers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
  6358                           ;stkvar	_count @ sp[(0)+-3]
  6359                           
  6360                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6361                           ;incstack = 0
  6362  005A16  0EFD               	movlw	-3
  6363  005A18  006F FF8C  F045    	movff	plusw1,btemp+10
  6364  005A1E  0EFE               	movlw	-2
  6365  005A20  006F FF8C  F046    	movff	plusw1,btemp+11
  6366  005A26  90D8               	bcf	status,0,c
  6367  005A28  3445               	rlcf	btemp+10,w,c
  6368  005A2A  6E43               	movwf	btemp+8,c
  6369  005A2C  3446               	rlcf	btemp+11,w,c
  6370  005A2E  6E44               	movwf	btemp+9,c
  6371                           
  6372                           ;stkvar	_timer @ sp[(0)+-1]
  6373  005A30  0EFF               	movlw	-1
  6374  005A32  50E3               	movf	plusw1,w,c
  6375  005A34  0D02               	mullw	2
  6376  005A36  50F3               	movf	prodl,w,c
  6377  005A38  0FD9               	addlw	low _tickCount
  6378  005A3A  6ED9               	movwf	fsr2l,c
  6379  005A3C  6ADA               	clrf	fsr2h,c
  6380  005A3E  0060  F10F  FFDE   	movff	btemp+8,postinc2
  6381  005A44  0060  F113  FFDD   	movff	btemp+9,postdec2
  6382                           
  6383                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
  6384  005A4A  52E5               	movf	postdec1,f,c
  6385  005A4C  52E5               	movf	postdec1,f,c
  6386  005A4E  52E5               	movf	postdec1,f,c
  6387  005A50  0012               	return		;funcret
  6388  005A52                     __end_of_StartTimer:
  6389                           	opt callstack 0
  6390                           
  6391 ;; *************** function _UART2_is_rx_ready *****************
  6392 ;; Defined at:
  6393 ;;		line 137 in file "mcc_generated_files/uart2.c"
  6394 ;; Parameters:    Size  Location     Type
  6395 ;;		None
  6396 ;; Auto vars:     Size  Location     Type
  6397 ;;		None
  6398 ;; Return value:  Size  Location     Type
  6399 ;;                  1  [STACK] unsigned char 
  6400 ;; Registers used:
  6401 ;;		btemp
  6402 ;; Tracked objects:
  6403 ;;		On entry : 0/0
  6404 ;;		On exit  : 0/0
  6405 ;;		Unchanged: 0/0
  6406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6411 ;;Total ram usage:        0 bytes
  6412 ;; Hardware stack levels used:    1
  6413 ;; Hardware stack levels required when called:    3
  6414 ;; This function calls:
  6415 ;;		Nothing
  6416 ;; This function is called by:
  6417 ;;		_m_protocol
  6418 ;; This function uses a reentrant model
  6419 ;;
  6420                           
  6421                           	psect	text18
  6422  00616E                     __ptext18:
  6423                           	opt callstack 0
  6424  00616E                     _UART2_is_rx_ready:
  6425                           	opt callstack 26
  6426                           
  6427                           ;mcc_generated_files/uart2.c: 139:     return uart2RxCount;
  6428                           
  6429                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6430                           ;incstack = 0
  6431  00616E  0060  F0BC  F03B   	movff	_uart2RxCount,btemp	;volatile
  6432                           
  6433                           ; _UART2_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  6434  006174  0012               	return		;funcret
  6435  006176                     __end_of_UART2_is_rx_ready:
  6436                           	opt callstack 0
  6437                           
  6438 ;; *************** function _UART2_Read *****************
  6439 ;; Defined at:
  6440 ;;		line 152 in file "mcc_generated_files/uart2.c"
  6441 ;; Parameters:    Size  Location     Type
  6442 ;;		None
  6443 ;; Auto vars:     Size  Location     Type
  6444 ;;  readValue       1  [STACK] unsigned char 
  6445 ;; Return value:  Size  Location     Type
  6446 ;;                  1  [STACK] unsigned char 
  6447 ;; Registers used:
  6448 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  6449 ;; Tracked objects:
  6450 ;;		On entry : 0/0
  6451 ;;		On exit  : 3F/39
  6452 ;;		Unchanged: 0/0
  6453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6458 ;;Total ram usage:        0 bytes
  6459 ;; Hardware stack levels used:    1
  6460 ;; Hardware stack levels required when called:    3
  6461 ;; This function calls:
  6462 ;;		Nothing
  6463 ;; This function is called by:
  6464 ;;		_m_protocol
  6465 ;; This function uses a reentrant model
  6466 ;;
  6467                           
  6468                           	psect	text19
  6469  00595C                     __ptext19:
  6470                           	opt callstack 0
  6471  00595C                     _UART2_Read:
  6472                           	opt callstack 0
  6473                           
  6474                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6475  00595C  52E6               	movf	postinc1,f,c
  6476  00595E                     
  6477                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
  6478                           
  6479                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
  6480  00595E  502F               	movf	_uart2RxCount,w,c	;volatile
  6481  005960  B4D8               	btfsc	status,2,c
  6482  005962  D7FD               	goto	l5967
  6483                           
  6484                           ;mcc_generated_files/uart2.c: 160:     readValue = uart2RxBuffer[uart2RxTail++];
  6485  005964  0E00               	movlw	low _uart2RxBuffer
  6486  005966  2430               	addwf	_uart2RxTail,w,c	;volatile
  6487  005968  6ED9               	movwf	fsr2l,c
  6488  00596A  6ADA               	clrf	fsr2h,c
  6489  00596C  0E02               	movlw	high _uart2RxBuffer
  6490  00596E  22DA               	addwfc	fsr2h,f,c
  6491  005970  50DF               	movf	indf2,w,c
  6492  005972  6E46               	movwf	btemp+11,c
  6493                           
  6494                           ;stkvar	_readValue @ sp[(-1)+0]
  6495  005974  0EFF               	movlw	-1
  6496  005976  0060  F11B  FFE3   	movff	btemp+11,plusw1
  6497  00597C  2A30               	incf	_uart2RxTail,f,c	;volatile
  6498                           
  6499                           ;mcc_generated_files/uart2.c: 161:     if(sizeof(uart2RxBuffer) <= uart2RxTail)
  6500  00597E  0E3F               	movlw	63
  6501  005980  6430               	cpfsgt	_uart2RxTail,c
  6502  005982  D001               	goto	l692
  6503                           
  6504                           ;mcc_generated_files/uart2.c: 162:     {;mcc_generated_files/uart2.c: 163:         uart2
      +                          RxTail = 0;
  6505  005984  6A30               	clrf	_uart2RxTail,c	;volatile
  6506  005986                     l692:
  6507                           
  6508                           ;mcc_generated_files/uart2.c: 165:     PIE6bits.U2RXIE = 0;
  6509  005986  0139               	movlb	57	; () banked
  6510  005988  9596               	bcf	150,2,b	;volatile
  6511                           
  6512                           ; BSR set to: 57
  6513                           ;mcc_generated_files/uart2.c: 166:     uart2RxCount--;
  6514  00598A  062F               	decf	_uart2RxCount,f,c	;volatile
  6515                           
  6516                           ; BSR set to: 57
  6517                           ;mcc_generated_files/uart2.c: 167:     PIE6bits.U2RXIE = 1;
  6518  00598C  8596               	bsf	150,2,b	;volatile
  6519                           
  6520                           ; BSR set to: 57
  6521                           ;mcc_generated_files/uart2.c: 169:     return readValue;
  6522                           ;stkvar	_readValue @ sp[(-1)+0]
  6523  00598E  0EFF               	movlw	-1
  6524  005990  006F FF8C  F03B    	movff	plusw1,btemp
  6525                           
  6526                           ; BSR set to: 57
  6527                           ; _UART2_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6528  005996  52E5               	movf	postdec1,f,c
  6529  005998  0012               	return		;funcret
  6530  00599A                     __end_of_UART2_Read:
  6531                           	opt callstack 0
  6532                           
  6533 ;; *************** function _UART1_is_rx_ready *****************
  6534 ;; Defined at:
  6535 ;;		line 146 in file "mcc_generated_files/uart1.c"
  6536 ;; Parameters:    Size  Location     Type
  6537 ;;		None
  6538 ;; Auto vars:     Size  Location     Type
  6539 ;;		None
  6540 ;; Return value:  Size  Location     Type
  6541 ;;                  1  [STACK] unsigned char 
  6542 ;; Registers used:
  6543 ;;		btemp
  6544 ;; Tracked objects:
  6545 ;;		On entry : 0/0
  6546 ;;		On exit  : 0/0
  6547 ;;		Unchanged: 0/0
  6548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6553 ;;Total ram usage:        0 bytes
  6554 ;; Hardware stack levels used:    1
  6555 ;; Hardware stack levels required when called:    3
  6556 ;; This function calls:
  6557 ;;		Nothing
  6558 ;; This function is called by:
  6559 ;;		_m_protocol
  6560 ;;		_r_protocol
  6561 ;;		_t_protocol
  6562 ;; This function uses a reentrant model
  6563 ;;
  6564                           
  6565                           	psect	text20
  6566  006176                     __ptext20:
  6567                           	opt callstack 0
  6568  006176                     _UART1_is_rx_ready:
  6569                           	opt callstack 26
  6570                           
  6571                           ;mcc_generated_files/uart1.c: 148:  return uart1RxCount;
  6572                           
  6573                           ; BSR set to: 57
  6574                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6575                           ;incstack = 0
  6576  006176  0060  F0D4  F03B   	movff	_uart1RxCount,btemp	;volatile
  6577                           
  6578                           ; _UART1_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  6579  00617C  0012               	return		;funcret
  6580  00617E                     __end_of_UART1_is_rx_ready:
  6581                           	opt callstack 0
  6582                           
  6583 ;; *************** function _UART1_Read *****************
  6584 ;; Defined at:
  6585 ;;		line 161 in file "mcc_generated_files/uart1.c"
  6586 ;; Parameters:    Size  Location     Type
  6587 ;;		None
  6588 ;; Auto vars:     Size  Location     Type
  6589 ;;  readValue       1  [STACK] unsigned char 
  6590 ;; Return value:  Size  Location     Type
  6591 ;;                  1  [STACK] unsigned char 
  6592 ;; Registers used:
  6593 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  6594 ;; Tracked objects:
  6595 ;;		On entry : 0/0
  6596 ;;		On exit  : 3F/39
  6597 ;;		Unchanged: 0/0
  6598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6603 ;;Total ram usage:        0 bytes
  6604 ;; Hardware stack levels used:    1
  6605 ;; Hardware stack levels required when called:    3
  6606 ;; This function calls:
  6607 ;;		Nothing
  6608 ;; This function is called by:
  6609 ;;		_m_protocol
  6610 ;;		_r_protocol
  6611 ;;		_t_protocol
  6612 ;; This function uses a reentrant model
  6613 ;;
  6614                           
  6615                           	psect	text21
  6616  00599A                     __ptext21:
  6617                           	opt callstack 0
  6618  00599A                     _UART1_Read:
  6619                           	opt callstack 0
  6620                           
  6621                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6622  00599A  52E6               	movf	postinc1,f,c
  6623  00599C                     
  6624                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  6625                           
  6626                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  6627  00599C  5035               	movf	_uart1RxCount,w,c	;volatile
  6628  00599E  B4D8               	btfsc	status,2,c
  6629  0059A0  D7FD               	goto	l5943
  6630                           
  6631                           ;mcc_generated_files/uart1.c: 168:  readValue = uart1RxBuffer[uart1RxTail++];
  6632  0059A2  0E80               	movlw	low _uart1RxBuffer
  6633  0059A4  2436               	addwf	_uart1RxTail,w,c	;volatile
  6634  0059A6  6ED9               	movwf	fsr2l,c
  6635  0059A8  6ADA               	clrf	fsr2h,c
  6636  0059AA  0E02               	movlw	high _uart1RxBuffer
  6637  0059AC  22DA               	addwfc	fsr2h,f,c
  6638  0059AE  50DF               	movf	indf2,w,c
  6639  0059B0  6E46               	movwf	btemp+11,c
  6640                           
  6641                           ;stkvar	_readValue @ sp[(-1)+0]
  6642  0059B2  0EFF               	movlw	-1
  6643  0059B4  0060  F11B  FFE3   	movff	btemp+11,plusw1
  6644  0059BA  2A36               	incf	_uart1RxTail,f,c	;volatile
  6645                           
  6646                           ;mcc_generated_files/uart1.c: 169:  if (sizeof(uart1RxBuffer) <= uart1RxTail) {
  6647  0059BC  0E3F               	movlw	63
  6648  0059BE  6436               	cpfsgt	_uart1RxTail,c
  6649  0059C0  D001               	goto	l572
  6650                           
  6651                           ;mcc_generated_files/uart1.c: 170:   uart1RxTail = 0;
  6652  0059C2  6A36               	clrf	_uart1RxTail,c	;volatile
  6653  0059C4                     l572:
  6654                           
  6655                           ;mcc_generated_files/uart1.c: 172:  PIE3bits.U1RXIE = 0;
  6656  0059C4  0139               	movlb	57	; () banked
  6657  0059C6  9793               	bcf	147,3,b	;volatile
  6658                           
  6659                           ; BSR set to: 57
  6660                           ;mcc_generated_files/uart1.c: 173:  uart1RxCount--;
  6661  0059C8  0635               	decf	_uart1RxCount,f,c	;volatile
  6662                           
  6663                           ; BSR set to: 57
  6664                           ;mcc_generated_files/uart1.c: 174:  PIE3bits.U1RXIE = 1;
  6665  0059CA  8793               	bsf	147,3,b	;volatile
  6666                           
  6667                           ; BSR set to: 57
  6668                           ;mcc_generated_files/uart1.c: 176:  return readValue;
  6669                           ;stkvar	_readValue @ sp[(-1)+0]
  6670  0059CC  0EFF               	movlw	-1
  6671  0059CE  006F FF8C  F03B    	movff	plusw1,btemp
  6672                           
  6673                           ; BSR set to: 57
  6674                           ; _UART1_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6675  0059D4  52E5               	movf	postdec1,f,c
  6676  0059D6  0012               	return		;funcret
  6677  0059D8                     __end_of_UART1_Read:
  6678                           	opt callstack 0
  6679                           
  6680 ;; *************** function _init_display *****************
  6681 ;; Defined at:
  6682 ;;		line 35 in file "eadog.c"
  6683 ;; Parameters:    Size  Location     Type
  6684 ;;		None
  6685 ;; Auto vars:     Size  Location     Type
  6686 ;;		None
  6687 ;; Return value:  Size  Location     Type
  6688 ;;                  1  [STACK] void 
  6689 ;; Registers used:
  6690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6691 ;; Tracked objects:
  6692 ;;		On entry : 0/0
  6693 ;;		On exit  : 3F/3D
  6694 ;;		Unchanged: 0/0
  6695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6700 ;;Total ram usage:        0 bytes
  6701 ;; Hardware stack levels used:    1
  6702 ;; Hardware stack levels required when called:    5
  6703 ;; This function calls:
  6704 ;;		_ringBufS_init
  6705 ;;		_send_lcd_cmd
  6706 ;;		_send_lcd_cmd_long
  6707 ;;		_wdtdelay
  6708 ;; This function is called by:
  6709 ;;		_main
  6710 ;; This function uses a reentrant model
  6711 ;;
  6712                           
  6713                           	psect	text22
  6714  004B22                     __ptext22:
  6715                           	opt callstack 0
  6716  004B22                     _init_display:
  6717                           	opt callstack 25
  6718                           
  6719                           ;eadog.c: 37:  spi_link.tx1a = &ring_buf1;
  6720                           
  6721                           ; BSR set to: 57
  6722                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6723                           ;incstack = 0
  6724  004B22  0E43               	movlw	low _ring_buf1
  6725  004B24  0100               	movlb	0	; () banked
  6726  004B26  6FD3               	movwf	(_spi_link+6)& (0+255),b	;volatile
  6727  004B28  0E03               	movlw	high _ring_buf1
  6728  004B2A  6FD4               	movwf	(_spi_link+7)& (0+255),b	;volatile
  6729                           
  6730                           ;eadog.c: 38:  spi_link.tx1b = &ring_buf2;
  6731  004B2C  0E00               	movlw	low _ring_buf2
  6732  004B2E  6FD1               	movwf	(_spi_link+4)& (0+255),b	;volatile
  6733  004B30  0E03               	movlw	high _ring_buf2
  6734  004B32  6FD2               	movwf	(_spi_link+5)& (0+255),b	;volatile
  6735                           
  6736                           ; BSR set to: 0
  6737                           ;eadog.c: 39:  ringBufS_init(spi_link.tx1a);
  6738  004B34  0060  F34F  FFE6   	movff	_spi_link+6,postinc1
  6739  004B3A  0060  F353  FFE6   	movff	_spi_link+7,postinc1
  6740  004B40  EC19  F02E         	call	_ringBufS_init	;wreg free
  6741                           
  6742                           ;eadog.c: 40:  ringBufS_init(spi_link.tx1b);
  6743  004B44  0060  F347  FFE6   	movff	_spi_link+4,postinc1
  6744  004B4A  0060  F34B  FFE6   	movff	_spi_link+5,postinc1
  6745  004B50  EC19  F02E         	call	_ringBufS_init	;wreg free
  6746                           
  6747                           ;eadog.c: 42:  LATEbits.LATE0 = 1;
  6748  004B54  80BE               	bsf	16318,0,c	;volatile
  6749  004B56  84BC               	bsf	16316,2,c	;volatile
  6750                           
  6751                           ;eadog.c: 44:  wdtdelay(350000);
  6752  004B58  0E30               	movlw	48
  6753  004B5A  6EE6               	movwf	postinc1,c
  6754  004B5C  0E57               	movlw	87
  6755  004B5E  6EE6               	movwf	postinc1,c
  6756  004B60  0E05               	movlw	5
  6757  004B62  6EE6               	movwf	postinc1,c
  6758  004B64  0E00               	movlw	0
  6759  004B66  6EE6               	movwf	postinc1,c
  6760  004B68  EC26  F02B         	call	_wdtdelay	;wreg free
  6761                           
  6762                           ; BSR set to: 0
  6763                           ;eadog.c: 45:  send_lcd_cmd(0x39);
  6764  004B6C  0E39               	movlw	57
  6765  004B6E  6EE6               	movwf	postinc1,c
  6766  004B70  EC05  F02E         	call	_send_lcd_cmd	;wreg free
  6767                           
  6768                           ; BSR set to: 0
  6769                           ;eadog.c: 46:  send_lcd_cmd(0x1d);
  6770  004B74  0E1D               	movlw	29
  6771  004B76  6EE6               	movwf	postinc1,c
  6772  004B78  EC05  F02E         	call	_send_lcd_cmd	;wreg free
  6773                           
  6774                           ; BSR set to: 0
  6775                           ;eadog.c: 47:  send_lcd_cmd(0x50);
  6776  004B7C  0E50               	movlw	80
  6777  004B7E  6EE6               	movwf	postinc1,c
  6778  004B80  EC05  F02E         	call	_send_lcd_cmd	;wreg free
  6779                           
  6780                           ; BSR set to: 0
  6781                           ;eadog.c: 48:  send_lcd_cmd(0x6c);
  6782  004B84  0E6C               	movlw	108
  6783  004B86  6EE6               	movwf	postinc1,c
  6784  004B88  EC05  F02E         	call	_send_lcd_cmd	;wreg free
  6785                           
  6786                           ; BSR set to: 0
  6787                           ;eadog.c: 49:  send_lcd_cmd(0x76);
  6788  004B8C  0E76               	movlw	118
  6789  004B8E  6EE6               	movwf	postinc1,c
  6790  004B90  EC05  F02E         	call	_send_lcd_cmd	;wreg free
  6791                           
  6792                           ; BSR set to: 0
  6793                           ;eadog.c: 50:  send_lcd_cmd_long(0x38);
  6794  004B94  0E38               	movlw	56
  6795  004B96  6EE6               	movwf	postinc1,c
  6796  004B98  ECF1  F02D         	call	_send_lcd_cmd_long	;wreg free
  6797                           
  6798                           ; BSR set to: 0
  6799                           ;eadog.c: 51:  send_lcd_cmd(0x0f);
  6800  004B9C  0E0F               	movlw	15
  6801  004B9E  6EE6               	movwf	postinc1,c
  6802  004BA0  EC05  F02E         	call	_send_lcd_cmd	;wreg free
  6803                           
  6804                           ; BSR set to: 0
  6805                           ;eadog.c: 52:  send_lcd_cmd_long(0x01);
  6806  004BA4  0E01               	movlw	1
  6807  004BA6  6EE6               	movwf	postinc1,c
  6808  004BA8  ECF1  F02D         	call	_send_lcd_cmd_long	;wreg free
  6809                           
  6810                           ; BSR set to: 0
  6811                           ;eadog.c: 53:  send_lcd_cmd(0x02);
  6812  004BAC  0E02               	movlw	2
  6813  004BAE  6EE6               	movwf	postinc1,c
  6814  004BB0  EC05  F02E         	call	_send_lcd_cmd	;wreg free
  6815                           
  6816                           ; BSR set to: 0
  6817                           ;eadog.c: 54:  send_lcd_cmd(0x06);
  6818  004BB4  0E06               	movlw	6
  6819  004BB6  6EE6               	movwf	postinc1,c
  6820  004BB8  EC05  F02E         	call	_send_lcd_cmd	;wreg free
  6821                           
  6822                           ; BSR set to: 0
  6823                           ;eadog.c: 55:  wdtdelay(30);
  6824  004BBC  0E1E               	movlw	30
  6825  004BBE  6EE6               	movwf	postinc1,c
  6826  004BC0  0E00               	movlw	0
  6827  004BC2  6EE6               	movwf	postinc1,c
  6828  004BC4  0E00               	movlw	0
  6829  004BC6  6EE6               	movwf	postinc1,c
  6830  004BC8  0E00               	movlw	0
  6831  004BCA  6EE6               	movwf	postinc1,c
  6832  004BCC  EC26  F02B         	call	_wdtdelay	;wreg free
  6833                           
  6834                           ; BSR set to: 0
  6835                           ;eadog.c: 56:  SPI1CON2 = 0x02;
  6836  004BD0  0E02               	movlw	2
  6837  004BD2  013D               	movlb	61	; () banked
  6838  004BD4  6F16               	movwf	22,b	;volatile
  6839                           
  6840                           ; BSR set to: 61
  6841                           ;eadog.c: 57:  SPI1CON1 = 0x40;
  6842  004BD6  0E40               	movlw	64
  6843  004BD8  6F15               	movwf	21,b	;volatile
  6844                           
  6845                           ; BSR set to: 61
  6846                           ;eadog.c: 58:  SPI1CON0 = 0x83;
  6847  004BDA  0E83               	movlw	131
  6848  004BDC  6F14               	movwf	20,b	;volatile
  6849                           
  6850                           ; BSR set to: 61
  6851                           ;eadog.c: 59:  SPI1INTFbits.SPI1TXUIF = 0;
  6852  004BDE  931A               	bcf	26,1,b	;volatile
  6853                           
  6854                           ; BSR set to: 61
  6855                           ;eadog.c: 60:  DMA1CON1bits.DMODE = 0;
  6856  004BE0  0E3F               	movlw	-193
  6857  004BE2  013B               	movlb	59	; () banked
  6858  004BE4  17FD               	andwf	253,f,b	;volatile
  6859                           
  6860                           ; BSR set to: 59
  6861                           ;eadog.c: 61:  DMA1CON1bits.DSTP = 0;
  6862  004BE6  9BFD               	bcf	253,5,b	;volatile
  6863                           
  6864                           ; BSR set to: 59
  6865                           ;eadog.c: 62:  DMA1CON1bits.SMODE = 1;
  6866  004BE8  51FD               	movf	253,w,b	;volatile
  6867  004BEA  0BF9               	andlw	-7
  6868  004BEC  0902               	iorlw	2
  6869  004BEE  6FFD               	movwf	253,b	;volatile
  6870                           
  6871                           ; BSR set to: 59
  6872                           ;eadog.c: 63:  DMA1CON1bits.SMR = 0;
  6873  004BF0  0EE7               	movlw	-25
  6874  004BF2  17FD               	andwf	253,f,b	;volatile
  6875                           
  6876                           ; BSR set to: 59
  6877                           ;eadog.c: 64:  DMA1CON1bits.SSTP = 1;
  6878  004BF4  81FD               	bsf	253,0,b	;volatile
  6879                           
  6880                           ; BSR set to: 59
  6881                           ;eadog.c: 65:  DMA1SSA = (uint32_t) & ring_buf1;
  6882  004BF6  0E43               	movlw	low _ring_buf1
  6883  004BF8  6FF9               	movwf	249,b	;volatile
  6884  004BFA  0E03               	movlw	high _ring_buf1
  6885  004BFC  6FFA               	movwf	250,b	;volatile
  6886  004BFE  0E00               	movlw	low (_ring_buf1 shr (0+16))
  6887  004C00  6FFB               	movwf	251,b	;volatile
  6888                           
  6889                           ; BSR set to: 59
  6890                           ;eadog.c: 66:  DMA1CON0bits.DGO = 0;
  6891  004C02  9BFC               	bcf	252,5,b	;volatile
  6892                           
  6893                           ; BSR set to: 59
  6894                           ;eadog.c: 67:  SPI1INTFbits.SPI1TXUIF = 1;
  6895  004C04  013D               	movlb	61	; () banked
  6896  004C06  831A               	bsf	26,1,b	;volatile
  6897                           
  6898                           ; BSR set to: 61
  6899                           ;eadog.c: 68:  LATEbits.LATE0 = 0;
  6900  004C08  90BE               	bcf	16318,0,c	;volatile
  6901                           
  6902                           ; BSR set to: 61
  6903                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6904  004C0A  0012               	return		;funcret
  6905  004C0C                     __end_of_init_display:
  6906                           	opt callstack 0
  6907                           
  6908 ;; *************** function _send_lcd_cmd_long *****************
  6909 ;; Defined at:
  6910 ;;		line 97 in file "eadog.c"
  6911 ;; Parameters:    Size  Location     Type
  6912 ;;  cmd             1  [STACK] unsigned char 
  6913 ;; Auto vars:     Size  Location     Type
  6914 ;;		None
  6915 ;; Return value:  Size  Location     Type
  6916 ;;                  1  [STACK] void 
  6917 ;; Registers used:
  6918 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6919 ;; Tracked objects:
  6920 ;;		On entry : 3F/0
  6921 ;;		On exit  : 3F/0
  6922 ;;		Unchanged: 0/0
  6923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6928 ;;Total ram usage:        0 bytes
  6929 ;; Hardware stack levels used:    1
  6930 ;; Hardware stack levels required when called:    4
  6931 ;; This function calls:
  6932 ;;		_SPI1_Exchange8bit
  6933 ;;		_wdtdelay
  6934 ;; This function is called by:
  6935 ;;		_init_display
  6936 ;; This function uses a reentrant model
  6937 ;;
  6938                           
  6939                           	psect	text23
  6940  005BE2                     __ptext23:
  6941                           	opt callstack 0
  6942  005BE2                     _send_lcd_cmd_long:
  6943                           	opt callstack 25
  6944                           
  6945                           ; BSR set to: 61
  6946                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6947                           ;incstack = 0
  6948                           ;eadog.c: 97: static void send_lcd_cmd_long(uint8_t cmd);eadog.c: 98: {;eadog.c: 99:  do
      +                           { LATCbits.LATC1 = 0; } while(0);
  6949  005BE2  92BC               	bcf	16316,1,c	;volatile
  6950                           
  6951                           ;eadog.c: 100:  do { LATCbits.LATC2 = 0; } while(0);
  6952  005BE4  94BC               	bcf	16316,2,c	;volatile
  6953                           
  6954                           ;eadog.c: 101:  SPI1_Exchange8bit(cmd);
  6955                           ;stkvar	_cmd @ sp[(0)+-1]
  6956  005BE6  0EFF               	movlw	-1
  6957  005BE8  50E3               	movf	plusw1,w,c
  6958  005BEA  6EE6               	movwf	postinc1,c
  6959  005BEC  ECF2  F02F         	call	_SPI1_Exchange8bit	;wreg free
  6960                           
  6961                           ; BSR set to: 57
  6962                           ;eadog.c: 102:  wdtdelay(800);
  6963  005BF0  0E20               	movlw	32
  6964  005BF2  6EE6               	movwf	postinc1,c
  6965  005BF4  0E03               	movlw	3
  6966  005BF6  6EE6               	movwf	postinc1,c
  6967  005BF8  0E00               	movlw	0
  6968  005BFA  6EE6               	movwf	postinc1,c
  6969  005BFC  0E00               	movlw	0
  6970  005BFE  6EE6               	movwf	postinc1,c
  6971  005C00  EC26  F02B         	call	_wdtdelay	;wreg free
  6972                           
  6973                           ; BSR set to: 0
  6974  005C04  82BC               	bsf	16316,1,c	;volatile
  6975                           
  6976                           ; BSR set to: 0
  6977                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6978  005C06  52E5               	movf	postdec1,f,c
  6979  005C08  0012               	return		;funcret
  6980  005C0A                     __end_of_send_lcd_cmd_long:
  6981                           	opt callstack 0
  6982                           
  6983 ;; *************** function _send_lcd_cmd *****************
  6984 ;; Defined at:
  6985 ;;		line 85 in file "eadog.c"
  6986 ;; Parameters:    Size  Location     Type
  6987 ;;  cmd             1  [STACK] unsigned char 
  6988 ;; Auto vars:     Size  Location     Type
  6989 ;;		None
  6990 ;; Return value:  Size  Location     Type
  6991 ;;                  1  [STACK] void 
  6992 ;; Registers used:
  6993 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6994 ;; Tracked objects:
  6995 ;;		On entry : 3F/0
  6996 ;;		On exit  : 3F/0
  6997 ;;		Unchanged: 0/0
  6998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7003 ;;Total ram usage:        0 bytes
  7004 ;; Hardware stack levels used:    1
  7005 ;; Hardware stack levels required when called:    4
  7006 ;; This function calls:
  7007 ;;		_SPI1_Exchange8bit
  7008 ;;		_wdtdelay
  7009 ;; This function is called by:
  7010 ;;		_init_display
  7011 ;; This function uses a reentrant model
  7012 ;;
  7013                           
  7014                           	psect	text24
  7015  005C0A                     __ptext24:
  7016                           	opt callstack 0
  7017  005C0A                     _send_lcd_cmd:
  7018                           	opt callstack 25
  7019                           
  7020                           ; BSR set to: 0
  7021                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7022                           ;incstack = 0
  7023                           ;eadog.c: 85: static void send_lcd_cmd(uint8_t cmd);eadog.c: 86: {;eadog.c: 87:  do { LA
      +                          TCbits.LATC1 = 0; } while(0);
  7024  005C0A  92BC               	bcf	16316,1,c	;volatile
  7025                           
  7026                           ;eadog.c: 88:  do { LATCbits.LATC2 = 0; } while(0);
  7027  005C0C  94BC               	bcf	16316,2,c	;volatile
  7028                           
  7029                           ;eadog.c: 89:  SPI1_Exchange8bit(cmd);
  7030                           ;stkvar	_cmd @ sp[(0)+-1]
  7031  005C0E  0EFF               	movlw	-1
  7032  005C10  50E3               	movf	plusw1,w,c
  7033  005C12  6EE6               	movwf	postinc1,c
  7034  005C14  ECF2  F02F         	call	_SPI1_Exchange8bit	;wreg free
  7035                           
  7036                           ; BSR set to: 57
  7037                           ;eadog.c: 90:  wdtdelay(30);
  7038  005C18  0E1E               	movlw	30
  7039  005C1A  6EE6               	movwf	postinc1,c
  7040  005C1C  0E00               	movlw	0
  7041  005C1E  6EE6               	movwf	postinc1,c
  7042  005C20  0E00               	movlw	0
  7043  005C22  6EE6               	movwf	postinc1,c
  7044  005C24  0E00               	movlw	0
  7045  005C26  6EE6               	movwf	postinc1,c
  7046  005C28  EC26  F02B         	call	_wdtdelay	;wreg free
  7047                           
  7048                           ; BSR set to: 0
  7049  005C2C  82BC               	bsf	16316,1,c	;volatile
  7050                           
  7051                           ; BSR set to: 0
  7052                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  7053  005C2E  52E5               	movf	postdec1,f,c
  7054  005C30  0012               	return		;funcret
  7055  005C32                     __end_of_send_lcd_cmd:
  7056                           	opt callstack 0
  7057                           
  7058 ;; *************** function _SPI1_Exchange8bit *****************
  7059 ;; Defined at:
  7060 ;;		line 79 in file "mcc_generated_files/spi1.c"
  7061 ;; Parameters:    Size  Location     Type
  7062 ;;  data            1  [STACK] unsigned char 
  7063 ;; Auto vars:     Size  Location     Type
  7064 ;;		None
  7065 ;; Return value:  Size  Location     Type
  7066 ;;                  1  [STACK] unsigned char 
  7067 ;; Registers used:
  7068 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  7069 ;; Tracked objects:
  7070 ;;		On entry : 0/0
  7071 ;;		On exit  : 3F/39
  7072 ;;		Unchanged: 0/0
  7073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7078 ;;Total ram usage:        0 bytes
  7079 ;; Hardware stack levels used:    1
  7080 ;; Hardware stack levels required when called:    3
  7081 ;; This function calls:
  7082 ;;		Nothing
  7083 ;; This function is called by:
  7084 ;;		_send_lcd_cmd
  7085 ;;		_send_lcd_cmd_long
  7086 ;; This function uses a reentrant model
  7087 ;;
  7088                           
  7089                           	psect	text25
  7090  005FE4                     __ptext25:
  7091                           	opt callstack 0
  7092  005FE4                     _SPI1_Exchange8bit:
  7093                           	opt callstack 25
  7094                           
  7095                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  7096                           
  7097                           ; BSR set to: 0
  7098                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7099                           ;incstack = 0
  7100  005FE4  0E01               	movlw	1
  7101  005FE6  013D               	movlb	61	; () banked
  7102  005FE8  6F12               	movwf	18,b	;volatile
  7103                           
  7104                           ; BSR set to: 61
  7105                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  7106                           ;stkvar	_data @ sp[(0)+-1]
  7107  005FEA  0EFF               	movlw	-1
  7108  005FEC  006F FF8F FD11     	movff	plusw1,15633	;volatile
  7109  005FF2                     l851:
  7110                           
  7111                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  7112  005FF2  0139               	movlb	57	; () banked
  7113  005FF4  A9A2               	btfss	162,4,b	;volatile
  7114  005FF6  D7FD               	goto	l851
  7115                           
  7116                           ; BSR set to: 57
  7117                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  7118  005FF8  006F F440  F03B    	movff	15632,btemp	;volatile
  7119                           
  7120                           ; BSR set to: 57
  7121                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7122  005FFE  52E5               	movf	postdec1,f,c
  7123  006000  0012               	return		;funcret
  7124  006002                     __end_of_SPI1_Exchange8bit:
  7125                           	opt callstack 0
  7126                           
  7127 ;; *************** function _ringBufS_init *****************
  7128 ;; Defined at:
  7129 ;;		line 22 in file "ringbufs.c"
  7130 ;; Parameters:    Size  Location     Type
  7131 ;;  _this           2  [STACK] PTR volatile struct ring
  7132 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7133 ;; Auto vars:     Size  Location     Type
  7134 ;;		None
  7135 ;; Return value:  Size  Location     Type
  7136 ;;                  1  [STACK] void 
  7137 ;; Registers used:
  7138 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7139 ;; Tracked objects:
  7140 ;;		On entry : 0/0
  7141 ;;		On exit  : 0/0
  7142 ;;		Unchanged: 0/0
  7143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7148 ;;Total ram usage:        0 bytes
  7149 ;; Hardware stack levels used:    1
  7150 ;; Hardware stack levels required when called:    4
  7151 ;; This function calls:
  7152 ;;		_memset
  7153 ;; This function is called by:
  7154 ;;		_init_display
  7155 ;; This function uses a reentrant model
  7156 ;;
  7157                           
  7158                           	psect	text26
  7159  005C32                     __ptext26:
  7160                           	opt callstack 0
  7161  005C32                     _ringBufS_init:
  7162                           	opt callstack 25
  7163                           
  7164                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  7165                           
  7166                           ; BSR set to: 57
  7167                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7168                           ;incstack = 0
  7169  005C32  0E43               	movlw	67
  7170  005C34  6EE6               	movwf	postinc1,c
  7171  005C36  0E00               	movlw	0
  7172  005C38  6EE6               	movwf	postinc1,c
  7173  005C3A  0E00               	movlw	0
  7174  005C3C  6EE6               	movwf	postinc1,c
  7175  005C3E  0E00               	movlw	0
  7176  005C40  6EE6               	movwf	postinc1,c
  7177                           
  7178                           ;stkvar	__this @ sp[(-4)+-2]
  7179  005C42  0EFA               	movlw	-6
  7180  005C44  006F FF8F FFE6     	movff	plusw1,postinc1
  7181  005C4A  006F FF8F FFE6     	movff	plusw1,postinc1
  7182  005C50  EC8E  F019         	call	_memset	;wreg free
  7183                           
  7184                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  7185  005C54  52E5               	movf	postdec1,f,c
  7186  005C56  52E5               	movf	postdec1,f,c
  7187  005C58  0012               	return		;funcret
  7188  005C5A                     __end_of_ringBufS_init:
  7189                           	opt callstack 0
  7190                           
  7191 ;; *************** function _eaDogM_WriteStringAtPos *****************
  7192 ;; Defined at:
  7193 ;;		line 221 in file "eadog.c"
  7194 ;; Parameters:    Size  Location     Type
  7195 ;;  r               1  [STACK] unsigned char 
  7196 ;;  c               1  [STACK] unsigned char 
  7197 ;;  strPtr          1  [STACK] PTR unsigned char 
  7198 ;;		 -> V(89), 
  7199 ;; Auto vars:     Size  Location     Type
  7200 ;;		None
  7201 ;; Return value:  Size  Location     Type
  7202 ;;                  1  [STACK] void 
  7203 ;; Registers used:
  7204 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  7205 ;; Tracked objects:
  7206 ;;		On entry : 3F/0
  7207 ;;		On exit  : 3F/3B
  7208 ;;		Unchanged: 0/0
  7209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7214 ;;Total ram usage:        0 bytes
  7215 ;; Hardware stack levels used:    1
  7216 ;; Hardware stack levels required when called:   13
  7217 ;; This function calls:
  7218 ;;		_eaDogM_WriteString
  7219 ;;		_send_lcd_cmd_dma
  7220 ;; This function is called by:
  7221 ;;		_main
  7222 ;; This function uses a reentrant model
  7223 ;;
  7224                           
  7225                           	psect	text27
  7226  005AB6                     __ptext27:
  7227                           	opt callstack 0
  7228  005AB6                     _eaDogM_WriteStringAtPos:
  7229                           	opt callstack 17
  7230                           
  7231                           ;eadog.c: 221: void eaDogM_WriteStringAtPos(uint8_t r, uint8_t c, char *strPtr);eadog.c:
      +                           222: {;eadog.c: 223:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  7232                           ;stkvar	_c @ sp[(0)+-2]
  7233                           
  7234                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7235                           ;incstack = 0
  7236  005AB6  0EFE               	movlw	-2
  7237  005AB8  006F FF8C  F046    	movff	plusw1,btemp+11
  7238                           
  7239                           ;stkvar	_r @ sp[(0)+-1]
  7240  005ABE  0EFF               	movlw	-1
  7241  005AC0  50E3               	movf	plusw1,w,c
  7242  005AC2  0D10               	mullw	16
  7243  005AC4  50F3               	movf	prodl,w,c
  7244  005AC6  2446               	addwf	btemp+11,w,c
  7245  005AC8  0F80               	addlw	128
  7246  005ACA  6EE6               	movwf	postinc1,c
  7247  005ACC  EC54  F02B         	call	_send_lcd_cmd_dma	;wreg free
  7248                           
  7249                           ; BSR set to: 0
  7250                           ;eadog.c: 224:  eaDogM_WriteString(strPtr);
  7251                           ;stkvar	_strPtr @ sp[(0)+-3]
  7252  005AD0  0EFD               	movlw	-3
  7253  005AD2  50E3               	movf	plusw1,w,c
  7254  005AD4  6EE6               	movwf	postinc1,c
  7255  005AD6  EC89  F028         	call	_eaDogM_WriteString	;wreg free
  7256                           
  7257                           ; BSR set to: 59
  7258                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
  7259  005ADA  52E5               	movf	postdec1,f,c
  7260  005ADC  52E5               	movf	postdec1,f,c
  7261  005ADE  52E5               	movf	postdec1,f,c
  7262  005AE0  0012               	return		;funcret
  7263  005AE2                     __end_of_eaDogM_WriteStringAtPos:
  7264                           	opt callstack 0
  7265                           
  7266 ;; *************** function _eaDogM_WriteString *****************
  7267 ;; Defined at:
  7268 ;;		line 167 in file "eadog.c"
  7269 ;; Parameters:    Size  Location     Type
  7270 ;;  strPtr          1  [STACK] PTR unsigned char 
  7271 ;;		 -> V(89), 
  7272 ;; Auto vars:     Size  Location     Type
  7273 ;;		None
  7274 ;; Return value:  Size  Location     Type
  7275 ;;                  1  [STACK] void 
  7276 ;; Registers used:
  7277 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  7278 ;; Tracked objects:
  7279 ;;		On entry : 3F/0
  7280 ;;		On exit  : 3F/3B
  7281 ;;		Unchanged: 0/0
  7282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7287 ;;Total ram usage:        0 bytes
  7288 ;; Hardware stack levels used:    1
  7289 ;; Hardware stack levels required when called:   12
  7290 ;; This function calls:
  7291 ;;		_printf
  7292 ;;		_ringBufS_flush
  7293 ;;		_start_lcd
  7294 ;;		_strlen
  7295 ;;		_wait_lcd_set
  7296 ;; This function is called by:
  7297 ;;		_eaDogM_WriteStringAtPos
  7298 ;; This function uses a reentrant model
  7299 ;;
  7300                           
  7301                           	psect	text28
  7302  005112                     __ptext28:
  7303                           	opt callstack 0
  7304  005112                     _eaDogM_WriteString:
  7305                           	opt callstack 17
  7306                           
  7307                           ;eadog.c: 167: void eaDogM_WriteString(char *strPtr);eadog.c: 168: {;eadog.c: 169:  wait
      +                          _lcd_set();
  7308                           
  7309                           ; BSR set to: 59
  7310                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7311                           ;incstack = 0
  7312  005112  ECBF  F030         	call	_wait_lcd_set	;wreg free
  7313                           
  7314                           ; BSR set to: 0
  7315                           ;eadog.c: 171:  ringBufS_flush(spi_link.tx1a, 0);
  7316  005116  0E00               	movlw	0
  7317  005118  6EE6               	movwf	postinc1,c
  7318  00511A  0060  F34F  FFE6   	movff	_spi_link+6,postinc1
  7319  005120  0060  F353  FFE6   	movff	_spi_link+7,postinc1
  7320  005126  EC6F  F029         	call	_ringBufS_flush	;wreg free
  7321  00512A  94BC               	bcf	16316,2,c	;volatile
  7322                           
  7323                           ;eadog.c: 173:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  7324                           ;stkvar	_strPtr @ sp[(0)+-1]
  7325  00512C  0EFF               	movlw	-1
  7326  00512E  006F FF8C  F046    	movff	plusw1,btemp+11
  7327  005134  0060  F11B  FFE6   	movff	btemp+11,postinc1
  7328  00513A  0E00               	movlw	0
  7329  00513C  6EE6               	movwf	postinc1,c
  7330  00513E  ECE8  F027         	call	_strlen	;wreg free
  7331  005142  503C               	movf	btemp+1,w,c
  7332  005144  E104               	bnz	u4900
  7333  005146  0E41               	movlw	65
  7334  005148  5C3B               	subwf	btemp,w,c
  7335  00514A  A0D8               	btfss	status,0,c
  7336  00514C  D008               	goto	l7957
  7337  00514E                     u4900:
  7338                           
  7339                           ;stkvar	_strPtr @ sp[(0)+-1]
  7340  00514E  0EFF               	movlw	-1
  7341  005150  50E3               	movf	plusw1,w,c
  7342  005152  6ED9               	movwf	fsr2l,c
  7343  005154  6ADA               	clrf	fsr2h,c
  7344  005156  0E40               	movlw	64
  7345  005158  26D9               	addwf	fsr2l,f,c
  7346  00515A  0E00               	movlw	0
  7347  00515C  6EDF               	movwf	indf2,c
  7348  00515E                     l7957:
  7349                           
  7350                           ;eadog.c: 174:  DMA1CON0bits.EN = 0;
  7351  00515E  013B               	movlb	59	; () banked
  7352  005160  9FFC               	bcf	252,7,b	;volatile
  7353                           
  7354                           ; BSR set to: 59
  7355                           ;eadog.c: 175:  DMA1SSZ = strlen(strPtr);
  7356                           ;stkvar	_strPtr @ sp[(0)+-1]
  7357  005162  0EFF               	movlw	-1
  7358  005164  006F FF8C  F046    	movff	plusw1,btemp+11
  7359  00516A  0060  F11B  FFE6   	movff	btemp+11,postinc1
  7360  005170  0E00               	movlw	0
  7361  005172  6EE6               	movwf	postinc1,c
  7362  005174  ECE8  F027         	call	_strlen	;wreg free
  7363  005178  0060  F0EF  FBF7   	movff	btemp,15351	;volatile
  7364  00517E  0060  F0F3  FBF8   	movff	btemp+1,15352	;volatile
  7365                           
  7366                           ;eadog.c: 176:  DMA1CON0bits.EN = 1;
  7367  005184  013B               	movlb	59	; () banked
  7368  005186  8FFC               	bsf	252,7,b	;volatile
  7369                           
  7370                           ; BSR set to: 59
  7371                           ;eadog.c: 177:  printf("%s", strPtr);
  7372                           ;stkvar	_strPtr @ sp[(0)+-1]
  7373  005188  0EFF               	movlw	-1
  7374  00518A  006F FF8C  F046    	movff	plusw1,btemp+11
  7375  005190  0060  F11B  FFE6   	movff	btemp+11,postinc1
  7376  005196  0E00               	movlw	0
  7377  005198  6EE6               	movwf	postinc1,c
  7378  00519A  0E98               	movlw	(STR_2+9)& (0+255)
  7379  00519C  6EE6               	movwf	postinc1,c
  7380  00519E  0E03               	movlw	3
  7381  0051A0  6EE6               	movwf	postinc1,c
  7382  0051A2  EC96  F02A         	call	_printf	;wreg free
  7383                           
  7384                           ; BSR set to: 0
  7385                           ;eadog.c: 178:  start_lcd();
  7386  0051A6  ECC2  F030         	call	_start_lcd	;wreg free
  7387                           
  7388                           ; BSR set to: 59
  7389                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  7390  0051AA  52E5               	movf	postdec1,f,c
  7391  0051AC  0012               	return		;funcret
  7392  0051AE                     __end_of_eaDogM_WriteString:
  7393                           	opt callstack 0
  7394                           
  7395 ;; *************** function _eaDogM_WriteCommand *****************
  7396 ;; Defined at:
  7397 ;;		line 143 in file "eadog.c"
  7398 ;; Parameters:    Size  Location     Type
  7399 ;;  cmd             1  [STACK] unsigned char 
  7400 ;; Auto vars:     Size  Location     Type
  7401 ;;		None
  7402 ;; Return value:  Size  Location     Type
  7403 ;;                  1  [STACK] void 
  7404 ;; Registers used:
  7405 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  7406 ;; Tracked objects:
  7407 ;;		On entry : 3F/3D
  7408 ;;		On exit  : 3F/0
  7409 ;;		Unchanged: 0/0
  7410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7415 ;;Total ram usage:        0 bytes
  7416 ;; Hardware stack levels used:    1
  7417 ;; Hardware stack levels required when called:   13
  7418 ;; This function calls:
  7419 ;;		_send_lcd_cmd_dma
  7420 ;; This function is called by:
  7421 ;;		_main
  7422 ;; This function uses a reentrant model
  7423 ;;
  7424                           
  7425                           	psect	text29
  7426  0060E4                     __ptext29:
  7427                           	opt callstack 0
  7428  0060E4                     _eaDogM_WriteCommand:
  7429                           	opt callstack 17
  7430                           
  7431                           ;eadog.c: 143: void eaDogM_WriteCommand(uint8_t cmd);eadog.c: 144: {;eadog.c: 145:  send
      +                          _lcd_cmd_dma(cmd);
  7432                           ;stkvar	_cmd @ sp[(0)+-1]
  7433                           
  7434                           ; BSR set to: 59
  7435                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7436                           ;incstack = 0
  7437  0060E4  0EFF               	movlw	-1
  7438  0060E6  50E3               	movf	plusw1,w,c
  7439  0060E8  6EE6               	movwf	postinc1,c
  7440  0060EA  EC54  F02B         	call	_send_lcd_cmd_dma	;wreg free
  7441                           
  7442                           ; BSR set to: 0
  7443                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  7444  0060EE  52E5               	movf	postdec1,f,c
  7445  0060F0  0012               	return		;funcret
  7446  0060F2                     __end_of_eaDogM_WriteCommand:
  7447                           	opt callstack 0
  7448                           
  7449 ;; *************** function _send_lcd_cmd_dma *****************
  7450 ;; Defined at:
  7451 ;;		line 187 in file "eadog.c"
  7452 ;; Parameters:    Size  Location     Type
  7453 ;;  strPtr          1  [STACK] unsigned char 
  7454 ;; Auto vars:     Size  Location     Type
  7455 ;;		None
  7456 ;; Return value:  Size  Location     Type
  7457 ;;                  1  [STACK] void 
  7458 ;; Registers used:
  7459 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  7460 ;; Tracked objects:
  7461 ;;		On entry : 0/0
  7462 ;;		On exit  : 3F/0
  7463 ;;		Unchanged: 0/0
  7464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7469 ;;Total ram usage:        0 bytes
  7470 ;; Hardware stack levels used:    1
  7471 ;; Hardware stack levels required when called:   12
  7472 ;; This function calls:
  7473 ;;		_printf
  7474 ;;		_ringBufS_flush
  7475 ;;		_start_lcd
  7476 ;;		_wait_lcd_done
  7477 ;;		_wait_lcd_set
  7478 ;; This function is called by:
  7479 ;;		_eaDogM_WriteCommand
  7480 ;;		_eaDogM_WriteStringAtPos
  7481 ;; This function uses a reentrant model
  7482 ;;
  7483                           
  7484                           	psect	text30
  7485  0056A8                     __ptext30:
  7486                           	opt callstack 0
  7487  0056A8                     _send_lcd_cmd_dma:
  7488                           	opt callstack 17
  7489                           
  7490                           ;eadog.c: 187: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 188: {;eadog.c: 189:  wait
      +                          _lcd_set();
  7491                           
  7492                           ; BSR set to: 0
  7493                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7494                           ;incstack = 0
  7495  0056A8  ECBF  F030         	call	_wait_lcd_set	;wreg free
  7496                           
  7497                           ; BSR set to: 0
  7498                           ;eadog.c: 191:  ringBufS_flush(spi_link.tx1a, 0);
  7499  0056AC  0E00               	movlw	0
  7500  0056AE  6EE6               	movwf	postinc1,c
  7501  0056B0  0060  F34F  FFE6   	movff	_spi_link+6,postinc1
  7502  0056B6  0060  F353  FFE6   	movff	_spi_link+7,postinc1
  7503  0056BC  EC6F  F029         	call	_ringBufS_flush	;wreg free
  7504  0056C0  92BC               	bcf	16316,1,c	;volatile
  7505  0056C2  94BC               	bcf	16316,2,c	;volatile
  7506                           
  7507                           ;eadog.c: 194:  DMA1CON0bits.EN = 0;
  7508  0056C4  013B               	movlb	59	; () banked
  7509  0056C6  9FFC               	bcf	252,7,b	;volatile
  7510                           
  7511                           ; BSR set to: 59
  7512                           ;eadog.c: 195:  DMA1SSZ = 1;
  7513  0056C8  0E00               	movlw	0
  7514  0056CA  6FF8               	movwf	248,b	;volatile
  7515  0056CC  0E01               	movlw	1
  7516  0056CE  6FF7               	movwf	247,b	;volatile
  7517                           
  7518                           ; BSR set to: 59
  7519                           ;eadog.c: 196:  DMA1CON0bits.EN = 1;
  7520  0056D0  8FFC               	bsf	252,7,b	;volatile
  7521                           
  7522                           ; BSR set to: 59
  7523                           ;eadog.c: 197:  printf("%c", strPtr);
  7524                           ;stkvar	_strPtr @ sp[(0)+-1]
  7525  0056D2  0EFF               	movlw	-1
  7526  0056D4  50E3               	movf	plusw1,w,c
  7527  0056D6  6EE6               	movwf	postinc1,c
  7528  0056D8  0E00               	movlw	0
  7529  0056DA  6EE6               	movwf	postinc1,c
  7530  0056DC  0EB3               	movlw	STR_17& (0+255)
  7531  0056DE  6EE6               	movwf	postinc1,c
  7532  0056E0  0E03               	movlw	3
  7533  0056E2  6EE6               	movwf	postinc1,c
  7534  0056E4  EC96  F02A         	call	_printf	;wreg free
  7535                           
  7536                           ; BSR set to: 0
  7537                           ;eadog.c: 198:  start_lcd();
  7538  0056E8  ECC2  F030         	call	_start_lcd	;wreg free
  7539                           
  7540                           ; BSR set to: 59
  7541                           ;eadog.c: 199:  wait_lcd_done();
  7542  0056EC  EC01  F030         	call	_wait_lcd_done	;wreg free
  7543                           
  7544                           ; BSR set to: 0
  7545  0056F0  82BC               	bsf	16316,1,c	;volatile
  7546                           
  7547                           ; BSR set to: 0
  7548                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  7549  0056F2  52E5               	movf	postdec1,f,c
  7550  0056F4  0012               	return		;funcret
  7551  0056F6                     __end_of_send_lcd_cmd_dma:
  7552                           	opt callstack 0
  7553                           
  7554 ;; *************** function _wait_lcd_set *****************
  7555 ;; Defined at:
  7556 ;;		line 114 in file "eadog.c"
  7557 ;; Parameters:    Size  Location     Type
  7558 ;;		None
  7559 ;; Auto vars:     Size  Location     Type
  7560 ;;		None
  7561 ;; Return value:  Size  Location     Type
  7562 ;;                  1  [STACK] void 
  7563 ;; Registers used:
  7564 ;;		None
  7565 ;; Tracked objects:
  7566 ;;		On entry : 0/0
  7567 ;;		On exit  : 3F/0
  7568 ;;		Unchanged: 0/0
  7569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7574 ;;Total ram usage:        0 bytes
  7575 ;; Hardware stack levels used:    1
  7576 ;; Hardware stack levels required when called:    3
  7577 ;; This function calls:
  7578 ;;		Nothing
  7579 ;; This function is called by:
  7580 ;;		_eaDogM_WriteString
  7581 ;;		_send_lcd_cmd_dma
  7582 ;; This function uses a reentrant model
  7583 ;;
  7584                           
  7585                           	psect	text31
  7586  00617E                     __ptext31:
  7587                           	opt callstack 0
  7588  00617E                     _wait_lcd_set:
  7589                           	opt callstack 25
  7590                           
  7591                           ;eadog.c: 116:  spi_link.LCD_DATA = 1;
  7592                           
  7593                           ; BSR set to: 0
  7594                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7595                           ;incstack = 0
  7596  00617E  0100               	movlb	0	; () banked
  7597  006180  87CD               	bsf	_spi_link& (0+255),3,b	;volatile
  7598                           
  7599                           ; BSR set to: 0
  7600                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  7601  006182  0012               	return		;funcret
  7602  006184                     __end_of_wait_lcd_set:
  7603                           	opt callstack 0
  7604                           
  7605 ;; *************** function _wait_lcd_done *****************
  7606 ;; Defined at:
  7607 ;;		line 124 in file "eadog.c"
  7608 ;; Parameters:    Size  Location     Type
  7609 ;;		None
  7610 ;; Auto vars:     Size  Location     Type
  7611 ;;		None
  7612 ;; Return value:  Size  Location     Type
  7613 ;;                  1  [STACK] void 
  7614 ;; Registers used:
  7615 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7616 ;; Tracked objects:
  7617 ;;		On entry : 4/0
  7618 ;;		On exit  : 3F/0
  7619 ;;		Unchanged: 0/0
  7620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7625 ;;Total ram usage:        0 bytes
  7626 ;; Hardware stack levels used:    1
  7627 ;; Hardware stack levels required when called:    4
  7628 ;; This function calls:
  7629 ;;		_wdtdelay
  7630 ;; This function is called by:
  7631 ;;		_main
  7632 ;;		_send_lcd_cmd_dma
  7633 ;; This function uses a reentrant model
  7634 ;;
  7635                           
  7636                           	psect	text32
  7637  006002                     __ptext32:
  7638                           	opt callstack 0
  7639  006002                     _wait_lcd_done:
  7640                           	opt callstack 26
  7641                           
  7642                           ;eadog.c: 126:  while (spi_link.LCD_DATA);
  7643                           
  7644                           ; BSR set to: 0
  7645                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7646                           ;incstack = 0
  7647  006002  0100               	movlb	0	; () banked
  7648  006004  B7CD               	btfsc	_spi_link& (0+255),3,b	;volatile
  7649  006006  D7FD               	goto	_wait_lcd_done
  7650                           
  7651                           ; BSR set to: 0
  7652                           ;eadog.c: 127:  wdtdelay(50);
  7653  006008  0E32               	movlw	50
  7654  00600A  6EE6               	movwf	postinc1,c
  7655  00600C  0E00               	movlw	0
  7656  00600E  6EE6               	movwf	postinc1,c
  7657  006010  0E00               	movlw	0
  7658  006012  6EE6               	movwf	postinc1,c
  7659  006014  0E00               	movlw	0
  7660  006016  6EE6               	movwf	postinc1,c
  7661  006018  EC26  F02B         	call	_wdtdelay	;wreg free
  7662                           
  7663                           ; BSR set to: 0
  7664                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7665  00601C  0012               	return		;funcret
  7666  00601E                     __end_of_wait_lcd_done:
  7667                           	opt callstack 0
  7668                           
  7669 ;; *************** function _wdtdelay *****************
  7670 ;; Defined at:
  7671 ;;		line 21 in file "eadog.c"
  7672 ;; Parameters:    Size  Location     Type
  7673 ;;  delay           4  [STACK] unsigned long 
  7674 ;; Auto vars:     Size  Location     Type
  7675 ;;		None
  7676 ;; Return value:  Size  Location     Type
  7677 ;;                  1  [STACK] void 
  7678 ;; Registers used:
  7679 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7680 ;; Tracked objects:
  7681 ;;		On entry : 0/0
  7682 ;;		On exit  : 3F/0
  7683 ;;		Unchanged: 0/0
  7684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7689 ;;Total ram usage:        0 bytes
  7690 ;; Hardware stack levels used:    1
  7691 ;; Hardware stack levels required when called:    3
  7692 ;; This function calls:
  7693 ;;		Nothing
  7694 ;; This function is called by:
  7695 ;;		_init_display
  7696 ;;		_send_lcd_cmd
  7697 ;;		_send_lcd_cmd_long
  7698 ;;		_wait_lcd_done
  7699 ;; This function uses a reentrant model
  7700 ;;
  7701                           
  7702                           	psect	text33
  7703  00564C                     __ptext33:
  7704                           	opt callstack 0
  7705  00564C                     _wdtdelay:
  7706                           	opt callstack 26
  7707                           
  7708                           ;eadog.c: 21: void wdtdelay(uint32_t delay);eadog.c: 22: {;eadog.c: 23:  static uint32_t
      +                           dcount;;eadog.c: 25:  for (dcount = 0; dcount <= delay; dcount++) {
  7709                           
  7710                           ; BSR set to: 0
  7711                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7712                           ;incstack = 0
  7713  00564C  0100               	movlb	0	; () banked
  7714  00564E  6BEC               	clrf	wdtdelay@dcount& (0+255),b
  7715  005650  6BED               	clrf	(wdtdelay@dcount+1)& (0+255),b
  7716  005652  6BEE               	clrf	(wdtdelay@dcount+2)& (0+255),b
  7717  005654  6BEF               	clrf	(wdtdelay@dcount+3)& (0+255),b
  7718  005656  D009               	goto	l5633
  7719  005658                     l1324:
  7720                           
  7721                           ; BSR set to: 0
  7722                           ;eadog.c: 26:   __nop();
  7723  005658  F000               	nop	
  7724  00565A  0004               	clrwdt		;# 
  7725                           
  7726                           ;eadog.c: 28:  };
  7727  00565C  0E01               	movlw	1
  7728  00565E  0100               	movlb	0	; () banked
  7729  005660  27EC               	addwf	wdtdelay@dcount& (0+255),f,b
  7730  005662  0E00               	movlw	0
  7731  005664  23ED               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  7732  005666  23EE               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  7733  005668  23EF               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  7734  00566A                     l5633:
  7735                           
  7736                           ; BSR set to: 0
  7737                           ;stkvar	_delay @ sp[(0)+-4]
  7738  00566A  0EFC               	movlw	-4
  7739  00566C  006F FF8C  F03B    	movff	plusw1,btemp
  7740  005672  51EC               	movf	wdtdelay@dcount& (0+255),w,b
  7741  005674  5C3B               	subwf	btemp,w,c
  7742  005676  0EFD               	movlw	-3
  7743  005678  006F FF8C  F03B    	movff	plusw1,btemp
  7744  00567E  51ED               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  7745  005680  583B               	subwfb	btemp,w,c
  7746  005682  0EFE               	movlw	-2
  7747  005684  006F FF8C  F03B    	movff	plusw1,btemp
  7748  00568A  51EE               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  7749  00568C  583B               	subwfb	btemp,w,c
  7750  00568E  0EFF               	movlw	-1
  7751  005690  006F FF8C  F03B    	movff	plusw1,btemp
  7752  005696  51EF               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  7753  005698  583B               	subwfb	btemp,w,c
  7754  00569A  B0D8               	btfsc	status,0,c
  7755  00569C  D7DD               	goto	l1324
  7756                           
  7757                           ; BSR set to: 0
  7758                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  7759  00569E  52E5               	movf	postdec1,f,c
  7760  0056A0  52E5               	movf	postdec1,f,c
  7761  0056A2  52E5               	movf	postdec1,f,c
  7762  0056A4  52E5               	movf	postdec1,f,c
  7763  0056A6  0012               	return		;funcret
  7764  0056A8                     __end_of_wdtdelay:
  7765                           	opt callstack 0
  7766                           
  7767 ;; *************** function _start_lcd *****************
  7768 ;; Defined at:
  7769 ;;		line 109 in file "eadog.c"
  7770 ;; Parameters:    Size  Location     Type
  7771 ;;		None
  7772 ;; Auto vars:     Size  Location     Type
  7773 ;;		None
  7774 ;; Return value:  Size  Location     Type
  7775 ;;                  1  [STACK] void 
  7776 ;; Registers used:
  7777 ;;		None
  7778 ;; Tracked objects:
  7779 ;;		On entry : 3F/0
  7780 ;;		On exit  : 3F/3B
  7781 ;;		Unchanged: 0/0
  7782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7787 ;;Total ram usage:        0 bytes
  7788 ;; Hardware stack levels used:    1
  7789 ;; Hardware stack levels required when called:    3
  7790 ;; This function calls:
  7791 ;;		Nothing
  7792 ;; This function is called by:
  7793 ;;		_eaDogM_WriteString
  7794 ;;		_send_lcd_cmd_dma
  7795 ;; This function uses a reentrant model
  7796 ;;
  7797                           
  7798                           	psect	text34
  7799  006184                     __ptext34:
  7800                           	opt callstack 0
  7801  006184                     _start_lcd:
  7802                           	opt callstack 25
  7803                           
  7804                           ;eadog.c: 111:  DMA1CON0bits.DMA1SIRQEN = 1;
  7805                           
  7806                           ; BSR set to: 0
  7807                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7808                           ;incstack = 0
  7809  006184  013B               	movlb	59	; () banked
  7810  006186  8DFC               	bsf	252,6,b	;volatile
  7811                           
  7812                           ; BSR set to: 59
  7813                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  7814  006188  0012               	return		;funcret
  7815  00618A                     __end_of_start_lcd:
  7816                           	opt callstack 0
  7817                           
  7818 ;; *************** function _ringBufS_flush *****************
  7819 ;; Defined at:
  7820 ;;		line 76 in file "ringbufs.c"
  7821 ;; Parameters:    Size  Location     Type
  7822 ;;  _this           2  [STACK] PTR struct ringBufS_t
  7823 ;;		 -> ring_buf1(67), 
  7824 ;;  clearBuffer     1  [STACK] const char 
  7825 ;; Auto vars:     Size  Location     Type
  7826 ;;		None
  7827 ;; Return value:  Size  Location     Type
  7828 ;;                  1  [STACK] void 
  7829 ;; Registers used:
  7830 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7831 ;; Tracked objects:
  7832 ;;		On entry : 3F/0
  7833 ;;		On exit  : 0/0
  7834 ;;		Unchanged: 0/0
  7835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7840 ;;Total ram usage:        0 bytes
  7841 ;; Hardware stack levels used:    1
  7842 ;; Hardware stack levels required when called:    4
  7843 ;; This function calls:
  7844 ;;		_memset
  7845 ;; This function is called by:
  7846 ;;		_eaDogM_WriteString
  7847 ;;		_send_lcd_cmd_dma
  7848 ;; This function uses a reentrant model
  7849 ;;
  7850                           
  7851                           	psect	text35
  7852  0052DE                     __ptext35:
  7853                           	opt callstack 0
  7854  0052DE                     _ringBufS_flush:
  7855                           	opt callstack 24
  7856                           
  7857                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  7858                           ;stkvar	__this @ sp[(0)+-2]
  7859                           
  7860                           ; BSR set to: 59
  7861                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7862                           ;incstack = 0
  7863  0052DE  0EFE               	movlw	-2
  7864  0052E0  006F FF8C  F045    	movff	plusw1,btemp+10
  7865  0052E6  0EFF               	movlw	-1
  7866  0052E8  006F FF8C  F046    	movff	plusw1,btemp+11
  7867  0052EE  0E42               	movlw	66
  7868  0052F0  2445               	addwf	btemp+10,w,c
  7869  0052F2  6ED9               	movwf	fsr2l,c
  7870  0052F4  0E00               	movlw	0
  7871  0052F6  2046               	addwfc	btemp+11,w,c
  7872  0052F8  6EDA               	movwf	fsr2h,c
  7873  0052FA  0E00               	movlw	0
  7874  0052FC  6EDF               	movwf	indf2,c
  7875                           
  7876                           ;ringbufs.c: 79:  _this->head = 0;
  7877                           ;stkvar	__this @ sp[(0)+-2]
  7878  0052FE  0EFE               	movlw	-2
  7879  005300  006F FF8C  F045    	movff	plusw1,btemp+10
  7880  005306  0EFF               	movlw	-1
  7881  005308  006F FF8C  F046    	movff	plusw1,btemp+11
  7882  00530E  0E40               	movlw	64
  7883  005310  2445               	addwf	btemp+10,w,c
  7884  005312  6ED9               	movwf	fsr2l,c
  7885  005314  0E00               	movlw	0
  7886  005316  2046               	addwfc	btemp+11,w,c
  7887  005318  6EDA               	movwf	fsr2h,c
  7888  00531A  0E00               	movlw	0
  7889  00531C  6EDF               	movwf	indf2,c
  7890                           
  7891                           ;ringbufs.c: 80:  _this->tail = 0;
  7892                           ;stkvar	__this @ sp[(0)+-2]
  7893  00531E  0EFE               	movlw	-2
  7894  005320  006F FF8C  F045    	movff	plusw1,btemp+10
  7895  005326  0EFF               	movlw	-1
  7896  005328  006F FF8C  F046    	movff	plusw1,btemp+11
  7897  00532E  0E41               	movlw	65
  7898  005330  2445               	addwf	btemp+10,w,c
  7899  005332  6ED9               	movwf	fsr2l,c
  7900  005334  0E00               	movlw	0
  7901  005336  2046               	addwfc	btemp+11,w,c
  7902  005338  6EDA               	movwf	fsr2h,c
  7903  00533A  0E00               	movlw	0
  7904  00533C  6EDF               	movwf	indf2,c
  7905                           
  7906                           ;ringbufs.c: 81:  if (clearBuffer) {
  7907                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  7908  00533E  0EFD               	movlw	-3
  7909  005340  50E3               	movf	plusw1,w,c
  7910  005342  B4D8               	btfsc	status,2,c
  7911  005344  D011               	goto	l1460
  7912                           
  7913                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  7914  005346  0E40               	movlw	64
  7915  005348  6EE6               	movwf	postinc1,c
  7916  00534A  0E00               	movlw	0
  7917  00534C  6EE6               	movwf	postinc1,c
  7918  00534E  0E00               	movlw	0
  7919  005350  6EE6               	movwf	postinc1,c
  7920  005352  0E00               	movlw	0
  7921  005354  6EE6               	movwf	postinc1,c
  7922                           
  7923                           ;stkvar	__this @ sp[(-4)+-2]
  7924  005356  0EFA               	movlw	-6
  7925  005358  006F FF8F FFE6     	movff	plusw1,postinc1
  7926  00535E  006F FF8F FFE6     	movff	plusw1,postinc1
  7927  005364  EC8E  F019         	call	_memset	;wreg free
  7928  005368                     l1460:
  7929                           
  7930                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  7931  005368  52E5               	movf	postdec1,f,c
  7932  00536A  52E5               	movf	postdec1,f,c
  7933  00536C  52E5               	movf	postdec1,f,c
  7934  00536E  0012               	return		;funcret
  7935  005370                     __end_of_ringBufS_flush:
  7936                           	opt callstack 0
  7937                           
  7938 ;; *************** function _memset *****************
  7939 ;; Defined at:
  7940 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/memset.c"
  7941 ;; Parameters:    Size  Location     Type
  7942 ;;  dest            2  [STACK] PTR void 
  7943 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7944 ;;  c               2  [STACK] int 
  7945 ;;  n               2  [STACK] unsigned int 
  7946 ;; Auto vars:     Size  Location     Type
  7947 ;;  s               2  [STACK] PTR unsigned char 
  7948 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7949 ;;  k               2  [STACK] unsigned int 
  7950 ;; Return value:  Size  Location     Type
  7951 ;;                  2  [STACK] PTR void 
  7952 ;; Registers used:
  7953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7954 ;; Tracked objects:
  7955 ;;		On entry : 0/0
  7956 ;;		On exit  : 0/0
  7957 ;;		Unchanged: 0/0
  7958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7963 ;;Total ram usage:        0 bytes
  7964 ;; Hardware stack levels used:    1
  7965 ;; Hardware stack levels required when called:    3
  7966 ;; This function calls:
  7967 ;;		Nothing
  7968 ;; This function is called by:
  7969 ;;		_ringBufS_init
  7970 ;;		_ringBufS_flush
  7971 ;; This function uses a reentrant model
  7972 ;;
  7973                           
  7974                           	psect	text36
  7975  00331C                     __ptext36:
  7976                           	opt callstack 0
  7977  00331C                     _memset:
  7978                           	opt callstack 0
  7979                           
  7980                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7981  00331C  52E6               	movf	postinc1,f,c
  7982  00331E  52E6               	movf	postinc1,f,c
  7983  003320  52E6               	movf	postinc1,f,c
  7984  003322  52E6               	movf	postinc1,f,c
  7985                           
  7986                           ;stkvar	_dest @ sp[(-4)+-2]
  7987                           
  7988                           ;incstack = 0
  7989  003324  0EFA               	movlw	-6
  7990  003326  006F FF8C  F045    	movff	plusw1,btemp+10
  7991  00332C  0EFB               	movlw	-5
  7992  00332E  006F FF8C  F046    	movff	plusw1,btemp+11
  7993                           
  7994                           ;stkvar	_s @ sp[(-4)+0]
  7995  003334  0EFD               	movlw	-3
  7996  003336  0060  F11B  FFE3   	movff	btemp+11,plusw1
  7997  00333C  0EFC               	movlw	-4
  7998  00333E  0060  F117  FFE3   	movff	btemp+10,plusw1
  7999                           
  8000                           ;stkvar	_n @ sp[(-4)+-6]
  8001  003344  0EF6               	movlw	-10
  8002  003346  006F FF8C  F03B    	movff	plusw1,btemp
  8003  00334C  0EF7               	movlw	-9
  8004  00334E  50E3               	movf	plusw1,w,c
  8005  003350  103B               	iorwf	btemp,w,c
  8006  003352  B4D8               	btfsc	status,2,c
  8007  003354  D154               	goto	u4840
  8008                           
  8009                           ;stkvar	_c @ sp[(-4)+-4]
  8010                           ;stkvar	_s @ sp[(-4)+0]
  8011  003356  0EFC               	movlw	-4
  8012  003358  006F FF8F FFD9     	movff	plusw1,fsr2l
  8013  00335E  0EFD               	movlw	-3
  8014  003360  006F FF8F FFDA     	movff	plusw1,fsr2h
  8015  003366  0EF8               	movlw	-8
  8016  003368  006F FF8F FFDF     	movff	plusw1,indf2
  8017                           
  8018                           ;stkvar	_c @ sp[(-4)+-4]
  8019                           ;stkvar	_n @ sp[(-4)+-6]
  8020                           ;stkvar	_s @ sp[(-4)+0]
  8021  00336E  0EFC               	movlw	-4
  8022  003370  006F FF8C  F045    	movff	plusw1,btemp+10
  8023  003376  0EFD               	movlw	-3
  8024  003378  006F FF8C  F046    	movff	plusw1,btemp+11
  8025  00337E  0EF6               	movlw	-10
  8026  003380  50E3               	movf	plusw1,w,c
  8027  003382  2645               	addwf	btemp+10,f,c
  8028  003384  0EF7               	movlw	-9
  8029  003386  50E3               	movf	plusw1,w,c
  8030  003388  2246               	addwfc	btemp+11,f,c
  8031  00338A  0EFF               	movlw	255
  8032  00338C  2445               	addwf	btemp+10,w,c
  8033  00338E  6ED9               	movwf	fsr2l,c
  8034  003390  0EFF               	movlw	255
  8035  003392  2046               	addwfc	btemp+11,w,c
  8036  003394  6EDA               	movwf	fsr2h,c
  8037  003396  0EF8               	movlw	-8
  8038  003398  006F FF8F FFDF     	movff	plusw1,indf2
  8039                           
  8040                           ;stkvar	_n @ sp[(-4)+-6]
  8041  00339E  0EF7               	movlw	-9
  8042  0033A0  50E3               	movf	plusw1,w,c
  8043  0033A2  E108               	bnz	l7827
  8044  0033A4  0EF6               	movlw	-10
  8045  0033A6  006F FF8C  F03B    	movff	plusw1,btemp
  8046  0033AC  0E03               	movlw	3
  8047  0033AE  5E3B               	subwf	btemp,f,c
  8048  0033B0  A0D8               	btfss	status,0,c
  8049  0033B2  D125               	goto	u4840
  8050  0033B4                     l7827:
  8051                           
  8052                           ;stkvar	_c @ sp[(-4)+-4]
  8053                           ;stkvar	_s @ sp[(-4)+0]
  8054  0033B4  0EFC               	movlw	-4
  8055  0033B6  006F FF8C  F045    	movff	plusw1,btemp+10
  8056  0033BC  0EFD               	movlw	-3
  8057  0033BE  006F FF8C  F046    	movff	plusw1,btemp+11
  8058  0033C4  0E01               	movlw	1
  8059  0033C6  2445               	addwf	btemp+10,w,c
  8060  0033C8  6ED9               	movwf	fsr2l,c
  8061  0033CA  0E00               	movlw	0
  8062  0033CC  2046               	addwfc	btemp+11,w,c
  8063  0033CE  6EDA               	movwf	fsr2h,c
  8064  0033D0  0EF8               	movlw	-8
  8065  0033D2  006F FF8F FFDF     	movff	plusw1,indf2
  8066                           
  8067                           ;stkvar	_c @ sp[(-4)+-4]
  8068                           ;stkvar	_s @ sp[(-4)+0]
  8069  0033D8  0EFC               	movlw	-4
  8070  0033DA  006F FF8C  F045    	movff	plusw1,btemp+10
  8071  0033E0  0EFD               	movlw	-3
  8072  0033E2  006F FF8C  F046    	movff	plusw1,btemp+11
  8073  0033E8  0E02               	movlw	2
  8074  0033EA  2445               	addwf	btemp+10,w,c
  8075  0033EC  6ED9               	movwf	fsr2l,c
  8076  0033EE  0E00               	movlw	0
  8077  0033F0  2046               	addwfc	btemp+11,w,c
  8078  0033F2  6EDA               	movwf	fsr2h,c
  8079  0033F4  0EF8               	movlw	-8
  8080  0033F6  006F FF8F FFDF     	movff	plusw1,indf2
  8081                           
  8082                           ;stkvar	_c @ sp[(-4)+-4]
  8083                           ;stkvar	_n @ sp[(-4)+-6]
  8084                           ;stkvar	_s @ sp[(-4)+0]
  8085  0033FC  0EFC               	movlw	-4
  8086  0033FE  006F FF8C  F045    	movff	plusw1,btemp+10
  8087  003404  0EFD               	movlw	-3
  8088  003406  006F FF8C  F046    	movff	plusw1,btemp+11
  8089  00340C  0EF6               	movlw	-10
  8090  00340E  50E3               	movf	plusw1,w,c
  8091  003410  2645               	addwf	btemp+10,f,c
  8092  003412  0EF7               	movlw	-9
  8093  003414  50E3               	movf	plusw1,w,c
  8094  003416  2246               	addwfc	btemp+11,f,c
  8095  003418  0EFE               	movlw	254
  8096  00341A  2445               	addwf	btemp+10,w,c
  8097  00341C  6ED9               	movwf	fsr2l,c
  8098  00341E  0EFF               	movlw	255
  8099  003420  2046               	addwfc	btemp+11,w,c
  8100  003422  6EDA               	movwf	fsr2h,c
  8101  003424  0EF8               	movlw	-8
  8102  003426  006F FF8F FFDF     	movff	plusw1,indf2
  8103                           
  8104                           ;stkvar	_c @ sp[(-4)+-4]
  8105                           ;stkvar	_n @ sp[(-4)+-6]
  8106                           ;stkvar	_s @ sp[(-4)+0]
  8107  00342C  0EFC               	movlw	-4
  8108  00342E  006F FF8C  F045    	movff	plusw1,btemp+10
  8109  003434  0EFD               	movlw	-3
  8110  003436  006F FF8C  F046    	movff	plusw1,btemp+11
  8111  00343C  0EF6               	movlw	-10
  8112  00343E  50E3               	movf	plusw1,w,c
  8113  003440  2645               	addwf	btemp+10,f,c
  8114  003442  0EF7               	movlw	-9
  8115  003444  50E3               	movf	plusw1,w,c
  8116  003446  2246               	addwfc	btemp+11,f,c
  8117  003448  0EFD               	movlw	253
  8118  00344A  2445               	addwf	btemp+10,w,c
  8119  00344C  6ED9               	movwf	fsr2l,c
  8120  00344E  0EFF               	movlw	255
  8121  003450  2046               	addwfc	btemp+11,w,c
  8122  003452  6EDA               	movwf	fsr2h,c
  8123  003454  0EF8               	movlw	-8
  8124  003456  006F FF8F FFDF     	movff	plusw1,indf2
  8125                           
  8126                           ;stkvar	_n @ sp[(-4)+-6]
  8127  00345C  0EF7               	movlw	-9
  8128  00345E  50E3               	movf	plusw1,w,c
  8129  003460  E108               	bnz	l7833
  8130  003462  0EF6               	movlw	-10
  8131  003464  006F FF8C  F03B    	movff	plusw1,btemp
  8132  00346A  0E07               	movlw	7
  8133  00346C  5E3B               	subwf	btemp,f,c
  8134  00346E  A0D8               	btfss	status,0,c
  8135  003470  D0C6               	goto	u4840
  8136  003472                     l7833:
  8137                           
  8138                           ;stkvar	_c @ sp[(-4)+-4]
  8139                           ;stkvar	_s @ sp[(-4)+0]
  8140  003472  0EFC               	movlw	-4
  8141  003474  006F FF8C  F045    	movff	plusw1,btemp+10
  8142  00347A  0EFD               	movlw	-3
  8143  00347C  006F FF8C  F046    	movff	plusw1,btemp+11
  8144  003482  0E03               	movlw	3
  8145  003484  2445               	addwf	btemp+10,w,c
  8146  003486  6ED9               	movwf	fsr2l,c
  8147  003488  0E00               	movlw	0
  8148  00348A  2046               	addwfc	btemp+11,w,c
  8149  00348C  6EDA               	movwf	fsr2h,c
  8150  00348E  0EF8               	movlw	-8
  8151  003490  006F FF8F FFDF     	movff	plusw1,indf2
  8152                           
  8153                           ;stkvar	_c @ sp[(-4)+-4]
  8154                           ;stkvar	_n @ sp[(-4)+-6]
  8155                           ;stkvar	_s @ sp[(-4)+0]
  8156  003496  0EFC               	movlw	-4
  8157  003498  006F FF8C  F045    	movff	plusw1,btemp+10
  8158  00349E  0EFD               	movlw	-3
  8159  0034A0  006F FF8C  F046    	movff	plusw1,btemp+11
  8160  0034A6  0EF6               	movlw	-10
  8161  0034A8  50E3               	movf	plusw1,w,c
  8162  0034AA  2645               	addwf	btemp+10,f,c
  8163  0034AC  0EF7               	movlw	-9
  8164  0034AE  50E3               	movf	plusw1,w,c
  8165  0034B0  2246               	addwfc	btemp+11,f,c
  8166  0034B2  0EFC               	movlw	252
  8167  0034B4  2445               	addwf	btemp+10,w,c
  8168  0034B6  6ED9               	movwf	fsr2l,c
  8169  0034B8  0EFF               	movlw	255
  8170  0034BA  2046               	addwfc	btemp+11,w,c
  8171  0034BC  6EDA               	movwf	fsr2h,c
  8172  0034BE  0EF8               	movlw	-8
  8173  0034C0  006F FF8F FFDF     	movff	plusw1,indf2
  8174                           
  8175                           ;stkvar	_n @ sp[(-4)+-6]
  8176  0034C6  0EF7               	movlw	-9
  8177  0034C8  50E3               	movf	plusw1,w,c
  8178  0034CA  E108               	bnz	l7839
  8179  0034CC  0EF6               	movlw	-10
  8180  0034CE  006F FF8C  F03B    	movff	plusw1,btemp
  8181  0034D4  0E09               	movlw	9
  8182  0034D6  5E3B               	subwf	btemp,f,c
  8183  0034D8  A0D8               	btfss	status,0,c
  8184  0034DA  D091               	goto	u4840
  8185  0034DC                     l7839:
  8186                           
  8187                           ;stkvar	_s @ sp[(-4)+0]
  8188  0034DC  0EFC               	movlw	-4
  8189  0034DE  006F FF8C  F045    	movff	plusw1,btemp+10
  8190  0034E4  1E45               	comf	btemp+10,f,c
  8191  0034E6  0EFD               	movlw	-3
  8192  0034E8  006F FF8C  F046    	movff	plusw1,btemp+11
  8193  0034EE  1E46               	comf	btemp+11,f,c
  8194  0034F0  2A45               	incf	btemp+10,f,c
  8195  0034F2  B4D8               	btfsc	status,2,c
  8196  0034F4  2A46               	incf	btemp+11,f,c
  8197  0034F6  0E03               	movlw	3
  8198  0034F8  1645               	andwf	btemp+10,f,c
  8199  0034FA  0E00               	movlw	0
  8200  0034FC  1646               	andwf	btemp+11,f,c
  8201                           
  8202                           ;stkvar	_k @ sp[(-4)+2]
  8203  0034FE  0EFE               	movlw	-2
  8204  003500  0060  F117  FFE3   	movff	btemp+10,plusw1
  8205  003506  0EFF               	movlw	-1
  8206  003508  0060  F11B  FFE3   	movff	btemp+11,plusw1
  8207                           
  8208                           ;stkvar	_k @ sp[(-4)+2]
  8209                           ;stkvar	_s @ sp[(-4)+0]
  8210  00350E  0EFC               	movlw	-4
  8211  003510  50E3               	movf	plusw1,w,c
  8212  003512  6E3B               	movwf	btemp,c
  8213  003514  0EFE               	movlw	-2
  8214  003516  50E3               	movf	plusw1,w,c
  8215  003518  263B               	addwf	btemp,f,c
  8216  00351A  0EFC               	movlw	-4
  8217  00351C  0060  F0EF  FFE3   	movff	btemp,plusw1
  8218  003522  0EFD               	movlw	-3
  8219  003524  50E3               	movf	plusw1,w,c
  8220  003526  6E3B               	movwf	btemp,c
  8221  003528  0EFF               	movlw	-1
  8222  00352A  50E3               	movf	plusw1,w,c
  8223  00352C  223B               	addwfc	btemp,f,c
  8224  00352E  0EFD               	movlw	-3
  8225  003530  0060  F0EF  FFE3   	movff	btemp,plusw1
  8226                           
  8227                           ;stkvar	_k @ sp[(-4)+2]
  8228                           ;stkvar	_n @ sp[(-4)+-6]
  8229  003536  0EF6               	movlw	-10
  8230  003538  50E3               	movf	plusw1,w,c
  8231  00353A  6E3B               	movwf	btemp,c
  8232  00353C  0EFE               	movlw	-2
  8233  00353E  50E3               	movf	plusw1,w,c
  8234  003540  5E3B               	subwf	btemp,f,c
  8235  003542  0EF6               	movlw	-10
  8236  003544  0060  F0EF  FFE3   	movff	btemp,plusw1
  8237  00354A  0EF7               	movlw	-9
  8238  00354C  50E3               	movf	plusw1,w,c
  8239  00354E  6E3B               	movwf	btemp,c
  8240  003550  0EFF               	movlw	-1
  8241  003552  50E3               	movf	plusw1,w,c
  8242  003554  5A3B               	subwfb	btemp,f,c
  8243  003556  0EF7               	movlw	-9
  8244  003558  0060  F0EF  FFE3   	movff	btemp,plusw1
  8245  00355E  0EFC               	movlw	252
  8246  003560  6E45               	movwf	btemp+10,c
  8247  003562  0EFF               	movlw	255
  8248  003564  6E46               	movwf	btemp+11,c
  8249                           
  8250                           ;stkvar	_n @ sp[(-4)+-6]
  8251  003566  0EF6               	movlw	-10
  8252  003568  006F FF8C  F03B    	movff	plusw1,btemp
  8253  00356E  5045               	movf	btemp+10,w,c
  8254  003570  163B               	andwf	btemp,f,c
  8255  003572  0EF6               	movlw	-10
  8256  003574  0060  F0EF  FFE3   	movff	btemp,plusw1
  8257  00357A  0EF7               	movlw	-9
  8258  00357C  006F FF8C  F03B    	movff	plusw1,btemp
  8259  003582  5046               	movf	btemp+11,w,c
  8260  003584  163B               	andwf	btemp,f,c
  8261  003586  0EF7               	movlw	-9
  8262  003588  D02E               	goto	L22
  8263  00358A                     l7847:
  8264                           
  8265                           ;stkvar	_c @ sp[(-4)+-4]
  8266                           ;stkvar	_s @ sp[(-4)+0]
  8267  00358A  0EFC               	movlw	-4
  8268  00358C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8269  003592  0EFD               	movlw	-3
  8270  003594  006F FF8F FFDA     	movff	plusw1,fsr2h
  8271  00359A  0EF8               	movlw	-8
  8272  00359C  006F FF8F FFDF     	movff	plusw1,indf2
  8273                           
  8274                           ;stkvar	_n @ sp[(-4)+-6]
  8275  0035A2  0EF6               	movlw	-10
  8276  0035A4  006F FF8C  F03B    	movff	plusw1,btemp
  8277  0035AA  0E01               	movlw	1
  8278  0035AC  5E3B               	subwf	btemp,f,c
  8279  0035AE  0EF6               	movlw	-10
  8280  0035B0  0060  F0EF  FFE3   	movff	btemp,plusw1
  8281  0035B6  0EF7               	movlw	-9
  8282  0035B8  006F FF8C  F03B    	movff	plusw1,btemp
  8283  0035BE  0E00               	movlw	0
  8284  0035C0  5A3B               	subwfb	btemp,f,c
  8285  0035C2  0EF7               	movlw	-9
  8286  0035C4  0060  F0EF  FFE3   	movff	btemp,plusw1
  8287                           
  8288                           ;stkvar	_s @ sp[(-4)+0]
  8289  0035CA  0EFC               	movlw	-4
  8290  0035CC  50E3               	movf	plusw1,w,c
  8291  0035CE  0F01               	addlw	1
  8292  0035D0  6E3B               	movwf	btemp,c
  8293  0035D2  0EFC               	movlw	-4
  8294  0035D4  0060  F0EF  FFE3   	movff	btemp,plusw1
  8295  0035DA  6A3B               	clrf	btemp,c
  8296  0035DC  0EFD               	movlw	-3
  8297  0035DE  50E3               	movf	plusw1,w,c
  8298  0035E0  203B               	addwfc	btemp,w,c
  8299  0035E2  6E3B               	movwf	btemp,c
  8300  0035E4  0EFD               	movlw	-3
  8301  0035E6                     L22:
  8302  0035E6  0060  F0EF  FFE3   	movff	btemp,plusw1
  8303                           
  8304                           ;stkvar	_n @ sp[(-4)+-6]
  8305  0035EC  0EF6               	movlw	-10
  8306  0035EE  006F FF8C  F03B    	movff	plusw1,btemp
  8307  0035F4  0EF7               	movlw	-9
  8308  0035F6  50E3               	movf	plusw1,w,c
  8309  0035F8  103B               	iorwf	btemp,w,c
  8310  0035FA  A4D8               	btfss	status,2,c
  8311  0035FC  D7C6               	goto	l7847
  8312  0035FE                     u4840:
  8313                           
  8314                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  8315  0035FE  0EF6               	movlw	246
  8316  003600  26E1               	addwf	fsr1l,f,c
  8317  003602  0EFF               	movlw	255
  8318  003604  22E2               	addwfc	fsr1h,f,c
  8319  003606  0012               	return		;funcret
  8320  003608                     __end_of_memset:
  8321                           	opt callstack 0
  8322                           
  8323 ;; *************** function _printf *****************
  8324 ;; Defined at:
  8325 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  8326 ;; Parameters:    Size  Location     Type
  8327 ;;  fmt             1  [STACK] PTR const unsigned char 
  8328 ;;		 -> STR_18(3), STR_17(3), STR_16(3), 
  8329 ;; Auto vars:     Size  Location     Type
  8330 ;;  ap              2  [STACK] PTR void [1]
  8331 ;;		 -> ?_printf(2), ?_sprintf(2), 
  8332 ;;  ret             2    0        int 
  8333 ;; Return value:  Size  Location     Type
  8334 ;;                  2  [STACK] int 
  8335 ;; Registers used:
  8336 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8337 ;; Tracked objects:
  8338 ;;		On entry : 3F/3B
  8339 ;;		On exit  : 3F/0
  8340 ;;		Unchanged: 0/0
  8341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8346 ;;Total ram usage:        0 bytes
  8347 ;; Hardware stack levels used:    1
  8348 ;; Hardware stack levels required when called:   11
  8349 ;; This function calls:
  8350 ;;		_vfprintf
  8351 ;; This function is called by:
  8352 ;;		_eaDogM_WriteString
  8353 ;;		_send_lcd_cmd_dma
  8354 ;; This function uses a reentrant model
  8355 ;;
  8356                           
  8357                           	psect	text37
  8358  00552C                     __ptext37:
  8359                           	opt callstack 0
  8360  00552C                     _printf:
  8361                           	opt callstack 0
  8362                           
  8363                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8364  00552C  52E6               	movf	postinc1,f,c
  8365  00552E  52E6               	movf	postinc1,f,c
  8366                           
  8367                           ;stkvar	?_printf @ sp[(-2)+-3]
  8368                           
  8369                           ;incstack = 0
  8370  005530  0EFB               	movlw	251
  8371  005532  24E1               	addwf	fsr1l,w,c
  8372  005534  6E45               	movwf	btemp+10,c
  8373  005536  0EFF               	movlw	255
  8374  005538  20E2               	addwfc	fsr1h,w,c
  8375  00553A  6E46               	movwf	btemp+11,c
  8376  00553C  0E01               	movlw	1
  8377  00553E  2645               	addwf	btemp+10,f,c
  8378  005540  0E00               	movlw	0
  8379  005542  2246               	addwfc	btemp+11,f,c
  8380                           
  8381                           ;stkvar	_ap @ sp[(-2)+0]
  8382  005544  0EFF               	movlw	-1
  8383  005546  0060  F11B  FFE3   	movff	btemp+11,plusw1
  8384  00554C  0EFE               	movlw	-2
  8385  00554E  0060  F117  FFE3   	movff	btemp+10,plusw1
  8386                           
  8387                           ;stkvar	_ap @ sp[(-2)+0]
  8388  005554  0EFE               	movlw	254
  8389  005556  24E1               	addwf	fsr1l,w,c
  8390  005558  6E3B               	movwf	btemp,c
  8391  00555A  0EFF               	movlw	255
  8392  00555C  20E2               	addwfc	fsr1h,w,c
  8393  00555E  6E3C               	movwf	btemp+1,c
  8394  005560  0060  F0EF  FFE6   	movff	btemp,postinc1
  8395  005566  0060  F0F3  FFE6   	movff	btemp+1,postinc1
  8396                           
  8397                           ;stkvar	_fmt @ sp[(-4)+-2]
  8398  00556C  0EFA               	movlw	-6
  8399  00556E  50E3               	movf	plusw1,w,c
  8400  005570  6EE6               	movwf	postinc1,c
  8401  005572  0E00               	movlw	0
  8402  005574  6EE6               	movwf	postinc1,c
  8403  005576  0E00               	movlw	0
  8404  005578  6EE6               	movwf	postinc1,c
  8405  00557A  ECD7  F028         	call	_vfprintf	;wreg free
  8406                           
  8407                           ; BSR set to: 0
  8408                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsiz
      +                          e = 1, vargsize = 0
  8409  00557E  52E5               	movf	postdec1,f,c
  8410  005580  52E5               	movf	postdec1,f,c
  8411  005582  52E5               	movf	postdec1,f,c
  8412  005584  50E7               	movf	indf1,w,c
  8413  005586  5EE1               	subwf	fsr1l,f,c
  8414  005588  0E00               	movlw	0
  8415  00558A  5AE2               	subwfb	fsr1h,f,c
  8416  00558C  0012               	return		;funcret
  8417  00558E                     __end_of_printf:
  8418                           	opt callstack 0
  8419                           
  8420 ;; *************** function _vfprintf *****************
  8421 ;; Defined at:
  8422 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8423 ;; Parameters:    Size  Location     Type
  8424 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8425 ;;		 -> f(5), NULL(0), 
  8426 ;;  fmt             1  [STACK] PTR const unsigned char 
  8427 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(21), 
  8428 ;;		 -> STR_14(19), STR_13(6), STR_12(17), STR_11(19), 
  8429 ;;		 -> STR_10(19), STR_9(20), STR_8(6), STR_7(6), 
  8430 ;;		 -> STR_6(14), STR_5(19), STR_4(15), STR_2(12), 
  8431 ;;		 -> STR_1(17), 
  8432 ;;  ap              2  [STACK] PTR PTR void 
  8433 ;;		 -> ap(2), ap(2), 
  8434 ;; Auto vars:     Size  Location     Type
  8435 ;;  cfmt            1  [STACK] PTR unsigned char 
  8436 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(21), 
  8437 ;;		 -> STR_14(19), STR_13(6), STR_12(17), STR_11(19), 
  8438 ;;		 -> STR_10(19), STR_9(20), STR_8(6), STR_7(6), 
  8439 ;;		 -> STR_6(14), STR_5(19), STR_4(15), STR_2(12), 
  8440 ;;		 -> STR_1(17), 
  8441 ;; Return value:  Size  Location     Type
  8442 ;;                  2  [STACK] int 
  8443 ;; Registers used:
  8444 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8445 ;; Tracked objects:
  8446 ;;		On entry : 0/0
  8447 ;;		On exit  : 3F/0
  8448 ;;		Unchanged: 0/0
  8449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8454 ;;Total ram usage:        0 bytes
  8455 ;; Hardware stack levels used:    1
  8456 ;; Hardware stack levels required when called:   10
  8457 ;; This function calls:
  8458 ;;		_vfpfcnvrt
  8459 ;; This function is called by:
  8460 ;;		_sprintf
  8461 ;;		_printf
  8462 ;; This function uses a reentrant model
  8463 ;;
  8464                           
  8465                           	psect	text38
  8466  0051AE                     __ptext38:
  8467                           	opt callstack 0
  8468  0051AE                     _vfprintf:
  8469                           	opt callstack 0
  8470                           
  8471                           ; BSR set to: 0
  8472                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8473  0051AE  52E6               	movf	postinc1,f,c
  8474                           
  8475                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  8476                           ;stkvar	_fmt @ sp[(-1)+-3]
  8477                           
  8478                           ;incstack = 0
  8479  0051B0  0EFC               	movlw	-4
  8480  0051B2  006F FF8C  F046    	movff	plusw1,btemp+11
  8481                           
  8482                           ;stkvar	_cfmt @ sp[(-1)+0]
  8483  0051B8  0EFF               	movlw	-1
  8484  0051BA  0060  F11B  FFE3   	movff	btemp+11,plusw1
  8485                           
  8486                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  8487  0051C0  0100               	movlb	0	; () banked
  8488  0051C2  6BF6               	clrf	_nout& (0+255),b
  8489  0051C4  6BF7               	clrf	(_nout+1)& (0+255),b
  8490                           
  8491                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8492  0051C6  D021               	goto	l7861
  8493  0051C8                     l7859:
  8494                           
  8495                           ; BSR set to: 0
  8496                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  8497                           ;stkvar	_ap @ sp[(-1)+-5]
  8498  0051C8  0EFA               	movlw	-6
  8499  0051CA  006F FF8F FFE6     	movff	plusw1,postinc1
  8500  0051D0  006F FF8F FFE6     	movff	plusw1,postinc1
  8501                           
  8502                           ;stkvar	_cfmt @ sp[(-3)+0]
  8503  0051D6  0EFD               	movlw	253
  8504  0051D8  24E1               	addwf	fsr1l,w,c
  8505  0051DA  6E3B               	movwf	btemp,c
  8506  0051DC  0EFF               	movlw	255
  8507  0051DE  20E2               	addwfc	fsr1h,w,c
  8508  0051E0  6E3C               	movwf	btemp+1,c
  8509  0051E2  0060  F0EF  FFE6   	movff	btemp,postinc1
  8510  0051E8  0060  F0F3  FFE6   	movff	btemp+1,postinc1
  8511                           
  8512                           ;stkvar	_fp @ sp[(-5)+-2]
  8513  0051EE  0EF9               	movlw	-7
  8514  0051F0  006F FF8F FFE6     	movff	plusw1,postinc1
  8515  0051F6  006F FF8F FFE6     	movff	plusw1,postinc1
  8516  0051FC  ECC0  F012         	call	_vfpfcnvrt	;wreg free
  8517  005200  503B               	movf	btemp,w,c
  8518  005202  0100               	movlb	0	; () banked
  8519  005204  27F6               	addwf	_nout& (0+255),f,b
  8520  005206  503C               	movf	btemp+1,w,c
  8521  005208  23F7               	addwfc	(_nout+1)& (0+255),f,b
  8522  00520A                     l7861:
  8523                           
  8524                           ; BSR set to: 0
  8525                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8526                           ;stkvar	_cfmt @ sp[(-1)+0]
  8527  00520A  50E1               	movf	fsr1l,w,c
  8528  00520C  0FFF               	addlw	-1
  8529  00520E  6ED9               	movwf	fsr2l,c
  8530  005210  50E2               	movf	fsr1h,w,c
  8531  005212  6EDA               	movwf	fsr2h,c
  8532  005214  0EFF               	movlw	255
  8533  005216  22DA               	addwfc	fsr2h,f,c
  8534  005218  006F FF7F FFF6     	movff	indf2,tblptrl
  8535  00521E                     	if	1	;There is more than 1 active tblptr byte
  8536  00521E  0E20               	movlw	high __smallconst
  8537  005220  6EF7               	movwf	tblptrh,c
  8538  005222                     	endif
  8539  005222                     	if	0	;tblptru may be non-zero
  8540  005222                     	endif
  8541  005222                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8542  005222  0E00               	movlw	low (__smallconst shr (0+16))
  8543  005224  6EF8               	movwf	tblptru,c
  8544  005226                     	endif
  8545  005226  0008               	tblrd		*
  8546  005228  50F5               	movf	tablat,w,c
  8547  00522A  0900               	iorlw	0
  8548  00522C  A4D8               	btfss	status,2,c
  8549  00522E  D7CC               	goto	l7859
  8550                           
  8551                           ; BSR set to: 0
  8552                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  8553  005230  0060  F3D8  F03B   	movff	_nout,btemp
  8554  005236  0060  F3DC  F03C   	movff	_nout+1,btemp+1
  8555                           
  8556                           ; BSR set to: 0
  8557                           ; _vfprintf: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  8558  00523C  0EFA               	movlw	250
  8559  00523E  26E1               	addwf	fsr1l,f,c
  8560  005240  0EFF               	movlw	255
  8561  005242  22E2               	addwfc	fsr1h,f,c
  8562  005244  0012               	return		;funcret
  8563  005246                     __end_of_vfprintf:
  8564                           	opt callstack 0
  8565                           
  8566 ;; *************** function _vfpfcnvrt *****************
  8567 ;; Defined at:
  8568 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8569 ;; Parameters:    Size  Location     Type
  8570 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8571 ;;		 -> f(5), NULL(0), 
  8572 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  8573 ;;		 -> cfmt(1), 
  8574 ;;  ap              2  [STACK] PTR PTR void 
  8575 ;;		 -> ap(2), ap(2), 
  8576 ;; Auto vars:     Size  Location     Type
  8577 ;;  ll              8  [STACK] long long 
  8578 ;;  llu             8    0        unsigned long long 
  8579 ;;  f               4    0        unsigned long long 
  8580 ;;  vp              3    0        PTR void 
  8581 ;;  ct              3    0        unsigned char [3]
  8582 ;;  cp              2  [STACK] PTR unsigned char 
  8583 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(6), V(89), 
  8584 ;;  i               2    0        int 
  8585 ;;  done            2    0        int 
  8586 ;;  c               1  [STACK] unsigned char 
  8587 ;; Return value:  Size  Location     Type
  8588 ;;                  2  [STACK] int 
  8589 ;; Registers used:
  8590 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8591 ;; Tracked objects:
  8592 ;;		On entry : 0/0
  8593 ;;		On exit  : 0/0
  8594 ;;		Unchanged: 0/0
  8595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8600 ;;Total ram usage:        0 bytes
  8601 ;; Hardware stack levels used:    1
  8602 ;; Hardware stack levels required when called:    9
  8603 ;; This function calls:
  8604 ;;		_ctoa
  8605 ;;		_dtoa
  8606 ;;		_fputc
  8607 ;;		_stoa
  8608 ;;		_strncmp
  8609 ;; This function is called by:
  8610 ;;		_vfprintf
  8611 ;; This function uses a reentrant model
  8612 ;;
  8613                           
  8614                           	psect	text39
  8615  002580                     __ptext39:
  8616                           	opt callstack 0
  8617  002580                     _vfpfcnvrt:
  8618                           	opt callstack 0
  8619                           
  8620                           ; BSR set to: 0
  8621                           ; autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8622  002580  0E0B               	movlw	11
  8623  002582  26E1               	addwf	fsr1l,f,c
  8624  002584  0E00               	movlw	0
  8625  002586  22E2               	addwfc	fsr1h,f,c
  8626                           
  8627                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  8628                           ;stkvar	_fmt @ sp[(-11)+-4]
  8629                           
  8630                           ;incstack = 0
  8631  002588  0EF1               	movlw	-15
  8632  00258A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8633  002590  0EF2               	movlw	-14
  8634  002592  006F FF8F FFDA     	movff	plusw1,fsr2h
  8635  002598  006F FF7F FFF6     	movff	indf2,tblptrl
  8636  00259E                     	if	1	;There is more than 1 active tblptr byte
  8637  00259E  0E20               	movlw	high __smallconst
  8638  0025A0  6EF7               	movwf	tblptrh,c
  8639  0025A2                     	endif
  8640  0025A2                     	if	0	;tblptru may be non-zero
  8641  0025A2                     	endif
  8642  0025A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8643  0025A2  0E00               	movlw	low (__smallconst shr (0+16))
  8644  0025A4  6EF8               	movwf	tblptru,c
  8645  0025A6                     	endif
  8646  0025A6  0008               	tblrd		*
  8647  0025A8  50F5               	movf	tablat,w,c
  8648  0025AA  0A25               	xorlw	37
  8649  0025AC  A4D8               	btfss	status,2,c
  8650  0025AE  D213               	goto	l7805
  8651                           
  8652                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  8653                           ;stkvar	_fmt @ sp[(-11)+-4]
  8654  0025B0  0EF1               	movlw	-15
  8655  0025B2  006F FF8F FFD9     	movff	plusw1,fsr2l
  8656  0025B8  0EF2               	movlw	-14
  8657  0025BA  006F FF8F FFDA     	movff	plusw1,fsr2h
  8658  0025C0  2ADF               	incf	indf2,f,c
  8659                           
  8660                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  8661  0025C2  6A20               	clrf	_width,c
  8662  0025C4  6A21               	clrf	_width+1,c
  8663  0025C6  6A24               	clrf	_flags,c
  8664  0025C8  6A25               	clrf	_flags+1,c
  8665                           
  8666                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  8667  0025CA  6822               	setf	_prec,c
  8668  0025CC  6823               	setf	_prec+1,c
  8669                           
  8670                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  8671                           ;stkvar	_fmt @ sp[(-11)+-4]
  8672  0025CE  0EF1               	movlw	-15
  8673  0025D0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8674  0025D6  0EF2               	movlw	-14
  8675  0025D8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8676  0025DE  006F FF7F FFF6     	movff	indf2,tblptrl
  8677  0025E4                     	if	1	;There is more than 1 active tblptr byte
  8678  0025E4  0E20               	movlw	high __smallconst
  8679  0025E6  6EF7               	movwf	tblptrh,c
  8680  0025E8                     	endif
  8681  0025E8                     	if	0	;tblptru may be non-zero
  8682  0025E8                     	endif
  8683  0025E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8684  0025E8  0E00               	movlw	low (__smallconst shr (0+16))
  8685  0025EA  6EF8               	movwf	tblptru,c
  8686  0025EC                     	endif
  8687  0025EC  0008               	tblrd		*
  8688  0025EE  50F5               	movf	tablat,w,c
  8689  0025F0  0A63               	xorlw	99
  8690  0025F2  A4D8               	btfss	status,2,c
  8691  0025F4  D034               	goto	l7755
  8692                           
  8693                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  8694                           ;stkvar	_fmt @ sp[(-11)+-4]
  8695  0025F6  0EF1               	movlw	-15
  8696  0025F8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8697  0025FE  0EF2               	movlw	-14
  8698  002600  006F FF8F FFDA     	movff	plusw1,fsr2h
  8699  002606  2ADF               	incf	indf2,f,c
  8700                           
  8701                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  8702                           ;stkvar	_ap @ sp[(-11)+-6]
  8703  002608  0EEF               	movlw	-17
  8704  00260A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8705  002610  0EF0               	movlw	-16
  8706  002612  006F FF8F FFDA     	movff	plusw1,fsr2h
  8707  002618  0E02               	movlw	2
  8708  00261A  5EDE               	subwf	postinc2,f,c
  8709  00261C  0E00               	movlw	0
  8710  00261E  5ADD               	subwfb	postdec2,f,c
  8711  002620  006F FF78  F045    	movff	postinc2,btemp+10
  8712  002626  006F FF74  F046    	movff	postdec2,btemp+11
  8713  00262C  0060  F117  FFD9   	movff	btemp+10,fsr2l
  8714  002632  0060  F11B  FFDA   	movff	btemp+11,fsr2h
  8715  002638  50DF               	movf	indf2,w,c
  8716  00263A  6E46               	movwf	btemp+11,c
  8717                           
  8718                           ;stkvar	_c @ sp[(-11)+10]
  8719  00263C  0EFF               	movlw	-1
  8720  00263E  0060  F11B  FFE3   	movff	btemp+11,plusw1
  8721                           
  8722                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  8723                           ;stkvar	_c @ sp[(-11)+10]
  8724  002644  0EFF               	movlw	-1
  8725  002646  50E3               	movf	plusw1,w,c
  8726  002648  6EE6               	movwf	postinc1,c
  8727                           
  8728                           ;stkvar	_fp @ sp[(-12)+-2]
  8729  00264A  0EF2               	movlw	-14
  8730  00264C  006F FF8F FFE6     	movff	plusw1,postinc1
  8731  002652  006F FF8F FFE6     	movff	plusw1,postinc1
  8732  002658  ECB8  F029         	call	_ctoa	;wreg free
  8733  00265C  D1E3               	goto	l1839
  8734  00265E                     l7755:
  8735                           
  8736                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  8737                           ;stkvar	_fmt @ sp[(-11)+-4]
  8738  00265E  0EF1               	movlw	-15
  8739  002660  006F FF8F FFD9     	movff	plusw1,fsr2l
  8740  002666  0EF2               	movlw	-14
  8741  002668  006F FF8F FFDA     	movff	plusw1,fsr2h
  8742  00266E  006F FF7F FFF6     	movff	indf2,tblptrl
  8743  002674                     	if	1	;There is more than 1 active tblptr byte
  8744  002674  0E20               	movlw	high __smallconst
  8745  002676  6EF7               	movwf	tblptrh,c
  8746  002678                     	endif
  8747  002678                     	if	0	;tblptru may be non-zero
  8748  002678                     	endif
  8749  002678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8750  002678  0E00               	movlw	low (__smallconst shr (0+16))
  8751  00267A  6EF8               	movwf	tblptru,c
  8752  00267C                     	endif
  8753  00267C  0008               	tblrd		*
  8754  00267E  50F5               	movf	tablat,w,c
  8755  002680  0A64               	xorlw	100
  8756  002682  B4D8               	btfsc	status,2,c
  8757  002684  D014               	goto	u4750
  8758                           
  8759                           ;stkvar	_fmt @ sp[(-11)+-4]
  8760  002686  0EF1               	movlw	-15
  8761  002688  006F FF8F FFD9     	movff	plusw1,fsr2l
  8762  00268E  0EF2               	movlw	-14
  8763  002690  006F FF8F FFDA     	movff	plusw1,fsr2h
  8764  002696  006F FF7F FFF6     	movff	indf2,tblptrl
  8765  00269C                     	if	1	;There is more than 1 active tblptr byte
  8766  00269C  0E20               	movlw	high __smallconst
  8767  00269E  6EF7               	movwf	tblptrh,c
  8768  0026A0                     	endif
  8769  0026A0                     	if	0	;tblptru may be non-zero
  8770  0026A0                     	endif
  8771  0026A0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8772  0026A0  0E00               	movlw	low (__smallconst shr (0+16))
  8773  0026A2  6EF8               	movwf	tblptru,c
  8774  0026A4                     	endif
  8775  0026A4  0008               	tblrd		*
  8776  0026A6  50F5               	movf	tablat,w,c
  8777  0026A8  0A69               	xorlw	105
  8778  0026AA  A4D8               	btfss	status,2,c
  8779  0026AC  D073               	goto	l7767
  8780  0026AE                     u4750:
  8781                           
  8782                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  8783                           ;stkvar	_fmt @ sp[(-11)+-4]
  8784  0026AE  0EF1               	movlw	-15
  8785  0026B0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8786  0026B6  0EF2               	movlw	-14
  8787  0026B8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8788  0026BE  2ADF               	incf	indf2,f,c
  8789                           
  8790                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  8791                           ;stkvar	_ap @ sp[(-11)+-6]
  8792  0026C0  0EEF               	movlw	-17
  8793  0026C2  006F FF8F FFD9     	movff	plusw1,fsr2l
  8794  0026C8  0EF0               	movlw	-16
  8795  0026CA  006F FF8F FFDA     	movff	plusw1,fsr2h
  8796  0026D0  0E02               	movlw	2
  8797  0026D2  5EDE               	subwf	postinc2,f,c
  8798  0026D4  0E00               	movlw	0
  8799  0026D6  5ADD               	subwfb	postdec2,f,c
  8800  0026D8  006F FF78  F045    	movff	postinc2,btemp+10
  8801  0026DE  006F FF74  F046    	movff	postdec2,btemp+11
  8802  0026E4  0060  F117  FFD9   	movff	btemp+10,fsr2l
  8803  0026EA  0060  F11B  FFDA   	movff	btemp+11,fsr2h
  8804  0026F0  006F FF78  F045    	movff	postinc2,btemp+10
  8805  0026F6  006F FF74  F046    	movff	postdec2,btemp+11
  8806                           
  8807                           ;stkvar	_ll @ sp[(-11)+0]
  8808  0026FC  0EF5               	movlw	-11
  8809  0026FE  0060  F117  FFE3   	movff	btemp+10,plusw1
  8810  002704  0EF6               	movlw	-10
  8811  002706  0060  F11B  FFE3   	movff	btemp+11,plusw1
  8812  00270C  6A3B               	clrf	btemp,c
  8813  00270E  BEE3               	btfsc	plusw1,7,c
  8814  002710  683B               	setf	btemp,c
  8815  002712  0EF7               	movlw	-9
  8816  002714  0060  F0EF  FFE3   	movff	btemp,plusw1
  8817  00271A  0EF8               	movlw	-8
  8818  00271C  0060  F0EF  FFE3   	movff	btemp,plusw1
  8819  002722  0EF9               	movlw	-7
  8820  002724  0060  F0EF  FFE3   	movff	btemp,plusw1
  8821  00272A  0EFA               	movlw	-6
  8822  00272C  0060  F0EF  FFE3   	movff	btemp,plusw1
  8823  002732  0EFB               	movlw	-5
  8824  002734  0060  F0EF  FFE3   	movff	btemp,plusw1
  8825  00273A  0EFC               	movlw	-4
  8826  00273C  0060  F0EF  FFE3   	movff	btemp,plusw1
  8827  002742                     l7763:
  8828                           
  8829                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  8830                           ;stkvar	_ll @ sp[(-11)+0]
  8831  002742  50E1               	movf	fsr1l,w,c
  8832  002744  0FF5               	addlw	-11
  8833  002746  6ED9               	movwf	fsr2l,c
  8834  002748  50E2               	movf	fsr1h,w,c
  8835  00274A  6EDA               	movwf	fsr2h,c
  8836  00274C  0EFF               	movlw	255
  8837  00274E  22DA               	addwfc	fsr2h,f,c
  8838  002750  006F FF7B FFE6     	movff	postinc2,postinc1
  8839  002756  006F FF7B FFE6     	movff	postinc2,postinc1
  8840  00275C  006F FF7B FFE6     	movff	postinc2,postinc1
  8841  002762  006F FF7B FFE6     	movff	postinc2,postinc1
  8842  002768  006F FF7B FFE6     	movff	postinc2,postinc1
  8843  00276E  006F FF7B FFE6     	movff	postinc2,postinc1
  8844  002774  006F FF7B FFE6     	movff	postinc2,postinc1
  8845  00277A  006F FF7B FFE6     	movff	postinc2,postinc1
  8846                           
  8847                           ;stkvar	_fp @ sp[(-19)+-2]
  8848  002780  0EEB               	movlw	-21
  8849  002782  006F FF8F FFE6     	movff	plusw1,postinc1
  8850  002788  006F FF8F FFE6     	movff	plusw1,postinc1
  8851  00278E  EC17  F015         	call	_dtoa	;wreg free
  8852  002792  D148               	goto	l1839
  8853  002794                     l7767:
  8854                           
  8855                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  8856  002794  0E02               	movlw	2
  8857  002796  6EE6               	movwf	postinc1,c
  8858  002798  0E00               	movlw	0
  8859  00279A  6EE6               	movwf	postinc1,c
  8860  00279C  0EAD               	movlw	STR_19& (0+255)
  8861  00279E  6EE6               	movwf	postinc1,c
  8862                           
  8863                           ;stkvar	_fmt @ sp[(-14)+-4]
  8864  0027A0  0EEE               	movlw	-18
  8865  0027A2  006F FF8F FFD9     	movff	plusw1,fsr2l
  8866  0027A8  0EEF               	movlw	-17
  8867  0027AA  006F FF8F FFDA     	movff	plusw1,fsr2h
  8868  0027B0  50DF               	movf	indf2,w,c
  8869  0027B2  6EE6               	movwf	postinc1,c
  8870  0027B4  ECB9  F023         	call	_strncmp	;wreg free
  8871  0027B8  503B               	movf	btemp,w,c
  8872  0027BA  103C               	iorwf	btemp+1,w,c
  8873  0027BC  B4D8               	btfsc	status,2,c
  8874  0027BE  D016               	goto	u4770
  8875  0027C0  0E02               	movlw	2
  8876  0027C2  6EE6               	movwf	postinc1,c
  8877  0027C4  0E00               	movlw	0
  8878  0027C6  6EE6               	movwf	postinc1,c
  8879  0027C8  0EB0               	movlw	STR_23& (0+255)
  8880  0027CA  6EE6               	movwf	postinc1,c
  8881                           
  8882                           ;stkvar	_fmt @ sp[(-14)+-4]
  8883  0027CC  0EEE               	movlw	-18
  8884  0027CE  006F FF8F FFD9     	movff	plusw1,fsr2l
  8885  0027D4  0EEF               	movlw	-17
  8886  0027D6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8887  0027DC  50DF               	movf	indf2,w,c
  8888  0027DE  6EE6               	movwf	postinc1,c
  8889  0027E0  ECB9  F023         	call	_strncmp	;wreg free
  8890  0027E4  503B               	movf	btemp,w,c
  8891  0027E6  103C               	iorwf	btemp+1,w,c
  8892  0027E8  A4D8               	btfss	status,2,c
  8893  0027EA  D067               	goto	l7779
  8894  0027EC                     u4770:
  8895                           
  8896                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  8897                           ;stkvar	_fmt @ sp[(-11)+-4]
  8898  0027EC  0EF1               	movlw	-15
  8899  0027EE  006F FF8F FFD9     	movff	plusw1,fsr2l
  8900  0027F4  0EF2               	movlw	-14
  8901  0027F6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8902  0027FC  0E02               	movlw	2
  8903  0027FE  26DF               	addwf	indf2,f,c
  8904                           
  8905                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  8906                           ;stkvar	_ap @ sp[(-11)+-6]
  8907  002800  0EEF               	movlw	-17
  8908  002802  006F FF8F FFD9     	movff	plusw1,fsr2l
  8909  002808  0EF0               	movlw	-16
  8910  00280A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8911  002810  0E04               	movlw	4
  8912  002812  5EDE               	subwf	postinc2,f,c
  8913  002814  0E00               	movlw	0
  8914  002816  5ADD               	subwfb	postdec2,f,c
  8915  002818  006F FF78  F045    	movff	postinc2,btemp+10
  8916  00281E  006F FF74  F046    	movff	postdec2,btemp+11
  8917  002824  0060  F117  FFD9   	movff	btemp+10,fsr2l
  8918  00282A  0060  F11B  FFDA   	movff	btemp+11,fsr2h
  8919  002830  006F FF78  F043    	movff	postinc2,btemp+8
  8920  002836  006F FF78  F044    	movff	postinc2,btemp+9
  8921  00283C  006F FF78  F045    	movff	postinc2,btemp+10
  8922  002842  006F FF78  F046    	movff	postinc2,btemp+11
  8923  002848  0060  F10C  F04B   	movff	btemp+8,btemp+16
  8924  00284E  0060  F110  F04C   	movff	btemp+9,btemp+17
  8925  002854  0060  F114  F04D   	movff	btemp+10,btemp+18
  8926  00285A  0060  F118  F04E   	movff	btemp+11,btemp+19
  8927  002860  6A4F               	clrf	btemp+20,c
  8928  002862  BE4E               	btfsc	btemp+19,7,c
  8929  002864  684F               	setf	btemp+20,c
  8930  002866  0060  F13C  F050   	movff	btemp+20,btemp+21
  8931  00286C  0060  F13C  F051   	movff	btemp+20,btemp+22
  8932  002872  0060  F13C  F052   	movff	btemp+20,btemp+23
  8933                           
  8934                           ;stkvar	_ll @ sp[(-11)+0]
  8935  002878  0EF5               	movlw	-11
  8936  00287A  0060  F12F  FFE3   	movff	btemp+16,plusw1
  8937  002880  0EF6               	movlw	-10
  8938  002882  0060  F133  FFE3   	movff	btemp+17,plusw1
  8939  002888  0EF7               	movlw	-9
  8940  00288A  0060  F137  FFE3   	movff	btemp+18,plusw1
  8941  002890  0EF8               	movlw	-8
  8942  002892  0060  F13B  FFE3   	movff	btemp+19,plusw1
  8943  002898  0EF9               	movlw	-7
  8944  00289A  0060  F13F  FFE3   	movff	btemp+20,plusw1
  8945  0028A0  0EFA               	movlw	-6
  8946  0028A2  0060  F143  FFE3   	movff	btemp+21,plusw1
  8947  0028A8  0EFB               	movlw	-5
  8948  0028AA  0060  F147  FFE3   	movff	btemp+22,plusw1
  8949  0028B0  0EFC               	movlw	-4
  8950  0028B2  0060  F14B  FFE3   	movff	btemp+23,plusw1
  8951  0028B8  D744               	goto	l7763
  8952  0028BA                     l7779:
  8953                           
  8954                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  8955                           ;stkvar	_fmt @ sp[(-11)+-4]
  8956  0028BA  0EF1               	movlw	-15
  8957  0028BC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8958  0028C2  0EF2               	movlw	-14
  8959  0028C4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8960  0028CA  006F FF7F FFF6     	movff	indf2,tblptrl
  8961  0028D0                     	if	1	;There is more than 1 active tblptr byte
  8962  0028D0  0E20               	movlw	high __smallconst
  8963  0028D2  6EF7               	movwf	tblptrh,c
  8964  0028D4                     	endif
  8965  0028D4                     	if	0	;tblptru may be non-zero
  8966  0028D4                     	endif
  8967  0028D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8968  0028D4  0E00               	movlw	low (__smallconst shr (0+16))
  8969  0028D6  6EF8               	movwf	tblptru,c
  8970  0028D8                     	endif
  8971  0028D8  0008               	tblrd		*
  8972  0028DA  50F5               	movf	tablat,w,c
  8973  0028DC  0A73               	xorlw	115
  8974  0028DE  A4D8               	btfss	status,2,c
  8975  0028E0  D040               	goto	l7789
  8976                           
  8977                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  8978                           ;stkvar	_fmt @ sp[(-11)+-4]
  8979  0028E2  0EF1               	movlw	-15
  8980  0028E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8981  0028EA  0EF2               	movlw	-14
  8982  0028EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8983  0028F2  2ADF               	incf	indf2,f,c
  8984                           
  8985                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  8986                           ;stkvar	_ap @ sp[(-11)+-6]
  8987  0028F4  0EEF               	movlw	-17
  8988  0028F6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8989  0028FC  0EF0               	movlw	-16
  8990  0028FE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8991  002904  0E02               	movlw	2
  8992  002906  5EDE               	subwf	postinc2,f,c
  8993  002908  0E00               	movlw	0
  8994  00290A  5ADD               	subwfb	postdec2,f,c
  8995  00290C  006F FF78  F045    	movff	postinc2,btemp+10
  8996  002912  006F FF74  F046    	movff	postdec2,btemp+11
  8997  002918  0060  F117  FFD9   	movff	btemp+10,fsr2l
  8998  00291E  0060  F11B  FFDA   	movff	btemp+11,fsr2h
  8999  002924  006F FF78  F045    	movff	postinc2,btemp+10
  9000  00292A  006F FF74  F046    	movff	postdec2,btemp+11
  9001                           
  9002                           ;stkvar	_cp @ sp[(-11)+8]
  9003  002930  0EFE               	movlw	-2
  9004  002932  0060  F11B  FFE3   	movff	btemp+11,plusw1
  9005  002938  0EFD               	movlw	-3
  9006  00293A  0060  F117  FFE3   	movff	btemp+10,plusw1
  9007                           
  9008                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  9009                           ;stkvar	_cp @ sp[(-11)+8]
  9010  002940  0EFD               	movlw	-3
  9011  002942  006F FF8F FFE6     	movff	plusw1,postinc1
  9012  002948  006F FF8F FFE6     	movff	plusw1,postinc1
  9013                           
  9014                           ;stkvar	_fp @ sp[(-13)+-2]
  9015  00294E  0EF1               	movlw	-15
  9016  002950  006F FF8F FFE6     	movff	plusw1,postinc1
  9017  002956  006F FF8F FFE6     	movff	plusw1,postinc1
  9018  00295C  EC6C  F01C         	call	_stoa	;wreg free
  9019  002960  D061               	goto	l1839
  9020  002962                     l7789:
  9021                           
  9022                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  9023                           ;stkvar	_fmt @ sp[(-11)+-4]
  9024  002962  0EF1               	movlw	-15
  9025  002964  006F FF8F FFD9     	movff	plusw1,fsr2l
  9026  00296A  0EF2               	movlw	-14
  9027  00296C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9028  002972  006F FF7F FFF6     	movff	indf2,tblptrl
  9029  002978                     	if	1	;There is more than 1 active tblptr byte
  9030  002978  0E20               	movlw	high __smallconst
  9031  00297A  6EF7               	movwf	tblptrh,c
  9032  00297C                     	endif
  9033  00297C                     	if	0	;tblptru may be non-zero
  9034  00297C                     	endif
  9035  00297C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9036  00297C  0E00               	movlw	low (__smallconst shr (0+16))
  9037  00297E  6EF8               	movwf	tblptru,c
  9038  002980                     	endif
  9039  002980  0008               	tblrd		*
  9040  002982  50F5               	movf	tablat,w,c
  9041  002984  0A25               	xorlw	37
  9042  002986  A4D8               	btfss	status,2,c
  9043  002988  D018               	goto	l7799
  9044                           
  9045                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  9046                           ;stkvar	_fmt @ sp[(-11)+-4]
  9047  00298A  0EF1               	movlw	-15
  9048  00298C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9049  002992  0EF2               	movlw	-14
  9050  002994  006F FF8F FFDA     	movff	plusw1,fsr2h
  9051  00299A  2ADF               	incf	indf2,f,c
  9052                           
  9053                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  9054                           ;stkvar	_fp @ sp[(-11)+-2]
  9055  00299C  0EF3               	movlw	-13
  9056  00299E  006F FF8F FFE6     	movff	plusw1,postinc1
  9057  0029A4  006F FF8F FFE6     	movff	plusw1,postinc1
  9058  0029AA  0E25               	movlw	37
  9059  0029AC  6EE6               	movwf	postinc1,c
  9060  0029AE  0E00               	movlw	0
  9061  0029B0  6EE6               	movwf	postinc1,c
  9062  0029B2  EC0B  F025         	call	_fputc	;wreg free
  9063  0029B6                     l7795:
  9064                           
  9065                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  9066  0029B6  0E01               	movlw	1
  9067  0029B8  D00A               	goto	L23
  9068  0029BA                     l7799:
  9069                           
  9070                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  9071                           ;stkvar	_fmt @ sp[(-11)+-4]
  9072  0029BA  0EF1               	movlw	-15
  9073  0029BC  006F FF8F FFD9     	movff	plusw1,fsr2l
  9074  0029C2  0EF2               	movlw	-14
  9075  0029C4  006F FF8F FFDA     	movff	plusw1,fsr2h
  9076  0029CA  2ADF               	incf	indf2,f,c
  9077                           
  9078                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  9079  0029CC  0E00               	movlw	0
  9080  0029CE                     L23:
  9081  0029CE  6E3B               	movwf	btemp,c
  9082  0029D0  0E00               	movlw	0
  9083  0029D2  6E3C               	movwf	btemp+1,c
  9084  0029D4  D027               	goto	l1839
  9085  0029D6                     l7805:
  9086                           
  9087                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  9088                           ;stkvar	_fp @ sp[(-11)+-2]
  9089  0029D6  0EF3               	movlw	-13
  9090  0029D8  006F FF8F FFE6     	movff	plusw1,postinc1
  9091  0029DE  006F FF8F FFE6     	movff	plusw1,postinc1
  9092                           
  9093                           ;stkvar	_fmt @ sp[(-13)+-4]
  9094  0029E4  0EEF               	movlw	-17
  9095  0029E6  006F FF8F FFD9     	movff	plusw1,fsr2l
  9096  0029EC  0EF0               	movlw	-16
  9097  0029EE  006F FF8F FFDA     	movff	plusw1,fsr2h
  9098  0029F4  006F FF7F FFF6     	movff	indf2,tblptrl
  9099  0029FA                     	if	1	;There is more than 1 active tblptr byte
  9100  0029FA  0E20               	movlw	high __smallconst
  9101  0029FC  6EF7               	movwf	tblptrh,c
  9102  0029FE                     	endif
  9103  0029FE                     	if	0	;tblptru may be non-zero
  9104  0029FE                     	endif
  9105  0029FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9106  0029FE  0E00               	movlw	low (__smallconst shr (0+16))
  9107  002A00  6EF8               	movwf	tblptru,c
  9108  002A02                     	endif
  9109  002A02  0008               	tblrd		*
  9110  002A04  50F5               	movf	tablat,w,c
  9111  002A06  6EE6               	movwf	postinc1,c
  9112  002A08  0E00               	movlw	0
  9113  002A0A  6EE6               	movwf	postinc1,c
  9114  002A0C  EC0B  F025         	call	_fputc	;wreg free
  9115                           
  9116                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  9117                           ;stkvar	_fmt @ sp[(-11)+-4]
  9118  002A10  0EF1               	movlw	-15
  9119  002A12  006F FF8F FFD9     	movff	plusw1,fsr2l
  9120  002A18  0EF2               	movlw	-14
  9121  002A1A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9122  002A20  2ADF               	incf	indf2,f,c
  9123  002A22  D7C9               	goto	l7795
  9124  002A24                     l1839:
  9125                           
  9126                           ; _vfpfcnvrt: autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  9127  002A24  0EEF               	movlw	239
  9128  002A26  26E1               	addwf	fsr1l,f,c
  9129  002A28  0EFF               	movlw	255
  9130  002A2A  22E2               	addwfc	fsr1h,f,c
  9131  002A2C  0012               	return		;funcret
  9132  002A2E                     __end_of_vfpfcnvrt:
  9133                           	opt callstack 0
  9134                           
  9135 ;; *************** function _strncmp *****************
  9136 ;; Defined at:
  9137 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  9138 ;; Parameters:    Size  Location     Type
  9139 ;;  _l              1  [STACK] PTR const unsigned char 
  9140 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(21), 
  9141 ;;		 -> STR_14(19), STR_13(6), STR_12(17), STR_11(19), 
  9142 ;;		 -> STR_10(19), STR_9(20), STR_8(6), STR_7(6), 
  9143 ;;		 -> STR_6(14), STR_5(19), STR_4(15), STR_2(12), 
  9144 ;;		 -> STR_1(17), 
  9145 ;;  _r              1  [STACK] PTR const unsigned char 
  9146 ;;		 -> STR_25(3), STR_21(3), 
  9147 ;;  n               2  [STACK] unsigned int 
  9148 ;; Auto vars:     Size  Location     Type
  9149 ;;  r               1  [STACK] PTR const unsigned char 
  9150 ;;		 -> STR_25(3), STR_21(3), 
  9151 ;;  l               1  [STACK] PTR const unsigned char 
  9152 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(21), 
  9153 ;;		 -> STR_14(19), STR_13(6), STR_12(17), STR_11(19), 
  9154 ;;		 -> STR_10(19), STR_9(20), STR_8(6), STR_7(6), 
  9155 ;;		 -> STR_6(14), STR_5(19), STR_4(15), STR_2(12), 
  9156 ;;		 -> STR_1(17), 
  9157 ;; Return value:  Size  Location     Type
  9158 ;;                  2  [STACK] int 
  9159 ;; Registers used:
  9160 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, tblptrl, tblptrh, tblptru, prodl
  9161 ;; Tracked objects:
  9162 ;;		On entry : 0/0
  9163 ;;		On exit  : 0/0
  9164 ;;		Unchanged: 0/0
  9165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9170 ;;Total ram usage:        0 bytes
  9171 ;; Hardware stack levels used:    1
  9172 ;; Hardware stack levels required when called:    3
  9173 ;; This function calls:
  9174 ;;		Nothing
  9175 ;; This function is called by:
  9176 ;;		_vfpfcnvrt
  9177 ;; This function uses a reentrant model
  9178 ;;
  9179                           
  9180                           	psect	text40
  9181  004772                     __ptext40:
  9182                           	opt callstack 0
  9183  004772                     _strncmp:
  9184                           	opt callstack 0
  9185                           
  9186                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9187  004772  52E6               	movf	postinc1,f,c
  9188  004774  52E6               	movf	postinc1,f,c
  9189                           
  9190                           ;stkvar	__l @ sp[(-2)+-1]
  9191                           
  9192                           ;incstack = 0
  9193  004776  0EFD               	movlw	-3
  9194  004778  006F FF8C  F046    	movff	plusw1,btemp+11
  9195                           
  9196                           ;stkvar	_l @ sp[(-2)+1]
  9197  00477E  0EFF               	movlw	-1
  9198  004780  0060  F11B  FFE3   	movff	btemp+11,plusw1
  9199                           
  9200                           ;stkvar	__r @ sp[(-2)+-2]
  9201  004786  0EFC               	movlw	-4
  9202  004788  006F FF8C  F046    	movff	plusw1,btemp+11
  9203                           
  9204                           ;stkvar	_r @ sp[(-2)+0]
  9205  00478E  0EFE               	movlw	-2
  9206  004790  0060  F11B  FFE3   	movff	btemp+11,plusw1
  9207                           
  9208                           ;stkvar	_n @ sp[(-2)+-4]
  9209  004796  0EFA               	movlw	-6
  9210  004798  006F FF8C  F03B    	movff	plusw1,btemp
  9211  00479E  0E01               	movlw	1
  9212  0047A0  5E3B               	subwf	btemp,f,c
  9213  0047A2  0EFA               	movlw	-6
  9214  0047A4  0060  F0EF  FFE3   	movff	btemp,plusw1
  9215  0047AA  0EFB               	movlw	-5
  9216  0047AC  006F FF8C  F03B    	movff	plusw1,btemp
  9217  0047B2  0E00               	movlw	0
  9218  0047B4  5A3B               	subwfb	btemp,f,c
  9219  0047B6  0EFB               	movlw	-5
  9220  0047B8  0060  F0EF  FFE3   	movff	btemp,plusw1
  9221  0047BE  0EFA               	movlw	-6
  9222  0047C0  28E3               	incf	plusw1,w,c
  9223  0047C2  E121               	bnz	l5541
  9224  0047C4  0EFB               	movlw	-5
  9225  0047C6  28E3               	incf	plusw1,w,c
  9226  0047C8  A4D8               	btfss	status,2,c
  9227  0047CA  D01D               	goto	l5541
  9228  0047CC  0E00               	movlw	0
  9229  0047CE  6E3B               	movwf	btemp,c
  9230  0047D0  0E00               	movlw	0
  9231  0047D2  6E3C               	movwf	btemp+1,c
  9232  0047D4  D091               	goto	l2588
  9233  0047D6                     l5537:
  9234                           
  9235                           ;stkvar	_l @ sp[(-2)+1]
  9236  0047D6  0EFF               	movlw	-1
  9237  0047D8  2AE3               	incf	plusw1,f,c
  9238                           
  9239                           ;stkvar	_r @ sp[(-2)+0]
  9240  0047DA  0EFE               	movlw	-2
  9241  0047DC  2AE3               	incf	plusw1,f,c
  9242                           
  9243                           ;stkvar	_n @ sp[(-2)+-4]
  9244  0047DE  0EFA               	movlw	-6
  9245  0047E0  006F FF8C  F03B    	movff	plusw1,btemp
  9246  0047E6  0E01               	movlw	1
  9247  0047E8  5E3B               	subwf	btemp,f,c
  9248  0047EA  0EFA               	movlw	-6
  9249  0047EC  0060  F0EF  FFE3   	movff	btemp,plusw1
  9250  0047F2  0EFB               	movlw	-5
  9251  0047F4  006F FF8C  F03B    	movff	plusw1,btemp
  9252  0047FA  0E00               	movlw	0
  9253  0047FC  5A3B               	subwfb	btemp,f,c
  9254  0047FE  0EFB               	movlw	-5
  9255  004800  0060  F0EF  FFE3   	movff	btemp,plusw1
  9256  004806                     l5541:
  9257                           
  9258                           ;stkvar	_l @ sp[(-2)+1]
  9259  004806  50E1               	movf	fsr1l,w,c
  9260  004808  0FFF               	addlw	-1
  9261  00480A  6ED9               	movwf	fsr2l,c
  9262  00480C  50E2               	movf	fsr1h,w,c
  9263  00480E  6EDA               	movwf	fsr2h,c
  9264  004810  0EFF               	movlw	255
  9265  004812  22DA               	addwfc	fsr2h,f,c
  9266  004814  006F FF7F FFF6     	movff	indf2,tblptrl
  9267  00481A                     	if	1	;There is more than 1 active tblptr byte
  9268  00481A  0E20               	movlw	high __smallconst
  9269  00481C  6EF7               	movwf	tblptrh,c
  9270  00481E                     	endif
  9271  00481E                     	if	0	;tblptru may be non-zero
  9272  00481E                     	endif
  9273  00481E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9274  00481E  0E00               	movlw	low (__smallconst shr (0+16))
  9275  004820  6EF8               	movwf	tblptru,c
  9276  004822                     	endif
  9277  004822  0008               	tblrd		*
  9278  004824  50F5               	movf	tablat,w,c
  9279  004826  0900               	iorlw	0
  9280  004828  B4D8               	btfsc	status,2,c
  9281  00482A  D041               	goto	u2920
  9282                           
  9283                           ;stkvar	_r @ sp[(-2)+0]
  9284  00482C  50E1               	movf	fsr1l,w,c
  9285  00482E  0FFE               	addlw	-2
  9286  004830  6ED9               	movwf	fsr2l,c
  9287  004832  50E2               	movf	fsr1h,w,c
  9288  004834  6EDA               	movwf	fsr2h,c
  9289  004836  0EFF               	movlw	255
  9290  004838  22DA               	addwfc	fsr2h,f,c
  9291  00483A  006F FF7F FFF6     	movff	indf2,tblptrl
  9292  004840                     	if	1	;There is more than 1 active tblptr byte
  9293  004840  0E20               	movlw	high __smallconst
  9294  004842  6EF7               	movwf	tblptrh,c
  9295  004844                     	endif
  9296  004844                     	if	0	;tblptru may be non-zero
  9297  004844                     	endif
  9298  004844                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9299  004844  0E00               	movlw	low (__smallconst shr (0+16))
  9300  004846  6EF8               	movwf	tblptru,c
  9301  004848                     	endif
  9302  004848  0008               	tblrd		*
  9303  00484A  50F5               	movf	tablat,w,c
  9304  00484C  0900               	iorlw	0
  9305  00484E  B4D8               	btfsc	status,2,c
  9306  004850  D02E               	goto	u2920
  9307                           
  9308                           ;stkvar	_n @ sp[(-2)+-4]
  9309  004852  0EFA               	movlw	-6
  9310  004854  006F FF8C  F03B    	movff	plusw1,btemp
  9311  00485A  0EFB               	movlw	-5
  9312  00485C  50E3               	movf	plusw1,w,c
  9313  00485E  103B               	iorwf	btemp,w,c
  9314  004860  B4D8               	btfsc	status,2,c
  9315  004862  D025               	goto	u2920
  9316                           
  9317                           ;stkvar	_l @ sp[(-2)+1]
  9318  004864  50E1               	movf	fsr1l,w,c
  9319  004866  0FFF               	addlw	-1
  9320  004868  6ED9               	movwf	fsr2l,c
  9321  00486A  50E2               	movf	fsr1h,w,c
  9322  00486C  6EDA               	movwf	fsr2h,c
  9323  00486E  0EFF               	movlw	255
  9324  004870  22DA               	addwfc	fsr2h,f,c
  9325  004872  006F FF7F FFF6     	movff	indf2,tblptrl
  9326  004878                     	if	1	;There is more than 1 active tblptr byte
  9327  004878  0E20               	movlw	high __smallconst
  9328  00487A  6EF7               	movwf	tblptrh,c
  9329  00487C                     	endif
  9330  00487C                     	if	0	;tblptru may be non-zero
  9331  00487C                     	endif
  9332  00487C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9333  00487C  0E00               	movlw	low (__smallconst shr (0+16))
  9334  00487E  6EF8               	movwf	tblptru,c
  9335  004880                     	endif
  9336  004880  0008               	tblrd		*
  9337  004882  006F FFD4  F046    	movff	tablat,btemp+11
  9338                           
  9339                           ;stkvar	_r @ sp[(-2)+0]
  9340  004888  50E1               	movf	fsr1l,w,c
  9341  00488A  0FFE               	addlw	-2
  9342  00488C  6ED9               	movwf	fsr2l,c
  9343  00488E  50E2               	movf	fsr1h,w,c
  9344  004890  6EDA               	movwf	fsr2h,c
  9345  004892  0EFF               	movlw	255
  9346  004894  22DA               	addwfc	fsr2h,f,c
  9347  004896  006F FF7F FFF6     	movff	indf2,tblptrl
  9348  00489C                     	if	1	;There is more than 1 active tblptr byte
  9349  00489C  0E20               	movlw	high __smallconst
  9350  00489E  6EF7               	movwf	tblptrh,c
  9351  0048A0                     	endif
  9352  0048A0                     	if	0	;tblptru may be non-zero
  9353  0048A0                     	endif
  9354  0048A0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9355  0048A0  0E00               	movlw	low (__smallconst shr (0+16))
  9356  0048A2  6EF8               	movwf	tblptru,c
  9357  0048A4                     	endif
  9358  0048A4  0008               	tblrd		*
  9359  0048A6  50F5               	movf	tablat,w,c
  9360  0048A8  1846               	xorwf	btemp+11,w,c
  9361  0048AA  B4D8               	btfsc	status,2,c
  9362  0048AC  D794               	goto	l5537
  9363  0048AE                     u2920:
  9364                           
  9365                           ;stkvar	_l @ sp[(-2)+1]
  9366  0048AE  50E1               	movf	fsr1l,w,c
  9367  0048B0  0FFF               	addlw	-1
  9368  0048B2  6ED9               	movwf	fsr2l,c
  9369  0048B4  50E2               	movf	fsr1h,w,c
  9370  0048B6  6EDA               	movwf	fsr2h,c
  9371  0048B8  0EFF               	movlw	255
  9372  0048BA  22DA               	addwfc	fsr2h,f,c
  9373  0048BC  006F FF7F FFF6     	movff	indf2,tblptrl
  9374  0048C2                     	if	1	;There is more than 1 active tblptr byte
  9375  0048C2  0E20               	movlw	high __smallconst
  9376  0048C4  6EF7               	movwf	tblptrh,c
  9377  0048C6                     	endif
  9378  0048C6                     	if	0	;tblptru may be non-zero
  9379  0048C6                     	endif
  9380  0048C6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9381  0048C6  0E00               	movlw	low (__smallconst shr (0+16))
  9382  0048C8  6EF8               	movwf	tblptru,c
  9383  0048CA                     	endif
  9384  0048CA  0008               	tblrd		*
  9385  0048CC  50F5               	movf	tablat,w,c
  9386  0048CE  6E3B               	movwf	btemp,c
  9387  0048D0  6A3C               	clrf	btemp+1,c
  9388                           
  9389                           ;stkvar	_r @ sp[(-2)+0]
  9390  0048D2  50E1               	movf	fsr1l,w,c
  9391  0048D4  0FFE               	addlw	-2
  9392  0048D6  6ED9               	movwf	fsr2l,c
  9393  0048D8  50E2               	movf	fsr1h,w,c
  9394  0048DA  6EDA               	movwf	fsr2h,c
  9395  0048DC  0EFF               	movlw	255
  9396  0048DE  22DA               	addwfc	fsr2h,f,c
  9397  0048E0  006F FF7F FFF6     	movff	indf2,tblptrl
  9398  0048E6                     	if	1	;There is more than 1 active tblptr byte
  9399  0048E6  0E20               	movlw	high __smallconst
  9400  0048E8  6EF7               	movwf	tblptrh,c
  9401  0048EA                     	endif
  9402  0048EA                     	if	0	;tblptru may be non-zero
  9403  0048EA                     	endif
  9404  0048EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9405  0048EA  0E00               	movlw	low (__smallconst shr (0+16))
  9406  0048EC  6EF8               	movwf	tblptru,c
  9407  0048EE                     	endif
  9408  0048EE  0008               	tblrd		*
  9409  0048F0  50F5               	movf	tablat,w,c
  9410  0048F2  5E3B               	subwf	btemp,f,c
  9411  0048F4  0E00               	movlw	0
  9412  0048F6  5A3C               	subwfb	btemp+1,f,c
  9413  0048F8                     l2588:
  9414                           
  9415                           ; _strncmp: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  9416  0048F8  0EFA               	movlw	250
  9417  0048FA  26E1               	addwf	fsr1l,f,c
  9418  0048FC  0EFF               	movlw	255
  9419  0048FE  22E2               	addwfc	fsr1h,f,c
  9420  004900  0012               	return		;funcret
  9421  004902                     __end_of_strncmp:
  9422                           	opt callstack 0
  9423                           
  9424 ;; *************** function _stoa *****************
  9425 ;; Defined at:
  9426 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9427 ;; Parameters:    Size  Location     Type
  9428 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9429 ;;		 -> f(5), NULL(0), 
  9430 ;;  s               2  [STACK] PTR unsigned char 
  9431 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(6), V(89), 
  9432 ;; Auto vars:     Size  Location     Type
  9433 ;;  nuls            7  [STACK] unsigned char [7]
  9434 ;;  l               2  [STACK] int 
  9435 ;;  p               2  [STACK] int 
  9436 ;;  cp              2  [STACK] PTR unsigned char 
  9437 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_3(6), 
  9438 ;;		 -> V(89), 
  9439 ;;  w               2  [STACK] int 
  9440 ;;  i               2  [STACK] int 
  9441 ;; Return value:  Size  Location     Type
  9442 ;;                  2  [STACK] int 
  9443 ;; Registers used:
  9444 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9445 ;; Tracked objects:
  9446 ;;		On entry : 0/0
  9447 ;;		On exit  : 0/0
  9448 ;;		Unchanged: 0/0
  9449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9454 ;;Total ram usage:        0 bytes
  9455 ;; Hardware stack levels used:    1
  9456 ;; Hardware stack levels required when called:    6
  9457 ;; This function calls:
  9458 ;;		_fputc
  9459 ;;		_strlen
  9460 ;; This function is called by:
  9461 ;;		_vfpfcnvrt
  9462 ;; This function uses a reentrant model
  9463 ;;
  9464                           
  9465                           	psect	text41
  9466  0038D8                     __ptext41:
  9467                           	opt callstack 0
  9468  0038D8                     _stoa:
  9469                           	opt callstack 0
  9470                           
  9471                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9472  0038D8  0E11               	movlw	17
  9473  0038DA  26E1               	addwf	fsr1l,f,c
  9474  0038DC  0E00               	movlw	0
  9475  0038DE  22E2               	addwfc	fsr1h,f,c
  9476                           
  9477                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  9478                           
  9479                           ;incstack = 0
  9480  0038E0  EE20  F060         	lfsr	2,stoa@F1142
  9481                           
  9482                           ;stkvar	_nuls @ sp[(-17)+0]
  9483  0038E4  0E07               	movlw	7
  9484  0038E6  6E3B               	movwf	btemp,c
  9485  0038E8  0EEF               	movlw	-17
  9486  0038EA                     us462999:
  9487  0038EA  006F FF7B FFE3     	movff	postinc2,plusw1
  9488  0038F0  28E8               	incf	wreg,w,c
  9489  0038F2  2E3B               	decfsz	btemp,f,c
  9490  0038F4  D7FA               	bra	us462999
  9491                           
  9492                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  9493                           ;stkvar	_s @ sp[(-17)+-4]
  9494  0038F6  0EEB               	movlw	-21
  9495  0038F8  006F FF8C  F045    	movff	plusw1,btemp+10
  9496  0038FE  0EEC               	movlw	-20
  9497  003900  006F FF8C  F046    	movff	plusw1,btemp+11
  9498                           
  9499                           ;stkvar	_cp @ sp[(-17)+11]
  9500  003906  0EFB               	movlw	-5
  9501  003908  0060  F11B  FFE3   	movff	btemp+11,plusw1
  9502  00390E  0EFA               	movlw	-6
  9503  003910  0060  F117  FFE3   	movff	btemp+10,plusw1
  9504                           
  9505                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  9506                           ;stkvar	_cp @ sp[(-17)+11]
  9507  003916  0EFA               	movlw	-6
  9508  003918  006F FF8C  F03B    	movff	plusw1,btemp
  9509  00391E  0EFB               	movlw	-5
  9510  003920  50E3               	movf	plusw1,w,c
  9511  003922  103B               	iorwf	btemp,w,c
  9512  003924  A4D8               	btfss	status,2,c
  9513  003926  D00E               	goto	l7693
  9514                           
  9515                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  9516                           ;stkvar	_nuls @ sp[(-17)+0]
  9517  003928  0EEF               	movlw	239
  9518  00392A  24E1               	addwf	fsr1l,w,c
  9519  00392C  6E45               	movwf	btemp+10,c
  9520  00392E  0EFF               	movlw	255
  9521  003930  20E2               	addwfc	fsr1h,w,c
  9522  003932  6E46               	movwf	btemp+11,c
  9523                           
  9524                           ;stkvar	_cp @ sp[(-17)+11]
  9525  003934  0EFB               	movlw	-5
  9526  003936  0060  F11B  FFE3   	movff	btemp+11,plusw1
  9527  00393C  0EFA               	movlw	-6
  9528  00393E  0060  F117  FFE3   	movff	btemp+10,plusw1
  9529  003944                     l7693:
  9530                           
  9531                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  9532                           ;stkvar	_cp @ sp[(-17)+11]
  9533  003944  0EFA               	movlw	-6
  9534  003946  006F FF8F FFE6     	movff	plusw1,postinc1
  9535  00394C  006F FF8F FFE6     	movff	plusw1,postinc1
  9536  003952  ECE8  F027         	call	_strlen	;wreg free
  9537                           
  9538                           ;stkvar	_l @ sp[(-17)+7]
  9539  003956  0EF6               	movlw	-10
  9540  003958  0060  F0EF  FFE3   	movff	btemp,plusw1
  9541  00395E  0EF7               	movlw	-9
  9542  003960  0060  F0F3  FFE3   	movff	btemp+1,plusw1
  9543                           
  9544                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  9545                           ;stkvar	_p @ sp[(-17)+9]
  9546  003966  0EF8               	movlw	-8
  9547  003968  0060  F08B  FFE3   	movff	_prec,plusw1
  9548  00396E  0EF9               	movlw	-7
  9549  003970  0060  F08F  FFE3   	movff	_prec+1,plusw1
  9550                           
  9551                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  9552                           ;stkvar	_p @ sp[(-17)+9]
  9553  003976  0EF9               	movlw	-7
  9554  003978  BEE3               	btfsc	plusw1,7,c
  9555  00397A  D023               	goto	l1820
  9556                           
  9557                           ;stkvar	_l @ sp[(-17)+7]
  9558                           ;stkvar	_p @ sp[(-17)+9]
  9559  00397C  50E1               	movf	fsr1l,w,c
  9560  00397E  0FF8               	addlw	-8
  9561  003980  6ED9               	movwf	fsr2l,c
  9562  003982  50E2               	movf	fsr1h,w,c
  9563  003984  6EDA               	movwf	fsr2h,c
  9564  003986  0EFF               	movlw	255
  9565  003988  22DA               	addwfc	fsr2h,f,c
  9566  00398A  0EF6               	movlw	-10
  9567  00398C  50E3               	movf	plusw1,w,c
  9568  00398E  5CDE               	subwf	postinc2,w,c
  9569  003990  50DE               	movf	postinc2,w,c
  9570  003992  0A80               	xorlw	128
  9571  003994  6E3B               	movwf	btemp,c
  9572  003996  0EF7               	movlw	-9
  9573  003998  50E3               	movf	plusw1,w,c
  9574  00399A  0A80               	xorlw	128
  9575  00399C  583B               	subwfb	btemp,w,c
  9576  00399E  B0D8               	btfsc	status,0,c
  9577  0039A0  D010               	goto	l1820
  9578                           
  9579                           ;stkvar	_p @ sp[(-17)+9]
  9580                           ;stkvar	_l @ sp[(-17)+7]
  9581  0039A2  0EF8               	movlw	-8
  9582  0039A4  006F FF8C  F03B    	movff	plusw1,btemp
  9583  0039AA  0EF6               	movlw	-10
  9584  0039AC  0060  F0EF  FFE3   	movff	btemp,plusw1
  9585  0039B2  0EF9               	movlw	-7
  9586  0039B4  006F FF8C  F03B    	movff	plusw1,btemp
  9587  0039BA  0EF7               	movlw	-9
  9588  0039BC  0060  F0EF  FFE3   	movff	btemp,plusw1
  9589  0039C2                     l1820:
  9590                           
  9591                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
  9592                           ;stkvar	_l @ sp[(-17)+7]
  9593                           ;stkvar	_p @ sp[(-17)+9]
  9594  0039C2  0EF6               	movlw	-10
  9595  0039C4  006F FF8C  F03B    	movff	plusw1,btemp
  9596  0039CA  0EF8               	movlw	-8
  9597  0039CC  0060  F0EF  FFE3   	movff	btemp,plusw1
  9598  0039D2  0EF7               	movlw	-9
  9599  0039D4  006F FF8C  F03B    	movff	plusw1,btemp
  9600  0039DA  0EF9               	movlw	-7
  9601  0039DC  0060  F0EF  FFE3   	movff	btemp,plusw1
  9602                           
  9603                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
  9604                           ;stkvar	_w @ sp[(-17)+13]
  9605  0039E2  0EFC               	movlw	-4
  9606  0039E4  0060  F083  FFE3   	movff	_width,plusw1
  9607  0039EA  0EFD               	movlw	-3
  9608  0039EC  0060  F087  FFE3   	movff	_width+1,plusw1
  9609                           
  9610                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  9611  0039F2  A024               	btfss	_flags,0,c
  9612  0039F4  D01F               	goto	l7713
  9613  0039F6  D031               	goto	u4670
  9614  0039F8                     l7709:
  9615                           
  9616                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  9617                           ;stkvar	_fp @ sp[(-17)+-2]
  9618  0039F8  0EED               	movlw	-19
  9619  0039FA  006F FF8F FFE6     	movff	plusw1,postinc1
  9620  003A00  006F FF8F FFE6     	movff	plusw1,postinc1
  9621  003A06  0E20               	movlw	32
  9622  003A08  6EE6               	movwf	postinc1,c
  9623  003A0A  0E00               	movlw	0
  9624  003A0C  6EE6               	movwf	postinc1,c
  9625  003A0E  EC0B  F025         	call	_fputc	;wreg free
  9626                           
  9627                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
  9628                           ;stkvar	_l @ sp[(-17)+7]
  9629  003A12  0EF6               	movlw	-10
  9630  003A14  50E3               	movf	plusw1,w,c
  9631  003A16  0F01               	addlw	1
  9632  003A18  6E3B               	movwf	btemp,c
  9633  003A1A  0EF6               	movlw	-10
  9634  003A1C  0060  F0EF  FFE3   	movff	btemp,plusw1
  9635  003A22  6A3B               	clrf	btemp,c
  9636  003A24  0EF7               	movlw	-9
  9637  003A26  50E3               	movf	plusw1,w,c
  9638  003A28  203B               	addwfc	btemp,w,c
  9639  003A2A  6E3B               	movwf	btemp,c
  9640  003A2C  0EF7               	movlw	-9
  9641  003A2E  0060  F0EF  FFE3   	movff	btemp,plusw1
  9642  003A34                     l7713:
  9643                           
  9644                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  9645                           ;stkvar	_w @ sp[(-17)+13]
  9646                           ;stkvar	_l @ sp[(-17)+7]
  9647  003A34  50E1               	movf	fsr1l,w,c
  9648  003A36  0FF6               	addlw	-10
  9649  003A38  6ED9               	movwf	fsr2l,c
  9650  003A3A  50E2               	movf	fsr1h,w,c
  9651  003A3C  6EDA               	movwf	fsr2h,c
  9652  003A3E  0EFF               	movlw	255
  9653  003A40  22DA               	addwfc	fsr2h,f,c
  9654  003A42  0EFC               	movlw	-4
  9655  003A44  50E3               	movf	plusw1,w,c
  9656  003A46  5CDE               	subwf	postinc2,w,c
  9657  003A48  50DE               	movf	postinc2,w,c
  9658  003A4A  0A80               	xorlw	128
  9659  003A4C  6E3B               	movwf	btemp,c
  9660  003A4E  0EFD               	movlw	-3
  9661  003A50  50E3               	movf	plusw1,w,c
  9662  003A52  0A80               	xorlw	128
  9663  003A54  583B               	subwfb	btemp,w,c
  9664  003A56  A0D8               	btfss	status,0,c
  9665  003A58  D7CF               	goto	l7709
  9666  003A5A                     u4670:
  9667                           
  9668                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  9669                           ;stkvar	_i @ sp[(-17)+15]
  9670  003A5A  0EFE               	movlw	-2
  9671  003A5C  6AE3               	clrf	plusw1,c
  9672  003A5E  0EFF               	movlw	-1
  9673  003A60  6AE3               	clrf	plusw1,c
  9674                           
  9675                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  9676  003A62  D045               	goto	l7723
  9677  003A64                     l7717:
  9678                           
  9679                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  9680                           ;stkvar	_fp @ sp[(-17)+-2]
  9681  003A64  0EED               	movlw	-19
  9682  003A66  006F FF8F FFE6     	movff	plusw1,postinc1
  9683  003A6C  006F FF8F FFE6     	movff	plusw1,postinc1
  9684                           
  9685                           ;stkvar	_cp @ sp[(-19)+11]
  9686  003A72  0EF8               	movlw	-8
  9687  003A74  006F FF8F FFF6     	movff	plusw1,tblptrl
  9688  003A7A  0EF9               	movlw	-7
  9689  003A7C  006F FF8F FFF7     	movff	plusw1,tblptrh
  9690  003A82  0E00               	movlw	low (__smallconst shr (0+16))
  9691  003A84  6EF8               	movwf	tblptru,c
  9692  003A86  0E1F               	movlw	(high __ramtop+-1)
  9693  003A88  64F7               	cpfsgt	tblptrh,c
  9694  003A8A  D003               	bra	u4687
  9695  003A8C  0008               	tblrd		*
  9696  003A8E  50F5               	movf	tablat,w,c
  9697  003A90  D007               	bra	u4680
  9698  003A92                     u4687:
  9699  003A92  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9700  003A98  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9701  003A9E  50EF               	movf	indf0,w,c
  9702  003AA0                     u4680:
  9703  003AA0  6EE6               	movwf	postinc1,c
  9704  003AA2  0E00               	movlw	0
  9705  003AA4  6EE6               	movwf	postinc1,c
  9706  003AA6  EC0B  F025         	call	_fputc	;wreg free
  9707                           
  9708                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  9709                           ;stkvar	_cp @ sp[(-17)+11]
  9710  003AAA  0EFA               	movlw	-6
  9711  003AAC  50E3               	movf	plusw1,w,c
  9712  003AAE  0F01               	addlw	1
  9713  003AB0  6E3B               	movwf	btemp,c
  9714  003AB2  0EFA               	movlw	-6
  9715  003AB4  0060  F0EF  FFE3   	movff	btemp,plusw1
  9716  003ABA  6A3B               	clrf	btemp,c
  9717  003ABC  0EFB               	movlw	-5
  9718  003ABE  50E3               	movf	plusw1,w,c
  9719  003AC0  203B               	addwfc	btemp,w,c
  9720  003AC2  6E3B               	movwf	btemp,c
  9721  003AC4  0EFB               	movlw	-5
  9722  003AC6  0060  F0EF  FFE3   	movff	btemp,plusw1
  9723                           
  9724                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
  9725                           ;stkvar	_i @ sp[(-17)+15]
  9726  003ACC  0EFE               	movlw	-2
  9727  003ACE  50E3               	movf	plusw1,w,c
  9728  003AD0  0F01               	addlw	1
  9729  003AD2  6E3B               	movwf	btemp,c
  9730  003AD4  0EFE               	movlw	-2
  9731  003AD6  0060  F0EF  FFE3   	movff	btemp,plusw1
  9732  003ADC  6A3B               	clrf	btemp,c
  9733  003ADE  0EFF               	movlw	-1
  9734  003AE0  50E3               	movf	plusw1,w,c
  9735  003AE2  203B               	addwfc	btemp,w,c
  9736  003AE4  6E3B               	movwf	btemp,c
  9737  003AE6  0EFF               	movlw	-1
  9738  003AE8  0060  F0EF  FFE3   	movff	btemp,plusw1
  9739  003AEE                     l7723:
  9740                           
  9741                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  9742                           ;stkvar	_p @ sp[(-17)+9]
  9743                           ;stkvar	_i @ sp[(-17)+15]
  9744  003AEE  50E1               	movf	fsr1l,w,c
  9745  003AF0  0FFE               	addlw	-2
  9746  003AF2  6ED9               	movwf	fsr2l,c
  9747  003AF4  50E2               	movf	fsr1h,w,c
  9748  003AF6  6EDA               	movwf	fsr2h,c
  9749  003AF8  0EFF               	movlw	255
  9750  003AFA  22DA               	addwfc	fsr2h,f,c
  9751  003AFC  0EF8               	movlw	-8
  9752  003AFE  50E3               	movf	plusw1,w,c
  9753  003B00  5CDE               	subwf	postinc2,w,c
  9754  003B02  50DE               	movf	postinc2,w,c
  9755  003B04  0A80               	xorlw	128
  9756  003B06  6E3B               	movwf	btemp,c
  9757  003B08  0EF9               	movlw	-7
  9758  003B0A  50E3               	movf	plusw1,w,c
  9759  003B0C  0A80               	xorlw	128
  9760  003B0E  583B               	subwfb	btemp,w,c
  9761  003B10  A0D8               	btfss	status,0,c
  9762  003B12  D7A8               	goto	l7717
  9763                           
  9764                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  9765  003B14  B024               	btfsc	_flags,0,c
  9766  003B16  D01F               	goto	l7731
  9767  003B18  D031               	goto	u4710
  9768  003B1A                     l7727:
  9769                           
  9770                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  9771                           ;stkvar	_fp @ sp[(-17)+-2]
  9772  003B1A  0EED               	movlw	-19
  9773  003B1C  006F FF8F FFE6     	movff	plusw1,postinc1
  9774  003B22  006F FF8F FFE6     	movff	plusw1,postinc1
  9775  003B28  0E20               	movlw	32
  9776  003B2A  6EE6               	movwf	postinc1,c
  9777  003B2C  0E00               	movlw	0
  9778  003B2E  6EE6               	movwf	postinc1,c
  9779  003B30  EC0B  F025         	call	_fputc	;wreg free
  9780                           
  9781                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
  9782                           ;stkvar	_l @ sp[(-17)+7]
  9783  003B34  0EF6               	movlw	-10
  9784  003B36  50E3               	movf	plusw1,w,c
  9785  003B38  0F01               	addlw	1
  9786  003B3A  6E3B               	movwf	btemp,c
  9787  003B3C  0EF6               	movlw	-10
  9788  003B3E  0060  F0EF  FFE3   	movff	btemp,plusw1
  9789  003B44  6A3B               	clrf	btemp,c
  9790  003B46  0EF7               	movlw	-9
  9791  003B48  50E3               	movf	plusw1,w,c
  9792  003B4A  203B               	addwfc	btemp,w,c
  9793  003B4C  6E3B               	movwf	btemp,c
  9794  003B4E  0EF7               	movlw	-9
  9795  003B50  0060  F0EF  FFE3   	movff	btemp,plusw1
  9796  003B56                     l7731:
  9797                           
  9798                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  9799                           ;stkvar	_w @ sp[(-17)+13]
  9800                           ;stkvar	_l @ sp[(-17)+7]
  9801  003B56  50E1               	movf	fsr1l,w,c
  9802  003B58  0FF6               	addlw	-10
  9803  003B5A  6ED9               	movwf	fsr2l,c
  9804  003B5C  50E2               	movf	fsr1h,w,c
  9805  003B5E  6EDA               	movwf	fsr2h,c
  9806  003B60  0EFF               	movlw	255
  9807  003B62  22DA               	addwfc	fsr2h,f,c
  9808  003B64  0EFC               	movlw	-4
  9809  003B66  50E3               	movf	plusw1,w,c
  9810  003B68  5CDE               	subwf	postinc2,w,c
  9811  003B6A  50DE               	movf	postinc2,w,c
  9812  003B6C  0A80               	xorlw	128
  9813  003B6E  6E3B               	movwf	btemp,c
  9814  003B70  0EFD               	movlw	-3
  9815  003B72  50E3               	movf	plusw1,w,c
  9816  003B74  0A80               	xorlw	128
  9817  003B76  583B               	subwfb	btemp,w,c
  9818  003B78  A0D8               	btfss	status,0,c
  9819  003B7A  D7CF               	goto	l7727
  9820  003B7C                     u4710:
  9821                           
  9822                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
  9823                           ;stkvar	_l @ sp[(-17)+7]
  9824  003B7C  0EF6               	movlw	-10
  9825  003B7E  006F FF8C  F03B    	movff	plusw1,btemp
  9826  003B84  0EF7               	movlw	-9
  9827  003B86  006F FF8C  F03C    	movff	plusw1,btemp+1
  9828                           
  9829                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  9830  003B8C  0EEB               	movlw	235
  9831  003B8E  26E1               	addwf	fsr1l,f,c
  9832  003B90  0EFF               	movlw	255
  9833  003B92  22E2               	addwfc	fsr1h,f,c
  9834  003B94  0012               	return		;funcret
  9835  003B96                     __end_of_stoa:
  9836                           	opt callstack 0
  9837                           
  9838 ;; *************** function _dtoa *****************
  9839 ;; Defined at:
  9840 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9841 ;; Parameters:    Size  Location     Type
  9842 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9843 ;;		 -> f(5), NULL(0), 
  9844 ;;  d               8  [STACK] long long 
  9845 ;; Auto vars:     Size  Location     Type
  9846 ;;  n               8  [STACK] long long 
  9847 ;;  i               2  [STACK] int 
  9848 ;;  s               2  [STACK] int 
  9849 ;;  w               2  [STACK] int 
  9850 ;;  p               2  [STACK] int 
  9851 ;; Return value:  Size  Location     Type
  9852 ;;                  2  [STACK] int 
  9853 ;; Registers used:
  9854 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  9855 ;; Tracked objects:
  9856 ;;		On entry : 0/0
  9857 ;;		On exit  : 0/0
  9858 ;;		Unchanged: 0/0
  9859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9864 ;;Total ram usage:        0 bytes
  9865 ;; Hardware stack levels used:    1
  9866 ;; Hardware stack levels required when called:    8
  9867 ;; This function calls:
  9868 ;;		___aodiv
  9869 ;;		___aomod
  9870 ;;		_abs
  9871 ;;		_pad
  9872 ;; This function is called by:
  9873 ;;		_vfpfcnvrt
  9874 ;; This function uses a reentrant model
  9875 ;;
  9876                           
  9877                           	psect	text42
  9878  002A2E                     __ptext42:
  9879                           	opt callstack 0
  9880  002A2E                     _dtoa:
  9881                           	opt callstack 0
  9882                           
  9883                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  9884  002A2E  0E12               	movlw	18
  9885  002A30  26E1               	addwf	fsr1l,f,c
  9886  002A32  0E00               	movlw	0
  9887  002A34  22E2               	addwfc	fsr1h,f,c
  9888                           
  9889                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  9890                           ;stkvar	_d @ sp[(-18)+-10]
  9891                           
  9892                           ;incstack = 0
  9893  002A36  0EE4               	movlw	228
  9894  002A38  24E1               	addwf	fsr1l,w,c
  9895  002A3A  6ED9               	movwf	fsr2l,c
  9896  002A3C  0EFF               	movlw	255
  9897  002A3E  20E2               	addwfc	fsr1h,w,c
  9898  002A40  6EDA               	movwf	fsr2h,c
  9899                           
  9900                           ;stkvar	_n @ sp[(-18)+2]
  9901  002A42  0E08               	movlw	8
  9902  002A44  6E3B               	movwf	btemp,c
  9903  002A46  0EF0               	movlw	-16
  9904  002A48                     us445999:
  9905  002A48  006F FF7B FFE3     	movff	postinc2,plusw1
  9906  002A4E  28E8               	incf	wreg,w,c
  9907  002A50  2E3B               	decfsz	btemp,f,c
  9908  002A52  D7FA               	bra	us445999
  9909                           
  9910                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  9911                           ;stkvar	_n @ sp[(-18)+2]
  9912  002A54  0EF7               	movlw	-9
  9913  002A56  AEE3               	btfss	plusw1,7,c
  9914  002A58  D002               	goto	u4460
  9915  002A5A  0E01               	movlw	1
  9916  002A5C  D001               	goto	u4470
  9917  002A5E                     u4460:
  9918  002A5E  0E00               	movlw	0
  9919  002A60                     u4470:
  9920  002A60  6E45               	movwf	btemp+10,c
  9921  002A62  6A46               	clrf	btemp+11,c
  9922                           
  9923                           ;stkvar	_s @ sp[(-18)+12]
  9924  002A64  0EFA               	movlw	-6
  9925  002A66  0060  F117  FFE3   	movff	btemp+10,plusw1
  9926  002A6C  0EFB               	movlw	-5
  9927  002A6E  0060  F11B  FFE3   	movff	btemp+11,plusw1
  9928                           
  9929                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  9930                           ;stkvar	_s @ sp[(-18)+12]
  9931  002A74  0EFA               	movlw	-6
  9932  002A76  006F FF8C  F03B    	movff	plusw1,btemp
  9933  002A7C  0EFB               	movlw	-5
  9934  002A7E  50E3               	movf	plusw1,w,c
  9935  002A80  103B               	iorwf	btemp,w,c
  9936  002A82  B4D8               	btfsc	status,2,c
  9937  002A84  D025               	goto	u4490
  9938                           
  9939                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  9940                           ;stkvar	_n @ sp[(-18)+2]
  9941                           ;stkvar	_n @ sp[(-18)+2]
  9942  002A86  0EF0               	movlw	-16
  9943  002A88  6CE3               	negf	plusw1,c
  9944  002A8A  0EF1               	movlw	-15
  9945  002A8C  1EE3               	comf	plusw1,f,c
  9946  002A8E  0EF2               	movlw	-14
  9947  002A90  1EE3               	comf	plusw1,f,c
  9948  002A92  0EF3               	movlw	-13
  9949  002A94  1EE3               	comf	plusw1,f,c
  9950  002A96  0EF4               	movlw	-12
  9951  002A98  1EE3               	comf	plusw1,f,c
  9952  002A9A  0EF5               	movlw	-11
  9953  002A9C  1EE3               	comf	plusw1,f,c
  9954  002A9E  0EF6               	movlw	-10
  9955  002AA0  1EE3               	comf	plusw1,f,c
  9956  002AA2  0EF7               	movlw	-9
  9957  002AA4  1EE3               	comf	plusw1,f,c
  9958  002AA6  E314               	bnc	u4490
  9959  002AA8  0EF1               	movlw	-15
  9960  002AAA  2AE3               	incf	plusw1,f,c
  9961  002AAC  E311               	bnc	u4490
  9962  002AAE  0EF2               	movlw	-14
  9963  002AB0  2AE3               	incf	plusw1,f,c
  9964  002AB2  E30E               	bnc	u4490
  9965  002AB4  0EF3               	movlw	-13
  9966  002AB6  2AE3               	incf	plusw1,f,c
  9967  002AB8  E30B               	bnc	u4490
  9968  002ABA  0EF4               	movlw	-12
  9969  002ABC  2AE3               	incf	plusw1,f,c
  9970  002ABE  E308               	bnc	u4490
  9971  002AC0  0EF5               	movlw	-11
  9972  002AC2  2AE3               	incf	plusw1,f,c
  9973  002AC4  E305               	bnc	u4490
  9974  002AC6  0EF6               	movlw	-10
  9975  002AC8  2AE3               	incf	plusw1,f,c
  9976  002ACA  E302               	bnc	u4490
  9977  002ACC  0EF7               	movlw	-9
  9978  002ACE  2AE3               	incf	plusw1,f,c
  9979  002AD0                     u4490:
  9980                           
  9981                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  9982  002AD0  AE23               	btfss	_prec+1,7,c
  9983                           
  9984                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  9985  002AD2  9224               	bcf	_flags,1,c
  9986                           
  9987                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  9988  002AD4  BE23               	btfsc	_prec+1,7,c
  9989  002AD6  D005               	goto	u4510
  9990  002AD8  5023               	movf	_prec+1,w,c
  9991  002ADA  E110               	bnz	l7635
  9992  002ADC  0422               	decf	_prec,w,c
  9993  002ADE  B0D8               	btfsc	status,0,c
  9994  002AE0  D00D               	goto	l7635
  9995  002AE2                     u4510:
  9996  002AE2  0E01               	movlw	1
  9997  002AE4  6E45               	movwf	btemp+10,c
  9998  002AE6  0E00               	movlw	0
  9999  002AE8  6E46               	movwf	btemp+11,c
 10000                           
 10001                           ;stkvar	_p @ sp[(-18)+16]
 10002  002AEA  0EFE               	movlw	-2
 10003  002AEC  0060  F117  FFE3   	movff	btemp+10,plusw1
 10004  002AF2  0EFF               	movlw	-1
 10005  002AF4  0060  F11B  FFE3   	movff	btemp+11,plusw1
 10006  002AFA  D008               	goto	l1793
 10007  002AFC                     l7635:
 10008                           
 10009                           ;stkvar	_p @ sp[(-18)+16]
 10010  002AFC  0EFE               	movlw	-2
 10011  002AFE  0060  F08B  FFE3   	movff	_prec,plusw1
 10012  002B04  0EFF               	movlw	-1
 10013  002B06  0060  F08F  FFE3   	movff	_prec+1,plusw1
 10014  002B0C                     l1793:
 10015                           
 10016                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
 10017                           ;stkvar	_w @ sp[(-18)+14]
 10018  002B0C  0EFC               	movlw	-4
 10019  002B0E  0060  F083  FFE3   	movff	_width,plusw1
 10020  002B14  0EFD               	movlw	-3
 10021  002B16  0060  F087  FFE3   	movff	_width+1,plusw1
 10022                           
 10023                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 10024                           ;stkvar	_s @ sp[(-18)+12]
 10025  002B1C  0EFA               	movlw	-6
 10026  002B1E  006F FF8C  F03B    	movff	plusw1,btemp
 10027  002B24  0EFB               	movlw	-5
 10028  002B26  50E3               	movf	plusw1,w,c
 10029  002B28  103B               	iorwf	btemp,w,c
 10030  002B2A  A4D8               	btfss	status,2,c
 10031  002B2C  D002               	goto	u4530
 10032  002B2E  A424               	btfss	_flags,2,c
 10033  002B30  D00A               	goto	l7643
 10034  002B32                     u4530:
 10035                           
 10036                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
 10037                           ;stkvar	_w @ sp[(-18)+14]
 10038  002B32  50E1               	movf	fsr1l,w,c
 10039  002B34  0FFC               	addlw	-4
 10040  002B36  6ED9               	movwf	fsr2l,c
 10041  002B38  50E2               	movf	fsr1h,w,c
 10042  002B3A  6EDA               	movwf	fsr2h,c
 10043  002B3C  0EFF               	movlw	255
 10044  002B3E  22DA               	addwfc	fsr2h,f,c
 10045  002B40  06DE               	decf	postinc2,f,c
 10046  002B42  0E00               	movlw	0
 10047  002B44  5ADD               	subwfb	postdec2,f,c
 10048  002B46                     l7643:
 10049                           
 10050                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 10051  002B46  0E1F               	movlw	31
 10052  002B48  6E45               	movwf	btemp+10,c
 10053  002B4A  0E00               	movlw	0
 10054  002B4C  6E46               	movwf	btemp+11,c
 10055                           
 10056                           ;stkvar	_i @ sp[(-18)+10]
 10057  002B4E  0EF8               	movlw	-8
 10058  002B50  0060  F117  FFE3   	movff	btemp+10,plusw1
 10059  002B56  0EF9               	movlw	-7
 10060  002B58  0060  F11B  FFE3   	movff	btemp+11,plusw1
 10061                           
 10062                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 10063  002B5E  0101               	movlb	1	; () banked
 10064  002B60  6BCE               	clrf	(_dbuf+31)& (0+255),b
 10065                           
 10066                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10067  002B62  D109               	goto	l7657
 10068  002B64                     l7647:
 10069                           
 10070                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
 10071                           ;stkvar	_i @ sp[(-18)+10]
 10072  002B64  50E1               	movf	fsr1l,w,c
 10073  002B66  0FF8               	addlw	-8
 10074  002B68  6ED9               	movwf	fsr2l,c
 10075  002B6A  50E2               	movf	fsr1h,w,c
 10076  002B6C  6EDA               	movwf	fsr2h,c
 10077  002B6E  0EFF               	movlw	255
 10078  002B70  22DA               	addwfc	fsr2h,f,c
 10079  002B72  06DE               	decf	postinc2,f,c
 10080  002B74  0E00               	movlw	0
 10081  002B76  5ADD               	subwfb	postdec2,f,c
 10082                           
 10083                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 10084  002B78  0E0A               	movlw	10
 10085  002B7A  6EE6               	movwf	postinc1,c
 10086  002B7C  0E00               	movlw	0
 10087  002B7E  6EE6               	movwf	postinc1,c
 10088  002B80  0E00               	movlw	0
 10089  002B82  6EE6               	movwf	postinc1,c
 10090  002B84  0E00               	movlw	0
 10091  002B86  6EE6               	movwf	postinc1,c
 10092  002B88  0E00               	movlw	0
 10093  002B8A  6EE6               	movwf	postinc1,c
 10094  002B8C  0E00               	movlw	0
 10095  002B8E  6EE6               	movwf	postinc1,c
 10096  002B90  0E00               	movlw	0
 10097  002B92  6EE6               	movwf	postinc1,c
 10098  002B94  0E00               	movlw	0
 10099  002B96  6EE6               	movwf	postinc1,c
 10100                           
 10101                           ;stkvar	_n @ sp[(-26)+2]
 10102  002B98  50E1               	movf	fsr1l,w,c
 10103  002B9A  0FE8               	addlw	-24
 10104  002B9C  6ED9               	movwf	fsr2l,c
 10105  002B9E  50E2               	movf	fsr1h,w,c
 10106  002BA0  6EDA               	movwf	fsr2h,c
 10107  002BA2  0EFF               	movlw	255
 10108  002BA4  22DA               	addwfc	fsr2h,f,c
 10109  002BA6  006F FF7B FFE6     	movff	postinc2,postinc1
 10110  002BAC  006F FF7B FFE6     	movff	postinc2,postinc1
 10111  002BB2  006F FF7B FFE6     	movff	postinc2,postinc1
 10112  002BB8  006F FF7B FFE6     	movff	postinc2,postinc1
 10113  002BBE  006F FF7B FFE6     	movff	postinc2,postinc1
 10114  002BC4  006F FF7B FFE6     	movff	postinc2,postinc1
 10115  002BCA  006F FF7B FFE6     	movff	postinc2,postinc1
 10116  002BD0  006F FF7B FFE6     	movff	postinc2,postinc1
 10117  002BD6  EC99  F022         	call	___aomod	;wreg free
 10118  002BDA  52E5               	movf	postdec1,f,c
 10119  002BDC  006F FF9C  F052    	movff	indf1,btemp+23
 10120  002BE2  52E5               	movf	postdec1,f,c
 10121  002BE4  006F FF9C  F051    	movff	indf1,btemp+22
 10122  002BEA  52E5               	movf	postdec1,f,c
 10123  002BEC  006F FF9C  F050    	movff	indf1,btemp+21
 10124  002BF2  52E5               	movf	postdec1,f,c
 10125  002BF4  006F FF9C  F04F    	movff	indf1,btemp+20
 10126  002BFA  52E5               	movf	postdec1,f,c
 10127  002BFC  006F FF9C  F04E    	movff	indf1,btemp+19
 10128  002C02  52E5               	movf	postdec1,f,c
 10129  002C04  006F FF9C  F04D    	movff	indf1,btemp+18
 10130  002C0A  52E5               	movf	postdec1,f,c
 10131  002C0C  006F FF9C  F04C    	movff	indf1,btemp+17
 10132  002C12  52E5               	movf	postdec1,f,c
 10133  002C14  006F FF9C  F04B    	movff	indf1,btemp+16
 10134  002C1A  0EF8               	movlw	248
 10135  002C1C  26E1               	addwf	fsr1l,f,c
 10136  002C1E  0EFF               	movlw	255
 10137  002C20  22E2               	addwfc	fsr1h,f,c
 10138  002C22  0060  F12C  F045   	movff	btemp+16,btemp+10
 10139  002C28  0060  F130  F046   	movff	btemp+17,btemp+11
 10140  002C2E  0060  F117  FFE6   	movff	btemp+10,postinc1
 10141  002C34  0060  F11B  FFE6   	movff	btemp+11,postinc1
 10142  002C3A  ECC6  F02B         	call	_abs	;wreg free
 10143  002C3E  0E30               	movlw	48
 10144  002C40  263B               	addwf	btemp,f,c
 10145                           
 10146                           ;stkvar	_i @ sp[(-18)+10]
 10147  002C42  0EF8               	movlw	-8
 10148  002C44  006F FF8C  F045    	movff	plusw1,btemp+10
 10149  002C4A  0EF9               	movlw	-7
 10150  002C4C  006F FF8C  F046    	movff	plusw1,btemp+11
 10151  002C52  0EAF               	movlw	low _dbuf
 10152  002C54  2445               	addwf	btemp+10,w,c
 10153  002C56  6ED9               	movwf	fsr2l,c
 10154  002C58  0E01               	movlw	high _dbuf
 10155  002C5A  2046               	addwfc	btemp+11,w,c
 10156  002C5C  6EDA               	movwf	fsr2h,c
 10157  002C5E  0060  F0EF  FFDF   	movff	btemp,indf2
 10158                           
 10159                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
 10160                           ;stkvar	_p @ sp[(-18)+16]
 10161  002C64  50E1               	movf	fsr1l,w,c
 10162  002C66  0FFE               	addlw	-2
 10163  002C68  6ED9               	movwf	fsr2l,c
 10164  002C6A  50E2               	movf	fsr1h,w,c
 10165  002C6C  6EDA               	movwf	fsr2h,c
 10166  002C6E  0EFF               	movlw	255
 10167  002C70  22DA               	addwfc	fsr2h,f,c
 10168  002C72  06DE               	decf	postinc2,f,c
 10169  002C74  0E00               	movlw	0
 10170  002C76  5ADD               	subwfb	postdec2,f,c
 10171                           
 10172                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
 10173                           ;stkvar	_w @ sp[(-18)+14]
 10174  002C78  50E1               	movf	fsr1l,w,c
 10175  002C7A  0FFC               	addlw	-4
 10176  002C7C  6ED9               	movwf	fsr2l,c
 10177  002C7E  50E2               	movf	fsr1h,w,c
 10178  002C80  6EDA               	movwf	fsr2h,c
 10179  002C82  0EFF               	movlw	255
 10180  002C84  22DA               	addwfc	fsr2h,f,c
 10181  002C86  06DE               	decf	postinc2,f,c
 10182  002C88  0E00               	movlw	0
 10183  002C8A  5ADD               	subwfb	postdec2,f,c
 10184                           
 10185                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 10186  002C8C  0E0A               	movlw	10
 10187  002C8E  6EE6               	movwf	postinc1,c
 10188  002C90  0E00               	movlw	0
 10189  002C92  6EE6               	movwf	postinc1,c
 10190  002C94  0E00               	movlw	0
 10191  002C96  6EE6               	movwf	postinc1,c
 10192  002C98  0E00               	movlw	0
 10193  002C9A  6EE6               	movwf	postinc1,c
 10194  002C9C  0E00               	movlw	0
 10195  002C9E  6EE6               	movwf	postinc1,c
 10196  002CA0  0E00               	movlw	0
 10197  002CA2  6EE6               	movwf	postinc1,c
 10198  002CA4  0E00               	movlw	0
 10199  002CA6  6EE6               	movwf	postinc1,c
 10200  002CA8  0E00               	movlw	0
 10201  002CAA  6EE6               	movwf	postinc1,c
 10202                           
 10203                           ;stkvar	_n @ sp[(-26)+2]
 10204  002CAC  50E1               	movf	fsr1l,w,c
 10205  002CAE  0FE8               	addlw	-24
 10206  002CB0  6ED9               	movwf	fsr2l,c
 10207  002CB2  50E2               	movf	fsr1h,w,c
 10208  002CB4  6EDA               	movwf	fsr2h,c
 10209  002CB6  0EFF               	movlw	255
 10210  002CB8  22DA               	addwfc	fsr2h,f,c
 10211  002CBA  006F FF7B FFE6     	movff	postinc2,postinc1
 10212  002CC0  006F FF7B FFE6     	movff	postinc2,postinc1
 10213  002CC6  006F FF7B FFE6     	movff	postinc2,postinc1
 10214  002CCC  006F FF7B FFE6     	movff	postinc2,postinc1
 10215  002CD2  006F FF7B FFE6     	movff	postinc2,postinc1
 10216  002CD8  006F FF7B FFE6     	movff	postinc2,postinc1
 10217  002CDE  006F FF7B FFE6     	movff	postinc2,postinc1
 10218  002CE4  006F FF7B FFE6     	movff	postinc2,postinc1
 10219  002CEA  ECCB  F01D         	call	___aodiv	;wreg free
 10220  002CEE  52E5               	movf	postdec1,f,c
 10221  002CF0  006F FF9C  F052    	movff	indf1,btemp+23
 10222  002CF6  52E5               	movf	postdec1,f,c
 10223  002CF8  006F FF9C  F051    	movff	indf1,btemp+22
 10224  002CFE  52E5               	movf	postdec1,f,c
 10225  002D00  006F FF9C  F050    	movff	indf1,btemp+21
 10226  002D06  52E5               	movf	postdec1,f,c
 10227  002D08  006F FF9C  F04F    	movff	indf1,btemp+20
 10228  002D0E  52E5               	movf	postdec1,f,c
 10229  002D10  006F FF9C  F04E    	movff	indf1,btemp+19
 10230  002D16  52E5               	movf	postdec1,f,c
 10231  002D18  006F FF9C  F04D    	movff	indf1,btemp+18
 10232  002D1E  52E5               	movf	postdec1,f,c
 10233  002D20  006F FF9C  F04C    	movff	indf1,btemp+17
 10234  002D26  52E5               	movf	postdec1,f,c
 10235  002D28  006F FF9C  F04B    	movff	indf1,btemp+16
 10236  002D2E  0EF8               	movlw	248
 10237  002D30  26E1               	addwf	fsr1l,f,c
 10238  002D32  0EFF               	movlw	255
 10239  002D34  22E2               	addwfc	fsr1h,f,c
 10240                           
 10241                           ;stkvar	_n @ sp[(-18)+2]
 10242  002D36  0EF0               	movlw	-16
 10243  002D38  0060  F12F  FFE3   	movff	btemp+16,plusw1
 10244  002D3E  0EF1               	movlw	-15
 10245  002D40  0060  F133  FFE3   	movff	btemp+17,plusw1
 10246  002D46  0EF2               	movlw	-14
 10247  002D48  0060  F137  FFE3   	movff	btemp+18,plusw1
 10248  002D4E  0EF3               	movlw	-13
 10249  002D50  0060  F13B  FFE3   	movff	btemp+19,plusw1
 10250  002D56  0EF4               	movlw	-12
 10251  002D58  0060  F13F  FFE3   	movff	btemp+20,plusw1
 10252  002D5E  0EF5               	movlw	-11
 10253  002D60  0060  F143  FFE3   	movff	btemp+21,plusw1
 10254  002D66  0EF6               	movlw	-10
 10255  002D68  0060  F147  FFE3   	movff	btemp+22,plusw1
 10256  002D6E  0EF7               	movlw	-9
 10257  002D70  0060  F14B  FFE3   	movff	btemp+23,plusw1
 10258  002D76                     l7657:
 10259                           
 10260                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10261                           ;stkvar	_i @ sp[(-18)+10]
 10262  002D76  0EF9               	movlw	-7
 10263  002D78  BEE3               	btfsc	plusw1,7,c
 10264  002D7A  D036               	goto	u4580
 10265  002D7C  0EF9               	movlw	-7
 10266  002D7E  50E3               	movf	plusw1,w,c
 10267  002D80  E104               	bnz	u4540
 10268  002D82  0EF8               	movlw	-8
 10269  002D84  04E3               	decf	plusw1,w,c
 10270  002D86  A0D8               	btfss	status,0,c
 10271  002D88  D02F               	goto	u4580
 10272  002D8A                     u4540:
 10273                           
 10274                           ;stkvar	_n @ sp[(-18)+2]
 10275  002D8A  0EF0               	movlw	-16
 10276  002D8C  50E3               	movf	plusw1,w,c
 10277  002D8E  E115               	bnz	u4551
 10278  002D90  0EF1               	movlw	-15
 10279  002D92  50E3               	movf	plusw1,w,c
 10280  002D94  E112               	bnz	u4551
 10281  002D96  0EF2               	movlw	-14
 10282  002D98  50E3               	movf	plusw1,w,c
 10283  002D9A  E10F               	bnz	u4551
 10284  002D9C  0EF3               	movlw	-13
 10285  002D9E  50E3               	movf	plusw1,w,c
 10286  002DA0  E10C               	bnz	u4551
 10287  002DA2  0EF4               	movlw	-12
 10288  002DA4  50E3               	movf	plusw1,w,c
 10289  002DA6  E109               	bnz	u4551
 10290  002DA8  0EF5               	movlw	-11
 10291  002DAA  50E3               	movf	plusw1,w,c
 10292  002DAC  E106               	bnz	u4551
 10293  002DAE  0EF6               	movlw	-10
 10294  002DB0  50E3               	movf	plusw1,w,c
 10295  002DB2  E103               	bnz	u4551
 10296  002DB4  0EF7               	movlw	-9
 10297  002DB6  50E3               	movf	plusw1,w,c
 10298  002DB8  A4D8               	btfss	status,2,c
 10299  002DBA                     u4551:
 10300  002DBA  D6D4               	goto	l7647
 10301                           
 10302                           ;stkvar	_p @ sp[(-18)+16]
 10303  002DBC  0EFF               	movlw	-1
 10304  002DBE  BEE3               	btfsc	plusw1,7,c
 10305  002DC0  D007               	goto	u4560
 10306  002DC2  0EFF               	movlw	-1
 10307  002DC4  50E3               	movf	plusw1,w,c
 10308  002DC6  E103               	bnz	u4561
 10309  002DC8  0EFE               	movlw	-2
 10310  002DCA  04E3               	decf	plusw1,w,c
 10311  002DCC  B0D8               	btfsc	status,0,c
 10312  002DCE                     u4561:
 10313  002DCE  D6CA               	goto	l7647
 10314  002DD0                     u4560:
 10315                           
 10316                           ;stkvar	_w @ sp[(-18)+14]
 10317  002DD0  0EFD               	movlw	-3
 10318  002DD2  BEE3               	btfsc	plusw1,7,c
 10319  002DD4  D009               	goto	u4580
 10320  002DD6  0EFD               	movlw	-3
 10321  002DD8  50E3               	movf	plusw1,w,c
 10322  002DDA  E104               	bnz	u4570
 10323  002DDC  0EFC               	movlw	-4
 10324  002DDE  04E3               	decf	plusw1,w,c
 10325  002DE0  A0D8               	btfss	status,0,c
 10326  002DE2  D002               	goto	u4580
 10327  002DE4                     u4570:
 10328  002DE4  B224               	btfsc	_flags,1,c
 10329  002DE6  D6BE               	goto	l7647
 10330  002DE8                     u4580:
 10331                           
 10332                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 10333                           ;stkvar	_s @ sp[(-18)+12]
 10334  002DE8  0EFA               	movlw	-6
 10335  002DEA  006F FF8C  F03B    	movff	plusw1,btemp
 10336  002DF0  0EFB               	movlw	-5
 10337  002DF2  50E3               	movf	plusw1,w,c
 10338  002DF4  103B               	iorwf	btemp,w,c
 10339  002DF6  A4D8               	btfss	status,2,c
 10340  002DF8  D002               	goto	u4600
 10341  002DFA  A424               	btfss	_flags,2,c
 10342  002DFC  D033               	goto	l7681
 10343  002DFE                     u4600:
 10344                           
 10345                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
 10346                           ;stkvar	_i @ sp[(-18)+10]
 10347  002DFE  50E1               	movf	fsr1l,w,c
 10348  002E00  0FF8               	addlw	-8
 10349  002E02  6ED9               	movwf	fsr2l,c
 10350  002E04  50E2               	movf	fsr1h,w,c
 10351  002E06  6EDA               	movwf	fsr2h,c
 10352  002E08  0EFF               	movlw	255
 10353  002E0A  22DA               	addwfc	fsr2h,f,c
 10354  002E0C  06DE               	decf	postinc2,f,c
 10355  002E0E  0E00               	movlw	0
 10356  002E10  5ADD               	subwfb	postdec2,f,c
 10357                           
 10358                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 10359                           ;stkvar	_s @ sp[(-18)+12]
 10360  002E12  0EFA               	movlw	-6
 10361  002E14  006F FF8C  F03B    	movff	plusw1,btemp
 10362  002E1A  0EFB               	movlw	-5
 10363  002E1C  50E3               	movf	plusw1,w,c
 10364  002E1E  103B               	iorwf	btemp,w,c
 10365  002E20  A4D8               	btfss	status,2,c
 10366  002E22  D002               	goto	l7677
 10367  002E24  0E2B               	movlw	43
 10368  002E26  D001               	goto	L24
 10369  002E28                     l7677:
 10370  002E28  0E2D               	movlw	45
 10371  002E2A                     L24:
 10372  002E2A  6E45               	movwf	btemp+10,c
 10373  002E2C  0E00               	movlw	0
 10374  002E2E  6E46               	movwf	btemp+11,c
 10375                           
 10376                           ;stkvar	_dtoa$3806 @ sp[(-18)+0]
 10377  002E30  0EEE               	movlw	-18
 10378  002E32  0060  F117  FFE3   	movff	btemp+10,plusw1
 10379  002E38  0EEF               	movlw	-17
 10380  002E3A  0060  F11B  FFE3   	movff	btemp+11,plusw1
 10381                           
 10382                           ;stkvar	_dtoa$3806 @ sp[(-18)+0]
 10383                           ;stkvar	_i @ sp[(-18)+10]
 10384  002E40  0EF8               	movlw	-8
 10385  002E42  006F FF8C  F045    	movff	plusw1,btemp+10
 10386  002E48  0EF9               	movlw	-7
 10387  002E4A  006F FF8C  F046    	movff	plusw1,btemp+11
 10388  002E50  0EAF               	movlw	low _dbuf
 10389  002E52  2445               	addwf	btemp+10,w,c
 10390  002E54  6ED9               	movwf	fsr2l,c
 10391  002E56  0E01               	movlw	high _dbuf
 10392  002E58  2046               	addwfc	btemp+11,w,c
 10393  002E5A  6EDA               	movwf	fsr2h,c
 10394  002E5C  0EEE               	movlw	-18
 10395  002E5E  006F FF8F FFDF     	movff	plusw1,indf2
 10396  002E64                     l7681:
 10397                           
 10398                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 10399                           ;stkvar	_w @ sp[(-18)+14]
 10400  002E64  0EFC               	movlw	-4
 10401  002E66  006F FF8F FFE6     	movff	plusw1,postinc1
 10402  002E6C  006F FF8F FFE6     	movff	plusw1,postinc1
 10403                           
 10404                           ;stkvar	_i @ sp[(-20)+10]
 10405  002E72  0EAF               	movlw	low _dbuf
 10406  002E74  6E45               	movwf	btemp+10,c
 10407  002E76  0E01               	movlw	high _dbuf
 10408  002E78  6E46               	movwf	btemp+11,c
 10409  002E7A  0EF6               	movlw	-10
 10410  002E7C  50E3               	movf	plusw1,w,c
 10411  002E7E  2645               	addwf	btemp+10,f,c
 10412  002E80  0EF7               	movlw	-9
 10413  002E82  50E3               	movf	plusw1,w,c
 10414  002E84  2246               	addwfc	btemp+11,f,c
 10415  002E86  0060  F117  FFE6   	movff	btemp+10,postinc1
 10416  002E8C  0060  F11B  FFE6   	movff	btemp+11,postinc1
 10417                           
 10418                           ;stkvar	_fp @ sp[(-22)+-2]
 10419  002E92  0EE8               	movlw	-24
 10420  002E94  006F FF8F FFE6     	movff	plusw1,postinc1
 10421  002E9A  006F FF8F FFE6     	movff	plusw1,postinc1
 10422  002EA0  EC81  F024         	call	_pad	;wreg free
 10423                           
 10424                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 10425  002EA4  0EE4               	movlw	228
 10426  002EA6  26E1               	addwf	fsr1l,f,c
 10427  002EA8  0EFF               	movlw	255
 10428  002EAA  22E2               	addwfc	fsr1h,f,c
 10429  002EAC  0012               	return		;funcret
 10430  002EAE                     __end_of_dtoa:
 10431                           	opt callstack 0
 10432                           
 10433 ;; *************** function _abs *****************
 10434 ;; Defined at:
 10435 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
 10436 ;; Parameters:    Size  Location     Type
 10437 ;;  a               2  [STACK] int 
 10438 ;; Auto vars:     Size  Location     Type
 10439 ;;		None
 10440 ;; Return value:  Size  Location     Type
 10441 ;;                  2  [STACK] int 
 10442 ;; Registers used:
 10443 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 10444 ;; Tracked objects:
 10445 ;;		On entry : 0/1
 10446 ;;		On exit  : 0/0
 10447 ;;		Unchanged: 0/0
 10448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10453 ;;Total ram usage:        0 bytes
 10454 ;; Hardware stack levels used:    1
 10455 ;; Hardware stack levels required when called:    3
 10456 ;; This function calls:
 10457 ;;		Nothing
 10458 ;; This function is called by:
 10459 ;;		_dtoa
 10460 ;; This function uses a reentrant model
 10461 ;;
 10462                           
 10463                           	psect	text43
 10464  00578C                     __ptext43:
 10465                           	opt callstack 0
 10466  00578C                     _abs:
 10467                           	opt callstack 23
 10468                           
 10469                           ;stkvar	_a @ sp[(0)+-2]
 10470                           
 10471                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10472                           ;incstack = 0
 10473  00578C  0EFF               	movlw	-1
 10474  00578E  BEE3               	btfsc	plusw1,7,c
 10475  005790  D007               	goto	u2360
 10476  005792  0EFF               	movlw	-1
 10477  005794  50E3               	movf	plusw1,w,c
 10478  005796  E112               	bnz	l5313
 10479  005798  0EFE               	movlw	-2
 10480  00579A  04E3               	decf	plusw1,w,c
 10481  00579C  B0D8               	btfsc	status,0,c
 10482  00579E  D00E               	goto	l5313
 10483  0057A0                     u2360:
 10484                           
 10485                           ;stkvar	_a @ sp[(0)+-2]
 10486  0057A0  0EFE               	movlw	-2
 10487  0057A2  006F FF8C  F03B    	movff	plusw1,btemp
 10488  0057A8  1E3B               	comf	btemp,f,c
 10489  0057AA  0EFF               	movlw	-1
 10490  0057AC  006F FF8C  F03C    	movff	plusw1,btemp+1
 10491  0057B2  1E3C               	comf	btemp+1,f,c
 10492  0057B4  2A3B               	incf	btemp,f,c
 10493  0057B6  B4D8               	btfsc	status,2,c
 10494  0057B8  2A3C               	incf	btemp+1,f,c
 10495  0057BA  D008               	goto	l2534
 10496  0057BC                     l5313:
 10497                           
 10498                           ;stkvar	_a @ sp[(0)+-2]
 10499  0057BC  0EFE               	movlw	-2
 10500  0057BE  006F FF8C  F03B    	movff	plusw1,btemp
 10501  0057C4  0EFF               	movlw	-1
 10502  0057C6  006F FF8C  F03C    	movff	plusw1,btemp+1
 10503  0057CC                     l2534:
 10504                           
 10505                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 10506  0057CC  52E5               	movf	postdec1,f,c
 10507  0057CE  52E5               	movf	postdec1,f,c
 10508  0057D0  0012               	return		;funcret
 10509  0057D2                     __end_of_abs:
 10510                           	opt callstack 0
 10511                           
 10512 ;; *************** function ___aomod *****************
 10513 ;; Defined at:
 10514 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
 10515 ;; Parameters:    Size  Location     Type
 10516 ;;  dividend        8  [STACK] long long 
 10517 ;;  divisor         8  [STACK] long long 
 10518 ;; Auto vars:     Size  Location     Type
 10519 ;;  sign            1  [STACK] unsigned char 
 10520 ;;  counter         1  [STACK] unsigned char 
 10521 ;; Return value:  Size  Location     Type
 10522 ;;                  8  [STACK] long long 
 10523 ;; Registers used:
 10524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 10525 ;; Tracked objects:
 10526 ;;		On entry : 0/1
 10527 ;;		On exit  : 0/0
 10528 ;;		Unchanged: 0/0
 10529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10534 ;;Total ram usage:        0 bytes
 10535 ;; Hardware stack levels used:    1
 10536 ;; Hardware stack levels required when called:    3
 10537 ;; This function calls:
 10538 ;;		Nothing
 10539 ;; This function is called by:
 10540 ;;		_dtoa
 10541 ;; This function uses a reentrant model
 10542 ;;
 10543                           
 10544                           	psect	text44
 10545  004532                     __ptext44:
 10546                           	opt callstack 0
 10547  004532                     ___aomod:
 10548                           	opt callstack 0
 10549                           
 10550                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 10551  004532  52E6               	movf	postinc1,f,c
 10552  004534  52E6               	movf	postinc1,f,c
 10553                           
 10554                           ;stkvar	_sign @ sp[(-2)+0]
 10555                           
 10556                           ;incstack = 0
 10557  004536  0EFE               	movlw	-2
 10558  004538  6AE3               	clrf	plusw1,c
 10559                           
 10560                           ;stkvar	_dividend @ sp[(-2)+-8]
 10561  00453A  0EFD               	movlw	-3
 10562  00453C  AEE3               	btfss	plusw1,7,c
 10563  00453E  D028               	goto	l5369
 10564                           
 10565                           ;stkvar	_dividend @ sp[(-2)+-8]
 10566                           ;stkvar	_dividend @ sp[(-2)+-8]
 10567  004540  0EF6               	movlw	-10
 10568  004542  6CE3               	negf	plusw1,c
 10569  004544  0EF7               	movlw	-9
 10570  004546  1EE3               	comf	plusw1,f,c
 10571  004548  0EF8               	movlw	-8
 10572  00454A  1EE3               	comf	plusw1,f,c
 10573  00454C  0EF9               	movlw	-7
 10574  00454E  1EE3               	comf	plusw1,f,c
 10575  004550  0EFA               	movlw	-6
 10576  004552  1EE3               	comf	plusw1,f,c
 10577  004554  0EFB               	movlw	-5
 10578  004556  1EE3               	comf	plusw1,f,c
 10579  004558  0EFC               	movlw	-4
 10580  00455A  1EE3               	comf	plusw1,f,c
 10581  00455C  0EFD               	movlw	-3
 10582  00455E  1EE3               	comf	plusw1,f,c
 10583  004560  E314               	bnc	u2500
 10584  004562  0EF7               	movlw	-9
 10585  004564  2AE3               	incf	plusw1,f,c
 10586  004566  E311               	bnc	u2500
 10587  004568  0EF8               	movlw	-8
 10588  00456A  2AE3               	incf	plusw1,f,c
 10589  00456C  E30E               	bnc	u2500
 10590  00456E  0EF9               	movlw	-7
 10591  004570  2AE3               	incf	plusw1,f,c
 10592  004572  E30B               	bnc	u2500
 10593  004574  0EFA               	movlw	-6
 10594  004576  2AE3               	incf	plusw1,f,c
 10595  004578  E308               	bnc	u2500
 10596  00457A  0EFB               	movlw	-5
 10597  00457C  2AE3               	incf	plusw1,f,c
 10598  00457E  E305               	bnc	u2500
 10599  004580  0EFC               	movlw	-4
 10600  004582  2AE3               	incf	plusw1,f,c
 10601  004584  E302               	bnc	u2500
 10602  004586  0EFD               	movlw	-3
 10603  004588  2AE3               	incf	plusw1,f,c
 10604  00458A                     u2500:
 10605                           
 10606                           ;stkvar	_sign @ sp[(-2)+0]
 10607  00458A  0EFE               	movlw	-2
 10608  00458C  6AE3               	clrf	plusw1,c
 10609  00458E  2AE3               	incf	plusw1,f,c
 10610  004590                     l5369:
 10611                           
 10612                           ;stkvar	_divisor @ sp[(-2)+-16]
 10613  004590  0EF5               	movlw	-11
 10614  004592  AEE3               	btfss	plusw1,7,c
 10615  004594  D025               	goto	u2520
 10616                           
 10617                           ;stkvar	_divisor @ sp[(-2)+-16]
 10618                           ;stkvar	_divisor @ sp[(-2)+-16]
 10619  004596  0EEE               	movlw	-18
 10620  004598  6CE3               	negf	plusw1,c
 10621  00459A  0EEF               	movlw	-17
 10622  00459C  1EE3               	comf	plusw1,f,c
 10623  00459E  0EF0               	movlw	-16
 10624  0045A0  1EE3               	comf	plusw1,f,c
 10625  0045A2  0EF1               	movlw	-15
 10626  0045A4  1EE3               	comf	plusw1,f,c
 10627  0045A6  0EF2               	movlw	-14
 10628  0045A8  1EE3               	comf	plusw1,f,c
 10629  0045AA  0EF3               	movlw	-13
 10630  0045AC  1EE3               	comf	plusw1,f,c
 10631  0045AE  0EF4               	movlw	-12
 10632  0045B0  1EE3               	comf	plusw1,f,c
 10633  0045B2  0EF5               	movlw	-11
 10634  0045B4  1EE3               	comf	plusw1,f,c
 10635  0045B6  E314               	bnc	u2520
 10636  0045B8  0EEF               	movlw	-17
 10637  0045BA  2AE3               	incf	plusw1,f,c
 10638  0045BC  E311               	bnc	u2520
 10639  0045BE  0EF0               	movlw	-16
 10640  0045C0  2AE3               	incf	plusw1,f,c
 10641  0045C2  E30E               	bnc	u2520
 10642  0045C4  0EF1               	movlw	-15
 10643  0045C6  2AE3               	incf	plusw1,f,c
 10644  0045C8  E30B               	bnc	u2520
 10645  0045CA  0EF2               	movlw	-14
 10646  0045CC  2AE3               	incf	plusw1,f,c
 10647  0045CE  E308               	bnc	u2520
 10648  0045D0  0EF3               	movlw	-13
 10649  0045D2  2AE3               	incf	plusw1,f,c
 10650  0045D4  E305               	bnc	u2520
 10651  0045D6  0EF4               	movlw	-12
 10652  0045D8  2AE3               	incf	plusw1,f,c
 10653  0045DA  E302               	bnc	u2520
 10654  0045DC  0EF5               	movlw	-11
 10655  0045DE  2AE3               	incf	plusw1,f,c
 10656  0045E0                     u2520:
 10657                           
 10658                           ;stkvar	_divisor @ sp[(-2)+-16]
 10659  0045E0  0EEE               	movlw	-18
 10660  0045E2  50E3               	movf	plusw1,w,c
 10661  0045E4  E116               	bnz	u2530
 10662  0045E6  0EEF               	movlw	-17
 10663  0045E8  50E3               	movf	plusw1,w,c
 10664  0045EA  E113               	bnz	u2530
 10665  0045EC  0EF0               	movlw	-16
 10666  0045EE  50E3               	movf	plusw1,w,c
 10667  0045F0  E110               	bnz	u2530
 10668  0045F2  0EF1               	movlw	-15
 10669  0045F4  50E3               	movf	plusw1,w,c
 10670  0045F6  E10D               	bnz	u2530
 10671  0045F8  0EF2               	movlw	-14
 10672  0045FA  50E3               	movf	plusw1,w,c
 10673  0045FC  E10A               	bnz	u2530
 10674  0045FE  0EF3               	movlw	-13
 10675  004600  50E3               	movf	plusw1,w,c
 10676  004602  E107               	bnz	u2530
 10677  004604  0EF4               	movlw	-12
 10678  004606  50E3               	movf	plusw1,w,c
 10679  004608  E104               	bnz	u2530
 10680  00460A  0EF5               	movlw	-11
 10681  00460C  50E3               	movf	plusw1,w,c
 10682  00460E  B4D8               	btfsc	status,2,c
 10683  004610  D075               	goto	u2560
 10684  004612                     u2530:
 10685                           
 10686                           ;stkvar	_counter @ sp[(-2)+1]
 10687  004612  0EFF               	movlw	-1
 10688  004614  6AE3               	clrf	plusw1,c
 10689  004616  D012               	goto	L25
 10690  004618                     l5377:
 10691                           
 10692                           ;stkvar	_divisor @ sp[(-2)+-16]
 10693  004618  90D8               	bcf	status,0,c
 10694  00461A  0EEE               	movlw	-18
 10695  00461C  36E3               	rlcf	plusw1,f,c
 10696  00461E  0EEF               	movlw	-17
 10697  004620  36E3               	rlcf	plusw1,f,c
 10698  004622  0EF0               	movlw	-16
 10699  004624  36E3               	rlcf	plusw1,f,c
 10700  004626  0EF1               	movlw	-15
 10701  004628  36E3               	rlcf	plusw1,f,c
 10702  00462A  0EF2               	movlw	-14
 10703  00462C  36E3               	rlcf	plusw1,f,c
 10704  00462E  0EF3               	movlw	-13
 10705  004630  36E3               	rlcf	plusw1,f,c
 10706  004632  0EF4               	movlw	-12
 10707  004634  36E3               	rlcf	plusw1,f,c
 10708  004636  0EF5               	movlw	-11
 10709  004638  36E3               	rlcf	plusw1,f,c
 10710                           
 10711                           ;stkvar	_counter @ sp[(-2)+1]
 10712  00463A  0EFF               	movlw	-1
 10713  00463C                     L25:
 10714  00463C  2AE3               	incf	plusw1,f,c
 10715                           
 10716                           ;stkvar	_divisor @ sp[(-2)+-16]
 10717  00463E  0EF5               	movlw	-11
 10718  004640  AEE3               	btfss	plusw1,7,c
 10719  004642  D7EA               	goto	l5377
 10720  004644                     u2540:
 10721                           
 10722                           ;stkvar	_divisor @ sp[(-2)+-16]
 10723                           ;stkvar	_dividend @ sp[(-2)+-8]
 10724  004644  50E1               	movf	fsr1l,w,c
 10725  004646  0FF6               	addlw	-10
 10726  004648  6ED9               	movwf	fsr2l,c
 10727  00464A  50E2               	movf	fsr1h,w,c
 10728  00464C  6EDA               	movwf	fsr2h,c
 10729  00464E  0EFF               	movlw	255
 10730  004650  22DA               	addwfc	fsr2h,f,c
 10731  004652  0EEE               	movlw	-18
 10732  004654  50E3               	movf	plusw1,w,c
 10733  004656  5CDE               	subwf	postinc2,w,c
 10734  004658  0EEF               	movlw	-17
 10735  00465A  50E3               	movf	plusw1,w,c
 10736  00465C  58DE               	subwfb	postinc2,w,c
 10737  00465E  0EF0               	movlw	-16
 10738  004660  50E3               	movf	plusw1,w,c
 10739  004662  58DE               	subwfb	postinc2,w,c
 10740  004664  0EF1               	movlw	-15
 10741  004666  50E3               	movf	plusw1,w,c
 10742  004668  58DE               	subwfb	postinc2,w,c
 10743  00466A  0EF2               	movlw	-14
 10744  00466C  50E3               	movf	plusw1,w,c
 10745  00466E  58DE               	subwfb	postinc2,w,c
 10746  004670  0EF3               	movlw	-13
 10747  004672  50E3               	movf	plusw1,w,c
 10748  004674  58DE               	subwfb	postinc2,w,c
 10749  004676  0EF4               	movlw	-12
 10750  004678  50E3               	movf	plusw1,w,c
 10751  00467A  58DE               	subwfb	postinc2,w,c
 10752  00467C  0EF5               	movlw	-11
 10753  00467E  50E3               	movf	plusw1,w,c
 10754  004680  58DE               	subwfb	postinc2,w,c
 10755  004682  A0D8               	btfss	status,0,c
 10756  004684  D01F               	goto	l5385
 10757                           
 10758                           ;stkvar	_divisor @ sp[(-2)+-16]
 10759                           ;stkvar	_dividend @ sp[(-2)+-8]
 10760  004686  50E1               	movf	fsr1l,w,c
 10761  004688  0FF6               	addlw	-10
 10762  00468A  6ED9               	movwf	fsr2l,c
 10763  00468C  50E2               	movf	fsr1h,w,c
 10764  00468E  6EDA               	movwf	fsr2h,c
 10765  004690  0EFF               	movlw	255
 10766  004692  22DA               	addwfc	fsr2h,f,c
 10767  004694  0EEE               	movlw	-18
 10768  004696  50E3               	movf	plusw1,w,c
 10769  004698  5EDE               	subwf	postinc2,f,c
 10770  00469A  0EEF               	movlw	-17
 10771  00469C  50E3               	movf	plusw1,w,c
 10772  00469E  5ADE               	subwfb	postinc2,f,c
 10773  0046A0  0EF0               	movlw	-16
 10774  0046A2  50E3               	movf	plusw1,w,c
 10775  0046A4  5ADE               	subwfb	postinc2,f,c
 10776  0046A6  0EF1               	movlw	-15
 10777  0046A8  50E3               	movf	plusw1,w,c
 10778  0046AA  5ADE               	subwfb	postinc2,f,c
 10779  0046AC  0EF2               	movlw	-14
 10780  0046AE  50E3               	movf	plusw1,w,c
 10781  0046B0  5ADE               	subwfb	postinc2,f,c
 10782  0046B2  0EF3               	movlw	-13
 10783  0046B4  50E3               	movf	plusw1,w,c
 10784  0046B6  5ADE               	subwfb	postinc2,f,c
 10785  0046B8  0EF4               	movlw	-12
 10786  0046BA  50E3               	movf	plusw1,w,c
 10787  0046BC  5ADE               	subwfb	postinc2,f,c
 10788  0046BE  0EF5               	movlw	-11
 10789  0046C0  50E3               	movf	plusw1,w,c
 10790  0046C2  5ADE               	subwfb	postinc2,f,c
 10791  0046C4                     l5385:
 10792                           
 10793                           ;stkvar	_divisor @ sp[(-2)+-16]
 10794  0046C4  90D8               	bcf	status,0,c
 10795  0046C6  0EF5               	movlw	-11
 10796  0046C8  32E3               	rrcf	plusw1,f,c
 10797  0046CA  0EF4               	movlw	-12
 10798  0046CC  32E3               	rrcf	plusw1,f,c
 10799  0046CE  0EF3               	movlw	-13
 10800  0046D0  32E3               	rrcf	plusw1,f,c
 10801  0046D2  0EF2               	movlw	-14
 10802  0046D4  32E3               	rrcf	plusw1,f,c
 10803  0046D6  0EF1               	movlw	-15
 10804  0046D8  32E3               	rrcf	plusw1,f,c
 10805  0046DA  0EF0               	movlw	-16
 10806  0046DC  32E3               	rrcf	plusw1,f,c
 10807  0046DE  0EEF               	movlw	-17
 10808  0046E0  32E3               	rrcf	plusw1,f,c
 10809  0046E2  0EEE               	movlw	-18
 10810  0046E4  32E3               	rrcf	plusw1,f,c
 10811                           
 10812                           ;stkvar	_counter @ sp[(-2)+1]
 10813  0046E6  0EFF               	movlw	-1
 10814  0046E8  50E3               	movf	plusw1,w,c
 10815  0046EA  6E3B               	movwf	btemp,c
 10816  0046EC  0E01               	movlw	1
 10817  0046EE  5E3B               	subwf	btemp,f,c
 10818  0046F0  0EFF               	movlw	-1
 10819  0046F2  0060  F0EF  FFE3   	movff	btemp,plusw1
 10820  0046F8  A4D8               	btfss	status,2,c
 10821  0046FA  D7A4               	goto	u2540
 10822  0046FC                     u2560:
 10823                           
 10824                           ;stkvar	_sign @ sp[(-2)+0]
 10825  0046FC  0EFE               	movlw	-2
 10826  0046FE  50E3               	movf	plusw1,w,c
 10827  004700  B4D8               	btfsc	status,2,c
 10828  004702  D025               	goto	u2580
 10829                           
 10830                           ;stkvar	_dividend @ sp[(-2)+-8]
 10831                           ;stkvar	_dividend @ sp[(-2)+-8]
 10832  004704  0EF6               	movlw	-10
 10833  004706  6CE3               	negf	plusw1,c
 10834  004708  0EF7               	movlw	-9
 10835  00470A  1EE3               	comf	plusw1,f,c
 10836  00470C  0EF8               	movlw	-8
 10837  00470E  1EE3               	comf	plusw1,f,c
 10838  004710  0EF9               	movlw	-7
 10839  004712  1EE3               	comf	plusw1,f,c
 10840  004714  0EFA               	movlw	-6
 10841  004716  1EE3               	comf	plusw1,f,c
 10842  004718  0EFB               	movlw	-5
 10843  00471A  1EE3               	comf	plusw1,f,c
 10844  00471C  0EFC               	movlw	-4
 10845  00471E  1EE3               	comf	plusw1,f,c
 10846  004720  0EFD               	movlw	-3
 10847  004722  1EE3               	comf	plusw1,f,c
 10848  004724  E314               	bnc	u2580
 10849  004726  0EF7               	movlw	-9
 10850  004728  2AE3               	incf	plusw1,f,c
 10851  00472A  E311               	bnc	u2580
 10852  00472C  0EF8               	movlw	-8
 10853  00472E  2AE3               	incf	plusw1,f,c
 10854  004730  E30E               	bnc	u2580
 10855  004732  0EF9               	movlw	-7
 10856  004734  2AE3               	incf	plusw1,f,c
 10857  004736  E30B               	bnc	u2580
 10858  004738  0EFA               	movlw	-6
 10859  00473A  2AE3               	incf	plusw1,f,c
 10860  00473C  E308               	bnc	u2580
 10861  00473E  0EFB               	movlw	-5
 10862  004740  2AE3               	incf	plusw1,f,c
 10863  004742  E305               	bnc	u2580
 10864  004744  0EFC               	movlw	-4
 10865  004746  2AE3               	incf	plusw1,f,c
 10866  004748  E302               	bnc	u2580
 10867  00474A  0EFD               	movlw	-3
 10868  00474C  2AE3               	incf	plusw1,f,c
 10869  00474E                     u2580:
 10870                           
 10871                           ;stkvar	_dividend @ sp[(-2)+-8]
 10872  00474E  0EF6               	movlw	246
 10873  004750  24E1               	addwf	fsr1l,w,c
 10874  004752  6ED9               	movwf	fsr2l,c
 10875  004754  0EFF               	movlw	255
 10876  004756  20E2               	addwfc	fsr1h,w,c
 10877  004758  6EDA               	movwf	fsr2h,c
 10878                           
 10879                           ;stkvar	?___aomod @ sp[(-2)+-8]
 10880  00475A  0E08               	movlw	8
 10881  00475C  6E3B               	movwf	btemp,c
 10882  00475E  0EF6               	movlw	-10
 10883  004760                     us259999:
 10884  004760  006F FF7B FFE3     	movff	postinc2,plusw1
 10885  004766  28E8               	incf	wreg,w,c
 10886  004768  2E3B               	decfsz	btemp,f,c
 10887  00476A  D7FA               	bra	us259999
 10888                           
 10889                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 10890  00476C  52E5               	movf	postdec1,f,c
 10891  00476E  52E5               	movf	postdec1,f,c
 10892  004770  0012               	return		;funcret
 10893  004772                     __end_of___aomod:
 10894                           	opt callstack 0
 10895                           
 10896 ;; *************** function ___aodiv *****************
 10897 ;; Defined at:
 10898 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
 10899 ;; Parameters:    Size  Location     Type
 10900 ;;  dividend        8  [STACK] long long 
 10901 ;;  divisor         8  [STACK] long long 
 10902 ;; Auto vars:     Size  Location     Type
 10903 ;;  quotient        8  [STACK] long long 
 10904 ;;  sign            1  [STACK] unsigned char 
 10905 ;;  counter         1  [STACK] unsigned char 
 10906 ;; Return value:  Size  Location     Type
 10907 ;;                  8  [STACK] long long 
 10908 ;; Registers used:
 10909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 10910 ;; Tracked objects:
 10911 ;;		On entry : 0/1
 10912 ;;		On exit  : 0/0
 10913 ;;		Unchanged: 0/0
 10914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10919 ;;Total ram usage:        0 bytes
 10920 ;; Hardware stack levels used:    1
 10921 ;; Hardware stack levels required when called:    3
 10922 ;; This function calls:
 10923 ;;		Nothing
 10924 ;; This function is called by:
 10925 ;;		_dtoa
 10926 ;; This function uses a reentrant model
 10927 ;;
 10928                           
 10929                           	psect	text45
 10930  003B96                     __ptext45:
 10931                           	opt callstack 0
 10932  003B96                     ___aodiv:
 10933                           	opt callstack 0
 10934                           
 10935                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 10936  003B96  0E0A               	movlw	10
 10937  003B98  26E1               	addwf	fsr1l,f,c
 10938  003B9A  0E00               	movlw	0
 10939  003B9C  22E2               	addwfc	fsr1h,f,c
 10940                           
 10941                           ;stkvar	_sign @ sp[(-10)+8]
 10942                           
 10943                           ;incstack = 0
 10944  003B9E  0EFE               	movlw	-2
 10945  003BA0  6AE3               	clrf	plusw1,c
 10946                           
 10947                           ;stkvar	_divisor @ sp[(-10)+-16]
 10948  003BA2  0EED               	movlw	-19
 10949  003BA4  AEE3               	btfss	plusw1,7,c
 10950  003BA6  D028               	goto	l5325
 10951                           
 10952                           ;stkvar	_divisor @ sp[(-10)+-16]
 10953                           ;stkvar	_divisor @ sp[(-10)+-16]
 10954  003BA8  0EE6               	movlw	-26
 10955  003BAA  6CE3               	negf	plusw1,c
 10956  003BAC  0EE7               	movlw	-25
 10957  003BAE  1EE3               	comf	plusw1,f,c
 10958  003BB0  0EE8               	movlw	-24
 10959  003BB2  1EE3               	comf	plusw1,f,c
 10960  003BB4  0EE9               	movlw	-23
 10961  003BB6  1EE3               	comf	plusw1,f,c
 10962  003BB8  0EEA               	movlw	-22
 10963  003BBA  1EE3               	comf	plusw1,f,c
 10964  003BBC  0EEB               	movlw	-21
 10965  003BBE  1EE3               	comf	plusw1,f,c
 10966  003BC0  0EEC               	movlw	-20
 10967  003BC2  1EE3               	comf	plusw1,f,c
 10968  003BC4  0EED               	movlw	-19
 10969  003BC6  1EE3               	comf	plusw1,f,c
 10970  003BC8  E314               	bnc	u2380
 10971  003BCA  0EE7               	movlw	-25
 10972  003BCC  2AE3               	incf	plusw1,f,c
 10973  003BCE  E311               	bnc	u2380
 10974  003BD0  0EE8               	movlw	-24
 10975  003BD2  2AE3               	incf	plusw1,f,c
 10976  003BD4  E30E               	bnc	u2380
 10977  003BD6  0EE9               	movlw	-23
 10978  003BD8  2AE3               	incf	plusw1,f,c
 10979  003BDA  E30B               	bnc	u2380
 10980  003BDC  0EEA               	movlw	-22
 10981  003BDE  2AE3               	incf	plusw1,f,c
 10982  003BE0  E308               	bnc	u2380
 10983  003BE2  0EEB               	movlw	-21
 10984  003BE4  2AE3               	incf	plusw1,f,c
 10985  003BE6  E305               	bnc	u2380
 10986  003BE8  0EEC               	movlw	-20
 10987  003BEA  2AE3               	incf	plusw1,f,c
 10988  003BEC  E302               	bnc	u2380
 10989  003BEE  0EED               	movlw	-19
 10990  003BF0  2AE3               	incf	plusw1,f,c
 10991  003BF2                     u2380:
 10992                           
 10993                           ;stkvar	_sign @ sp[(-10)+8]
 10994  003BF2  0EFE               	movlw	-2
 10995  003BF4  6AE3               	clrf	plusw1,c
 10996  003BF6  2AE3               	incf	plusw1,f,c
 10997  003BF8                     l5325:
 10998                           
 10999                           ;stkvar	_dividend @ sp[(-10)+-8]
 11000  003BF8  0EF5               	movlw	-11
 11001  003BFA  AEE3               	btfss	plusw1,7,c
 11002  003BFC  D027               	goto	l5331
 11003                           
 11004                           ;stkvar	_dividend @ sp[(-10)+-8]
 11005                           ;stkvar	_dividend @ sp[(-10)+-8]
 11006  003BFE  0EEE               	movlw	-18
 11007  003C00  6CE3               	negf	plusw1,c
 11008  003C02  0EEF               	movlw	-17
 11009  003C04  1EE3               	comf	plusw1,f,c
 11010  003C06  0EF0               	movlw	-16
 11011  003C08  1EE3               	comf	plusw1,f,c
 11012  003C0A  0EF1               	movlw	-15
 11013  003C0C  1EE3               	comf	plusw1,f,c
 11014  003C0E  0EF2               	movlw	-14
 11015  003C10  1EE3               	comf	plusw1,f,c
 11016  003C12  0EF3               	movlw	-13
 11017  003C14  1EE3               	comf	plusw1,f,c
 11018  003C16  0EF4               	movlw	-12
 11019  003C18  1EE3               	comf	plusw1,f,c
 11020  003C1A  0EF5               	movlw	-11
 11021  003C1C  1EE3               	comf	plusw1,f,c
 11022  003C1E  E314               	bnc	u2400
 11023  003C20  0EEF               	movlw	-17
 11024  003C22  2AE3               	incf	plusw1,f,c
 11025  003C24  E311               	bnc	u2400
 11026  003C26  0EF0               	movlw	-16
 11027  003C28  2AE3               	incf	plusw1,f,c
 11028  003C2A  E30E               	bnc	u2400
 11029  003C2C  0EF1               	movlw	-15
 11030  003C2E  2AE3               	incf	plusw1,f,c
 11031  003C30  E30B               	bnc	u2400
 11032  003C32  0EF2               	movlw	-14
 11033  003C34  2AE3               	incf	plusw1,f,c
 11034  003C36  E308               	bnc	u2400
 11035  003C38  0EF3               	movlw	-13
 11036  003C3A  2AE3               	incf	plusw1,f,c
 11037  003C3C  E305               	bnc	u2400
 11038  003C3E  0EF4               	movlw	-12
 11039  003C40  2AE3               	incf	plusw1,f,c
 11040  003C42  E302               	bnc	u2400
 11041  003C44  0EF5               	movlw	-11
 11042  003C46  2AE3               	incf	plusw1,f,c
 11043  003C48                     u2400:
 11044                           
 11045                           ;stkvar	_sign @ sp[(-10)+8]
 11046  003C48  0EFE               	movlw	-2
 11047  003C4A  70E3               	btg	plusw1,0,c
 11048  003C4C                     l5331:
 11049                           
 11050                           ;stkvar	_quotient @ sp[(-10)+0]
 11051  003C4C  0E07               	movlw	7
 11052  003C4E  6E3B               	movwf	btemp,c
 11053  003C50  0EF6               	movlw	-10
 11054  003C52                     u2411:
 11055  003C52  6AE3               	clrf	plusw1,c
 11056  003C54  2AE8               	incf	wreg,f,c
 11057  003C56  063B               	decf	btemp,f,c
 11058  003C58  E2FC               	bc	u2411
 11059                           
 11060                           ;stkvar	_divisor @ sp[(-10)+-16]
 11061  003C5A  0EE6               	movlw	-26
 11062  003C5C  50E3               	movf	plusw1,w,c
 11063  003C5E  E116               	bnz	u2420
 11064  003C60  0EE7               	movlw	-25
 11065  003C62  50E3               	movf	plusw1,w,c
 11066  003C64  E113               	bnz	u2420
 11067  003C66  0EE8               	movlw	-24
 11068  003C68  50E3               	movf	plusw1,w,c
 11069  003C6A  E110               	bnz	u2420
 11070  003C6C  0EE9               	movlw	-23
 11071  003C6E  50E3               	movf	plusw1,w,c
 11072  003C70  E10D               	bnz	u2420
 11073  003C72  0EEA               	movlw	-22
 11074  003C74  50E3               	movf	plusw1,w,c
 11075  003C76  E10A               	bnz	u2420
 11076  003C78  0EEB               	movlw	-21
 11077  003C7A  50E3               	movf	plusw1,w,c
 11078  003C7C  E107               	bnz	u2420
 11079  003C7E  0EEC               	movlw	-20
 11080  003C80  50E3               	movf	plusw1,w,c
 11081  003C82  E104               	bnz	u2420
 11082  003C84  0EED               	movlw	-19
 11083  003C86  50E3               	movf	plusw1,w,c
 11084  003C88  B4D8               	btfsc	status,2,c
 11085  003C8A  D088               	goto	u2450
 11086  003C8C                     u2420:
 11087                           
 11088                           ;stkvar	_counter @ sp[(-10)+9]
 11089  003C8C  0EFF               	movlw	-1
 11090  003C8E  6AE3               	clrf	plusw1,c
 11091  003C90  D012               	goto	L26
 11092  003C92                     l5337:
 11093                           
 11094                           ;stkvar	_divisor @ sp[(-10)+-16]
 11095  003C92  90D8               	bcf	status,0,c
 11096  003C94  0EE6               	movlw	-26
 11097  003C96  36E3               	rlcf	plusw1,f,c
 11098  003C98  0EE7               	movlw	-25
 11099  003C9A  36E3               	rlcf	plusw1,f,c
 11100  003C9C  0EE8               	movlw	-24
 11101  003C9E  36E3               	rlcf	plusw1,f,c
 11102  003CA0  0EE9               	movlw	-23
 11103  003CA2  36E3               	rlcf	plusw1,f,c
 11104  003CA4  0EEA               	movlw	-22
 11105  003CA6  36E3               	rlcf	plusw1,f,c
 11106  003CA8  0EEB               	movlw	-21
 11107  003CAA  36E3               	rlcf	plusw1,f,c
 11108  003CAC  0EEC               	movlw	-20
 11109  003CAE  36E3               	rlcf	plusw1,f,c
 11110  003CB0  0EED               	movlw	-19
 11111  003CB2  36E3               	rlcf	plusw1,f,c
 11112                           
 11113                           ;stkvar	_counter @ sp[(-10)+9]
 11114  003CB4  0EFF               	movlw	-1
 11115  003CB6                     L26:
 11116  003CB6  2AE3               	incf	plusw1,f,c
 11117                           
 11118                           ;stkvar	_divisor @ sp[(-10)+-16]
 11119  003CB8  0EED               	movlw	-19
 11120  003CBA  AEE3               	btfss	plusw1,7,c
 11121  003CBC  D7EA               	goto	l5337
 11122  003CBE                     u2430:
 11123                           
 11124                           ;stkvar	_quotient @ sp[(-10)+0]
 11125  003CBE  90D8               	bcf	status,0,c
 11126  003CC0  0EF6               	movlw	-10
 11127  003CC2  36E3               	rlcf	plusw1,f,c
 11128  003CC4  0EF7               	movlw	-9
 11129  003CC6  36E3               	rlcf	plusw1,f,c
 11130  003CC8  0EF8               	movlw	-8
 11131  003CCA  36E3               	rlcf	plusw1,f,c
 11132  003CCC  0EF9               	movlw	-7
 11133  003CCE  36E3               	rlcf	plusw1,f,c
 11134  003CD0  0EFA               	movlw	-6
 11135  003CD2  36E3               	rlcf	plusw1,f,c
 11136  003CD4  0EFB               	movlw	-5
 11137  003CD6  36E3               	rlcf	plusw1,f,c
 11138  003CD8  0EFC               	movlw	-4
 11139  003CDA  36E3               	rlcf	plusw1,f,c
 11140  003CDC  0EFD               	movlw	-3
 11141  003CDE  36E3               	rlcf	plusw1,f,c
 11142                           
 11143                           ;stkvar	_divisor @ sp[(-10)+-16]
 11144                           ;stkvar	_dividend @ sp[(-10)+-8]
 11145  003CE0  50E1               	movf	fsr1l,w,c
 11146  003CE2  0FEE               	addlw	-18
 11147  003CE4  6ED9               	movwf	fsr2l,c
 11148  003CE6  50E2               	movf	fsr1h,w,c
 11149  003CE8  6EDA               	movwf	fsr2h,c
 11150  003CEA  0EFF               	movlw	255
 11151  003CEC  22DA               	addwfc	fsr2h,f,c
 11152  003CEE  0EE6               	movlw	-26
 11153  003CF0  50E3               	movf	plusw1,w,c
 11154  003CF2  5CDE               	subwf	postinc2,w,c
 11155  003CF4  0EE7               	movlw	-25
 11156  003CF6  50E3               	movf	plusw1,w,c
 11157  003CF8  58DE               	subwfb	postinc2,w,c
 11158  003CFA  0EE8               	movlw	-24
 11159  003CFC  50E3               	movf	plusw1,w,c
 11160  003CFE  58DE               	subwfb	postinc2,w,c
 11161  003D00  0EE9               	movlw	-23
 11162  003D02  50E3               	movf	plusw1,w,c
 11163  003D04  58DE               	subwfb	postinc2,w,c
 11164  003D06  0EEA               	movlw	-22
 11165  003D08  50E3               	movf	plusw1,w,c
 11166  003D0A  58DE               	subwfb	postinc2,w,c
 11167  003D0C  0EEB               	movlw	-21
 11168  003D0E  50E3               	movf	plusw1,w,c
 11169  003D10  58DE               	subwfb	postinc2,w,c
 11170  003D12  0EEC               	movlw	-20
 11171  003D14  50E3               	movf	plusw1,w,c
 11172  003D16  58DE               	subwfb	postinc2,w,c
 11173  003D18  0EED               	movlw	-19
 11174  003D1A  50E3               	movf	plusw1,w,c
 11175  003D1C  58DE               	subwfb	postinc2,w,c
 11176  003D1E  A0D8               	btfss	status,0,c
 11177  003D20  D021               	goto	l5349
 11178                           
 11179                           ;stkvar	_divisor @ sp[(-10)+-16]
 11180                           ;stkvar	_dividend @ sp[(-10)+-8]
 11181  003D22  50E1               	movf	fsr1l,w,c
 11182  003D24  0FEE               	addlw	-18
 11183  003D26  6ED9               	movwf	fsr2l,c
 11184  003D28  50E2               	movf	fsr1h,w,c
 11185  003D2A  6EDA               	movwf	fsr2h,c
 11186  003D2C  0EFF               	movlw	255
 11187  003D2E  22DA               	addwfc	fsr2h,f,c
 11188  003D30  0EE6               	movlw	-26
 11189  003D32  50E3               	movf	plusw1,w,c
 11190  003D34  5EDE               	subwf	postinc2,f,c
 11191  003D36  0EE7               	movlw	-25
 11192  003D38  50E3               	movf	plusw1,w,c
 11193  003D3A  5ADE               	subwfb	postinc2,f,c
 11194  003D3C  0EE8               	movlw	-24
 11195  003D3E  50E3               	movf	plusw1,w,c
 11196  003D40  5ADE               	subwfb	postinc2,f,c
 11197  003D42  0EE9               	movlw	-23
 11198  003D44  50E3               	movf	plusw1,w,c
 11199  003D46  5ADE               	subwfb	postinc2,f,c
 11200  003D48  0EEA               	movlw	-22
 11201  003D4A  50E3               	movf	plusw1,w,c
 11202  003D4C  5ADE               	subwfb	postinc2,f,c
 11203  003D4E  0EEB               	movlw	-21
 11204  003D50  50E3               	movf	plusw1,w,c
 11205  003D52  5ADE               	subwfb	postinc2,f,c
 11206  003D54  0EEC               	movlw	-20
 11207  003D56  50E3               	movf	plusw1,w,c
 11208  003D58  5ADE               	subwfb	postinc2,f,c
 11209  003D5A  0EED               	movlw	-19
 11210  003D5C  50E3               	movf	plusw1,w,c
 11211  003D5E  5ADE               	subwfb	postinc2,f,c
 11212                           
 11213                           ;stkvar	_quotient @ sp[(-10)+0]
 11214  003D60  0EF6               	movlw	-10
 11215  003D62  80E3               	bsf	plusw1,0,c
 11216  003D64                     l5349:
 11217                           
 11218                           ;stkvar	_divisor @ sp[(-10)+-16]
 11219  003D64  90D8               	bcf	status,0,c
 11220  003D66  0EED               	movlw	-19
 11221  003D68  32E3               	rrcf	plusw1,f,c
 11222  003D6A  0EEC               	movlw	-20
 11223  003D6C  32E3               	rrcf	plusw1,f,c
 11224  003D6E  0EEB               	movlw	-21
 11225  003D70  32E3               	rrcf	plusw1,f,c
 11226  003D72  0EEA               	movlw	-22
 11227  003D74  32E3               	rrcf	plusw1,f,c
 11228  003D76  0EE9               	movlw	-23
 11229  003D78  32E3               	rrcf	plusw1,f,c
 11230  003D7A  0EE8               	movlw	-24
 11231  003D7C  32E3               	rrcf	plusw1,f,c
 11232  003D7E  0EE7               	movlw	-25
 11233  003D80  32E3               	rrcf	plusw1,f,c
 11234  003D82  0EE6               	movlw	-26
 11235  003D84  32E3               	rrcf	plusw1,f,c
 11236                           
 11237                           ;stkvar	_counter @ sp[(-10)+9]
 11238  003D86  0EFF               	movlw	-1
 11239  003D88  50E3               	movf	plusw1,w,c
 11240  003D8A  6E3B               	movwf	btemp,c
 11241  003D8C  0E01               	movlw	1
 11242  003D8E  5E3B               	subwf	btemp,f,c
 11243  003D90  0EFF               	movlw	-1
 11244  003D92  0060  F0EF  FFE3   	movff	btemp,plusw1
 11245  003D98  A4D8               	btfss	status,2,c
 11246  003D9A  D791               	goto	u2430
 11247  003D9C                     u2450:
 11248                           
 11249                           ;stkvar	_sign @ sp[(-10)+8]
 11250  003D9C  0EFE               	movlw	-2
 11251  003D9E  50E3               	movf	plusw1,w,c
 11252  003DA0  B4D8               	btfsc	status,2,c
 11253  003DA2  D025               	goto	u2470
 11254                           
 11255                           ;stkvar	_quotient @ sp[(-10)+0]
 11256                           ;stkvar	_quotient @ sp[(-10)+0]
 11257  003DA4  0EF6               	movlw	-10
 11258  003DA6  6CE3               	negf	plusw1,c
 11259  003DA8  0EF7               	movlw	-9
 11260  003DAA  1EE3               	comf	plusw1,f,c
 11261  003DAC  0EF8               	movlw	-8
 11262  003DAE  1EE3               	comf	plusw1,f,c
 11263  003DB0  0EF9               	movlw	-7
 11264  003DB2  1EE3               	comf	plusw1,f,c
 11265  003DB4  0EFA               	movlw	-6
 11266  003DB6  1EE3               	comf	plusw1,f,c
 11267  003DB8  0EFB               	movlw	-5
 11268  003DBA  1EE3               	comf	plusw1,f,c
 11269  003DBC  0EFC               	movlw	-4
 11270  003DBE  1EE3               	comf	plusw1,f,c
 11271  003DC0  0EFD               	movlw	-3
 11272  003DC2  1EE3               	comf	plusw1,f,c
 11273  003DC4  E314               	bnc	u2470
 11274  003DC6  0EF7               	movlw	-9
 11275  003DC8  2AE3               	incf	plusw1,f,c
 11276  003DCA  E311               	bnc	u2470
 11277  003DCC  0EF8               	movlw	-8
 11278  003DCE  2AE3               	incf	plusw1,f,c
 11279  003DD0  E30E               	bnc	u2470
 11280  003DD2  0EF9               	movlw	-7
 11281  003DD4  2AE3               	incf	plusw1,f,c
 11282  003DD6  E30B               	bnc	u2470
 11283  003DD8  0EFA               	movlw	-6
 11284  003DDA  2AE3               	incf	plusw1,f,c
 11285  003DDC  E308               	bnc	u2470
 11286  003DDE  0EFB               	movlw	-5
 11287  003DE0  2AE3               	incf	plusw1,f,c
 11288  003DE2  E305               	bnc	u2470
 11289  003DE4  0EFC               	movlw	-4
 11290  003DE6  2AE3               	incf	plusw1,f,c
 11291  003DE8  E302               	bnc	u2470
 11292  003DEA  0EFD               	movlw	-3
 11293  003DEC  2AE3               	incf	plusw1,f,c
 11294  003DEE                     u2470:
 11295                           
 11296                           ;stkvar	_quotient @ sp[(-10)+0]
 11297  003DEE  0EF6               	movlw	246
 11298  003DF0  24E1               	addwf	fsr1l,w,c
 11299  003DF2  6ED9               	movwf	fsr2l,c
 11300  003DF4  0EFF               	movlw	255
 11301  003DF6  20E2               	addwfc	fsr1h,w,c
 11302  003DF8  6EDA               	movwf	fsr2h,c
 11303                           
 11304                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 11305  003DFA  0E08               	movlw	8
 11306  003DFC  6E3B               	movwf	btemp,c
 11307  003DFE  0EEE               	movlw	-18
 11308  003E00                     us248999:
 11309  003E00  006F FF7B FFE3     	movff	postinc2,plusw1
 11310  003E06  28E8               	incf	wreg,w,c
 11311  003E08  2E3B               	decfsz	btemp,f,c
 11312  003E0A  D7FA               	bra	us248999
 11313                           
 11314                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 11315  003E0C  0EF6               	movlw	246
 11316  003E0E  26E1               	addwf	fsr1l,f,c
 11317  003E10  0EFF               	movlw	255
 11318  003E12  22E2               	addwfc	fsr1h,f,c
 11319  003E14  0012               	return		;funcret
 11320  003E16                     __end_of___aodiv:
 11321                           	opt callstack 0
 11322                           
 11323 ;; *************** function _ctoa *****************
 11324 ;; Defined at:
 11325 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 11326 ;; Parameters:    Size  Location     Type
 11327 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11328 ;;		 -> f(5), NULL(0), 
 11329 ;;  c               1  [STACK] unsigned char 
 11330 ;; Auto vars:     Size  Location     Type
 11331 ;;  w               2  [STACK] int 
 11332 ;;  l               2    0        int 
 11333 ;; Return value:  Size  Location     Type
 11334 ;;                  2  [STACK] int 
 11335 ;; Registers used:
 11336 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 11337 ;; Tracked objects:
 11338 ;;		On entry : 0/0
 11339 ;;		On exit  : 0/0
 11340 ;;		Unchanged: 0/0
 11341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11346 ;;Total ram usage:        0 bytes
 11347 ;; Hardware stack levels used:    1
 11348 ;; Hardware stack levels required when called:    8
 11349 ;; This function calls:
 11350 ;;		_pad
 11351 ;; This function is called by:
 11352 ;;		_vfpfcnvrt
 11353 ;; This function uses a reentrant model
 11354 ;;
 11355                           
 11356                           	psect	text46
 11357  005370                     __ptext46:
 11358                           	opt callstack 0
 11359  005370                     _ctoa:
 11360                           	opt callstack 0
 11361                           
 11362                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11363  005370  52E6               	movf	postinc1,f,c
 11364  005372  52E6               	movf	postinc1,f,c
 11365                           
 11366                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 11367                           
 11368                           ;incstack = 0
 11369  005374  5020               	movf	_width,w,c
 11370  005376  1021               	iorwf	_width+1,w,c
 11371  005378  A4D8               	btfss	status,2,c
 11372  00537A  D009               	goto	l7609
 11373                           
 11374                           ;stkvar	_w @ sp[(-2)+0]
 11375  00537C  0EFE               	movlw	-2
 11376  00537E  0060  F083  FFE3   	movff	_width,plusw1
 11377  005384  0EFF               	movlw	-1
 11378  005386  0060  F087  FFE3   	movff	_width+1,plusw1
 11379  00538C  D016               	goto	l7611
 11380  00538E                     l7609:
 11381  00538E  0EFF               	movlw	255
 11382  005390  6E45               	movwf	btemp+10,c
 11383  005392  0EFF               	movlw	255
 11384  005394  6E46               	movwf	btemp+11,c
 11385  005396  0060  F080  F043   	movff	_width,btemp+8
 11386  00539C  0060  F084  F044   	movff	_width+1,btemp+9
 11387  0053A2  5045               	movf	btemp+10,w,c
 11388  0053A4  2643               	addwf	btemp+8,f,c
 11389  0053A6  5046               	movf	btemp+11,w,c
 11390  0053A8  2244               	addwfc	btemp+9,f,c
 11391                           
 11392                           ;stkvar	_w @ sp[(-2)+0]
 11393  0053AA  0EFE               	movlw	-2
 11394  0053AC  0060  F10F  FFE3   	movff	btemp+8,plusw1
 11395  0053B2  0EFF               	movlw	-1
 11396  0053B4  0060  F113  FFE3   	movff	btemp+9,plusw1
 11397  0053BA                     l7611:
 11398                           
 11399                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 11400                           ;stkvar	_c @ sp[(-2)+-3]
 11401  0053BA  0EFB               	movlw	-5
 11402  0053BC  006F FF8C  F1AF    	movff	plusw1,_dbuf
 11403                           
 11404                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 11405  0053C2  0101               	movlb	1	; () banked
 11406  0053C4  6BB0               	clrf	(_dbuf+1)& (0+255),b
 11407                           
 11408                           ; BSR set to: 1
 11409                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 11410                           ;stkvar	_w @ sp[(-2)+0]
 11411  0053C6  0EFE               	movlw	-2
 11412  0053C8  006F FF8F FFE6     	movff	plusw1,postinc1
 11413  0053CE  006F FF8F FFE6     	movff	plusw1,postinc1
 11414  0053D4  0EAF               	movlw	low _dbuf
 11415  0053D6  6EE6               	movwf	postinc1,c
 11416  0053D8  0E01               	movlw	high _dbuf
 11417  0053DA  6EE6               	movwf	postinc1,c
 11418                           
 11419                           ;stkvar	_fp @ sp[(-6)+-2]
 11420  0053DC  0EF8               	movlw	-8
 11421  0053DE  006F FF8F FFE6     	movff	plusw1,postinc1
 11422  0053E4  006F FF8F FFE6     	movff	plusw1,postinc1
 11423  0053EA  EC81  F024         	call	_pad	;wreg free
 11424                           
 11425                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 11426  0053EE  0EFB               	movlw	251
 11427  0053F0  26E1               	addwf	fsr1l,f,c
 11428  0053F2  0EFF               	movlw	255
 11429  0053F4  22E2               	addwfc	fsr1h,f,c
 11430  0053F6  0012               	return		;funcret
 11431  0053F8                     __end_of_ctoa:
 11432                           	opt callstack 0
 11433                           
 11434 ;; *************** function _pad *****************
 11435 ;; Defined at:
 11436 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 11437 ;; Parameters:    Size  Location     Type
 11438 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11439 ;;		 -> f(5), NULL(0), 
 11440 ;;  buf             2  [STACK] PTR unsigned char 
 11441 ;;		 -> dbuf(32), 
 11442 ;;  p               2  [STACK] int 
 11443 ;; Auto vars:     Size  Location     Type
 11444 ;;  w               2  [STACK] int 
 11445 ;;  i               2  [STACK] int 
 11446 ;; Return value:  Size  Location     Type
 11447 ;;                  2  [STACK] int 
 11448 ;; Registers used:
 11449 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 11450 ;; Tracked objects:
 11451 ;;		On entry : 0/1
 11452 ;;		On exit  : 0/0
 11453 ;;		Unchanged: 0/0
 11454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11459 ;;Total ram usage:        0 bytes
 11460 ;; Hardware stack levels used:    1
 11461 ;; Hardware stack levels required when called:    7
 11462 ;; This function calls:
 11463 ;;		_fputc
 11464 ;;		_fputs
 11465 ;;		_strlen
 11466 ;; This function is called by:
 11467 ;;		_ctoa
 11468 ;;		_dtoa
 11469 ;; This function uses a reentrant model
 11470 ;;
 11471                           
 11472                           	psect	text47
 11473  004902                     __ptext47:
 11474                           	opt callstack 0
 11475  004902                     _pad:
 11476                           	opt callstack 0
 11477                           
 11478                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11479  004902  52E6               	movf	postinc1,f,c
 11480  004904  52E6               	movf	postinc1,f,c
 11481  004906  52E6               	movf	postinc1,f,c
 11482  004908  52E6               	movf	postinc1,f,c
 11483                           
 11484                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 11485                           
 11486                           ;incstack = 0
 11487  00490A  A024               	btfss	_flags,0,c
 11488  00490C  D010               	goto	l7587
 11489                           
 11490                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 11491                           ;stkvar	_fp @ sp[(-4)+-2]
 11492  00490E  0EFA               	movlw	-6
 11493  004910  006F FF8F FFE6     	movff	plusw1,postinc1
 11494  004916  006F FF8F FFE6     	movff	plusw1,postinc1
 11495                           
 11496                           ;stkvar	_buf @ sp[(-6)+-4]
 11497  00491C  0EF6               	movlw	-10
 11498  00491E  006F FF8F FFE6     	movff	plusw1,postinc1
 11499  004924  006F FF8F FFE6     	movff	plusw1,postinc1
 11500  00492A  EC23  F029         	call	_fputs	;wreg free
 11501  00492E                     l7587:
 11502                           
 11503                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 11504                           ;stkvar	_p @ sp[(-4)+-6]
 11505  00492E  0EF7               	movlw	-9
 11506  004930  BEE3               	btfsc	plusw1,7,c
 11507  004932  D011               	goto	l7591
 11508                           
 11509                           ;stkvar	_p @ sp[(-4)+-6]
 11510                           ;stkvar	_w @ sp[(-4)+0]
 11511  004934  0EF6               	movlw	-10
 11512  004936  006F FF8C  F03B    	movff	plusw1,btemp
 11513  00493C  0EFC               	movlw	-4
 11514  00493E  0060  F0EF  FFE3   	movff	btemp,plusw1
 11515  004944  0EF7               	movlw	-9
 11516  004946  006F FF8C  F03B    	movff	plusw1,btemp
 11517  00494C  0EFD               	movlw	-3
 11518  00494E  0060  F0EF  FFE3   	movff	btemp,plusw1
 11519  004954  D004               	goto	l1773
 11520  004956                     l7591:
 11521                           
 11522                           ;stkvar	_w @ sp[(-4)+0]
 11523  004956  0EFC               	movlw	-4
 11524  004958  6AE3               	clrf	plusw1,c
 11525  00495A  0EFD               	movlw	-3
 11526  00495C  6AE3               	clrf	plusw1,c
 11527  00495E                     l1773:
 11528                           
 11529                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 11530                           ;stkvar	_i @ sp[(-4)+2]
 11531  00495E  0EFE               	movlw	-2
 11532  004960  6AE3               	clrf	plusw1,c
 11533  004962  0EFF               	movlw	-1
 11534  004964  6AE3               	clrf	plusw1,c
 11535                           
 11536                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 11537  004966  D01E               	goto	l7597
 11538  004968                     l7593:
 11539                           
 11540                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 11541                           ;stkvar	_fp @ sp[(-4)+-2]
 11542  004968  0EFA               	movlw	-6
 11543  00496A  006F FF8F FFE6     	movff	plusw1,postinc1
 11544  004970  006F FF8F FFE6     	movff	plusw1,postinc1
 11545  004976  0E20               	movlw	32
 11546  004978  6EE6               	movwf	postinc1,c
 11547  00497A  0E00               	movlw	0
 11548  00497C  6EE6               	movwf	postinc1,c
 11549  00497E  EC0B  F025         	call	_fputc	;wreg free
 11550                           
 11551                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
 11552                           ;stkvar	_i @ sp[(-4)+2]
 11553  004982  0EFE               	movlw	-2
 11554  004984  50E3               	movf	plusw1,w,c
 11555  004986  0F01               	addlw	1
 11556  004988  6E3B               	movwf	btemp,c
 11557  00498A  0EFE               	movlw	-2
 11558  00498C  0060  F0EF  FFE3   	movff	btemp,plusw1
 11559  004992  6A3B               	clrf	btemp,c
 11560  004994  0EFF               	movlw	-1
 11561  004996  50E3               	movf	plusw1,w,c
 11562  004998  203B               	addwfc	btemp,w,c
 11563  00499A  6E3B               	movwf	btemp,c
 11564  00499C  0EFF               	movlw	-1
 11565  00499E  0060  F0EF  FFE3   	movff	btemp,plusw1
 11566  0049A4                     l7597:
 11567                           
 11568                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 11569                           ;stkvar	_w @ sp[(-4)+0]
 11570                           ;stkvar	_i @ sp[(-4)+2]
 11571  0049A4  50E1               	movf	fsr1l,w,c
 11572  0049A6  0FFE               	addlw	-2
 11573  0049A8  6ED9               	movwf	fsr2l,c
 11574  0049AA  50E2               	movf	fsr1h,w,c
 11575  0049AC  6EDA               	movwf	fsr2h,c
 11576  0049AE  0EFF               	movlw	255
 11577  0049B0  22DA               	addwfc	fsr2h,f,c
 11578  0049B2  0EFC               	movlw	-4
 11579  0049B4  50E3               	movf	plusw1,w,c
 11580  0049B6  5CDE               	subwf	postinc2,w,c
 11581  0049B8  50DE               	movf	postinc2,w,c
 11582  0049BA  0A80               	xorlw	128
 11583  0049BC  6E3B               	movwf	btemp,c
 11584  0049BE  0EFD               	movlw	-3
 11585  0049C0  50E3               	movf	plusw1,w,c
 11586  0049C2  0A80               	xorlw	128
 11587  0049C4  583B               	subwfb	btemp,w,c
 11588  0049C6  A0D8               	btfss	status,0,c
 11589  0049C8  D7CF               	goto	l7593
 11590                           
 11591                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 11592  0049CA  B024               	btfsc	_flags,0,c
 11593  0049CC  D010               	goto	l7601
 11594                           
 11595                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 11596                           ;stkvar	_fp @ sp[(-4)+-2]
 11597  0049CE  0EFA               	movlw	-6
 11598  0049D0  006F FF8F FFE6     	movff	plusw1,postinc1
 11599  0049D6  006F FF8F FFE6     	movff	plusw1,postinc1
 11600                           
 11601                           ;stkvar	_buf @ sp[(-6)+-4]
 11602  0049DC  0EF6               	movlw	-10
 11603  0049DE  006F FF8F FFE6     	movff	plusw1,postinc1
 11604  0049E4  006F FF8F FFE6     	movff	plusw1,postinc1
 11605  0049EA  EC23  F029         	call	_fputs	;wreg free
 11606  0049EE                     l7601:
 11607                           
 11608                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 11609                           ;stkvar	_w @ sp[(-4)+0]
 11610                           ;stkvar	_buf @ sp[(-4)+-4]
 11611  0049EE  0EF8               	movlw	-8
 11612  0049F0  006F FF8F FFE6     	movff	plusw1,postinc1
 11613  0049F6  006F FF8F FFE6     	movff	plusw1,postinc1
 11614  0049FC  ECE8  F027         	call	_strlen	;wreg free
 11615  004A00  0EFC               	movlw	-4
 11616  004A02  50E3               	movf	plusw1,w,c
 11617  004A04  263B               	addwf	btemp,f,c
 11618  004A06  0EFD               	movlw	-3
 11619  004A08  50E3               	movf	plusw1,w,c
 11620  004A0A  223C               	addwfc	btemp+1,f,c
 11621                           
 11622                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 11623  004A0C  0EF6               	movlw	246
 11624  004A0E  26E1               	addwf	fsr1l,f,c
 11625  004A10  0EFF               	movlw	255
 11626  004A12  22E2               	addwfc	fsr1h,f,c
 11627  004A14  0012               	return		;funcret
 11628  004A16                     __end_of_pad:
 11629                           	opt callstack 0
 11630                           
 11631 ;; *************** function _strlen *****************
 11632 ;; Defined at:
 11633 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
 11634 ;; Parameters:    Size  Location     Type
 11635 ;;  s               2  [STACK] PTR const unsigned char 
 11636 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 11637 ;;		 -> STR_3(6), V(89), 
 11638 ;; Auto vars:     Size  Location     Type
 11639 ;;  a               2  [STACK] PTR const unsigned char 
 11640 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 11641 ;;		 -> STR_3(6), V(89), 
 11642 ;; Return value:  Size  Location     Type
 11643 ;;                  2  [STACK] unsigned int 
 11644 ;; Registers used:
 11645 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 11646 ;; Tracked objects:
 11647 ;;		On entry : 0/0
 11648 ;;		On exit  : 0/0
 11649 ;;		Unchanged: 0/0
 11650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11655 ;;Total ram usage:        0 bytes
 11656 ;; Hardware stack levels used:    1
 11657 ;; Hardware stack levels required when called:    3
 11658 ;; This function calls:
 11659 ;;		Nothing
 11660 ;; This function is called by:
 11661 ;;		_eaDogM_WriteString
 11662 ;;		_pad
 11663 ;;		_stoa
 11664 ;; This function uses a reentrant model
 11665 ;;
 11666                           
 11667                           	psect	text48
 11668  004FD0                     __ptext48:
 11669                           	opt callstack 0
 11670  004FD0                     _strlen:
 11671                           	opt callstack 0
 11672                           
 11673                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11674  004FD0  52E6               	movf	postinc1,f,c
 11675  004FD2  52E6               	movf	postinc1,f,c
 11676                           
 11677                           ;stkvar	_s @ sp[(-2)+-2]
 11678                           
 11679                           ;incstack = 0
 11680  004FD4  0EFC               	movlw	-4
 11681  004FD6  006F FF8C  F045    	movff	plusw1,btemp+10
 11682  004FDC  0EFD               	movlw	-3
 11683  004FDE  006F FF8C  F046    	movff	plusw1,btemp+11
 11684                           
 11685                           ;stkvar	_a @ sp[(-2)+0]
 11686  004FE4  0EFF               	movlw	-1
 11687  004FE6  0060  F11B  FFE3   	movff	btemp+11,plusw1
 11688  004FEC  0EFE               	movlw	-2
 11689  004FEE  0060  F117  FFE3   	movff	btemp+10,plusw1
 11690  004FF4  D011               	goto	l5273
 11691  004FF6                     l5271:
 11692                           
 11693                           ;stkvar	_s @ sp[(-2)+-2]
 11694  004FF6  0EFC               	movlw	-4
 11695  004FF8  50E3               	movf	plusw1,w,c
 11696  004FFA  0F01               	addlw	1
 11697  004FFC  6E3B               	movwf	btemp,c
 11698  004FFE  0EFC               	movlw	-4
 11699  005000  0060  F0EF  FFE3   	movff	btemp,plusw1
 11700  005006  6A3B               	clrf	btemp,c
 11701  005008  0EFD               	movlw	-3
 11702  00500A  50E3               	movf	plusw1,w,c
 11703  00500C  203B               	addwfc	btemp,w,c
 11704  00500E  6E3B               	movwf	btemp,c
 11705  005010  0EFD               	movlw	-3
 11706  005012  0060  F0EF  FFE3   	movff	btemp,plusw1
 11707  005018                     l5273:
 11708                           
 11709                           ;stkvar	_s @ sp[(-2)+-2]
 11710  005018  0EFC               	movlw	-4
 11711  00501A  006F FF8F FFF6     	movff	plusw1,tblptrl
 11712  005020  0EFD               	movlw	-3
 11713  005022  006F FF8F FFF7     	movff	plusw1,tblptrh
 11714  005028  0E00               	movlw	low (__smallconst shr (0+16))
 11715  00502A  6EF8               	movwf	tblptru,c
 11716  00502C  0E1F               	movlw	(high __ramtop+-1)
 11717  00502E  64F7               	cpfsgt	tblptrh,c
 11718  005030  D003               	bra	u2297
 11719  005032  0008               	tblrd		*
 11720  005034  50F5               	movf	tablat,w,c
 11721  005036  D007               	bra	u2290
 11722  005038                     u2297:
 11723  005038  006F FFDB FFE9     	movff	tblptrl,fsr0l
 11724  00503E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 11725  005044  50EF               	movf	indf0,w,c
 11726  005046                     u2290:
 11727  005046  0900               	iorlw	0
 11728  005048  A4D8               	btfss	status,2,c
 11729  00504A  D7D5               	goto	l5271
 11730                           
 11731                           ;stkvar	_a @ sp[(-2)+0]
 11732                           ;stkvar	_s @ sp[(-2)+-2]
 11733  00504C  0EFC               	movlw	-4
 11734  00504E  006F FF8C  F03B    	movff	plusw1,btemp
 11735  005054  0EFD               	movlw	-3
 11736  005056  006F FF8C  F03C    	movff	plusw1,btemp+1
 11737  00505C  0EFE               	movlw	-2
 11738  00505E  50E3               	movf	plusw1,w,c
 11739  005060  5E3B               	subwf	btemp,f,c
 11740  005062  0EFF               	movlw	-1
 11741  005064  50E3               	movf	plusw1,w,c
 11742  005066  5A3C               	subwfb	btemp+1,f,c
 11743                           
 11744                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 11745  005068  52E5               	movf	postdec1,f,c
 11746  00506A  52E5               	movf	postdec1,f,c
 11747  00506C  52E5               	movf	postdec1,f,c
 11748  00506E  52E5               	movf	postdec1,f,c
 11749  005070  0012               	return		;funcret
 11750  005072                     __end_of_strlen:
 11751                           	opt callstack 0
 11752                           
 11753 ;; *************** function _fputs *****************
 11754 ;; Defined at:
 11755 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
 11756 ;; Parameters:    Size  Location     Type
 11757 ;;  s               2  [STACK] PTR const unsigned char 
 11758 ;;		 -> dbuf(32), 
 11759 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11760 ;;		 -> f(5), NULL(0), 
 11761 ;; Auto vars:     Size  Location     Type
 11762 ;;  i               2  [STACK] int 
 11763 ;;  c               1  [STACK] unsigned char 
 11764 ;; Return value:  Size  Location     Type
 11765 ;;                  2  [STACK] int 
 11766 ;; Registers used:
 11767 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 11768 ;; Tracked objects:
 11769 ;;		On entry : 0/1
 11770 ;;		On exit  : 0/0
 11771 ;;		Unchanged: 0/0
 11772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11777 ;;Total ram usage:        0 bytes
 11778 ;; Hardware stack levels used:    1
 11779 ;; Hardware stack levels required when called:    6
 11780 ;; This function calls:
 11781 ;;		_fputc
 11782 ;; This function is called by:
 11783 ;;		_pad
 11784 ;; This function uses a reentrant model
 11785 ;;
 11786                           
 11787                           	psect	text49
 11788  005246                     __ptext49:
 11789                           	opt callstack 0
 11790  005246                     _fputs:
 11791                           	opt callstack 0
 11792                           
 11793                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11794  005246  52E6               	movf	postinc1,f,c
 11795  005248  52E6               	movf	postinc1,f,c
 11796  00524A  52E6               	movf	postinc1,f,c
 11797                           
 11798                           ;stkvar	_i @ sp[(-3)+0]
 11799                           
 11800                           ;incstack = 0
 11801  00524C  0EFD               	movlw	-3
 11802  00524E  6AE3               	clrf	plusw1,c
 11803  005250  0EFE               	movlw	-2
 11804  005252  6AE3               	clrf	plusw1,c
 11805  005254  D01F               	goto	l7581
 11806  005256                     l7577:
 11807                           
 11808                           ;stkvar	_fp @ sp[(-3)+-4]
 11809  005256  0EF9               	movlw	-7
 11810  005258  006F FF8F FFE6     	movff	plusw1,postinc1
 11811  00525E  006F FF8F FFE6     	movff	plusw1,postinc1
 11812                           
 11813                           ;stkvar	_c @ sp[(-5)+2]
 11814  005264  0EFD               	movlw	-3
 11815  005266  50E3               	movf	plusw1,w,c
 11816  005268  6EE6               	movwf	postinc1,c
 11817  00526A  0E00               	movlw	0
 11818  00526C  6EE6               	movwf	postinc1,c
 11819  00526E  EC0B  F025         	call	_fputc	;wreg free
 11820                           
 11821                           ;stkvar	_i @ sp[(-3)+0]
 11822  005272  0EFD               	movlw	-3
 11823  005274  50E3               	movf	plusw1,w,c
 11824  005276  0F01               	addlw	1
 11825  005278  6E3B               	movwf	btemp,c
 11826  00527A  0EFD               	movlw	-3
 11827  00527C  0060  F0EF  FFE3   	movff	btemp,plusw1
 11828  005282  6A3B               	clrf	btemp,c
 11829  005284  0EFE               	movlw	-2
 11830  005286  50E3               	movf	plusw1,w,c
 11831  005288  203B               	addwfc	btemp,w,c
 11832  00528A  6E3B               	movwf	btemp,c
 11833  00528C  0EFE               	movlw	-2
 11834  00528E  0060  F0EF  FFE3   	movff	btemp,plusw1
 11835  005294                     l7581:
 11836                           
 11837                           ;stkvar	_i @ sp[(-3)+0]
 11838  005294  0EFD               	movlw	-3
 11839  005296  006F FF8C  F045    	movff	plusw1,btemp+10
 11840  00529C  0EFE               	movlw	-2
 11841  00529E  006F FF8C  F046    	movff	plusw1,btemp+11
 11842                           
 11843                           ;stkvar	_s @ sp[(-3)+-2]
 11844  0052A4  0EFB               	movlw	-5
 11845  0052A6  006F FF8C  F043    	movff	plusw1,btemp+8
 11846  0052AC  0EFC               	movlw	-4
 11847  0052AE  006F FF8C  F044    	movff	plusw1,btemp+9
 11848  0052B4  5045               	movf	btemp+10,w,c
 11849  0052B6  2443               	addwf	btemp+8,w,c
 11850  0052B8  6ED9               	movwf	fsr2l,c
 11851  0052BA  5046               	movf	btemp+11,w,c
 11852  0052BC  2044               	addwfc	btemp+9,w,c
 11853  0052BE  6EDA               	movwf	fsr2h,c
 11854  0052C0  50DF               	movf	indf2,w,c
 11855  0052C2  6E46               	movwf	btemp+11,c
 11856                           
 11857                           ;stkvar	_c @ sp[(-3)+2]
 11858  0052C4  0EFF               	movlw	-1
 11859  0052C6  0060  F11B  FFE3   	movff	btemp+11,plusw1
 11860  0052CC  0EFF               	movlw	-1
 11861  0052CE  50E3               	movf	plusw1,w,c
 11862  0052D0  A4D8               	btfss	status,2,c
 11863  0052D2  D7C1               	goto	l7577
 11864                           
 11865                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 11866  0052D4  0EF9               	movlw	249
 11867  0052D6  26E1               	addwf	fsr1l,f,c
 11868  0052D8  0EFF               	movlw	255
 11869  0052DA  22E2               	addwfc	fsr1h,f,c
 11870  0052DC  0012               	return		;funcret
 11871  0052DE                     __end_of_fputs:
 11872                           	opt callstack 0
 11873                           
 11874 ;; *************** function _fputc *****************
 11875 ;; Defined at:
 11876 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 11877 ;; Parameters:    Size  Location     Type
 11878 ;;  c               2  [STACK] int 
 11879 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11880 ;;		 -> f(5), NULL(0), 
 11881 ;; Auto vars:     Size  Location     Type
 11882 ;;		None
 11883 ;; Return value:  Size  Location     Type
 11884 ;;                  2  [STACK] int 
 11885 ;; Registers used:
 11886 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 11887 ;; Tracked objects:
 11888 ;;		On entry : 0/0
 11889 ;;		On exit  : 0/0
 11890 ;;		Unchanged: 0/0
 11891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11896 ;;Total ram usage:        0 bytes
 11897 ;; Hardware stack levels used:    1
 11898 ;; Hardware stack levels required when called:    5
 11899 ;; This function calls:
 11900 ;;		_putch
 11901 ;; This function is called by:
 11902 ;;		_pad
 11903 ;;		_stoa
 11904 ;;		_vfpfcnvrt
 11905 ;;		_fputs
 11906 ;; This function uses a reentrant model
 11907 ;;
 11908                           
 11909                           	psect	text50
 11910  004A16                     __ptext50:
 11911                           	opt callstack 0
 11912  004A16                     _fputc:
 11913                           	opt callstack 21
 11914                           
 11915                           ;stkvar	_fp @ sp[(0)+-4]
 11916                           
 11917                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11918                           ;incstack = 0
 11919  004A16  0EFC               	movlw	-4
 11920  004A18  006F FF8C  F03B    	movff	plusw1,btemp
 11921  004A1E  0EFD               	movlw	-3
 11922  004A20  50E3               	movf	plusw1,w,c
 11923  004A22  103B               	iorwf	btemp,w,c
 11924  004A24  B4D8               	btfsc	status,2,c
 11925  004A26  D009               	goto	u4360
 11926                           
 11927                           ;stkvar	_fp @ sp[(0)+-4]
 11928  004A28  0EFC               	movlw	-4
 11929  004A2A  006F FF8C  F03B    	movff	plusw1,btemp
 11930  004A30  0EFD               	movlw	-3
 11931  004A32  50E3               	movf	plusw1,w,c
 11932  004A34  103B               	iorwf	btemp,w,c
 11933  004A36  A4D8               	btfss	status,2,c
 11934  004A38  D006               	goto	l7567
 11935  004A3A                     u4360:
 11936                           
 11937                           ;stkvar	_c @ sp[(0)+-2]
 11938  004A3A  0EFE               	movlw	-2
 11939  004A3C  50E3               	movf	plusw1,w,c
 11940  004A3E  6EE6               	movwf	postinc1,c
 11941  004A40  EC2B  F030         	call	_putch	;wreg free
 11942  004A44  D069               	goto	l2556
 11943  004A46                     l7567:
 11944                           
 11945                           ;stkvar	_fp @ sp[(0)+-4]
 11946  004A46  0EFC               	movlw	-4
 11947  004A48  006F FF8C  F045    	movff	plusw1,btemp+10
 11948  004A4E  0EFD               	movlw	-3
 11949  004A50  006F FF8C  F046    	movff	plusw1,btemp+11
 11950  004A56  0E03               	movlw	3
 11951  004A58  2445               	addwf	btemp+10,w,c
 11952  004A5A  6ED9               	movwf	fsr2l,c
 11953  004A5C  0E00               	movlw	0
 11954  004A5E  2046               	addwfc	btemp+11,w,c
 11955  004A60  6EDA               	movwf	fsr2h,c
 11956  004A62  50DE               	movf	postinc2,w,c
 11957  004A64  10DE               	iorwf	postinc2,w,c
 11958  004A66  B4D8               	btfsc	status,2,c
 11959  004A68  D026               	goto	u4380
 11960                           
 11961                           ;stkvar	_fp @ sp[(0)+-4]
 11962  004A6A  0EFC               	movlw	-4
 11963  004A6C  006F FF8C  F045    	movff	plusw1,btemp+10
 11964  004A72  0EFD               	movlw	-3
 11965  004A74  006F FF8C  F046    	movff	plusw1,btemp+11
 11966  004A7A  0E03               	movlw	3
 11967  004A7C  2445               	addwf	btemp+10,w,c
 11968  004A7E  6ED9               	movwf	fsr2l,c
 11969  004A80  0E00               	movlw	0
 11970  004A82  2046               	addwfc	btemp+11,w,c
 11971  004A84  6EDA               	movwf	fsr2h,c
 11972                           
 11973                           ;stkvar	_fp @ sp[(0)+-4]
 11974  004A86  0EFC               	movlw	-4
 11975  004A88  006F FF8C  F045    	movff	plusw1,btemp+10
 11976  004A8E  0EFD               	movlw	-3
 11977  004A90  006F FF8C  F046    	movff	plusw1,btemp+11
 11978  004A96  0E01               	movlw	1
 11979  004A98  2445               	addwf	btemp+10,w,c
 11980  004A9A  6EE9               	movwf	fsr0l,c
 11981  004A9C  0E00               	movlw	0
 11982  004A9E  2046               	addwfc	btemp+11,w,c
 11983  004AA0  6EEA               	movwf	fsr0h,c
 11984  004AA2  50DE               	movf	postinc2,w,c
 11985  004AA4  5CEE               	subwf	postinc0,w,c
 11986  004AA6  50EE               	movf	postinc0,w,c
 11987  004AA8  0A80               	xorlw	128
 11988  004AAA  6E3B               	movwf	btemp,c
 11989  004AAC  50DE               	movf	postinc2,w,c
 11990  004AAE  0A80               	xorlw	128
 11991  004AB0  583B               	subwfb	btemp,w,c
 11992  004AB2  B0D8               	btfsc	status,0,c
 11993  004AB4  D031               	goto	l2556
 11994  004AB6                     u4380:
 11995                           
 11996                           ;stkvar	_c @ sp[(0)+-2]
 11997                           ;stkvar	_fp @ sp[(0)+-4]
 11998  004AB6  0EFC               	movlw	-4
 11999  004AB8  006F FF8C  F045    	movff	plusw1,btemp+10
 12000  004ABE  0EFD               	movlw	-3
 12001  004AC0  006F FF8C  F046    	movff	plusw1,btemp+11
 12002  004AC6  0E01               	movlw	1
 12003  004AC8  2445               	addwf	btemp+10,w,c
 12004  004ACA  6ED9               	movwf	fsr2l,c
 12005  004ACC  0E00               	movlw	0
 12006  004ACE  2046               	addwfc	btemp+11,w,c
 12007  004AD0  6EDA               	movwf	fsr2h,c
 12008  004AD2  50DF               	movf	indf2,w,c
 12009  004AD4  6E46               	movwf	btemp+11,c
 12010                           
 12011                           ;stkvar	_fp @ sp[(0)+-4]
 12012  004AD6  0EFC               	movlw	-4
 12013  004AD8  006F FF8F FFD9     	movff	plusw1,fsr2l
 12014  004ADE  0EFD               	movlw	-3
 12015  004AE0  006F FF8F FFDA     	movff	plusw1,fsr2h
 12016  004AE6  50DF               	movf	indf2,w,c
 12017  004AE8  2446               	addwf	btemp+11,w,c
 12018  004AEA  6ED9               	movwf	fsr2l,c
 12019  004AEC  6ADA               	clrf	fsr2h,c
 12020  004AEE  0EFE               	movlw	-2
 12021  004AF0  006F FF8F FFDF     	movff	plusw1,indf2
 12022                           
 12023                           ;stkvar	_fp @ sp[(0)+-4]
 12024  004AF6  0EFC               	movlw	-4
 12025  004AF8  006F FF8C  F045    	movff	plusw1,btemp+10
 12026  004AFE  0EFD               	movlw	-3
 12027  004B00  006F FF8C  F046    	movff	plusw1,btemp+11
 12028  004B06  0E01               	movlw	1
 12029  004B08  2445               	addwf	btemp+10,w,c
 12030  004B0A  6ED9               	movwf	fsr2l,c
 12031  004B0C  0E00               	movlw	0
 12032  004B0E  2046               	addwfc	btemp+11,w,c
 12033  004B10  6EDA               	movwf	fsr2h,c
 12034  004B12  2ADE               	incf	postinc2,f,c
 12035  004B14  0E00               	movlw	0
 12036  004B16  22DD               	addwfc	postdec2,f,c
 12037  004B18                     l2556:
 12038                           
 12039                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 12040  004B18  52E5               	movf	postdec1,f,c
 12041  004B1A  52E5               	movf	postdec1,f,c
 12042  004B1C  52E5               	movf	postdec1,f,c
 12043  004B1E  52E5               	movf	postdec1,f,c
 12044  004B20  0012               	return		;funcret
 12045  004B22                     __end_of_fputc:
 12046                           	opt callstack 0
 12047                           
 12048 ;; *************** function _putch *****************
 12049 ;; Defined at:
 12050 ;;		line 138 in file "eadog.c"
 12051 ;; Parameters:    Size  Location     Type
 12052 ;;  c               1  [STACK] unsigned char 
 12053 ;; Auto vars:     Size  Location     Type
 12054 ;;		None
 12055 ;; Return value:  Size  Location     Type
 12056 ;;                  1  [STACK] void 
 12057 ;; Registers used:
 12058 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 12059 ;; Tracked objects:
 12060 ;;		On entry : 0/0
 12061 ;;		On exit  : 0/0
 12062 ;;		Unchanged: 0/0
 12063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12068 ;;Total ram usage:        0 bytes
 12069 ;; Hardware stack levels used:    1
 12070 ;; Hardware stack levels required when called:    4
 12071 ;; This function calls:
 12072 ;;		_ringBufS_put_dma
 12073 ;; This function is called by:
 12074 ;;		_fputc
 12075 ;; This function uses a reentrant model
 12076 ;;
 12077                           
 12078                           	psect	text51
 12079  006056                     __ptext51:
 12080                           	opt callstack 0
 12081  006056                     _putch:
 12082                           	opt callstack 21
 12083                           
 12084                           ;eadog.c: 138: void putch(char c);eadog.c: 139: {;eadog.c: 140:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 12085                           ;stkvar	_c @ sp[(0)+-1]
 12086                           
 12087                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12088                           ;incstack = 0
 12089  006056  0EFF               	movlw	-1
 12090  006058  50E3               	movf	plusw1,w,c
 12091  00605A  6EE6               	movwf	postinc1,c
 12092  00605C  0060  F34F  FFE6   	movff	_spi_link+6,postinc1
 12093  006062  0060  F353  FFE6   	movff	_spi_link+7,postinc1
 12094  006068  EC93  F027         	call	_ringBufS_put_dma	;wreg free
 12095                           
 12096                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 12097  00606C  52E5               	movf	postdec1,f,c
 12098  00606E  0012               	return		;funcret
 12099  006070                     __end_of_putch:
 12100                           	opt callstack 0
 12101                           
 12102 ;; *************** function _ringBufS_put_dma *****************
 12103 ;; Defined at:
 12104 ;;		line 67 in file "ringbufs.c"
 12105 ;; Parameters:    Size  Location     Type
 12106 ;;  _this           2  [STACK] PTR struct ringBufS_t
 12107 ;;		 -> ring_buf1(67), 
 12108 ;;  c               1  [STACK] const unsigned char 
 12109 ;; Auto vars:     Size  Location     Type
 12110 ;;		None
 12111 ;; Return value:  Size  Location     Type
 12112 ;;                  1  [STACK] void 
 12113 ;; Registers used:
 12114 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 12115 ;; Tracked objects:
 12116 ;;		On entry : 0/0
 12117 ;;		On exit  : 0/0
 12118 ;;		Unchanged: 0/0
 12119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12124 ;;Total ram usage:        0 bytes
 12125 ;; Hardware stack levels used:    1
 12126 ;; Hardware stack levels required when called:    3
 12127 ;; This function calls:
 12128 ;;		Nothing
 12129 ;; This function is called by:
 12130 ;;		_putch
 12131 ;; This function uses a reentrant model
 12132 ;;
 12133                           
 12134                           	psect	text52
 12135  004F26                     __ptext52:
 12136                           	opt callstack 0
 12137  004F26                     _ringBufS_put_dma:
 12138                           	opt callstack 21
 12139                           
 12140                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 12141                           ;stkvar	__this @ sp[(0)+-2]
 12142                           
 12143                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12144                           ;incstack = 0
 12145  004F26  0EFE               	movlw	-2
 12146  004F28  006F FF8C  F045    	movff	plusw1,btemp+10
 12147  004F2E  0EFF               	movlw	-1
 12148  004F30  006F FF8C  F046    	movff	plusw1,btemp+11
 12149  004F36  0E42               	movlw	66
 12150  004F38  2445               	addwf	btemp+10,w,c
 12151  004F3A  6ED9               	movwf	fsr2l,c
 12152  004F3C  0E00               	movlw	0
 12153  004F3E  2046               	addwfc	btemp+11,w,c
 12154  004F40  6EDA               	movwf	fsr2h,c
 12155  004F42  0E40               	movlw	64
 12156  004F44  60DF               	cpfslt	indf2,c
 12157  004F46  D040               	goto	l1456
 12158                           
 12159                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 12160                           ;stkvar	_c @ sp[(0)+-3]
 12161                           ;stkvar	__this @ sp[(0)+-2]
 12162  004F48  0EFE               	movlw	-2
 12163  004F4A  006F FF8C  F045    	movff	plusw1,btemp+10
 12164  004F50  0EFF               	movlw	-1
 12165  004F52  006F FF8C  F046    	movff	plusw1,btemp+11
 12166  004F58  0E40               	movlw	64
 12167  004F5A  2445               	addwf	btemp+10,w,c
 12168  004F5C  6ED9               	movwf	fsr2l,c
 12169  004F5E  0E00               	movlw	0
 12170  004F60  2046               	addwfc	btemp+11,w,c
 12171  004F62  6EDA               	movwf	fsr2h,c
 12172  004F64  50DF               	movf	indf2,w,c
 12173  004F66  6E46               	movwf	btemp+11,c
 12174                           
 12175                           ;stkvar	__this @ sp[(0)+-2]
 12176  004F68  0EFE               	movlw	-2
 12177  004F6A  006F FF8C  F043    	movff	plusw1,btemp+8
 12178  004F70  0EFF               	movlw	-1
 12179  004F72  006F FF8C  F044    	movff	plusw1,btemp+9
 12180  004F78  5046               	movf	btemp+11,w,c
 12181  004F7A  2443               	addwf	btemp+8,w,c
 12182  004F7C  6ED9               	movwf	fsr2l,c
 12183  004F7E  0E00               	movlw	0
 12184  004F80  2044               	addwfc	btemp+9,w,c
 12185  004F82  6EDA               	movwf	fsr2h,c
 12186  004F84  0EFD               	movlw	-3
 12187  004F86  006F FF8F FFDF     	movff	plusw1,indf2
 12188                           
 12189                           ;ringbufs.c: 71:   ++_this->head;
 12190                           ;stkvar	__this @ sp[(0)+-2]
 12191  004F8C  0EFE               	movlw	-2
 12192  004F8E  006F FF8C  F045    	movff	plusw1,btemp+10
 12193  004F94  0EFF               	movlw	-1
 12194  004F96  006F FF8C  F046    	movff	plusw1,btemp+11
 12195  004F9C  0E40               	movlw	64
 12196  004F9E  2445               	addwf	btemp+10,w,c
 12197  004FA0  6ED9               	movwf	fsr2l,c
 12198  004FA2  0E00               	movlw	0
 12199  004FA4  2046               	addwfc	btemp+11,w,c
 12200  004FA6  6EDA               	movwf	fsr2h,c
 12201  004FA8  2ADF               	incf	indf2,f,c
 12202                           
 12203                           ;ringbufs.c: 72:   ++_this->count;
 12204                           ;stkvar	__this @ sp[(0)+-2]
 12205  004FAA  0EFE               	movlw	-2
 12206  004FAC  006F FF8C  F045    	movff	plusw1,btemp+10
 12207  004FB2  0EFF               	movlw	-1
 12208  004FB4  006F FF8C  F046    	movff	plusw1,btemp+11
 12209  004FBA  0E42               	movlw	66
 12210  004FBC  2445               	addwf	btemp+10,w,c
 12211  004FBE  6ED9               	movwf	fsr2l,c
 12212  004FC0  0E00               	movlw	0
 12213  004FC2  2046               	addwfc	btemp+11,w,c
 12214  004FC4  6EDA               	movwf	fsr2h,c
 12215  004FC6  2ADF               	incf	indf2,f,c
 12216  004FC8                     l1456:
 12217                           
 12218                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 12219  004FC8  52E5               	movf	postdec1,f,c
 12220  004FCA  52E5               	movf	postdec1,f,c
 12221  004FCC  52E5               	movf	postdec1,f,c
 12222  004FCE  0012               	return		;funcret
 12223  004FD0                     __end_of_ringBufS_put_dma:
 12224                           	opt callstack 0
 12225                           
 12226 ;; *************** function _SYSTEM_Initialize *****************
 12227 ;; Defined at:
 12228 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12229 ;; Parameters:    Size  Location     Type
 12230 ;;		None
 12231 ;; Auto vars:     Size  Location     Type
 12232 ;;		None
 12233 ;; Return value:  Size  Location     Type
 12234 ;;                  1  [STACK] void 
 12235 ;; Registers used:
 12236 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 12237 ;; Tracked objects:
 12238 ;;		On entry : 0/0
 12239 ;;		On exit  : 3F/3C
 12240 ;;		Unchanged: 0/0
 12241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12246 ;;Total ram usage:        0 bytes
 12247 ;; Hardware stack levels used:    1
 12248 ;; Hardware stack levels required when called:    5
 12249 ;; This function calls:
 12250 ;;		_ADCC_Initialize
 12251 ;;		_CLC1_Initialize
 12252 ;;		_CLKREF_Initialize
 12253 ;;		_DMA1_Initialize
 12254 ;;		_DSM_Initialize
 12255 ;;		_EXT_INT_Initialize
 12256 ;;		_INTERRUPT_Initialize
 12257 ;;		_NCO1_Initialize
 12258 ;;		_OSCILLATOR_Initialize
 12259 ;;		_PIN_MANAGER_Initialize
 12260 ;;		_PMD_Initialize
 12261 ;;		_SPI1_Initialize
 12262 ;;		_TMR5_Initialize
 12263 ;;		_TMR6_Initialize
 12264 ;;		_UART1_Initialize
 12265 ;;		_UART2_Initialize
 12266 ;; This function is called by:
 12267 ;;		_main
 12268 ;; This function uses a reentrant model
 12269 ;;
 12270                           
 12271                           	psect	text53
 12272  00585E                     __ptext53:
 12273                           	opt callstack 0
 12274  00585E                     _SYSTEM_Initialize:
 12275                           	opt callstack 25
 12276                           
 12277                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 12278                           
 12279                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12280                           ;incstack = 0
 12281  00585E  EC31  F02A         	call	_INTERRUPT_Initialize	;wreg free
 12282                           
 12283                           ; BSR set to: 57
 12284                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 12285  005862  EC68  F030         	call	_PMD_Initialize	;wreg free
 12286                           
 12287                           ; BSR set to: 57
 12288                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 12289  005866  EC39  F028         	call	_PIN_MANAGER_Initialize	;wreg free
 12290                           
 12291                           ; BSR set to: 58
 12292                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 12293  00586A  EC5D  F030         	call	_OSCILLATOR_Initialize	;wreg free
 12294                           
 12295                           ; BSR set to: 57
 12296                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 12297  00586E  ECA1  F02B         	call	_ADCC_Initialize	;wreg free
 12298                           
 12299                           ;mcc_generated_files/mcc.c: 57:     NCO1_Initialize();
 12300  005872  EC0F  F030         	call	_NCO1_Initialize	;wreg free
 12301                           
 12302                           ; BSR set to: 63
 12303                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 12304  005876  EC7B  F02B         	call	_EXT_INT_Initialize	;wreg free
 12305                           
 12306                           ; BSR set to: 57
 12307                           ;mcc_generated_files/mcc.c: 59:     TMR6_Initialize();
 12308  00587A  EC7D  F02E         	call	_TMR6_Initialize	;wreg free
 12309                           
 12310                           ;mcc_generated_files/mcc.c: 60:     CLC1_Initialize();
 12311  00587E  EC8E  F02F         	call	_CLC1_Initialize	;wreg free
 12312                           
 12313                           ; BSR set to: 60
 12314                           ;mcc_generated_files/mcc.c: 61:     TMR5_Initialize();
 12315  005882  ECE9  F02B         	call	_TMR5_Initialize	;wreg free
 12316                           
 12317                           ;mcc_generated_files/mcc.c: 62:     DSM_Initialize();
 12318  005886  EC1D  F030         	call	_DSM_Initialize	;wreg free
 12319                           
 12320                           ; BSR set to: 60
 12321                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 12322  00588A  EC64  F02A         	call	_UART1_Initialize	;wreg free
 12323                           
 12324                           ; BSR set to: 57
 12325                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 12326  00588E  ECF7  F02A         	call	_UART2_Initialize	;wreg free
 12327                           
 12328                           ; BSR set to: 57
 12329                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 12330  005892  EC52  F030         	call	_SPI1_Initialize	;wreg free
 12331                           
 12332                           ; BSR set to: 61
 12333                           ;mcc_generated_files/mcc.c: 66:     DMA1_Initialize();
 12334  005896  ECFC  F029         	call	_DMA1_Initialize	;wreg free
 12335                           
 12336                           ; BSR set to: 59
 12337                           ;mcc_generated_files/mcc.c: 67:     CLKREF_Initialize();
 12338  00589A  EC99  F030         	call	_CLKREF_Initialize	;wreg free
 12339                           
 12340                           ; BSR set to: 60
 12341                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 12342  00589E  0012               	return		;funcret
 12343  0058A0                     __end_of_SYSTEM_Initialize:
 12344                           	opt callstack 0
 12345                           
 12346 ;; *************** function _UART2_Initialize *****************
 12347 ;; Defined at:
 12348 ;;		line 78 in file "mcc_generated_files/uart2.c"
 12349 ;; Parameters:    Size  Location     Type
 12350 ;;		None
 12351 ;; Auto vars:     Size  Location     Type
 12352 ;;		None
 12353 ;; Return value:  Size  Location     Type
 12354 ;;                  1  [STACK] void 
 12355 ;; Registers used:
 12356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 12357 ;; Tracked objects:
 12358 ;;		On entry : 3F/39
 12359 ;;		On exit  : 3F/39
 12360 ;;		Unchanged: 0/0
 12361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12366 ;;Total ram usage:        0 bytes
 12367 ;; Hardware stack levels used:    1
 12368 ;; Hardware stack levels required when called:    4
 12369 ;; This function calls:
 12370 ;;		_UART2_SetRxInterruptHandler
 12371 ;;		_UART2_SetTxInterruptHandler
 12372 ;; This function is called by:
 12373 ;;		_SYSTEM_Initialize
 12374 ;; This function uses a reentrant model
 12375 ;;
 12376                           
 12377                           	psect	text54
 12378  0055EE                     __ptext54:
 12379                           	opt callstack 0
 12380  0055EE                     _UART2_Initialize:
 12381                           	opt callstack 25
 12382                           
 12383                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 12384                           
 12385                           ; BSR set to: 60
 12386                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12387                           ;incstack = 0
 12388  0055EE  0139               	movlb	57	; () banked
 12389  0055F0  9596               	bcf	150,2,b	;volatile
 12390                           
 12391                           ; BSR set to: 57
 12392                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 12393  0055F2  0EC4               	movlw	low _UART2_Receive_ISR
 12394  0055F4  6EE6               	movwf	postinc1,c
 12395  0055F6  0E5F               	movlw	high _UART2_Receive_ISR
 12396  0055F8  6EE6               	movwf	postinc1,c
 12397  0055FA  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 12398  0055FC  6EE6               	movwf	postinc1,c
 12399  0055FE  EC41  F02E         	call	_UART2_SetRxInterruptHandler	;wreg free
 12400                           
 12401                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 12402  005602  0139               	movlb	57	; () banked
 12403  005604  9796               	bcf	150,3,b	;volatile
 12404                           
 12405                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 12406  005606  0E0E               	movlw	low _UART2_Transmit_ISR
 12407  005608  6EE6               	movwf	postinc1,c
 12408  00560A  0E5B               	movlw	high _UART2_Transmit_ISR
 12409  00560C  6EE6               	movwf	postinc1,c
 12410  00560E  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 12411  005610  6EE6               	movwf	postinc1,c
 12412  005612  EC2D  F02E         	call	_UART2_SetTxInterruptHandler	;wreg free
 12413                           
 12414                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 12415  005616  013D               	movlb	61	; () banked
 12416  005618  6BD4               	clrf	212,b	;volatile
 12417                           
 12418                           ; BSR set to: 61
 12419                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 12420  00561A  6BD6               	clrf	214,b	;volatile
 12421                           
 12422                           ; BSR set to: 61
 12423                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 12424  00561C  6BD8               	clrf	216,b	;volatile
 12425                           
 12426                           ; BSR set to: 61
 12427                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 12428  00561E  0EB0               	movlw	176
 12429  005620  6FDA               	movwf	218,b	;volatile
 12430                           
 12431                           ; BSR set to: 61
 12432                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 12433  005622  0E80               	movlw	128
 12434  005624  6FDB               	movwf	219,b	;volatile
 12435                           
 12436                           ; BSR set to: 61
 12437                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 12438  005626  6BDC               	clrf	220,b	;volatile
 12439                           
 12440                           ; BSR set to: 61
 12441                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 12442  005628  0E82               	movlw	130
 12443  00562A  6FDD               	movwf	221,b	;volatile
 12444                           
 12445                           ; BSR set to: 61
 12446                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 12447  00562C  0E06               	movlw	6
 12448  00562E  6FDE               	movwf	222,b	;volatile
 12449                           
 12450                           ; BSR set to: 61
 12451                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 12452  005630  6BDF               	clrf	223,b	;volatile
 12453                           
 12454                           ; BSR set to: 61
 12455                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 12456  005632  6BE0               	clrf	224,b	;volatile
 12457                           
 12458                           ; BSR set to: 61
 12459                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 12460  005634  6BE1               	clrf	225,b	;volatile
 12461                           
 12462                           ; BSR set to: 61
 12463                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 12464  005636  6BE2               	clrf	226,b	;volatile
 12465                           
 12466                           ; BSR set to: 61
 12467                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 12468  005638  6A34               	clrf	_uart2TxHead,c	;volatile
 12469                           
 12470                           ; BSR set to: 61
 12471                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 12472  00563A  6A33               	clrf	_uart2TxTail,c	;volatile
 12473                           
 12474                           ; BSR set to: 61
 12475                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 12476  00563C  0E40               	movlw	64
 12477  00563E  6E32               	movwf	_uart2TxBufferRemaining,c	;volatile
 12478                           
 12479                           ; BSR set to: 61
 12480                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 12481  005640  6A31               	clrf	_uart2RxHead,c	;volatile
 12482                           
 12483                           ; BSR set to: 61
 12484                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 12485  005642  6A30               	clrf	_uart2RxTail,c	;volatile
 12486                           
 12487                           ; BSR set to: 61
 12488                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 12489  005644  6A2F               	clrf	_uart2RxCount,c	;volatile
 12490                           
 12491                           ; BSR set to: 61
 12492                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 12493  005646  0139               	movlb	57	; () banked
 12494  005648  8596               	bsf	150,2,b	;volatile
 12495                           
 12496                           ; BSR set to: 57
 12497                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 12498  00564A  0012               	return		;funcret
 12499  00564C                     __end_of_UART2_Initialize:
 12500                           	opt callstack 0
 12501                           
 12502 ;; *************** function _UART2_SetTxInterruptHandler *****************
 12503 ;; Defined at:
 12504 ;;		line 252 in file "mcc_generated_files/uart2.c"
 12505 ;; Parameters:    Size  Location     Type
 12506 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12507 ;;		 -> UART2_Transmit_ISR(1), 
 12508 ;; Auto vars:     Size  Location     Type
 12509 ;;		None
 12510 ;; Return value:  Size  Location     Type
 12511 ;;                  1  [STACK] void 
 12512 ;; Registers used:
 12513 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12514 ;; Tracked objects:
 12515 ;;		On entry : 3F/39
 12516 ;;		On exit  : 0/0
 12517 ;;		Unchanged: 0/0
 12518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12523 ;;Total ram usage:        0 bytes
 12524 ;; Hardware stack levels used:    1
 12525 ;; Hardware stack levels required when called:    3
 12526 ;; This function calls:
 12527 ;;		Nothing
 12528 ;; This function is called by:
 12529 ;;		_UART2_Initialize
 12530 ;; This function uses a reentrant model
 12531 ;;
 12532                           
 12533                           	psect	text55
 12534  005C5A                     __ptext55:
 12535                           	opt callstack 0
 12536  005C5A                     _UART2_SetTxInterruptHandler:
 12537                           	opt callstack 25
 12538                           
 12539                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 12540                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12541                           
 12542                           ; BSR set to: 57
 12543                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12544                           ;incstack = 0
 12545  005C5A  50E1               	movf	fsr1l,w,c
 12546  005C5C  0FFD               	addlw	-3
 12547  005C5E  6ED9               	movwf	fsr2l,c
 12548  005C60  50E2               	movf	fsr1h,w,c
 12549  005C62  6EDA               	movwf	fsr2h,c
 12550  005C64  0EFF               	movlw	255
 12551  005C66  22DA               	addwfc	fsr2h,f,c
 12552  005C68  006F FF78  F011    	movff	postinc2,_UART2_TxInterruptHandler
 12553  005C6E  006F FF78  F012    	movff	postinc2,_UART2_TxInterruptHandler+1
 12554  005C74  006F FF74  F013    	movff	postdec2,_UART2_TxInterruptHandler+2
 12555                           
 12556                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 12557  005C7A  52E5               	movf	postdec1,f,c
 12558  005C7C  52E5               	movf	postdec1,f,c
 12559  005C7E  52E5               	movf	postdec1,f,c
 12560  005C80  0012               	return		;funcret
 12561  005C82                     __end_of_UART2_SetTxInterruptHandler:
 12562                           	opt callstack 0
 12563                           
 12564 ;; *************** function _UART2_SetRxInterruptHandler *****************
 12565 ;; Defined at:
 12566 ;;		line 248 in file "mcc_generated_files/uart2.c"
 12567 ;; Parameters:    Size  Location     Type
 12568 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12569 ;;		 -> UART2_Receive_ISR(1), 
 12570 ;; Auto vars:     Size  Location     Type
 12571 ;;		None
 12572 ;; Return value:  Size  Location     Type
 12573 ;;                  1  [STACK] void 
 12574 ;; Registers used:
 12575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12576 ;; Tracked objects:
 12577 ;;		On entry : 3F/39
 12578 ;;		On exit  : 0/0
 12579 ;;		Unchanged: 0/0
 12580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12585 ;;Total ram usage:        0 bytes
 12586 ;; Hardware stack levels used:    1
 12587 ;; Hardware stack levels required when called:    3
 12588 ;; This function calls:
 12589 ;;		Nothing
 12590 ;; This function is called by:
 12591 ;;		_UART2_Initialize
 12592 ;; This function uses a reentrant model
 12593 ;;
 12594                           
 12595                           	psect	text56
 12596  005C82                     __ptext56:
 12597                           	opt callstack 0
 12598  005C82                     _UART2_SetRxInterruptHandler:
 12599                           	opt callstack 25
 12600                           
 12601                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 12602                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12603                           
 12604                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12605                           ;incstack = 0
 12606  005C82  50E1               	movf	fsr1l,w,c
 12607  005C84  0FFD               	addlw	-3
 12608  005C86  6ED9               	movwf	fsr2l,c
 12609  005C88  50E2               	movf	fsr1h,w,c
 12610  005C8A  6EDA               	movwf	fsr2h,c
 12611  005C8C  0EFF               	movlw	255
 12612  005C8E  22DA               	addwfc	fsr2h,f,c
 12613  005C90  006F FF78  F014    	movff	postinc2,_UART2_RxInterruptHandler
 12614  005C96  006F FF78  F015    	movff	postinc2,_UART2_RxInterruptHandler+1
 12615  005C9C  006F FF74  F016    	movff	postdec2,_UART2_RxInterruptHandler+2
 12616                           
 12617                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 12618  005CA2  52E5               	movf	postdec1,f,c
 12619  005CA4  52E5               	movf	postdec1,f,c
 12620  005CA6  52E5               	movf	postdec1,f,c
 12621  005CA8  0012               	return		;funcret
 12622  005CAA                     __end_of_UART2_SetRxInterruptHandler:
 12623                           	opt callstack 0
 12624                           
 12625 ;; *************** function _UART1_Initialize *****************
 12626 ;; Defined at:
 12627 ;;		line 78 in file "mcc_generated_files/uart1.c"
 12628 ;; Parameters:    Size  Location     Type
 12629 ;;		None
 12630 ;; Auto vars:     Size  Location     Type
 12631 ;;		None
 12632 ;; Return value:  Size  Location     Type
 12633 ;;                  1  [STACK] void 
 12634 ;; Registers used:
 12635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 12636 ;; Tracked objects:
 12637 ;;		On entry : 3F/3C
 12638 ;;		On exit  : 3F/39
 12639 ;;		Unchanged: 0/0
 12640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12645 ;;Total ram usage:        0 bytes
 12646 ;; Hardware stack levels used:    1
 12647 ;; Hardware stack levels required when called:    4
 12648 ;; This function calls:
 12649 ;;		_UART1_SetRxInterruptHandler
 12650 ;;		_UART1_SetTxInterruptHandler
 12651 ;; This function is called by:
 12652 ;;		_SYSTEM_Initialize
 12653 ;; This function uses a reentrant model
 12654 ;;
 12655                           
 12656                           	psect	text57
 12657  0054C8                     __ptext57:
 12658                           	opt callstack 0
 12659  0054C8                     _UART1_Initialize:
 12660                           	opt callstack 25
 12661                           
 12662                           ;mcc_generated_files/uart1.c: 81:  PIE3bits.U1RXIE = 0;
 12663                           
 12664                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12665                           ;incstack = 0
 12666  0054C8  0139               	movlb	57	; () banked
 12667  0054CA  9793               	bcf	147,3,b	;volatile
 12668                           
 12669                           ; BSR set to: 57
 12670                           ;mcc_generated_files/uart1.c: 82:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 12671  0054CC  0EA4               	movlw	low _UART1_Receive_ISR
 12672  0054CE  6EE6               	movwf	postinc1,c
 12673  0054D0  0E5F               	movlw	high _UART1_Receive_ISR
 12674  0054D2  6EE6               	movwf	postinc1,c
 12675  0054D4  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 12676  0054D6  6EE6               	movwf	postinc1,c
 12677  0054D8  EC69  F02E         	call	_UART1_SetRxInterruptHandler	;wreg free
 12678                           
 12679                           ;mcc_generated_files/uart1.c: 83:  PIE3bits.U1TXIE = 0;
 12680  0054DC  0139               	movlb	57	; () banked
 12681  0054DE  9993               	bcf	147,4,b	;volatile
 12682                           
 12683                           ;mcc_generated_files/uart1.c: 84:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 12684  0054E0  0EE2               	movlw	low _UART1_Transmit_ISR
 12685  0054E2  6EE6               	movwf	postinc1,c
 12686  0054E4  0E5A               	movlw	high _UART1_Transmit_ISR
 12687  0054E6  6EE6               	movwf	postinc1,c
 12688  0054E8  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 12689  0054EA  6EE6               	movwf	postinc1,c
 12690  0054EC  EC55  F02E         	call	_UART1_SetTxInterruptHandler	;wreg free
 12691                           
 12692                           ;mcc_generated_files/uart1.c: 89:  U1P1L = 0x00;
 12693  0054F0  013D               	movlb	61	; () banked
 12694  0054F2  6BEC               	clrf	236,b	;volatile
 12695                           
 12696                           ; BSR set to: 61
 12697                           ;mcc_generated_files/uart1.c: 92:  U1P1H = 0x00;
 12698  0054F4  6BED               	clrf	237,b	;volatile
 12699                           
 12700                           ; BSR set to: 61
 12701                           ;mcc_generated_files/uart1.c: 95:  U1P2L = 0x00;
 12702  0054F6  6BEE               	clrf	238,b	;volatile
 12703                           
 12704                           ; BSR set to: 61
 12705                           ;mcc_generated_files/uart1.c: 98:  U1P2H = 0x00;
 12706  0054F8  6BEF               	clrf	239,b	;volatile
 12707                           
 12708                           ; BSR set to: 61
 12709                           ;mcc_generated_files/uart1.c: 101:  U1P3L = 0x00;
 12710  0054FA  6BF0               	clrf	240,b	;volatile
 12711                           
 12712                           ; BSR set to: 61
 12713                           ;mcc_generated_files/uart1.c: 104:  U1P3H = 0x00;
 12714  0054FC  6BF1               	clrf	241,b	;volatile
 12715                           
 12716                           ; BSR set to: 61
 12717                           ;mcc_generated_files/uart1.c: 107:  U1CON0 = 0xB0;
 12718  0054FE  0EB0               	movlw	176
 12719  005500  6FF2               	movwf	242,b	;volatile
 12720                           
 12721                           ; BSR set to: 61
 12722                           ;mcc_generated_files/uart1.c: 110:  U1CON1 = 0x80;
 12723  005502  0E80               	movlw	128
 12724  005504  6FF3               	movwf	243,b	;volatile
 12725                           
 12726                           ; BSR set to: 61
 12727                           ;mcc_generated_files/uart1.c: 113:  U1CON2 = 0x00;
 12728  005506  6BF4               	clrf	244,b	;volatile
 12729                           
 12730                           ; BSR set to: 61
 12731                           ;mcc_generated_files/uart1.c: 116:  U1BRGL = 0x82;
 12732  005508  0E82               	movlw	130
 12733  00550A  6FF5               	movwf	245,b	;volatile
 12734                           
 12735                           ; BSR set to: 61
 12736                           ;mcc_generated_files/uart1.c: 119:  U1BRGH = 0x06;
 12737  00550C  0E06               	movlw	6
 12738  00550E  6FF6               	movwf	246,b	;volatile
 12739                           
 12740                           ; BSR set to: 61
 12741                           ;mcc_generated_files/uart1.c: 122:  U1FIFO = 0x00;
 12742  005510  6BF7               	clrf	247,b	;volatile
 12743                           
 12744                           ; BSR set to: 61
 12745                           ;mcc_generated_files/uart1.c: 125:  U1UIR = 0x00;
 12746  005512  6BF8               	clrf	248,b	;volatile
 12747                           
 12748                           ; BSR set to: 61
 12749                           ;mcc_generated_files/uart1.c: 128:  U1ERRIR = 0x00;
 12750  005514  6BF9               	clrf	249,b	;volatile
 12751                           
 12752                           ; BSR set to: 61
 12753                           ;mcc_generated_files/uart1.c: 131:  U1ERRIE = 0x00;
 12754  005516  6BFA               	clrf	250,b	;volatile
 12755                           
 12756                           ; BSR set to: 61
 12757                           ;mcc_generated_files/uart1.c: 135:  uart1TxHead = 0;
 12758  005518  6A3A               	clrf	_uart1TxHead,c	;volatile
 12759                           
 12760                           ; BSR set to: 61
 12761                           ;mcc_generated_files/uart1.c: 136:  uart1TxTail = 0;
 12762  00551A  6A39               	clrf	_uart1TxTail,c	;volatile
 12763                           
 12764                           ; BSR set to: 61
 12765                           ;mcc_generated_files/uart1.c: 137:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 12766  00551C  0E40               	movlw	64
 12767  00551E  6E38               	movwf	_uart1TxBufferRemaining,c	;volatile
 12768                           
 12769                           ; BSR set to: 61
 12770                           ;mcc_generated_files/uart1.c: 138:  uart1RxHead = 0;
 12771  005520  6A37               	clrf	_uart1RxHead,c	;volatile
 12772                           
 12773                           ; BSR set to: 61
 12774                           ;mcc_generated_files/uart1.c: 139:  uart1RxTail = 0;
 12775  005522  6A36               	clrf	_uart1RxTail,c	;volatile
 12776                           
 12777                           ; BSR set to: 61
 12778                           ;mcc_generated_files/uart1.c: 140:  uart1RxCount = 0;
 12779  005524  6A35               	clrf	_uart1RxCount,c	;volatile
 12780                           
 12781                           ; BSR set to: 61
 12782                           ;mcc_generated_files/uart1.c: 143:  PIE3bits.U1RXIE = 1;
 12783  005526  0139               	movlb	57	; () banked
 12784  005528  8793               	bsf	147,3,b	;volatile
 12785                           
 12786                           ; BSR set to: 57
 12787                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 12788  00552A  0012               	return		;funcret
 12789  00552C                     __end_of_UART1_Initialize:
 12790                           	opt callstack 0
 12791                           
 12792 ;; *************** function _UART1_SetTxInterruptHandler *****************
 12793 ;; Defined at:
 12794 ;;		line 244 in file "mcc_generated_files/uart1.c"
 12795 ;; Parameters:    Size  Location     Type
 12796 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12797 ;;		 -> UART1_Transmit_ISR(1), 
 12798 ;; Auto vars:     Size  Location     Type
 12799 ;;		None
 12800 ;; Return value:  Size  Location     Type
 12801 ;;                  1  [STACK] void 
 12802 ;; Registers used:
 12803 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12804 ;; Tracked objects:
 12805 ;;		On entry : 3F/39
 12806 ;;		On exit  : 0/0
 12807 ;;		Unchanged: 0/0
 12808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12813 ;;Total ram usage:        0 bytes
 12814 ;; Hardware stack levels used:    1
 12815 ;; Hardware stack levels required when called:    3
 12816 ;; This function calls:
 12817 ;;		Nothing
 12818 ;; This function is called by:
 12819 ;;		_UART1_Initialize
 12820 ;; This function uses a reentrant model
 12821 ;;
 12822                           
 12823                           	psect	text58
 12824  005CAA                     __ptext58:
 12825                           	opt callstack 0
 12826  005CAA                     _UART1_SetTxInterruptHandler:
 12827                           	opt callstack 25
 12828                           
 12829                           ;mcc_generated_files/uart1.c: 244: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 245: {;mcc_generated_files/uart1.c: 246:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 12830                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12831                           
 12832                           ; BSR set to: 57
 12833                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12834                           ;incstack = 0
 12835  005CAA  50E1               	movf	fsr1l,w,c
 12836  005CAC  0FFD               	addlw	-3
 12837  005CAE  6ED9               	movwf	fsr2l,c
 12838  005CB0  50E2               	movf	fsr1h,w,c
 12839  005CB2  6EDA               	movwf	fsr2h,c
 12840  005CB4  0EFF               	movlw	255
 12841  005CB6  22DA               	addwfc	fsr2h,f,c
 12842  005CB8  006F FF78  F00B    	movff	postinc2,_UART1_TxInterruptHandler
 12843  005CBE  006F FF78  F00C    	movff	postinc2,_UART1_TxInterruptHandler+1
 12844  005CC4  006F FF74  F00D    	movff	postdec2,_UART1_TxInterruptHandler+2
 12845                           
 12846                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 12847  005CCA  52E5               	movf	postdec1,f,c
 12848  005CCC  52E5               	movf	postdec1,f,c
 12849  005CCE  52E5               	movf	postdec1,f,c
 12850  005CD0  0012               	return		;funcret
 12851  005CD2                     __end_of_UART1_SetTxInterruptHandler:
 12852                           	opt callstack 0
 12853                           
 12854 ;; *************** function _UART1_SetRxInterruptHandler *****************
 12855 ;; Defined at:
 12856 ;;		line 239 in file "mcc_generated_files/uart1.c"
 12857 ;; Parameters:    Size  Location     Type
 12858 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12859 ;;		 -> UART1_Receive_ISR(1), 
 12860 ;; Auto vars:     Size  Location     Type
 12861 ;;		None
 12862 ;; Return value:  Size  Location     Type
 12863 ;;                  1  [STACK] void 
 12864 ;; Registers used:
 12865 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12866 ;; Tracked objects:
 12867 ;;		On entry : 3F/39
 12868 ;;		On exit  : 0/0
 12869 ;;		Unchanged: 0/0
 12870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12875 ;;Total ram usage:        0 bytes
 12876 ;; Hardware stack levels used:    1
 12877 ;; Hardware stack levels required when called:    3
 12878 ;; This function calls:
 12879 ;;		Nothing
 12880 ;; This function is called by:
 12881 ;;		_UART1_Initialize
 12882 ;; This function uses a reentrant model
 12883 ;;
 12884                           
 12885                           	psect	text59
 12886  005CD2                     __ptext59:
 12887                           	opt callstack 0
 12888  005CD2                     _UART1_SetRxInterruptHandler:
 12889                           	opt callstack 25
 12890                           
 12891                           ;mcc_generated_files/uart1.c: 239: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 240: {;mcc_generated_files/uart1.c: 241:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 12892                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12893                           
 12894                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12895                           ;incstack = 0
 12896  005CD2  50E1               	movf	fsr1l,w,c
 12897  005CD4  0FFD               	addlw	-3
 12898  005CD6  6ED9               	movwf	fsr2l,c
 12899  005CD8  50E2               	movf	fsr1h,w,c
 12900  005CDA  6EDA               	movwf	fsr2h,c
 12901  005CDC  0EFF               	movlw	255
 12902  005CDE  22DA               	addwfc	fsr2h,f,c
 12903  005CE0  006F FF78  F00E    	movff	postinc2,_UART1_RxInterruptHandler
 12904  005CE6  006F FF78  F00F    	movff	postinc2,_UART1_RxInterruptHandler+1
 12905  005CEC  006F FF74  F010    	movff	postdec2,_UART1_RxInterruptHandler+2
 12906                           
 12907                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 12908  005CF2  52E5               	movf	postdec1,f,c
 12909  005CF4  52E5               	movf	postdec1,f,c
 12910  005CF6  52E5               	movf	postdec1,f,c
 12911  005CF8  0012               	return		;funcret
 12912  005CFA                     __end_of_UART1_SetRxInterruptHandler:
 12913                           	opt callstack 0
 12914                           
 12915 ;; *************** function _TMR6_Initialize *****************
 12916 ;; Defined at:
 12917 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 12918 ;; Parameters:    Size  Location     Type
 12919 ;;		None
 12920 ;; Auto vars:     Size  Location     Type
 12921 ;;		None
 12922 ;; Return value:  Size  Location     Type
 12923 ;;                  1  [STACK] void 
 12924 ;; Registers used:
 12925 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 12926 ;; Tracked objects:
 12927 ;;		On entry : 3F/39
 12928 ;;		On exit  : 0/0
 12929 ;;		Unchanged: 0/0
 12930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12935 ;;Total ram usage:        0 bytes
 12936 ;; Hardware stack levels used:    1
 12937 ;; Hardware stack levels required when called:    4
 12938 ;; This function calls:
 12939 ;;		_TMR6_SetInterruptHandler
 12940 ;; This function is called by:
 12941 ;;		_SYSTEM_Initialize
 12942 ;; This function uses a reentrant model
 12943 ;;
 12944                           
 12945                           	psect	text60
 12946  005CFA                     __ptext60:
 12947                           	opt callstack 0
 12948  005CFA                     _TMR6_Initialize:
 12949                           	opt callstack 25
 12950                           
 12951                           ;mcc_generated_files/tmr6.c: 75:  T6CLKCON = 0x01;
 12952                           
 12953                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12954                           ;incstack = 0
 12955  005CFA  0E01               	movlw	1
 12956  005CFC  6E96               	movwf	16278,c	;volatile
 12957                           
 12958                           ;mcc_generated_files/tmr6.c: 78:  T6HLT = 0x00;
 12959  005CFE  6A95               	clrf	16277,c	;volatile
 12960                           
 12961                           ;mcc_generated_files/tmr6.c: 81:  T6RST = 0x00;
 12962  005D00  6A97               	clrf	16279,c	;volatile
 12963                           
 12964                           ;mcc_generated_files/tmr6.c: 84:  T6PR = 0x03;
 12965  005D02  0E03               	movlw	3
 12966  005D04  6E93               	movwf	16275,c	;volatile
 12967                           
 12968                           ;mcc_generated_files/tmr6.c: 87:  T6TMR = 0x00;
 12969  005D06  6A92               	clrf	16274,c	;volatile
 12970                           
 12971                           ;mcc_generated_files/tmr6.c: 90:  PIR9bits.TMR6IF = 0;
 12972  005D08  0139               	movlb	57	; () banked
 12973  005D0A  91A9               	bcf	169,0,b	;volatile
 12974                           
 12975                           ; BSR set to: 57
 12976                           ;mcc_generated_files/tmr6.c: 93:  PIE9bits.TMR6IE = 1;
 12977  005D0C  8199               	bsf	153,0,b	;volatile
 12978                           
 12979                           ; BSR set to: 57
 12980                           ;mcc_generated_files/tmr6.c: 96:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
 12981  005D0E  0E18               	movlw	low _TMR6_DefaultInterruptHandler
 12982  005D10  6EE6               	movwf	postinc1,c
 12983  005D12  0E58               	movlw	high _TMR6_DefaultInterruptHandler
 12984  005D14  6EE6               	movwf	postinc1,c
 12985  005D16  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 12986  005D18  6EE6               	movwf	postinc1,c
 12987  005D1A  EC91  F02E         	call	_TMR6_SetInterruptHandler	;wreg free
 12988                           
 12989                           ;mcc_generated_files/tmr6.c: 99:  T6CON = 0xFF;
 12990  005D1E  6894               	setf	16276,c	;volatile
 12991                           
 12992                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12993  005D20  0012               	return		;funcret
 12994  005D22                     __end_of_TMR6_Initialize:
 12995                           	opt callstack 0
 12996                           
 12997 ;; *************** function _TMR6_SetInterruptHandler *****************
 12998 ;; Defined at:
 12999 ;;		line 191 in file "mcc_generated_files/tmr6.c"
 13000 ;; Parameters:    Size  Location     Type
 13001 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13002 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 13003 ;; Auto vars:     Size  Location     Type
 13004 ;;		None
 13005 ;; Return value:  Size  Location     Type
 13006 ;;                  1  [STACK] void 
 13007 ;; Registers used:
 13008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13009 ;; Tracked objects:
 13010 ;;		On entry : 3F/39
 13011 ;;		On exit  : 0/0
 13012 ;;		Unchanged: 0/0
 13013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13018 ;;Total ram usage:        0 bytes
 13019 ;; Hardware stack levels used:    1
 13020 ;; Hardware stack levels required when called:    3
 13021 ;; This function calls:
 13022 ;;		Nothing
 13023 ;; This function is called by:
 13024 ;;		_TMR6_Initialize
 13025 ;; This function uses a reentrant model
 13026 ;;
 13027                           
 13028                           	psect	text61
 13029  005D22                     __ptext61:
 13030                           	opt callstack 0
 13031  005D22                     _TMR6_SetInterruptHandler:
 13032                           	opt callstack 25
 13033                           
 13034                           ;mcc_generated_files/tmr6.c: 191: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 192: {;mcc_generated_files/tmr6.c: 193:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
 13035                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13036                           
 13037                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13038                           ;incstack = 0
 13039  005D22  50E1               	movf	fsr1l,w,c
 13040  005D24  0FFD               	addlw	-3
 13041  005D26  6ED9               	movwf	fsr2l,c
 13042  005D28  50E2               	movf	fsr1h,w,c
 13043  005D2A  6EDA               	movwf	fsr2h,c
 13044  005D2C  0EFF               	movlw	255
 13045  005D2E  22DA               	addwfc	fsr2h,f,c
 13046  005D30  006F FF78  F0F3    	movff	postinc2,_TMR6_InterruptHandler
 13047  005D36  006F FF78  F0F4    	movff	postinc2,_TMR6_InterruptHandler+1
 13048  005D3C  006F FF74  F0F5    	movff	postdec2,_TMR6_InterruptHandler+2
 13049                           
 13050                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 13051  005D42  52E5               	movf	postdec1,f,c
 13052  005D44  52E5               	movf	postdec1,f,c
 13053  005D46  52E5               	movf	postdec1,f,c
 13054  005D48  0012               	return		;funcret
 13055  005D4A                     __end_of_TMR6_SetInterruptHandler:
 13056                           	opt callstack 0
 13057                           
 13058 ;; *************** function _TMR5_Initialize *****************
 13059 ;; Defined at:
 13060 ;;		line 66 in file "mcc_generated_files/tmr5.c"
 13061 ;; Parameters:    Size  Location     Type
 13062 ;;		None
 13063 ;; Auto vars:     Size  Location     Type
 13064 ;;		None
 13065 ;; Return value:  Size  Location     Type
 13066 ;;                  1  [STACK] void 
 13067 ;; Registers used:
 13068 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 13069 ;; Tracked objects:
 13070 ;;		On entry : 3F/3C
 13071 ;;		On exit  : 0/0
 13072 ;;		Unchanged: 0/0
 13073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13078 ;;Total ram usage:        0 bytes
 13079 ;; Hardware stack levels used:    1
 13080 ;; Hardware stack levels required when called:    4
 13081 ;; This function calls:
 13082 ;;		_TMR5_SetInterruptHandler
 13083 ;; This function is called by:
 13084 ;;		_SYSTEM_Initialize
 13085 ;; This function uses a reentrant model
 13086 ;;
 13087                           
 13088                           	psect	text62
 13089  0057D2                     __ptext62:
 13090                           	opt callstack 0
 13091  0057D2                     _TMR5_Initialize:
 13092                           	opt callstack 25
 13093                           
 13094                           ;mcc_generated_files/tmr5.c: 71:  T5GCON = 0x00;
 13095                           
 13096                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13097                           ;incstack = 0
 13098  0057D2  6A9B               	clrf	16283,c	;volatile
 13099                           
 13100                           ;mcc_generated_files/tmr5.c: 74:  T5GATE = 0x00;
 13101  0057D4  6A9C               	clrf	16284,c	;volatile
 13102                           
 13103                           ;mcc_generated_files/tmr5.c: 77:  T5CLK = 0x01;
 13104  0057D6  0E01               	movlw	1
 13105  0057D8  6E9D               	movwf	16285,c	;volatile
 13106                           
 13107                           ;mcc_generated_files/tmr5.c: 80:  TMR5H = 0x63;
 13108  0057DA  0E63               	movlw	99
 13109  0057DC  6E99               	movwf	16281,c	;volatile
 13110                           
 13111                           ;mcc_generated_files/tmr5.c: 83:  TMR5L = 0xC0;
 13112  0057DE  0EC0               	movlw	192
 13113  0057E0  6E98               	movwf	16280,c	;volatile
 13114                           
 13115                           ;mcc_generated_files/tmr5.c: 86:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 13116  0057E2  5098               	movf	16280,w,c	;volatile
 13117  0057E4  006F FE64  F03B    	movff	16281,btemp	;volatile
 13118  0057EA  6A3C               	clrf	btemp+1,c
 13119  0057EC  0060  F0EC  F03C   	movff	btemp,btemp+1
 13120  0057F2  6A3B               	clrf	btemp,c
 13121  0057F4  103B               	iorwf	btemp,w,c
 13122  0057F6  6E28               	movwf	_timer5ReloadVal,c	;volatile
 13123  0057F8  503C               	movf	btemp+1,w,c
 13124  0057FA  6E29               	movwf	_timer5ReloadVal+1,c	;volatile
 13125                           
 13126                           ;mcc_generated_files/tmr5.c: 89:  PIR8bits.TMR5IF = 0;
 13127  0057FC  0139               	movlb	57	; () banked
 13128  0057FE  9DA8               	bcf	168,6,b	;volatile
 13129                           
 13130                           ; BSR set to: 57
 13131                           ;mcc_generated_files/tmr5.c: 92:  PIE8bits.TMR5IE = 1;
 13132  005800  8D98               	bsf	152,6,b	;volatile
 13133                           
 13134                           ; BSR set to: 57
 13135                           ;mcc_generated_files/tmr5.c: 95:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 13136  005802  0E8A               	movlw	low _TMR5_DefaultInterruptHandler
 13137  005804  6EE6               	movwf	postinc1,c
 13138  005806  0E60               	movlw	high _TMR5_DefaultInterruptHandler
 13139  005808  6EE6               	movwf	postinc1,c
 13140  00580A  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 13141  00580C  6EE6               	movwf	postinc1,c
 13142  00580E  ECA5  F02E         	call	_TMR5_SetInterruptHandler	;wreg free
 13143                           
 13144                           ;mcc_generated_files/tmr5.c: 98:  T5CON = 0x31;
 13145  005812  0E31               	movlw	49
 13146  005814  6E9A               	movwf	16282,c	;volatile
 13147                           
 13148                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13149  005816  0012               	return		;funcret
 13150  005818                     __end_of_TMR5_Initialize:
 13151                           	opt callstack 0
 13152                           
 13153 ;; *************** function _TMR5_SetInterruptHandler *****************
 13154 ;; Defined at:
 13155 ;;		line 189 in file "mcc_generated_files/tmr5.c"
 13156 ;; Parameters:    Size  Location     Type
 13157 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13158 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 13159 ;; Auto vars:     Size  Location     Type
 13160 ;;		None
 13161 ;; Return value:  Size  Location     Type
 13162 ;;                  1  [STACK] void 
 13163 ;; Registers used:
 13164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13165 ;; Tracked objects:
 13166 ;;		On entry : 3F/39
 13167 ;;		On exit  : 0/0
 13168 ;;		Unchanged: 0/0
 13169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13174 ;;Total ram usage:        0 bytes
 13175 ;; Hardware stack levels used:    1
 13176 ;; Hardware stack levels required when called:    3
 13177 ;; This function calls:
 13178 ;;		Nothing
 13179 ;; This function is called by:
 13180 ;;		_TMR5_Initialize
 13181 ;; This function uses a reentrant model
 13182 ;;
 13183                           
 13184                           	psect	text63
 13185  005D4A                     __ptext63:
 13186                           	opt callstack 0
 13187  005D4A                     _TMR5_SetInterruptHandler:
 13188                           	opt callstack 25
 13189                           
 13190                           ;mcc_generated_files/tmr5.c: 189: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 190: {;mcc_generated_files/tmr5.c: 191:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 13191                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13192                           
 13193                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13194                           ;incstack = 0
 13195  005D4A  50E1               	movf	fsr1l,w,c
 13196  005D4C  0FFD               	addlw	-3
 13197  005D4E  6ED9               	movwf	fsr2l,c
 13198  005D50  50E2               	movf	fsr1h,w,c
 13199  005D52  6EDA               	movwf	fsr2h,c
 13200  005D54  0EFF               	movlw	255
 13201  005D56  22DA               	addwfc	fsr2h,f,c
 13202  005D58  006F FF78  F0F0    	movff	postinc2,_TMR5_InterruptHandler
 13203  005D5E  006F FF78  F0F1    	movff	postinc2,_TMR5_InterruptHandler+1
 13204  005D64  006F FF74  F0F2    	movff	postdec2,_TMR5_InterruptHandler+2
 13205                           
 13206                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 13207  005D6A  52E5               	movf	postdec1,f,c
 13208  005D6C  52E5               	movf	postdec1,f,c
 13209  005D6E  52E5               	movf	postdec1,f,c
 13210  005D70  0012               	return		;funcret
 13211  005D72                     __end_of_TMR5_SetInterruptHandler:
 13212                           	opt callstack 0
 13213                           
 13214 ;; *************** function _SPI1_Initialize *****************
 13215 ;; Defined at:
 13216 ;;		line 64 in file "mcc_generated_files/spi1.c"
 13217 ;; Parameters:    Size  Location     Type
 13218 ;;		None
 13219 ;; Auto vars:     Size  Location     Type
 13220 ;;		None
 13221 ;; Return value:  Size  Location     Type
 13222 ;;                  1  [STACK] void 
 13223 ;; Registers used:
 13224 ;;		wreg, status,2
 13225 ;; Tracked objects:
 13226 ;;		On entry : 3F/39
 13227 ;;		On exit  : 3F/3D
 13228 ;;		Unchanged: 0/0
 13229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13234 ;;Total ram usage:        0 bytes
 13235 ;; Hardware stack levels used:    1
 13236 ;; Hardware stack levels required when called:    3
 13237 ;; This function calls:
 13238 ;;		Nothing
 13239 ;; This function is called by:
 13240 ;;		_SYSTEM_Initialize
 13241 ;; This function uses a reentrant model
 13242 ;;
 13243                           
 13244                           	psect	text64
 13245  0060A4                     __ptext64:
 13246                           	opt callstack 0
 13247  0060A4                     _SPI1_Initialize:
 13248                           	opt callstack 26
 13249                           
 13250                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 13251                           
 13252                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13253                           ;incstack = 0
 13254  0060A4  0E40               	movlw	64
 13255  0060A6  013D               	movlb	61	; () banked
 13256  0060A8  6F15               	movwf	21,b	;volatile
 13257                           
 13258                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 13259  0060AA  0E03               	movlw	3
 13260  0060AC  6F16               	movwf	22,b	;volatile
 13261                           
 13262                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 13263  0060AE  0E4F               	movlw	79
 13264  0060B0  6F19               	movwf	25,b	;volatile
 13265                           
 13266                           ; BSR set to: 61
 13267                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 13268  0060B2  6B1C               	clrf	28,b	;volatile
 13269                           
 13270                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 13271  0060B4  0E83               	movlw	131
 13272  0060B6  6F14               	movwf	20,b	;volatile
 13273                           
 13274                           ; BSR set to: 61
 13275                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13276  0060B8  0012               	return		;funcret
 13277  0060BA                     __end_of_SPI1_Initialize:
 13278                           	opt callstack 0
 13279                           
 13280 ;; *************** function _PMD_Initialize *****************
 13281 ;; Defined at:
 13282 ;;		line 88 in file "mcc_generated_files/mcc.c"
 13283 ;; Parameters:    Size  Location     Type
 13284 ;;		None
 13285 ;; Auto vars:     Size  Location     Type
 13286 ;;		None
 13287 ;; Return value:  Size  Location     Type
 13288 ;;                  1  [STACK] void 
 13289 ;; Registers used:
 13290 ;;		None
 13291 ;; Tracked objects:
 13292 ;;		On entry : 3F/39
 13293 ;;		On exit  : 3F/39
 13294 ;;		Unchanged: 0/0
 13295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13300 ;;Total ram usage:        0 bytes
 13301 ;; Hardware stack levels used:    1
 13302 ;; Hardware stack levels required when called:    3
 13303 ;; This function calls:
 13304 ;;		Nothing
 13305 ;; This function is called by:
 13306 ;;		_SYSTEM_Initialize
 13307 ;; This function uses a reentrant model
 13308 ;;
 13309                           
 13310                           	psect	text65
 13311  0060D0                     __ptext65:
 13312                           	opt callstack 0
 13313  0060D0                     _PMD_Initialize:
 13314                           	opt callstack 26
 13315                           
 13316                           ;mcc_generated_files/mcc.c: 91:     PMD0 = 0x00;
 13317                           
 13318                           ; BSR set to: 61
 13319                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13320                           ;incstack = 0
 13321  0060D0  0139               	movlb	57	; () banked
 13322  0060D2  6BC0               	clrf	192,b	;volatile
 13323                           
 13324                           ;mcc_generated_files/mcc.c: 93:     PMD1 = 0x00;
 13325  0060D4  6BC1               	clrf	193,b	;volatile
 13326                           
 13327                           ;mcc_generated_files/mcc.c: 95:     PMD2 = 0x00;
 13328  0060D6  6BC2               	clrf	194,b	;volatile
 13329                           
 13330                           ;mcc_generated_files/mcc.c: 97:     PMD3 = 0x00;
 13331  0060D8  6BC3               	clrf	195,b	;volatile
 13332                           
 13333                           ;mcc_generated_files/mcc.c: 99:     PMD4 = 0x00;
 13334  0060DA  6BC4               	clrf	196,b	;volatile
 13335                           
 13336                           ;mcc_generated_files/mcc.c: 101:     PMD5 = 0x00;
 13337  0060DC  6BC5               	clrf	197,b	;volatile
 13338                           
 13339                           ;mcc_generated_files/mcc.c: 103:     PMD6 = 0x00;
 13340  0060DE  6BC6               	clrf	198,b	;volatile
 13341                           
 13342                           ;mcc_generated_files/mcc.c: 105:     PMD7 = 0x00;
 13343  0060E0  6BC7               	clrf	199,b	;volatile
 13344                           
 13345                           ; BSR set to: 57
 13346                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 13347  0060E2  0012               	return		;funcret
 13348  0060E4                     __end_of_PMD_Initialize:
 13349                           	opt callstack 0
 13350                           
 13351 ;; *************** function _PIN_MANAGER_Initialize *****************
 13352 ;; Defined at:
 13353 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 13354 ;; Parameters:    Size  Location     Type
 13355 ;;		None
 13356 ;; Auto vars:     Size  Location     Type
 13357 ;;		None
 13358 ;; Return value:  Size  Location     Type
 13359 ;;                  1  [STACK] void 
 13360 ;; Registers used:
 13361 ;;		wreg, status,2
 13362 ;; Tracked objects:
 13363 ;;		On entry : 3F/39
 13364 ;;		On exit  : 3F/3A
 13365 ;;		Unchanged: 0/0
 13366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13371 ;;Total ram usage:        0 bytes
 13372 ;; Hardware stack levels used:    1
 13373 ;; Hardware stack levels required when called:    3
 13374 ;; This function calls:
 13375 ;;		Nothing
 13376 ;; This function is called by:
 13377 ;;		_SYSTEM_Initialize
 13378 ;; This function uses a reentrant model
 13379 ;;
 13380                           
 13381                           	psect	text66
 13382  005072                     __ptext66:
 13383                           	opt callstack 0
 13384  005072                     _PIN_MANAGER_Initialize:
 13385                           	opt callstack 26
 13386                           
 13387                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 13388                           
 13389                           ; BSR set to: 57
 13390                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13391                           ;incstack = 0
 13392  005072  0E07               	movlw	7
 13393  005074  6EBE               	movwf	16318,c	;volatile
 13394                           
 13395                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 13396  005076  6ABD               	clrf	16317,c	;volatile
 13397                           
 13398                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 13399  005078  6ABA               	clrf	16314,c	;volatile
 13400                           
 13401                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 13402  00507A  6ABF               	clrf	16319,c	;volatile
 13403                           
 13404                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 13405  00507C  6ABB               	clrf	16315,c	;volatile
 13406                           
 13407                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x06;
 13408  00507E  0E06               	movlw	6
 13409  005080  6EBC               	movwf	16316,c	;volatile
 13410                           
 13411                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 13412  005082  6AC6               	clrf	16326,c	;volatile
 13413                           
 13414                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0xFF;
 13415  005084  68C7               	setf	16327,c	;volatile
 13416                           
 13417                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0x8F;
 13418  005086  0E8F               	movlw	143
 13419  005088  6EC2               	movwf	16322,c	;volatile
 13420                           
 13421                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 13422  00508A  0EBF               	movlw	191
 13423  00508C  6EC3               	movwf	16323,c	;volatile
 13424                           
 13425                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x91;
 13426  00508E  0E91               	movlw	145
 13427  005090  6EC4               	movwf	16324,c	;volatile
 13428                           
 13429                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0xFC;
 13430  005092  0EFC               	movlw	252
 13431  005094  6EC5               	movwf	16325,c	;volatile
 13432                           
 13433                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0xF0;
 13434  005096  0EF0               	movlw	240
 13435  005098  013A               	movlb	58	; () banked
 13436  00509A  6F70               	movwf	112,b	;volatile
 13437                           
 13438                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x01;
 13439  00509C  0E01               	movlw	1
 13440  00509E  6F60               	movwf	96,b	;volatile
 13441                           
 13442                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x38;
 13443  0050A0  0E38               	movlw	56
 13444  0050A2  6F50               	movwf	80,b	;volatile
 13445                           
 13446                           ; BSR set to: 58
 13447                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 13448  0050A4  6B80               	clrf	128,b	;volatile
 13449                           
 13450                           ; BSR set to: 58
 13451                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0xFF;
 13452  0050A6  6990               	setf	144,b	;volatile
 13453                           
 13454                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0x8F;
 13455  0050A8  0E8F               	movlw	143
 13456  0050AA  6F40               	movwf	64,b	;volatile
 13457                           
 13458                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 13459  0050AC  0E0C               	movlw	12
 13460  0050AE  6F71               	movwf	113,b	;volatile
 13461                           
 13462                           ; BSR set to: 58
 13463                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x00;
 13464  0050B0  6B91               	clrf	145,b	;volatile
 13465                           
 13466                           ; BSR set to: 58
 13467                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 13468  0050B2  6B81               	clrf	129,b	;volatile
 13469                           
 13470                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 13471  0050B4  0E87               	movlw	135
 13472  0050B6  6F51               	movwf	81,b	;volatile
 13473                           
 13474                           ; BSR set to: 58
 13475                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 13476  0050B8  6B41               	clrf	65,b	;volatile
 13477                           
 13478                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x90;
 13479  0050BA  0E90               	movlw	144
 13480  0050BC  6F61               	movwf	97,b	;volatile
 13481                           
 13482                           ; BSR set to: 58
 13483                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 13484  0050BE  6B82               	clrf	130,b	;volatile
 13485                           
 13486                           ; BSR set to: 58
 13487                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 13488  0050C0  6B92               	clrf	146,b	;volatile
 13489                           
 13490                           ; BSR set to: 58
 13491                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 13492  0050C2  6B42               	clrf	66,b	;volatile
 13493                           
 13494                           ; BSR set to: 58
 13495                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 13496  0050C4  6B52               	clrf	82,b	;volatile
 13497                           
 13498                           ; BSR set to: 58
 13499                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 13500  0050C6  6B62               	clrf	98,b	;volatile
 13501                           
 13502                           ; BSR set to: 58
 13503                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 13504  0050C8  6B72               	clrf	114,b	;volatile
 13505                           
 13506                           ; BSR set to: 58
 13507                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 13508  0050CA  6943               	setf	67,b	;volatile
 13509                           
 13510                           ; BSR set to: 58
 13511                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 13512  0050CC  6953               	setf	83,b	;volatile
 13513                           
 13514                           ; BSR set to: 58
 13515                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 13516  0050CE  6963               	setf	99,b	;volatile
 13517                           
 13518                           ; BSR set to: 58
 13519                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 13520  0050D0  6973               	setf	115,b	;volatile
 13521                           
 13522                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 13523  0050D2  0E07               	movlw	7
 13524  0050D4  6F83               	movwf	131,b	;volatile
 13525                           
 13526                           ; BSR set to: 58
 13527                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 13528  0050D6  6993               	setf	147,b	;volatile
 13529                           
 13530                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 13531  0050D8  0E0F               	movlw	15
 13532  0050DA  6FE8               	movwf	232,b	;volatile
 13533                           
 13534                           ;mcc_generated_files/pin_manager.c: 127:     RB6PPS = 0x16;
 13535  0050DC  0E16               	movlw	22
 13536  0050DE  6F0E               	movwf	14,b	;volatile
 13537                           
 13538                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x1E;
 13539  0050E0  0E1E               	movlw	30
 13540  0050E2  6F13               	movwf	19,b	;volatile
 13541                           
 13542                           ;mcc_generated_files/pin_manager.c: 129:     INT0PPS = 0x08;
 13543  0050E4  0E08               	movlw	8
 13544  0050E6  6FC0               	movwf	192,b	;volatile
 13545                           
 13546                           ;mcc_generated_files/pin_manager.c: 130:     INT2PPS = 0x0A;
 13547  0050E8  0E0A               	movlw	10
 13548  0050EA  6FC2               	movwf	194,b	;volatile
 13549                           
 13550                           ;mcc_generated_files/pin_manager.c: 131:     INT1PPS = 0x09;
 13551  0050EC  0E09               	movlw	9
 13552  0050EE  6FC1               	movwf	193,b	;volatile
 13553                           
 13554                           ;mcc_generated_files/pin_manager.c: 132:     U1RXPPS = 0x17;
 13555  0050F0  0E17               	movlw	23
 13556  0050F2  6FE5               	movwf	229,b	;volatile
 13557                           
 13558                           ;mcc_generated_files/pin_manager.c: 133:     SPI1SCKPPS = 0x13;
 13559  0050F4  0E13               	movlw	19
 13560  0050F6  6FDE               	movwf	222,b	;volatile
 13561                           
 13562                           ;mcc_generated_files/pin_manager.c: 134:     RA4PPS = 0x01;
 13563  0050F8  0E01               	movlw	1
 13564  0050FA  6F04               	movwf	4,b	;volatile
 13565                           
 13566                           ;mcc_generated_files/pin_manager.c: 135:     RA5PPS = 0x26;
 13567  0050FC  0E26               	movlw	38
 13568  0050FE  6F05               	movwf	5,b	;volatile
 13569                           
 13570                           ;mcc_generated_files/pin_manager.c: 136:     RA6PPS = 0x28;
 13571  005100  0E28               	movlw	40
 13572  005102  6F06               	movwf	6,b	;volatile
 13573                           
 13574                           ;mcc_generated_files/pin_manager.c: 137:     RC5PPS = 0x1F;
 13575  005104  0E1F               	movlw	31
 13576  005106  6F15               	movwf	21,b	;volatile
 13577                           
 13578                           ;mcc_generated_files/pin_manager.c: 138:     RC6PPS = 0x13;
 13579  005108  0E13               	movlw	19
 13580  00510A  6F16               	movwf	22,b	;volatile
 13581                           
 13582                           ;mcc_generated_files/pin_manager.c: 139:     SPI1SDIPPS = 0x14;
 13583  00510C  0E14               	movlw	20
 13584  00510E  6FDF               	movwf	223,b	;volatile
 13585                           
 13586                           ; BSR set to: 58
 13587                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 13588  005110  0012               	return		;funcret
 13589  005112                     __end_of_PIN_MANAGER_Initialize:
 13590                           	opt callstack 0
 13591                           
 13592 ;; *************** function _OSCILLATOR_Initialize *****************
 13593 ;; Defined at:
 13594 ;;		line 70 in file "mcc_generated_files/mcc.c"
 13595 ;; Parameters:    Size  Location     Type
 13596 ;;		None
 13597 ;; Auto vars:     Size  Location     Type
 13598 ;;		None
 13599 ;; Return value:  Size  Location     Type
 13600 ;;                  1  [STACK] void 
 13601 ;; Registers used:
 13602 ;;		wreg, status,2
 13603 ;; Tracked objects:
 13604 ;;		On entry : 3F/3A
 13605 ;;		On exit  : 3F/39
 13606 ;;		Unchanged: 0/0
 13607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13612 ;;Total ram usage:        0 bytes
 13613 ;; Hardware stack levels used:    1
 13614 ;; Hardware stack levels required when called:    3
 13615 ;; This function calls:
 13616 ;;		Nothing
 13617 ;; This function is called by:
 13618 ;;		_SYSTEM_Initialize
 13619 ;; This function uses a reentrant model
 13620 ;;
 13621                           
 13622                           	psect	text67
 13623  0060BA                     __ptext67:
 13624                           	opt callstack 0
 13625  0060BA                     _OSCILLATOR_Initialize:
 13626                           	opt callstack 26
 13627                           
 13628                           ;mcc_generated_files/mcc.c: 73:     OSCCON1 = 0x20;
 13629                           
 13630                           ; BSR set to: 58
 13631                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13632                           ;incstack = 0
 13633  0060BA  0E20               	movlw	32
 13634  0060BC  0139               	movlb	57	; () banked
 13635  0060BE  6FD9               	movwf	217,b	;volatile
 13636                           
 13637                           ; BSR set to: 57
 13638                           ;mcc_generated_files/mcc.c: 75:     OSCCON3 = 0x00;
 13639  0060C0  6BDB               	clrf	219,b	;volatile
 13640                           
 13641                           ; BSR set to: 57
 13642                           ;mcc_generated_files/mcc.c: 77:     OSCEN = 0x00;
 13643  0060C2  6BDD               	clrf	221,b	;volatile
 13644                           
 13645                           ;mcc_generated_files/mcc.c: 79:     OSCFRQ = 0x02;
 13646  0060C4  0E02               	movlw	2
 13647  0060C6  6FDF               	movwf	223,b	;volatile
 13648                           
 13649                           ; BSR set to: 57
 13650                           ;mcc_generated_files/mcc.c: 81:     OSCTUNE = 0x00;
 13651  0060C8  6BDE               	clrf	222,b	;volatile
 13652  0060CA                     l194:
 13653                           
 13654                           ; BSR set to: 57
 13655                           ;mcc_generated_files/mcc.c: 83:     while(PLLR == 0)
 13656  0060CA  B1DC               	btfsc	220,0,b	;volatile
 13657  0060CC  0012               	return	
 13658  0060CE  D7FD               	goto	l194
 13659  0060D0                     __end_of_OSCILLATOR_Initialize:
 13660                           	opt callstack 0
 13661                           
 13662 ;; *************** function _NCO1_Initialize *****************
 13663 ;; Defined at:
 13664 ;;		line 58 in file "mcc_generated_files/nco1.c"
 13665 ;; Parameters:    Size  Location     Type
 13666 ;;		None
 13667 ;; Auto vars:     Size  Location     Type
 13668 ;;		None
 13669 ;; Return value:  Size  Location     Type
 13670 ;;                  1  [STACK] void 
 13671 ;; Registers used:
 13672 ;;		wreg, status,2
 13673 ;; Tracked objects:
 13674 ;;		On entry : 0/39
 13675 ;;		On exit  : 3F/3F
 13676 ;;		Unchanged: 0/0
 13677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13682 ;;Total ram usage:        0 bytes
 13683 ;; Hardware stack levels used:    1
 13684 ;; Hardware stack levels required when called:    3
 13685 ;; This function calls:
 13686 ;;		Nothing
 13687 ;; This function is called by:
 13688 ;;		_SYSTEM_Initialize
 13689 ;; This function uses a reentrant model
 13690 ;;
 13691                           
 13692                           	psect	text68
 13693  00601E                     __ptext68:
 13694                           	opt callstack 0
 13695  00601E                     _NCO1_Initialize:
 13696                           	opt callstack 26
 13697                           
 13698                           ;mcc_generated_files/nco1.c: 62:     NCO1CON = 0x00;
 13699                           
 13700                           ; BSR set to: 57
 13701                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13702                           ;incstack = 0
 13703  00601E  013F               	movlb	63	; () banked
 13704  006020  6B3E               	clrf	62,b	;volatile
 13705                           
 13706                           ;mcc_generated_files/nco1.c: 64:     NCO1CLK = 0x00;
 13707  006022  6B3F               	clrf	63,b	;volatile
 13708                           
 13709                           ;mcc_generated_files/nco1.c: 66:     NCO1ACCU = 0x00;
 13710  006024  6B3A               	clrf	58,b	;volatile
 13711                           
 13712                           ;mcc_generated_files/nco1.c: 68:     NCO1ACCH = 0x00;
 13713  006026  6B39               	clrf	57,b	;volatile
 13714                           
 13715                           ;mcc_generated_files/nco1.c: 70:     NCO1ACCL = 0x00;
 13716  006028  6B38               	clrf	56,b	;volatile
 13717                           
 13718                           ; BSR set to: 63
 13719                           ;mcc_generated_files/nco1.c: 72:     NCO1INCU = 0x06;
 13720  00602A  0E06               	movlw	6
 13721  00602C  6F3D               	movwf	61,b	;volatile
 13722                           
 13723                           ;mcc_generated_files/nco1.c: 74:     NCO1INCH = 0xC7;
 13724  00602E  0EC7               	movlw	199
 13725  006030  6F3C               	movwf	60,b	;volatile
 13726                           
 13727                           ;mcc_generated_files/nco1.c: 76:     NCO1INCL = 0xAE;
 13728  006032  0EAE               	movlw	174
 13729  006034  6F3B               	movwf	59,b	;volatile
 13730                           
 13731                           ; BSR set to: 63
 13732                           ;mcc_generated_files/nco1.c: 79:     NCO1CONbits.EN = 1;
 13733  006036  8F3E               	bsf	62,7,b	;volatile
 13734                           
 13735                           ; BSR set to: 63
 13736                           ; _NCO1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13737  006038  0012               	return		;funcret
 13738  00603A                     __end_of_NCO1_Initialize:
 13739                           	opt callstack 0
 13740                           
 13741 ;; *************** function _INTERRUPT_Initialize *****************
 13742 ;; Defined at:
 13743 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 13744 ;; Parameters:    Size  Location     Type
 13745 ;;		None
 13746 ;; Auto vars:     Size  Location     Type
 13747 ;;  state           1  [STACK] _Bool 
 13748 ;; Return value:  Size  Location     Type
 13749 ;;                  1  [STACK] void 
 13750 ;; Registers used:
 13751 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 13752 ;; Tracked objects:
 13753 ;;		On entry : 0/0
 13754 ;;		On exit  : 3F/39
 13755 ;;		Unchanged: 0/0
 13756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13761 ;;Total ram usage:        0 bytes
 13762 ;; Hardware stack levels used:    1
 13763 ;; Hardware stack levels required when called:    3
 13764 ;; This function calls:
 13765 ;;		Nothing
 13766 ;; This function is called by:
 13767 ;;		_SYSTEM_Initialize
 13768 ;; This function uses a reentrant model
 13769 ;;
 13770                           
 13771                           	psect	text69
 13772  005462                     __ptext69:
 13773                           	opt callstack 0
 13774  005462                     _INTERRUPT_Initialize:
 13775                           	opt callstack 0
 13776                           
 13777                           ; BSR set to: 63
 13778                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13779  005462  52E6               	movf	postinc1,f,c
 13780                           
 13781                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 13782                           
 13783                           ;incstack = 0
 13784  005464  8AD2               	bsf	16338,5,c	;volatile
 13785                           
 13786                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 13787  005466  AED2               	btfss	16338,7,c	;volatile
 13788  005468  D003               	goto	u980
 13789  00546A  6A46               	clrf	btemp+11,c
 13790  00546C  2A46               	incf	btemp+11,f,c
 13791  00546E  D001               	goto	u998
 13792  005470                     u980:
 13793  005470  6A46               	clrf	btemp+11,c
 13794  005472                     u998:
 13795                           
 13796                           ;stkvar	_state @ sp[(-1)+0]
 13797  005472  0EFF               	movlw	-1
 13798  005474  0060  F11B  FFE3   	movff	btemp+11,plusw1
 13799                           
 13800                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 13801  00547A  9ED2               	bcf	16338,7,c	;volatile
 13802                           
 13803                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 13804  00547C  0E55               	movlw	85
 13805  00547E  6ED4               	movwf	16340,c	;volatile
 13806                           
 13807                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 13808  005480  0EAA               	movlw	170
 13809  005482  6ED4               	movwf	16340,c	;volatile
 13810                           
 13811                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 13812  005484  90D4               	bcf	16340,0,c	;volatile
 13813                           
 13814                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 13815  005486  0138               	movlb	56	; () banked
 13816  005488  6B9F               	clrf	159,b	;volatile
 13817                           
 13818                           ; BSR set to: 56
 13819                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 13820  00548A  6B9E               	clrf	158,b	;volatile
 13821                           
 13822                           ; BSR set to: 56
 13823                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 13824  00548C  0E08               	movlw	8
 13825  00548E  6F9D               	movwf	157,b	;volatile
 13826                           
 13827                           ; BSR set to: 56
 13828                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 13829  005490  0E55               	movlw	85
 13830  005492  6ED4               	movwf	16340,c	;volatile
 13831                           
 13832                           ; BSR set to: 56
 13833                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 13834  005494  0EAA               	movlw	170
 13835  005496  6ED4               	movwf	16340,c	;volatile
 13836                           
 13837                           ; BSR set to: 56
 13838                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 13839  005498  80D4               	bsf	16340,0,c	;volatile
 13840                           
 13841                           ; BSR set to: 56
 13842                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 13843                           ;stkvar	_state @ sp[(-1)+0]
 13844  00549A  0EFF               	movlw	-1
 13845  00549C  B0E3               	btfsc	plusw1,0,c
 13846  00549E  D002               	bra	u1005
 13847  0054A0  9ED2               	bcf	16338,7,c	;volatile
 13848  0054A2  D001               	bra	u1006
 13849  0054A4                     u1005:
 13850  0054A4  8ED2               	bsf	16338,7,c	;volatile
 13851  0054A6                     u1006:
 13852                           
 13853                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 13854  0054A6  0139               	movlb	57	; () banked
 13855  0054A8  8782               	bsf	130,3,b	;volatile
 13856                           
 13857                           ; BSR set to: 57
 13858                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 13859  0054AA  8382               	bsf	130,1,b	;volatile
 13860                           
 13861                           ; BSR set to: 57
 13862                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 13863  0054AC  8182               	bsf	130,0,b	;volatile
 13864                           
 13865                           ; BSR set to: 57
 13866                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 13867  0054AE  8582               	bsf	130,2,b	;volatile
 13868                           
 13869                           ; BSR set to: 57
 13870                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 13871  0054B0  8786               	bsf	134,3,b	;volatile
 13872                           
 13873                           ; BSR set to: 57
 13874                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 13875  0054B2  8586               	bsf	134,2,b	;volatile
 13876                           
 13877                           ; BSR set to: 57
 13878                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 13879  0054B4  8983               	bsf	131,4,b	;volatile
 13880                           
 13881                           ; BSR set to: 57
 13882                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 13883  0054B6  8783               	bsf	131,3,b	;volatile
 13884                           
 13885                           ; BSR set to: 57
 13886                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 13887  0054B8  8181               	bsf	129,0,b	;volatile
 13888                           
 13889                           ; BSR set to: 57
 13890                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 13891  0054BA  8185               	bsf	133,0,b	;volatile
 13892                           
 13893                           ; BSR set to: 57
 13894                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR7bits.INT2IP = 1;
 13895  0054BC  8B87               	bsf	135,5,b	;volatile
 13896                           
 13897                           ; BSR set to: 57
 13898                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR9bits.TMR6IP = 1;
 13899  0054BE  8189               	bsf	137,0,b	;volatile
 13900                           
 13901                           ; BSR set to: 57
 13902                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR8bits.TMR5IP = 1;
 13903  0054C0  8D88               	bsf	136,6,b	;volatile
 13904                           
 13905                           ; BSR set to: 57
 13906                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADIP = 1;
 13907  0054C2  8581               	bsf	129,2,b	;volatile
 13908                           
 13909                           ; BSR set to: 57
 13910                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 13911  0054C4  52E5               	movf	postdec1,f,c
 13912  0054C6  0012               	return		;funcret
 13913  0054C8                     __end_of_INTERRUPT_Initialize:
 13914                           	opt callstack 0
 13915                           
 13916 ;; *************** function _EXT_INT_Initialize *****************
 13917 ;; Defined at:
 13918 ;;		line 119 in file "mcc_generated_files/ext_int.c"
 13919 ;; Parameters:    Size  Location     Type
 13920 ;;		None
 13921 ;; Auto vars:     Size  Location     Type
 13922 ;;		None
 13923 ;; Return value:  Size  Location     Type
 13924 ;;                  1  [STACK] void 
 13925 ;; Registers used:
 13926 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13927 ;; Tracked objects:
 13928 ;;		On entry : 3F/3F
 13929 ;;		On exit  : 3F/39
 13930 ;;		Unchanged: 0/0
 13931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13936 ;;Total ram usage:        0 bytes
 13937 ;; Hardware stack levels used:    1
 13938 ;; Hardware stack levels required when called:    4
 13939 ;; This function calls:
 13940 ;;		_INT0_SetInterruptHandler
 13941 ;;		_INT1_SetInterruptHandler
 13942 ;;		_INT2_SetInterruptHandler
 13943 ;; This function is called by:
 13944 ;;		_SYSTEM_Initialize
 13945 ;; This function uses a reentrant model
 13946 ;;
 13947                           
 13948                           	psect	text70
 13949  0056F6                     __ptext70:
 13950                           	opt callstack 0
 13951  0056F6                     _EXT_INT_Initialize:
 13952                           	opt callstack 25
 13953                           
 13954                           ;mcc_generated_files/ext_int.c: 124:  (PIR1bits.INT0IF = 0);
 13955                           
 13956                           ; BSR set to: 57
 13957                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13958                           ;incstack = 0
 13959  0056F6  0139               	movlb	57	; () banked
 13960  0056F8  91A1               	bcf	161,0,b	;volatile
 13961                           
 13962                           ;mcc_generated_files/ext_int.c: 125:  (INTCON0bits.INT0EDG = 0);
 13963  0056FA  90D2               	bcf	16338,0,c	;volatile
 13964                           
 13965                           ; BSR set to: 57
 13966                           ;mcc_generated_files/ext_int.c: 127:  INT0_SetInterruptHandler(INT0_DefaultInterruptHand
      +                          ler);
 13967  0056FC  0E92               	movlw	low _INT0_DefaultInterruptHandler
 13968  0056FE  6EE6               	movwf	postinc1,c
 13969  005700  0E61               	movlw	high _INT0_DefaultInterruptHandler
 13970  005702  6EE6               	movwf	postinc1,c
 13971  005704  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 13972  005706  6EE6               	movwf	postinc1,c
 13973  005708  ECE1  F02E         	call	_INT0_SetInterruptHandler	;wreg free
 13974                           
 13975                           ;mcc_generated_files/ext_int.c: 128:  (PIE1bits.INT0IE = 1);
 13976  00570C  0139               	movlb	57	; () banked
 13977  00570E  8191               	bsf	145,0,b	;volatile
 13978                           
 13979                           ; BSR set to: 57
 13980                           ;mcc_generated_files/ext_int.c: 133:  (PIR5bits.INT1IF = 0);
 13981  005710  91A5               	bcf	165,0,b	;volatile
 13982                           
 13983                           ; BSR set to: 57
 13984                           ;mcc_generated_files/ext_int.c: 134:  (INTCON0bits.INT1EDG = 0);
 13985  005712  92D2               	bcf	16338,1,c	;volatile
 13986                           
 13987                           ;mcc_generated_files/ext_int.c: 136:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 13988  005714  0E94               	movlw	low _INT1_DefaultInterruptHandler
 13989  005716  6EE6               	movwf	postinc1,c
 13990  005718  0E61               	movlw	high _INT1_DefaultInterruptHandler
 13991  00571A  6EE6               	movwf	postinc1,c
 13992  00571C  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 13993  00571E  6EE6               	movwf	postinc1,c
 13994  005720  ECCD  F02E         	call	_INT1_SetInterruptHandler	;wreg free
 13995                           
 13996                           ;mcc_generated_files/ext_int.c: 137:  (PIE5bits.INT1IE = 1);
 13997  005724  0139               	movlb	57	; () banked
 13998  005726  8195               	bsf	149,0,b	;volatile
 13999                           
 14000                           ; BSR set to: 57
 14001                           ;mcc_generated_files/ext_int.c: 142:  (PIR7bits.INT2IF = 0);
 14002  005728  9BA7               	bcf	167,5,b	;volatile
 14003                           
 14004                           ; BSR set to: 57
 14005                           ;mcc_generated_files/ext_int.c: 143:  (INTCON0bits.INT2EDG = 0);
 14006  00572A  94D2               	bcf	16338,2,c	;volatile
 14007                           
 14008                           ;mcc_generated_files/ext_int.c: 145:  INT2_SetInterruptHandler(INT2_DefaultInterruptHand
      +                          ler);
 14009  00572C  0E96               	movlw	low _INT2_DefaultInterruptHandler
 14010  00572E  6EE6               	movwf	postinc1,c
 14011  005730  0E61               	movlw	high _INT2_DefaultInterruptHandler
 14012  005732  6EE6               	movwf	postinc1,c
 14013  005734  0E00               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
 14014  005736  6EE6               	movwf	postinc1,c
 14015  005738  ECB9  F02E         	call	_INT2_SetInterruptHandler	;wreg free
 14016                           
 14017                           ;mcc_generated_files/ext_int.c: 146:  (PIE7bits.INT2IE = 1);
 14018  00573C  0139               	movlb	57	; () banked
 14019  00573E  8B97               	bsf	151,5,b	;volatile
 14020                           
 14021                           ; BSR set to: 57
 14022                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 14023  005740  0012               	return		;funcret
 14024  005742                     __end_of_EXT_INT_Initialize:
 14025                           	opt callstack 0
 14026                           
 14027 ;; *************** function _INT2_SetInterruptHandler *****************
 14028 ;; Defined at:
 14029 ;;		line 108 in file "mcc_generated_files/ext_int.c"
 14030 ;; Parameters:    Size  Location     Type
 14031 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14032 ;;		 -> INT2_DefaultInterruptHandler(1), 
 14033 ;; Auto vars:     Size  Location     Type
 14034 ;;		None
 14035 ;; Return value:  Size  Location     Type
 14036 ;;                  1  [STACK] void 
 14037 ;; Registers used:
 14038 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14039 ;; Tracked objects:
 14040 ;;		On entry : 3F/39
 14041 ;;		On exit  : 0/0
 14042 ;;		Unchanged: 0/0
 14043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14048 ;;Total ram usage:        0 bytes
 14049 ;; Hardware stack levels used:    1
 14050 ;; Hardware stack levels required when called:    3
 14051 ;; This function calls:
 14052 ;;		Nothing
 14053 ;; This function is called by:
 14054 ;;		_EXT_INT_Initialize
 14055 ;; This function uses a reentrant model
 14056 ;;
 14057                           
 14058                           	psect	text71
 14059  005D72                     __ptext71:
 14060                           	opt callstack 0
 14061  005D72                     _INT2_SetInterruptHandler:
 14062                           	opt callstack 25
 14063                           
 14064                           ;mcc_generated_files/ext_int.c: 108: void INT2_SetInterruptHandler(void (* InterruptHand
      +                          ler)(void));mcc_generated_files/ext_int.c: 109: {;mcc_generated_files/ext_int.c: 110:  I
      +                          NT2_InterruptHandler = InterruptHandler;
 14065                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14066                           
 14067                           ; BSR set to: 57
 14068                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14069                           ;incstack = 0
 14070  005D72  50E1               	movf	fsr1l,w,c
 14071  005D74  0FFD               	addlw	-3
 14072  005D76  6ED9               	movwf	fsr2l,c
 14073  005D78  50E2               	movf	fsr1h,w,c
 14074  005D7A  6EDA               	movwf	fsr2h,c
 14075  005D7C  0EFF               	movlw	255
 14076  005D7E  22DA               	addwfc	fsr2h,f,c
 14077  005D80  006F FF78  F017    	movff	postinc2,_INT2_InterruptHandler
 14078  005D86  006F FF78  F018    	movff	postinc2,_INT2_InterruptHandler+1
 14079  005D8C  006F FF74  F019    	movff	postdec2,_INT2_InterruptHandler+2
 14080                           
 14081                           ; _INT2_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 14082  005D92  52E5               	movf	postdec1,f,c
 14083  005D94  52E5               	movf	postdec1,f,c
 14084  005D96  52E5               	movf	postdec1,f,c
 14085  005D98  0012               	return		;funcret
 14086  005D9A                     __end_of_INT2_SetInterruptHandler:
 14087                           	opt callstack 0
 14088                           
 14089 ;; *************** function _INT1_SetInterruptHandler *****************
 14090 ;; Defined at:
 14091 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 14092 ;; Parameters:    Size  Location     Type
 14093 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14094 ;;		 -> INT1_DefaultInterruptHandler(1), 
 14095 ;; Auto vars:     Size  Location     Type
 14096 ;;		None
 14097 ;; Return value:  Size  Location     Type
 14098 ;;                  1  [STACK] void 
 14099 ;; Registers used:
 14100 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14101 ;; Tracked objects:
 14102 ;;		On entry : 3F/39
 14103 ;;		On exit  : 0/0
 14104 ;;		Unchanged: 0/0
 14105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14110 ;;Total ram usage:        0 bytes
 14111 ;; Hardware stack levels used:    1
 14112 ;; Hardware stack levels required when called:    3
 14113 ;; This function calls:
 14114 ;;		Nothing
 14115 ;; This function is called by:
 14116 ;;		_EXT_INT_Initialize
 14117 ;; This function uses a reentrant model
 14118 ;;
 14119                           
 14120                           	psect	text72
 14121  005D9A                     __ptext72:
 14122                           	opt callstack 0
 14123  005D9A                     _INT1_SetInterruptHandler:
 14124                           	opt callstack 25
 14125                           
 14126                           ;mcc_generated_files/ext_int.c: 81: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 82: {;mcc_generated_files/ext_int.c: 83:  INT1
      +                          _InterruptHandler = InterruptHandler;
 14127                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14128                           
 14129                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14130                           ;incstack = 0
 14131  005D9A  50E1               	movf	fsr1l,w,c
 14132  005D9C  0FFD               	addlw	-3
 14133  005D9E  6ED9               	movwf	fsr2l,c
 14134  005DA0  50E2               	movf	fsr1h,w,c
 14135  005DA2  6EDA               	movwf	fsr2h,c
 14136  005DA4  0EFF               	movlw	255
 14137  005DA6  22DA               	addwfc	fsr2h,f,c
 14138  005DA8  006F FF78  F01A    	movff	postinc2,_INT1_InterruptHandler
 14139  005DAE  006F FF78  F01B    	movff	postinc2,_INT1_InterruptHandler+1
 14140  005DB4  006F FF74  F01C    	movff	postdec2,_INT1_InterruptHandler+2
 14141                           
 14142                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 14143  005DBA  52E5               	movf	postdec1,f,c
 14144  005DBC  52E5               	movf	postdec1,f,c
 14145  005DBE  52E5               	movf	postdec1,f,c
 14146  005DC0  0012               	return		;funcret
 14147  005DC2                     __end_of_INT1_SetInterruptHandler:
 14148                           	opt callstack 0
 14149                           
 14150 ;; *************** function _INT0_SetInterruptHandler *****************
 14151 ;; Defined at:
 14152 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 14153 ;; Parameters:    Size  Location     Type
 14154 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14155 ;;		 -> INT0_DefaultInterruptHandler(1), 
 14156 ;; Auto vars:     Size  Location     Type
 14157 ;;		None
 14158 ;; Return value:  Size  Location     Type
 14159 ;;                  1  [STACK] void 
 14160 ;; Registers used:
 14161 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14162 ;; Tracked objects:
 14163 ;;		On entry : 3F/39
 14164 ;;		On exit  : 0/0
 14165 ;;		Unchanged: 0/0
 14166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14171 ;;Total ram usage:        0 bytes
 14172 ;; Hardware stack levels used:    1
 14173 ;; Hardware stack levels required when called:    3
 14174 ;; This function calls:
 14175 ;;		Nothing
 14176 ;; This function is called by:
 14177 ;;		_EXT_INT_Initialize
 14178 ;; This function uses a reentrant model
 14179 ;;
 14180                           
 14181                           	psect	text73
 14182  005DC2                     __ptext73:
 14183                           	opt callstack 0
 14184  005DC2                     _INT0_SetInterruptHandler:
 14185                           	opt callstack 25
 14186                           
 14187                           ;mcc_generated_files/ext_int.c: 54: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 55: {;mcc_generated_files/ext_int.c: 56:  INT0
      +                          _InterruptHandler = InterruptHandler;
 14188                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14189                           
 14190                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14191                           ;incstack = 0
 14192  005DC2  50E1               	movf	fsr1l,w,c
 14193  005DC4  0FFD               	addlw	-3
 14194  005DC6  6ED9               	movwf	fsr2l,c
 14195  005DC8  50E2               	movf	fsr1h,w,c
 14196  005DCA  6EDA               	movwf	fsr2h,c
 14197  005DCC  0EFF               	movlw	255
 14198  005DCE  22DA               	addwfc	fsr2h,f,c
 14199  005DD0  006F FF78  F01D    	movff	postinc2,_INT0_InterruptHandler
 14200  005DD6  006F FF78  F01E    	movff	postinc2,_INT0_InterruptHandler+1
 14201  005DDC  006F FF74  F01F    	movff	postdec2,_INT0_InterruptHandler+2
 14202                           
 14203                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 14204  005DE2  52E5               	movf	postdec1,f,c
 14205  005DE4  52E5               	movf	postdec1,f,c
 14206  005DE6  52E5               	movf	postdec1,f,c
 14207  005DE8  0012               	return		;funcret
 14208  005DEA                     __end_of_INT0_SetInterruptHandler:
 14209                           	opt callstack 0
 14210                           
 14211 ;; *************** function _DSM_Initialize *****************
 14212 ;; Defined at:
 14213 ;;		line 58 in file "mcc_generated_files/dsm.c"
 14214 ;; Parameters:    Size  Location     Type
 14215 ;;		None
 14216 ;; Auto vars:     Size  Location     Type
 14217 ;;		None
 14218 ;; Return value:  Size  Location     Type
 14219 ;;                  1  [STACK] void 
 14220 ;; Registers used:
 14221 ;;		wreg, status,2
 14222 ;; Tracked objects:
 14223 ;;		On entry : 0/3C
 14224 ;;		On exit  : 3F/3C
 14225 ;;		Unchanged: 0/0
 14226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14231 ;;Total ram usage:        0 bytes
 14232 ;; Hardware stack levels used:    1
 14233 ;; Hardware stack levels required when called:    3
 14234 ;; This function calls:
 14235 ;;		Nothing
 14236 ;; This function is called by:
 14237 ;;		_SYSTEM_Initialize
 14238 ;; This function uses a reentrant model
 14239 ;;
 14240                           
 14241                           	psect	text74
 14242  00603A                     __ptext74:
 14243                           	opt callstack 0
 14244  00603A                     _DSM_Initialize:
 14245                           	opt callstack 26
 14246                           
 14247                           ;mcc_generated_files/dsm.c: 63:     MD1CON0bits.MD1OPOL = 0;
 14248                           
 14249                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14250                           ;incstack = 0
 14251  00603A  013C               	movlb	60	; () banked
 14252  00603C  99FA               	bcf	250,4,b	;volatile
 14253                           
 14254                           ;mcc_generated_files/dsm.c: 66:     MD1CON1bits.MD1CLSYNC = 1;
 14255  00603E  81FB               	bsf	251,0,b	;volatile
 14256                           
 14257                           ;mcc_generated_files/dsm.c: 69:     MD1CON1bits.MD1CLPOL = 0;
 14258  006040  93FB               	bcf	251,1,b	;volatile
 14259                           
 14260                           ;mcc_generated_files/dsm.c: 72:     MD1CON1bits.MD1CHSYNC = 1;
 14261  006042  89FB               	bsf	251,4,b	;volatile
 14262                           
 14263                           ;mcc_generated_files/dsm.c: 75:     MD1CON1bits.MD1CHPOL = 0;
 14264  006044  9BFB               	bcf	251,5,b	;volatile
 14265                           
 14266                           ; BSR set to: 60
 14267                           ;mcc_generated_files/dsm.c: 78:     MD1SRC = 0x13;
 14268  006046  0E13               	movlw	19
 14269  006048  6FFC               	movwf	252,b	;volatile
 14270                           
 14271                           ;mcc_generated_files/dsm.c: 81:     MD1CARH = 0x0E;
 14272  00604A  0E0E               	movlw	14
 14273  00604C  6FFE               	movwf	254,b	;volatile
 14274                           
 14275                           ;mcc_generated_files/dsm.c: 84:     MD1CARL = 0x04;
 14276  00604E  0E04               	movlw	4
 14277  006050  6FFD               	movwf	253,b	;volatile
 14278                           
 14279                           ; BSR set to: 60
 14280                           ;mcc_generated_files/dsm.c: 87:     MD1CON0bits.MD1EN = 1;
 14281  006052  8FFA               	bsf	250,7,b	;volatile
 14282                           
 14283                           ; BSR set to: 60
 14284                           ; _DSM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 14285  006054  0012               	return		;funcret
 14286  006056                     __end_of_DSM_Initialize:
 14287                           	opt callstack 0
 14288                           
 14289 ;; *************** function _DMA1_Initialize *****************
 14290 ;; Defined at:
 14291 ;;		line 86 in file "mcc_generated_files/dma1.c"
 14292 ;; Parameters:    Size  Location     Type
 14293 ;;		None
 14294 ;; Auto vars:     Size  Location     Type
 14295 ;;		None
 14296 ;; Return value:  Size  Location     Type
 14297 ;;                  1  [STACK] void 
 14298 ;; Registers used:
 14299 ;;		wreg, status,2
 14300 ;; Tracked objects:
 14301 ;;		On entry : 3F/3D
 14302 ;;		On exit  : 3F/3B
 14303 ;;		Unchanged: 0/0
 14304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14309 ;;Total ram usage:        0 bytes
 14310 ;; Hardware stack levels used:    1
 14311 ;; Hardware stack levels required when called:    3
 14312 ;; This function calls:
 14313 ;;		Nothing
 14314 ;; This function is called by:
 14315 ;;		_SYSTEM_Initialize
 14316 ;; This function uses a reentrant model
 14317 ;;
 14318                           
 14319                           	psect	text75
 14320  0053F8                     __ptext75:
 14321                           	opt callstack 0
 14322  0053F8                     _DMA1_Initialize:
 14323                           	opt callstack 26
 14324                           
 14325                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 14326                           
 14327                           ; BSR set to: 60
 14328                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14329                           ;incstack = 0
 14330  0053F8  0E00               	movlw	0
 14331  0053FA  013B               	movlb	59	; () banked
 14332  0053FC  6FF9               	movwf	249,b	;volatile
 14333  0053FE  0E10               	movlw	16
 14334  005400  6FFA               	movwf	250,b	;volatile
 14335  005402  0E00               	movlw	0
 14336  005404  6FFB               	movwf	251,b	;volatile
 14337                           
 14338                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 14339  005406  0E3D               	movlw	61
 14340  005408  6FF1               	movwf	241,b	;volatile
 14341  00540A  0E11               	movlw	17
 14342  00540C  6FF0               	movwf	240,b	;volatile
 14343                           
 14344                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 14345  00540E  0E03               	movlw	3
 14346  005410  6FFD               	movwf	253,b	;volatile
 14347                           
 14348                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 14349  005412  0E00               	movlw	0
 14350  005414  6FF8               	movwf	248,b	;volatile
 14351  005416  0E01               	movlw	1
 14352  005418  6FF7               	movwf	247,b	;volatile
 14353                           
 14354                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 14355  00541A  0E00               	movlw	0
 14356  00541C  6FEF               	movwf	239,b	;volatile
 14357  00541E  0E01               	movlw	1
 14358  005420  6FEE               	movwf	238,b	;volatile
 14359                           
 14360                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 14361  005422  0E15               	movlw	21
 14362  005424  6FFF               	movwf	255,b	;volatile
 14363                           
 14364                           ; BSR set to: 59
 14365                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 14366  005426  6BFE               	clrf	254,b	;volatile
 14367                           
 14368                           ; BSR set to: 59
 14369                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 14370  005428  0139               	movlb	57	; () banked
 14371  00542A  93A2               	bcf	162,1,b	;volatile
 14372                           
 14373                           ; BSR set to: 57
 14374                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 14375  00542C  91A2               	bcf	162,0,b	;volatile
 14376                           
 14377                           ; BSR set to: 57
 14378                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 14379  00542E  97A2               	bcf	162,3,b	;volatile
 14380                           
 14381                           ; BSR set to: 57
 14382                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 14383  005430  95A2               	bcf	162,2,b	;volatile
 14384                           
 14385                           ; BSR set to: 57
 14386                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 14387  005432  8392               	bsf	146,1,b	;volatile
 14388                           
 14389                           ; BSR set to: 57
 14390                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 14391  005434  8192               	bsf	146,0,b	;volatile
 14392                           
 14393                           ; BSR set to: 57
 14394                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 14395  005436  8792               	bsf	146,3,b	;volatile
 14396                           
 14397                           ; BSR set to: 57
 14398                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 14399  005438  8592               	bsf	146,2,b	;volatile
 14400                           
 14401                           ; BSR set to: 57
 14402                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 14403  00543A  6BF1               	clrf	241,b	;volatile
 14404                           
 14405                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 14406  00543C  0E01               	movlw	1
 14407  00543E  6FF2               	movwf	242,b	;volatile
 14408                           
 14409                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 14410  005440  0E04               	movlw	4
 14411  005442  6FF3               	movwf	243,b	;volatile
 14412                           
 14413                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 14414  005444  0E02               	movlw	2
 14415  005446  6FF4               	movwf	244,b	;volatile
 14416                           
 14417                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 14418  005448  0E03               	movlw	3
 14419  00544A  6FF7               	movwf	247,b	;volatile
 14420  00544C  9ED2               	bcf	16338,7,c	;# 
 14421  00544E  0139               	banksel	14831	;# 
 14422  005450  0E55               	movlw	85	;# 
 14423  005452  6FEF               	movwf	14831,b	;# 
 14424  005454  0EAA               	movlw	170	;# 
 14425  005456  6FEF               	movwf	14831,b	;# 
 14426  005458  81EF               	bsf	14831,0,b	;# 
 14427  00545A  8ED2               	bsf	16338,7,c	;# 
 14428                           
 14429                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 14430  00545C  013B               	movlb	59	; () banked
 14431  00545E  6BFC               	clrf	252,b	;volatile
 14432                           
 14433                           ; BSR set to: 59
 14434                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14435  005460  0012               	return		;funcret
 14436  005462                     __end_of_DMA1_Initialize:
 14437                           	opt callstack 0
 14438                           
 14439 ;; *************** function _CLKREF_Initialize *****************
 14440 ;; Defined at:
 14441 ;;		line 58 in file "mcc_generated_files/clkref.c"
 14442 ;; Parameters:    Size  Location     Type
 14443 ;;		None
 14444 ;; Auto vars:     Size  Location     Type
 14445 ;;		None
 14446 ;; Return value:  Size  Location     Type
 14447 ;;                  1  [STACK] void 
 14448 ;; Registers used:
 14449 ;;		wreg, status,2
 14450 ;; Tracked objects:
 14451 ;;		On entry : 3F/3B
 14452 ;;		On exit  : 3F/3C
 14453 ;;		Unchanged: 0/0
 14454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14459 ;;Total ram usage:        0 bytes
 14460 ;; Hardware stack levels used:    1
 14461 ;; Hardware stack levels required when called:    3
 14462 ;; This function calls:
 14463 ;;		Nothing
 14464 ;; This function is called by:
 14465 ;;		_SYSTEM_Initialize
 14466 ;; This function uses a reentrant model
 14467 ;;
 14468                           
 14469                           	psect	text76
 14470  006132                     __ptext76:
 14471                           	opt callstack 0
 14472  006132                     _CLKREF_Initialize:
 14473                           	opt callstack 26
 14474                           
 14475                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 14476                           
 14477                           ; BSR set to: 59
 14478                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14479                           ;incstack = 0
 14480  006132  013C               	movlb	60	; () banked
 14481  006134  6BE6               	clrf	230,b	;volatile
 14482                           
 14483                           ; BSR set to: 60
 14484                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 14485  006136  0E94               	movlw	148
 14486  006138  6FE5               	movwf	229,b	;volatile
 14487                           
 14488                           ; BSR set to: 60
 14489                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 14490  00613A  0012               	return		;funcret
 14491  00613C                     __end_of_CLKREF_Initialize:
 14492                           	opt callstack 0
 14493                           
 14494 ;; *************** function _CLC1_Initialize *****************
 14495 ;; Defined at:
 14496 ;;		line 58 in file "mcc_generated_files/clc1.c"
 14497 ;; Parameters:    Size  Location     Type
 14498 ;;		None
 14499 ;; Auto vars:     Size  Location     Type
 14500 ;;		None
 14501 ;; Return value:  Size  Location     Type
 14502 ;;                  1  [STACK] void 
 14503 ;; Registers used:
 14504 ;;		wreg, status,2
 14505 ;; Tracked objects:
 14506 ;;		On entry : 0/39
 14507 ;;		On exit  : 3F/3C
 14508 ;;		Unchanged: 0/0
 14509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14514 ;;Total ram usage:        0 bytes
 14515 ;; Hardware stack levels used:    1
 14516 ;; Hardware stack levels required when called:    3
 14517 ;; This function calls:
 14518 ;;		Nothing
 14519 ;; This function is called by:
 14520 ;;		_SYSTEM_Initialize
 14521 ;; This function uses a reentrant model
 14522 ;;
 14523                           
 14524                           	psect	text77
 14525  005F1C                     __ptext77:
 14526                           	opt callstack 0
 14527  005F1C                     _CLC1_Initialize:
 14528                           	opt callstack 26
 14529                           
 14530                           ;mcc_generated_files/clc1.c: 63:     CLC1POL = 0x00;
 14531                           
 14532                           ; BSR set to: 60
 14533                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14534                           ;incstack = 0
 14535  005F1C  013C               	movlb	60	; () banked
 14536  005F1E  6B75               	clrf	117,b	;volatile
 14537                           
 14538                           ; BSR set to: 60
 14539                           ;mcc_generated_files/clc1.c: 65:     CLC1SEL0 = 0x04;
 14540  005F20  0E04               	movlw	4
 14541  005F22  6F76               	movwf	118,b	;volatile
 14542                           
 14543                           ;mcc_generated_files/clc1.c: 67:     CLC1SEL1 = 0x04;
 14544  005F24  0E04               	movlw	4
 14545  005F26  6F77               	movwf	119,b	;volatile
 14546                           
 14547                           ;mcc_generated_files/clc1.c: 69:     CLC1SEL2 = 0x04;
 14548  005F28  0E04               	movlw	4
 14549  005F2A  6F78               	movwf	120,b	;volatile
 14550                           
 14551                           ;mcc_generated_files/clc1.c: 71:     CLC1SEL3 = 0x04;
 14552  005F2C  0E04               	movlw	4
 14553  005F2E  6F79               	movwf	121,b	;volatile
 14554                           
 14555                           ; BSR set to: 60
 14556                           ;mcc_generated_files/clc1.c: 73:     CLC1GLS0 = 0x00;
 14557  005F30  6B7A               	clrf	122,b	;volatile
 14558                           
 14559                           ; BSR set to: 60
 14560                           ;mcc_generated_files/clc1.c: 75:     CLC1GLS1 = 0x00;
 14561  005F32  6B7B               	clrf	123,b	;volatile
 14562                           
 14563                           ; BSR set to: 60
 14564                           ;mcc_generated_files/clc1.c: 77:     CLC1GLS2 = 0x00;
 14565  005F34  6B7C               	clrf	124,b	;volatile
 14566                           
 14567                           ; BSR set to: 60
 14568                           ;mcc_generated_files/clc1.c: 79:     CLC1GLS3 = 0x00;
 14569  005F36  6B7D               	clrf	125,b	;volatile
 14570                           
 14571                           ;mcc_generated_files/clc1.c: 81:     CLC1CON = 0x81;
 14572  005F38  0E81               	movlw	129
 14573  005F3A  6F74               	movwf	116,b	;volatile
 14574                           
 14575                           ; BSR set to: 60
 14576                           ; _CLC1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14577  005F3C  0012               	return		;funcret
 14578  005F3E                     __end_of_CLC1_Initialize:
 14579                           	opt callstack 0
 14580                           
 14581 ;; *************** function _ADCC_Initialize *****************
 14582 ;; Defined at:
 14583 ;;		line 64 in file "mcc_generated_files/adcc.c"
 14584 ;; Parameters:    Size  Location     Type
 14585 ;;		None
 14586 ;; Auto vars:     Size  Location     Type
 14587 ;;		None
 14588 ;; Return value:  Size  Location     Type
 14589 ;;                  1  [STACK] void 
 14590 ;; Registers used:
 14591 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 14592 ;; Tracked objects:
 14593 ;;		On entry : 3F/39
 14594 ;;		On exit  : 0/0
 14595 ;;		Unchanged: 0/0
 14596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14601 ;;Total ram usage:        0 bytes
 14602 ;; Hardware stack levels used:    1
 14603 ;; Hardware stack levels required when called:    4
 14604 ;; This function calls:
 14605 ;;		_ADCC_SetADIInterruptHandler
 14606 ;; This function is called by:
 14607 ;;		_SYSTEM_Initialize
 14608 ;; This function uses a reentrant model
 14609 ;;
 14610                           
 14611                           	psect	text78
 14612  005742                     __ptext78:
 14613                           	opt callstack 0
 14614  005742                     _ADCC_Initialize:
 14615                           	opt callstack 25
 14616                           
 14617                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 14618                           
 14619                           ; BSR set to: 60
 14620                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14621                           ;incstack = 0
 14622  005742  013E               	movlb	62	; () banked
 14623  005744  6BDE               	clrf	222,b	;volatile
 14624                           
 14625                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 14626  005746  6BDF               	clrf	223,b	;volatile
 14627                           
 14628                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 14629  005748  6BE0               	clrf	224,b	;volatile
 14630                           
 14631                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 14632  00574A  6BE1               	clrf	225,b	;volatile
 14633                           
 14634                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 14635  00574C  6BE4               	clrf	228,b	;volatile
 14636                           
 14637                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 14638  00574E  6BE5               	clrf	229,b	;volatile
 14639                           
 14640                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 14641  005750  6BEA               	clrf	234,b	;volatile
 14642                           
 14643                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 14644  005752  6BEC               	clrf	236,b	;volatile
 14645                           
 14646                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 14647  005754  6BF1               	clrf	241,b	;volatile
 14648                           
 14649                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 14650  005756  6BF3               	clrf	243,b	;volatile
 14651                           
 14652                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 14653  005758  6BF4               	clrf	244,b	;volatile
 14654                           
 14655                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 14656  00575A  6BF5               	clrf	245,b	;volatile
 14657                           
 14658                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 14659  00575C  6BF6               	clrf	246,b	;volatile
 14660                           
 14661                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 14662  00575E  6BF7               	clrf	247,b	;volatile
 14663                           
 14664                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 14665  005760  6BF9               	clrf	249,b	;volatile
 14666                           
 14667                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 14668  005762  6BFA               	clrf	250,b	;volatile
 14669                           
 14670                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x00;
 14671  005764  6BFB               	clrf	251,b	;volatile
 14672                           
 14673                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 14674  005766  6BFC               	clrf	252,b	;volatile
 14675                           
 14676                           ; BSR set to: 62
 14677                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 14678  005768  0E02               	movlw	2
 14679  00576A  6FFD               	movwf	253,b	;volatile
 14680                           
 14681                           ; BSR set to: 62
 14682                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 14683  00576C  6BFE               	clrf	254,b	;volatile
 14684                           
 14685                           ; BSR set to: 62
 14686                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 14687  00576E  6BFF               	clrf	255,b	;volatile
 14688                           
 14689                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x94;
 14690  005770  0E94               	movlw	148
 14691  005772  6FF8               	movwf	248,b	;volatile
 14692                           
 14693                           ; BSR set to: 62
 14694                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 14695  005774  0139               	movlb	57	; () banked
 14696  005776  95A1               	bcf	161,2,b	;volatile
 14697                           
 14698                           ; BSR set to: 57
 14699                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 14700  005778  8591               	bsf	145,2,b	;volatile
 14701                           
 14702                           ; BSR set to: 57
 14703                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 14704  00577A  0E98               	movlw	low _ADCC_DefaultInterruptHandler
 14705  00577C  6EE6               	movwf	postinc1,c
 14706  00577E  0E61               	movlw	high _ADCC_DefaultInterruptHandler
 14707  005780  6EE6               	movwf	postinc1,c
 14708  005782  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 14709  005784  6EE6               	movwf	postinc1,c
 14710  005786  ECF5  F02E         	call	_ADCC_SetADIInterruptHandler	;wreg free
 14711                           
 14712                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14713  00578A  0012               	return		;funcret
 14714  00578C                     __end_of_ADCC_Initialize:
 14715                           	opt callstack 0
 14716                           
 14717 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 14718 ;; Defined at:
 14719 ;;		line 316 in file "mcc_generated_files/adcc.c"
 14720 ;; Parameters:    Size  Location     Type
 14721 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14722 ;;		 -> ADCC_DefaultInterruptHandler(1), 
 14723 ;; Auto vars:     Size  Location     Type
 14724 ;;		None
 14725 ;; Return value:  Size  Location     Type
 14726 ;;                  1  [STACK] void 
 14727 ;; Registers used:
 14728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14729 ;; Tracked objects:
 14730 ;;		On entry : 3F/39
 14731 ;;		On exit  : 0/0
 14732 ;;		Unchanged: 0/0
 14733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14738 ;;Total ram usage:        0 bytes
 14739 ;; Hardware stack levels used:    1
 14740 ;; Hardware stack levels required when called:    3
 14741 ;; This function calls:
 14742 ;;		Nothing
 14743 ;; This function is called by:
 14744 ;;		_ADCC_Initialize
 14745 ;; This function uses a reentrant model
 14746 ;;
 14747                           
 14748                           	psect	text79
 14749  005DEA                     __ptext79:
 14750                           	opt callstack 0
 14751  005DEA                     _ADCC_SetADIInterruptHandler:
 14752                           	opt callstack 25
 14753                           
 14754                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 14755                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14756                           
 14757                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14758                           ;incstack = 0
 14759  005DEA  50E1               	movf	fsr1l,w,c
 14760  005DEC  0FFD               	addlw	-3
 14761  005DEE  6ED9               	movwf	fsr2l,c
 14762  005DF0  50E2               	movf	fsr1h,w,c
 14763  005DF2  6EDA               	movwf	fsr2h,c
 14764  005DF4  0EFF               	movlw	255
 14765  005DF6  22DA               	addwfc	fsr2h,f,c
 14766  005DF8  006F FF78  F008    	movff	postinc2,_ADCC_ADI_InterruptHandler
 14767  005DFE  006F FF78  F009    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 14768  005E04  006F FF74  F00A    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 14769                           
 14770                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 14771  005E0A  52E5               	movf	postdec1,f,c
 14772  005E0C  52E5               	movf	postdec1,f,c
 14773  005E0E  52E5               	movf	postdec1,f,c
 14774  005E10  0012               	return		;funcret
 14775  005E12                     __end_of_ADCC_SetADIInterruptHandler:
 14776                           	opt callstack 0
 14777                           
 14778 ;; *************** function _INT0_ISR *****************
 14779 ;; Defined at:
 14780 ;;		line 38 in file "mcc_generated_files/ext_int.c"
 14781 ;; Parameters:    Size  Location     Type
 14782 ;;		None
 14783 ;; Auto vars:     Size  Location     Type
 14784 ;;		None
 14785 ;; Return value:  Size  Location     Type
 14786 ;;                  1    wreg      void 
 14787 ;; Registers used:
 14788 ;;		wreg, status,2, status,0, pclath, tosl
 14789 ;; Tracked objects:
 14790 ;;		On entry : 0/0
 14791 ;;		On exit  : 0/0
 14792 ;;		Unchanged: 0/0
 14793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14798 ;;Total ram usage:        0 bytes
 14799 ;; Hardware stack levels used:    1
 14800 ;; Hardware stack levels required when called:    2
 14801 ;; This function calls:
 14802 ;;		_INT0_CallBack
 14803 ;; This function is called by:
 14804 ;;		Interrupt level 2
 14805 ;; This function uses a non-reentrant model
 14806 ;;
 14807                           
 14808                           	psect	text80
 14809  0060F4                     __ptext80:
 14810                           	opt callstack 0
 14811  0060F4                     _INT0_ISR:
 14812                           	opt callstack 17
 14813                           
 14814                           ;incstack = 0
 14815  0060F4  EE13  F12A         	lfsr	1,___inthi_sp
 14816                           
 14817                           ;mcc_generated_files/ext_int.c: 40:  (PIR1bits.INT0IF = 0);
 14818  0060F8  0139               	movlb	57	; () banked
 14819  0060FA  91A1               	bcf	161,0,b	;volatile
 14820                           
 14821                           ; BSR set to: 57
 14822                           ;mcc_generated_files/ext_int.c: 43:  INT0_CallBack();
 14823  0060FC  EC9F  F02F         	call	_INT0_CallBack	;wreg free
 14824  006100  0011               	retfie		f
 14825  006102                     __end_of_INT0_ISR:
 14826                           	opt callstack 0
 14827                           
 14828 ;; *************** function _INT0_CallBack *****************
 14829 ;; Defined at:
 14830 ;;		line 46 in file "mcc_generated_files/ext_int.c"
 14831 ;; Parameters:    Size  Location     Type
 14832 ;;		None
 14833 ;; Auto vars:     Size  Location     Type
 14834 ;;		None
 14835 ;; Return value:  Size  Location     Type
 14836 ;;                  1  [STACK] void 
 14837 ;; Registers used:
 14838 ;;		wreg, status,2, status,0, pclath, tosl
 14839 ;; Tracked objects:
 14840 ;;		On entry : 3F/39
 14841 ;;		On exit  : 0/0
 14842 ;;		Unchanged: 0/0
 14843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14848 ;;Total ram usage:        0 bytes
 14849 ;; Hardware stack levels used:    1
 14850 ;; Hardware stack levels required when called:    1
 14851 ;; This function calls:
 14852 ;;		Absolute function
 14853 ;;		_INT0_DefaultInterruptHandler
 14854 ;; This function is called by:
 14855 ;;		_INT0_ISR
 14856 ;; This function uses a reentrant model
 14857 ;;
 14858                           
 14859                           	psect	text81
 14860  005F3E                     __ptext81:
 14861                           	opt callstack 0
 14862  005F3E                     _INT0_CallBack:
 14863                           	opt callstack 17
 14864                           
 14865                           ;mcc_generated_files/ext_int.c: 49:  if (INT0_InterruptHandler) {
 14866                           
 14867                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14868                           ;incstack = 0
 14869  005F3E  501D               	movf	_INT0_InterruptHandler,w,c
 14870  005F40  101E               	iorwf	_INT0_InterruptHandler+1,w,c
 14871  005F42  101F               	iorwf	_INT0_InterruptHandler+2,w,c
 14872  005F44  B4D8               	btfsc	status,2,c
 14873  005F46  0012               	return	
 14874                           
 14875                           ;mcc_generated_files/ext_int.c: 50:   INT0_InterruptHandler();
 14876  005F48  D801               	call	u121_48
 14877  005F4A  0012               	return	
 14878  005F4C                     u121_48:
 14879  005F4C  0005               	push	
 14880  005F4E  6EFA               	movwf	pclath,c
 14881  005F50  501D               	movf	_INT0_InterruptHandler,w,c
 14882  005F52  6EFD               	movwf	tosl,c
 14883  005F54  501E               	movf	_INT0_InterruptHandler+1,w,c
 14884  005F56  6EFE               	movwf	tosh,c
 14885  005F58  501F               	movf	_INT0_InterruptHandler+2,w,c
 14886  005F5A  6EFF               	movwf	tosu,c
 14887  005F5C  50FA               	movf	pclath,w,c
 14888  005F5E  0012               	return		;indir
 14889  005F60                     __end_of_INT0_CallBack:
 14890                           	opt callstack 0
 14891                           
 14892 ;; *************** function _INT0_DefaultInterruptHandler *****************
 14893 ;; Defined at:
 14894 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 14895 ;; Parameters:    Size  Location     Type
 14896 ;;		None
 14897 ;; Auto vars:     Size  Location     Type
 14898 ;;		None
 14899 ;; Return value:  Size  Location     Type
 14900 ;;                  1  [STACK] void 
 14901 ;; Registers used:
 14902 ;;		None
 14903 ;; Tracked objects:
 14904 ;;		On entry : 0/39
 14905 ;;		On exit  : 0/0
 14906 ;;		Unchanged: 0/0
 14907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14912 ;;Total ram usage:        0 bytes
 14913 ;; Hardware stack levels used:    1
 14914 ;; This function calls:
 14915 ;;		Nothing
 14916 ;; This function is called by:
 14917 ;;		_EXT_INT_Initialize
 14918 ;;		_INT0_CallBack
 14919 ;; This function uses a reentrant model
 14920 ;;
 14921                           
 14922                           	psect	text82
 14923  006192                     __ptext82:
 14924                           	opt callstack 0
 14925  006192                     _INT0_DefaultInterruptHandler:
 14926                           	opt callstack 17
 14927                           
 14928                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14929                           
 14930                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14931                           ;incstack = 0
 14932  006192  0012               	return		;funcret
 14933  006194                     __end_of_INT0_DefaultInterruptHandler:
 14934                           	opt callstack 0
 14935                           
 14936 ;; *************** function _INT1_ISR *****************
 14937 ;; Defined at:
 14938 ;;		line 65 in file "mcc_generated_files/ext_int.c"
 14939 ;; Parameters:    Size  Location     Type
 14940 ;;		None
 14941 ;; Auto vars:     Size  Location     Type
 14942 ;;		None
 14943 ;; Return value:  Size  Location     Type
 14944 ;;                  1    wreg      void 
 14945 ;; Registers used:
 14946 ;;		wreg, status,2, status,0, pclath, tosl
 14947 ;; Tracked objects:
 14948 ;;		On entry : 0/0
 14949 ;;		On exit  : 0/0
 14950 ;;		Unchanged: 0/0
 14951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14956 ;;Total ram usage:        0 bytes
 14957 ;; Hardware stack levels used:    1
 14958 ;; Hardware stack levels required when called:    2
 14959 ;; This function calls:
 14960 ;;		_INT1_CallBack
 14961 ;; This function is called by:
 14962 ;;		Interrupt level 2
 14963 ;; This function uses a non-reentrant model
 14964 ;;
 14965                           
 14966                           	psect	text83
 14967  006104                     __ptext83:
 14968                           	opt callstack 0
 14969  006104                     _INT1_ISR:
 14970                           	opt callstack 17
 14971                           
 14972                           ;incstack = 0
 14973  006104  EE13  F12A         	lfsr	1,___inthi_sp
 14974                           
 14975                           ;mcc_generated_files/ext_int.c: 67:  (PIR5bits.INT1IF = 0);
 14976  006108  0139               	movlb	57	; () banked
 14977  00610A  91A5               	bcf	165,0,b	;volatile
 14978                           
 14979                           ; BSR set to: 57
 14980                           ;mcc_generated_files/ext_int.c: 70:  INT1_CallBack();
 14981  00610C  ECB0  F02F         	call	_INT1_CallBack	;wreg free
 14982  006110  0011               	retfie		f
 14983  006112                     __end_of_INT1_ISR:
 14984                           	opt callstack 0
 14985                           
 14986 ;; *************** function _INT1_CallBack *****************
 14987 ;; Defined at:
 14988 ;;		line 73 in file "mcc_generated_files/ext_int.c"
 14989 ;; Parameters:    Size  Location     Type
 14990 ;;		None
 14991 ;; Auto vars:     Size  Location     Type
 14992 ;;		None
 14993 ;; Return value:  Size  Location     Type
 14994 ;;                  1  [STACK] void 
 14995 ;; Registers used:
 14996 ;;		wreg, status,2, status,0, pclath, tosl
 14997 ;; Tracked objects:
 14998 ;;		On entry : 3F/39
 14999 ;;		On exit  : 0/0
 15000 ;;		Unchanged: 0/0
 15001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15006 ;;Total ram usage:        0 bytes
 15007 ;; Hardware stack levels used:    1
 15008 ;; Hardware stack levels required when called:    1
 15009 ;; This function calls:
 15010 ;;		Absolute function
 15011 ;;		_INT1_DefaultInterruptHandler
 15012 ;; This function is called by:
 15013 ;;		_INT1_ISR
 15014 ;; This function uses a reentrant model
 15015 ;;
 15016                           
 15017                           	psect	text84
 15018  005F60                     __ptext84:
 15019                           	opt callstack 0
 15020  005F60                     _INT1_CallBack:
 15021                           	opt callstack 17
 15022                           
 15023                           ;mcc_generated_files/ext_int.c: 76:  if (INT1_InterruptHandler) {
 15024                           
 15025                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15026                           ;incstack = 0
 15027  005F60  501A               	movf	_INT1_InterruptHandler,w,c
 15028  005F62  101B               	iorwf	_INT1_InterruptHandler+1,w,c
 15029  005F64  101C               	iorwf	_INT1_InterruptHandler+2,w,c
 15030  005F66  B4D8               	btfsc	status,2,c
 15031  005F68  0012               	return	
 15032                           
 15033                           ;mcc_generated_files/ext_int.c: 77:   INT1_InterruptHandler();
 15034  005F6A  D801               	call	u123_48
 15035  005F6C  0012               	return	
 15036  005F6E                     u123_48:
 15037  005F6E  0005               	push	
 15038  005F70  6EFA               	movwf	pclath,c
 15039  005F72  501A               	movf	_INT1_InterruptHandler,w,c
 15040  005F74  6EFD               	movwf	tosl,c
 15041  005F76  501B               	movf	_INT1_InterruptHandler+1,w,c
 15042  005F78  6EFE               	movwf	tosh,c
 15043  005F7A  501C               	movf	_INT1_InterruptHandler+2,w,c
 15044  005F7C  6EFF               	movwf	tosu,c
 15045  005F7E  50FA               	movf	pclath,w,c
 15046  005F80  0012               	return		;indir
 15047  005F82                     __end_of_INT1_CallBack:
 15048                           	opt callstack 0
 15049                           
 15050 ;; *************** function _INT1_DefaultInterruptHandler *****************
 15051 ;; Defined at:
 15052 ;;		line 86 in file "mcc_generated_files/ext_int.c"
 15053 ;; Parameters:    Size  Location     Type
 15054 ;;		None
 15055 ;; Auto vars:     Size  Location     Type
 15056 ;;		None
 15057 ;; Return value:  Size  Location     Type
 15058 ;;                  1  [STACK] void 
 15059 ;; Registers used:
 15060 ;;		None
 15061 ;; Tracked objects:
 15062 ;;		On entry : 0/39
 15063 ;;		On exit  : 0/0
 15064 ;;		Unchanged: 0/0
 15065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15070 ;;Total ram usage:        0 bytes
 15071 ;; Hardware stack levels used:    1
 15072 ;; This function calls:
 15073 ;;		Nothing
 15074 ;; This function is called by:
 15075 ;;		_EXT_INT_Initialize
 15076 ;;		_INT1_CallBack
 15077 ;; This function uses a reentrant model
 15078 ;;
 15079                           
 15080                           	psect	text85
 15081  006194                     __ptext85:
 15082                           	opt callstack 0
 15083  006194                     _INT1_DefaultInterruptHandler:
 15084                           	opt callstack 17
 15085                           
 15086                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15087                           
 15088                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15089                           ;incstack = 0
 15090  006194  0012               	return		;funcret
 15091  006196                     __end_of_INT1_DefaultInterruptHandler:
 15092                           	opt callstack 0
 15093                           
 15094 ;; *************** function _INT2_ISR *****************
 15095 ;; Defined at:
 15096 ;;		line 92 in file "mcc_generated_files/ext_int.c"
 15097 ;; Parameters:    Size  Location     Type
 15098 ;;		None
 15099 ;; Auto vars:     Size  Location     Type
 15100 ;;		None
 15101 ;; Return value:  Size  Location     Type
 15102 ;;                  1    wreg      void 
 15103 ;; Registers used:
 15104 ;;		wreg, status,2, status,0, pclath, tosl
 15105 ;; Tracked objects:
 15106 ;;		On entry : 0/0
 15107 ;;		On exit  : 0/0
 15108 ;;		Unchanged: 0/0
 15109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15114 ;;Total ram usage:        0 bytes
 15115 ;; Hardware stack levels used:    1
 15116 ;; Hardware stack levels required when called:    2
 15117 ;; This function calls:
 15118 ;;		_INT2_CallBack
 15119 ;; This function is called by:
 15120 ;;		Interrupt level 2
 15121 ;; This function uses a non-reentrant model
 15122 ;;
 15123                           
 15124                           	psect	text86
 15125  006114                     __ptext86:
 15126                           	opt callstack 0
 15127  006114                     _INT2_ISR:
 15128                           	opt callstack 17
 15129                           
 15130                           ;incstack = 0
 15131  006114  EE13  F12A         	lfsr	1,___inthi_sp
 15132                           
 15133                           ;mcc_generated_files/ext_int.c: 94:  (PIR7bits.INT2IF = 0);
 15134  006118  0139               	movlb	57	; () banked
 15135  00611A  9BA7               	bcf	167,5,b	;volatile
 15136                           
 15137                           ; BSR set to: 57
 15138                           ;mcc_generated_files/ext_int.c: 97:  INT2_CallBack();
 15139  00611C  ECC1  F02F         	call	_INT2_CallBack	;wreg free
 15140  006120  0011               	retfie		f
 15141  006122                     __end_of_INT2_ISR:
 15142                           	opt callstack 0
 15143                           
 15144 ;; *************** function _INT2_CallBack *****************
 15145 ;; Defined at:
 15146 ;;		line 100 in file "mcc_generated_files/ext_int.c"
 15147 ;; Parameters:    Size  Location     Type
 15148 ;;		None
 15149 ;; Auto vars:     Size  Location     Type
 15150 ;;		None
 15151 ;; Return value:  Size  Location     Type
 15152 ;;                  1  [STACK] void 
 15153 ;; Registers used:
 15154 ;;		wreg, status,2, status,0, pclath, tosl
 15155 ;; Tracked objects:
 15156 ;;		On entry : 3F/39
 15157 ;;		On exit  : 0/0
 15158 ;;		Unchanged: 0/0
 15159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15164 ;;Total ram usage:        0 bytes
 15165 ;; Hardware stack levels used:    1
 15166 ;; Hardware stack levels required when called:    1
 15167 ;; This function calls:
 15168 ;;		Absolute function
 15169 ;;		_INT2_DefaultInterruptHandler
 15170 ;; This function is called by:
 15171 ;;		_INT2_ISR
 15172 ;; This function uses a reentrant model
 15173 ;;
 15174                           
 15175                           	psect	text87
 15176  005F82                     __ptext87:
 15177                           	opt callstack 0
 15178  005F82                     _INT2_CallBack:
 15179                           	opt callstack 17
 15180                           
 15181                           ;mcc_generated_files/ext_int.c: 103:  if (INT2_InterruptHandler) {
 15182                           
 15183                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15184                           ;incstack = 0
 15185  005F82  5017               	movf	_INT2_InterruptHandler,w,c
 15186  005F84  1018               	iorwf	_INT2_InterruptHandler+1,w,c
 15187  005F86  1019               	iorwf	_INT2_InterruptHandler+2,w,c
 15188  005F88  B4D8               	btfsc	status,2,c
 15189  005F8A  0012               	return	
 15190                           
 15191                           ;mcc_generated_files/ext_int.c: 104:   INT2_InterruptHandler();
 15192  005F8C  D801               	call	u125_48
 15193  005F8E  0012               	return	
 15194  005F90                     u125_48:
 15195  005F90  0005               	push	
 15196  005F92  6EFA               	movwf	pclath,c
 15197  005F94  5017               	movf	_INT2_InterruptHandler,w,c
 15198  005F96  6EFD               	movwf	tosl,c
 15199  005F98  5018               	movf	_INT2_InterruptHandler+1,w,c
 15200  005F9A  6EFE               	movwf	tosh,c
 15201  005F9C  5019               	movf	_INT2_InterruptHandler+2,w,c
 15202  005F9E  6EFF               	movwf	tosu,c
 15203  005FA0  50FA               	movf	pclath,w,c
 15204  005FA2  0012               	return		;indir
 15205  005FA4                     __end_of_INT2_CallBack:
 15206                           	opt callstack 0
 15207                           
 15208 ;; *************** function _INT2_DefaultInterruptHandler *****************
 15209 ;; Defined at:
 15210 ;;		line 113 in file "mcc_generated_files/ext_int.c"
 15211 ;; Parameters:    Size  Location     Type
 15212 ;;		None
 15213 ;; Auto vars:     Size  Location     Type
 15214 ;;		None
 15215 ;; Return value:  Size  Location     Type
 15216 ;;                  1  [STACK] void 
 15217 ;; Registers used:
 15218 ;;		None
 15219 ;; Tracked objects:
 15220 ;;		On entry : 0/39
 15221 ;;		On exit  : 0/0
 15222 ;;		Unchanged: 0/0
 15223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15228 ;;Total ram usage:        0 bytes
 15229 ;; Hardware stack levels used:    1
 15230 ;; This function calls:
 15231 ;;		Nothing
 15232 ;; This function is called by:
 15233 ;;		_EXT_INT_Initialize
 15234 ;;		_INT2_CallBack
 15235 ;; This function uses a reentrant model
 15236 ;;
 15237                           
 15238                           	psect	text88
 15239  006196                     __ptext88:
 15240                           	opt callstack 0
 15241  006196                     _INT2_DefaultInterruptHandler:
 15242                           	opt callstack 17
 15243                           
 15244                           ; _INT2_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15245                           
 15246                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15247                           ;incstack = 0
 15248  006196  0012               	return		;funcret
 15249  006198                     __end_of_INT2_DefaultInterruptHandler:
 15250                           	opt callstack 0
 15251                           
 15252 ;; *************** function _Default_ISR *****************
 15253 ;; Defined at:
 15254 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 15255 ;; Parameters:    Size  Location     Type
 15256 ;;		None
 15257 ;; Auto vars:     Size  Location     Type
 15258 ;;		None
 15259 ;; Return value:  Size  Location     Type
 15260 ;;                  1    wreg      void 
 15261 ;; Registers used:
 15262 ;;		None
 15263 ;; Tracked objects:
 15264 ;;		On entry : 0/0
 15265 ;;		On exit  : 0/0
 15266 ;;		Unchanged: 0/0
 15267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15272 ;;Total ram usage:        0 bytes
 15273 ;; Hardware stack levels used:    1
 15274 ;; This function calls:
 15275 ;;		Nothing
 15276 ;; This function is called by:
 15277 ;;		Interrupt level 2
 15278 ;; This function uses a non-reentrant model
 15279 ;;
 15280                           
 15281                           	psect	text89
 15282  00618C                     __ptext89:
 15283                           	opt callstack 0
 15284  00618C                     _Default_ISR:
 15285                           	opt callstack 19
 15286                           
 15287                           ;incstack = 0
 15288  00618C  EE13  F12A         	lfsr	1,___inthi_sp
 15289  006190  0011               	retfie		f
 15290  006192                     __end_of_Default_ISR:
 15291                           	opt callstack 0
 15292                           
 15293 ;; *************** function _ADCC_ISR *****************
 15294 ;; Defined at:
 15295 ;;		line 307 in file "mcc_generated_files/adcc.c"
 15296 ;; Parameters:    Size  Location     Type
 15297 ;;		None
 15298 ;; Auto vars:     Size  Location     Type
 15299 ;;		None
 15300 ;; Return value:  Size  Location     Type
 15301 ;;                  1    wreg      void 
 15302 ;; Registers used:
 15303 ;;		wreg, status,2, status,0, pclath, tosl
 15304 ;; Tracked objects:
 15305 ;;		On entry : 0/0
 15306 ;;		On exit  : 0/0
 15307 ;;		Unchanged: 0/0
 15308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15313 ;;Total ram usage:        0 bytes
 15314 ;; Hardware stack levels used:    1
 15315 ;; Hardware stack levels required when called:    1
 15316 ;; This function calls:
 15317 ;;		Absolute function
 15318 ;;		_ADCC_DefaultInterruptHandler
 15319 ;; This function is called by:
 15320 ;;		Interrupt level 2
 15321 ;; This function uses a non-reentrant model
 15322 ;;
 15323                           
 15324                           	psect	text90
 15325  005BB8                     __ptext90:
 15326                           	opt callstack 0
 15327  005BB8                     _ADCC_ISR:
 15328                           	opt callstack 18
 15329                           
 15330                           ;incstack = 0
 15331  005BB8  EE13  F12A         	lfsr	1,___inthi_sp
 15332                           
 15333                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 15334  005BBC  0139               	movlb	57	; () banked
 15335  005BBE  95A1               	bcf	161,2,b	;volatile
 15336                           
 15337                           ; BSR set to: 57
 15338                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 15339  005BC0  5008               	movf	_ADCC_ADI_InterruptHandler,w,c
 15340  005BC2  1009               	iorwf	_ADCC_ADI_InterruptHandler+1,w,c
 15341  005BC4  100A               	iorwf	_ADCC_ADI_InterruptHandler+2,w,c
 15342  005BC6  B4D8               	btfsc	status,2,c
 15343  005BC8  0011               	retfie		f
 15344                           
 15345                           ; BSR set to: 57
 15346                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 15347  005BCA  D801               	call	i2u198_48
 15348  005BCC  0011               	retfie		f
 15349  005BCE                     i2u198_48:
 15350  005BCE  0005               	push	
 15351  005BD0  6EFA               	movwf	pclath,c
 15352  005BD2  5008               	movf	_ADCC_ADI_InterruptHandler,w,c
 15353  005BD4  6EFD               	movwf	tosl,c
 15354  005BD6  5009               	movf	_ADCC_ADI_InterruptHandler+1,w,c
 15355  005BD8  6EFE               	movwf	tosh,c
 15356  005BDA  500A               	movf	_ADCC_ADI_InterruptHandler+2,w,c
 15357  005BDC  6EFF               	movwf	tosu,c
 15358  005BDE  50FA               	movf	pclath,w,c
 15359  005BE0  0012               	return		;indir
 15360  005BE2                     __end_of_ADCC_ISR:
 15361                           	opt callstack 0
 15362                           
 15363 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 15364 ;; Defined at:
 15365 ;;		line 320 in file "mcc_generated_files/adcc.c"
 15366 ;; Parameters:    Size  Location     Type
 15367 ;;		None
 15368 ;; Auto vars:     Size  Location     Type
 15369 ;;		None
 15370 ;; Return value:  Size  Location     Type
 15371 ;;                  1  [STACK] void 
 15372 ;; Registers used:
 15373 ;;		None
 15374 ;; Tracked objects:
 15375 ;;		On entry : 3F/39
 15376 ;;		On exit  : 0/0
 15377 ;;		Unchanged: 0/0
 15378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15383 ;;Total ram usage:        0 bytes
 15384 ;; Hardware stack levels used:    1
 15385 ;; This function calls:
 15386 ;;		Nothing
 15387 ;; This function is called by:
 15388 ;;		_ADCC_Initialize
 15389 ;;		_ADCC_ISR
 15390 ;; This function uses a reentrant model
 15391 ;;
 15392                           
 15393                           	psect	text91
 15394  006198                     __ptext91:
 15395                           	opt callstack 0
 15396  006198                     _ADCC_DefaultInterruptHandler:
 15397                           	opt callstack 18
 15398                           
 15399                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15400                           
 15401                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15402                           ;incstack = 0
 15403  006198  0012               	return		;funcret
 15404  00619A                     __end_of_ADCC_DefaultInterruptHandler:
 15405                           	opt callstack 0
 15406                           
 15407 ;; *************** function _UART1_tx_vect_isr *****************
 15408 ;; Defined at:
 15409 ;;		line 197 in file "mcc_generated_files/uart1.c"
 15410 ;; Parameters:    Size  Location     Type
 15411 ;;		None
 15412 ;; Auto vars:     Size  Location     Type
 15413 ;;		None
 15414 ;; Return value:  Size  Location     Type
 15415 ;;                  1    wreg      void 
 15416 ;; Registers used:
 15417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 15418 ;; Tracked objects:
 15419 ;;		On entry : 0/0
 15420 ;;		On exit  : 0/0
 15421 ;;		Unchanged: 0/0
 15422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15427 ;;Total ram usage:        0 bytes
 15428 ;; Hardware stack levels used:    1
 15429 ;; Hardware stack levels required when called:    1
 15430 ;; This function calls:
 15431 ;;		Absolute function
 15432 ;;		_UART1_Transmit_ISR
 15433 ;; This function is called by:
 15434 ;;		Interrupt level 2
 15435 ;; This function uses a non-reentrant model
 15436 ;;
 15437                           
 15438                           	psect	text92
 15439  005E14                     __ptext92:
 15440                           	opt callstack 0
 15441  005E14                     _UART1_tx_vect_isr:
 15442                           	opt callstack 18
 15443                           
 15444                           ;incstack = 0
 15445  005E14  EE13  F12A         	lfsr	1,___inthi_sp
 15446                           
 15447                           ;mcc_generated_files/uart1.c: 199:  if (UART1_TxInterruptHandler) {
 15448  005E18  500B               	movf	_UART1_TxInterruptHandler,w,c
 15449  005E1A  100C               	iorwf	_UART1_TxInterruptHandler+1,w,c
 15450  005E1C  100D               	iorwf	_UART1_TxInterruptHandler+2,w,c
 15451  005E1E  B4D8               	btfsc	status,2,c
 15452  005E20  0011               	retfie		f
 15453                           
 15454                           ;mcc_generated_files/uart1.c: 200:   UART1_TxInterruptHandler();
 15455  005E22  D801               	call	i2u410_48
 15456  005E24  0011               	retfie		f
 15457  005E26                     i2u410_48:
 15458  005E26  0005               	push	
 15459  005E28  6EFA               	movwf	pclath,c
 15460  005E2A  500B               	movf	_UART1_TxInterruptHandler,w,c
 15461  005E2C  6EFD               	movwf	tosl,c
 15462  005E2E  500C               	movf	_UART1_TxInterruptHandler+1,w,c
 15463  005E30  6EFE               	movwf	tosh,c
 15464  005E32  500D               	movf	_UART1_TxInterruptHandler+2,w,c
 15465  005E34  6EFF               	movwf	tosu,c
 15466  005E36  50FA               	movf	pclath,w,c
 15467  005E38  0012               	return		;indir
 15468  005E3A                     __end_of_UART1_tx_vect_isr:
 15469                           	opt callstack 0
 15470                           
 15471 ;; *************** function _UART1_Transmit_ISR *****************
 15472 ;; Defined at:
 15473 ;;		line 211 in file "mcc_generated_files/uart1.c"
 15474 ;; Parameters:    Size  Location     Type
 15475 ;;		None
 15476 ;; Auto vars:     Size  Location     Type
 15477 ;;		None
 15478 ;; Return value:  Size  Location     Type
 15479 ;;                  1  [STACK] void 
 15480 ;; Registers used:
 15481 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15482 ;; Tracked objects:
 15483 ;;		On entry : 0/0
 15484 ;;		On exit  : 3B/39
 15485 ;;		Unchanged: 0/0
 15486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15491 ;;Total ram usage:        0 bytes
 15492 ;; Hardware stack levels used:    1
 15493 ;; This function calls:
 15494 ;;		Nothing
 15495 ;; This function is called by:
 15496 ;;		_UART1_Initialize
 15497 ;;		_UART1_tx_vect_isr
 15498 ;; This function uses a reentrant model
 15499 ;;
 15500                           
 15501                           	psect	text93
 15502  005AE2                     __ptext93:
 15503                           	opt callstack 0
 15504  005AE2                     _UART1_Transmit_ISR:
 15505                           	opt callstack 18
 15506                           
 15507                           ;mcc_generated_files/uart1.c: 214:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 15508                           
 15509                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15510                           ;incstack = 0
 15511  005AE2  0E40               	movlw	64
 15512  005AE4  6038               	cpfslt	_uart1TxBufferRemaining,c
 15513  005AE6  D010               	goto	l597
 15514                           
 15515                           ;mcc_generated_files/uart1.c: 215:   U1TXB = uart1TxBuffer[uart1TxTail++];
 15516  005AE8  0EC0               	movlw	low _uart1TxBuffer
 15517  005AEA  2439               	addwf	_uart1TxTail,w,c	;volatile
 15518  005AEC  6ED9               	movwf	fsr2l,c
 15519  005AEE  6ADA               	clrf	fsr2h,c
 15520  005AF0  0E02               	movlw	high _uart1TxBuffer
 15521  005AF2  22DA               	addwfc	fsr2h,f,c
 15522  005AF4  50DF               	movf	indf2,w,c
 15523  005AF6  013D               	movlb	61	; () banked
 15524  005AF8  6FEA               	movwf	234,b	;volatile
 15525                           
 15526                           ; BSR set to: 61
 15527  005AFA  2A39               	incf	_uart1TxTail,f,c	;volatile
 15528                           
 15529                           ; BSR set to: 61
 15530                           ;mcc_generated_files/uart1.c: 216:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 15531  005AFC  0E3F               	movlw	63
 15532  005AFE  6439               	cpfsgt	_uart1TxTail,c
 15533  005B00  D001               	goto	l6369
 15534                           
 15535                           ; BSR set to: 61
 15536                           ;mcc_generated_files/uart1.c: 217:    uart1TxTail = 0;
 15537  005B02  6A39               	clrf	_uart1TxTail,c	;volatile
 15538  005B04                     l6369:
 15539                           
 15540                           ; BSR set to: 61
 15541                           ;mcc_generated_files/uart1.c: 219:   uart1TxBufferRemaining++;
 15542  005B04  2A38               	incf	_uart1TxBufferRemaining,f,c	;volatile
 15543                           
 15544                           ;mcc_generated_files/uart1.c: 220:  } else {
 15545  005B06  0012               	return	
 15546  005B08                     l597:
 15547                           
 15548                           ;mcc_generated_files/uart1.c: 221:   PIE3bits.U1TXIE = 0;
 15549  005B08  0139               	movlb	57	; () banked
 15550  005B0A  9993               	bcf	147,4,b	;volatile
 15551                           
 15552                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 15553  005B0C  0012               	return		;funcret
 15554  005B0E                     __end_of_UART1_Transmit_ISR:
 15555                           	opt callstack 0
 15556                           
 15557 ;; *************** function _UART1_rx_vect_isr *****************
 15558 ;; Defined at:
 15559 ;;		line 204 in file "mcc_generated_files/uart1.c"
 15560 ;; Parameters:    Size  Location     Type
 15561 ;;		None
 15562 ;; Auto vars:     Size  Location     Type
 15563 ;;		None
 15564 ;; Return value:  Size  Location     Type
 15565 ;;                  1    wreg      void 
 15566 ;; Registers used:
 15567 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 15568 ;; Tracked objects:
 15569 ;;		On entry : 0/0
 15570 ;;		On exit  : 0/0
 15571 ;;		Unchanged: 0/0
 15572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15577 ;;Total ram usage:        0 bytes
 15578 ;; Hardware stack levels used:    1
 15579 ;; Hardware stack levels required when called:    1
 15580 ;; This function calls:
 15581 ;;		Absolute function
 15582 ;;		_UART1_Receive_ISR
 15583 ;; This function is called by:
 15584 ;;		Interrupt level 2
 15585 ;; This function uses a non-reentrant model
 15586 ;;
 15587                           
 15588                           	psect	text94
 15589  005E3C                     __ptext94:
 15590                           	opt callstack 0
 15591  005E3C                     _UART1_rx_vect_isr:
 15592                           	opt callstack 18
 15593                           
 15594                           ;incstack = 0
 15595  005E3C  EE13  F12A         	lfsr	1,___inthi_sp
 15596                           
 15597                           ;mcc_generated_files/uart1.c: 206:  if (UART1_RxInterruptHandler) {
 15598  005E40  500E               	movf	_UART1_RxInterruptHandler,w,c
 15599  005E42  100F               	iorwf	_UART1_RxInterruptHandler+1,w,c
 15600  005E44  1010               	iorwf	_UART1_RxInterruptHandler+2,w,c
 15601  005E46  B4D8               	btfsc	status,2,c
 15602  005E48  0011               	retfie		f
 15603                           
 15604                           ;mcc_generated_files/uart1.c: 207:   UART1_RxInterruptHandler();
 15605  005E4A  D801               	call	i2u412_48
 15606  005E4C  0011               	retfie		f
 15607  005E4E                     i2u412_48:
 15608  005E4E  0005               	push	
 15609  005E50  6EFA               	movwf	pclath,c
 15610  005E52  500E               	movf	_UART1_RxInterruptHandler,w,c
 15611  005E54  6EFD               	movwf	tosl,c
 15612  005E56  500F               	movf	_UART1_RxInterruptHandler+1,w,c
 15613  005E58  6EFE               	movwf	tosh,c
 15614  005E5A  5010               	movf	_UART1_RxInterruptHandler+2,w,c
 15615  005E5C  6EFF               	movwf	tosu,c
 15616  005E5E  50FA               	movf	pclath,w,c
 15617  005E60  0012               	return		;indir
 15618  005E62                     __end_of_UART1_rx_vect_isr:
 15619                           	opt callstack 0
 15620                           
 15621 ;; *************** function _UART1_Receive_ISR *****************
 15622 ;; Defined at:
 15623 ;;		line 227 in file "mcc_generated_files/uart1.c"
 15624 ;; Parameters:    Size  Location     Type
 15625 ;;		None
 15626 ;; Auto vars:     Size  Location     Type
 15627 ;;		None
 15628 ;; Return value:  Size  Location     Type
 15629 ;;                  1  [STACK] void 
 15630 ;; Registers used:
 15631 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15632 ;; Tracked objects:
 15633 ;;		On entry : 0/0
 15634 ;;		On exit  : 0/0
 15635 ;;		Unchanged: 0/0
 15636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15641 ;;Total ram usage:        0 bytes
 15642 ;; Hardware stack levels used:    1
 15643 ;; This function calls:
 15644 ;;		Nothing
 15645 ;; This function is called by:
 15646 ;;		_UART1_Initialize
 15647 ;;		_UART1_rx_vect_isr
 15648 ;; This function uses a reentrant model
 15649 ;;
 15650                           
 15651                           	psect	text95
 15652  005FA4                     __ptext95:
 15653                           	opt callstack 0
 15654  005FA4                     _UART1_Receive_ISR:
 15655                           	opt callstack 18
 15656                           
 15657                           ;mcc_generated_files/uart1.c: 230:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 15658                           
 15659                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15660                           ;incstack = 0
 15661  005FA4  0E80               	movlw	low _uart1RxBuffer
 15662  005FA6  2437               	addwf	_uart1RxHead,w,c	;volatile
 15663  005FA8  6ED9               	movwf	fsr2l,c
 15664  005FAA  6ADA               	clrf	fsr2h,c
 15665  005FAC  0E02               	movlw	high _uart1RxBuffer
 15666  005FAE  22DA               	addwfc	fsr2h,f,c
 15667  005FB0  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 15668  005FB6  2A37               	incf	_uart1RxHead,f,c	;volatile
 15669                           
 15670                           ;mcc_generated_files/uart1.c: 231:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 15671  005FB8  0E3F               	movlw	63
 15672  005FBA  6437               	cpfsgt	_uart1RxHead,c
 15673  005FBC  D001               	goto	l6379
 15674                           
 15675                           ;mcc_generated_files/uart1.c: 232:   uart1RxHead = 0;
 15676  005FBE  6A37               	clrf	_uart1RxHead,c	;volatile
 15677  005FC0                     l6379:
 15678                           
 15679                           ;mcc_generated_files/uart1.c: 234:  uart1RxCount++;
 15680  005FC0  2A35               	incf	_uart1RxCount,f,c	;volatile
 15681                           
 15682                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 15683  005FC2  0012               	return		;funcret
 15684  005FC4                     __end_of_UART1_Receive_ISR:
 15685                           	opt callstack 0
 15686                           
 15687 ;; *************** function _UART2_tx_vect_isr *****************
 15688 ;; Defined at:
 15689 ;;		line 195 in file "mcc_generated_files/uart2.c"
 15690 ;; Parameters:    Size  Location     Type
 15691 ;;		None
 15692 ;; Auto vars:     Size  Location     Type
 15693 ;;		None
 15694 ;; Return value:  Size  Location     Type
 15695 ;;                  1    wreg      void 
 15696 ;; Registers used:
 15697 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 15698 ;; Tracked objects:
 15699 ;;		On entry : 0/0
 15700 ;;		On exit  : 0/0
 15701 ;;		Unchanged: 0/0
 15702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15707 ;;Total ram usage:        0 bytes
 15708 ;; Hardware stack levels used:    1
 15709 ;; Hardware stack levels required when called:    1
 15710 ;; This function calls:
 15711 ;;		Absolute function
 15712 ;;		_UART2_Transmit_ISR
 15713 ;; This function is called by:
 15714 ;;		Interrupt level 2
 15715 ;; This function uses a non-reentrant model
 15716 ;;
 15717                           
 15718                           	psect	text96
 15719  005E64                     __ptext96:
 15720                           	opt callstack 0
 15721  005E64                     _UART2_tx_vect_isr:
 15722                           	opt callstack 18
 15723                           
 15724                           ;incstack = 0
 15725  005E64  EE13  F12A         	lfsr	1,___inthi_sp
 15726                           
 15727                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 15728  005E68  5011               	movf	_UART2_TxInterruptHandler,w,c
 15729  005E6A  1012               	iorwf	_UART2_TxInterruptHandler+1,w,c
 15730  005E6C  1013               	iorwf	_UART2_TxInterruptHandler+2,w,c
 15731  005E6E  B4D8               	btfsc	status,2,c
 15732  005E70  0011               	retfie		f
 15733                           
 15734                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 15735  005E72  D801               	call	i2u414_48
 15736  005E74  0011               	retfie		f
 15737  005E76                     i2u414_48:
 15738  005E76  0005               	push	
 15739  005E78  6EFA               	movwf	pclath,c
 15740  005E7A  5011               	movf	_UART2_TxInterruptHandler,w,c
 15741  005E7C  6EFD               	movwf	tosl,c
 15742  005E7E  5012               	movf	_UART2_TxInterruptHandler+1,w,c
 15743  005E80  6EFE               	movwf	tosh,c
 15744  005E82  5013               	movf	_UART2_TxInterruptHandler+2,w,c
 15745  005E84  6EFF               	movwf	tosu,c
 15746  005E86  50FA               	movf	pclath,w,c
 15747  005E88  0012               	return		;indir
 15748  005E8A                     __end_of_UART2_tx_vect_isr:
 15749                           	opt callstack 0
 15750                           
 15751 ;; *************** function _UART2_Transmit_ISR *****************
 15752 ;; Defined at:
 15753 ;;		line 213 in file "mcc_generated_files/uart2.c"
 15754 ;; Parameters:    Size  Location     Type
 15755 ;;		None
 15756 ;; Auto vars:     Size  Location     Type
 15757 ;;		None
 15758 ;; Return value:  Size  Location     Type
 15759 ;;                  1  [STACK] void 
 15760 ;; Registers used:
 15761 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15762 ;; Tracked objects:
 15763 ;;		On entry : 0/0
 15764 ;;		On exit  : 3B/39
 15765 ;;		Unchanged: 0/0
 15766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15771 ;;Total ram usage:        0 bytes
 15772 ;; Hardware stack levels used:    1
 15773 ;; This function calls:
 15774 ;;		Nothing
 15775 ;; This function is called by:
 15776 ;;		_UART2_Initialize
 15777 ;;		_UART2_tx_vect_isr
 15778 ;; This function uses a reentrant model
 15779 ;;
 15780                           
 15781                           	psect	text97
 15782  005B0E                     __ptext97:
 15783                           	opt callstack 0
 15784  005B0E                     _UART2_Transmit_ISR:
 15785                           	opt callstack 18
 15786                           
 15787                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 15788                           
 15789                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15790                           ;incstack = 0
 15791  005B0E  0E40               	movlw	64
 15792  005B10  6032               	cpfslt	_uart2TxBufferRemaining,c
 15793  005B12  D010               	goto	l717
 15794                           
 15795                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 15796  005B14  0E40               	movlw	low _uart2TxBuffer
 15797  005B16  2433               	addwf	_uart2TxTail,w,c	;volatile
 15798  005B18  6ED9               	movwf	fsr2l,c
 15799  005B1A  6ADA               	clrf	fsr2h,c
 15800  005B1C  0E02               	movlw	high _uart2TxBuffer
 15801  005B1E  22DA               	addwfc	fsr2h,f,c
 15802  005B20  50DF               	movf	indf2,w,c
 15803  005B22  013D               	movlb	61	; () banked
 15804  005B24  6FD2               	movwf	210,b	;volatile
 15805                           
 15806                           ; BSR set to: 61
 15807  005B26  2A33               	incf	_uart2TxTail,f,c	;volatile
 15808                           
 15809                           ; BSR set to: 61
 15810                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 15811  005B28  0E3F               	movlw	63
 15812  005B2A  6433               	cpfsgt	_uart2TxTail,c
 15813  005B2C  D001               	goto	l6391
 15814                           
 15815                           ; BSR set to: 61
 15816                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 15817  005B2E  6A33               	clrf	_uart2TxTail,c	;volatile
 15818  005B30                     l6391:
 15819                           
 15820                           ; BSR set to: 61
 15821                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 15822  005B30  2A32               	incf	_uart2TxBufferRemaining,f,c	;volatile
 15823                           
 15824                           ;mcc_generated_files/uart2.c: 224:     }
 15825  005B32  0012               	return	
 15826  005B34                     l717:
 15827                           
 15828                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 15829  005B34  0139               	movlb	57	; () banked
 15830  005B36  9796               	bcf	150,3,b	;volatile
 15831                           
 15832                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 15833  005B38  0012               	return		;funcret
 15834  005B3A                     __end_of_UART2_Transmit_ISR:
 15835                           	opt callstack 0
 15836                           
 15837 ;; *************** function _UART2_rx_vect_isr *****************
 15838 ;; Defined at:
 15839 ;;		line 203 in file "mcc_generated_files/uart2.c"
 15840 ;; Parameters:    Size  Location     Type
 15841 ;;		None
 15842 ;; Auto vars:     Size  Location     Type
 15843 ;;		None
 15844 ;; Return value:  Size  Location     Type
 15845 ;;                  1    wreg      void 
 15846 ;; Registers used:
 15847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 15848 ;; Tracked objects:
 15849 ;;		On entry : 0/0
 15850 ;;		On exit  : 0/0
 15851 ;;		Unchanged: 0/0
 15852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15857 ;;Total ram usage:        0 bytes
 15858 ;; Hardware stack levels used:    1
 15859 ;; Hardware stack levels required when called:    1
 15860 ;; This function calls:
 15861 ;;		Absolute function
 15862 ;;		_UART2_Receive_ISR
 15863 ;; This function is called by:
 15864 ;;		Interrupt level 2
 15865 ;; This function uses a non-reentrant model
 15866 ;;
 15867                           
 15868                           	psect	text98
 15869  005E8C                     __ptext98:
 15870                           	opt callstack 0
 15871  005E8C                     _UART2_rx_vect_isr:
 15872                           	opt callstack 18
 15873                           
 15874                           ;incstack = 0
 15875  005E8C  EE13  F12A         	lfsr	1,___inthi_sp
 15876                           
 15877                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 15878  005E90  5014               	movf	_UART2_RxInterruptHandler,w,c
 15879  005E92  1015               	iorwf	_UART2_RxInterruptHandler+1,w,c
 15880  005E94  1016               	iorwf	_UART2_RxInterruptHandler+2,w,c
 15881  005E96  B4D8               	btfsc	status,2,c
 15882  005E98  0011               	retfie		f
 15883                           
 15884                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 15885  005E9A  D801               	call	i2u416_48
 15886  005E9C  0011               	retfie		f
 15887  005E9E                     i2u416_48:
 15888  005E9E  0005               	push	
 15889  005EA0  6EFA               	movwf	pclath,c
 15890  005EA2  5014               	movf	_UART2_RxInterruptHandler,w,c
 15891  005EA4  6EFD               	movwf	tosl,c
 15892  005EA6  5015               	movf	_UART2_RxInterruptHandler+1,w,c
 15893  005EA8  6EFE               	movwf	tosh,c
 15894  005EAA  5016               	movf	_UART2_RxInterruptHandler+2,w,c
 15895  005EAC  6EFF               	movwf	tosu,c
 15896  005EAE  50FA               	movf	pclath,w,c
 15897  005EB0  0012               	return		;indir
 15898  005EB2                     __end_of_UART2_rx_vect_isr:
 15899                           	opt callstack 0
 15900                           
 15901 ;; *************** function _UART2_Receive_ISR *****************
 15902 ;; Defined at:
 15903 ;;		line 233 in file "mcc_generated_files/uart2.c"
 15904 ;; Parameters:    Size  Location     Type
 15905 ;;		None
 15906 ;; Auto vars:     Size  Location     Type
 15907 ;;		None
 15908 ;; Return value:  Size  Location     Type
 15909 ;;                  1  [STACK] void 
 15910 ;; Registers used:
 15911 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15912 ;; Tracked objects:
 15913 ;;		On entry : 0/0
 15914 ;;		On exit  : 0/0
 15915 ;;		Unchanged: 0/0
 15916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15921 ;;Total ram usage:        0 bytes
 15922 ;; Hardware stack levels used:    1
 15923 ;; This function calls:
 15924 ;;		Nothing
 15925 ;; This function is called by:
 15926 ;;		_UART2_Initialize
 15927 ;;		_UART2_rx_vect_isr
 15928 ;; This function uses a reentrant model
 15929 ;;
 15930                           
 15931                           	psect	text99
 15932  005FC4                     __ptext99:
 15933                           	opt callstack 0
 15934  005FC4                     _UART2_Receive_ISR:
 15935                           	opt callstack 18
 15936                           
 15937                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 15938                           
 15939                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15940                           ;incstack = 0
 15941  005FC4  0E00               	movlw	low _uart2RxBuffer
 15942  005FC6  2431               	addwf	_uart2RxHead,w,c	;volatile
 15943  005FC8  6ED9               	movwf	fsr2l,c
 15944  005FCA  6ADA               	clrf	fsr2h,c
 15945  005FCC  0E02               	movlw	high _uart2RxBuffer
 15946  005FCE  22DA               	addwfc	fsr2h,f,c
 15947  005FD0  006F F743 FFDF     	movff	15824,indf2	;volatile
 15948  005FD6  2A31               	incf	_uart2RxHead,f,c	;volatile
 15949                           
 15950                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 15951  005FD8  0E3F               	movlw	63
 15952  005FDA  6431               	cpfsgt	_uart2RxHead,c
 15953  005FDC  D001               	goto	l6401
 15954                           
 15955                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 15956  005FDE  6A31               	clrf	_uart2RxHead,c	;volatile
 15957  005FE0                     l6401:
 15958                           
 15959                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 15960  005FE0  2A2F               	incf	_uart2RxCount,f,c	;volatile
 15961                           
 15962                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 15963  005FE2  0012               	return		;funcret
 15964  005FE4                     __end_of_UART2_Receive_ISR:
 15965                           	opt callstack 0
 15966                           
 15967 ;; *************** function _TMR6_ISR *****************
 15968 ;; Defined at:
 15969 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 15970 ;; Parameters:    Size  Location     Type
 15971 ;;		None
 15972 ;; Auto vars:     Size  Location     Type
 15973 ;;		None
 15974 ;; Return value:  Size  Location     Type
 15975 ;;                  1    wreg      void 
 15976 ;; Registers used:
 15977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 15978 ;; Tracked objects:
 15979 ;;		On entry : 0/0
 15980 ;;		On exit  : 0/0
 15981 ;;		Unchanged: 0/0
 15982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15985 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15986 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15987 ;;Total ram usage:        1 bytes
 15988 ;; Hardware stack levels used:    1
 15989 ;; Hardware stack levels required when called:    2
 15990 ;; This function calls:
 15991 ;;		_TMR6_CallBack
 15992 ;; This function is called by:
 15993 ;;		Interrupt level 2
 15994 ;; This function uses a non-reentrant model
 15995 ;;
 15996                           
 15997                           	psect	text100
 15998  006070                     __ptext100:
 15999                           	opt callstack 0
 16000  006070                     _TMR6_ISR:
 16001                           	opt callstack 17
 16002                           
 16003                           ;incstack = 0
 16004  006070  0060  F0EC  F05B   	movff	btemp,??_TMR6_ISR
 16005  006076  EE13  F12A         	lfsr	1,___inthi_sp
 16006                           
 16007                           ;mcc_generated_files/tmr6.c: 175:  PIR9bits.TMR6IF = 0;
 16008  00607A  0139               	movlb	57	; () banked
 16009  00607C  91A9               	bcf	169,0,b	;volatile
 16010                           
 16011                           ; BSR set to: 57
 16012                           ;mcc_generated_files/tmr6.c: 179:  TMR6_CallBack();
 16013  00607E  EC59  F02F         	call	_TMR6_CallBack	;wreg free
 16014  006082  0060  F16C  F03B   	movff	??_TMR6_ISR,btemp
 16015  006088  0011               	retfie		f
 16016  00608A                     __end_of_TMR6_ISR:
 16017                           	opt callstack 0
 16018                           
 16019 ;; *************** function _TMR6_CallBack *****************
 16020 ;; Defined at:
 16021 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 16022 ;; Parameters:    Size  Location     Type
 16023 ;;		None
 16024 ;; Auto vars:     Size  Location     Type
 16025 ;;		None
 16026 ;; Return value:  Size  Location     Type
 16027 ;;                  1  [STACK] void 
 16028 ;; Registers used:
 16029 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 16030 ;; Tracked objects:
 16031 ;;		On entry : 3F/39
 16032 ;;		On exit  : 0/0
 16033 ;;		Unchanged: 0/0
 16034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16039 ;;Total ram usage:        0 bytes
 16040 ;; Hardware stack levels used:    1
 16041 ;; Hardware stack levels required when called:    1
 16042 ;; This function calls:
 16043 ;;		Absolute function
 16044 ;;		_TMR6_DefaultInterruptHandler
 16045 ;; This function is called by:
 16046 ;;		_TMR6_ISR
 16047 ;; This function uses a reentrant model
 16048 ;;
 16049                           
 16050                           	psect	text101
 16051  005EB2                     __ptext101:
 16052                           	opt callstack 0
 16053  005EB2                     _TMR6_CallBack:
 16054                           	opt callstack 17
 16055                           
 16056                           ;mcc_generated_files/tmr6.c: 186:  if (TMR6_InterruptHandler) {
 16057                           
 16058                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16059                           ;incstack = 0
 16060  005EB2  0100               	movlb	0	; () banked
 16061  005EB4  51F3               	movf	_TMR6_InterruptHandler& (0+255),w,b
 16062  005EB6  11F4               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 16063  005EB8  11F5               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 16064  005EBA  B4D8               	btfsc	status,2,c
 16065  005EBC  0012               	return	
 16066                           
 16067                           ; BSR set to: 0
 16068                           ;mcc_generated_files/tmr6.c: 187:   TMR6_InterruptHandler();
 16069  005EBE  D801               	call	u499_48
 16070  005EC0  0012               	return	
 16071  005EC2                     u499_48:
 16072  005EC2  0005               	push	
 16073  005EC4  6EFA               	movwf	pclath,c
 16074  005EC6  51F3               	movf	_TMR6_InterruptHandler& (0+255),w,b
 16075  005EC8  6EFD               	movwf	tosl,c
 16076  005ECA  51F4               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 16077  005ECC  6EFE               	movwf	tosh,c
 16078  005ECE  51F5               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 16079  005ED0  6EFF               	movwf	tosu,c
 16080  005ED2  50FA               	movf	pclath,w,c
 16081  005ED4  0012               	return		;indir
 16082  005ED6                     __end_of_TMR6_CallBack:
 16083                           	opt callstack 0
 16084                           
 16085 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 16086 ;; Defined at:
 16087 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 16088 ;; Parameters:    Size  Location     Type
 16089 ;;		None
 16090 ;; Auto vars:     Size  Location     Type
 16091 ;;  i               1  [STACK] unsigned char 
 16092 ;; Return value:  Size  Location     Type
 16093 ;;                  1  [STACK] void 
 16094 ;; Registers used:
 16095 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 16096 ;; Tracked objects:
 16097 ;;		On entry : 3F/0
 16098 ;;		On exit  : 0/0
 16099 ;;		Unchanged: 0/0
 16100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16105 ;;Total ram usage:        0 bytes
 16106 ;; Hardware stack levels used:    1
 16107 ;; This function calls:
 16108 ;;		Nothing
 16109 ;; This function is called by:
 16110 ;;		_TMR6_Initialize
 16111 ;;		_TMR6_CallBack
 16112 ;; This function uses a reentrant model
 16113 ;;
 16114                           
 16115                           	psect	text102
 16116  005818                     __ptext102:
 16117                           	opt callstack 0
 16118  005818                     _TMR6_DefaultInterruptHandler:
 16119                           	opt callstack 0
 16120                           
 16121                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16122  005818  52E6               	movf	postinc1,f,c
 16123                           
 16124                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 16125                           ;stkvar	_i @ sp[(-1)+0]
 16126                           
 16127                           ;incstack = 0
 16128  00581A  0EFF               	movlw	-1
 16129  00581C  6AE3               	clrf	plusw1,c
 16130  00581E                     l7915:
 16131                           
 16132                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 16133                           ;stkvar	_i @ sp[(-1)+0]
 16134  00581E  0EFF               	movlw	-1
 16135  005820  50E3               	movf	plusw1,w,c
 16136  005822  0D02               	mullw	2
 16137  005824  50F3               	movf	prodl,w,c
 16138  005826  0FD9               	addlw	low _tickCount
 16139  005828  6ED9               	movwf	fsr2l,c
 16140  00582A  6ADA               	clrf	fsr2h,c
 16141  00582C  50DE               	movf	postinc2,w,c
 16142  00582E  10DE               	iorwf	postinc2,w,c
 16143  005830  B4D8               	btfsc	status,2,c
 16144  005832  D00A               	goto	l7919
 16145                           
 16146                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 16147                           ;stkvar	_i @ sp[(-1)+0]
 16148  005834  0EFF               	movlw	-1
 16149  005836  50E3               	movf	plusw1,w,c
 16150  005838  0D02               	mullw	2
 16151  00583A  50F3               	movf	prodl,w,c
 16152  00583C  0FD9               	addlw	low _tickCount
 16153  00583E  6ED9               	movwf	fsr2l,c
 16154  005840  6ADA               	clrf	fsr2h,c
 16155  005842  06DE               	decf	postinc2,f,c
 16156  005844  0E00               	movlw	0
 16157  005846  5ADD               	subwfb	postdec2,f,c
 16158  005848                     l7919:
 16159                           
 16160                           ;mcc_generated_files/tmr6.c: 207:  }
 16161                           ;stkvar	_i @ sp[(-1)+0]
 16162  005848  0EFF               	movlw	-1
 16163  00584A  2AE3               	incf	plusw1,f,c
 16164                           
 16165                           ;stkvar	_i @ sp[(-1)+0]
 16166  00584C  0EFF               	movlw	-1
 16167  00584E  006F FF8C  F03B    	movff	plusw1,btemp
 16168  005854  0E05               	movlw	5
 16169  005856  643B               	cpfsgt	btemp,c
 16170  005858  D7E2               	goto	l7915
 16171                           
 16172                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 16173  00585A  52E5               	movf	postdec1,f,c
 16174  00585C  0012               	return		;funcret
 16175  00585E                     __end_of_TMR6_DefaultInterruptHandler:
 16176                           	opt callstack 0
 16177                           
 16178 ;; *************** function _DMA1_DMASCNT_ISR *****************
 16179 ;; Defined at:
 16180 ;;		line 126 in file "mcc_generated_files/dma1.c"
 16181 ;; Parameters:    Size  Location     Type
 16182 ;;		None
 16183 ;; Auto vars:     Size  Location     Type
 16184 ;;		None
 16185 ;; Return value:  Size  Location     Type
 16186 ;;                  1    wreg      void 
 16187 ;; Registers used:
 16188 ;;		None
 16189 ;; Tracked objects:
 16190 ;;		On entry : 0/0
 16191 ;;		On exit  : 3F/0
 16192 ;;		Unchanged: 0/0
 16193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16198 ;;Total ram usage:        0 bytes
 16199 ;; Hardware stack levels used:    1
 16200 ;; This function calls:
 16201 ;;		Nothing
 16202 ;; This function is called by:
 16203 ;;		Interrupt level 2
 16204 ;; This function uses a non-reentrant model
 16205 ;;
 16206                           
 16207                           	psect	text103
 16208  006124                     __ptext103:
 16209                           	opt callstack 0
 16210  006124                     _DMA1_DMASCNT_ISR:
 16211                           	opt callstack 19
 16212                           
 16213                           ;incstack = 0
 16214  006124  EE13  F12A         	lfsr	1,___inthi_sp
 16215                           
 16216                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 16217  006128  0139               	movlb	57	; () banked
 16218  00612A  91A2               	bcf	162,0,b	;volatile
 16219                           
 16220                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 16221  00612C  0100               	movlb	0	; () banked
 16222  00612E  97CD               	bcf	_spi_link& (0+255),3,b	;volatile
 16223                           
 16224                           ; BSR set to: 0
 16225  006130  0011               	retfie		f
 16226  006132                     __end_of_DMA1_DMASCNT_ISR:
 16227                           	opt callstack 0
 16228                           
 16229 ;; *************** function _DMA1_DMADCNT_ISR *****************
 16230 ;; Defined at:
 16231 ;;		line 133 in file "mcc_generated_files/dma1.c"
 16232 ;; Parameters:    Size  Location     Type
 16233 ;;		None
 16234 ;; Auto vars:     Size  Location     Type
 16235 ;;		None
 16236 ;; Return value:  Size  Location     Type
 16237 ;;                  1    wreg      void 
 16238 ;; Registers used:
 16239 ;;		None
 16240 ;; Tracked objects:
 16241 ;;		On entry : 0/0
 16242 ;;		On exit  : 3F/39
 16243 ;;		Unchanged: 0/0
 16244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16249 ;;Total ram usage:        0 bytes
 16250 ;; Hardware stack levels used:    1
 16251 ;; This function calls:
 16252 ;;		Nothing
 16253 ;; This function is called by:
 16254 ;;		Interrupt level 2
 16255 ;; This function uses a non-reentrant model
 16256 ;;
 16257                           
 16258                           	psect	text104
 16259  00613C                     __ptext104:
 16260                           	opt callstack 0
 16261  00613C                     _DMA1_DMADCNT_ISR:
 16262                           	opt callstack 19
 16263                           
 16264                           ; BSR set to: 0
 16265                           ;incstack = 0
 16266  00613C  EE13  F12A         	lfsr	1,___inthi_sp
 16267                           
 16268                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 16269  006140  0139               	movlb	57	; () banked
 16270  006142  93A2               	bcf	162,1,b	;volatile
 16271                           
 16272                           ; BSR set to: 57
 16273  006144  0011               	retfie		f
 16274  006146                     __end_of_DMA1_DMADCNT_ISR:
 16275                           	opt callstack 0
 16276                           
 16277 ;; *************** function _DMA1_DMAA_ISR *****************
 16278 ;; Defined at:
 16279 ;;		line 143 in file "mcc_generated_files/dma1.c"
 16280 ;; Parameters:    Size  Location     Type
 16281 ;;		None
 16282 ;; Auto vars:     Size  Location     Type
 16283 ;;		None
 16284 ;; Return value:  Size  Location     Type
 16285 ;;                  1    wreg      void 
 16286 ;; Registers used:
 16287 ;;		None
 16288 ;; Tracked objects:
 16289 ;;		On entry : 0/0
 16290 ;;		On exit  : 3F/39
 16291 ;;		Unchanged: 0/0
 16292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16297 ;;Total ram usage:        0 bytes
 16298 ;; Hardware stack levels used:    1
 16299 ;; This function calls:
 16300 ;;		Nothing
 16301 ;; This function is called by:
 16302 ;;		Interrupt level 2
 16303 ;; This function uses a non-reentrant model
 16304 ;;
 16305                           
 16306                           	psect	text105
 16307  006148                     __ptext105:
 16308                           	opt callstack 0
 16309  006148                     _DMA1_DMAA_ISR:
 16310                           	opt callstack 19
 16311                           
 16312                           ; BSR set to: 57
 16313                           ;incstack = 0
 16314  006148  EE13  F12A         	lfsr	1,___inthi_sp
 16315                           
 16316                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 16317  00614C  0139               	movlb	57	; () banked
 16318  00614E  97A2               	bcf	162,3,b	;volatile
 16319                           
 16320                           ; BSR set to: 57
 16321  006150  0011               	retfie		f
 16322  006152                     __end_of_DMA1_DMAA_ISR:
 16323                           	opt callstack 0
 16324                           
 16325 ;; *************** function _DMA1_DMAOR_ISR *****************
 16326 ;; Defined at:
 16327 ;;		line 154 in file "mcc_generated_files/dma1.c"
 16328 ;; Parameters:    Size  Location     Type
 16329 ;;		None
 16330 ;; Auto vars:     Size  Location     Type
 16331 ;;		None
 16332 ;; Return value:  Size  Location     Type
 16333 ;;                  1    wreg      void 
 16334 ;; Registers used:
 16335 ;;		None
 16336 ;; Tracked objects:
 16337 ;;		On entry : 0/0
 16338 ;;		On exit  : 3F/39
 16339 ;;		Unchanged: 0/0
 16340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16345 ;;Total ram usage:        0 bytes
 16346 ;; Hardware stack levels used:    1
 16347 ;; This function calls:
 16348 ;;		Nothing
 16349 ;; This function is called by:
 16350 ;;		Interrupt level 2
 16351 ;; This function uses a non-reentrant model
 16352 ;;
 16353                           
 16354                           	psect	text106
 16355  006154                     __ptext106:
 16356                           	opt callstack 0
 16357  006154                     _DMA1_DMAOR_ISR:
 16358                           	opt callstack 19
 16359                           
 16360                           ; BSR set to: 57
 16361                           ;incstack = 0
 16362  006154  EE13  F12A         	lfsr	1,___inthi_sp
 16363                           
 16364                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 16365  006158  0139               	movlb	57	; () banked
 16366  00615A  95A2               	bcf	162,2,b	;volatile
 16367                           
 16368                           ; BSR set to: 57
 16369  00615C  0011               	retfie		f
 16370  00615E                     __end_of_DMA1_DMAOR_ISR:
 16371                           	opt callstack 0
 16372                           
 16373 ;; *************** function _TMR5_ISR *****************
 16374 ;; Defined at:
 16375 ;;		line 163 in file "mcc_generated_files/tmr5.c"
 16376 ;; Parameters:    Size  Location     Type
 16377 ;;		None
 16378 ;; Auto vars:     Size  Location     Type
 16379 ;;		None
 16380 ;; Return value:  Size  Location     Type
 16381 ;;                  1    wreg      void 
 16382 ;; Registers used:
 16383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 16384 ;; Tracked objects:
 16385 ;;		On entry : 0/0
 16386 ;;		On exit  : 0/0
 16387 ;;		Unchanged: 0/0
 16388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16391 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16392 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16393 ;;Total ram usage:        1 bytes
 16394 ;; Hardware stack levels used:    1
 16395 ;; Hardware stack levels required when called:    2
 16396 ;; This function calls:
 16397 ;;		_TMR5_CallBack
 16398 ;;		_TMR5_WriteTimer
 16399 ;; This function is called by:
 16400 ;;		Interrupt level 2
 16401 ;; This function uses a non-reentrant model
 16402 ;;
 16403                           
 16404                           	psect	text107
 16405  0059D8                     __ptext107:
 16406                           	opt callstack 0
 16407  0059D8                     _TMR5_ISR:
 16408                           	opt callstack 17
 16409                           
 16410                           ; BSR set to: 57
 16411                           ;incstack = 0
 16412  0059D8  0060  F118  F05C   	movff	btemp+11,??_TMR5_ISR
 16413  0059DE  EE13  F12A         	lfsr	1,___inthi_sp
 16414                           
 16415                           ;mcc_generated_files/tmr5.c: 165:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 168:  PIR8bits.TMR5IF = 0;
 16416  0059E2  0139               	movlb	57	; () banked
 16417  0059E4  9DA8               	bcf	168,6,b	;volatile
 16418                           
 16419                           ; BSR set to: 57
 16420                           ;mcc_generated_files/tmr5.c: 169:  TMR5_WriteTimer(timer5ReloadVal);
 16421  0059E6  0060  F0A3  FFE6   	movff	_timer5ReloadVal,postinc1
 16422  0059EC  0060  F0A7  FFE6   	movff	_timer5ReloadVal+1,postinc1
 16423  0059F2  EC50  F02C         	call	_TMR5_WriteTimer	;wreg free
 16424                           
 16425                           ;mcc_generated_files/tmr5.c: 172:  if (++CountCallBack >= 50) {
 16426  0059F6  4A26               	infsnz	TMR5_ISR@CountCallBack,f,c	;volatile
 16427  0059F8  2A27               	incf	TMR5_ISR@CountCallBack+1,f,c	;volatile
 16428  0059FA  5027               	movf	TMR5_ISR@CountCallBack+1,w,c	;volatile
 16429  0059FC  E104               	bnz	i2u417_40
 16430  0059FE  0E32               	movlw	50
 16431  005A00  5C26               	subwf	TMR5_ISR@CountCallBack,w,c	;volatile
 16432  005A02  A0D8               	btfss	status,0,c
 16433  005A04  D004               	goto	i2l1139
 16434  005A06                     i2u417_40:
 16435                           
 16436                           ;mcc_generated_files/tmr5.c: 174:   TMR5_CallBack();
 16437  005A06  EC6B  F02F         	call	_TMR5_CallBack	;wreg free
 16438                           
 16439                           ;mcc_generated_files/tmr5.c: 177:   CountCallBack = 0;
 16440  005A0A  6A26               	clrf	TMR5_ISR@CountCallBack,c	;volatile
 16441  005A0C  6A27               	clrf	TMR5_ISR@CountCallBack+1,c	;volatile
 16442  005A0E                     i2l1139:
 16443  005A0E  0060  F170  F046   	movff	??_TMR5_ISR,btemp+11
 16444  005A14  0011               	retfie		f
 16445  005A16                     __end_of_TMR5_ISR:
 16446                           	opt callstack 0
 16447                           
 16448 ;; *************** function _TMR5_WriteTimer *****************
 16449 ;; Defined at:
 16450 ;;		line 129 in file "mcc_generated_files/tmr5.c"
 16451 ;; Parameters:    Size  Location     Type
 16452 ;;  timerVal        2  [STACK] unsigned short 
 16453 ;; Auto vars:     Size  Location     Type
 16454 ;;		None
 16455 ;; Return value:  Size  Location     Type
 16456 ;;                  1  [STACK] void 
 16457 ;; Registers used:
 16458 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 16459 ;; Tracked objects:
 16460 ;;		On entry : 3F/39
 16461 ;;		On exit  : 0/0
 16462 ;;		Unchanged: 0/0
 16463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16468 ;;Total ram usage:        0 bytes
 16469 ;; Hardware stack levels used:    1
 16470 ;; This function calls:
 16471 ;;		Nothing
 16472 ;; This function is called by:
 16473 ;;		_TMR5_ISR
 16474 ;; This function uses a reentrant model
 16475 ;;
 16476                           
 16477                           	psect	text108
 16478  0058A0                     __ptext108:
 16479                           	opt callstack 0
 16480  0058A0                     _TMR5_WriteTimer:
 16481                           	opt callstack 18
 16482                           
 16483                           ;mcc_generated_files/tmr5.c: 129: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 130: {;mcc_generated_files/tmr5.c: 131:  if (T5CONbits.NOT_SYNC == 1) {
 16484                           
 16485                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16486                           ;incstack = 0
 16487  0058A0  A49A               	btfss	16282,2,c	;volatile
 16488  0058A2  D00F               	goto	l4013
 16489                           
 16490                           ;mcc_generated_files/tmr5.c: 133:   T5CONbits.TMR5ON = 0;
 16491  0058A4  909A               	bcf	16282,0,c	;volatile
 16492                           
 16493                           ;mcc_generated_files/tmr5.c: 136:   TMR5H = (timerVal >> 8);
 16494                           ;stkvar	_timerVal @ sp[(0)+-2]
 16495  0058A6  0EFF               	movlw	255
 16496  0058A8  24E1               	addwf	fsr1l,w,c
 16497  0058AA  6ED9               	movwf	fsr2l,c
 16498  0058AC  0EFF               	movlw	255
 16499  0058AE  20E2               	addwfc	fsr1h,w,c
 16500  0058B0  6EDA               	movwf	fsr2h,c
 16501  0058B2  50DF               	movf	indf2,w,c
 16502  0058B4  6E99               	movwf	16281,c	;volatile
 16503                           
 16504                           ;mcc_generated_files/tmr5.c: 137:   TMR5L = timerVal;
 16505                           ;stkvar	_timerVal @ sp[(0)+-2]
 16506  0058B6  0EFE               	movlw	-2
 16507  0058B8  006F FF8F FF98     	movff	plusw1,16280	;volatile
 16508                           
 16509                           ;mcc_generated_files/tmr5.c: 140:   T5CONbits.TMR5ON = 1;
 16510  0058BE  809A               	bsf	16282,0,c	;volatile
 16511                           
 16512                           ;mcc_generated_files/tmr5.c: 141:  } else {
 16513  0058C0  D00C               	goto	l1122
 16514  0058C2                     l4013:
 16515                           
 16516                           ;mcc_generated_files/tmr5.c: 143:   TMR5H = (timerVal >> 8);
 16517                           ;stkvar	_timerVal @ sp[(0)+-2]
 16518  0058C2  0EFF               	movlw	255
 16519  0058C4  24E1               	addwf	fsr1l,w,c
 16520  0058C6  6ED9               	movwf	fsr2l,c
 16521  0058C8  0EFF               	movlw	255
 16522  0058CA  20E2               	addwfc	fsr1h,w,c
 16523  0058CC  6EDA               	movwf	fsr2h,c
 16524  0058CE  50DF               	movf	indf2,w,c
 16525  0058D0  6E99               	movwf	16281,c	;volatile
 16526                           
 16527                           ;mcc_generated_files/tmr5.c: 144:   TMR5L = timerVal;
 16528                           ;stkvar	_timerVal @ sp[(0)+-2]
 16529  0058D2  0EFE               	movlw	-2
 16530  0058D4  006F FF8F FF98     	movff	plusw1,16280	;volatile
 16531  0058DA                     l1122:
 16532                           
 16533                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 16534  0058DA  52E5               	movf	postdec1,f,c
 16535  0058DC  52E5               	movf	postdec1,f,c
 16536  0058DE  0012               	return		;funcret
 16537  0058E0                     __end_of_TMR5_WriteTimer:
 16538                           	opt callstack 0
 16539                           
 16540 ;; *************** function _TMR5_CallBack *****************
 16541 ;; Defined at:
 16542 ;;		line 181 in file "mcc_generated_files/tmr5.c"
 16543 ;; Parameters:    Size  Location     Type
 16544 ;;		None
 16545 ;; Auto vars:     Size  Location     Type
 16546 ;;		None
 16547 ;; Return value:  Size  Location     Type
 16548 ;;                  1  [STACK] void 
 16549 ;; Registers used:
 16550 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 16551 ;; Tracked objects:
 16552 ;;		On entry : 0/39
 16553 ;;		On exit  : 0/0
 16554 ;;		Unchanged: 0/0
 16555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16560 ;;Total ram usage:        0 bytes
 16561 ;; Hardware stack levels used:    1
 16562 ;; Hardware stack levels required when called:    1
 16563 ;; This function calls:
 16564 ;;		Absolute function
 16565 ;;		_TMR5_DefaultInterruptHandler
 16566 ;; This function is called by:
 16567 ;;		_TMR5_ISR
 16568 ;; This function uses a reentrant model
 16569 ;;
 16570                           
 16571                           	psect	text109
 16572  005ED6                     __ptext109:
 16573                           	opt callstack 0
 16574  005ED6                     _TMR5_CallBack:
 16575                           	opt callstack 17
 16576                           
 16577                           ;mcc_generated_files/tmr5.c: 184:  if (TMR5_InterruptHandler) {
 16578                           
 16579                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16580                           ;incstack = 0
 16581  005ED6  0100               	movlb	0	; () banked
 16582  005ED8  51F0               	movf	_TMR5_InterruptHandler& (0+255),w,b
 16583  005EDA  11F1               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 16584  005EDC  11F2               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 16585  005EDE  B4D8               	btfsc	status,2,c
 16586  005EE0  0012               	return	
 16587                           
 16588                           ; BSR set to: 0
 16589                           ;mcc_generated_files/tmr5.c: 185:   TMR5_InterruptHandler();
 16590  005EE2  D801               	call	u348_48
 16591  005EE4  0012               	return	
 16592  005EE6                     u348_48:
 16593  005EE6  0005               	push	
 16594  005EE8  6EFA               	movwf	pclath,c
 16595  005EEA  51F0               	movf	_TMR5_InterruptHandler& (0+255),w,b
 16596  005EEC  6EFD               	movwf	tosl,c
 16597  005EEE  51F1               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 16598  005EF0  6EFE               	movwf	tosh,c
 16599  005EF2  51F2               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 16600  005EF4  6EFF               	movwf	tosu,c
 16601  005EF6  50FA               	movf	pclath,w,c
 16602  005EF8  0012               	return		;indir
 16603  005EFA                     __end_of_TMR5_CallBack:
 16604                           	opt callstack 0
 16605                           
 16606 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 16607 ;; Defined at:
 16608 ;;		line 194 in file "mcc_generated_files/tmr5.c"
 16609 ;; Parameters:    Size  Location     Type
 16610 ;;		None
 16611 ;; Auto vars:     Size  Location     Type
 16612 ;;		None
 16613 ;; Return value:  Size  Location     Type
 16614 ;;                  1  [STACK] void 
 16615 ;; Registers used:
 16616 ;;		wreg, status,2, status,0, btemp+11
 16617 ;; Tracked objects:
 16618 ;;		On entry : 3F/0
 16619 ;;		On exit  : 0/0
 16620 ;;		Unchanged: 0/0
 16621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16626 ;;Total ram usage:        0 bytes
 16627 ;; Hardware stack levels used:    1
 16628 ;; This function calls:
 16629 ;;		Nothing
 16630 ;; This function is called by:
 16631 ;;		_TMR5_Initialize
 16632 ;;		_TMR5_CallBack
 16633 ;; This function uses a reentrant model
 16634 ;;
 16635                           
 16636                           	psect	text110
 16637  00608A                     __ptext110:
 16638                           	opt callstack 0
 16639  00608A                     _TMR5_DefaultInterruptHandler:
 16640                           	opt callstack 17
 16641                           
 16642                           ;mcc_generated_files/tmr5.c: 198:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 16643                           
 16644                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16645                           ;incstack = 0
 16646  00608A  A0BE               	btfss	16318,0,c	;volatile
 16647  00608C  D002               	goto	u327_40
 16648  00608E  0E01               	movlw	1
 16649  006090  D001               	goto	u327_46
 16650  006092                     u327_40:
 16651  006092  0E00               	movlw	0
 16652  006094                     u327_46:
 16653  006094  0AFF               	xorlw	255
 16654  006096  6E46               	movwf	btemp+11,c
 16655  006098  50BE               	movf	16318,w,c	;volatile
 16656  00609A  1846               	xorwf	btemp+11,w,c
 16657  00609C  0BFE               	andlw	-2
 16658  00609E  1846               	xorwf	btemp+11,w,c
 16659  0060A0  6EBE               	movwf	16318,c	;volatile
 16660                           
 16661                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 16662  0060A2  0012               	return		;funcret
 16663  0060A4                     __end_of_TMR5_DefaultInterruptHandler:
 16664                           	opt callstack 0
 16665                           
 16666                           ;
 16667                           ; Interrupt Vector Table @ 0x8
 16668                           ;
 16669                           
 16670                           	psect	ivt0x8
 16671  000008                     __pivt0x8:
 16672                           	opt callstack 0
 16673  000008                     ivt0x8_base:
 16674                           	opt callstack 0
 16675                           
 16676                           ; Vector 0 : SWINT
 16677  000008  1863               	dw	_Default_ISR shr (0+2)
 16678                           
 16679                           ; Vector 1 : HLVD
 16680  00000A  1863               	dw	_Default_ISR shr (0+2)
 16681                           
 16682                           ; Vector 2 : OSF
 16683  00000C  1863               	dw	_Default_ISR shr (0+2)
 16684                           
 16685                           ; Vector 3 : CSW
 16686  00000E  1863               	dw	_Default_ISR shr (0+2)
 16687                           
 16688                           ; Vector 4 : NVM
 16689  000010  1863               	dw	_Default_ISR shr (0+2)
 16690                           
 16691                           ; Vector 5 : SCAN
 16692  000012  1863               	dw	_Default_ISR shr (0+2)
 16693                           
 16694                           ; Vector 6 : CRC
 16695  000014  1863               	dw	_Default_ISR shr (0+2)
 16696                           
 16697                           ; Vector 7 : IOC
 16698  000016  1863               	dw	_Default_ISR shr (0+2)
 16699                           
 16700                           ; Vector 8 : INT0
 16701  000018  183D               	dw	_INT0_ISR shr (0+2)
 16702                           
 16703                           ; Vector 9 : ZCD
 16704  00001A  1863               	dw	_Default_ISR shr (0+2)
 16705                           
 16706                           ; Vector 10 : AD
 16707  00001C  16EE               	dw	_ADCC_ISR shr (0+2)
 16708                           
 16709                           ; Vector 11 : ADT
 16710  00001E  1863               	dw	_Default_ISR shr (0+2)
 16711                           
 16712                           ; Vector 12 : CMP1
 16713  000020  1863               	dw	_Default_ISR shr (0+2)
 16714                           
 16715                           ; Vector 13 : SMT1
 16716  000022  1863               	dw	_Default_ISR shr (0+2)
 16717                           
 16718                           ; Vector 14 : SMT1PRA
 16719  000024  1863               	dw	_Default_ISR shr (0+2)
 16720                           
 16721                           ; Vector 15 : SMT1PRW
 16722  000026  1863               	dw	_Default_ISR shr (0+2)
 16723                           
 16724                           ; Vector 16 : DMA1SCNT
 16725  000028  1849               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 16726                           
 16727                           ; Vector 17 : DMA1DCNT
 16728  00002A  184F               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 16729                           
 16730                           ; Vector 18 : DMA1OR
 16731  00002C  1855               	dw	_DMA1_DMAOR_ISR shr (0+2)
 16732                           
 16733                           ; Vector 19 : DMA1A
 16734  00002E  1852               	dw	_DMA1_DMAA_ISR shr (0+2)
 16735                           
 16736                           ; Vector 20 : SPI1RX
 16737  000030  1863               	dw	_Default_ISR shr (0+2)
 16738                           
 16739                           ; Vector 21 : SPI1TX
 16740  000032  1863               	dw	_Default_ISR shr (0+2)
 16741                           
 16742                           ; Vector 22 : SPI1
 16743  000034  1863               	dw	_Default_ISR shr (0+2)
 16744                           
 16745                           ; Vector 23 : I2C1RX
 16746  000036  1863               	dw	_Default_ISR shr (0+2)
 16747                           
 16748                           ; Vector 24 : I2C1TX
 16749  000038  1863               	dw	_Default_ISR shr (0+2)
 16750                           
 16751                           ; Vector 25 : I2C1
 16752  00003A  1863               	dw	_Default_ISR shr (0+2)
 16753                           
 16754                           ; Vector 26 : I2C1E
 16755  00003C  1863               	dw	_Default_ISR shr (0+2)
 16756                           
 16757                           ; Vector 27 : U1RX
 16758  00003E  178F               	dw	_UART1_rx_vect_isr shr (0+2)
 16759                           
 16760                           ; Vector 28 : U1TX
 16761  000040  1785               	dw	_UART1_tx_vect_isr shr (0+2)
 16762                           
 16763                           ; Vector 29 : U1E
 16764  000042  1863               	dw	_Default_ISR shr (0+2)
 16765                           
 16766                           ; Vector 30 : U1
 16767  000044  1863               	dw	_Default_ISR shr (0+2)
 16768                           
 16769                           ; Vector 31 : TMR0
 16770  000046  1863               	dw	_Default_ISR shr (0+2)
 16771                           
 16772                           ; Vector 32 : TMR1
 16773  000048  1863               	dw	_Default_ISR shr (0+2)
 16774                           
 16775                           ; Vector 33 : TMR1G
 16776  00004A  1863               	dw	_Default_ISR shr (0+2)
 16777                           
 16778                           ; Vector 34 : TMR2
 16779  00004C  1863               	dw	_Default_ISR shr (0+2)
 16780                           
 16781                           ; Vector 35 : CCP1
 16782  00004E  1863               	dw	_Default_ISR shr (0+2)
 16783                           
 16784                           ; Vector 36 : Undefined
 16785  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 16786                           
 16787                           ; Vector 37 : NCO1
 16788  000052  1863               	dw	_Default_ISR shr (0+2)
 16789                           
 16790                           ; Vector 38 : CWG1
 16791  000054  1863               	dw	_Default_ISR shr (0+2)
 16792                           
 16793                           ; Vector 39 : CLC1
 16794  000056  1863               	dw	_Default_ISR shr (0+2)
 16795                           
 16796                           ; Vector 40 : INT1
 16797  000058  1841               	dw	_INT1_ISR shr (0+2)
 16798                           
 16799                           ; Vector 41 : CMP2
 16800  00005A  1863               	dw	_Default_ISR shr (0+2)
 16801                           
 16802                           ; Vector 42 : DMA2SCNT
 16803  00005C  1863               	dw	_Default_ISR shr (0+2)
 16804                           
 16805                           ; Vector 43 : DMA2DCNT
 16806  00005E  1863               	dw	_Default_ISR shr (0+2)
 16807                           
 16808                           ; Vector 44 : DMA2OR
 16809  000060  1863               	dw	_Default_ISR shr (0+2)
 16810                           
 16811                           ; Vector 45 : DMA2A
 16812  000062  1863               	dw	_Default_ISR shr (0+2)
 16813                           
 16814                           ; Vector 46 : I2C2RX
 16815  000064  1863               	dw	_Default_ISR shr (0+2)
 16816                           
 16817                           ; Vector 47 : I2C2TX
 16818  000066  1863               	dw	_Default_ISR shr (0+2)
 16819                           
 16820                           ; Vector 48 : I2C2
 16821  000068  1863               	dw	_Default_ISR shr (0+2)
 16822                           
 16823                           ; Vector 49 : I2C2E
 16824  00006A  1863               	dw	_Default_ISR shr (0+2)
 16825                           
 16826                           ; Vector 50 : U2RX
 16827  00006C  17A3               	dw	_UART2_rx_vect_isr shr (0+2)
 16828                           
 16829                           ; Vector 51 : U2TX
 16830  00006E  1799               	dw	_UART2_tx_vect_isr shr (0+2)
 16831                           
 16832                           ; Vector 52 : U2E
 16833  000070  1863               	dw	_Default_ISR shr (0+2)
 16834                           
 16835                           ; Vector 53 : U2
 16836  000072  1863               	dw	_Default_ISR shr (0+2)
 16837                           
 16838                           ; Vector 54 : TMR3
 16839  000074  1863               	dw	_Default_ISR shr (0+2)
 16840                           
 16841                           ; Vector 55 : TMR3G
 16842  000076  1863               	dw	_Default_ISR shr (0+2)
 16843                           
 16844                           ; Vector 56 : TMR4
 16845  000078  1863               	dw	_Default_ISR shr (0+2)
 16846                           
 16847                           ; Vector 57 : CCP2
 16848  00007A  1863               	dw	_Default_ISR shr (0+2)
 16849                           
 16850                           ; Vector 58 : Undefined
 16851  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 16852                           
 16853                           ; Vector 59 : CWG2
 16854  00007E  1863               	dw	_Default_ISR shr (0+2)
 16855                           
 16856                           ; Vector 60 : CLC2
 16857  000080  1863               	dw	_Default_ISR shr (0+2)
 16858                           
 16859                           ; Vector 61 : INT2
 16860  000082  1845               	dw	_INT2_ISR shr (0+2)
 16861                           
 16862                           ; Vector 62 : Undefined
 16863  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 16864                           
 16865                           ; Vector 63 : Undefined
 16866  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 16867                           
 16868                           ; Vector 64 : Undefined
 16869  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 16870                           
 16871                           ; Vector 65 : Undefined
 16872  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 16873                           
 16874                           ; Vector 66 : Undefined
 16875  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 16876                           
 16877                           ; Vector 67 : Undefined
 16878  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 16879                           
 16880                           ; Vector 68 : Undefined
 16881  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 16882                           
 16883                           ; Vector 69 : Undefined
 16884  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 16885                           
 16886                           ; Vector 70 : TMR5
 16887  000094  1676               	dw	_TMR5_ISR shr (0+2)
 16888                           
 16889                           ; Vector 71 : TMR5G
 16890  000096  1863               	dw	_Default_ISR shr (0+2)
 16891                           
 16892                           ; Vector 72 : TMR6
 16893  000098  181C               	dw	_TMR6_ISR shr (0+2)
 16894                           
 16895                           ; Vector 73 : CCP3
 16896  00009A  1863               	dw	_Default_ISR shr (0+2)
 16897                           
 16898                           ; Vector 74 : CWG3
 16899  00009C  1863               	dw	_Default_ISR shr (0+2)
 16900                           
 16901                           ; Vector 75 : CLC3
 16902  00009E  1863               	dw	_Default_ISR shr (0+2)
 16903                           
 16904                           ; Vector 76 : Undefined
 16905  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 16906                           
 16907                           ; Vector 77 : Undefined
 16908  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 16909                           
 16910                           ; Vector 78 : Undefined
 16911  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 16912                           
 16913                           ; Vector 79 : Undefined
 16914  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 16915                           
 16916                           ; Vector 80 : CCP4
 16917  0000A8  1863               	dw	_Default_ISR shr (0+2)
 16918                           
 16919                           ; Vector 81 : CLC4
 16920  0000AA  1863               	dw	_Default_ISR shr (0+2)
 16921  0000AC                     ivt0x8_undefint:
 16922                           	opt callstack 0
 16923  0000AC  00FF               	reset	
 16924                           
 16925                           	psect	text111
 16926  000000                     __ptext111:
 16927                           	opt callstack 0
 16928                           
 16929                           	psect	rparam
 16930  0000                     
 16931                           	psect	temp
 16932  00003B                     btemp:
 16933                           	opt callstack 0
 16934  00003B                     	ds	32
 16935  0000                     wtemp0	set	btemp
 16936  0000                     wtemp1	set	btemp+2
 16937  0000                     wtemp2	set	btemp+4
 16938  0000                     wtemp3	set	btemp+6
 16939  0000                     wtemp4	set	btemp+8
 16940  0000                     wtemp5	set	btemp+10
 16941  0000                     wtemp8	set	btemp+1
 16942  0000                     ttemp0	set	btemp
 16943  0000                     ttemp1	set	btemp+3
 16944  0000                     ttemp2	set	btemp+6
 16945  0000                     ttemp3	set	btemp+9
 16946  0000                     ttemp5	set	btemp+1
 16947  0000                     ttemp6	set	btemp+4
 16948  0000                     ttemp7	set	btemp+8
 16949  0000                     ltemp0	set	btemp
 16950  0000                     ltemp1	set	btemp+4
 16951  0000                     ltemp2	set	btemp+8
 16952  0000                     lltemp0	set	btemp
 16953  0000                     lltemp1	set	btemp+8
 16954  0000                     lltemp2	set	btemp+16
 16955  0000                     lltemp3	set	btemp+24
 16956                           tosu	equ	0x3FFF
 16957                           tosh	equ	0x3FFE
 16958                           tosl	equ	0x3FFD
 16959                           stkptr	equ	0x3FFC
 16960                           pclatu	equ	0x3FFB
 16961                           pclath	equ	0x3FFA
 16962                           pcl	equ	0x3FF9
 16963                           tblptru	equ	0x3FF8
 16964                           tblptrh	equ	0x3FF7
 16965                           tblptrl	equ	0x3FF6
 16966                           tablat	equ	0x3FF5
 16967                           prodh	equ	0x3FF4
 16968                           prodl	equ	0x3FF3
 16969                           indf0	equ	0x3FEF
 16970                           postinc0	equ	0x3FEE
 16971                           postdec0	equ	0x3FED
 16972                           preinc0	equ	0x3FEC
 16973                           plusw0	equ	0x3FEB
 16974                           fsr0h	equ	0x3FEA
 16975                           fsr0l	equ	0x3FE9
 16976                           wreg	equ	0x3FE8
 16977                           indf1	equ	0x3FE7
 16978                           postinc1	equ	0x3FE6
 16979                           postdec1	equ	0x3FE5
 16980                           preinc1	equ	0x3FE4
 16981                           plusw1	equ	0x3FE3
 16982                           fsr1h	equ	0x3FE2
 16983                           fsr1l	equ	0x3FE1
 16984                           bsr	equ	0x3FE0
 16985                           indf2	equ	0x3FDF
 16986                           postinc2	equ	0x3FDE
 16987                           postdec2	equ	0x3FDD
 16988                           preinc2	equ	0x3FDC
 16989                           plusw2	equ	0x3FDB
 16990                           fsr2h	equ	0x3FDA
 16991                           fsr2l	equ	0x3FD9
 16992                           status	equ	0x3FD8


Data Sizes:
    Strings     181
    Constant    0
    Data        328
    BSS         538
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      2      61
    BANK0           160      0     154
    BANK1           256      0     207
    BANK2           256      0     256
    BANK3           256      0     190
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    ?_secs_II_message.reply	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[65]), 

    ?_secs_II_message.header	PTR unsigned char  size(2) Largest target is 65
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    _r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_25(CODE[3]), STR_21(CODE[3]), 

    r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_25(CODE[3]), STR_21(CODE[3]), 

    _l	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[21]), 
		 -> STR_14(CODE[19]), STR_13(CODE[6]), STR_12(CODE[17]), STR_11(CODE[19]), 
		 -> STR_10(CODE[19]), STR_9(CODE[20]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[19]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    l	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[21]), 
		 -> STR_14(CODE[19]), STR_13(CODE[6]), STR_12(CODE[17]), STR_11(CODE[19]), 
		 -> STR_10(CODE[19]), STR_9(CODE[20]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[19]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 89
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[6]), V(BANK0[89]), 

    a	PTR const unsigned char  size(2) Largest target is 89
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[6]), V(BANK0[89]), 

    fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_15(CODE[21]), STR_14(CODE[19]), STR_13(CODE[6]), STR_12(CODE[17]), 
		 -> STR_11(CODE[19]), STR_10(CODE[19]), STR_9(CODE[20]), STR_8(CODE[6]), 
		 -> STR_7(CODE[6]), STR_6(CODE[14]), STR_5(CODE[19]), STR_4(CODE[15]), 
		 -> STR_2(CODE[12]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(1) Largest target is 89
		 -> V(BANK0[89]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 89
		 -> V(BANK0[89]), 

    s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    S4294_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 89
		 -> V(BANK0[89]), 

    fp.buffer	PTR unsigned char  size(1) Largest target is 89
		 -> V(BANK0[89]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[21]), 
		 -> STR_14(CODE[19]), STR_13(CODE[6]), STR_12(CODE[17]), STR_11(CODE[19]), 
		 -> STR_10(CODE[19]), STR_9(CODE[20]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[19]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(1) Largest target is 21
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[21]), 
		 -> STR_14(CODE[19]), STR_13(CODE[6]), STR_12(CODE[17]), STR_11(CODE[19]), 
		 -> STR_10(CODE[19]), STR_9(CODE[20]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[19]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[6]), V(BANK0[89]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 1
		 -> cfmt(STACK[1]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[6]), V(BANK0[89]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_3(CODE[6]), 
		 -> V(BANK0[89]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    F16622.reply	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[65]), 

    F16622.header	PTR unsigned char  size(2) Largest target is 65
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    byte_block	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK3[56]), H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[65]), 

    k	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK3[56]), H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[65]), 

    t_link	PTR enum E16163 size(1) Largest target is 89
		 -> V(BANK0[89]), 

    S3609response_type$reply	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[65]), 

    F16610.reply	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[65]), 

    S3609response_type$header	PTR unsigned char  size(2) Largest target is 65
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    F16610.header	PTR unsigned char  size(2) Largest target is 65
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    r_link	PTR enum E16163 size(1) Largest target is 89
		 -> V(BANK0[89]), 

    m_link	PTR enum E16163 size(1) Largest target is 89
		 -> V(BANK0[89]), 

    byte_block	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK3[56]), H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[65]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(1) Largest target is 89
		 -> V(BANK0[89]), 

    strPtr	PTR unsigned char  size(1) Largest target is 89
		 -> V(BANK0[89]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1986spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1986spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT2_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT2_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT2_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT2_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT2_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   41546
                  _SYSTEM_Initialize
                             _WaitMs
                _eaDogM_WriteCommand
            _eaDogM_WriteStringAtPos
                       _init_display
                         _m_protocol
                         _r_protocol
                            _sprintf
                         _t_protocol
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _t_protocol                                           2     1      1    1978
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                   _UART1_put_buffer
                    _secs_II_message
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_send                                           10     5      5    1188
                        _UART1_Write
                  _UART1_is_tx_ready
                   _UART1_put_buffer
                        _UART2_Write
                  _UART2_is_tx_ready
                   _UART2_put_buffer
                     _block_checksum
 ---------------------------------------------------------------------------------
 (3) _block_checksum                                       8     4      4     167
 ---------------------------------------------------------------------------------
 (3) _UART2_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART2_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART2_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (3) _UART1_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _secs_II_message                                      7     0      7     132
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             19     9     10    8312
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _r_protocol                                           2     1      1     643
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                             _WaitMs
                       _run_checksum
 ---------------------------------------------------------------------------------
 (3) _UART1_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _m_protocol                                           2     1      1     802
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                  _UART1_is_rx_ready
                         _UART2_Read
                  _UART2_is_rx_ready
                             _WaitMs
                       _run_checksum
 ---------------------------------------------------------------------------------
 (2) _run_checksum                                         2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _UART2_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART2_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1202
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteStringAtPos                              3     0      3   18878
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteString                                   1     0      1    9473
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1    9343
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_dma                                     1     0      1    9312
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      22
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      22
 ---------------------------------------------------------------------------------
 (3) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (3) _printf                                               7     4      3    8087
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5    7988
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           39    33      6    7749
                               _ctoa
                               _dtoa
                              _fputc
                               _stoa
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              6     2      4     225
 ---------------------------------------------------------------------------------
 (4) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (7) _ringBufS_put_dma                                     3     0      3     186
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     179
                    _ADCC_Initialize
                    _CLC1_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                     _DSM_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
                    _NCO1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      30
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      30
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NCO1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      45
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _DSM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      15
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR6_ISR                                            1     1      0     130
                                              0 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR6_CallBack                                       0     0      0     130
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR6_DefaultInterruptHandler                        1     1      0     130
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR5_ISR                                            1     1      0      60
                                              1 COMRAM     1     1      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR5_WriteTimer                                     2     0      2      60
 ---------------------------------------------------------------------------------
 (13) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _CLC1_Initialize
     _CLKREF_Initialize
     _DMA1_Initialize
     _DSM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _NCO1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _WaitMs
     _StartTimer
     _TimerDone
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _eaDogM_WriteStringAtPos
     _eaDogM_WriteString
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _strlen
       _wait_lcd_set
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _m_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_is_rx_ready
     _UART2_Read
     _UART2_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
   _r_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _fputc
           _putch
             _ringBufS_put_dma
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
   _t_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _UART1_put_buffer
     _secs_II_message
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _UART2_Write
       _UART2_is_tx_ready
       _UART2_put_buffer
       _block_checksum
   _wait_lcd_done
     _wdtdelay

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _INT2_ISR (ROOT)
   _INT2_CallBack
     Absolute function(Fake) *
     _INT2_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      BE      11       74.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      CF       7       80.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      9A       5       96.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      2      3D       1       96.8%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     364      58        0.0%
DATA                 0      0     364       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Mar 17 15:53:54 2019

                    _SPI1_Exchange8bit 5FE4                                      _V 0067  
     __end_of_TMR5_SetInterruptHandler 5D72              __end_of_UART2_is_rx_ready 6176  
                          __CFG_CP$OFF 000000                __size_of_ringBufS_flush 0092  
            __end_of_UART2_is_tx_ready 6166                            __CFG_LVP$ON 000000  
                                  _H10 0100                                    _H12 0141  
                                  _H13 019F                                    _H14 018E  
                                  _H24 015F                                    _H17 017A  
                                  _H53 0386                                    l194 60CA  
                                  l572 59C4                                    l717 5B34  
                                  l851 5FF2                                    l579 5934  
                                  l692 5986                                    l597 5B08  
                                  l699 58F6                                    _GIE 01FE97  
                                  u980 5470                                    u998 5472  
                                  _abs 578C                                    _pad 4902  
              __size_of_PMD_Initialize 0014                                    tosl 003FFD  
                                  wreg 003FE8                          _INT0_CallBack 5F3E  
                         _run_checksum 5A8A                     _UART1_Transmit_ISR 5AE2  
                        __CFG_BBEN$OFF 000000                          _INT1_CallBack 5F60  
                         __CFG_ZCD$OFF 000000                                   l1122 58DA  
                                 l1220 20F0                                   l1230 21A0  
                                 l1241 2290                                   l1324 5658  
                                 l1252 23B8                                   l1262 24EA  
                                 l1246 22FA                                   l1263 2516  
                                 l1248 22FE                                   l1258 249C  
                                 l1460 5368                                   l4013 58C2  
                                 l1456 4FC8                                   l1544 2F4A  
                                 l1634 3E1A                                   l1820 39C2  
                                 l2534 57CC                                   l1648 3F7E  
                                 l2556 4B18                                   l1773 495E  
                                 l6005 5BA4                                   l1597 3642  
                                 l1669 42E6                                   l1839 2A24  
                                 l5313 57BC                                   l1793 2B0C  
                                 l6121 43E0                                   l5331 3C4C  
                                 l2588 48F8                                   l5325 3BF8  
                                 l6141 441E                                   l6109 4398  
                                 l5271 4FF6                                   l6119 43BA  
                                 l6207 44E8                                   l6401 5FE0  
                                 l5273 5018                                   l5337 3C92  
                                 l6209 451A                                   l8001 423E  
                                 l6067 5A98                                   l6171 4494  
                                 l6139 4404                                   l6075 4302  
                                 l5349 3D64                                   l5541 4806  
                                 l6157 443C                                   l8005 4244  
                                 l6095 435E                                   l5385 46C4  
                                 l5377 4618                                   l5369 4590  
                                 l5537 47D6                                   l5633 566A  
                                 l6601 38C6                                   l6169 4456  
                                 l6089 4340                                   l5721 5B86  
                                 l8017 4298                                   l8009 425E  
                                 l8025 42C6                                   l5811 5F14  
                                 l5707 5954                                   l6531 36D8  
                                 l6195 44CE                                   l8019 42C0  
                                 l8211 3FB2                                   l5709 5956  
                                 l6517 3698                                   l6509 3668  
                                 l8221 3FD6                                   l6391 5B30  
                                 l6543 3746                                   l6535 36F6  
                                 l6519 36A4                                   l5743 5916  
                                 l8231 4004                                   l8215 3FBA  
                                 l8207 3F9E                                   l6369 5B04  
                                 l7601 49EE                                   l5745 5918  
                                 l8233 4012                                   l6379 5FC0  
                                 l7611 53BA                                   l6555 37C4  
                                 l6547 3776                                   l6539 371A  
                                 l8235 4016                                   l8243 4034  
                                 l8331 2258                                   l8315 21F8  
                                 l6821 313A                                   l6805 30E8  
                                 l6733 2EFE                                   l6557 37C8  
                                 l6493 360C                                   l5757 5B5C  
                                 l8237 401E                                   l8245 4076  
                                 l8413 246E                                   l8341 2284  
                                 l8333 225C                                   l8309 21DE  
                                 l5943 599C                                   l6751 2F6C  
                                 l6719 2EB2                                   l6583 3856  
                                 l6567 37EC                                   l8239 4026  
                                 l8183 3EE2                                   l8167 3E76  
                                 l8159 3E46                                   l8423 24A0  
                                 l8271 20D2                                   l7609 538E  
                                 l7713 3A34                                   l6841 3208  
                                 l6833 31BA                                   l6825 315E  
                                 l6817 311C                                   l6593 387C  
                                 l8185 3EEE                                   l8169 3E88  
                                 l8409 245E                                   l8425 24CC  
                                 l8337 226C                                   l8273 20DA  
                                 l7643 2B46                                   l7635 2AFC  
                                 l7731 3B56                                   l7723 3AEE  
                                 l6843 320C                                   l6587 386C  
                                 l8179 3ECA                                   l8355 22CC  
                                 l8275 20F6                                   l8435 24EE  
                                 l7581 5294                                   l7717 3A64  
                                 l7709 39F8                                   l7805 29D6  
                                 l6853 3230                                   l6829 318A  
                                 l6781 3036                                   l6773 2FE6  
                                 l6757 2F94                                   l6589 3870  
                                 l8197 3F50                                   l8189 3F14  
                                 l8381 239E                                   l8373 2334  
                                 l7567 4A46                                   l7591 4956  
                                 l7647 2B64                                   l7727 3B1A  
                                 l5967 595E                                   l6871 329C  
                                 l6599 3884                                   l8447 257C  
                                 l8359 22E2                                   l8375 2366  
                                 l7577 5256                                   l7593 4968  
                                 l7681 2E64                                   l7657 2D76  
                                 l7833 3472                                   l6881 32BA  
                                 l6873 32A0                                   l6793 30B4  
                                 l6785 3066                                   l6777 300A  
                                 l6769 2FC8                                   l7915 581E  
                                 l7587 492E                                   l7763 2742  
                                 l7755 265E                                   l7827 33B4  
                                 l6875 32A8                                   l6795 30B8  
                                 l7597 49A4                                   l7677 2E28  
                                 l7693 3944                                   l7861 520A  
                                 l6877 32AC                                   l6869 328E  
                                 l6885 32C8                                   l8397 23F2  
                                 l7919 5848                                   l7767 2794  
                                 l7847 358A                                   l7839 34DC  
                                 l6879 32B4                                   l6887 330A  
                                 l7795 29B6                                   l7779 28BA  
                                 l7859 51C8                                   l7883 4C26  
                                 l7789 2962                                   l7957 515E  
                                 l7799 29BA                                   l7887 4C98  
                                 l7991 41DC                                   l7987 41C2  
                                 l7979 4112                                   l7999 4216  
                                 STR_1 2061                                   STR_2 208F  
                                 STR_3 20A7                                   STR_4 2072  
                                 STR_5 203D                                   STR_6 2081  
                                 STR_7 20A1                                   STR_8 209B  
                                 STR_9 2016                                   u1005 54A4  
                                 u1006 54A6                                   _LATA 003FBA  
                                 _LATB 003FBB                                   _LATC 003FBC  
                                 u2400 3C48                                   _LATD 003FBD  
                                 _LATE 003FBE                                   _LATF 003FBF  
                                 u2411 3C52                                   u2420 3C8C  
                                 u2500 458A                                   u2430 3CBE  
                                 u2520 45E0                                   u2360 57A0  
                                 u2290 5046                                   u2450 3D9C  
                                 u2530 4612                                   u2380 3BF2  
                                 u2540 4644                                   u4045 325A  
                                 u2470 3DEE                                   u4055 326A  
                                 u4047 325E                                   u2560 46FC  
                                 u2297 5038                                   u4065 327A  
                                 u4057 326E                                   u5210 2266  
                                 u4067 327E                                   u2580 474E  
                                 u5061 3F08                                   u4510 2AE2  
                                 u4360 4A3A                                   u4600 2DFE  
                                 u2920 48AE                                   u3625 3816  
                                 u4530 2B32                                   u5250 229C  
                                 _T6PR 003F93                                   u3635 3826  
                                 u3627 381A                                   u4380 4AB6  
                                 u4540 2D8A                                   u4460 2A5E  
                                 _PMD0 0039C0                                   u3645 3836  
                                 u3637 382A                                   _PMD1 0039C1  
                                 u4470 2A60                                   u4710 3B7C  
                                 _PMD2 0039C2                                   u4551 2DBA  
                                 u3647 383A                                   _PMD3 0039C3  
                                 u4560 2DD0                                   u5256 229E  
                                 _PMD4 0039C4                                   u4561 2DCE  
                                 _PMD5 0039C5                                   u4570 2DE4  
                                 u4490 2AD0                                   _PMD6 0039C6  
                                 _PMD7 0039C7                                   u4580 2DE8  
                                 u4900 514E                                   u4670 3A5A  
                                 u4750 26AE                                   u4910 410C  
                                 u4680 3AA0                                   u4840 35FE  
                                 u4770 27EC                                   u4687 3A92  
                                 _PLLR 01CEE0                                   _WPUA 003A41  
                                 _WPUB 003A51                                   _WPUC 003A61  
                                 _WPUD 003A71                                   _WPUE 003A81  
                                 _WPUF 003A91                          _INT2_CallBack 5F82  
                     __end_of_ADCC_ISR 5BE2                          __CFG_FCMEN$ON 000000  
                                 _dbuf 01AF                                   _ctoa 5370  
                                 _main 20B8                                   _dtoa 2A2E  
                                 _prec 0022                                   _nout 00F6  
                                 fsr0h 003FEA                                   fsr1h 003FE2  
                                 indf0 003FEF                                   fsr2h 003FDA  
                                 fsr0l 003FE9                                   indf1 003FE7  
                                 indf2 003FDF                                   fsr1l 003FE1  
                                 fsr2l 003FD9                                   _stoa 38D8  
                                 btemp 003B      __size_of_INT2_SetInterruptHandler 0028  
                                 prodl 003FF3                                   start 00AE  
                      _timer5ReloadVal 0028              __end_of_SPI1_Exchange8bit 6002  
                        __CFG_CSWEN$ON 000000                      _UART1_rx_vect_isr 5E3C  
                         ___param_bank 000000             __size_of_UART1_is_rx_ready 0008  
                   ?_UART1_rx_vect_isr 005B             __size_of_UART1_is_tx_ready 0008  
                     __end_of_INT0_ISR 6102                       __end_of_INT1_ISR 6112  
                     __end_of_INT2_ISR 6122         __size_of_OSCILLATOR_Initialize 0016  
             __end_of_ringBufS_put_dma 4FD0          __end_of_OSCILLATOR_Initialize 60D0  
                                PRLOCK 0039EF                        __end_of___aodiv 3E16  
                                _ADCAP 003EF5                                  _ADACT 003EFE  
                                _ADCLK 003EFF                        __end_of___aomod 4772  
                                _ADPCH 003EF1                                  _ADREF 003EFD  
                                STR_10 203D                                  STR_11 202A  
                                STR_12 2050                                  STR_13 209B  
                                STR_21 20AD                                  STR_14 202A  
                                STR_23 20B0                                  STR_15 2001  
                                STR_16 2098                                  STR_25 20B0  
                                STR_17 20B3                          __CFG_WDTE$OFF 000000  
                                STR_19 20AD                                  _ADRPT 003EEC  
                                _U1P1H 003DED                                  _U1P2H 003DEF  
                                _U1P1L 003DEC                                  _U1P3H 003DF1  
                                _U1P2L 003DEE                                  _U1P3L 003DF0  
                                _U2P1L 003DD4                                  _U2P2L 003DD6  
                                _U2P3L 003DD8                                  _T5CLK 003F9D  
                                _T5CON 003F9A                                  _T6CON 003F94  
                       __CFG_DEBUG$OFF 000000                                  _T6HLT 003F95  
                                _U1UIR 003DF8                                  _U1RXB 003DE8  
                                _U2UIR 003DE0                                  _U1TXB 003DEA  
                                _U2RXB 003DD0                                  _U2TXB 003DD2  
                                _T6TMR 003F92                                  _T6RST 003F97  
                  ??_UART1_rx_vect_isr 005B                                  _ISRPR 0039F1  
                                _OSCEN 0039DD                                  _TMR5H 003F99  
                                _TMR5L 003F98                                  _TRISA 003FC2  
                                _TRISB 003FC3                                  _TRISC 003FC4  
                                _TRISD 003FC5                                  _TRISE 003FC6  
                                _TRISF 003FC7                            _Default_ISR 618C  
    __size_of_TMR6_SetInterruptHandler 0028                      _UART1_tx_vect_isr 5E14  
                        __CFG_WRTB$OFF 000000                          __CFG_WRTC$OFF 000000  
                        __CFG_WRTD$OFF 000000                       __end_of_TMR5_ISR 5A16  
                         _DMA1CON0bits 003BFC                       __end_of_TMR6_ISR 608A  
                         _DMA1CON1bits 003BFD                     r_protocol@rxData_l 002C  
                                _flags 0024                                  _fputc 4A16  
           __size_of_send_lcd_cmd_long 0028                                  _fputs 5246  
                   __CFG_MCLRE$EXTMCLR 000000                     ?_UART1_tx_vect_isr 005B  
                                _width 0020                                  _putch 6056  
             _INT1_SetInterruptHandler 5D9A                                  pclath 003FFA  
                                tablat 003FF5                __size_of_DSM_Initialize 001C  
                                ltemp0 003B                                  ltemp1 003F  
                                ltemp2 0043               __size_of_DMA1_Initialize 006A  
                                plusw1 003FE3                                  plusw2 003FDB  
                                ttemp0 003B                                  ttemp1 003E  
                                ttemp2 0041                                  ttemp3 0044  
                                ttemp5 003C                                  ttemp6 003F  
                                ttemp7 0043                                  status 003FD8  
  __end_of_UART1_SetRxInterruptHandler 5CFA            _UART1_SetRxInterruptHandler 5CD2  
                                wtemp0 003B                                  wtemp1 003D  
                                wtemp2 003F                                  wtemp3 0041  
                                wtemp4 0043                                  wtemp5 0045  
                                wtemp8 003C                        __end_of_sprintf 4E76  
                      __end_of_strncmp 4902                    ??_UART1_tx_vect_isr 005B  
            __size_of_DMA1_DMADCNT_ISR 000A              __end_of_UART1_rx_vect_isr 5E62  
             __size_of_SPI1_Initialize 0016                        _TMR5_Initialize 57D2  
                __end_of_ringBufS_init 5C5A                        __initialization 4CDE  
                    _UART2_rx_vect_isr 5E8C                           __end_of_ctoa 53F8  
                         __end_of_main 2580                           __end_of_dtoa 2EAE  
                         __end_of_stoa 3B96             __size_of_UART2_is_rx_ready 0008  
                       __CFG_SAFEN$OFF 000000                     ?_UART2_rx_vect_isr 005B  
           __size_of_UART2_is_tx_ready 0008               _TMR5_SetInterruptHandler 5D4A  
                        __activetblptr 000003              __size_of_DMA1_DMASCNT_ISR 000E  
 __size_of_UART1_SetTxInterruptHandler 0028                    ??_UART2_rx_vect_isr 005B  
            __end_of_UART1_tx_vect_isr 5E3A                                 INTCON0 003FD2  
 __size_of_UART2_SetRxInterruptHandler 0028                         __CFG_MVECEN$ON 000000  
                      _TMR6_Initialize 5CFA                       _UART1_Initialize 54C8  
                    _UART2_tx_vect_isr 5E64                     _UART2_Transmit_ISR 5B0E  
                               _ADACCU 003EEA                                 _ADACQH 003EF4  
                               _ADACQL 003EF3                                 _ADCON0 003EF8  
                               _ADCON1 003EF9                                 _ADCON2 003EFA  
                               _ADCON3 003EFB                                 _ADLTHH 003EDF  
                               _ADLTHL 003EDE                                 _ADPREH 003EF7  
                               _ADPREL 003EF6                                 _DMA1PR 0039F3  
                               _DMA2PR 0039F4                                 _ADSTAT 003EFC  
                               _ADUTHH 003EE1                                 _ADUTHL 003EE0  
                               _ANSELA 003A40                                 _ANSELB 003A50  
                               _ANSELC 003A60                                 _ANSELD 003A70  
                               _ANSELE 003A80                                 _ANSELF 003A90  
                   ?_UART2_tx_vect_isr 005B                                 _MD1SRC 003CFC  
                               _U1CON0 003DF2                                 _U1CON1 003DF3  
                               _U1CON2 003DF4                    __size_of_UART1_Read 003E  
                               _U1BRGH 003DF6                                 _U1FIFO 003DF7  
                               _U2CON0 003DDA                                 _U2CON1 003DDB  
                               _U1BRGL 003DF5                                 _U2CON2 003DDC  
                               _U2BRGH 003DDE                                 _U2FIFO 003DDF  
                               _U2BRGL 003DDD                                 _T5GATE 003F9C  
                  __size_of_UART2_Read 003E                                 _T5GCON 003F9B  
                               _MAINPR 0039F2                                 _RA4PPS 003A04  
                               _RA5PPS 003A05                                 _RA6PPS 003A06  
                               _RC3PPS 003A13                                 _RB6PPS 003A0E  
                               _RC5PPS 003A15                                 _ODCONA 003A42  
                               _ODCONB 003A52                                 _ODCONC 003A62  
                               _RC6PPS 003A16                                 _ODCOND 003A72  
                               _ODCONE 003A82                                 _ODCONF 003A92  
                               u121_48 5F4C                                 i2l1139 5A0E  
                       __CFG_WDTCCS$SC 000000                                 u123_48 5F6E  
                               u125_48 5F90                                 _SCANPR 0039F7  
                               u327_40 6092                                 u327_46 6094  
                               _IVTADH 00389E                                 _IVTADL 00389D  
                               u348_48 5EE6                                 _IVTADU 00389F  
         __size_of_eaDogM_WriteCommand 000E                                 _OSCFRQ 0039DF  
                               u499_48 5EC2               __end_of_send_lcd_cmd_dma 56F6  
                  ??_UART2_tx_vect_isr 005B              __end_of_UART2_rx_vect_isr 5EB2  
           __size_of_SPI1_Exchange8bit 001E                 __size_of_DMA1_DMAA_ISR 000A  
                       __CFG_XINST$OFF 000000                      _CLKREF_Initialize 6132  
                     _UART2_Initialize 55EE                                 _WaitMs 5B8E  
 __size_of_ADCC_SetADIInterruptHandler 0028                         __CFG_STVREN$ON 000000  
                       _ringBufS_flush 52DE                                 _memset 331C  
                               clear_0 4D5E                                 clear_1 4D6C  
                               clear_2 4D7E                                 clear_3 4D8A  
                               clear_4 4D96                                 _printf 552C  
                   _eaDogM_WriteString 5112                              ?_ADCC_ISR 005B  
                               _strlen 4FD0                     __size_of_TimerDone 0022  
                      _ADCC_Initialize 5742                         _PMD_Initialize 60D0  
 __end_of_INT2_DefaultInterruptHandler 6198  __size_of_INT2_DefaultInterruptHandler 0002  
         _INT2_DefaultInterruptHandler 6196                           __pdataCOMRAM 005D  
            __end_of_UART2_tx_vect_isr 5E8A                                 lltemp0 003B  
                               lltemp1 0043                                 lltemp2 004B  
                               lltemp3 0053                           __mediumconst 0000  
                               tblptrh 003FF7                                 tblptrl 003FF6  
                               tblptru 003FF8                       __end_of_wdtdelay 56A8  
                     __end_of_vfprintf 5246                             _StartTimer 5A16  
                      _CLC1_Initialize 5F1C          __size_of_INTERRUPT_Initialize 0066  
              __end_of_TMR5_Initialize 5818                      _SYSTEM_Initialize 585E  
                           __accesstop 0060                __end_of__initialization 4DA8  
                            ?_INT0_ISR 005B                              ?_INT1_ISR 005B  
                            ?_INT2_ISR 005B              __end_of_CLKREF_Initialize 613C  
                        ___rparam_used 000001             __size_of_UART1_rx_vect_isr 0026  
                      _TMR5_WriteTimer 58A0                 __end_of_ringBufS_flush 5370  
                       __pcstackCOMRAM 005B                             ___inthi_sp 0D2A  
                         __pidataBANK0 558E                           __pidataBANK1 4E76  
                         __pidataBANK3 5A52                              ?_TMR5_ISR 005B  
                            ?_TMR6_ISR 005B                         ivt0x8_undefint 00AC  
                        __end_of_fputc 4B22                          __end_of_fputs 52DE  
                __end_of_TMR5_CallBack 5EFA                          __end_of_putch 6070  
              __end_of_TMR6_Initialize 5D22                 __end_of_PMD_Initialize 60E4  
              __size_of_block_checksum 00D2                             ??_ADCC_ISR 005B  
                __end_of_TMR6_CallBack 5ED6            __size_of_EXT_INT_Initialize 004C  
           __size_of_UART1_tx_vect_isr 0026                          _DMA1_DMAA_ISR 6148  
     __end_of_INT2_SetInterruptHandler 5D9A               _UART2_RxInterruptHandler 0014  
            __end_of_SYSTEM_Initialize 58A0                        __CFG_PR1WAY$OFF 000000  
                      __CFG_IVT1WAY$ON 000000                         _DSM_Initialize 603A  
                           __pbssBANK0 00C0                             __pbssBANK1 01AF  
                           __pbssBANK2 0200                             __pbssBANK3 0300  
                _INT0_InterruptHandler 001D                             ??_INT0_ISR 005B  
                           ??_INT1_ISR 005B                             ??_INT2_ISR 005B  
                    __end_of_TimerDone 5F1C                       _DMA1_DMADCNT_ISR 613C  
            __size_of_UART1_put_buffer 002A             __size_of_UART2_rx_vect_isr 0026  
                              IVTBASEH 003FD6                                IVTBASEL 003FD5  
                              IVTBASEU 003FD7                  __end_of_wait_lcd_done 601E  
                      __CFG_PPS1WAY$ON 000000       __end_of_TMR6_SetInterruptHandler 5D4A  
              __end_of_ADCC_Initialize 578C                             ??_TMR5_ISR 005C  
                           ??_TMR6_ISR 005B                     __size_of_secs_send 0268  
                              _CLC1CON 003C74                                _CLC1POL 003C75  
                              _DMA1DSA 003BF0                                _DMA1DSZ 003BEE  
                              _DMA1SSA 003BF9                                _DMA1SSZ 003BF7  
                              _ADSTPTH 003EE5                                _ADSTPTL 003EE4  
                              _MD1CARH 003CFE                                _MD1CARL 003CFD  
                    _UART1_Receive_ISR 5FA4                                _CLKRCLK 003CE6  
                              _CLKRCON 003CE5                                _NCO1CLK 003F3F  
                       ?_DMA1_DMAA_ISR 005B                       _DMA1_DMASCNT_ISR 6124  
                              _NCO1CON 003F3E                                _U1ERRIE 003DFA  
                              _U1ERRIR 003DF9                __end_of_CLC1_Initialize 5F3E  
                              _U2ERRIE 003DE2                                _U2ERRIR 003DE1  
                              _INT0PPS 003AC0                    __CFG_PWRTS$PWRT_OFF 000000  
                              _INT1PPS 003AC1                                _INT2PPS 003AC2  
                         ?_Default_ISR 005B                   __size_of_UART1_Write 003E  
            __size_of_UART2_put_buffer 002A             __size_of_UART2_tx_vect_isr 0026  
                 __size_of_UART2_Write 003E                                _U1RXPPS 003AE5  
                              _U2RXPPS 003AE8                                _OSCCON1 0039D9  
                              _OSCCON3 0039DB                                _IVTLOCK 003FD4  
                   __size_of_vfpfcnvrt 04AE                                _SPI1CLK 003D1C  
                              _SPI1RXB 003D10                                _SPI1TXB 003D11  
                              _OSCTUNE 0039DE                 __end_of_DSM_Initialize 6056  
                              _SLRCONA 003A43                                _SLRCONB 003A53  
                              _SLRCONC 003A63                                _SLRCOND 003A73  
                              _SLRCONE 003A83                                _SLRCONF 003A93  
                   __size_of_start_lcd 0006                __end_of_TMR5_WriteTimer 58E0  
                   __end_of_UART1_Read 59D8                     __end_of_UART2_Read 599A  
    __size_of_INT0_SetInterruptHandler 0028             __size_of_CLKREF_Initialize 000A  
              __size_of_DMA1_DMAOR_ISR 000A                                __Hparam 0000  
                              __Lparam 0000               __end_of_UART1_Initialize 552C  
                      __size_of_WaitMs 002A                                ___aodiv 3B96  
                              ___aomod 4532                             _m_protocol 2EAE  
            __end_of_UART1_Receive_ISR 5FC4                           __psmallconst 2000  
                 __end_of_init_display 4C0C                                __pcinit 4CDE  
                      __size_of_memset 02EC                    _eaDogM_WriteCommand 60E4  
                              __ramtop 2000            __size_of_UART1_Transmit_ISR 002C  
             __size_of_NCO1_Initialize 001C                                __ptext0 20B8  
                              __ptext1 3E16                                __ptext2 4088  
                              __ptext3 4C0C                                __ptext4 5B3A  
                              __ptext5 615E                                __ptext6 58E0  
                              __ptext7 5B64                                __ptext8 6166  
                              __ptext9 42F0                      _UART2_Receive_ISR 5FC4  
                      __size_of_printf 0062                        __CFG_WRTAPP$OFF 000000  
                      __size_of_strlen 00A2                                us331999 4524  
                              us248999 3E00                                us259999 4760  
                _OSCILLATOR_Initialize 60BA                                us445999 2A48  
                              us462999 38EA                           __size_of_abs 0046  
                              _r_block 00C0                           __size_of_pad 0114  
                              _mode_sw 002E                        __CFG_WRTSAF$OFF 000000  
                            _T5CONbits 003F9A               __end_of_UART2_Initialize 564C  
                   m_protocol@rxData_l 002D             __size_of_SYSTEM_Initialize 0042  
                              _sprintf 4DAE                                _strncmp 4772  
                 end_of_initialization 4DA8                      __end_of_secs_send 42F0  
             _INT2_SetInterruptHandler 5D72               __size_of_secs_II_message 0242  
                           _r_protocol 3608    __end_of_UART1_SetTxInterruptHandler 5CD2  
          _UART1_SetTxInterruptHandler 5CAA    __end_of_UART2_SetRxInterruptHandler 5CAA  
          _UART2_SetRxInterruptHandler 5C82                             _t_protocol 3E16  
                    __end_of_vfpfcnvrt 2A2E                              _SPI1TCNTL 003D12  
                              postdec1 003FE5                                postdec2 003FDD  
                              postinc0 003FEE                                postinc1 003FE6  
                              postinc2 003FDE                    __size_of_StartTimer 003C  
                    __end_of_start_lcd 618A              __end_of_UART2_Receive_ISR 5FE4  
                       wdtdelay@dcount 00EC                  __CFG_WDTCPS$WDTCPS_31 000000  
                      ??_DMA1_DMAA_ISR 005C                         _block_checksum 4C0C  
                _INT1_InterruptHandler 001A                              _PORTBbits 003FCB  
             _TMR6_SetInterruptHandler 5D22                  _TMR5_InterruptHandler 00F0  
 __size_of_UART2_SetTxInterruptHandler 0028                      __size_of_ADCC_ISR 002A  
  __end_of_ADCC_SetADIInterruptHandler 5E12            _ADCC_SetADIInterruptHandler 5DEA  
               __size_of_ringBufS_init 0028                       __CFG_FEXTOSC$ECH 000000  
                      _DMA1_Initialize 53F8                        _SPI1_Initialize 60A4  
                     _UART1_put_buffer 5B64                      __size_of_INT0_ISR 000E  
                    __size_of_INT1_ISR 000E                      __size_of_INT2_ISR 000E  
                       __end_of_WaitMs 5BB8           __end_of_INTERRUPT_Initialize 54C8  
               __end_of_block_checksum 4CDE   __end_of_INT0_DefaultInterruptHandler 6194  
__size_of_INT0_DefaultInterruptHandler 0002           _INT0_DefaultInterruptHandler 6192  
           __size_of_UART1_Receive_ISR 0020                          __pidataCOMRAM 619A  
                    __size_of_TMR5_ISR 003E                      __size_of_TMR6_ISR 001A  
          __size_of_UART2_Transmit_ISR 002C                         __end_of_memset 3608  
                       __end_of_printf 558E               __end_of_DMA1_DMADCNT_ISR 6146  
                     _UART2_put_buffer 5B3A                  __end_of_INT0_CallBack 5F60  
                       __end_of_strlen 5072                    start_initialization 4CDE  
 __end_of_TMR5_DefaultInterruptHandler 60A4  __size_of_TMR5_DefaultInterruptHandler 001A  
         _TMR5_DefaultInterruptHandler 608A        __size_of_PIN_MANAGER_Initialize 00A0  
                          __end_of_abs 57D2                  __end_of_INT1_CallBack 5F82  
                          __end_of_pad 4A16                   __size_of_Default_ISR 0006  
                 __end_of_send_lcd_cmd 5C32                             ivt0x8_base 0008  
                __end_of_INT2_CallBack 5FA4                   secs_II_message@block 0001  
                        _uart1RxBuffer 0280                          _uart1TxBuffer 02C0  
                        _uart2RxBuffer 0200               __end_of_DMA1_DMASCNT_ISR 6132  
                        _uart2TxBuffer 0240                         _DMA1_DMAOR_ISR 6154  
                     __CFG_LPBOREN$OFF 000000                  __size_of_init_display 00EA  
          __size_of_eaDogM_WriteString 009C                              _TimerDone 5EFA  
                        _ringBufS_init 5C32                            _MD1CON0bits 003CFA  
                          _MD1CON1bits 003CFB                            __pdataBANK0 0060  
                          __pdataBANK1 0100                            __pdataBANK3 0386  
           __size_of_UART2_Receive_ISR 0020             __end_of_EXT_INT_Initialize 5742  
                      run_checksum@sum 00F8        __end_of_eaDogM_WriteStringAtPos 5AE2  
              __end_of_DMA1_Initialize 5462                            __pbssCOMRAM 0001  
     __end_of_INT0_SetInterruptHandler 5DEA                __end_of_SPI1_Initialize 60BA  
             _UART1_RxInterruptHandler 000E               _UART2_TxInterruptHandler 0011  
                  __size_of_m_protocol 046E              __size_of_ringBufS_put_dma 00AA  
                         _init_display 4B22                 __end_of_DMA1_DMAOR_ISR 615E  
               __size_of_TMR5_CallBack 0024                  _INT2_InterruptHandler 0017  
                _TMR6_InterruptHandler 00F3                 __size_of_TMR6_CallBack 0024  
               _PIN_MANAGER_Initialize 5072                   __end_of_wait_lcd_set 6184  
                            __ptext100 6070                              __ptext101 5EB2  
                            __ptext110 608A                              __ptext102 5818  
                            __ptext111 0000                              __ptext103 6124  
                            __ptext104 613C                              __ptext105 6148  
                            __ptext106 6154                              __ptext107 59D8  
                            __ptext108 58A0                              __ptext109 5ED6  
                   __end_of_StartTimer 5A52                      __size_of_wdtdelay 005C  
                    __size_of_vfprintf 0098                               _ADCC_ISR 5BB8  
                  __size_of_r_protocol 02D0                 __CFG_BBSIZE$BBSIZE_512 000000  
                          __smallconst 2000                               _CLC1GLS0 003C7A  
                             _CLC1GLS1 003C7B                               _CLC1GLS2 003C7C  
                             _CLC1GLS3 003C7D                               _CLC1SEL0 003C76  
                             _CLC1SEL1 003C77                               _CLC1SEL2 003C78  
                             _CLC1SEL3 003C79                               _DMA1CON0 003BFC  
                             _DMA1CON1 003BFD                               _DMA1AIRQ 003BFE  
                             _DMA1SIRQ 003BFF                            _NCO1CONbits 003F3E  
                  __size_of_t_protocol 0272                 __size_of_wait_lcd_done 001C  
                       __size_of_fputc 010C                         __size_of_fputs 0098  
                             _NCO1ACCH 003F39                         __size_of_putch 001A  
                             _NCO1ACCL 003F38                               _NCO1ACCU 003F3A  
                 _INTERRUPT_Initialize 5462                               _T6CLKCON 003F96  
                             _NCO1INCH 003F3C                               _NCO1INCL 003F3B  
                             _NCO1INCU 003F3D                        ?_DMA1_DMAOR_ISR 005B  
                             _INT0_ISR 60F4                               _INT1_ISR 6104  
                             _INT2_ISR 6114                               _LATCbits 003FBC  
                             _LATDbits 003FBD                               _LATEbits 003FBE  
    __size_of_INT1_SetInterruptHandler 0028                              _secs_send 4088  
                             _IPR1bits 003981                               _IPR2bits 003982  
                             _PIE1bits 003991                               _IPR3bits 003983  
                             _PIE2bits 003992                               _IPR5bits 003985  
                             _PIE3bits 003993                              _tickCount 00D9  
                             _IPR6bits 003986                               _PIE5bits 003995  
                             _IPR7bits 003987                               _IPR8bits 003988  
                             _PIE6bits 003996                               _PIE7bits 003997  
                             _IPR9bits 003989                               _PIE8bits 003998  
                  __CFG_BORV$VBOR_2P45 000000                               _PIE9bits 003999  
                            _ring_buf1 0343                              _ring_buf2 0300  
                             i2u410_48 5E26                               i2u412_48 5E4E  
                             i2u414_48 5E76                               i2u417_40 5A06  
                             i2u416_48 5E9E                               _PIR1bits 0039A1  
                             _PIR2bits 0039A2                               _SPI1BAUD 003D19  
                             i2u198_48 5BCE                               _SPI1CON0 003D14  
                             _SPI1CON1 003D15                               _SPI1CON2 003D16  
                             _PIR5bits 0039A5                               _PIR7bits 0039A7  
                             _PIR8bits 0039A8                               _PIR9bits 0039A9  
             __size_of_TMR5_Initialize 0046             __end_of_UART1_Transmit_ISR 5B0E  
                             _TMR5_ISR 59D8                               _TMR6_ISR 6070  
                            _vfpfcnvrt 2580                           _SPI1INTFbits 003D1A  
                        _TMR5_CallBack 5ED6                              _start_lcd 6184  
            __size_of_send_lcd_cmd_dma 004E                          _TMR6_CallBack 5EB2  
             __end_of_UART1_put_buffer 5B8E                  __size_of_send_lcd_cmd 0028  
    __size_of_TMR5_SetInterruptHandler 0028                    __end_of_UART1_Write 595C  
                  __end_of_UART2_Write 591E               __size_of_TMR6_Initialize 0028  
                          _INTCON0bits 003FD2                              copy_data0 4CF2  
                            copy_data1 4D14                              copy_data2 4D36  
             _INT0_SetInterruptHandler 5DC2                 _uart1TxBufferRemaining 0038  
  __end_of_UART2_SetTxInterruptHandler 5C82            _UART2_SetTxInterruptHandler 5C5A  
                         _uart1RxCount 0035               __end_of_UART2_put_buffer 5B64  
                         _uart2RxCount 002F                               __Hrparam 0000  
     __size_of_eaDogM_WriteStringAtPos 002C                __CFG_RSTOSC$EXTOSC_4PLL 000000  
                 __end_of_run_checksum 5AB6                               __Lrparam 0000  
                   __CFG_BOREN$SBORDIS 000000                          _wait_lcd_done 6002  
                         _send_lcd_cmd 5C0A                       __size_of___aodiv 0280  
                     __size_of___aomod 0240                        _NCO1_Initialize 601E  
                __end_of_DMA1_DMAA_ISR 6152   __size_of_UART1_SetRxInterruptHandler 0028  
                    ?_DMA1_DMADCNT_ISR 005B               __size_of_ADCC_Initialize 004A  
          __end_of_eaDogM_WriteCommand 60F2                               __pivt0x8 0008  
                   ??_DMA1_DMADCNT_ISR 005C                               __ptext10 4DAE  
                             __ptext11 3608                               __ptext20 6176  
                             __ptext12 591E                               __ptext21 599A  
                             __ptext13 2EAE                               __ptext30 56A8  
                             __ptext22 4B22                               __ptext14 5A8A  
                             __ptext31 617E                               __ptext23 5BE2  
                             __ptext15 5B8E                               __ptext40 4772  
                             __ptext32 6002                               __ptext24 5C0A  
                             __ptext16 5EFA                               __ptext41 38D8  
                             __ptext33 564C                               __ptext25 5FE4  
                             __ptext17 5A16                               __ptext50 4A16  
                             __ptext42 2A2E                               __ptext34 6184  
                             __ptext26 5C32                               __ptext18 616E  
                             __ptext51 6056                               __ptext43 578C  
                             __ptext35 52DE                               __ptext27 5AB6  
                             __ptext19 595C                               __ptext60 5CFA  
                             __ptext52 4F26                               __ptext44 4532  
                             __ptext36 331C                               __ptext28 5112  
                             __ptext61 5D22                               __ptext53 585E  
                             __ptext45 3B96                               __ptext37 552C  
                             __ptext29 60E4                               __ptext70 56F6  
                             __ptext62 57D2                               __ptext54 55EE  
                             __ptext46 5370                               __ptext38 51AE  
                             __ptext71 5D72                               __ptext63 5D4A  
                             __ptext55 5C5A                               __ptext47 4902  
                             __ptext39 2580                               __ptext80 60F4  
                             __ptext72 5D9A                               __ptext64 60A4  
                             __ptext56 5C82                               __ptext48 4FD0  
                             __ptext81 5F3E                               __ptext73 5DC2  
                             __ptext65 60D0                               __ptext57 54C8  
                             __ptext49 5246                               __ptext90 5BB8  
                             __ptext82 6192                               __ptext74 603A  
                             __ptext66 5072                               __ptext58 5CAA  
                             __ptext91 6198                               __ptext83 6104  
                             __ptext75 53F8                               __ptext67 60BA  
                             __ptext59 5CD2                               __ptext92 5E14  
                             __ptext84 5F60                               __ptext76 6132  
                             __ptext68 601E                               __ptext93 5AE2  
                             __ptext85 6194                               __ptext77 5F1C  
                             __ptext69 5462                               __ptext94 5E3C  
                             __ptext86 6114                               __ptext78 5742  
                             __ptext95 5FA4                               __ptext87 5F82  
                             __ptext79 5DEA                               __ptext96 5E64  
                             __ptext88 6196                               __ptext97 5B0E  
                             __ptext89 618C                               __ptext98 5E8C  
                             __ptext99 5FC4                        _secs_II_message 42F0  
             __size_of_CLC1_Initialize 0022                       __size_of_sprintf 00C8  
                     __size_of_strncmp 0190                       _ringBufS_put_dma 4F26  
                   __end_of_m_protocol 331C                          __size_of_ctoa 0088  
                        __size_of_main 04C8                          __size_of_dtoa 0480  
                __size_of_wait_lcd_set 0006                          __size_of_stoa 02BE  
                 __CFG_WDTCWS$WDTCWS_7 000000                      ?_DMA1_DMASCNT_ISR 005B  
                          _IVTLOCKbits 003FD4               __size_of_TMR5_WriteTimer 0040  
            _ADCC_ADI_InterruptHandler 0008                              stoa@F1142 0060  
                   ??_DMA1_DMASCNT_ISR 005C                               _spi_link 00CD  
                             _wdtdelay 564C             __end_of_UART2_Transmit_ISR 5B3A  
                             _vfprintf 51AE                      _UART1_is_rx_ready 6176  
                          _UART1_Write 591E   __end_of_INT1_DefaultInterruptHandler 6196  
__size_of_INT1_DefaultInterruptHandler 0002           _INT1_DefaultInterruptHandler 6194  
                          _UART2_Write 58E0                      _UART1_is_tx_ready 6166  
                      r_protocol@retry 005D                      t_protocol@requeue 002A  
                        ??_Default_ISR 005B                     __end_of_r_protocol 38D8  
                          _uart1RxHead 0037                            _uart1TxHead 003A  
                          _uart2RxHead 0031                            _uart1RxTail 0036  
                          _uart2TxHead 0034                            _uart1TxTail 0039  
                          _uart2RxTail 0030                            _uart2TxTail 0033  
                         _wait_lcd_set 617E                     _EXT_INT_Initialize 56F6  
 __end_of_TMR6_DefaultInterruptHandler 585E  __size_of_TMR6_DefaultInterruptHandler 0046  
         _TMR6_DefaultInterruptHandler 5818                     __end_of_t_protocol 4088  
 __end_of_ADCC_DefaultInterruptHandler 619A  __size_of_ADCC_DefaultInterruptHandler 0002  
         _ADCC_DefaultInterruptHandler 6198                               intlevel2 0000  
                    _send_lcd_cmd_long 5BE2                      __CFG_CLKOUTEN$OFF 000000  
           __end_of_eaDogM_WriteString 51AE                __end_of_NCO1_Initialize 603A  
               __size_of_INT0_CallBack 0022                             _SPI1SCKPPS 003ADE  
                           _SPI1SDIPPS 003ADF              __end_of_UART1_is_rx_ready 617E  
                           _UART1_Read 599A                 __size_of_INT1_CallBack 0022  
                           _UART2_Read 595C              __end_of_UART1_is_tx_ready 616E  
               __size_of_INT2_CallBack 0022                      _UART2_is_rx_ready 616E  
               _uart2TxBufferRemaining 0032                      _UART2_is_tx_ready 615E  
                     _send_lcd_cmd_dma 56A8                  TMR5_ISR@CountCallBack 0026  
              __end_of_secs_II_message 4532       __end_of_INT1_SetInterruptHandler 5DC2  
            __size_of_UART1_Initialize 0064                        t_protocol@block 00E5  
                     ??_DMA1_DMAOR_ISR 005C               _UART1_TxInterruptHandler 000B  
                      t_protocol@retry 002B              __end_of_send_lcd_cmd_long 5C0A  
                  __end_of_Default_ISR 6192         __end_of_PIN_MANAGER_Initialize 5112  
                __size_of_run_checksum 002C                _eaDogM_WriteStringAtPos 5AB6  
            __size_of_UART2_Initialize 005E  
