

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Feb  6 02:24:29 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=2
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=2
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1,group=2
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1,inline
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1,inline
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=2
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1,group=2
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=1
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1
   141                           	psect	text119,global,reloc=2,class=CODE,delta=1
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1
   143                           	psect	text121,global,reloc=2,class=CODE,delta=1
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1
   145                           	psect	text123,global,reloc=2,class=CODE,delta=1
   146                           	psect	text124,global,reloc=2,class=CODE,delta=1
   147                           	psect	text125,global,reloc=2,class=CODE,delta=1
   148                           	psect	text126,global,reloc=2,class=CODE,delta=1
   149                           	psect	text127,global,reloc=2,class=CODE,delta=1
   150                           	psect	text128,global,reloc=2,class=CODE,delta=1
   151                           	psect	text129,global,reloc=2,class=CODE,delta=1
   152                           	psect	text130,global,reloc=2,class=CODE,delta=1
   153                           	psect	text131,global,reloc=2,class=CODE,delta=1
   154                           	psect	text132,global,reloc=2,class=CODE,delta=1
   155                           	psect	text133,global,reloc=2,class=CODE,delta=1
   156                           	psect	text134,global,reloc=2,class=CODE,delta=1
   157                           	psect	text135,global,reloc=2,class=CODE,delta=1
   158                           	psect	text136,global,reloc=2,class=CODE,delta=1
   159                           	psect	text137,global,reloc=2,class=CODE,delta=1
   160                           	psect	text138,global,reloc=2,class=CODE,delta=1
   161                           	psect	text139,global,reloc=2,class=CODE,delta=1
   162                           	psect	text140,global,reloc=2,class=CODE,delta=1
   163                           	psect	text141,global,reloc=2,class=CODE,delta=1
   164                           	psect	text142,global,reloc=2,class=CODE,delta=1
   165                           	psect	text143,global,reloc=4,class=CODE,delta=1
   166                           	psect	text144,global,reloc=2,class=CODE,delta=1
   167                           	psect	text145,global,reloc=2,class=CODE,delta=1
   168                           	psect	text146,global,reloc=2,class=CODE,delta=1
   169                           	psect	text147,global,reloc=4,class=CODE,delta=1
   170                           	psect	text148,global,reloc=2,class=CODE,delta=1
   171                           	psect	text149,global,reloc=2,class=CODE,delta=1
   172                           	psect	text150,global,reloc=2,class=CODE,delta=1
   173                           	psect	text151,global,reloc=2,class=CODE,delta=1
   174                           	psect	text152,global,reloc=2,class=CODE,delta=1
   175                           	psect	text153,global,reloc=2,class=CODE,delta=1
   176                           	psect	text154,global,reloc=4,class=CODE,delta=1
   177                           	psect	text155,global,reloc=2,class=CODE,delta=1
   178                           	psect	text156,global,reloc=2,class=CODE,delta=1
   179                           	psect	text157,global,reloc=2,class=CODE,delta=1
   180                           	psect	text158,global,reloc=2,class=CODE,delta=1
   181                           	psect	text159,global,reloc=2,class=CODE,delta=1
   182                           	psect	text160,global,reloc=2,class=CODE,delta=1
   183                           	psect	text161,global,reloc=2,class=CODE,delta=1,group=1
   184                           	psect	text162,global,reloc=4,class=CODE,delta=1
   185                           	psect	text163,global,reloc=2,class=CODE,delta=1
   186                           	psect	text164,global,reloc=2,class=CODE,delta=1
   187                           	psect	text165,global,reloc=4,class=CODE,delta=1
   188                           	psect	text166,global,reloc=4,class=CODE,delta=1
   189                           	psect	text167,global,reloc=2,class=CODE,delta=1
   190                           	psect	text168,global,reloc=2,class=CODE,delta=1
   191                           	psect	text169,global,reloc=2,class=CODE,delta=1
   192                           	psect	text170,global,reloc=4,class=CODE,delta=1
   193                           	psect	text171,global,reloc=4,class=CODE,delta=1
   194                           	psect	text172,global,reloc=2,class=CODE,delta=1
   195                           	psect	text173,global,reloc=4,class=CODE,delta=1
   196                           	psect	text174,global,reloc=2,class=CODE,delta=1
   197                           	psect	text175,global,reloc=4,class=CODE,delta=1
   198                           	psect	text176,global,reloc=2,class=CODE,delta=1
   199                           	psect	text177,global,reloc=4,class=CODE,delta=1
   200                           	psect	text178,global,reloc=2,class=CODE,delta=1
   201                           	psect	text179,global,reloc=2,class=CODE,delta=1
   202                           	psect	text180,global,reloc=4,class=CODE,delta=1
   203                           	psect	text181,global,reloc=4,class=CODE,delta=1
   204                           	psect	text182,global,reloc=4,class=CODE,delta=1
   205                           	psect	text183,global,reloc=4,class=CODE,delta=1
   206                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   207                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   208                           	psect	text184,global,reloc=4,class=CODE,delta=1
   209                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   210                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   211  0000                     
   212                           ; Version 2.10
   213                           ; Generated 31/07/2019 GMT
   214                           ; 
   215                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   216                           ; All rights reserved.
   217                           ; 
   218                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   219                           ; 
   220                           ; Redistribution and use in source and binary forms, with or without modification, are
   221                           ; permitted provided that the following conditions are met:
   222                           ; 
   223                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   224                           ;        conditions and the following disclaimer.
   225                           ; 
   226                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   227                           ;        of conditions and the following disclaimer in the documentation and/or other
   228                           ;        materials provided with the distribution.
   229                           ; 
   230                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   231                           ;        software without specific prior written permission.
   232                           ; 
   233                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   234                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   235                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   236                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   237                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   238                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   239                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   240                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   241                           ; 
   242                           ; 
   243                           ; Code-generator required, PIC18F57K42 Definitions
   244                           ; 
   245                           ; SFR Addresses
   246  0000                     
   247 ;;_main$3778	offset	0
   248 ;;_main$3774	offset	2
   249 ;;_esr_temp	offset	4
   250 ;;_i_esr	offset	8
   251 ;;_shape	offset	10
   252 ;;_inp_index	offset	11
   253 ;;_k	offset	12
   254 ;;_j	offset	13
   255 ;;_i	offset	14
   256 ;;_mode	offset	15
   257 ;;_i_ror	offset	16
   258 ;;_s	offset=-2 (param)
   259 ;;_c	offset	0
   260 ;;_shape	offset=-1 (param)
   261 ;;_reset	offset=-2 (param)
   262 ;;_voltage	offset=-4 (param)
   263 ;;_voltage	offset=-4 (param)
   264 ;;_voltage	offset=-4 (param)
   265 ;;_set	offset=-1 (param)
   266 ;;_data	offset=-1 (param)
   267 ;;_cmd	offset=-1 (param)
   268 ;;_cmd	offset=-1 (param)
   269 ;;_data	offset=-1 (param)
   270 ;;__this	offset=-2 (param)
   271 ;;_soc	offset	0
   272 ;;_slot	offset	2
   273 ;;_cvoltage	offset=-4 (param)
   274 ;;_h	offset=-2 (param)
   275 ;;_h	offset=-2 (param)
   276 ;;_i	offset=-1 (param)
   277 ;;_fsm	offset=-1 (param)
   278 ;;_channel	offset=-1 (param)
   279 ;;_mode	offset=-1 (param)
   280 ;;_mode	offset=-1 (param)
   281 ;;_cmd	offset=-1 (param)
   282 ;;_i	offset	0
   283 ;;_h	offset=-2 (param)
   284 ;;_flipper	offset=-1 (param)
   285 ;;_f	offset	0
   286 ;;_ap	offset	6
   287 ;;_s	offset=-3 (param)
   288 ;;_fmt	offset=-5 (param)
   289 ;;_line	offset=-1 (param)
   290 ;;_vterm	offset=-2 (param)
   291 ;;_numMilliseconds	offset=-2 (param)
   292 ;;_vterm	offset=-1 (param)
   293 ;;_row	offset	0
   294 ;;_r	offset=-1 (param)
   295 ;;_c	offset=-2 (param)
   296 ;;_strPtr	offset=-4 (param)
   297 ;;_strPtr	offset=-1 (param)
   298 ;;_delay	offset=-4 (param)
   299 ;;_strPtr	offset=-1 (param)
   300 ;;_strPtr	offset=-2 (param)
   301 ;;__this	offset=-2 (param)
   302 ;;_clearBuffer	offset=-3 (param)
   303 ;;_s	offset	0
   304 ;;_k	offset	2
   305 ;;_dest	offset=-2 (param)
   306 ;;_c	offset=-4 (param)
   307 ;;_n	offset=-6 (param)
   308 ;;_ap	offset	0
   309 ;;_fmt	offset=-3 (param)
   310 ;;_cfmt	offset	0
   311 ;;_fp	offset=-2 (param)
   312 ;;_fmt	offset=-4 (param)
   313 ;;_ap	offset=-6 (param)
   314 ;;_vfpfcnvrt$5879	offset	0
   315 ;;_vfpfcnvrt$5890	offset	2
   316 ;;_vfpfcnvrt$5878	offset	4
   317 ;;_llu	offset	6
   318 ;;_ll	offset	14
   319 ;;_f	offset	22
   320 ;;_ct	offset	26
   321 ;;_cp	offset	29
   322 ;;_c	offset	31
   323 ;;_fp	offset=-2 (param)
   324 ;;_fmt	offset=-4 (param)
   325 ;;_ap	offset=-6 (param)
   326 ;;_xtoa$5864	offset	0
   327 ;;_xtoa$5863	offset	2
   328 ;;_n	offset	4
   329 ;;_c	offset	12
   330 ;;_i	offset	14
   331 ;;_w	offset	16
   332 ;;_p	offset	18
   333 ;;_fp	offset=-2 (param)
   334 ;;_d	offset=-10 (param)
   335 ;;_x	offset=-11 (param)
   336 ;;_toupper$6670	offset	0
   337 ;;_c	offset=-2 (param)
   338 ;;_c	offset=-2 (param)
   339 ;;_c	offset=-2 (param)
   340 ;;_n	offset	0
   341 ;;_i	offset	8
   342 ;;_w	offset	10
   343 ;;_p	offset	12
   344 ;;_fp	offset=-2 (param)
   345 ;;_d	offset=-10 (param)
   346 ;;_counter	offset	0
   347 ;;_dividend	offset=-8 (param)
   348 ;;_divisor	offset=-16 (param)
   349 ;;_quotient	offset	0
   350 ;;_counter	offset	8
   351 ;;_dividend	offset=-8 (param)
   352 ;;_divisor	offset=-16 (param)
   353 ;;_r	offset	0
   354 ;;_l	offset	2
   355 ;;__l	offset=-2 (param)
   356 ;;__r	offset=-4 (param)
   357 ;;_n	offset=-6 (param)
   358 ;;_nuls	offset	0
   359 ;;_l	offset	7
   360 ;;_p	offset	9
   361 ;;_cp	offset	11
   362 ;;_w	offset	13
   363 ;;_i	offset	15
   364 ;;_fp	offset=-2 (param)
   365 ;;_s	offset=-4 (param)
   366 ;;_efgtoa$5836	offset	0
   367 ;;_efgtoa$5835	offset	2
   368 ;;_efgtoa$5834	offset	4
   369 ;;_efgtoa$5830	offset	6
   370 ;;_efgtoa$5826	offset	8
   371 ;;_efgtoa$5825	offset	10
   372 ;;_u	offset	12
   373 ;;_g	offset	16
   374 ;;_l	offset	20
   375 ;;_h	offset	24
   376 ;;_ou	offset	28
   377 ;;_n	offset	32
   378 ;;_e	offset	34
   379 ;;_i	offset	36
   380 ;;_w	offset	38
   381 ;;_p	offset	40
   382 ;;_sign	offset	42
   383 ;;_d	offset	44
   384 ;;_ne	offset	46
   385 ;;_m	offset	48
   386 ;;_pp	offset	50
   387 ;;_t	offset	52
   388 ;;_mode	offset	54
   389 ;;_nmode	offset	55
   390 ;;_fp	offset=-2 (param)
   391 ;;_f	offset=-6 (param)
   392 ;;_c	offset=-7 (param)
   393 ;;_tolower$6655	offset	0
   394 ;;_c	offset=-2 (param)
   395 ;;_c	offset=-2 (param)
   396 ;;_d	offset	0
   397 ;;_s	offset	2
   398 ;;_dest	offset=-2 (param)
   399 ;;_src	offset=-4 (param)
   400 ;;_u	offset	0
   401 ;;_m	offset	4
   402 ;;_e	offset	8
   403 ;;_x	offset=-4 (param)
   404 ;;_u	offset	0
   405 ;;_e	offset	4
   406 ;;_x	offset=-4 (param)
   407 ;;_exp1	offset	0
   408 ;;_sign1	offset	1
   409 ;;_f1	offset=-4 (param)
   410 ;;_f1	offset=-4 (param)
   411 ;;_ff1	offset=-4 (param)
   412 ;;_ff2	offset=-8 (param)
   413 ;;_sign	offset	0
   414 ;;_counter	offset	1
   415 ;;_dividend	offset=-2 (param)
   416 ;;_divisor	offset=-4 (param)
   417 ;;_quotient	offset	0
   418 ;;_sign	offset	2
   419 ;;_counter	offset	3
   420 ;;_dividend	offset=-2 (param)
   421 ;;_divisor	offset=-4 (param)
   422 ;;_dtoa$5802	offset	0
   423 ;;_n	offset	2
   424 ;;_i	offset	10
   425 ;;_s	offset	12
   426 ;;_w	offset	14
   427 ;;_p	offset	16
   428 ;;_fp	offset=-2 (param)
   429 ;;_d	offset=-10 (param)
   430 ;;_a	offset=-2 (param)
   431 ;;_sign	offset	0
   432 ;;_counter	offset	1
   433 ;;_dividend	offset=-8 (param)
   434 ;;_divisor	offset=-16 (param)
   435 ;;_quotient	offset	0
   436 ;;_sign	offset	8
   437 ;;_counter	offset	9
   438 ;;_dividend	offset=-8 (param)
   439 ;;_divisor	offset=-16 (param)
   440 ;;_w	offset	0
   441 ;;_fp	offset=-2 (param)
   442 ;;_c	offset=-3 (param)
   443 ;;_w	offset	0
   444 ;;_i	offset	2
   445 ;;_fp	offset=-2 (param)
   446 ;;_buf	offset=-4 (param)
   447 ;;_p	offset=-6 (param)
   448 ;;_a	offset	0
   449 ;;_s	offset=-2 (param)
   450 ;;_i	offset	0
   451 ;;_c	offset	2
   452 ;;_s	offset=-2 (param)
   453 ;;_fp	offset=-4 (param)
   454 ;;_c	offset=-2 (param)
   455 ;;_fp	offset=-4 (param)
   456 ;;_c	offset=-1 (param)
   457 ;;__this	offset=-2 (param)
   458 ;;_c	offset=-3 (param)
   459 ;;_atoi$6386	offset	0
   460 ;;_atoi$6384	offset	2
   461 ;;_atoi$6385	offset	4
   462 ;;_n	offset	5
   463 ;;_neg	offset	7
   464 ;;_s	offset=-2 (param)
   465 ;;_isspace$6435	offset	0
   466 ;;_c	offset=-2 (param)
   467 ;;_c	offset=-2 (param)
   468 ;;_vterm	offset=-1 (param)
   469 ;;_new_response_info	offset=-1 (param)
   470 ;;_new_response_info	offset=-1 (param)
   471 ;;_level	offset=-2 (param)
   472 ;;_dutyValue	offset=-2 (param)
   473 ;;_timer	offset=-1 (param)
   474 ;;_timer	offset=-1 (param)
   475 ;;_count	offset=-3 (param)
   476 ;;_h	offset=-2 (param)
   477 ;;_u	offset	0
   478 ;;_x	offset=-4 (param)
   479 ;;_chan	offset=-1 (param)
   480 ;;_to_what	offset=-2 (param)
   481 ;;_u	offset	0
   482 ;;_s	offset=-2 (param)
   483 ;;_index	offset=-1 (param)
   484 ;;_arg	offset	0
   485 ;;_exp	offset	4
   486 ;;_sign	offset=-1 (param)
   487 ;;_val	offset=-5 (param)
   488 ;;_grs	offset	0
   489 ;;_rem	offset	4
   490 ;;_new_exp	offset	8
   491 ;;_aexp	offset	10
   492 ;;_bexp	offset	11
   493 ;;_sign	offset	12
   494 ;;_b	offset=-4 (param)
   495 ;;_a	offset=-8 (param)
   496 ;;_ff1	offset=-4 (param)
   497 ;;_ff2	offset=-8 (param)
   498 ;;_lp_speed	offset	0
   499 ;;_new	offset=-4 (param)
   500 ;;_bn	offset=-5 (param)
   501 ;;_slow	offset=-6 (param)
   502 ;;_b	offset=-4 (param)
   503 ;;_a	offset=-8 (param)
   504 ;;_grs	offset	0
   505 ;;_bexp	offset	1
   506 ;;_aexp	offset	2
   507 ;;_signs	offset	3
   508 ;;_b	offset=-4 (param)
   509 ;;_a	offset=-8 (param)
   510 ;;_prod	offset	0
   511 ;;_grs	offset	4
   512 ;;_temp	offset	8
   513 ;;_bexp	offset	10
   514 ;;_aexp	offset	11
   515 ;;_sign	offset	12
   516 ;;_b	offset=-4 (param)
   517 ;;_a	offset=-8 (param)
   518 ;;_InterruptHandler	offset=-3 (param)
   519 ;;_InterruptHandler	offset=-3 (param)
   520 ;;_InterruptHandler	offset=-3 (param)
   521 ;;_InterruptHandler	offset=-3 (param)
   522 ;;_InterruptHandler	offset=-3 (param)
   523 ;;_InterruptHandler	offset=-3 (param)
   524 ;;_state	offset	0
   525 ;;_InterruptHandler	offset=-3 (param)
   526 ;;_InterruptHandler	offset=-3 (param)
   527 ;;_InterruptHandler	offset=-3 (param)
   528 ;;_InterruptHandler	offset=-3 (param)
   529 ;;_i	offset	0
   530 ;;_sw_value	offset	1
   531 ;;_timerVal	offset=-2 (param)
   532 ;;_light	offset	0
   533 ;;_mode	offset=-1 (param)
   534 ;;_chan	offset=-1 (param)
   535 ;;_to_what	offset=-2 (param)
   536 ;;_u	offset	0
   537 ;;_s	offset=-2 (param)
   538 ;;_index	offset=-1 (param)
   539 ;;_arg	offset	0
   540 ;;_exp	offset	4
   541 ;;_sign	offset=-1 (param)
   542 ;;_val	offset=-5 (param)
   543 ;;_b	offset=-4 (param)
   544 ;;_a	offset=-8 (param)
   545 ;;_grs	offset	0
   546 ;;_bexp	offset	1
   547 ;;_aexp	offset	2
   548 ;;_signs	offset	3
   549 ;;_b	offset=-4 (param)
   550 ;;_a	offset=-8 (param)
   551 ;;_prod	offset	0
   552 ;;_grs	offset	4
   553 ;;_temp	offset	8
   554 ;;_bexp	offset	10
   555 ;;_aexp	offset	11
   556 ;;_sign	offset	12
   557 ;;_b	offset=-4 (param)
   558 ;;_a	offset=-8 (param)
   559 ;;_grs	offset	0
   560 ;;_rem	offset	4
   561 ;;_new_exp	offset	8
   562 ;;_aexp	offset	10
   563 ;;_bexp	offset	11
   564 ;;_sign	offset	12
   565 ;;_b	offset=-4 (param)
   566 ;;_a	offset=-8 (param)
   567 ;;_ff1	offset=-4 (param)
   568 ;;_ff2	offset=-8 (param)
   569 ;;_timerVal	offset=-2 (param)
   570 ;;_adj	offset	0
   571 ;;_log_ptr	offset	4
   572 ;;_f	offset	0
   573 ;;_ap	offset	6
   574 ;;_s	offset=-3 (param)
   575 ;;_fmt	offset=-5 (param)
   576 ;;_cfmt	offset	0
   577 ;;_fp	offset=-2 (param)
   578 ;;_fmt	offset=-4 (param)
   579 ;;_ap	offset=-6 (param)
   580 ;;_vfpfcnvrt$5879	offset	0
   581 ;;_vfpfcnvrt$5890	offset	2
   582 ;;_vfpfcnvrt$5878	offset	4
   583 ;;_llu	offset	6
   584 ;;_ll	offset	14
   585 ;;_f	offset	22
   586 ;;_ct	offset	26
   587 ;;_cp	offset	29
   588 ;;_c	offset	31
   589 ;;_fp	offset=-2 (param)
   590 ;;_fmt	offset=-4 (param)
   591 ;;_ap	offset=-6 (param)
   592 ;;_xtoa$5864	offset	0
   593 ;;_xtoa$5863	offset	2
   594 ;;_n	offset	4
   595 ;;_c	offset	12
   596 ;;_i	offset	14
   597 ;;_w	offset	16
   598 ;;_p	offset	18
   599 ;;_fp	offset=-2 (param)
   600 ;;_d	offset=-10 (param)
   601 ;;_x	offset=-11 (param)
   602 ;;_toupper$6670	offset	0
   603 ;;_c	offset=-2 (param)
   604 ;;_c	offset=-2 (param)
   605 ;;_c	offset=-2 (param)
   606 ;;_n	offset	0
   607 ;;_i	offset	8
   608 ;;_w	offset	10
   609 ;;_p	offset	12
   610 ;;_fp	offset=-2 (param)
   611 ;;_d	offset=-10 (param)
   612 ;;_counter	offset	0
   613 ;;_dividend	offset=-8 (param)
   614 ;;_divisor	offset=-16 (param)
   615 ;;_quotient	offset	0
   616 ;;_counter	offset	8
   617 ;;_dividend	offset=-8 (param)
   618 ;;_divisor	offset=-16 (param)
   619 ;;_r	offset	0
   620 ;;_l	offset	2
   621 ;;__l	offset=-2 (param)
   622 ;;__r	offset=-4 (param)
   623 ;;_n	offset=-6 (param)
   624 ;;_nuls	offset	0
   625 ;;_l	offset	7
   626 ;;_p	offset	9
   627 ;;_cp	offset	11
   628 ;;_w	offset	13
   629 ;;_i	offset	15
   630 ;;_fp	offset=-2 (param)
   631 ;;_s	offset=-4 (param)
   632 ;;_efgtoa$5836	offset	0
   633 ;;_efgtoa$5835	offset	2
   634 ;;_efgtoa$5834	offset	4
   635 ;;_efgtoa$5830	offset	6
   636 ;;_efgtoa$5826	offset	8
   637 ;;_efgtoa$5825	offset	10
   638 ;;_u	offset	12
   639 ;;_g	offset	16
   640 ;;_l	offset	20
   641 ;;_h	offset	24
   642 ;;_ou	offset	28
   643 ;;_n	offset	32
   644 ;;_e	offset	34
   645 ;;_i	offset	36
   646 ;;_w	offset	38
   647 ;;_p	offset	40
   648 ;;_sign	offset	42
   649 ;;_d	offset	44
   650 ;;_ne	offset	46
   651 ;;_m	offset	48
   652 ;;_pp	offset	50
   653 ;;_t	offset	52
   654 ;;_mode	offset	54
   655 ;;_nmode	offset	55
   656 ;;_fp	offset=-2 (param)
   657 ;;_f	offset=-6 (param)
   658 ;;_c	offset=-7 (param)
   659 ;;_tolower$6655	offset	0
   660 ;;_c	offset=-2 (param)
   661 ;;_c	offset=-2 (param)
   662 ;;_d	offset	0
   663 ;;_s	offset	2
   664 ;;_dest	offset=-2 (param)
   665 ;;_src	offset=-4 (param)
   666 ;;_u	offset	0
   667 ;;_m	offset	4
   668 ;;_e	offset	8
   669 ;;_x	offset=-4 (param)
   670 ;;_u	offset	0
   671 ;;_e	offset	4
   672 ;;_x	offset=-4 (param)
   673 ;;_exp1	offset	0
   674 ;;_sign1	offset	1
   675 ;;_f1	offset=-4 (param)
   676 ;;_f1	offset=-4 (param)
   677 ;;_ff1	offset=-4 (param)
   678 ;;_ff2	offset=-8 (param)
   679 ;;_sign	offset	0
   680 ;;_counter	offset	1
   681 ;;_dividend	offset=-2 (param)
   682 ;;_divisor	offset=-4 (param)
   683 ;;_quotient	offset	0
   684 ;;_sign	offset	2
   685 ;;_counter	offset	3
   686 ;;_dividend	offset=-2 (param)
   687 ;;_divisor	offset=-4 (param)
   688 ;;_dtoa$5802	offset	0
   689 ;;_n	offset	2
   690 ;;_i	offset	10
   691 ;;_s	offset	12
   692 ;;_w	offset	14
   693 ;;_p	offset	16
   694 ;;_fp	offset=-2 (param)
   695 ;;_d	offset=-10 (param)
   696 ;;_a	offset=-2 (param)
   697 ;;_sign	offset	0
   698 ;;_counter	offset	1
   699 ;;_dividend	offset=-8 (param)
   700 ;;_divisor	offset=-16 (param)
   701 ;;_quotient	offset	0
   702 ;;_sign	offset	8
   703 ;;_counter	offset	9
   704 ;;_dividend	offset=-8 (param)
   705 ;;_divisor	offset=-16 (param)
   706 ;;_w	offset	0
   707 ;;_fp	offset=-2 (param)
   708 ;;_c	offset=-3 (param)
   709 ;;_w	offset	0
   710 ;;_i	offset	2
   711 ;;_fp	offset=-2 (param)
   712 ;;_buf	offset=-4 (param)
   713 ;;_p	offset=-6 (param)
   714 ;;_a	offset	0
   715 ;;_s	offset=-2 (param)
   716 ;;_i	offset	0
   717 ;;_c	offset	2
   718 ;;_s	offset=-2 (param)
   719 ;;_fp	offset=-4 (param)
   720 ;;_c	offset=-2 (param)
   721 ;;_fp	offset=-4 (param)
   722 ;;_c	offset=-1 (param)
   723 ;;__this	offset=-2 (param)
   724 ;;_c	offset=-3 (param)
   725 ;;_atoi$6386	offset	0
   726 ;;_atoi$6384	offset	2
   727 ;;_atoi$6385	offset	4
   728 ;;_n	offset	5
   729 ;;_neg	offset	7
   730 ;;_s	offset=-2 (param)
   731 ;;_isspace$6435	offset	0
   732 ;;_c	offset=-2 (param)
   733 ;;_c	offset=-2 (param)
   734 ;;_dsize	offset=-2 (param)
   735 ;;_u	offset	0
   736 ;;_x	offset=-4 (param)
   737 ;;_f1p	offset=-2 (param)
   738 ;;_f2	offset=-6 (param)
   739 ;;_timer	offset=-1 (param)
   740 ;;_count	offset=-3 (param)
   741 ;;_channel	offset=-1 (param)
   742 ;;_i	offset	0
   743                           
   744                           	psect	idataBIGRAM
   745  016B54                     __pidataBIGRAM:
   746                           	opt callstack 0
   747                           
   748                           ;initializer for _port_data
   749  016B54  FF                 	db	255
   750  016B55  00                 	db	0
   751  016B56  FF                 	db	255
   752  016B57  00                 	db	0
   753  016B58  FF                 	db	255
   754  016B59  00                 	db	0
   755  016B5A  FF                 	db	255
   756  016B5B  00                 	db	0
   757  016B5C  FF                 	db	255
   758  016B5D  00                 	db	0
   759  016B5E  FF                 	db	255
   760  016B5F  00                 	db	0
   761  016B60  FF                 	db	255
   762  016B61  00                 	db	0
   763  016B62  FF                 	db	255
   764  016B63  00                 	db	0
   765  016B64  00                 	db	0
   766  016B65  00                 	db	0
   767  016B66  00                 	db	0
   768  016B67  00                 	db	0
   769  016B68  00                 	db	0
   770  016B69  00                 	db	0
   771  016B6A  00                 	db	0
   772  016B6B  00                 	db	0
   773  016B6C  00                 	db	0
   774  016B6D  00                 	db	0
   775  016B6E  00                 	db	0
   776  016B6F  00                 	db	0
   777  016B70  00                 	db	0
   778  016B71  00                 	db	0
   779  016B72  00                 	db	0
   780  016B73  00                 	db	0
   781  016B74  00                 	db	0
   782  016B75  00                 	db	0
   783  016B76  00                 	db	0
   784  016B77  00                 	db	0
   785  016B78  00                 	db	0
   786  016B79  00                 	db	0
   787  016B7A  00                 	db	0
   788  016B7B  00                 	db	0
   789  016B7C  00                 	db	0
   790  016B7D  00                 	db	0
   791  016B7E  00                 	db	0
   792  016B7F  00                 	db	0
   793  016B80  00                 	db	0
   794  016B81  00                 	db	0
   795  016B82  00                 	db	0
   796  016B83  00                 	db	0
   797  016B84  00                 	db	0
   798  016B85  00                 	db	0
   799  016B86  00                 	db	0
   800  016B87  00                 	db	0
   801  016B88  00                 	db	0
   802  016B89  00                 	db	0
   803  016B8A  00                 	db	0
   804  016B8B  00                 	db	0
   805  016B8C  00                 	db	0
   806  016B8D  00                 	db	0
   807  016B8E  00                 	db	0
   808  016B8F  00                 	db	0
   809  016B90  00                 	db	0
   810  016B91  00                 	db	0
   811  016B92  00                 	db	0
   812  016B93  00                 	db	0
   813  016B94  00                 	db	0
   814  016B95  00                 	db	0
   815  016B96  00                 	db	0
   816  016B97  00                 	db	0
   817  016B98  00                 	db	0
   818  016B99  00                 	db	0
   819  016B9A  00                 	db	0
   820  016B9B  00                 	db	0
   821  016B9C  00                 	db	0
   822  016B9D  00                 	db	0
   823  016B9E  00                 	db	0
   824  016B9F  00                 	db	0
   825  016BA0  00                 	db	0
   826  016BA1  00                 	db	0
   827  016BA2  00                 	db	0
   828  016BA3  00                 	db	0
   829  016BA4  00                 	db	0
   830  016BA5  00                 	db	0
   831  016BA6  00                 	db	0
   832  016BA7  00                 	db	0
   833  016BA8  00                 	db	0
   834  016BA9  00                 	db	0
   835  016BAA  00                 	db	0
   836  016BAB  00                 	db	0
   837  016BAC  00                 	db	0
   838  016BAD  00                 	db	0
   839  016BAE  00                 	db	0
   840  016BAF  00                 	db	0
   841  016BB0  00                 	db	0
   842  016BB1  00                 	db	0
   843  016BB2  00                 	db	0
   844  016BB3  00                 	db	0
   845  016BB4  00                 	db	0
   846  016BB5  00                 	db	0
   847  016BB6  00                 	db	0
   848  016BB7  00                 	db	0
   849  016BB8  00                 	db	0
   850  016BB9  00                 	db	0
   851  016BBA  00                 	db	0
   852  016BBB  00                 	db	0
   853  016BBC  00                 	db	0
   854  016BBD  00                 	db	0
   855  016BBE  00                 	db	0
   856  016BBF  00                 	db	0
   857  016BC0  00                 	db	0
   858  016BC1  00                 	db	0
   859  016BC2  00                 	db	0
   860  016BC3  00                 	db	0
   861  016BC4  00                 	db	0
   862  016BC5  00                 	db	0
   863  016BC6  00                 	db	0
   864  016BC7  00                 	db	0
   865  016BC8  00                 	db	0
   866  016BC9  00                 	db	0
   867  016BCA  00                 	db	0
   868  016BCB  00                 	db	0
   869  016BCC  00                 	db	0
   870  016BCD  00                 	db	0
   871  016BCE  00                 	db	0
   872  016BCF  00                 	db	0
   873  016BD0  00                 	db	0
   874  016BD1  00                 	db	0
   875  016BD2  00                 	db	0
   876  016BD3  00                 	db	0
   877  016BD4  00                 	db	0
   878  016BD5  00                 	db	0
   879  016BD6  00                 	db	0
   880  016BD7  00                 	db	0
   881  016BD8  00                 	db	0
   882  016BD9  00                 	db	0
   883  016BDA  00                 	db	0
   884  016BDB  00                 	db	0
   885  016BDC  00                 	db	0
   886  016BDD  00                 	db	0
   887  016BDE  00                 	db	0
   888  016BDF  00                 	db	0
   889  016BE0  00                 	db	0
   890  016BE1  00                 	db	0
   891  016BE2  00                 	db	0
   892  016BE3  00                 	db	0
   893  016BE4  00                 	db	0
   894  016BE5  00                 	db	0
   895  016BE6  00                 	db	0
   896  016BE7  00                 	db	0
   897  016BE8  00                 	db	0
   898  016BE9  00                 	db	0
   899  016BEA  00                 	db	0
   900  016BEB  00                 	db	0
   901  016BEC  00                 	db	0
   902  016BED  00                 	db	0
   903  016BEE  00                 	db	0
   904  016BEF  00                 	db	0
   905  016BF0  00                 	db	0
   906  016BF1  00                 	db	0
   907  016BF2  00                 	db	0
   908  016BF3  00                 	db	0
   909  016BF4  00                 	db	0
   910  016BF5  00                 	db	0
   911  016BF6  00                 	db	0
   912  016BF7  00                 	db	0
   913  016BF8  00                 	db	0
   914  016BF9  00                 	db	0
   915  016BFA  00                 	db	0
   916  016BFB  00                 	db	0
   917  016BFC  00                 	db	0
   918  016BFD  00                 	db	0
   919  016BFE  00                 	db	0
   920  016BFF  00                 	db	0
   921  016C00  00                 	db	0
   922  016C01  00                 	db	0
   923  016C02  00                 	db	0
   924  016C03  00                 	db	0
   925  016C04  00                 	db	0
   926  016C05  00                 	db	0
   927  016C06  00                 	db	0
   928  016C07  00                 	db	0
   929  016C08  00                 	db	0
   930  016C09  00                 	db	0
   931  016C0A  00                 	db	0
   932  016C0B  00                 	db	0
   933  016C0C  00                 	db	0
   934  016C0D  00                 	db	0
   935  016C0E  00                 	db	0
   936  016C0F  00                 	db	0
   937  016C10  00                 	db	0
   938  016C11  00                 	db	0
   939  016C12  00                 	db	0
   940  016C13  00                 	db	0
   941  016C14  00                 	db	0
   942  016C15  00                 	db	0
   943  016C16  00                 	db	0
   944  016C17  00                 	db	0
   945  016C18  00                 	db	0
   946  016C19  00                 	db	0
   947  016C1A  00                 	db	0
   948  016C1B  00                 	db	0
   949  016C1C  00                 	db	0
   950  016C1D  00                 	db	0
   951  016C1E  00                 	db	0
   952  016C1F  00                 	db	0
   953  016C20  00                 	db	0
   954  016C21  00                 	db	0
   955  016C22  00                 	db	0
   956  016C23  00                 	db	0
   957  016C24  00                 	db	0
   958  016C25  00                 	db	0
   959  016C26  00                 	db	0
   960  016C27  00                 	db	0
   961  016C28  00                 	db	0
   962  016C29  00                 	db	0
   963  016C2A  00                 	db	0
   964  016C2B  00                 	db	0
   965  016C2C  00                 	db	0
   966  016C2D  00                 	db	0
   967  016C2E  00                 	db	0
   968  016C2F  00                 	db	0
   969  016C30  00                 	db	0
   970  016C31  00                 	db	0
   971  016C32  00                 	db	0
   972  016C33  00                 	db	0
   973  016C34  00                 	db	0
   974  016C35  00                 	db	0
   975  016C36  00                 	db	0
   976  016C37  00                 	db	0
   977  016C38  00                 	db	0
   978  016C39  00                 	db	0
   979  016C3A  00                 	db	0
   980  016C3B  00                 	db	0
   981  016C3C  00                 	db	0
   982  016C3D  00                 	db	0
   983  016C3E  00                 	db	0
   984  016C3F  00                 	db	0
   985  016C40  00                 	db	0
   986  016C41  00                 	db	0
   987  016C42  00                 	db	0
   988  016C43  00                 	db	0
   989  016C44  00                 	db	0
   990  016C45  00                 	db	0
   991  016C46  00                 	db	0
   992  016C47  00                 	db	0
   993  016C48  00                 	db	0
   994  016C49  00                 	db	0
   995  016C4A  00                 	db	0
   996  016C4B  00                 	db	0
   997  016C4C  00                 	db	0
   998  016C4D  00                 	db	0
   999  016C4E  00                 	db	0
  1000  016C4F  00                 	db	0
  1001  016C50  00                 	db	0
  1002  016C51  00                 	db	0
  1003  016C52  00                 	db	0
  1004  016C53  00                 	db	0
  1005  016C54  00                 	db	0
  1006  016C55  00                 	db	0
  1007  016C56  00                 	db	0
  1008  016C57  00                 	db	0
  1009  016C58  00                 	db	0
  1010  016C59  00                 	db	0
  1011  016C5A  00                 	db	0
  1012  016C5B  00                 	db	0
  1013  016C5C  00                 	db	0
  1014  016C5D  00                 	db	0
  1015  016C5E  00                 	db	0
  1016  016C5F  00                 	db	0
  1017  016C60  00                 	db	0
  1018  016C61  00                 	db	0
  1019  016C62  00                 	db	0
  1020  016C63  00                 	db	0
  1021  016C64  00                 	db	0
  1022  016C65  00                 	db	0
  1023  016C66  00                 	db	0
  1024  016C67  00                 	db	0
  1025  016C68  00                 	db	0
  1026  016C69  00                 	db	0
  1027  016C6A  00                 	db	0
  1028  016C6B  00                 	db	0
  1029  016C6C  00                 	db	0
  1030  016C6D  00                 	db	0
  1031  016C6E  00                 	db	0
  1032  016C6F  00                 	db	0
  1033  016C70  00                 	db	0
  1034  016C71  00                 	db	0
  1035  016C72  00                 	db	0
  1036  016C73  00                 	db	0
  1037  016C74  00                 	db	0
  1038  016C75  00                 	db	0
  1039  016C76  00                 	db	0
  1040  016C77  00                 	db	0
  1041  016C78  00                 	db	0
  1042  016C79  00                 	db	0
  1043  016C7A  00                 	db	0
  1044  016C7B  00                 	db	0
  1045  016C7C  00                 	db	0
  1046  016C7D  00                 	db	0
  1047  016C7E  00                 	db	0
  1048  016C7F  00                 	db	0
  1049  016C80  00                 	db	0
  1050  016C81  00                 	db	0
  1051  016C82  00                 	db	0
  1052  016C83  00                 	db	0
  1053  016C84  00                 	db	0
  1054  016C85  00                 	db	0
  1055  016C86  00                 	db	0
  1056  016C87  00                 	db	0
  1057  016C88  00                 	db	0
  1058  016C89  00                 	db	0
  1059  016C8A  00                 	db	0
  1060  016C8B  00                 	db	0
  1061  016C8C  00                 	db	0
  1062  016C8D  00                 	db	0
  1063  016C8E  00                 	db	0
  1064  016C8F  00                 	db	0
  1065  016C90  00                 	db	0
  1066  016C91  00                 	db	0
  1067  016C92  00                 	db	0
  1068  016C93  00                 	db	0
  1069  016C94  00                 	db	0
  1070  016C95  00                 	db	0
  1071  016C96  00                 	db	0
  1072  016C97  00                 	db	0
  1073  016C98  00                 	db	0
  1074  016C99  00                 	db	0
  1075  016C9A  00                 	db	0
  1076  016C9B  00                 	db	0
  1077  016C9C  00                 	db	0
  1078  016C9D  00                 	db	0
  1079  016C9E  00                 	db	0
  1080  016C9F  00                 	db	0
  1081  016CA0  00                 	db	0
  1082  016CA1  00                 	db	0
  1083  016CA2  00                 	db	0
  1084  016CA3  00                 	db	0
  1085  016CA4  00                 	db	0
  1086  016CA5  00                 	db	0
  1087  016CA6  00                 	db	0
  1088  016CA7  00                 	db	0
  1089  016CA8  00                 	db	0
  1090  016CA9  00                 	db	0
  1091  016CAA  00                 	db	0
  1092  016CAB  00                 	db	0
  1093  016CAC  00                 	db	0
  1094  016CAD  00                 	db	0
  1095  016CAE  00                 	db	0
  1096  016CAF  00                 	db	0
  1097  016CB0  00                 	db	0
  1098  016CB1  00                 	db	0
  1099  016CB2  00                 	db	0
  1100  016CB3  00                 	db	0
  1101  016CB4  00                 	db	0
  1102  016CB5  00                 	db	0
  1103  016CB6  00                 	db	0
  1104  016CB7  00                 	db	0
  1105  016CB8  00                 	db	0
  1106  016CB9  00                 	db	0
  1107  016CBA  00                 	db	0
  1108  016CBB  00                 	db	0
  1109  016CBC  00                 	db	0
  1110  016CBD  00                 	db	0
  1111  016CBE  00                 	db	0
  1112  016CBF  00                 	db	0
  1113  016CC0  00                 	db	0
  1114  016CC1  00                 	db	0
  1115  016CC2  00                 	db	0
  1116  016CC3  00                 	db	0
  1117  016CC4  00                 	db	0
  1118  016CC5  00                 	db	0
  1119  016CC6  00                 	db	0
  1120  016CC7  00                 	db	0
  1121  016CC8  00                 	db	0
  1122  016CC9  00                 	db	0
  1123  016CCA  00                 	db	0
  1124  016CCB  00                 	db	0
  1125  016CCC  00                 	db	0
  1126  016CCD  00                 	db	0
  1127  016CCE  00                 	db	0
  1128  016CCF  00                 	db	0
  1129  016CD0  00                 	db	0
  1130  016CD1  00                 	db	0
  1131  016CD2  00                 	db	0
  1132  016CD3  00                 	db	0
  1133  016CD4  00                 	db	0
  1134  016CD5  00                 	db	0
  1135  016CD6  00                 	db	0
  1136  016CD7  00                 	db	0
  1137  016CD8  00                 	db	0
  1138  016CD9  00                 	db	0
  1139  016CDA  00                 	db	0
  1140  016CDB  00                 	db	0
  1141  016CDC  00                 	db	0
  1142  016CDD  00                 	db	0
  1143  016CDE  00                 	db	0
  1144  016CDF  00                 	db	0
  1145  016CE0  00                 	db	0
  1146  016CE1  00                 	db	0
  1147  016CE2  00                 	db	0
  1148  016CE3  00                 	db	0
  1149  016CE4  00                 	db	0
  1150  016CE5  00                 	db	0
  1151  016CE6  00                 	db	0
  1152  016CE7  00                 	db	0
  1153  016CE8  00                 	db	0
  1154  016CE9  00                 	db	0
  1155  016CEA  00                 	db	0
  1156  016CEB  00                 	db	0
  1157  016CEC  00                 	db	0
  1158  016CED  00                 	db	0
  1159  016CEE  00                 	db	0
  1160  016CEF  00                 	db	0
  1161  016CF0  00                 	db	0
  1162  016CF1  00                 	db	0
  1163  016CF2  00                 	db	0
  1164  016CF3  00                 	db	0
  1165  016CF4  00                 	db	0
  1166  016CF5  00                 	db	0
  1167  016CF6  00                 	db	0
  1168  016CF7  00                 	db	0
  1169  016CF8  00                 	db	0
  1170  016CF9  00                 	db	0
  1171  016CFA  00                 	db	0
  1172  016CFB  00                 	db	0
  1173  016CFC  00                 	db	0
  1174  016CFD  00                 	db	0
  1175  016CFE  00                 	db	0
  1176  016CFF  00                 	db	0
  1177  016D00  00                 	db	0
  1178  016D01  00                 	db	0
  1179  016D02  00                 	db	0
  1180  016D03  00                 	db	0
  1181  016D04  00                 	db	0
  1182  016D05  00                 	db	0
  1183  016D06  00                 	db	0
  1184  016D07  00                 	db	0
  1185  016D08  00                 	db	0
  1186  016D09  00                 	db	0
  1187  016D0A  00                 	db	0
  1188  016D0B  00                 	db	0
  1189  016D0C  00                 	db	0
  1190  016D0D  00                 	db	0
  1191  016D0E  00                 	db	0
  1192  016D0F  00                 	db	0
  1193  016D10  00                 	db	0
  1194  016D11  00                 	db	0
  1195  016D12  00                 	db	0
  1196  016D13  00                 	db	0
  1197  016D14  00                 	db	0
  1198  016D15  00                 	db	0
  1199  016D16  00                 	db	0
  1200  016D17  00                 	db	0
  1201  016D18  00                 	db	0
  1202  016D19  00                 	db	0
  1203  016D1A  00                 	db	0
  1204  016D1B  00                 	db	0
  1205  016D1C  00                 	db	0
  1206  016D1D  00                 	db	0
  1207  016D1E  00                 	db	0
  1208  016D1F  00                 	db	0
  1209  016D20  00                 	db	0
  1210  016D21  00                 	db	0
  1211  016D22  00                 	db	0
  1212  016D23  00                 	db	0
  1213  016D24  00                 	db	0
  1214  016D25  00                 	db	0
  1215  016D26  00                 	db	0
  1216  016D27  00                 	db	0
  1217  016D28  00                 	db	0
  1218  016D29  00                 	db	0
  1219  016D2A  00                 	db	0
  1220  016D2B  00                 	db	0
  1221  016D2C  00                 	db	0
  1222  016D2D  00                 	db	0
  1223  016D2E  00                 	db	0
  1224  016D2F  00                 	db	0
  1225  016D30  00                 	db	0
  1226  016D31  00                 	db	0
  1227  016D32  00                 	db	0
  1228  016D33  00                 	db	0
  1229  016D34  00                 	db	0
  1230  016D35  00                 	db	0
  1231  016D36  00                 	db	0
  1232  016D37  00                 	db	0
  1233  016D38  00                 	db	0
  1234  016D39  00                 	db	0
  1235  016D3A  00                 	db	0
  1236  016D3B  00                 	db	0
  1237  016D3C  00                 	db	0
  1238  016D3D  00                 	db	0
  1239  016D3E  00                 	db	0
  1240  016D3F  00                 	db	0
  1241  016D40  00                 	db	0
  1242  016D41  00                 	db	0
  1243  016D42  00                 	db	0
  1244  016D43  00                 	db	0
  1245  016D44  00                 	db	0
  1246  016D45  00                 	db	0
  1247  016D46  00                 	db	0
  1248  016D47  00                 	db	0
  1249  016D48  00                 	db	0
  1250  016D49  00                 	db	0
  1251  016D4A  00                 	db	0
  1252  016D4B  00                 	db	0
  1253  016D4C  00                 	db	0
  1254  016D4D  00                 	db	0
  1255  016D4E  00                 	db	0
  1256  016D4F  00                 	db	0
  1257  016D50  00                 	db	0
  1258  016D51  00                 	db	0
  1259  016D52  00                 	db	0
  1260  016D53  00                 	db	0
  1261                           
  1262                           ;initializer for _C
  1263  016D54  0000               	dw	0
  1264  016D56  0000               	dw	0
  1265  016D58  0000               	dw	0
  1266  016D5A  0000               	dw	0
  1267  016D5C  0000               	dw	0
  1268  016D5E  0000               	dw	0
  1269  016D60  0000               	dw	0
  1270  016D62  0000               	dw	0
  1271  016D64  0000               	dw	0
  1272  016D66  0000               	dw	0
  1273  016D68  0000               	dw	0
  1274  016D6A  0000               	dw	0
  1275  016D6C  0000               	dw	0
  1276  016D6E  0000               	dw	0
  1277  016D70  0000               	dw	0
  1278  016D72  0000               	dw	0
  1279  016D74  0000               	dw	0
  1280  016D76  0000               	dw	0
  1281  016D78  0000               	dw	0
  1282  016D7A  0000               	dw	0
  1283  016D7C  0000               	dw	0
  1284  016D7E  0000               	dw	0
  1285  016D80  0000               	dw	0
  1286  016D82  0000               	dw	0
  1287  016D84  0000               	dw	0
  1288  016D86  0000               	dw	0
  1289  016D88  0000               	dw	0
  1290  016D8A  0000               	dw	0
  1291  016D8C  0000               	dw	0
  1292  016D8E  0000               	dw	0
  1293  016D90  0000               	dw	0
  1294  016D92  0000               	dw	0
  1295  016D94  0000               	dw	0
  1296  016D96  0000               	dw	0
  1297  016D98  0000               	dw	0
  1298  016D9A  0000               	dw	0
  1299  016D9C  0000               	dw	0
  1300  016D9E  0000               	dw	0
  1301  016DA0  0000               	dw	0
  1302  016DA2  0000               	dw	0
  1303  016DA4  0000               	dw	0
  1304  016DA6  0000               	dw	0
  1305  016DA8  0000               	dw	0
  1306  016DAA  0000               	dw	0
  1307  016DAC  0000               	dw	0
  1308  016DAE  0000               	dw	0
  1309  016DB0  0000               	dw	0
  1310  016DB2  0000               	dw	0
  1311  016DB4  0000               	dw	0
  1312  016DB6  0000               	dw	0
  1313  016DB8  0000               	dw	0
  1314  016DBA  0000               	dw	0
  1315  016DBC  0000               	dw	0
  1316  016DBE  0000               	dw	0
  1317  016DC0  0000               	dw	0
  1318  016DC2  0000               	dw	0
  1319  016DC4  0000               	dw	0
  1320  016DC6  0000               	dw	0
  1321  016DC8  0000               	dw	0
  1322  016DCA  0000               	dw	0
  1323  016DCC  0000               	dw	0
  1324  016DCE  0000               	dw	0
  1325  016DD0  0000               	dw	0
  1326  016DD2  0000               	dw	0
  1327  016DD4  0000               	dw	0
  1328  016DD6  0000               	dw	0
  1329  016DD8  0000               	dw	0
  1330  016DDA  0000               	dw	0
  1331  016DDC  0000               	dw	0
  1332  016DDE  0000               	dw	0
  1333  016DE0  0000               	dw	0
  1334  016DE2  42FA               	dw	17146
  1335  016DE4  0000               	dw	0
  1336  016DE6  0000               	dw	0
  1337  016DE8  0000               	dw	0
  1338  016DEA  0000               	dw	0
  1339  016DEC  0000               	dw	0
  1340  016DEE  0000               	dw	0
  1341  016DF0  0000               	dw	0
  1342  016DF2  0000               	dw	0
  1343  016DF4  0000               	dw	0
  1344  016DF6  0000               	dw	0
  1345  016DF8  0000               	dw	0
  1346  016DFA  0000               	dw	0
  1347  016DFC  0000               	dw	0
  1348  016DFE  0000               	dw	0
  1349  016E00  0000               	dw	0
  1350  016E02  0000               	dw	0
  1351  016E04  0000               	dw	0
  1352  016E06  0000               	dw	0
  1353  016E08  0000               	dw	0
  1354  016E0A  0000               	dw	0
  1355  016E0C  00                 	db	0
  1356  016E0D  01                 	db	1
  1357  016E0E  0000               	dw	0
  1358  016E10  3F80               	dw	16256
  1359  016E12  0000               	dw	0
  1360  016E14  3F80               	dw	16256
  1361  016E16  00                 	db	0
  1362  016E17  00                 	db	0
  1363  016E18  00                 	db	0
  1364  016E19  00                 	db	0
  1365  016E1A  00                 	db	0
  1366  016E1B  00                 	db	0
  1367  016E1C  00                 	db	0
  1368  016E1D  00                 	db	0
  1369  016E1E  00                 	db	0
  1370  016E1F  00                 	db	0
  1371  016E20  00                 	db	0
  1372  016E21  00                 	db	0
  1373  016E22  00                 	db	0
  1374  016E23  00                 	db	0
  1375  016E24  00                 	db	0
  1376  016E25  00                 	db	0
  1377  016E26  00                 	db	0
  1378  016E27  00                 	db	0
  1379  016E28  00                 	db	0
  1380  016E29  00                 	db	0
  1381  016E2A  00                 	db	0
  1382  016E2B  00                 	db	0
  1383  016E2C  00                 	db	0
  1384  016E2D  00                 	db	0
  1385  016E2E  00                 	db	0
  1386  016E2F  00                 	db	0
  1387  016E30  00                 	db	0
  1388  016E31  00                 	db	0
  1389  016E32  00                 	db	0
  1390  016E33  00                 	db	0
  1391  016E34  00                 	db	0
  1392  016E35  00                 	db	0
  1393  016E36  00                 	db	0
  1394  016E37  00                 	db	0
  1395  016E38  00                 	db	0
  1396  016E39  00                 	db	0
  1397  016E3A  00                 	db	0
  1398  016E3B  00                 	db	0
  1399  016E3C  00                 	db	0
  1400  016E3D  00                 	db	0
  1401  016E3E  00                 	db	0
  1402  016E3F  00                 	db	0
  1403  016E40  00                 	db	0
  1404  016E41  00                 	db	0
  1405  016E42  00                 	db	0
  1406  016E43  00                 	db	0
  1407  016E44  00                 	db	0
  1408  016E45  00                 	db	0
  1409  016E46  00                 	db	0
  1410  016E47  00                 	db	0
  1411  016E48  00                 	db	0
  1412  016E49  00                 	db	0
  1413  016E4A  00                 	db	0
  1414  016E4B  00                 	db	0
  1415  016E4C  00                 	db	0
  1416  016E4D  00                 	db	0
  1417  016E4E  00                 	db	0
  1418  016E4F  00                 	db	0
  1419  016E50  00                 	db	0
  1420  016E51  00                 	db	0
  1421  016E52  00                 	db	0
  1422  016E53  00                 	db	0
  1423  016E54  00                 	db	0
  1424  016E55  00                 	db	0
  1425  016E56  00                 	db	0
  1426  016E57  00                 	db	0
  1427  016E58  00                 	db	0
  1428  016E59  00                 	db	0
  1429  016E5A  00                 	db	0
  1430  016E5B  00                 	db	0
  1431  016E5C  00                 	db	0
  1432  016E5D  00                 	db	0
  1433  016E5E  00                 	db	0
  1434  016E5F  00                 	db	0
  1435  016E60  00                 	db	0
  1436  016E61  00                 	db	0
  1437  016E62  0000               	dw	0
  1438  016E64  0000               	dw	0
  1439  016E66  0000               	dw	0
  1440  016E68  0000               	dw	0
  1441  016E6A  0000               	dw	0
  1442  016E6C  0000               	dw	0
  1443  016E6E  0000               	dw	0
  1444  016E70  0000               	dw	0
  1445  016E72  0000               	dw	0
  1446  016E74  0000               	dw	0
  1447  016E76  01                 	db	1
  1448  016E77  00                 	db	0
  1449  016E78  00                 	db	0
  1450  016E79  00                 	db	0
  1451  016E7A  00                 	db	0
  1452  016E7B  00                 	db	0
  1453  016E7C  00                 	db	0
  1454  016E7D  00                 	db	0
  1455  016E7E  00                 	db	0
  1456                           
  1457                           	psect	idataBANK0
  1458  01BD8C                     __pidataBANK0:
  1459                           	opt callstack 0
  1460                           
  1461                           ;initializer for _R
  1462  01BD8C  0000               	dw	0
  1463  01BD8E  0000               	dw	0
  1464  01BD90  0000               	dw	0
  1465  01BD92  0000               	dw	0
  1466  01BD94  0000               	dw	0
  1467  01BD96  0000               	dw	0
  1468  01BD98  0000               	dw	0
  1469  01BD9A  0000               	dw	0
  1470  01BD9C  0000               	dw	0
  1471  01BD9E  0000               	dw	0
  1472  01BDA0  0000               	dw	0
  1473  01BDA2  0000               	dw	0
  1474  01BDA4  0000               	dw	0
  1475  01BDA6  0000               	dw	0
  1476  01BDA8  0000               	dw	0
  1477  01BDAA  0000               	dw	0
  1478  01BDAC  0000               	dw	0
  1479  01BDAE  0000               	dw	0
  1480  01BDB0  0000               	dw	0
  1481  01BDB2  0F62               	dw	3938
  1482  01BDB4  0FA4               	dw	4004
  1483  01BDB6  2D0E               	dw	11534
  1484  01BDB8  3DB2               	dw	15794
  1485  01BDBA  DD98               	dw	56728
  1486  01BDBC  3D13               	dw	15635
  1487  01BDBE  00                 	db	0
  1488  01BDBF  0000               	dw	0
  1489  01BDC1  00                 	db	0
  1490                           
  1491                           	psect	idataBANK1
  1492  01A62E                     __pidataBANK1:
  1493                           	opt callstack 0
  1494                           
  1495                           ;initializer for stoa@F1166
  1496  01A62E  28                 	db	40
  1497  01A62F  6E                 	db	110
  1498  01A630  75                 	db	117
  1499  01A631  6C                 	db	108
  1500  01A632  6C                 	db	108
  1501  01A633  29                 	db	41
  1502  01A634  00                 	db	0
  1503                           
  1504                           ;initializer for _V
  1505  01A635  00                 	db	0
  1506  01A636  00                 	db	0
  1507  01A637  00                 	db	0
  1508  01A638  00                 	db	0
  1509  01A639  00                 	db	0
  1510  01A63A  00                 	db	0
  1511  01A63B  00                 	db	0
  1512  01A63C  00                 	db	0
  1513  01A63D  00                 	db	0
  1514  01A63E  00                 	db	0
  1515  01A63F  00                 	db	0
  1516  01A640  00                 	db	0
  1517  01A641  00                 	db	0
  1518  01A642  00                 	db	0
  1519  01A643  00                 	db	0
  1520  01A644  00                 	db	0
  1521  01A645  00                 	db	0
  1522  01A646  00                 	db	0
  1523  01A647  00                 	db	0
  1524  01A648  00                 	db	0
  1525  01A649  00                 	db	0
  1526  01A64A  00                 	db	0
  1527  01A64B  00                 	db	0
  1528  01A64C  00                 	db	0
  1529  01A64D  00                 	db	0
  1530  01A64E  00                 	db	0
  1531  01A64F  00                 	db	0
  1532  01A650  00                 	db	0
  1533  01A651  00                 	db	0
  1534  01A652  00                 	db	0
  1535  01A653  00                 	db	0
  1536  01A654  00                 	db	0
  1537  01A655  00                 	db	0
  1538  01A656  00                 	db	0
  1539  01A657  00                 	db	0
  1540  01A658  00                 	db	0
  1541  01A659  00                 	db	0
  1542  01A65A  00                 	db	0
  1543  01A65B  00                 	db	0
  1544  01A65C  00                 	db	0
  1545  01A65D  00                 	db	0
  1546  01A65E  00                 	db	0
  1547  01A65F  00                 	db	0
  1548  01A660  00                 	db	0
  1549  01A661  00                 	db	0
  1550  01A662  00                 	db	0
  1551  01A663  00                 	db	0
  1552  01A664  00                 	db	0
  1553  01A665  00                 	db	0
  1554  01A666  00                 	db	0
  1555  01A667  00                 	db	0
  1556  01A668  00                 	db	0
  1557  01A669  00                 	db	0
  1558  01A66A  00                 	db	0
  1559  01A66B  00                 	db	0
  1560  01A66C  00                 	db	0
  1561  01A66D  00                 	db	0
  1562  01A66E  00                 	db	0
  1563  01A66F  00                 	db	0
  1564  01A670  00                 	db	0
  1565  01A671  00                 	db	0
  1566  01A672  00                 	db	0
  1567  01A673  00                 	db	0
  1568  01A674  00                 	db	0
  1569  01A675  00                 	db	0
  1570  01A676  00                 	db	0
  1571  01A677  00                 	db	0
  1572  01A678  00                 	db	0
  1573  01A679  00                 	db	0
  1574  01A67A  00                 	db	0
  1575  01A67B  00                 	db	0
  1576  01A67C  00                 	db	0
  1577  01A67D  00                 	db	0
  1578  01A67E  00                 	db	0
  1579  01A67F  00                 	db	0
  1580  01A680  00                 	db	0
  1581  01A681  00                 	db	0
  1582  01A682  00                 	db	0
  1583  01A683  00                 	db	0
  1584  01A684  00                 	db	0
  1585  01A685  00                 	db	0
  1586  01A686  00                 	db	0
  1587  01A687  00                 	db	0
  1588  01A688  00                 	db	0
  1589  01A689  00                 	db	0
  1590  01A68A  00                 	db	0
  1591  01A68B  00                 	db	0
  1592  01A68C  00                 	db	0
  1593  01A68D  00                 	db	0
  1594  01A68E  00                 	db	0
  1595  01A68F  00                 	db	0
  1596  01A690  00                 	db	0
  1597  01A691  00                 	db	0
  1598  01A692  00                 	db	0
  1599  01A693  00                 	db	0
  1600  01A694  00                 	db	0
  1601  01A695  00                 	db	0
  1602  01A696  00                 	db	0
  1603  01A697  00                 	db	0
  1604  01A698  00                 	db	0
  1605  01A699  00                 	db	0
  1606  01A69A  00                 	db	0
  1607  01A69B  00                 	db	0
  1608  01A69C  00                 	db	0
  1609  01A69D  00                 	db	0
  1610  01A69E  00                 	db	0
  1611  01A69F  00                 	db	0
  1612  01A6A0  00                 	db	0
  1613  01A6A1  00                 	db	0
  1614  01A6A2  00                 	db	0
  1615  01A6A3  00                 	db	0
  1616  01A6A4  00                 	db	0
  1617  01A6A5  00                 	db	0
  1618  01A6A6  00                 	db	0
  1619  01A6A7  00                 	db	0
  1620  01A6A8  00                 	db	0
  1621  01A6A9  00                 	db	0
  1622  01A6AA  00                 	db	0
  1623  01A6AB  00                 	db	0
  1624  01A6AC  00                 	db	0
  1625  01A6AD  00                 	db	0
  1626  01A6AE  00                 	db	0
  1627  01A6AF  00                 	db	0
  1628  01A6B0  00                 	db	0
  1629  01A6B1  00                 	db	0
  1630  01A6B2  00                 	db	0
  1631  01A6B3  00                 	db	0
  1632  01A6B4  00                 	db	0
  1633  01A6B5  00                 	db	0
  1634  01A6B6  0000               	dw	0
  1635  01A6B8  0000               	dw	0
  1636  01A6BA  0000               	dw	0
  1637  01A6BC  0000               	dw	0
  1638  01A6BE  00                 	db	0
  1639  01A6BF  00                 	db	0
  1640  01A6C0  00                 	db	0
  1641  01A6C1  00                 	db	0
  1642  01A6C2  00                 	db	0
  1643  01A6C3  00                 	db	0
  1644  01A6C4  0000               	dw	0
  1645  01A6C6  0000               	dw	0
  1646  01A6C8  0000               	dw	0
  1647  01A6CA  0000               	dw	0
  1648  01A6CC  0000               	dw	0
  1649  01A6CE  0000               	dw	0
  1650  01A6D0  00                 	db	0
  1651  01A6D1  00                 	db	0
  1652  01A6D2  00                 	db	0
  1653  01A6D3  00                 	db	0
  1654  01A6D4  00                 	db	0
  1655  01A6D5  00                 	db	0
  1656  01A6D6  00                 	db	0
  1657  01A6D7  00                 	db	0
  1658  01A6D8  00                 	db	0
  1659  01A6D9  00                 	db	0
  1660  01A6DA  00                 	db	0
  1661  01A6DB  0000               	dw	0
  1662  01A6DD  0000               	dw	0
  1663  01A6DF  2D                 	db	45
  1664  01A6E0  00                 	db	0
  1665  01A6E1  00                 	db	0
  1666  01A6E2  00                 	db	0
  1667  01A6E3  00                 	db	0
  1668  01A6E4  0000               	dw	0
  1669  01A6E6  0000               	dw	0
  1670  01A6E8  0000               	dw	0
  1671  01A6EA  0000               	dw	0
  1672  01A6EC  0000               	dw	0
  1673  01A6EE  0000               	dw	0
  1674  01A6F0  0000               	dw	0
  1675  01A6F2  0000               	dw	0
  1676                           
  1677                           ;initializer for _H
  1678  01A6F4  00                 	db	0
  1679  01A6F5  00                 	db	0
  1680  01A6F6  01                 	db	1
  1681  01A6F7  00                 	db	0
  1682  01A6F8  01                 	db	1
  1683  01A6F9  00                 	db	0
  1684  01A6FA  00                 	db	0
  1685  01A6FB  00                 	db	0
  1686  01A6FC  00                 	db	0
  1687                           
  1688                           	psect	mediumconst
  1689  00F9DE                     __pmediumconst:
  1690                           	opt callstack 0
  1691  00F9DE  00                 	db	0
  1692  00F9DF                     _BVSOC_TABLE:
  1693                           	opt callstack 0
  1694  00F9DF  59D8               	dw	23000
  1695  00F9E1  0000               	dw	0
  1696  00F9E3  0005               	dw	5
  1697  00F9E5  0000               	dw	0
  1698  00F9E7  5B68               	dw	23400
  1699  00F9E9  0000               	dw	0
  1700  00F9EB  000A               	dw	10
  1701  00F9ED  0000               	dw	0
  1702  00F9EF  5C30               	dw	23600
  1703  00F9F1  0000               	dw	0
  1704  00F9F3  0014               	dw	20
  1705  00F9F5  0000               	dw	0
  1706  00F9F7  5E38               	dw	24120
  1707  00F9F9  0000               	dw	0
  1708  00F9FB  0019               	dw	25
  1709  00F9FD  0000               	dw	0
  1710  00F9FF  5E88               	dw	24200
  1711  00FA01  0000               	dw	0
  1712  00FA03  001E               	dw	30
  1713  00FA05  0000               	dw	0
  1714  00FA07  5F78               	dw	24440
  1715  00FA09  0000               	dw	0
  1716  00FA0B  0028               	dw	40
  1717  00FA0D  0000               	dw	0
  1718  00FA0F  5FDC               	dw	24540
  1719  00FA11  0000               	dw	0
  1720  00FA13  002D               	dw	45
  1721  00FA15  0000               	dw	0
  1722  00FA17  6018               	dw	24600
  1723  00FA19  0000               	dw	0
  1724  00FA1B  0032               	dw	50
  1725  00FA1D  0000               	dw	0
  1726  00FA1F  6046               	dw	24646
  1727  00FA21  0000               	dw	0
  1728  00FA23  0035               	dw	53
  1729  00FA25  0000               	dw	0
  1730  00FA27  607C               	dw	24700
  1731  00FA29  0000               	dw	0
  1732  00FA2B  0037               	dw	55
  1733  00FA2D  0000               	dw	0
  1734  00FA2F  60AE               	dw	24750
  1735  00FA31  0000               	dw	0
  1736  00FA33  0039               	dw	57
  1737  00FA35  0000               	dw	0
  1738  00FA37  60E0               	dw	24800
  1739  00FA39  0000               	dw	0
  1740  00FA3B  003C               	dw	60
  1741  00FA3D  0000               	dw	0
  1742  00FA3F  6112               	dw	24850
  1743  00FA41  0000               	dw	0
  1744  00FA43  003F               	dw	63
  1745  00FA45  0000               	dw	0
  1746  00FA47  615D               	dw	24925
  1747  00FA49  0000               	dw	0
  1748  00FA4B  0043               	dw	67
  1749  00FA4D  0000               	dw	0
  1750  00FA4F  61A8               	dw	25000
  1751  00FA51  0000               	dw	0
  1752  00FA53  0046               	dw	70
  1753  00FA55  0000               	dw	0
  1754  00FA57  61BC               	dw	25020
  1755  00FA59  0000               	dw	0
  1756  00FA5B  0048               	dw	72
  1757  00FA5D  0000               	dw	0
  1758  00FA5F  61D0               	dw	25040
  1759  00FA61  0000               	dw	0
  1760  00FA63  004B               	dw	75
  1761  00FA65  0000               	dw	0
  1762  00FA67  61DA               	dw	25050
  1763  00FA69  0000               	dw	0
  1764  00FA6B  0050               	dw	80
  1765  00FA6D  0000               	dw	0
  1766  00FA6F  61E4               	dw	25060
  1767  00FA71  0000               	dw	0
  1768  00FA73  0055               	dw	85
  1769  00FA75  0000               	dw	0
  1770  00FA77  61F8               	dw	25080
  1771  00FA79  0000               	dw	0
  1772  00FA7B  005A               	dw	90
  1773  00FA7D  0000               	dw	0
  1774  00FA7F  6208               	dw	25096
  1775  00FA81  0000               	dw	0
  1776  00FA83  005C               	dw	92
  1777  00FA85  0000               	dw	0
  1778  00FA87  6222               	dw	25122
  1779  00FA89  0000               	dw	0
  1780  00FA8B  005D               	dw	93
  1781  00FA8D  0000               	dw	0
  1782  00FA8F  6234               	dw	25140
  1783  00FA91  0000               	dw	0
  1784  00FA93  005F               	dw	95
  1785  00FA95  0000               	dw	0
  1786  00FA97  6248               	dw	25160
  1787  00FA99  0000               	dw	0
  1788  00FA9B  0061               	dw	97
  1789  00FA9D  0000               	dw	0
  1790  00FA9F  625C               	dw	25180
  1791  00FAA1  0000               	dw	0
  1792  00FAA3  0064               	dw	100
  1793  00FAA5  0000               	dw	0
  1794  00FAA7  6784               	dw	26500
  1795  00FAA9  0000               	dw	0
  1796  00FAAB  0062               	dw	98
  1797  00FAAD  0000               	dw	0
  1798  00FAAF                     __end_of_BVSOC_TABLE:
  1799                           	opt callstack 0
  1800  00FAAF                     _T:
  1801                           	opt callstack 0
  1802  00FAAF  63                 	db	99
  1803  00FAB0  6F                 	db	111
  1804  00FAB1  6D                 	db	109
  1805  00FAB2  6D                 	db	109
  1806  00FAB3  61                 	db	97
  1807  00FAB4  6E                 	db	110
  1808  00FAB5  64                 	db	100
  1809  00FAB6  73                 	db	115
  1810  00FAB7  20                 	db	32
  1811  00FAB8  31                 	db	49
  1812  00FAB9  00                 	db	0
  1813  00FABA  00                 	db	0
  1814  00FABB  00                 	db	0
  1815  00FABC  00                 	db	0
  1816  00FABD  00                 	db	0
  1817  00FABE  00                 	db	0
  1818  00FABF  00                 	db	0
  1819  00FAC0  00                 	db	0
  1820  00FAC1  64                 	db	100
  1821  00FAC2  69                 	db	105
  1822  00FAC3  73                 	db	115
  1823  00FAC4  70                 	db	112
  1824  00FAC5  6C                 	db	108
  1825  00FAC6  61                 	db	97
  1826  00FAC7  79                 	db	121
  1827  00FAC8  73                 	db	115
  1828  00FAC9  20                 	db	32
  1829  00FACA  31                 	db	49
  1830  00FACB  00                 	db	0
  1831  00FACC  00                 	db	0
  1832  00FACD  00                 	db	0
  1833  00FACE  00                 	db	0
  1834  00FACF  00                 	db	0
  1835  00FAD0  00                 	db	0
  1836  00FAD1  00                 	db	0
  1837  00FAD2  00                 	db	0
  1838  00FAD3  63                 	db	99
  1839  00FAD4  6F                 	db	111
  1840  00FAD5  6D                 	db	109
  1841  00FAD6  6D                 	db	109
  1842  00FAD7  61                 	db	97
  1843  00FAD8  6E                 	db	110
  1844  00FAD9  64                 	db	100
  1845  00FADA  73                 	db	115
  1846  00FADB  20                 	db	32
  1847  00FADC  32                 	db	50
  1848  00FADD  00                 	db	0
  1849  00FADE  00                 	db	0
  1850  00FADF  00                 	db	0
  1851  00FAE0  00                 	db	0
  1852  00FAE1  00                 	db	0
  1853  00FAE2  00                 	db	0
  1854  00FAE3  00                 	db	0
  1855  00FAE4  00                 	db	0
  1856  00FAE5  64                 	db	100
  1857  00FAE6  69                 	db	105
  1858  00FAE7  73                 	db	115
  1859  00FAE8  70                 	db	112
  1860  00FAE9  6C                 	db	108
  1861  00FAEA  61                 	db	97
  1862  00FAEB  79                 	db	121
  1863  00FAEC  73                 	db	115
  1864  00FAED  20                 	db	32
  1865  00FAEE  32                 	db	50
  1866  00FAEF  00                 	db	0
  1867  00FAF0  00                 	db	0
  1868  00FAF1  00                 	db	0
  1869  00FAF2  00                 	db	0
  1870  00FAF3  00                 	db	0
  1871  00FAF4  00                 	db	0
  1872  00FAF5  00                 	db	0
  1873  00FAF6  00                 	db	0
  1874  00FAF7  63                 	db	99
  1875  00FAF8  6F                 	db	111
  1876  00FAF9  6D                 	db	109
  1877  00FAFA  6D                 	db	109
  1878  00FAFB  61                 	db	97
  1879  00FAFC  6E                 	db	110
  1880  00FAFD  64                 	db	100
  1881  00FAFE  73                 	db	115
  1882  00FAFF  20                 	db	32
  1883  00FB00  33                 	db	51
  1884  00FB01  00                 	db	0
  1885  00FB02  00                 	db	0
  1886  00FB03  00                 	db	0
  1887  00FB04  00                 	db	0
  1888  00FB05  00                 	db	0
  1889  00FB06  00                 	db	0
  1890  00FB07  00                 	db	0
  1891  00FB08  00                 	db	0
  1892  00FB09  64                 	db	100
  1893  00FB0A  69                 	db	105
  1894  00FB0B  73                 	db	115
  1895  00FB0C  70                 	db	112
  1896  00FB0D  6C                 	db	108
  1897  00FB0E  61                 	db	97
  1898  00FB0F  79                 	db	121
  1899  00FB10  73                 	db	115
  1900  00FB11  20                 	db	32
  1901  00FB12  33                 	db	51
  1902  00FB13  00                 	db	0
  1903  00FB14  00                 	db	0
  1904  00FB15  00                 	db	0
  1905  00FB16  00                 	db	0
  1906  00FB17  00                 	db	0
  1907  00FB18  00                 	db	0
  1908  00FB19  00                 	db	0
  1909  00FB1A  00                 	db	0
  1910  00FB1B  63                 	db	99
  1911  00FB1C  6F                 	db	111
  1912  00FB1D  6D                 	db	109
  1913  00FB1E  6D                 	db	109
  1914  00FB1F  61                 	db	97
  1915  00FB20  6E                 	db	110
  1916  00FB21  64                 	db	100
  1917  00FB22  73                 	db	115
  1918  00FB23  20                 	db	32
  1919  00FB24  34                 	db	52
  1920  00FB25  00                 	db	0
  1921  00FB26  00                 	db	0
  1922  00FB27  00                 	db	0
  1923  00FB28  00                 	db	0
  1924  00FB29  00                 	db	0
  1925  00FB2A  00                 	db	0
  1926  00FB2B  00                 	db	0
  1927  00FB2C  00                 	db	0
  1928  00FB2D  64                 	db	100
  1929  00FB2E  69                 	db	105
  1930  00FB2F  73                 	db	115
  1931  00FB30  70                 	db	112
  1932  00FB31  6C                 	db	108
  1933  00FB32  61                 	db	97
  1934  00FB33  79                 	db	121
  1935  00FB34  73                 	db	115
  1936  00FB35  20                 	db	32
  1937  00FB36  34                 	db	52
  1938  00FB37  00                 	db	0
  1939  00FB38  00                 	db	0
  1940  00FB39  00                 	db	0
  1941  00FB3A  00                 	db	0
  1942  00FB3B  00                 	db	0
  1943  00FB3C  00                 	db	0
  1944  00FB3D  00                 	db	0
  1945  00FB3E  00                 	db	0
  1946  00FB3F                     __end_of_T:
  1947                           	opt callstack 0
  1948  00FB3F                     _spin:
  1949                           	opt callstack 0
  1950  00FB3F  7C                 	db	124
  1951  00FB40  7C                 	db	124
  1952  00FB41  2F                 	db	47
  1953  00FB42  2F                 	db	47
  1954  00FB43  2D                 	db	45
  1955  00FB44  2D                 	db	45
  1956  00FB45  00                 	db	0
  1957  00FB46  00                 	db	0
  1958  00FB47  00                 	db	0
  1959  00FB48  00                 	db	0
  1960  00FB49  00                 	db	0
  1961  00FB4A  00                 	db	0
  1962  00FB4B  00                 	db	0
  1963  00FB4C  00                 	db	0
  1964  00FB4D  00                 	db	0
  1965  00FB4E  00                 	db	0
  1966  00FB4F  00                 	db	0
  1967  00FB50  00                 	db	0
  1968  00FB51  00                 	db	0
  1969  00FB52  00                 	db	0
  1970  00FB53  7C                 	db	124
  1971  00FB54  7C                 	db	124
  1972  00FB55  2F                 	db	47
  1973  00FB56  2F                 	db	47
  1974  00FB57  2D                 	db	45
  1975  00FB58  2D                 	db	45
  1976  00FB59  5C                 	db	92
  1977  00FB5A  5C                 	db	92
  1978  00FB5B  00                 	db	0
  1979  00FB5C  00                 	db	0
  1980  00FB5D  00                 	db	0
  1981  00FB5E  00                 	db	0
  1982  00FB5F  00                 	db	0
  1983  00FB60  00                 	db	0
  1984  00FB61  00                 	db	0
  1985  00FB62  00                 	db	0
  1986  00FB63  00                 	db	0
  1987  00FB64  00                 	db	0
  1988  00FB65  00                 	db	0
  1989  00FB66  00                 	db	0
  1990  00FB67  4F                 	db	79
  1991  00FB68  4F                 	db	79
  1992  00FB69  4F                 	db	79
  1993  00FB6A  4F                 	db	79
  1994  00FB6B  4F                 	db	79
  1995  00FB6C  4F                 	db	79
  1996  00FB6D  2D                 	db	45
  1997  00FB6E  2D                 	db	45
  1998  00FB6F  5F                 	db	95
  1999  00FB70  5F                 	db	95
  2000  00FB71  2D                 	db	45
  2001  00FB72  00                 	db	0
  2002  00FB73  00                 	db	0
  2003  00FB74  00                 	db	0
  2004  00FB75  00                 	db	0
  2005  00FB76  00                 	db	0
  2006  00FB77  00                 	db	0
  2007  00FB78  00                 	db	0
  2008  00FB79  00                 	db	0
  2009  00FB7A  00                 	db	0
  2010  00FB7B  76                 	db	118
  2011  00FB7C  76                 	db	118
  2012  00FB7D  3C                 	db	60
  2013  00FB7E  3C                 	db	60
  2014  00FB7F  5E                 	db	94
  2015  00FB80  5E                 	db	94
  2016  00FB81  3E                 	db	62
  2017  00FB82  3E                 	db	62
  2018  00FB83  00                 	db	0
  2019  00FB84  00                 	db	0
  2020  00FB85  00                 	db	0
  2021  00FB86  00                 	db	0
  2022  00FB87  00                 	db	0
  2023  00FB88  00                 	db	0
  2024  00FB89  00                 	db	0
  2025  00FB8A  00                 	db	0
  2026  00FB8B  00                 	db	0
  2027  00FB8C  00                 	db	0
  2028  00FB8D  00                 	db	0
  2029  00FB8E  00                 	db	0
  2030  00FB8F  2E                 	db	46
  2031  00FB90  2E                 	db	46
  2032  00FB91  2A                 	db	42
  2033  00FB92  2A                 	db	42
  2034  00FB93  78                 	db	120
  2035  00FB94  23                 	db	35
  2036  00FB95  78                 	db	120
  2037  00FB96  23                 	db	35
  2038  00FB97  58                 	db	88
  2039  00FB98  58                 	db	88
  2040  00FB99  7C                 	db	124
  2041  00FB9A  7C                 	db	124
  2042  00FB9B  2D                 	db	45
  2043  00FB9C  2D                 	db	45
  2044  00FB9D  00                 	db	0
  2045  00FB9E  00                 	db	0
  2046  00FB9F  00                 	db	0
  2047  00FBA0  00                 	db	0
  2048  00FBA1  00                 	db	0
  2049  00FBA2  00                 	db	0
  2050  00FBA3  2E                 	db	46
  2051  00FBA4  2E                 	db	46
  2052  00FBA5  6F                 	db	111
  2053  00FBA6  6F                 	db	111
  2054  00FBA7  4F                 	db	79
  2055  00FBA8  4F                 	db	79
  2056  00FBA9  6F                 	db	111
  2057  00FBAA  6F                 	db	111
  2058  00FBAB  00                 	db	0
  2059  00FBAC  00                 	db	0
  2060  00FBAD  00                 	db	0
  2061  00FBAE  00                 	db	0
  2062  00FBAF  00                 	db	0
  2063  00FBB0  00                 	db	0
  2064  00FBB1  00                 	db	0
  2065  00FBB2  00                 	db	0
  2066  00FBB3  00                 	db	0
  2067  00FBB4  00                 	db	0
  2068  00FBB5  00                 	db	0
  2069  00FBB6  00                 	db	0
  2070  00FBB7                     __end_of_spin:
  2071                           	opt callstack 0
  2072  00FBB7  0000               	dw	0
  2073  00FBB9  3F80               	dw	16256
  2074  00FBBB  0000               	dw	0
  2075  00FBBD  3FC0               	dw	16320
  2076  00FBBF                     __end_of_bp:
  2077                           	opt callstack 0
  2078  00FBBF  AA00               	dw	43520
  2079  00FBC1  3FB8               	dw	16312
  2080  00FBC3                     __end_of_ivln2_h:
  2081                           	opt callstack 0
  2082  00FBC3  23C6               	dw	9158
  2083  00FBC5  B8F6               	dw	47350
  2084  00FBC7                     __end_of_cp_l:
  2085                           	opt callstack 0
  2086  00FBC7  4000               	dw	16384
  2087  00FBC9  3F76               	dw	16246
  2088  00FBCB                     __end_of_cp_h:
  2089                           	opt callstack 0
  2090  0000                     _IVTADL	set	14493
  2091  0000                     _IVTADH	set	14494
  2092  0000                     _IVTADU	set	14495
  2093  0000                     _PIR6bits	set	14758
  2094  0000                     _PIR4bits	set	14756
  2095  0000                     _PIE8bits	set	14744
  2096  0000                     _PIR8bits	set	14760
  2097  0000                     _SCANPR	set	14839
  2098  0000                     _DMA2PR	set	14836
  2099  0000                     _DMA1PR	set	14835
  2100  0000                     _MAINPR	set	14834
  2101  0000                     _ISRPR	set	14833
  2102  0000                     _PIE2bits	set	14738
  2103  0000                     _PIR2bits	set	14754
  2104  0000                     _PIE9bits	set	14745
  2105  0000                     _PIR9bits	set	14761
  2106  0000                     _PIE6bits	set	14742
  2107  0000                     _PIE3bits	set	14739
  2108  0000                     _PMD7	set	14791
  2109  0000                     _PMD6	set	14790
  2110  0000                     _PMD5	set	14789
  2111  0000                     _PMD4	set	14788
  2112  0000                     _PMD3	set	14787
  2113  0000                     _PMD2	set	14786
  2114  0000                     _PMD1	set	14785
  2115  0000                     _PMD0	set	14784
  2116  0000                     _OSCTUNE	set	14814
  2117  0000                     _OSCFRQ	set	14815
  2118  0000                     _OSCEN	set	14813
  2119  0000                     _OSCCON3	set	14811
  2120  0000                     _OSCCON1	set	14809
  2121  0000                     _IPR8bits	set	14728
  2122  0000                     _IPR9bits	set	14729
  2123  0000                     _IPR5bits	set	14725
  2124  0000                     _IPR1bits	set	14721
  2125  0000                     _IPR3bits	set	14723
  2126  0000                     _IPR6bits	set	14726
  2127  0000                     _IPR2bits	set	14722
  2128  0000                     _PIE5bits	set	14741
  2129  0000                     _PIE1bits	set	14737
  2130  0000                     _PIR5bits	set	14757
  2131  0000                     _PIR1bits	set	14753
  2132  0000                     _PLLR	set	118496
  2133  0000                     _SPI1SDIPPS	set	15071
  2134  0000                     _U1RXPPS	set	15077
  2135  0000                     _RC6PPS	set	14870
  2136  0000                     _RC5PPS	set	14869
  2137  0000                     _INT1PPS	set	15041
  2138  0000                     _RD1PPS	set	14873
  2139  0000                     _INT0PPS	set	15040
  2140  0000                     _RC3PPS	set	14867
  2141  0000                     _RB6PPS	set	14862
  2142  0000                     _SPI1SCKPPS	set	15070
  2143  0000                     _U2RXPPS	set	15080
  2144  0000                     _SLRCONF	set	14995
  2145  0000                     _SLRCONE	set	14979
  2146  0000                     _SLRCOND	set	14963
  2147  0000                     _SLRCONC	set	14947
  2148  0000                     _SLRCONB	set	14931
  2149  0000                     _SLRCONA	set	14915
  2150  0000                     _ODCOND	set	14962
  2151  0000                     _ODCONC	set	14946
  2152  0000                     _ODCONB	set	14930
  2153  0000                     _ODCONA	set	14914
  2154  0000                     _ODCONF	set	14994
  2155  0000                     _ODCONE	set	14978
  2156  0000                     _WPUC	set	14945
  2157  0000                     _WPUA	set	14913
  2158  0000                     _WPUB	set	14929
  2159  0000                     _WPUE	set	14977
  2160  0000                     _WPUF	set	14993
  2161  0000                     _WPUD	set	14961
  2162  0000                     _ANSELA	set	14912
  2163  0000                     _ANSELF	set	14992
  2164  0000                     _ANSELE	set	14976
  2165  0000                     _ANSELB	set	14928
  2166  0000                     _ANSELC	set	14944
  2167  0000                     _ANSELD	set	14960
  2168  0000                     _DMA2SSA	set	15321
  2169  0000                     _DMA1SSA	set	15353
  2170  0000                     _DMA2DSZ	set	15310
  2171  0000                     _DMA2SSZ	set	15319
  2172  0000                     _DMA2DSA	set	15312
  2173  0000                     _DMA1DSZ	set	15342
  2174  0000                     _DMA1SSZ	set	15351
  2175  0000                     _DMA1DSA	set	15344
  2176  0000                     _DMA2CON0bits	set	15324
  2177  0000                     _DMA2CON1bits	set	15325
  2178  0000                     _DMA1CON0bits	set	15356
  2179  0000                     _DMA1CON1bits	set	15357
  2180  0000                     _DMA2CON0	set	15324
  2181  0000                     _DMA2AIRQ	set	15326
  2182  0000                     _DMA2SIRQ	set	15327
  2183  0000                     _DMA2CON1	set	15325
  2184  0000                     _DMA1CON0	set	15356
  2185  0000                     _DMA1AIRQ	set	15358
  2186  0000                     _DMA1SIRQ	set	15359
  2187  0000                     _DMA1CON1	set	15357
  2188  0000                     _CLKRCON	set	15589
  2189  0000                     _CLKRCLK	set	15590
  2190  0000                     _SPI1CON1bits	set	15637
  2191  0000                     _SPI1STATUSbits	set	15639
  2192  0000                     _SPI1INTFbits	set	15642
  2193  0000                     _SPI1CON0bits	set	15636
  2194  0000                     _SPI1RXB	set	15632
  2195  0000                     _SPI1TXB	set	15633
  2196  0000                     _SPI1TCNTL	set	15634
  2197  0000                     _SPI1CON0	set	15636
  2198  0000                     _SPI1CLK	set	15644
  2199  0000                     _SPI1BAUD	set	15641
  2200  0000                     _SPI1CON2	set	15638
  2201  0000                     _SPI1CON1	set	15637
  2202  0000                     _U2RXB	set	15824
  2203  0000                     _U2TXB	set	15826
  2204  0000                     _U2ERRIE	set	15842
  2205  0000                     _U2ERRIR	set	15841
  2206  0000                     _U2UIR	set	15840
  2207  0000                     _U2FIFO	set	15839
  2208  0000                     _U2BRGH	set	15838
  2209  0000                     _U2BRGL	set	15837
  2210  0000                     _U2CON2	set	15836
  2211  0000                     _U2CON1	set	15835
  2212  0000                     _U2CON0	set	15834
  2213  0000                     _U2P3L	set	15832
  2214  0000                     _U2P2L	set	15830
  2215  0000                     _U2P1L	set	15828
  2216  0000                     _U1RXB	set	15848
  2217  0000                     _U1ERRIE	set	15866
  2218  0000                     _U1ERRIR	set	15865
  2219  0000                     _U1UIR	set	15864
  2220  0000                     _U1FIFO	set	15863
  2221  0000                     _U1BRGH	set	15862
  2222  0000                     _U1BRGL	set	15861
  2223  0000                     _U1CON2	set	15860
  2224  0000                     _U1CON1	set	15859
  2225  0000                     _U1CON0	set	15858
  2226  0000                     _U1P3H	set	15857
  2227  0000                     _U1P3L	set	15856
  2228  0000                     _U1P2H	set	15855
  2229  0000                     _U1P2L	set	15854
  2230  0000                     _U1P1H	set	15853
  2231  0000                     _U1P1L	set	15852
  2232  0000                     _FVRCON	set	16065
  2233  0000                     _ADFLTRL	set	16102
  2234  0000                     _ADFLTRH	set	16103
  2235  0000                     _ADCON0bits	set	16120
  2236  0000                     _ADCON0	set	16120
  2237  0000                     _ADCLK	set	16127
  2238  0000                     _ADACT	set	16126
  2239  0000                     _ADREF	set	16125
  2240  0000                     _ADSTAT	set	16124
  2241  0000                     _ADCON3	set	16123
  2242  0000                     _ADCON2	set	16122
  2243  0000                     _ADCON1	set	16121
  2244  0000                     _ADPREH	set	16119
  2245  0000                     _ADPREL	set	16118
  2246  0000                     _ADCAP	set	16117
  2247  0000                     _ADACQH	set	16116
  2248  0000                     _ADACQL	set	16115
  2249  0000                     _ADPCH	set	16113
  2250  0000                     _ADRPT	set	16108
  2251  0000                     _ADACCU	set	16106
  2252  0000                     _ADSTPTH	set	16101
  2253  0000                     _ADSTPTL	set	16100
  2254  0000                     _ADUTHH	set	16097
  2255  0000                     _ADUTHL	set	16096
  2256  0000                     _ADLTHH	set	16095
  2257  0000                     _ADLTHL	set	16094
  2258  0000                     _CCPTMRS1bits	set	16223
  2259  0000                     _PORTDbits	set	16333
  2260  0000                     _PORTFbits	set	16335
  2261  0000                     _LATFbits	set	16319
  2262  0000                     _LATCbits	set	16316
  2263  0000                     _LATDbits	set	16317
  2264  0000                     _PORTBbits	set	16331
  2265  0000                     _T3CONbits	set	16294
  2266  0000                     _T3CON	set	16294
  2267  0000                     _TMR3L	set	16292
  2268  0000                     _TMR3H	set	16293
  2269  0000                     _T3CLK	set	16297
  2270  0000                     _T3GATE	set	16296
  2271  0000                     _T3GCON	set	16295
  2272  0000                     _T2CON	set	16300
  2273  0000                     _T2TMR	set	16298
  2274  0000                     _T2PR	set	16299
  2275  0000                     _T2RST	set	16303
  2276  0000                     _T2HLT	set	16301
  2277  0000                     _T2CLKCON	set	16302
  2278  0000                     _PWM8DCL	set	16224
  2279  0000                     _PWM8DCH	set	16225
  2280  0000                     _PWM8CON	set	16226
  2281  0000                     _LATEbits	set	16318
  2282  0000                     _T5CONbits	set	16282
  2283  0000                     _T5CON	set	16282
  2284  0000                     _TMR5L	set	16280
  2285  0000                     _TMR5H	set	16281
  2286  0000                     _T5CLK	set	16285
  2287  0000                     _T5GATE	set	16284
  2288  0000                     _T5GCON	set	16283
  2289  0000                     _T6CON	set	16276
  2290  0000                     _T6TMR	set	16274
  2291  0000                     _T6PR	set	16275
  2292  0000                     _T6RST	set	16279
  2293  0000                     _T6HLT	set	16277
  2294  0000                     _T6CLKCON	set	16278
  2295  0000                     _TRISD	set	16325
  2296  0000                     _TRISC	set	16324
  2297  0000                     _TRISB	set	16323
  2298  0000                     _TRISA	set	16322
  2299  0000                     _TRISF	set	16327
  2300  0000                     _TRISE	set	16326
  2301  0000                     _LATC	set	16316
  2302  0000                     _LATB	set	16315
  2303  0000                     _LATF	set	16319
  2304  0000                     _LATA	set	16314
  2305  0000                     _LATD	set	16317
  2306  0000                     _LATE	set	16318
  2307  0000                     _IVTLOCKbits	set	16340
  2308  0000                     _IVTLOCK	set	16340
  2309  0000                     _INTCON0bits	set	16338
  2310  0000                     _GIE	set	130711
  2311  00FBCB                     STR_64:
  2312                           
  2313                           ; BSR set to: 57
  2314  00FBCB  20                 	db	32
  2315  00FBCC  25                 	db	37
  2316  00FBCD  63                 	db	99	;'c'
  2317  00FBCE  20                 	db	32
  2318  00FBCF  2C                 	db	44
  2319  00FBD0  25                 	db	37
  2320  00FBD1  6C                 	db	108	;'l'
  2321  00FBD2  75                 	db	117	;'u'
  2322  00FBD3  2C                 	db	44
  2323  00FBD4  25                 	db	37
  2324  00FBD5  34                 	db	52	;'4'
  2325  00FBD6  2E                 	db	46
  2326  00FBD7  34                 	db	52	;'4'
  2327  00FBD8  66                 	db	102	;'f'
  2328  00FBD9  2C                 	db	44
  2329  00FBDA  25                 	db	37
  2330  00FBDB  34                 	db	52	;'4'
  2331  00FBDC  2E                 	db	46
  2332  00FBDD  34                 	db	52	;'4'
  2333  00FBDE  66                 	db	102	;'f'
  2334  00FBDF  2C                 	db	44
  2335  00FBE0  25                 	db	37
  2336  00FBE1  34                 	db	52	;'4'
  2337  00FBE2  2E                 	db	46
  2338  00FBE3  34                 	db	52	;'4'
  2339  00FBE4  66                 	db	102	;'f'
  2340  00FBE5  2C                 	db	44
  2341  00FBE6  25                 	db	37
  2342  00FBE7  34                 	db	52	;'4'
  2343  00FBE8  2E                 	db	46
  2344  00FBE9  34                 	db	52	;'4'
  2345  00FBEA  66                 	db	102	;'f'
  2346  00FBEB  2C                 	db	44
  2347  00FBEC  25                 	db	37
  2348  00FBED  34                 	db	52	;'4'
  2349  00FBEE  2E                 	db	46
  2350  00FBEF  34                 	db	52	;'4'
  2351  00FBF0  66                 	db	102	;'f'
  2352  00FBF1  2C                 	db	44
  2353  00FBF2  25                 	db	37
  2354  00FBF3  34                 	db	52	;'4'
  2355  00FBF4  2E                 	db	46
  2356  00FBF5  33                 	db	51	;'3'
  2357  00FBF6  66                 	db	102	;'f'
  2358  00FBF7  2C                 	db	44
  2359  00FBF8  25                 	db	37
  2360  00FBF9  34                 	db	52	;'4'
  2361  00FBFA  2E                 	db	46
  2362  00FBFB  33                 	db	51	;'3'
  2363  00FBFC  66                 	db	102	;'f'
  2364  00FBFD  2C                 	db	44
  2365  00FBFE  25                 	db	37
  2366  00FBFF  34                 	db	52	;'4'
  2367  00FC00  2E                 	db	46
  2368  00FC01  33                 	db	51	;'3'
  2369  00FC02  66                 	db	102	;'f'
  2370  00FC03  2C                 	db	44
  2371  00FC04  25                 	db	37
  2372  00FC05  34                 	db	52	;'4'
  2373  00FC06  2E                 	db	46
  2374  00FC07  33                 	db	51	;'3'
  2375  00FC08  66                 	db	102	;'f'
  2376  00FC09  2C                 	db	44
  2377  00FC0A  25                 	db	37
  2378  00FC0B  34                 	db	52	;'4'
  2379  00FC0C  2E                 	db	46
  2380  00FC0D  33                 	db	51	;'3'
  2381  00FC0E  66                 	db	102	;'f'
  2382  00FC0F  2C                 	db	44
  2383  00FC10  25                 	db	37
  2384  00FC11  34                 	db	52	;'4'
  2385  00FC12  2E                 	db	46
  2386  00FC13  33                 	db	51	;'3'
  2387  00FC14  66                 	db	102	;'f'
  2388  00FC15  2C                 	db	44
  2389  00FC16  25                 	db	37
  2390  00FC17  64                 	db	100	;'d'
  2391  00FC18  2C                 	db	44
  2392  00FC19  25                 	db	37
  2393  00FC1A  64                 	db	100	;'d'
  2394  00FC1B  2C                 	db	44
  2395  00FC1C  25                 	db	37
  2396  00FC1D  32                 	db	50	;'2'
  2397  00FC1E  2E                 	db	46
  2398  00FC1F  36                 	db	54	;'6'
  2399  00FC20  66                 	db	102	;'f'
  2400  00FC21  2C                 	db	44
  2401  00FC22  25                 	db	37
  2402  00FC23  34                 	db	52	;'4'
  2403  00FC24  2E                 	db	46
  2404  00FC25  33                 	db	51	;'3'
  2405  00FC26  66                 	db	102	;'f'
  2406  00FC27  2C                 	db	44
  2407  00FC28  25                 	db	37
  2408  00FC29  64                 	db	100	;'d'
  2409  00FC2A  2C                 	db	44
  2410  00FC2B  25                 	db	37
  2411  00FC2C  64                 	db	100	;'d'
  2412  00FC2D  2C                 	db	44
  2413  00FC2E  25                 	db	37
  2414  00FC2F  6C                 	db	108	;'l'
  2415  00FC30  75                 	db	117	;'u'
  2416  00FC31  2C                 	db	44
  2417  00FC32  25                 	db	37
  2418  00FC33  6C                 	db	108	;'l'
  2419  00FC34  75                 	db	117	;'u'
  2420  00FC35  2C                 	db	44
  2421  00FC36  25                 	db	37
  2422  00FC37  34                 	db	52	;'4'
  2423  00FC38  2E                 	db	46
  2424  00FC39  33                 	db	51	;'3'
  2425  00FC3A  66                 	db	102	;'f'
  2426  00FC3B  2C                 	db	44
  2427  00FC3C  25                 	db	37
  2428  00FC3D  34                 	db	52	;'4'
  2429  00FC3E  2E                 	db	46
  2430  00FC3F  33                 	db	51	;'3'
  2431  00FC40  66                 	db	102	;'f'
  2432  00FC41  2C                 	db	44
  2433  00FC42  25                 	db	37
  2434  00FC43  34                 	db	52	;'4'
  2435  00FC44  2E                 	db	46
  2436  00FC45  33                 	db	51	;'3'
  2437  00FC46  66                 	db	102	;'f'
  2438  00FC47  0D                 	db	13
  2439  00FC48  0A                 	db	10
  2440  00FC49  00                 	db	0
  2441  00FC4A                     STR_36:
  2442                           
  2443                           ; BSR set to: 57
  2444  00FC4A  53                 	db	83	;'S'
  2445  00FC4B  25                 	db	37
  2446  00FC4C  63                 	db	99	;'c'
  2447  00FC4D  43                 	db	67	;'C'
  2448  00FC4E  20                 	db	32
  2449  00FC4F  25                 	db	37
  2450  00FC50  64                 	db	100	;'d'
  2451  00FC51  20                 	db	32
  2452  00FC52  52                 	db	82	;'R'
  2453  00FC53  55                 	db	85	;'U'
  2454  00FC54  4E                 	db	78	;'N'
  2455  00FC55  20                 	db	32
  2456  00FC56  25                 	db	37
  2457  00FC57  64                 	db	100	;'d'
  2458  00FC58  20                 	db	32
  2459  00FC59  56                 	db	86	;'V'
  2460  00FC5A  25                 	db	37
  2461  00FC5B  32                 	db	50	;'2'
  2462  00FC5C  2E                 	db	46
  2463  00FC5D  32                 	db	50	;'2'
  2464  00FC5E  66                 	db	102	;'f'
  2465  00FC5F  20                 	db	32
  2466  00FC60  20                 	db	32
  2467  00FC61  20                 	db	32
  2468  00FC62  20                 	db	32
  2469  00FC63  20                 	db	32
  2470  00FC64  20                 	db	32
  2471  00FC65  20                 	db	32
  2472  00FC66  00                 	db	0
  2473  00FC67                     STR_17:
  2474                           
  2475                           ; BSR set to: 57
  2476  00FC67  52                 	db	82	;'R'
  2477  00FC68  31                 	db	49	;'1'
  2478  00FC69  20                 	db	32
  2479  00FC6A  25                 	db	37
  2480  00FC6B  32                 	db	50	;'2'
  2481  00FC6C  2E                 	db	46
  2482  00FC6D  33                 	db	51	;'3'
  2483  00FC6E  66                 	db	102	;'f'
  2484  00FC6F  20                 	db	32
  2485  00FC70  25                 	db	37
  2486  00FC71  33                 	db	51	;'3'
  2487  00FC72  2E                 	db	46
  2488  00FC73  34                 	db	52	;'4'
  2489  00FC74  66                 	db	102	;'f'
  2490  00FC75  20                 	db	32
  2491  00FC76  20                 	db	32
  2492  00FC77  20                 	db	32
  2493  00FC78  20                 	db	32
  2494  00FC79  20                 	db	32
  2495  00FC7A  20                 	db	32
  2496  00FC7B  20                 	db	32
  2497  00FC7C  20                 	db	32
  2498  00FC7D  20                 	db	32
  2499  00FC7E  20                 	db	32
  2500  00FC7F  20                 	db	32
  2501  00FC80  00                 	db	0
  2502  00FC81                     STR_18:
  2503                           
  2504                           ; BSR set to: 57
  2505  00FC81  52                 	db	82	;'R'
  2506  00FC82  32                 	db	50	;'2'
  2507  00FC83  20                 	db	32
  2508  00FC84  25                 	db	37
  2509  00FC85  32                 	db	50	;'2'
  2510  00FC86  2E                 	db	46
  2511  00FC87  33                 	db	51	;'3'
  2512  00FC88  66                 	db	102	;'f'
  2513  00FC89  20                 	db	32
  2514  00FC8A  25                 	db	37
  2515  00FC8B  33                 	db	51	;'3'
  2516  00FC8C  2E                 	db	46
  2517  00FC8D  34                 	db	52	;'4'
  2518  00FC8E  66                 	db	102	;'f'
  2519  00FC8F  20                 	db	32
  2520  00FC90  20                 	db	32
  2521  00FC91  20                 	db	32
  2522  00FC92  20                 	db	32
  2523  00FC93  20                 	db	32
  2524  00FC94  20                 	db	32
  2525  00FC95  20                 	db	32
  2526  00FC96  20                 	db	32
  2527  00FC97  20                 	db	32
  2528  00FC98  20                 	db	32
  2529  00FC99  20                 	db	32
  2530  00FC9A  00                 	db	0
  2531  00FC9B                     STR_9:
  2532                           
  2533                           ; BSR set to: 57
  2534  00FC9B  53                 	db	83	;'S'
  2535  00FC9C  20                 	db	32
  2536  00FC9D  53                 	db	83	;'S'
  2537  00FC9E  25                 	db	37
  2538  00FC9F  63                 	db	99	;'c'
  2539  00FCA0  43                 	db	67	;'C'
  2540  00FCA1  20                 	db	32
  2541  00FCA2  25                 	db	37
  2542  00FCA3  64                 	db	100	;'d'
  2543  00FCA4  20                 	db	32
  2544  00FCA5  25                 	db	37
  2545  00FCA6  32                 	db	50	;'2'
  2546  00FCA7  2E                 	db	46
  2547  00FCA8  34                 	db	52	;'4'
  2548  00FCA9  66                 	db	102	;'f'
  2549  00FCAA  20                 	db	32
  2550  00FCAB  20                 	db	32
  2551  00FCAC  20                 	db	32
  2552  00FCAD  20                 	db	32
  2553  00FCAE  20                 	db	32
  2554  00FCAF  20                 	db	32
  2555  00FCB0  20                 	db	32
  2556  00FCB1  20                 	db	32
  2557  00FCB2  20                 	db	32
  2558  00FCB3  20                 	db	32
  2559  00FCB4  00                 	db	0
  2560  00FCB5                     
  2561                           ; BSR set to: 57
  2562  00FCB5  20                 	db	32
  2563  00FCB6  4D                 	db	77	;'M'
  2564  00FCB7  65                 	db	101	;'e'
  2565  00FCB8  73                 	db	115	;'s'
  2566  00FCB9  67                 	db	103	;'g'
  2567  00FCBA  20                 	db	32
  2568  00FCBB  25                 	db	37
  2569  00FCBC  64                 	db	100	;'d'
  2570  00FCBD  20                 	db	32
  2571  00FCBE  53                 	db	83	;'S'
  2572  00FCBF  74                 	db	116	;'t'
  2573  00FCC0  61                 	db	97	;'a'
  2574  00FCC1  63                 	db	99	;'c'
  2575  00FCC2  6B                 	db	107	;'k'
  2576  00FCC3  20                 	db	32
  2577  00FCC4  25                 	db	37
  2578  00FCC5  64                 	db	100	;'d'
  2579  00FCC6  20                 	db	32
  2580  00FCC7  20                 	db	32
  2581  00FCC8  20                 	db	32
  2582  00FCC9  20                 	db	32
  2583  00FCCA  20                 	db	32
  2584  00FCCB  20                 	db	32
  2585  00FCCC  00                 	db	0
  2586  00FCCD                     STR_37:
  2587                           
  2588                           ; BSR set to: 57
  2589  00FCCD  45                 	db	69	;'E'
  2590  00FCCE  53                 	db	83	;'S'
  2591  00FCCF  52                 	db	82	;'R'
  2592  00FCD0  20                 	db	32
  2593  00FCD1  20                 	db	32
  2594  00FCD2  25                 	db	37
  2595  00FCD3  32                 	db	50	;'2'
  2596  00FCD4  2E                 	db	46
  2597  00FCD5  36                 	db	54	;'6'
  2598  00FCD6  66                 	db	102	;'f'
  2599  00FCD7  20                 	db	32
  2600  00FCD8  20                 	db	32
  2601  00FCD9  20                 	db	32
  2602  00FCDA  20                 	db	32
  2603  00FCDB  20                 	db	32
  2604  00FCDC  20                 	db	32
  2605  00FCDD  20                 	db	32
  2606  00FCDE  20                 	db	32
  2607  00FCDF  20                 	db	32
  2608  00FCE0  20                 	db	32
  2609  00FCE1  20                 	db	32
  2610  00FCE2  20                 	db	32
  2611  00FCE3  00                 	db	0
  2612  00FCE4                     STR_34:
  2613                           
  2614                           ; BSR set to: 57
  2615  00FCE4  42                 	db	66	;'B'
  2616  00FCE5  41                 	db	65	;'A'
  2617  00FCE6  54                 	db	84	;'T'
  2618  00FCE7  54                 	db	84	;'T'
  2619  00FCE8  20                 	db	32
  2620  00FCE9  50                 	db	80	;'P'
  2621  00FCEA  57                 	db	87	;'W'
  2622  00FCEB  52                 	db	82	;'R'
  2623  00FCEC  20                 	db	32
  2624  00FCED  25                 	db	37
  2625  00FCEE  33                 	db	51	;'3'
  2626  00FCEF  2E                 	db	46
  2627  00FCF0  32                 	db	50	;'2'
  2628  00FCF1  66                 	db	102	;'f'
  2629  00FCF2  20                 	db	32
  2630  00FCF3  20                 	db	32
  2631  00FCF4  20                 	db	32
  2632  00FCF5  20                 	db	32
  2633  00FCF6  20                 	db	32
  2634  00FCF7  20                 	db	32
  2635  00FCF8  20                 	db	32
  2636  00FCF9  20                 	db	32
  2637  00FCFA  00                 	db	0
  2638  00FCFB                     STR_38:
  2639                           
  2640                           ; BSR set to: 57
  2641  00FCFB  52                 	db	82	;'R'
  2642  00FCFC  31                 	db	49	;'1'
  2643  00FCFD  20                 	db	32
  2644  00FCFE  25                 	db	37
  2645  00FCFF  32                 	db	50	;'2'
  2646  00FD00  2E                 	db	46
  2647  00FD01  33                 	db	51	;'3'
  2648  00FD02  66                 	db	102	;'f'
  2649  00FD03  20                 	db	32
  2650  00FD04  25                 	db	37
  2651  00FD05  33                 	db	51	;'3'
  2652  00FD06  2E                 	db	46
  2653  00FD07  34                 	db	52	;'4'
  2654  00FD08  66                 	db	102	;'f'
  2655  00FD09  20                 	db	32
  2656  00FD0A  20                 	db	32
  2657  00FD0B  20                 	db	32
  2658  00FD0C  20                 	db	32
  2659  00FD0D  20                 	db	32
  2660  00FD0E  20                 	db	32
  2661  00FD0F  20                 	db	32
  2662  00FD10  20                 	db	32
  2663  00FD11  00                 	db	0
  2664  00FD12                     STR_39:
  2665                           
  2666                           ; BSR set to: 57
  2667  00FD12  52                 	db	82	;'R'
  2668  00FD13  32                 	db	50	;'2'
  2669  00FD14  20                 	db	32
  2670  00FD15  25                 	db	37
  2671  00FD16  32                 	db	50	;'2'
  2672  00FD17  2E                 	db	46
  2673  00FD18  33                 	db	51	;'3'
  2674  00FD19  66                 	db	102	;'f'
  2675  00FD1A  20                 	db	32
  2676  00FD1B  25                 	db	37
  2677  00FD1C  33                 	db	51	;'3'
  2678  00FD1D  2E                 	db	46
  2679  00FD1E  34                 	db	52	;'4'
  2680  00FD1F  66                 	db	102	;'f'
  2681  00FD20  20                 	db	32
  2682  00FD21  20                 	db	32
  2683  00FD22  20                 	db	32
  2684  00FD23  20                 	db	32
  2685  00FD24  20                 	db	32
  2686  00FD25  20                 	db	32
  2687  00FD26  20                 	db	32
  2688  00FD27  20                 	db	32
  2689  00FD28  00                 	db	0
  2690  00FD29                     STR_35:
  2691                           
  2692                           ; BSR set to: 57
  2693  00FD29  42                 	db	66	;'B'
  2694  00FD2A  41                 	db	65	;'A'
  2695  00FD2B  48                 	db	72	;'H'
  2696  00FD2C  20                 	db	32
  2697  00FD2D  25                 	db	37
  2698  00FD2E  33                 	db	51	;'3'
  2699  00FD2F  2E                 	db	46
  2700  00FD30  32                 	db	50	;'2'
  2701  00FD31  66                 	db	102	;'f'
  2702  00FD32  20                 	db	32
  2703  00FD33  50                 	db	80	;'P'
  2704  00FD34  25                 	db	37
  2705  00FD35  33                 	db	51	;'3'
  2706  00FD36  2E                 	db	46
  2707  00FD37  32                 	db	50	;'2'
  2708  00FD38  66                 	db	102	;'f'
  2709  00FD39  20                 	db	32
  2710  00FD3A  20                 	db	32
  2711  00FD3B  20                 	db	32
  2712  00FD3C  20                 	db	32
  2713  00FD3D  20                 	db	32
  2714  00FD3E  20                 	db	32
  2715  00FD3F  00                 	db	0
  2716  00FD40                     STR_16:
  2717                           
  2718                           ; BSR set to: 57
  2719  00FD40  45                 	db	69	;'E'
  2720  00FD41  53                 	db	83	;'S'
  2721  00FD42  52                 	db	82	;'R'
  2722  00FD43  20                 	db	32
  2723  00FD44  20                 	db	32
  2724  00FD45  25                 	db	37
  2725  00FD46  32                 	db	50	;'2'
  2726  00FD47  2E                 	db	46
  2727  00FD48  36                 	db	54	;'6'
  2728  00FD49  66                 	db	102	;'f'
  2729  00FD4A  20                 	db	32
  2730  00FD4B  20                 	db	32
  2731  00FD4C  20                 	db	32
  2732  00FD4D  20                 	db	32
  2733  00FD4E  20                 	db	32
  2734  00FD4F  20                 	db	32
  2735  00FD50  20                 	db	32
  2736  00FD51  20                 	db	32
  2737  00FD52  20                 	db	32
  2738  00FD53  20                 	db	32
  2739  00FD54  20                 	db	32
  2740  00FD55  00                 	db	0
  2741  00FD56                     STR_10:
  2742                           
  2743                           ; BSR set to: 57
  2744  00FD56  53                 	db	83	;'S'
  2745  00FD57  74                 	db	116	;'t'
  2746  00FD58  61                 	db	97	;'a'
  2747  00FD59  74                 	db	116	;'t'
  2748  00FD5A  69                 	db	105	;'i'
  2749  00FD5B  63                 	db	99	;'c'
  2750  00FD5C  20                 	db	32
  2751  00FD5D  53                 	db	83	;'S'
  2752  00FD5E  4F                 	db	79	;'O'
  2753  00FD5F  43                 	db	67	;'C'
  2754  00FD60  20                 	db	32
  2755  00FD61  25                 	db	37
  2756  00FD62  64                 	db	100	;'d'
  2757  00FD63  20                 	db	32
  2758  00FD64  20                 	db	32
  2759  00FD65  20                 	db	32
  2760  00FD66  20                 	db	32
  2761  00FD67  20                 	db	32
  2762  00FD68  20                 	db	32
  2763  00FD69  20                 	db	32
  2764  00FD6A  20                 	db	32
  2765  00FD6B  00                 	db	0
  2766  00FD6C                     STR_31:
  2767                           
  2768                           ; BSR set to: 57
  2769  00FD6C  42                 	db	66	;'B'
  2770  00FD6D  41                 	db	65	;'A'
  2771  00FD6E  54                 	db	84	;'T'
  2772  00FD6F  20                 	db	32
  2773  00FD70  49                 	db	73	;'I'
  2774  00FD71  57                 	db	87	;'W'
  2775  00FD72  48                 	db	72	;'H'
  2776  00FD73  20                 	db	32
  2777  00FD74  25                 	db	37
  2778  00FD75  34                 	db	52	;'4'
  2779  00FD76  2E                 	db	46
  2780  00FD77  31                 	db	49	;'1'
  2781  00FD78  66                 	db	102	;'f'
  2782  00FD79  20                 	db	32
  2783  00FD7A  20                 	db	32
  2784  00FD7B  20                 	db	32
  2785  00FD7C  20                 	db	32
  2786  00FD7D  20                 	db	32
  2787  00FD7E  20                 	db	32
  2788  00FD7F  20                 	db	32
  2789  00FD80  20                 	db	32
  2790  00FD81  00                 	db	0
  2791  00FD82                     STR_32:
  2792                           
  2793                           ; BSR set to: 57
  2794  00FD82  42                 	db	66	;'B'
  2795  00FD83  41                 	db	65	;'A'
  2796  00FD84  54                 	db	84	;'T'
  2797  00FD85  20                 	db	32
  2798  00FD86  4F                 	db	79	;'O'
  2799  00FD87  57                 	db	87	;'W'
  2800  00FD88  48                 	db	72	;'H'
  2801  00FD89  20                 	db	32
  2802  00FD8A  25                 	db	37
  2803  00FD8B  34                 	db	52	;'4'
  2804  00FD8C  2E                 	db	46
  2805  00FD8D  31                 	db	49	;'1'
  2806  00FD8E  66                 	db	102	;'f'
  2807  00FD8F  20                 	db	32
  2808  00FD90  20                 	db	32
  2809  00FD91  20                 	db	32
  2810  00FD92  20                 	db	32
  2811  00FD93  20                 	db	32
  2812  00FD94  20                 	db	32
  2813  00FD95  20                 	db	32
  2814  00FD96  20                 	db	32
  2815  00FD97  00                 	db	0
  2816  00FD98                     STR_33:
  2817                           
  2818                           ; BSR set to: 57
  2819  00FD98  42                 	db	66	;'B'
  2820  00FD99  41                 	db	65	;'A'
  2821  00FD9A  54                 	db	84	;'T'
  2822  00FD9B  20                 	db	32
  2823  00FD9C  54                 	db	84	;'T'
  2824  00FD9D  57                 	db	87	;'W'
  2825  00FD9E  48                 	db	72	;'H'
  2826  00FD9F  20                 	db	32
  2827  00FDA0  25                 	db	37
  2828  00FDA1  34                 	db	52	;'4'
  2829  00FDA2  2E                 	db	46
  2830  00FDA3  31                 	db	49	;'1'
  2831  00FDA4  66                 	db	102	;'f'
  2832  00FDA5  20                 	db	32
  2833  00FDA6  20                 	db	32
  2834  00FDA7  20                 	db	32
  2835  00FDA8  20                 	db	32
  2836  00FDA9  20                 	db	32
  2837  00FDAA  20                 	db	32
  2838  00FDAB  20                 	db	32
  2839  00FDAC  20                 	db	32
  2840  00FDAD  00                 	db	0
  2841  00FDAE                     STR_27:
  2842                           
  2843                           ; BSR set to: 57
  2844  00FDAE  49                 	db	73	;'I'
  2845  00FDAF  4E                 	db	78	;'N'
  2846  00FDB0  56                 	db	86	;'V'
  2847  00FDB1  20                 	db	32
  2848  00FDB2  20                 	db	32
  2849  00FDB3  57                 	db	87	;'W'
  2850  00FDB4  48                 	db	72	;'H'
  2851  00FDB5  20                 	db	32
  2852  00FDB6  25                 	db	37
  2853  00FDB7  33                 	db	51	;'3'
  2854  00FDB8  2E                 	db	46
  2855  00FDB9  32                 	db	50	;'2'
  2856  00FDBA  66                 	db	102	;'f'
  2857  00FDBB  20                 	db	32
  2858  00FDBC  20                 	db	32
  2859  00FDBD  20                 	db	32
  2860  00FDBE  20                 	db	32
  2861  00FDBF  20                 	db	32
  2862  00FDC0  20                 	db	32
  2863  00FDC1  20                 	db	32
  2864  00FDC2  20                 	db	32
  2865  00FDC3  00                 	db	0
  2866  00FDC4                     STR_26:
  2867                           
  2868                           ; BSR set to: 57
  2869  00FDC4  4C                 	db	76	;'L'
  2870  00FDC5  4F                 	db	79	;'O'
  2871  00FDC6  41                 	db	65	;'A'
  2872  00FDC7  44                 	db	68	;'D'
  2873  00FDC8  20                 	db	32
  2874  00FDC9  57                 	db	87	;'W'
  2875  00FDCA  48                 	db	72	;'H'
  2876  00FDCB  20                 	db	32
  2877  00FDCC  25                 	db	37
  2878  00FDCD  33                 	db	51	;'3'
  2879  00FDCE  2E                 	db	46
  2880  00FDCF  32                 	db	50	;'2'
  2881  00FDD0  66                 	db	102	;'f'
  2882  00FDD1  20                 	db	32
  2883  00FDD2  20                 	db	32
  2884  00FDD3  20                 	db	32
  2885  00FDD4  20                 	db	32
  2886  00FDD5  20                 	db	32
  2887  00FDD6  20                 	db	32
  2888  00FDD7  20                 	db	32
  2889  00FDD8  20                 	db	32
  2890  00FDD9  00                 	db	0
  2891  00FDDA                     STR_25:
  2892                           
  2893                           ; BSR set to: 57
  2894  00FDDA  50                 	db	80	;'P'
  2895  00FDDB  56                 	db	86	;'V'
  2896  00FDDC  20                 	db	32
  2897  00FDDD  25                 	db	37
  2898  00FDDE  63                 	db	99	;'c'
  2899  00FDDF  20                 	db	32
  2900  00FDE0  57                 	db	87	;'W'
  2901  00FDE1  48                 	db	72	;'H'
  2902  00FDE2  20                 	db	32
  2903  00FDE3  25                 	db	37
  2904  00FDE4  33                 	db	51	;'3'
  2905  00FDE5  2E                 	db	46
  2906  00FDE6  32                 	db	50	;'2'
  2907  00FDE7  66                 	db	102	;'f'
  2908  00FDE8  20                 	db	32
  2909  00FDE9  20                 	db	32
  2910  00FDEA  20                 	db	32
  2911  00FDEB  20                 	db	32
  2912  00FDEC  20                 	db	32
  2913  00FDED  20                 	db	32
  2914  00FDEE  20                 	db	32
  2915  00FDEF  00                 	db	0
  2916  00FDF0                     STR_24:
  2917                           
  2918                           ; BSR set to: 57
  2919  00FDF0  49                 	db	73	;'I'
  2920  00FDF1  4E                 	db	78	;'N'
  2921  00FDF2  56                 	db	86	;'V'
  2922  00FDF3  20                 	db	32
  2923  00FDF4  20                 	db	32
  2924  00FDF5  50                 	db	80	;'P'
  2925  00FDF6  57                 	db	87	;'W'
  2926  00FDF7  52                 	db	82	;'R'
  2927  00FDF8  20                 	db	32
  2928  00FDF9  25                 	db	37
  2929  00FDFA  33                 	db	51	;'3'
  2930  00FDFB  2E                 	db	46
  2931  00FDFC  32                 	db	50	;'2'
  2932  00FDFD  66                 	db	102	;'f'
  2933  00FDFE  20                 	db	32
  2934  00FDFF  20                 	db	32
  2935  00FE00  20                 	db	32
  2936  00FE01  20                 	db	32
  2937  00FE02  20                 	db	32
  2938  00FE03  20                 	db	32
  2939  00FE04  20                 	db	32
  2940  00FE05  00                 	db	0
  2941  00FE06                     STR_23:
  2942                           
  2943                           ; BSR set to: 57
  2944  00FE06  4C                 	db	76	;'L'
  2945  00FE07  4F                 	db	79	;'O'
  2946  00FE08  41                 	db	65	;'A'
  2947  00FE09  44                 	db	68	;'D'
  2948  00FE0A  20                 	db	32
  2949  00FE0B  50                 	db	80	;'P'
  2950  00FE0C  57                 	db	87	;'W'
  2951  00FE0D  52                 	db	82	;'R'
  2952  00FE0E  20                 	db	32
  2953  00FE0F  25                 	db	37
  2954  00FE10  33                 	db	51	;'3'
  2955  00FE11  2E                 	db	46
  2956  00FE12  32                 	db	50	;'2'
  2957  00FE13  66                 	db	102	;'f'
  2958  00FE14  20                 	db	32
  2959  00FE15  20                 	db	32
  2960  00FE16  20                 	db	32
  2961  00FE17  20                 	db	32
  2962  00FE18  20                 	db	32
  2963  00FE19  20                 	db	32
  2964  00FE1A  20                 	db	32
  2965  00FE1B  00                 	db	0
  2966  00FE1C                     STR_22:
  2967                           
  2968                           ; BSR set to: 57
  2969  00FE1C  50                 	db	80	;'P'
  2970  00FE1D  56                 	db	86	;'V'
  2971  00FE1E  20                 	db	32
  2972  00FE1F  25                 	db	37
  2973  00FE20  63                 	db	99	;'c'
  2974  00FE21  20                 	db	32
  2975  00FE22  50                 	db	80	;'P'
  2976  00FE23  57                 	db	87	;'W'
  2977  00FE24  52                 	db	82	;'R'
  2978  00FE25  20                 	db	32
  2979  00FE26  25                 	db	37
  2980  00FE27  33                 	db	51	;'3'
  2981  00FE28  2E                 	db	46
  2982  00FE29  32                 	db	50	;'2'
  2983  00FE2A  66                 	db	102	;'f'
  2984  00FE2B  20                 	db	32
  2985  00FE2C  20                 	db	32
  2986  00FE2D  20                 	db	32
  2987  00FE2E  20                 	db	32
  2988  00FE2F  20                 	db	32
  2989  00FE30  20                 	db	32
  2990  00FE31  00                 	db	0
  2991  00FE32                     STR_11:
  2992                           
  2993                           ; BSR set to: 57
  2994  00FE32  42                 	db	66	;'B'
  2995  00FE33  61                 	db	97	;'a'
  2996  00FE34  74                 	db	116	;'t'
  2997  00FE35  74                 	db	116	;'t'
  2998  00FE36  65                 	db	101	;'e'
  2999  00FE37  72                 	db	114	;'r'
  3000  00FE38  79                 	db	121	;'y'
  3001  00FE39  20                 	db	32
  3002  00FE3A  41                 	db	65	;'A'
  3003  00FE3B  68                 	db	104	;'h'
  3004  00FE3C  20                 	db	32
  3005  00FE3D  25                 	db	37
  3006  00FE3E  33                 	db	51	;'3'
  3007  00FE3F  2E                 	db	46
  3008  00FE40  32                 	db	50	;'2'
  3009  00FE41  66                 	db	102	;'f'
  3010  00FE42  20                 	db	32
  3011  00FE43  20                 	db	32
  3012  00FE44  20                 	db	32
  3013  00FE45  20                 	db	32
  3014  00FE46  20                 	db	32
  3015  00FE47  00                 	db	0
  3016  00FE48                     STR_29:
  3017                           
  3018                           ; BSR set to: 57
  3019  00FE48  42                 	db	66	;'B'
  3020  00FE49  56                 	db	86	;'V'
  3021  00FE4A  20                 	db	32
  3022  00FE4B  25                 	db	37
  3023  00FE4C  32                 	db	50	;'2'
  3024  00FE4D  2E                 	db	46
  3025  00FE4E  32                 	db	50	;'2'
  3026  00FE4F  66                 	db	102	;'f'
  3027  00FE50  20                 	db	32
  3028  00FE51  42                 	db	66	;'B'
  3029  00FE52  41                 	db	65	;'A'
  3030  00FE53  20                 	db	32
  3031  00FE54  25                 	db	37
  3032  00FE55  32                 	db	50	;'2'
  3033  00FE56  2E                 	db	46
  3034  00FE57  32                 	db	50	;'2'
  3035  00FE58  66                 	db	102	;'f'
  3036  00FE59  20                 	db	32
  3037  00FE5A  20                 	db	32
  3038  00FE5B  20                 	db	32
  3039  00FE5C  20                 	db	32
  3040  00FE5D  00                 	db	0
  3041  00FE5E                     STR_30:
  3042                           
  3043                           ; BSR set to: 57
  3044  00FE5E  43                 	db	67	;'C'
  3045  00FE5F  56                 	db	86	;'V'
  3046  00FE60  20                 	db	32
  3047  00FE61  25                 	db	37
  3048  00FE62  32                 	db	50	;'2'
  3049  00FE63  2E                 	db	46
  3050  00FE64  32                 	db	50	;'2'
  3051  00FE65  66                 	db	102	;'f'
  3052  00FE66  20                 	db	32
  3053  00FE67  4C                 	db	76	;'L'
  3054  00FE68  41                 	db	65	;'A'
  3055  00FE69  20                 	db	32
  3056  00FE6A  25                 	db	37
  3057  00FE6B  32                 	db	50	;'2'
  3058  00FE6C  2E                 	db	46
  3059  00FE6D  32                 	db	50	;'2'
  3060  00FE6E  66                 	db	102	;'f'
  3061  00FE6F  20                 	db	32
  3062  00FE70  20                 	db	32
  3063  00FE71  20                 	db	32
  3064  00FE72  20                 	db	32
  3065  00FE73  00                 	db	0
  3066  00FE74                     STR_28:
  3067                           
  3068                           ; BSR set to: 57
  3069  00FE74  50                 	db	80	;'P'
  3070  00FE75  56                 	db	86	;'V'
  3071  00FE76  20                 	db	32
  3072  00FE77  25                 	db	37
  3073  00FE78  32                 	db	50	;'2'
  3074  00FE79  2E                 	db	46
  3075  00FE7A  32                 	db	50	;'2'
  3076  00FE7B  66                 	db	102	;'f'
  3077  00FE7C  20                 	db	32
  3078  00FE7D  50                 	db	80	;'P'
  3079  00FE7E  41                 	db	65	;'A'
  3080  00FE7F  20                 	db	32
  3081  00FE80  25                 	db	37
  3082  00FE81  32                 	db	50	;'2'
  3083  00FE82  2E                 	db	46
  3084  00FE83  32                 	db	50	;'2'
  3085  00FE84  66                 	db	102	;'f'
  3086  00FE85  20                 	db	32
  3087  00FE86  20                 	db	32
  3088  00FE87  20                 	db	32
  3089  00FE88  20                 	db	32
  3090  00FE89  00                 	db	0
  3091  00FE8A                     STR_40:
  3092                           
  3093                           ; BSR set to: 57
  3094  00FE8A  25                 	db	37
  3095  00FE8B  64                 	db	100	;'d'
  3096  00FE8C  20                 	db	32
  3097  00FE8D  25                 	db	37
  3098  00FE8E  32                 	db	50	;'2'
  3099  00FE8F  2E                 	db	46
  3100  00FE90  34                 	db	52	;'4'
  3101  00FE91  66                 	db	102	;'f'
  3102  00FE92  2C                 	db	44
  3103  00FE93  20                 	db	32
  3104  00FE94  25                 	db	37
  3105  00FE95  64                 	db	100	;'d'
  3106  00FE96  20                 	db	32
  3107  00FE97  20                 	db	32
  3108  00FE98  54                 	db	84	;'T'
  3109  00FE99  52                 	db	82	;'R'
  3110  00FE9A  49                 	db	73	;'I'
  3111  00FE9B  4D                 	db	77	;'M'
  3112  00FE9C  20                 	db	32
  3113  00FE9D  20                 	db	32
  3114  00FE9E  20                 	db	32
  3115  00FE9F  00                 	db	0
  3116  00FEA0                     STR_5:
  3117                           
  3118                           ; BSR set to: 57
  3119  00FEA0  20                 	db	32
  3120  00FEA1  20                 	db	32
  3121  00FEA2  20                 	db	32
  3122  00FEA3  20                 	db	32
  3123  00FEA4  20                 	db	32
  3124  00FEA5  20                 	db	32
  3125  00FEA6  20                 	db	32
  3126  00FEA7  20                 	db	32
  3127  00FEA8  20                 	db	32
  3128  00FEA9  20                 	db	32
  3129  00FEAA  20                 	db	32
  3130  00FEAB  20                 	db	32
  3131  00FEAC  20                 	db	32
  3132  00FEAD  20                 	db	32
  3133  00FEAE  20                 	db	32
  3134  00FEAF  20                 	db	32
  3135  00FEB0  20                 	db	32
  3136  00FEB1  20                 	db	32
  3137  00FEB2  20                 	db	32
  3138  00FEB3  20                 	db	32
  3139  00FEB4  00                 	db	0
  3140  00FEB5                     STR_8:
  3141                           
  3142                           ; BSR set to: 57
  3143  00FEB5  42                 	db	66	;'B'
  3144  00FEB6  56                 	db	86	;'V'
  3145  00FEB7  20                 	db	32
  3146  00FEB8  25                 	db	37
  3147  00FEB9  32                 	db	50	;'2'
  3148  00FEBA  2E                 	db	46
  3149  00FEBB  34                 	db	52	;'4'
  3150  00FEBC  66                 	db	102	;'f'
  3151  00FEBD  20                 	db	32
  3152  00FEBE  20                 	db	32
  3153  00FEBF  20                 	db	32
  3154  00FEC0  20                 	db	32
  3155  00FEC1  20                 	db	32
  3156  00FEC2  20                 	db	32
  3157  00FEC3  20                 	db	32
  3158  00FEC4  20                 	db	32
  3159  00FEC5  20                 	db	32
  3160  00FEC6  20                 	db	32
  3161  00FEC7  20                 	db	32
  3162  00FEC8  20                 	db	32
  3163  00FEC9  00                 	db	0
  3164  00FECA                     STR_4:
  3165                           
  3166                           ; BSR set to: 57
  3167  00FECA  20                 	db	32
  3168  00FECB  4E                 	db	78	;'N'
  3169  00FECC  53                 	db	83	;'S'
  3170  00FECD  41                 	db	65	;'A'
  3171  00FECE  53                 	db	83	;'S'
  3172  00FECF  50                 	db	80	;'P'
  3173  00FED0  4F                 	db	79	;'O'
  3174  00FED1  4F                 	db	79	;'O'
  3175  00FED2  4B                 	db	75	;'K'
  3176  00FED3  20                 	db	32
  3177  00FED4  20                 	db	32
  3178  00FED5  20                 	db	32
  3179  00FED6  20                 	db	32
  3180  00FED7  20                 	db	32
  3181  00FED8  20                 	db	32
  3182  00FED9  20                 	db	32
  3183  00FEDA  20                 	db	32
  3184  00FEDB  20                 	db	32
  3185  00FEDC  20                 	db	32
  3186  00FEDD  20                 	db	32
  3187  00FEDE  00                 	db	0
  3188  00FEDF                     STR_12:
  3189                           
  3190                           ; BSR set to: 57
  3191  00FEDF  42                 	db	66	;'B'
  3192  00FEE0  61                 	db	97	;'a'
  3193  00FEE1  74                 	db	116	;'t'
  3194  00FEE2  74                 	db	116	;'t'
  3195  00FEE3  65                 	db	101	;'e'
  3196  00FEE4  72                 	db	114	;'r'
  3197  00FEE5  79                 	db	121	;'y'
  3198  00FEE6  20                 	db	32
  3199  00FEE7  45                 	db	69	;'E'
  3200  00FEE8  53                 	db	83	;'S'
  3201  00FEE9  52                 	db	82	;'R'
  3202  00FEEA  20                 	db	32
  3203  00FEEB  20                 	db	32
  3204  00FEEC  20                 	db	32
  3205  00FEED  20                 	db	32
  3206  00FEEE  20                 	db	32
  3207  00FEEF  20                 	db	32
  3208  00FEF0  20                 	db	32
  3209  00FEF1  20                 	db	32
  3210  00FEF2  20                 	db	32
  3211  00FEF3  00                 	db	0
  3212  00FEF4                     STR_13:
  3213                           
  3214                           ; BSR set to: 57
  3215  00FEF4  43                 	db	67	;'C'
  3216  00FEF5  61                 	db	97	;'a'
  3217  00FEF6  6C                 	db	108	;'l'
  3218  00FEF7  63                 	db	99	;'c'
  3219  00FEF8  75                 	db	117	;'u'
  3220  00FEF9  6C                 	db	108	;'l'
  3221  00FEFA  61                 	db	97	;'a'
  3222  00FEFB  74                 	db	116	;'t'
  3223  00FEFC  69                 	db	105	;'i'
  3224  00FEFD  6F                 	db	111	;'o'
  3225  00FEFE  6E                 	db	110	;'n'
  3226  00FEFF  20                 	db	32
  3227  00FF00  20                 	db	32
  3228  00FF01  20                 	db	32
  3229  00FF02  20                 	db	32
  3230  00FF03  20                 	db	32
  3231  00FF04  20                 	db	32
  3232  00FF05  20                 	db	32
  3233  00FF06  20                 	db	32
  3234  00FF07  20                 	db	32
  3235  00FF08  00                 	db	0
  3236  00FF09                     STR_2:
  3237                           
  3238                           ; BSR set to: 57
  3239  00FF09  20                 	db	32
  3240  00FF0A  56                 	db	86	;'V'
  3241  00FF0B  65                 	db	101	;'e'
  3242  00FF0C  72                 	db	114	;'r'
  3243  00FF0D  73                 	db	115	;'s'
  3244  00FF0E  69                 	db	105	;'i'
  3245  00FF0F  6F                 	db	111	;'o'
  3246  00FF10  6E                 	db	110	;'n'
  3247  00FF11  20                 	db	32
  3248  00FF12  25                 	db	37
  3249  00FF13  73                 	db	115	;'s'
  3250  00FF14  20                 	db	32
  3251  00FF15  20                 	db	32
  3252  00FF16  20                 	db	32
  3253  00FF17  20                 	db	32
  3254  00FF18  20                 	db	32
  3255  00FF19  20                 	db	32
  3256  00FF1A  20                 	db	32
  3257  00FF1B  20                 	db	32
  3258  00FF1C  20                 	db	32
  3259  00FF1D  00                 	db	0
  3260  00FF1E                     STR_1:
  3261                           
  3262                           ; BSR set to: 57
  3263  00FF1E  20                 	db	32
  3264  00FF1F  4D                 	db	77	;'M'
  3265  00FF20  42                 	db	66	;'B'
  3266  00FF21  4D                 	db	77	;'M'
  3267  00FF22  43                 	db	67	;'C'
  3268  00FF23  20                 	db	32
  3269  00FF24  53                 	db	83	;'S'
  3270  00FF25  4F                 	db	79	;'O'
  3271  00FF26  4C                 	db	76	;'L'
  3272  00FF27  41                 	db	65	;'A'
  3273  00FF28  52                 	db	82	;'R'
  3274  00FF29  4D                 	db	77	;'M'
  3275  00FF2A  4F                 	db	79	;'O'
  3276  00FF2B  4E                 	db	78	;'N'
  3277  00FF2C  20                 	db	32
  3278  00FF2D  20                 	db	32
  3279  00FF2E  20                 	db	32
  3280  00FF2F  20                 	db	32
  3281  00FF30  20                 	db	32
  3282  00FF31  20                 	db	32
  3283  00FF32  00                 	db	0
  3284  00FF33                     STR_15:
  3285                           
  3286                           ; BSR set to: 57
  3287  00FF33  43                 	db	67	;'C'
  3288  00FF34  68                 	db	104	;'h'
  3289  00FF35  65                 	db	101	;'e'
  3290  00FF36  63                 	db	99	;'c'
  3291  00FF37  6B                 	db	107	;'k'
  3292  00FF38  69                 	db	105	;'i'
  3293  00FF39  6E                 	db	110	;'n'
  3294  00FF3A  67                 	db	103	;'g'
  3295  00FF3B  20                 	db	32
  3296  00FF3C  25                 	db	37
  3297  00FF3D  63                 	db	99	;'c'
  3298  00FF3E  20                 	db	32
  3299  00FF3F  25                 	db	37
  3300  00FF40  63                 	db	99	;'c'
  3301  00FF41  20                 	db	32
  3302  00FF42  20                 	db	32
  3303  00FF43  20                 	db	32
  3304  00FF44  20                 	db	32
  3305  00FF45  20                 	db	32
  3306  00FF46  20                 	db	32
  3307  00FF47  00                 	db	0
  3308  00FF48                     STR_14:
  3309                           
  3310                           ; BSR set to: 57
  3311  00FF48  43                 	db	67	;'C'
  3312  00FF49  68                 	db	104	;'h'
  3313  00FF4A  65                 	db	101	;'e'
  3314  00FF4B  63                 	db	99	;'c'
  3315  00FF4C  6B                 	db	107	;'k'
  3316  00FF4D  20                 	db	32
  3317  00FF4E  33                 	db	51	;'3'
  3318  00FF4F  30                 	db	48	;'0'
  3319  00FF50  20                 	db	32
  3320  00FF51  73                 	db	115	;'s'
  3321  00FF52  65                 	db	101	;'e'
  3322  00FF53  63                 	db	99	;'c'
  3323  00FF54  6F                 	db	111	;'o'
  3324  00FF55  6E                 	db	110	;'n'
  3325  00FF56  64                 	db	100	;'d'
  3326  00FF57  73                 	db	115	;'s'
  3327  00FF58  20                 	db	32
  3328  00FF59  20                 	db	32
  3329  00FF5A  20                 	db	32
  3330  00FF5B  20                 	db	32
  3331  00FF5C  00                 	db	0
  3332  00FF5D                     STR_47:
  3333                           
  3334                           ; BSR set to: 57
  3335  00FF5D  48                 	db	72	;'H'
  3336  00FF5E  45                 	db	69	;'E'
  3337  00FF5F  4C                 	db	76	;'L'
  3338  00FF60  50                 	db	80	;'P'
  3339  00FF61  20                 	db	32
  3340  00FF62  25                 	db	37
  3341  00FF63  73                 	db	115	;'s'
  3342  00FF64  20                 	db	32
  3343  00FF65  20                 	db	32
  3344  00FF66  20                 	db	32
  3345  00FF67  20                 	db	32
  3346  00FF68  20                 	db	32
  3347  00FF69  20                 	db	32
  3348  00FF6A  20                 	db	32
  3349  00FF6B  20                 	db	32
  3350  00FF6C  20                 	db	32
  3351  00FF6D  20                 	db	32
  3352  00FF6E  20                 	db	32
  3353  00FF6F  00                 	db	0
  3354  00FF70                     
  3355                           ; BSR set to: 57
  3356  00FF70  44                 	db	68	;'D'
  3357  00FF71  49                 	db	73	;'I'
  3358  00FF72  53                 	db	83	;'S'
  3359  00FF73  50                 	db	80	;'P'
  3360  00FF74  4C                 	db	76	;'L'
  3361  00FF75  41                 	db	65	;'A'
  3362  00FF76  59                 	db	89	;'Y'
  3363  00FF77  20                 	db	32
  3364  00FF78  25                 	db	37
  3365  00FF79  73                 	db	115	;'s'
  3366  00FF7A  20                 	db	32
  3367  00FF7B  20                 	db	32
  3368  00FF7C  20                 	db	32
  3369  00FF7D  20                 	db	32
  3370  00FF7E  20                 	db	32
  3371  00FF7F  20                 	db	32
  3372  00FF80  20                 	db	32
  3373  00FF81  20                 	db	32
  3374  00FF82  00                 	db	0
  3375  00FF83                     
  3376                           ; BSR set to: 57
  3377  00FF83  25                 	db	37
  3378  00FF84  64                 	db	100	;'d'
  3379  00FF85  20                 	db	32
  3380  00FF86  25                 	db	37
  3381  00FF87  32                 	db	50	;'2'
  3382  00FF88  2E                 	db	46
  3383  00FF89  34                 	db	52	;'4'
  3384  00FF8A  66                 	db	102	;'f'
  3385  00FF8B  2C                 	db	44
  3386  00FF8C  20                 	db	32
  3387  00FF8D  25                 	db	37
  3388  00FF8E  64                 	db	100	;'d'
  3389  00FF8F  20                 	db	32
  3390  00FF90  20                 	db	32
  3391  00FF91  20                 	db	32
  3392  00FF92  23                 	db	35
  3393  00FF93  00                 	db	0
  3394  00FF94                     STR_19:
  3395                           
  3396                           ; BSR set to: 57
  3397  00FF94  25                 	db	37
  3398  00FF95  64                 	db	100	;'d'
  3399  00FF96  20                 	db	32
  3400  00FF97  25                 	db	37
  3401  00FF98  32                 	db	50	;'2'
  3402  00FF99  2E                 	db	46
  3403  00FF9A  34                 	db	52	;'4'
  3404  00FF9B  66                 	db	102	;'f'
  3405  00FF9C  20                 	db	32
  3406  00FF9D  20                 	db	32
  3407  00FF9E  20                 	db	32
  3408  00FF9F  25                 	db	37
  3409  00FFA0  64                 	db	100	;'d'
  3410  00FFA1  20                 	db	32
  3411  00FFA2  20                 	db	32
  3412  00FFA3  00                 	db	0
  3413  00FFA4                     STR_51:
  3414                           
  3415                           ; BSR set to: 57
  3416  00FFA4  76                 	db	118	;'v'
  3417  00FFA5  74                 	db	116	;'t'
  3418  00FFA6  65                 	db	101	;'e'
  3419  00FFA7  72                 	db	114	;'r'
  3420  00FFA8  6D                 	db	109	;'m'
  3421  00FFA9  20                 	db	32
  3422  00FFAA  25                 	db	37
  3423  00FFAB  78                 	db	120	;'x'
  3424  00FFAC  3A                 	db	58	;':'
  3425  00FFAD  25                 	db	37
  3426  00FFAE  78                 	db	120	;'x'
  3427  00FFAF  20                 	db	32
  3428  00FFB0  20                 	db	32
  3429  00FFB1  20                 	db	32
  3430  00FFB2  00                 	db	0
  3431  00FFB3                     STR_45:
  3432                           
  3433                           ; BSR set to: 57
  3434  00FFB3  46                 	db	70	;'F'
  3435  00FFB4  65                 	db	101	;'e'
  3436  00FFB5  62                 	db	98	;'b'
  3437  00FFB6  20                 	db	32
  3438  00FFB7  20                 	db	32
  3439  00FFB8  35                 	db	53	;'5'
  3440  00FFB9  20                 	db	32
  3441  00FFBA  32                 	db	50	;'2'
  3442  00FFBB  30                 	db	48	;'0'
  3443  00FFBC  32                 	db	50	;'2'
  3444  00FFBD  30                 	db	48	;'0'
  3445  00FFBE  00                 	db	0
  3446  00FFBF                     STR_49:
  3447                           
  3448                           ; BSR set to: 57
  3449  00FFBF  25                 	db	37
  3450  00FFC0  73                 	db	115	;'s'
  3451  00FFC1  20                 	db	32
  3452  00FFC2  20                 	db	32
  3453  00FFC3  20                 	db	32
  3454  00FFC4  20                 	db	32
  3455  00FFC5  20                 	db	32
  3456  00FFC6  20                 	db	32
  3457  00FFC7  20                 	db	32
  3458  00FFC8  00                 	db	0
  3459  00FFC9                     STR_46:
  3460                           
  3461                           ; BSR set to: 57
  3462  00FFC9  31                 	db	49	;'1'
  3463  00FFCA  38                 	db	56	;'8'
  3464  00FFCB  3A                 	db	58	;':'
  3465  00FFCC  32                 	db	50	;'2'
  3466  00FFCD  34                 	db	52	;'4'
  3467  00FFCE  3A                 	db	58	;':'
  3468  00FFCF  31                 	db	49	;'1'
  3469  00FFD0  37                 	db	55	;'7'
  3470  00FFD1  00                 	db	0
  3471  00FFD2                     STR_3:
  3472                           
  3473                           ; BSR set to: 57
  3474  00FFD2  31                 	db	49	;'1'
  3475  00FFD3  2E                 	db	46
  3476  00FFD4  31                 	db	49	;'1'
  3477  00FFD5  36                 	db	54	;'6'
  3478  00FFD6  00                 	db	0
  3479  00FFD7                     STR_65:
  3480                           
  3481                           ; BSR set to: 57
  3482  00FFD7  49                 	db	73	;'I'
  3483  00FFD8  4E                 	db	78	;'N'
  3484  00FFD9  46                 	db	70	;'F'
  3485  00FFDA  00                 	db	0
  3486  00FFDB                     STR_69:
  3487                           
  3488                           ; BSR set to: 57
  3489  00FFDB  4E                 	db	78	;'N'
  3490  00FFDC  41                 	db	65	;'A'
  3491  00FFDD  4E                 	db	78	;'N'
  3492  00FFDE  00                 	db	0
  3493  00FFDF                     STR_66:
  3494                           
  3495                           ; BSR set to: 57
  3496  00FFDF  69                 	db	105	;'i'
  3497  00FFE0  6E                 	db	110	;'n'
  3498  00FFE1  66                 	db	102	;'f'
  3499  00FFE2  00                 	db	0
  3500  00FFE3                     STR_70:
  3501                           
  3502                           ; BSR set to: 57
  3503  00FFE3  6E                 	db	110	;'n'
  3504  00FFE4  61                 	db	97	;'a'
  3505  00FFE5  6E                 	db	110	;'n'
  3506  00FFE6  00                 	db	0
  3507  00FFE7                     STR_96:
  3508                           
  3509                           ; BSR set to: 57
  3510  00FFE7  6C                 	db	108	;'l'
  3511  00FFE8  58                 	db	88	;'X'
  3512  00FFE9  00                 	db	0
  3513  00FFEA                     STR_73:
  3514                           
  3515                           ; BSR set to: 57
  3516  00FFEA  6C                 	db	108	;'l'
  3517  00FFEB  64                 	db	100	;'d'
  3518  00FFEC  00                 	db	0
  3519  00FFED                     STR_82:
  3520                           
  3521                           ; BSR set to: 57
  3522  00FFED  6C                 	db	108	;'l'
  3523  00FFEE  66                 	db	102	;'f'
  3524  00FFEF  00                 	db	0
  3525  00FFF0                     STR_77:
  3526                           
  3527                           ; BSR set to: 57
  3528  00FFF0  6C                 	db	108	;'l'
  3529  00FFF1  69                 	db	105	;'i'
  3530  00FFF2  00                 	db	0
  3531  00FFF3                     STR_87:
  3532                           
  3533                           ; BSR set to: 57
  3534  00FFF3  6C                 	db	108	;'l'
  3535  00FFF4  75                 	db	117	;'u'
  3536  00FFF5  00                 	db	0
  3537  00FFF6                     STR_92:
  3538                           
  3539                           ; BSR set to: 57
  3540  00FFF6  6C                 	db	108	;'l'
  3541  00FFF7  78                 	db	120	;'x'
  3542  00FFF8  00                 	db	0
  3543  00FFF9                     STR_44:
  3544                           
  3545                           ; BSR set to: 57
  3546  00FFF9  25                 	db	37
  3547  00FFFA  63                 	db	99	;'c'
  3548  00FFFB  00                 	db	0
  3549  00FFFC                     STR_43:
  3550                           
  3551                           ; BSR set to: 57
  3552  00FFFC  25                 	db	37
  3553  00FFFD  73                 	db	115	;'s'
  3554  00FFFE  00                 	db	0
  3555  0000                     
  3556                           ; #config settings
  3557  00FFFF  00                 	db	0	; dummy byte at the end
  3558  0000                     
  3559                           	psect	cinit
  3560  01A47A                     __pcinit:
  3561                           	opt callstack 0
  3562  01A47A                     start_initialization:
  3563                           	opt callstack 0
  3564  01A47A                     __initialization:
  3565                           	opt callstack 0
  3566                           
  3567                           ; Initialize objects allocated to BIGRAM (811 bytes)
  3568                           ; load TBLPTR registers with __pidataBIGRAM
  3569  01A47A  0E54               	movlw	low __pidataBIGRAM
  3570  01A47C  6EF6               	movwf	tblptrl,c
  3571  01A47E  0E6B               	movlw	high __pidataBIGRAM
  3572  01A480  6EF7               	movwf	tblptrh,c
  3573  01A482  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3574  01A484  6EF8               	movwf	tblptru,c
  3575  01A486  EE01  F0FF         	lfsr	0,__pdataBIGRAM
  3576  01A48A  EE20 F32B          	lfsr	2,811
  3577  01A48E                     copy_data0:
  3578  01A48E  0009               	tblrd		*+
  3579  01A490  006F FFD7 FFEE     	movff	tablat,postinc0
  3580  01A496  50DD               	movf	postdec2,w,c
  3581  01A498  50D9               	movf	fsr2l,w,c
  3582  01A49A  E1F9               	bnz	copy_data0
  3583  01A49C  50DA               	movf	fsr2h,w,c
  3584  01A49E  E1F7               	bnz	copy_data0
  3585                           
  3586                           ; Initialize objects allocated to BANK1 (207 bytes)
  3587                           ; load TBLPTR registers with __pidataBANK1
  3588  01A4A0  0E2E               	movlw	low __pidataBANK1
  3589  01A4A2  6EF6               	movwf	tblptrl,c
  3590  01A4A4  0EA6               	movlw	high __pidataBANK1
  3591  01A4A6  6EF7               	movwf	tblptrh,c
  3592  01A4A8  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3593  01A4AA  6EF8               	movwf	tblptru,c
  3594  01A4AC  EE00  F100         	lfsr	0,__pdataBANK1
  3595  01A4B0  EE20 F0CF          	lfsr	2,207
  3596  01A4B4                     copy_data1:
  3597  01A4B4  0009               	tblrd		*+
  3598  01A4B6  006F FFD7 FFEE     	movff	tablat,postinc0
  3599  01A4BC  50DD               	movf	postdec2,w,c
  3600  01A4BE  50D9               	movf	fsr2l,w,c
  3601  01A4C0  E1F9               	bnz	copy_data1
  3602                           
  3603                           ; Initialize objects allocated to BANK0 (54 bytes)
  3604                           ; load TBLPTR registers with __pidataBANK0
  3605  01A4C2  0E8C               	movlw	low __pidataBANK0
  3606  01A4C4  6EF6               	movwf	tblptrl,c
  3607  01A4C6  0EBD               	movlw	high __pidataBANK0
  3608  01A4C8  6EF7               	movwf	tblptrh,c
  3609  01A4CA  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3610  01A4CC  6EF8               	movwf	tblptru,c
  3611  01A4CE  EE00  F0AF         	lfsr	0,__pdataBANK0
  3612  01A4D2  EE20 F036          	lfsr	2,54
  3613  01A4D6                     copy_data2:
  3614  01A4D6  0009               	tblrd		*+
  3615  01A4D8  006F FFD7 FFEE     	movff	tablat,postinc0
  3616  01A4DE  50DD               	movf	postdec2,w,c
  3617  01A4E0  50D9               	movf	fsr2l,w,c
  3618  01A4E2  E1F9               	bnz	copy_data2
  3619                           
  3620                           ; Clear objects allocated to BIGRAM (482 bytes)
  3621  01A4E4  EE02  F02A         	lfsr	0,__pbssBIGRAM
  3622  01A4E8  EE20 F1E2          	lfsr	2,482
  3623  01A4EC                     clear_0:
  3624  01A4EC  6AEE               	clrf	postinc0,c
  3625  01A4EE  50DD               	movf	postdec2,w,c
  3626  01A4F0  50D9               	movf	fsr2l,w,c
  3627  01A4F2  E1FC               	bnz	clear_0
  3628  01A4F4  50DA               	movf	fsr2h,w,c
  3629  01A4F6  E1FA               	bnz	clear_0
  3630                           
  3631                           ; Clear objects allocated to BANK4 (255 bytes)
  3632  01A4F8  EE01  F000         	lfsr	0,__pbssBANK4
  3633  01A4FC  EE20 F0FF          	lfsr	2,255
  3634  01A500                     clear_1:
  3635  01A500  6AEE               	clrf	postinc0,c
  3636  01A502  50DD               	movf	postdec2,w,c
  3637  01A504  50D9               	movf	fsr2l,w,c
  3638  01A506  E1FC               	bnz	clear_1
  3639  01A508  50DA               	movf	fsr2h,w,c
  3640  01A50A  E1FA               	bnz	clear_1
  3641                           
  3642                           ; Clear objects allocated to BANK3 (198 bytes)
  3643  01A50C  EE00  F300         	lfsr	0,__pbssBANK3
  3644  01A510  0EC6               	movlw	198
  3645  01A512                     clear_2:
  3646  01A512  6AEE               	clrf	postinc0,c
  3647  01A514  06E8               	decf	wreg,f,c
  3648  01A516  E1FD               	bnz	clear_2
  3649                           
  3650                           ; Clear objects allocated to BANK2 (231 bytes)
  3651  01A518  EE00  F200         	lfsr	0,__pbssBANK2
  3652  01A51C  0EE7               	movlw	231
  3653  01A51E                     clear_3:
  3654  01A51E  6AEE               	clrf	postinc0,c
  3655  01A520  06E8               	decf	wreg,f,c
  3656  01A522  E1FD               	bnz	clear_3
  3657                           
  3658                           ; Clear objects allocated to BANK1 (46 bytes)
  3659  01A524  EE00  F1CF         	lfsr	0,__pbssBANK1
  3660  01A528  0E2E               	movlw	46
  3661  01A52A                     clear_4:
  3662  01A52A  6AEE               	clrf	postinc0,c
  3663  01A52C  06E8               	decf	wreg,f,c
  3664  01A52E  E1FD               	bnz	clear_4
  3665                           
  3666                           ; Clear objects allocated to BANK0 (79 bytes)
  3667  01A530  EE00  F060         	lfsr	0,__pbssBANK0
  3668  01A534  0E4F               	movlw	79
  3669  01A536                     clear_5:
  3670  01A536  6AEE               	clrf	postinc0,c
  3671  01A538  06E8               	decf	wreg,f,c
  3672  01A53A  E1FD               	bnz	clear_5
  3673                           
  3674                           ; Clear objects allocated to COMRAM (14 bytes)
  3675  01A53C  EE00  F03A         	lfsr	0,__pbssCOMRAM
  3676  01A540  0E0E               	movlw	14
  3677  01A542                     clear_6:
  3678  01A542  6AEE               	clrf	postinc0,c
  3679  01A544  06E8               	decf	wreg,f,c
  3680  01A546  E1FD               	bnz	clear_6
  3681                           
  3682                           ;
  3683                           ; Setup IVTBASE
  3684                           ;
  3685  01A548  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  3686  01A54A  6ED5               	movwf	213,c
  3687  01A54C  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  3688  01A54E  6ED6               	movwf	214,c
  3689  01A550  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  3690  01A552  6ED7               	movwf	215,c
  3691  01A554                     end_of_initialization:
  3692                           	opt callstack 0
  3693  01A554                     __end_of__initialization:
  3694                           	opt callstack 0
  3695  01A554  0100               	movlb	0
  3696  01A556  EF22  F089         	goto	_main	;jump to C main() function
  3697                           
  3698                           	psect	bssCOMRAM
  3699  00003A                     __pbssCOMRAM:
  3700                           	opt callstack 0
  3701  00003A                     _width:
  3702                           	opt callstack 0
  3703  00003A                     	ds	2
  3704  00003C                     _prec:
  3705                           	opt callstack 0
  3706  00003C                     	ds	2
  3707  00003E                     _flags:
  3708                           	opt callstack 0
  3709  00003E                     	ds	2
  3710  000040                     calc_bsoc@log_update_wait:
  3711                           	opt callstack 0
  3712  000040                     	ds	1
  3713  000041                     check_day_time@day_delay:
  3714                           	opt callstack 0
  3715  000041                     	ds	1
  3716  000042                     dac_spi_control@S0:
  3717                           	opt callstack 0
  3718  000042                     	ds	1
  3719  000043                     dac_spi_control@init:
  3720                           	opt callstack 0
  3721  000043                     	ds	1
  3722  000044                     _uart2RxHead:
  3723                           	opt callstack 0
  3724  000044                     	ds	1
  3725  000045                     _uart2TxBufferRemaining:
  3726                           	opt callstack 0
  3727  000045                     	ds	1
  3728  000046                     _uart2TxTail:
  3729                           	opt callstack 0
  3730  000046                     	ds	1
  3731  000047                     _uart1RxHead:
  3732                           	opt callstack 0
  3733  000047                     	ds	1
  3734                           
  3735                           	psect	bssBANK0
  3736  000060                     __pbssBANK0:
  3737                           	opt callstack 0
  3738  000060                     fabsf@F463:
  3739                           	opt callstack 0
  3740  000060                     	ds	4
  3741  000064                     ___fpclassifyf@F463:
  3742                           	opt callstack 0
  3743  000064                     	ds	4
  3744  000068                     calc_ror_data@bcror:
  3745                           	opt callstack 0
  3746  000068                     	ds	4
  3747  00006C                     calc_ror_data@bvror:
  3748                           	opt callstack 0
  3749  00006C                     	ds	4
  3750  000070                     calc_model_data@bcror:
  3751                           	opt callstack 0
  3752  000070                     	ds	4
  3753  000074                     calc_model_data@bvror:
  3754                           	opt callstack 0
  3755  000074                     	ds	4
  3756  000078                     wdtdelay@dcount:
  3757                           	opt callstack 0
  3758  000078                     	ds	4
  3759  00007C                     _TMR3_InterruptHandler:
  3760                           	opt callstack 0
  3761  00007C                     	ds	3
  3762  00007F                     _TMR5_InterruptHandler:
  3763                           	opt callstack 0
  3764  00007F                     	ds	3
  3765  000082                     _TMR6_InterruptHandler:
  3766                           	opt callstack 0
  3767  000082                     	ds	3
  3768  000085                     _ADCC_ADTI_InterruptHandler:
  3769                           	opt callstack 0
  3770  000085                     	ds	3
  3771  000088                     _ADCC_ADI_InterruptHandler:
  3772                           	opt callstack 0
  3773  000088                     	ds	3
  3774  00008B                     _UART1_RxInterruptHandler:
  3775                           	opt callstack 0
  3776  00008B                     	ds	3
  3777  00008E                     _UART2_TxInterruptHandler:
  3778                           	opt callstack 0
  3779  00008E                     	ds	3
  3780  000091                     _UART2_RxInterruptHandler:
  3781                           	opt callstack 0
  3782  000091                     	ds	3
  3783  000094                     _INT1_InterruptHandler:
  3784                           	opt callstack 0
  3785  000094                     	ds	3
  3786  000097                     _INT0_InterruptHandler:
  3787                           	opt callstack 0
  3788  000097                     	ds	3
  3789  00009A                     _nout:
  3790                           	opt callstack 0
  3791  00009A                     	ds	2
  3792  00009C                     TMR3_ISR@CountCallBack:
  3793                           	opt callstack 0
  3794  00009C                     	ds	2
  3795  00009E                     _timer3ReloadVal:
  3796                           	opt callstack 0
  3797  00009E                     	ds	2
  3798  0000A0                     TMR5_ISR@CountCallBack:
  3799                           	opt callstack 0
  3800  0000A0                     	ds	2
  3801  0000A2                     _timer5ReloadVal:
  3802                           	opt callstack 0
  3803  0000A2                     	ds	2
  3804  0000A4                     esr_check@esr_state:
  3805                           	opt callstack 0
  3806  0000A4                     	ds	1
  3807  0000A5                     dac_spi_control@SB:
  3808                           	opt callstack 0
  3809  0000A5                     	ds	1
  3810  0000A6                     dac_spi_control@SC:
  3811                           	opt callstack 0
  3812  0000A6                     	ds	1
  3813  0000A7                     dac_spi_control@S2:
  3814                           	opt callstack 0
  3815  0000A7                     	ds	1
  3816  0000A8                     dac_spi_control@S1:
  3817                           	opt callstack 0
  3818  0000A8                     	ds	1
  3819  0000A9                     _mode_sw:
  3820                           	opt callstack 0
  3821  0000A9                     	ds	1
  3822  0000AA                     _uart2RxCount:
  3823                           	opt callstack 0
  3824  0000AA                     	ds	1
  3825  0000AB                     _uart2RxTail:
  3826                           	opt callstack 0
  3827  0000AB                     	ds	1
  3828  0000AC                     _uart2TxHead:
  3829                           	opt callstack 0
  3830  0000AC                     	ds	1
  3831  0000AD                     _uart1RxCount:
  3832                           	opt callstack 0
  3833  0000AD                     	ds	1
  3834  0000AE                     _uart1RxTail:
  3835                           	opt callstack 0
  3836  0000AE                     	ds	1
  3837                           
  3838                           	psect	dataBANK0
  3839  0000AF                     __pdataBANK0:
  3840                           	opt callstack 0
  3841  0000AF                     _R:
  3842                           	opt callstack 0
  3843  0000AF                     	ds	54
  3844                           
  3845                           	psect	bssBANK1
  3846  0001CF                     __pbssBANK1:
  3847                           	opt callstack 0
  3848  0001CF                     _spi_link:
  3849                           	opt callstack 0
  3850  0001CF                     	ds	12
  3851  0001DB                     _uart1RxBuffer:
  3852                           	opt callstack 0
  3853  0001DB                     	ds	8
  3854  0001E3                     spinners@s:
  3855                           	opt callstack 0
  3856  0001E3                     	ds	6
  3857  0001E9                     floorf@F524:
  3858                           	opt callstack 0
  3859  0001E9                     	ds	4
  3860  0001ED                     _utctime:
  3861                           	opt callstack 0
  3862  0001ED                     	ds	4
  3863  0001F1                     _P:
  3864                           	opt callstack 0
  3865  0001F1                     	ds	4
  3866  0001F5                     _seed:
  3867                           	opt callstack 0
  3868  0001F5                     	ds	8
  3869                           
  3870                           	psect	dataBANK1
  3871  000100                     __pdataBANK1:
  3872                           	opt callstack 0
  3873  000100                     stoa@F1166:
  3874                           	opt callstack 0
  3875  000100                     	ds	7
  3876  000107                     _V:
  3877                           	opt callstack 0
  3878  000107                     	ds	191
  3879  0001C6                     _H:
  3880                           	opt callstack 0
  3881  0001C6                     	ds	9
  3882                           
  3883                           	psect	bssBANK2
  3884  000200                     __pbssBANK2:
  3885                           	opt callstack 0
  3886  000200                     lp_filter@smooth:
  3887                           	opt callstack 0
  3888  000200                     	ds	84
  3889  000254                     _S:
  3890                           	opt callstack 0
  3891  000254                     	ds	41
  3892  00027D                     _tickCount:
  3893                           	opt callstack 0
  3894  00027D                     	ds	26
  3895  000297                     _dbuf:
  3896                           	opt callstack 0
  3897  000297                     	ds	80
  3898                           
  3899                           	psect	bssBANK3
  3900  000300                     __pbssBANK3:
  3901                           	opt callstack 0
  3902  000300                     _uart2TxBuffer:
  3903                           	opt callstack 0
  3904  000300                     	ds	64
  3905  000340                     _ring_buf2:
  3906                           	opt callstack 0
  3907  000340                     	ds	67
  3908  000383                     _ring_buf1:
  3909                           	opt callstack 0
  3910  000383                     	ds	67
  3911                           
  3912                           	psect	bssBANK4
  3913  000400                     __pbssBANK4:
  3914                           	opt callstack 0
  3915  000400                     _uart2RxBuffer:
  3916                           	opt callstack 0
  3917  000400                     	ds	255
  3918                           
  3919                           	psect	bssBIGRAM
  3920  00082A                     __pbssBIGRAM:
  3921                           	opt callstack 0
  3922  00082A                     _D:
  3923                           	opt callstack 0
  3924  00082A                     	ds	482
  3925                           
  3926                           	psect	dataBIGRAM
  3927  0004FF                     __pdataBIGRAM:
  3928                           	opt callstack 0
  3929  0004FF                     _port_data:
  3930                           	opt callstack 0
  3931  0004FF                     	ds	512
  3932  0006FF                     _C:
  3933                           	opt callstack 0
  3934  0006FF                     	ds	299
  3935                           
  3936                           	psect	cstackBANK0
  3937  0000E5                     __pcstackBANK0:
  3938                           	opt callstack 0
  3939  0000E5                     ??_TMR3_ISR:
  3940                           
  3941                           ; 1 bytes @ 0x0
  3942  0000E5                     	ds	25
  3943                           
  3944                           	psect	cstackCOMRAM
  3945  000021                     __pcstackCOMRAM:
  3946                           	opt callstack 0
  3947  000021                     ??_ADCC_ThresholdISR:
  3948  000021                     
  3949                           ; 1 bytes @ 0x0
  3950  000021                     	ds	5
  3951  000026                     ??_TMR6_ISR:
  3952                           
  3953                           ; 1 bytes @ 0x5
  3954  000026                     	ds	1
  3955  000027                     ??_INT1_ISR:
  3956  000027                     
  3957                           ; 1 bytes @ 0x6
  3958  000027                     	ds	4
  3959  00002B                     ??_TMR5_ISR:
  3960                           
  3961                           ; 1 bytes @ 0xA
  3962  00002B                     	ds	15
  3963                           
  3964 ;;
  3965 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  3966 ;;
  3967 ;; *************** function _main *****************
  3968 ;; Defined at:
  3969 ;;		line 186 in file "main.c"
  3970 ;; Parameters:    Size  Location     Type
  3971 ;;		None
  3972 ;; Auto vars:     Size  Location     Type
  3973 ;;  esr_temp        4  [STACK] float 
  3974 ;;  i_esr           2  [STACK] unsigned short 
  3975 ;;  shape           1  [STACK] unsigned char 
  3976 ;;  inp_index       1  [STACK] unsigned char 
  3977 ;;  k               1  [STACK] unsigned char 
  3978 ;;  j               1  [STACK] unsigned char 
  3979 ;;  i               1  [STACK] unsigned char 
  3980 ;;  mode            1  [STACK] enum E17013
  3981 ;;  i_ror           1  [STACK] unsigned char 
  3982 ;; Return value:  Size  Location     Type
  3983 ;;                  1  [STACK] void 
  3984 ;; Registers used:
  3985 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3986 ;; Tracked objects:
  3987 ;;		On entry : 0/0
  3988 ;;		On exit  : 0/0
  3989 ;;		Unchanged: 0/0
  3990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3995 ;;Total ram usage:        0 bytes
  3996 ;; Hardware stack levels required when called:   29
  3997 ;; This function calls:
  3998 ;;		_SYSTEM_Initialize
  3999 ;;		_StartTimer
  4000 ;;		_TimerDone
  4001 ;;		_WaitMs
  4002 ;;		___fladd
  4003 ;;		___flge
  4004 ;;		___fltol
  4005 ;;		_calc_model_data
  4006 ;;		_calc_ror_data
  4007 ;;		_check_adc_scan
  4008 ;;		_check_enter_button
  4009 ;;		_check_help
  4010 ;;		_clear_adc_scan
  4011 ;;		_clear_hid_pflags
  4012 ;;		_conv_raw_result
  4013 ;;		_convert_adc_data
  4014 ;;		_eaDogM_WriteCommand
  4015 ;;		_esr_check
  4016 ;;		_fabsf
  4017 ;;		_get_raw_result
  4018 ;;		_get_switch
  4019 ;;		_get_vterm_ptr
  4020 ;;		_hid_display
  4021 ;;		_init_bsoc
  4022 ;;		_init_display
  4023 ;;		_init_port_dma
  4024 ;;		_lp_filter
  4025 ;;		_mode_lamp_dim
  4026 ;;		_set_dac
  4027 ;;		_set_dac_a
  4028 ;;		_set_dac_b
  4029 ;;		_set_display_info
  4030 ;;		_set_load_relay_one
  4031 ;;		_set_load_relay_two
  4032 ;;		_set_vterm
  4033 ;;		_spinners
  4034 ;;		_sprintf
  4035 ;;		_srand
  4036 ;;		_start_adc_scan
  4037 ;;		_start_switch_handler
  4038 ;;		_static_soc
  4039 ;;		_update_lcd
  4040 ;;		_wait_lcd_done
  4041 ;; This function is called by:
  4042 ;;		Startup code after reset
  4043 ;; This function uses a reentrant model
  4044 ;;
  4045                           
  4046                           	psect	text0
  4047  011244                     __ptext0:
  4048                           	opt callstack 0
  4049  011244                     _main:
  4050                           	opt callstack 0
  4051                           
  4052                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4053  011244  0E11               	movlw	17
  4054  011246  26E1               	addwf	fsr1l,f,c
  4055  011248  0E00               	movlw	0
  4056  01124A  22E2               	addwfc	fsr1h,f,c
  4057                           
  4058                           ;main.c: 188:  UI_STATES mode;;main.c: 189:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  4059                           ;stkvar	_inp_index @ sp[(-17)+11]
  4060                           
  4061                           ;incstack = 0
  4062  01124C  0EFA               	movlw	-6
  4063  01124E  6AE3               	clrf	plusw1,c
  4064                           
  4065                           ;stkvar	_i @ sp[(-17)+14]
  4066  011250  0EFD               	movlw	-3
  4067  011252  6AE3               	clrf	plusw1,c
  4068                           
  4069                           ;stkvar	_j @ sp[(-17)+13]
  4070  011254  0EFC               	movlw	-4
  4071  011256  6AE3               	clrf	plusw1,c
  4072  011258  2AE3               	incf	plusw1,f,c
  4073                           
  4074                           ;stkvar	_k @ sp[(-17)+12]
  4075  01125A  0EFB               	movlw	-5
  4076  01125C  6AE3               	clrf	plusw1,c
  4077  01125E  82E3               	bsf	plusw1,1,c
  4078                           
  4079                           ;main.c: 192:  SYSTEM_Initialize();
  4080  011260  EC74  F0DC         	call	_SYSTEM_Initialize	;wreg free
  4081                           
  4082                           ; BSR set to: 60
  4083                           ;main.c: 195:  (INTCON0bits.GIEH = 1);
  4084  011264  8ED2               	bsf	210,7,c	;volatile
  4085                           
  4086                           ; BSR set to: 60
  4087                           ;main.c: 198:  (INTCON0bits.GIEL = 1);
  4088  011266  8CD2               	bsf	210,6,c	;volatile
  4089                           
  4090                           ; BSR set to: 60
  4091                           ;main.c: 200:  V.ui_state = UI_STATE_INIT;
  4092  011268  0101               	movlb	1	; () banked
  4093  01126A  6B07               	clrf	_V& (0+255),b	;volatile
  4094                           
  4095                           ; BSR set to: 1
  4096                           ;main.c: 205:  WaitMs(300);
  4097  01126C  0E2C               	movlw	44
  4098  01126E  6EE6               	movwf	postinc1,c
  4099  011270  0E01               	movlw	1
  4100  011272  6EE6               	movwf	postinc1,c
  4101  011274  ECE1  F0DE         	call	_WaitMs	;wreg free
  4102                           
  4103                           ;main.c: 206:  if (PORTBbits.RB0) {
  4104  011278  A0CB               	btfss	203,0,c	;volatile
  4105  01127A  D004               	goto	l13446
  4106                           
  4107                           ;main.c: 207:   mode = UI_STATE_HOST;
  4108                           ;stkvar	_mode @ sp[(-17)+15]
  4109  01127C  0EFE               	movlw	-2
  4110  01127E  6AE3               	clrf	plusw1,c
  4111  011280  2AE3               	incf	plusw1,f,c
  4112                           
  4113                           ;main.c: 208:  } else {
  4114  011282  D004               	goto	l13448
  4115  011284                     l13446:
  4116                           
  4117                           ;main.c: 209:   mode = UI_STATE_LOG;
  4118                           ;stkvar	_mode @ sp[(-17)+15]
  4119  011284  0EFE               	movlw	-2
  4120  011286  6AE3               	clrf	plusw1,c
  4121  011288  80E3               	bsf	plusw1,0,c
  4122  01128A  82E3               	bsf	plusw1,1,c	;indir
  4123  01128C                     l13448:
  4124                           
  4125                           ;main.c: 212:  if (mode == UI_STATE_HOST) {
  4126                           ;stkvar	_mode @ sp[(-17)+15]
  4127  01128C  0EFE               	movlw	-2
  4128  01128E  04E3               	decf	plusw1,w,c
  4129  011290  A4D8               	btfss	status,2,c
  4130  011292  D007               	goto	l1332
  4131                           
  4132                           ;main.c: 213:   do { LATDbits.LATD0 = 1; } while(0);
  4133  011294  80BD               	bsf	189,0,c	;volatile
  4134                           
  4135                           ;main.c: 214:   V.mode_pwm = 70;
  4136  011296  0E00               	movlw	0
  4137  011298  0101               	movlb	1	; () banked
  4138  01129A  6F9D               	movwf	(_V+150)& (0+255),b	;volatile
  4139  01129C  0E46               	movlw	70
  4140  01129E  6F9C               	movwf	(_V+149)& (0+255),b	;volatile
  4141                           
  4142                           ;main.c: 215:  } else {
  4143  0112A0  D004               	goto	l13452
  4144  0112A2                     l1332:
  4145  0112A2  90BD               	bcf	189,0,c	;volatile
  4146                           
  4147                           ;main.c: 217:   V.mode_pwm = 0;
  4148  0112A4  0101               	movlb	1	; () banked
  4149  0112A6  6B9C               	clrf	(_V+149)& (0+255),b	;volatile
  4150  0112A8  6B9D               	clrf	(_V+150)& (0+255),b	;volatile
  4151  0112AA                     l13452:
  4152                           
  4153                           ; BSR set to: 1
  4154                           ;main.c: 219:  mode_lamp_dim(V.mode_pwm);
  4155  0112AA  0060  F673  FFE6   	movff	_V+149,postinc1
  4156  0112B0  0060  F677  FFE6   	movff	_V+150,postinc1
  4157  0112B6  EC85  F0E2         	call	_mode_lamp_dim	;wreg free
  4158  0112BA  D327               	goto	l13574
  4159  0112BC                     l13454:
  4160                           
  4161                           ; BSR set to: 1
  4162                           ;main.c: 227:    init_port_dma();
  4163  0112BC  EC64  F0DF         	call	_init_port_dma	;wreg free
  4164                           
  4165                           ; BSR set to: 59
  4166                           ;main.c: 229:    init_display();
  4167  0112C0  EC56  F0D1         	call	_init_display	;wreg free
  4168                           
  4169                           ; BSR set to: 61
  4170                           ;main.c: 230:    eaDogM_WriteCommand(0b00001100);
  4171  0112C4  0E0C               	movlw	12
  4172  0112C6  6EE6               	movwf	postinc1,c
  4173  0112C8  ECF1  F0E2         	call	_eaDogM_WriteCommand	;wreg free
  4174                           
  4175                           ; BSR set to: 0
  4176                           ;main.c: 231:    set_dac();
  4177  0112CC  EC9A  F0D4         	call	_set_dac	;wreg free
  4178                           
  4179                           ;main.c: 235:    set_load_relay_one(1);
  4180  0112D0  0E01               	movlw	1
  4181  0112D2  6EE6               	movwf	postinc1,c
  4182  0112D4  ECD9  F0E2         	call	_set_load_relay_one	;wreg free
  4183                           
  4184                           ;main.c: 236:    set_load_relay_two(1);
  4185  0112D8  0E01               	movlw	1
  4186  0112DA  6EE6               	movwf	postinc1,c
  4187  0112DC  ECD1  F0E2         	call	_set_load_relay_two	;wreg free
  4188                           
  4189                           ;main.c: 238:    V.ui_state = mode;
  4190                           ;stkvar	_mode @ sp[(-17)+15]
  4191  0112E0  0EFE               	movlw	-2
  4192  0112E2  006F FF8C  F107    	movff	plusw1,_V	;volatile
  4193                           
  4194                           ;main.c: 239:    srand(1957);
  4195  0112E8  0EA5               	movlw	165
  4196  0112EA  6EE6               	movwf	postinc1,c
  4197  0112EC  0E07               	movlw	7
  4198  0112EE  6EE6               	movwf	postinc1,c
  4199  0112F0  ECFC  F0DE         	call	_srand	;wreg free
  4200                           
  4201                           ; BSR set to: 1
  4202                           ;main.c: 240:    set_vterm(0);
  4203  0112F4  0E00               	movlw	0
  4204  0112F6  6EE6               	movwf	postinc1,c
  4205  0112F8  EC3D  F0E2         	call	_set_vterm	;wreg free
  4206                           
  4207                           ;main.c: 241:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  4208  0112FC  0E1E               	movlw	low STR_1
  4209  0112FE  6EE6               	movwf	postinc1,c
  4210  011300  0EFF               	movlw	high STR_1
  4211  011302  6EE6               	movwf	postinc1,c
  4212  011304  0E00               	movlw	0
  4213  011306  6EE6               	movwf	postinc1,c
  4214  011308  0E00               	movlw	0
  4215  01130A  6EE6               	movwf	postinc1,c
  4216  01130C  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
  4217  011310  0060  F007  FFE6   	movff	btemp,postinc1
  4218  011316  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4219  01131C  0E04               	movlw	4
  4220  01131E  6EE6               	movwf	postinc1,c
  4221  011320  EC56  F0D0         	call	_sprintf	;wreg free
  4222                           
  4223                           ; BSR set to: 0
  4224                           ;main.c: 242:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.16");
  4225  011324  0ED2               	movlw	low STR_3
  4226  011326  6EE6               	movwf	postinc1,c
  4227  011328  0EFF               	movlw	high STR_3
  4228  01132A  6EE6               	movwf	postinc1,c
  4229  01132C  0E09               	movlw	low STR_2
  4230  01132E  6EE6               	movwf	postinc1,c
  4231  011330  0EFF               	movlw	high STR_2
  4232  011332  6EE6               	movwf	postinc1,c
  4233  011334  0E00               	movlw	0
  4234  011336  6EE6               	movwf	postinc1,c
  4235  011338  0E01               	movlw	1
  4236  01133A  6EE6               	movwf	postinc1,c
  4237  01133C  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
  4238  011340  0060  F007  FFE6   	movff	btemp,postinc1
  4239  011346  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4240  01134C  0E06               	movlw	6
  4241  01134E  6EE6               	movwf	postinc1,c
  4242  011350  EC56  F0D0         	call	_sprintf	;wreg free
  4243                           
  4244                           ; BSR set to: 0
  4245                           ;main.c: 243:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  4246  011354  0ECA               	movlw	low STR_4
  4247  011356  6EE6               	movwf	postinc1,c
  4248  011358  0EFE               	movlw	high STR_4
  4249  01135A  6EE6               	movwf	postinc1,c
  4250  01135C  0E00               	movlw	0
  4251  01135E  6EE6               	movwf	postinc1,c
  4252  011360  0E02               	movlw	2
  4253  011362  6EE6               	movwf	postinc1,c
  4254  011364  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
  4255  011368  0060  F007  FFE6   	movff	btemp,postinc1
  4256  01136E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4257  011374  0E04               	movlw	4
  4258  011376  6EE6               	movwf	postinc1,c
  4259  011378  EC56  F0D0         	call	_sprintf	;wreg free
  4260                           
  4261                           ; BSR set to: 0
  4262                           ;main.c: 244:    sprintf(get_vterm_ptr(0, 2), "                    ");
  4263  01137C  0EA0               	movlw	low STR_5
  4264  01137E  6EE6               	movwf	postinc1,c
  4265  011380  0EFE               	movlw	high STR_5
  4266  011382  6EE6               	movwf	postinc1,c
  4267  011384  0E02               	movlw	2
  4268  011386  6EE6               	movwf	postinc1,c
  4269  011388  0E00               	movlw	0
  4270  01138A  6EE6               	movwf	postinc1,c
  4271  01138C  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
  4272  011390  0060  F007  FFE6   	movff	btemp,postinc1
  4273  011396  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4274  01139C  0E04               	movlw	4
  4275  01139E  6EE6               	movwf	postinc1,c
  4276  0113A0  EC56  F0D0         	call	_sprintf	;wreg free
  4277                           
  4278                           ; BSR set to: 0
  4279                           ;main.c: 245:    sprintf(get_vterm_ptr(1, 2), "                    ");
  4280  0113A4  0EA0               	movlw	low STR_5
  4281  0113A6  6EE6               	movwf	postinc1,c
  4282  0113A8  0EFE               	movlw	high STR_5
  4283  0113AA  6EE6               	movwf	postinc1,c
  4284  0113AC  0E02               	movlw	2
  4285  0113AE  6EE6               	movwf	postinc1,c
  4286  0113B0  0E01               	movlw	1
  4287  0113B2  6EE6               	movwf	postinc1,c
  4288  0113B4  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
  4289  0113B8  0060  F007  FFE6   	movff	btemp,postinc1
  4290  0113BE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4291  0113C4  0E04               	movlw	4
  4292  0113C6  6EE6               	movwf	postinc1,c
  4293  0113C8  EC56  F0D0         	call	_sprintf	;wreg free
  4294                           
  4295                           ; BSR set to: 0
  4296                           ;main.c: 246:    sprintf(get_vterm_ptr(2, 2), "                    ");
  4297  0113CC  0EA0               	movlw	low STR_5
  4298  0113CE  6EE6               	movwf	postinc1,c
  4299  0113D0  0EFE               	movlw	high STR_5
  4300  0113D2  6EE6               	movwf	postinc1,c
  4301  0113D4  0E02               	movlw	2
  4302  0113D6  6EE6               	movwf	postinc1,c
  4303  0113D8  0E02               	movlw	2
  4304  0113DA  6EE6               	movwf	postinc1,c
  4305  0113DC  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
  4306  0113E0  0060  F007  FFE6   	movff	btemp,postinc1
  4307  0113E6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4308  0113EC  0E04               	movlw	4
  4309  0113EE  6EE6               	movwf	postinc1,c
  4310  0113F0  EC56  F0D0         	call	_sprintf	;wreg free
  4311                           
  4312                           ; BSR set to: 0
  4313                           ;main.c: 247:    update_lcd(0);
  4314  0113F4  0E00               	movlw	0
  4315  0113F6  6EE6               	movwf	postinc1,c
  4316  0113F8  ECCE  F0CF         	call	_update_lcd	;wreg free
  4317                           
  4318                           ;main.c: 248:    WaitMs(1000);
  4319  0113FC  0EE8               	movlw	232
  4320  0113FE  6EE6               	movwf	postinc1,c
  4321  011400  0E03               	movlw	3
  4322  011402  6EE6               	movwf	postinc1,c
  4323  011404  ECE1  F0DE         	call	_WaitMs	;wreg free
  4324                           
  4325                           ;main.c: 249:    StartTimer(TMR_DISPLAY, 250);
  4326  011408  0EFA               	movlw	250
  4327  01140A  6EE6               	movwf	postinc1,c
  4328  01140C  0E00               	movlw	0
  4329  01140E  6EE6               	movwf	postinc1,c
  4330  011410  0E0A               	movlw	10
  4331  011412  6EE6               	movwf	postinc1,c
  4332  011414  ECF2  F0DD         	call	_StartTimer	;wreg free
  4333                           
  4334                           ;main.c: 250:    StartTimer(TMR_ADC, 200);
  4335  011418  0EC8               	movlw	200
  4336  01141A  6EE6               	movwf	postinc1,c
  4337  01141C  0E00               	movlw	0
  4338  01141E  6EE6               	movwf	postinc1,c
  4339  011420  0E01               	movlw	1
  4340  011422  6EE6               	movwf	postinc1,c
  4341  011424  ECF2  F0DD         	call	_StartTimer	;wreg free
  4342                           
  4343                           ;main.c: 251:    StartTimer(TMR_INFO, 3000);
  4344  011428  0EB8               	movlw	184
  4345  01142A  6EE6               	movwf	postinc1,c
  4346  01142C  0E0B               	movlw	11
  4347  01142E  6EE6               	movwf	postinc1,c
  4348  011430  0E07               	movlw	7
  4349  011432  6EE6               	movwf	postinc1,c
  4350  011434  ECF2  F0DD         	call	_StartTimer	;wreg free
  4351                           
  4352                           ;main.c: 252:    StartTimer(TMR_FLIPPER, 1500);
  4353  011438  0EDC               	movlw	220
  4354  01143A  6EE6               	movwf	postinc1,c
  4355  01143C  0E05               	movlw	5
  4356  01143E  6EE6               	movwf	postinc1,c
  4357  011440  0E0B               	movlw	11
  4358  011442  6EE6               	movwf	postinc1,c
  4359  011444  ECF2  F0DD         	call	_StartTimer	;wreg free
  4360                           
  4361                           ;main.c: 253:    StartTimer(TMR_HELPDIS, 3000);
  4362  011448  0EB8               	movlw	184
  4363  01144A  6EE6               	movwf	postinc1,c
  4364  01144C  0E0B               	movlw	11
  4365  01144E  6EE6               	movwf	postinc1,c
  4366  011450  0E09               	movlw	9
  4367  011452  6EE6               	movwf	postinc1,c
  4368  011454  ECF2  F0DD         	call	_StartTimer	;wreg free
  4369                           
  4370                           ;main.c: 255:    start_adc_scan();
  4371  011458  EC8B  F0DA         	call	_start_adc_scan	;wreg free
  4372                           
  4373                           ;main.c: 256:    start_switch_handler();
  4374  01145C  ECFF  F0E1         	call	_start_switch_handler	;wreg free
  4375                           
  4376                           ; BSR set to: 57
  4377                           ;main.c: 257:    WaitMs(1000);
  4378  011460  0EE8               	movlw	232
  4379  011462  6EE6               	movwf	postinc1,c
  4380  011464  0E03               	movlw	3
  4381  011466  6EE6               	movwf	postinc1,c
  4382  011468  ECE1  F0DE         	call	_WaitMs	;wreg free
  4383                           
  4384                           ;main.c: 262:    i_ror = 1;
  4385                           ;stkvar	_i_ror @ sp[(-17)+16]
  4386  01146C  0EFF               	movlw	-1
  4387  01146E  6AE3               	clrf	plusw1,c
  4388  011470  2AE3               	incf	plusw1,f,c
  4389  011472                     l13506:
  4390                           
  4391                           ;main.c: 264:     calc_ror_data();
  4392  011472  ECE0  F0C6         	call	_calc_ror_data	;wreg free
  4393                           
  4394                           ;main.c: 265:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f            ", conv_raw_result(V
      +                          _BAT, CONV));
  4395  011476  0E00               	movlw	0
  4396  011478  6EE6               	movwf	postinc1,c
  4397  01147A  0E04               	movlw	4
  4398  01147C  6EE6               	movwf	postinc1,c
  4399  01147E  ECB3  F0A9         	call	_conv_raw_result	;wreg free
  4400  011482  0060  F007  FFE6   	movff	btemp,postinc1
  4401  011488  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4402  01148E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4403  011494  0060  F013  FFE6   	movff	btemp+3,postinc1
  4404  01149A  0EB5               	movlw	low STR_8
  4405  01149C  6EE6               	movwf	postinc1,c
  4406  01149E  0EFE               	movlw	high STR_8
  4407  0114A0  6EE6               	movwf	postinc1,c
  4408  0114A2  0E00               	movlw	0
  4409  0114A4  6EE6               	movwf	postinc1,c
  4410  0114A6  0E01               	movlw	1
  4411  0114A8  6EE6               	movwf	postinc1,c
  4412  0114AA  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
  4413  0114AE  0060  F007  FFE6   	movff	btemp,postinc1
  4414  0114B4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4415  0114BA  0E08               	movlw	8
  4416  0114BC  6EE6               	movwf	postinc1,c
  4417  0114BE  EC56  F0D0         	call	_sprintf	;wreg free
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;main.c: 266:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  4421  0114C2  EE21  F36B         	lfsr	2,_C+108	;volatile
  4422  0114C6  006F FF7B FFE6     	movff	postinc2,postinc1
  4423  0114CC  006F FF7B FFE6     	movff	postinc2,postinc1
  4424  0114D2  006F FF7B FFE6     	movff	postinc2,postinc1
  4425  0114D8  006F FF7B FFE6     	movff	postinc2,postinc1
  4426                           
  4427                           ;stkvar	_i_ror @ sp[(-21)+16]
  4428  0114DE  0EFB               	movlw	-5
  4429  0114E0  50E3               	movf	plusw1,w,c
  4430  0114E2  6EE6               	movwf	postinc1,c
  4431  0114E4  0E00               	movlw	0
  4432  0114E6  6EE6               	movwf	postinc1,c
  4433  0114E8  0E00               	movlw	0
  4434  0114EA  6EE6               	movwf	postinc1,c
  4435  0114EC  0E05               	movlw	5
  4436  0114EE  6EE6               	movwf	postinc1,c
  4437  0114F0  ECDB  F0D0         	call	_spinners	;wreg free
  4438  0114F4  5001               	movf	btemp^0,w,c
  4439  0114F6  6EE6               	movwf	postinc1,c
  4440  0114F8  0E00               	movlw	0
  4441  0114FA  6EE6               	movwf	postinc1,c
  4442  0114FC  0E9B               	movlw	low STR_9
  4443  0114FE  6EE6               	movwf	postinc1,c
  4444  011500  0EFC               	movlw	high STR_9
  4445  011502  6EE6               	movwf	postinc1,c
  4446  011504  0E00               	movlw	0
  4447  011506  6EE6               	movwf	postinc1,c
  4448  011508  0E02               	movlw	2
  4449  01150A  6EE6               	movwf	postinc1,c
  4450  01150C  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
  4451  011510  0060  F007  FFE6   	movff	btemp,postinc1
  4452  011516  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4453  01151C  0E0C               	movlw	12
  4454  01151E  6EE6               	movwf	postinc1,c
  4455  011520  EC56  F0D0         	call	_sprintf	;wreg free
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;main.c: 267:     update_lcd(0);
  4459  011524  0E00               	movlw	0
  4460  011526  6EE6               	movwf	postinc1,c
  4461  011528  ECCE  F0CF         	call	_update_lcd	;wreg free
  4462                           
  4463                           ;main.c: 268:     clear_adc_scan();
  4464  01152C  EC45  F0E3         	call	_clear_adc_scan	;wreg free
  4465                           
  4466                           ; BSR set to: 0
  4467                           ;main.c: 269:     start_adc_scan();
  4468  011530  EC8B  F0DA         	call	_start_adc_scan	;wreg free
  4469                           
  4470                           ;main.c: 270:     WaitMs(2000);
  4471  011534  0ED0               	movlw	208
  4472  011536  6EE6               	movwf	postinc1,c
  4473  011538  0E07               	movlw	7
  4474  01153A  6EE6               	movwf	postinc1,c
  4475  01153C  ECE1  F0DE         	call	_WaitMs	;wreg free
  4476                           
  4477                           ;main.c: 273:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4478                           ;stkvar	_i_ror @ sp[(-17)+16]
  4479  011540  0EFF               	movlw	-1
  4480  011542  006F FF8C  F00C    	movff	plusw1,btemp+11
  4481  011548  2A0C               	incf	(btemp+11)^0,f,c
  4482  01154A  0060  F033  FFE3   	movff	btemp+11,plusw1
  4483  011550  060C               	decf	(btemp+11)^0,f,c
  4484  011552  0E1E               	movlw	30
  4485  011554  600C               	cpfslt	(btemp+11)^0,c
  4486  011556  D01A               	goto	u12930
  4487  011558  EE21  F36B         	lfsr	2,_C+108	;volatile
  4488  01155C  006F FF7B FFE6     	movff	postinc2,postinc1
  4489  011562  006F FF7B FFE6     	movff	postinc2,postinc1
  4490  011568  006F FF7B FFE6     	movff	postinc2,postinc1
  4491  01156E  006F FF7B FFE6     	movff	postinc2,postinc1
  4492  011574  0E42               	movlw	66
  4493  011576  6EE6               	movwf	postinc1,c
  4494  011578  0E60               	movlw	96
  4495  01157A  6EE6               	movwf	postinc1,c
  4496  01157C  0E65               	movlw	101
  4497  01157E  6EE6               	movwf	postinc1,c
  4498  011580  0E3C               	movlw	60
  4499  011582  6EE6               	movwf	postinc1,c
  4500  011584  EC1C  F0C9         	call	___flge	;wreg free
  4501  011588  A001               	btfss	btemp& (0+255),0,c
  4502  01158A  D773               	goto	l13506
  4503  01158C                     u12930:
  4504                           
  4505                           ;main.c: 275:    static_soc();
  4506  01158C  EC4F  F0DB         	call	_static_soc	;wreg free
  4507                           
  4508                           ;main.c: 276:    init_bsoc();
  4509  011590  ECFB  F0BD         	call	_init_bsoc	;wreg free
  4510                           
  4511                           ;main.c: 277:    set_load_relay_one(0);
  4512  011594  0E00               	movlw	0
  4513  011596  6EE6               	movwf	postinc1,c
  4514  011598  ECD9  F0E2         	call	_set_load_relay_one	;wreg free
  4515                           
  4516                           ;main.c: 278:    set_load_relay_two(0);
  4517  01159C  0E00               	movlw	0
  4518  01159E  6EE6               	movwf	postinc1,c
  4519  0115A0  ECD1  F0E2         	call	_set_load_relay_two	;wreg free
  4520                           
  4521                           ;main.c: 279:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4522  0115A4  EE21  F3B5         	lfsr	2,_C+182	;volatile
  4523  0115A8  006F FF78  F00B    	movff	postinc2,btemp+10
  4524  0115AE  006F FF74  F00C    	movff	postdec2,btemp+11
  4525  0115B4  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4526  0115BA  0060  F033  FFE6   	movff	btemp+11,postinc1
  4527  0115C0  0E56               	movlw	low STR_10
  4528  0115C2  6EE6               	movwf	postinc1,c
  4529  0115C4  0EFD               	movlw	high STR_10
  4530  0115C6  6EE6               	movwf	postinc1,c
  4531  0115C8  0E00               	movlw	0
  4532  0115CA  6EE6               	movwf	postinc1,c
  4533  0115CC  0E00               	movlw	0
  4534  0115CE  6EE6               	movwf	postinc1,c
  4535  0115D0  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
  4536  0115D4  0060  F007  FFE6   	movff	btemp,postinc1
  4537  0115DA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4538  0115E0  0E06               	movlw	6
  4539  0115E2  6EE6               	movwf	postinc1,c
  4540  0115E4  EC56  F0D0         	call	_sprintf	;wreg free
  4541                           
  4542                           ; BSR set to: 0
  4543                           ;main.c: 280:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4544  0115E8  EE21  F38F         	lfsr	2,_C+144	;volatile
  4545  0115EC  006F FF7B FFE6     	movff	postinc2,postinc1
  4546  0115F2  006F FF7B FFE6     	movff	postinc2,postinc1
  4547  0115F8  006F FF7B FFE6     	movff	postinc2,postinc1
  4548  0115FE  006F FF7B FFE6     	movff	postinc2,postinc1
  4549  011604  0E32               	movlw	low STR_11
  4550  011606  6EE6               	movwf	postinc1,c
  4551  011608  0EFE               	movlw	high STR_11
  4552  01160A  6EE6               	movwf	postinc1,c
  4553  01160C  0E00               	movlw	0
  4554  01160E  6EE6               	movwf	postinc1,c
  4555  011610  0E01               	movlw	1
  4556  011612  6EE6               	movwf	postinc1,c
  4557  011614  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
  4558  011618  0060  F007  FFE6   	movff	btemp,postinc1
  4559  01161E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4560  011624  0E08               	movlw	8
  4561  011626  6EE6               	movwf	postinc1,c
  4562  011628  EC56  F0D0         	call	_sprintf	;wreg free
  4563                           
  4564                           ; BSR set to: 0
  4565                           ;main.c: 281:    update_lcd(0);
  4566  01162C  0E00               	movlw	0
  4567  01162E  6EE6               	movwf	postinc1,c
  4568  011630  ECCE  F0CF         	call	_update_lcd	;wreg free
  4569                           
  4570                           ;main.c: 282:    WaitMs(2000);
  4571  011634  0ED0               	movlw	208
  4572  011636  6EE6               	movwf	postinc1,c
  4573  011638  0E07               	movlw	7
  4574  01163A  6EE6               	movwf	postinc1,c
  4575  01163C  ECE1  F0DE         	call	_WaitMs	;wreg free
  4576                           
  4577                           ;main.c: 283:    sprintf(get_vterm_ptr(0, 0), "Battery ESR         ");
  4578  011640  0EDF               	movlw	low STR_12
  4579  011642  6EE6               	movwf	postinc1,c
  4580  011644  0EFE               	movlw	high STR_12
  4581  011646  6EE6               	movwf	postinc1,c
  4582  011648  0E00               	movlw	0
  4583  01164A  6EE6               	movwf	postinc1,c
  4584  01164C  0E00               	movlw	0
  4585  01164E  6EE6               	movwf	postinc1,c
  4586  011650  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
  4587  011654  0060  F007  FFE6   	movff	btemp,postinc1
  4588  01165A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4589  011660  0E04               	movlw	4
  4590  011662  6EE6               	movwf	postinc1,c
  4591  011664  EC56  F0D0         	call	_sprintf	;wreg free
  4592                           
  4593                           ; BSR set to: 0
  4594                           ;main.c: 284:    sprintf(get_vterm_ptr(1, 0), "Calculation         ");
  4595  011668  0EF4               	movlw	low STR_13
  4596  01166A  6EE6               	movwf	postinc1,c
  4597  01166C  0EFE               	movlw	high STR_13
  4598  01166E  6EE6               	movwf	postinc1,c
  4599  011670  0E00               	movlw	0
  4600  011672  6EE6               	movwf	postinc1,c
  4601  011674  0E01               	movlw	1
  4602  011676  6EE6               	movwf	postinc1,c
  4603  011678  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
  4604  01167C  0060  F007  FFE6   	movff	btemp,postinc1
  4605  011682  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4606  011688  0E04               	movlw	4
  4607  01168A  6EE6               	movwf	postinc1,c
  4608  01168C  EC56  F0D0         	call	_sprintf	;wreg free
  4609                           
  4610                           ; BSR set to: 0
  4611                           ;main.c: 285:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds    ");
  4612  011690  0E48               	movlw	low STR_14
  4613  011692  6EE6               	movwf	postinc1,c
  4614  011694  0EFF               	movlw	high STR_14
  4615  011696  6EE6               	movwf	postinc1,c
  4616  011698  0E00               	movlw	0
  4617  01169A  6EE6               	movwf	postinc1,c
  4618  01169C  0E02               	movlw	2
  4619  01169E  6EE6               	movwf	postinc1,c
  4620  0116A0  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
  4621  0116A4  0060  F007  FFE6   	movff	btemp,postinc1
  4622  0116AA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4623  0116B0  0E04               	movlw	4
  4624  0116B2  6EE6               	movwf	postinc1,c
  4625  0116B4  EC56  F0D0         	call	_sprintf	;wreg free
  4626                           
  4627                           ; BSR set to: 0
  4628                           ;main.c: 286:    update_lcd(0);
  4629  0116B8  0E00               	movlw	0
  4630  0116BA  6EE6               	movwf	postinc1,c
  4631  0116BC  ECCE  F0CF         	call	_update_lcd	;wreg free
  4632                           
  4633                           ;main.c: 287:    uint16_t i_esr = 1;
  4634  0116C0  0E01               	movlw	1
  4635  0116C2  6E0B               	movwf	(btemp+10)^0,c
  4636  0116C4  0E00               	movlw	0
  4637  0116C6  6E0C               	movwf	(btemp+11)^0,c
  4638                           
  4639                           ;stkvar	_i_esr @ sp[(-17)+8]
  4640  0116C8  0EF7               	movlw	-9
  4641  0116CA  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4642  0116D0  0EF8               	movlw	-8
  4643  0116D2  0060  F033  FFE3   	movff	btemp+11,plusw1
  4644                           
  4645                           ;main.c: 289:    float esr_temp;;main.c: 290:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  4646  0116D8  D06D               	goto	l13564
  4647  0116DA                     l13552:
  4648                           
  4649                           ;main.c: 291:     WaitMs(110);
  4650  0116DA  0E6E               	movlw	110
  4651  0116DC  6EE6               	movwf	postinc1,c
  4652  0116DE  0E00               	movlw	0
  4653  0116E0  6EE6               	movwf	postinc1,c
  4654  0116E2  ECE1  F0DE         	call	_WaitMs	;wreg free
  4655                           
  4656                           ;main.c: 292:     shape = (uint8_t) fabsf(esr_temp);
  4657                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4658  0116E6  0EF3               	movlw	-13
  4659  0116E8  006F FF8F FFE6     	movff	plusw1,postinc1
  4660  0116EE  006F FF8F FFE6     	movff	plusw1,postinc1
  4661  0116F4  006F FF8F FFE6     	movff	plusw1,postinc1
  4662  0116FA  006F FF8F FFE6     	movff	plusw1,postinc1
  4663  011700  ECF5  F0D4         	call	_fabsf	;wreg free
  4664  011704  0060  F007  FFE6   	movff	btemp,postinc1
  4665  01170A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4666  011710  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4667  011716  0060  F013  FFE6   	movff	btemp+3,postinc1
  4668  01171C  EC63  F0C8         	call	___fltol	;wreg free
  4669  011720  0060  F004  F00C   	movff	btemp,btemp+11
  4670                           
  4671                           ;stkvar	_shape @ sp[(-17)+10]
  4672  011726  0EF9               	movlw	-7
  4673  011728  0060  F033  FFE3   	movff	btemp+11,plusw1
  4674                           
  4675                           ;main.c: 293:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  4676  01172E  0E00               	movlw	0
  4677  011730  6EE6               	movwf	postinc1,c
  4678                           
  4679                           ;stkvar	_shape @ sp[(-18)+10]
  4680  011732  0EF8               	movlw	-8
  4681  011734  50E3               	movf	plusw1,w,c
  4682  011736  6EE6               	movwf	postinc1,c
  4683  011738  ECDB  F0D0         	call	_spinners	;wreg free
  4684  01173C  5001               	movf	btemp^0,w,c
  4685  01173E  6EE6               	movwf	postinc1,c
  4686  011740  0E00               	movlw	0
  4687  011742  6EE6               	movwf	postinc1,c
  4688  011744  0E00               	movlw	0
  4689  011746  6EE6               	movwf	postinc1,c
  4690  011748  0E00               	movlw	0
  4691  01174A  6EE6               	movwf	postinc1,c
  4692  01174C  ECDB  F0D0         	call	_spinners	;wreg free
  4693  011750  5001               	movf	btemp^0,w,c
  4694  011752  6EE6               	movwf	postinc1,c
  4695  011754  0E00               	movlw	0
  4696  011756  6EE6               	movwf	postinc1,c
  4697  011758  0E33               	movlw	low STR_15
  4698  01175A  6EE6               	movwf	postinc1,c
  4699  01175C  0EFF               	movlw	high STR_15
  4700  01175E  6EE6               	movwf	postinc1,c
  4701  011760  0E00               	movlw	0
  4702  011762  6EE6               	movwf	postinc1,c
  4703  011764  0E02               	movlw	2
  4704  011766  6EE6               	movwf	postinc1,c
  4705  011768  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
  4706  01176C  0060  F007  FFE6   	movff	btemp,postinc1
  4707  011772  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4708  011778  0E08               	movlw	8
  4709  01177A  6EE6               	movwf	postinc1,c
  4710  01177C  EC56  F0D0         	call	_sprintf	;wreg free
  4711                           
  4712                           ; BSR set to: 0
  4713                           ;main.c: 294:     update_lcd(0);
  4714  011780  0E00               	movlw	0
  4715  011782  6EE6               	movwf	postinc1,c
  4716  011784  ECCE  F0CF         	call	_update_lcd	;wreg free
  4717                           
  4718                           ;main.c: 296:     if (i_esr++ > 512)
  4719                           ;stkvar	_i_esr @ sp[(-17)+8]
  4720  011788  50E1               	movf	fsr1l,w,c
  4721  01178A  0FF7               	addlw	-9
  4722  01178C  6ED9               	movwf	fsr2l,c
  4723  01178E  50E2               	movf	fsr1h,w,c
  4724  011790  6EDA               	movwf	fsr2h,c
  4725  011792  0EFF               	movlw	255
  4726  011794  22DA               	addwfc	fsr2h,f,c
  4727  011796  006F FF7C  F00B    	movff	indf2,btemp+10
  4728  01179C  0E01               	movlw	1
  4729  01179E  26DE               	addwf	postinc2,f,c
  4730  0117A0  006F FF7C  F00C    	movff	indf2,btemp+11
  4731  0117A6  0E00               	movlw	0
  4732  0117A8  22DD               	addwfc	postdec2,f,c
  4733  0117AA  040B               	decf	(btemp+10)^0,w,c
  4734  0117AC  0E02               	movlw	2
  4735  0117AE  580C               	subwfb	(btemp+11)^0,w,c
  4736  0117B0  B0D8               	btfsc	status,0,c
  4737  0117B2  D017               	goto	u12950
  4738  0117B4                     l13564:
  4739                           
  4740                           ;main.c: 290:    while ((esr_temp = esr_check(0)) < 0.0) {
  4741  0117B4  0E00               	movlw	0
  4742  0117B6  6EE6               	movwf	postinc1,c
  4743  0117B8  ECB6  F0B8         	call	_esr_check	;wreg free
  4744                           
  4745                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4746  0117BC  0EF3               	movlw	-13
  4747  0117BE  0060  F007  FFE3   	movff	btemp,plusw1
  4748  0117C4  0EF4               	movlw	-12
  4749  0117C6  0060  F00B  FFE3   	movff	btemp+1,plusw1
  4750  0117CC  0EF5               	movlw	-11
  4751  0117CE  0060  F00F  FFE3   	movff	btemp+2,plusw1
  4752  0117D4  0EF6               	movlw	-10
  4753  0117D6  0060  F013  FFE3   	movff	btemp+3,plusw1
  4754  0117DC  0EF6               	movlw	-10
  4755  0117DE  BEE3               	btfsc	plusw1,7,c
  4756  0117E0  D77C               	goto	l13552
  4757  0117E2                     u12950:
  4758                           
  4759                           ;main.c: 299:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  4760  0117E2  EE21  F387         	lfsr	2,_C+136	;volatile
  4761  0117E6  006F FF7B FFE6     	movff	postinc2,postinc1
  4762  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
  4763  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
  4764  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
  4765  0117FE  0E40               	movlw	low STR_16
  4766  011800  6EE6               	movwf	postinc1,c
  4767  011802  0EFD               	movlw	high STR_16
  4768  011804  6EE6               	movwf	postinc1,c
  4769  011806  0E00               	movlw	0
  4770  011808  6EE6               	movwf	postinc1,c
  4771  01180A  0E00               	movlw	0
  4772  01180C  6EE6               	movwf	postinc1,c
  4773  01180E  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
  4774  011812  0060  F007  FFE6   	movff	btemp,postinc1
  4775  011818  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4776  01181E  0E08               	movlw	8
  4777  011820  6EE6               	movwf	postinc1,c
  4778  011822  EC56  F0D0         	call	_sprintf	;wreg free
  4779                           
  4780                           ;main.c: 300:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  4781  011826  EE22  F00D         	lfsr	2,_C+270	;volatile
  4782  01182A  006F FF7B FFE6     	movff	postinc2,postinc1
  4783  011830  006F FF7B FFE6     	movff	postinc2,postinc1
  4784  011836  006F FF7B FFE6     	movff	postinc2,postinc1
  4785  01183C  006F FF7B FFE6     	movff	postinc2,postinc1
  4786  011842  EE22  F019         	lfsr	2,_C+282	;volatile
  4787  011846  006F FF7B FFE6     	movff	postinc2,postinc1
  4788  01184C  006F FF7B FFE6     	movff	postinc2,postinc1
  4789  011852  006F FF7B FFE6     	movff	postinc2,postinc1
  4790  011858  006F FF7B FFE6     	movff	postinc2,postinc1
  4791  01185E  0E67               	movlw	low STR_17
  4792  011860  6EE6               	movwf	postinc1,c
  4793  011862  0EFC               	movlw	high STR_17
  4794  011864  6EE6               	movwf	postinc1,c
  4795  011866  0E00               	movlw	0
  4796  011868  6EE6               	movwf	postinc1,c
  4797  01186A  0E01               	movlw	1
  4798  01186C  6EE6               	movwf	postinc1,c
  4799  01186E  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
  4800  011872  0060  F007  FFE6   	movff	btemp,postinc1
  4801  011878  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4802  01187E  0E0C               	movlw	12
  4803  011880  6EE6               	movwf	postinc1,c
  4804  011882  EC56  F0D0         	call	_sprintf	;wreg free
  4805                           
  4806                           ;main.c: 301:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  4807  011886  EE22  F011         	lfsr	2,_C+274	;volatile
  4808  01188A  006F FF7B FFE6     	movff	postinc2,postinc1
  4809  011890  006F FF7B FFE6     	movff	postinc2,postinc1
  4810  011896  006F FF7B FFE6     	movff	postinc2,postinc1
  4811  01189C  006F FF7B FFE6     	movff	postinc2,postinc1
  4812  0118A2  EE22  F01D         	lfsr	2,_C+286	;volatile
  4813  0118A6  006F FF7B FFE6     	movff	postinc2,postinc1
  4814  0118AC  006F FF7B FFE6     	movff	postinc2,postinc1
  4815  0118B2  006F FF7B FFE6     	movff	postinc2,postinc1
  4816  0118B8  006F FF7B FFE6     	movff	postinc2,postinc1
  4817  0118BE  0E81               	movlw	low STR_18
  4818  0118C0  6EE6               	movwf	postinc1,c
  4819  0118C2  0EFC               	movlw	high STR_18
  4820  0118C4  6EE6               	movwf	postinc1,c
  4821  0118C6  0E00               	movlw	0
  4822  0118C8  6EE6               	movwf	postinc1,c
  4823  0118CA  0E02               	movlw	2
  4824  0118CC  6EE6               	movwf	postinc1,c
  4825  0118CE  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
  4826  0118D2  0060  F007  FFE6   	movff	btemp,postinc1
  4827  0118D8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4828  0118DE  0E0C               	movlw	12
  4829  0118E0  6EE6               	movwf	postinc1,c
  4830  0118E2  EC56  F0D0         	call	_sprintf	;wreg free
  4831                           
  4832                           ;main.c: 302:    update_lcd(0);
  4833  0118E6  0E00               	movlw	0
  4834  0118E8  6EE6               	movwf	postinc1,c
  4835  0118EA  ECCE  F0CF         	call	_update_lcd	;wreg free
  4836                           
  4837                           ;main.c: 303:    WaitMs(5000);
  4838  0118EE  0E88               	movlw	136
  4839  0118F0  6EE6               	movwf	postinc1,c
  4840  0118F2  0E13               	movlw	19
  4841  0118F4  6EE6               	movwf	postinc1,c
  4842  0118F6  ECE1  F0DE         	call	_WaitMs	;wreg free
  4843                           
  4844                           ;main.c: 304:    V.system_stable = 1;
  4845  0118FA  0E01               	movlw	1
  4846  0118FC  0101               	movlb	1	; () banked
  4847  0118FE  6FB5               	movwf	(_V+174)& (0+255),b	;volatile
  4848                           
  4849                           ;main.c: 305:    break;
  4850  011900  D01B               	goto	l13576
  4851  011902                     l1348:
  4852                           
  4853                           ; BSR set to: 1
  4854                           ;main.c: 311:    P.SYSTEM_STABLE = 1;
  4855  011902  81F2               	bsf	(_P+1)& (0+255),0,b	;volatile
  4856                           
  4857                           ;main.c: 312:    break;
  4858  011904  D019               	goto	l13576
  4859  011906                     l1350:
  4860                           
  4861                           ; BSR set to: 1
  4862                           ;main.c: 315:    V.ui_state = UI_STATE_INIT;
  4863  011906  6B07               	clrf	_V& (0+255),b	;volatile
  4864                           
  4865                           ;main.c: 316:    break;
  4866  011908  D017               	goto	l13576
  4867  01190A                     l13574:
  4868  01190A  0101               	movlb	1	; () banked
  4869  01190C  5107               	movf	_V& (0+255),w,b	;volatile
  4870  01190E  6E0B               	movwf	(btemp+10)^0,c
  4871  011910  6A0C               	clrf	(btemp+11)^0,c
  4872                           
  4873                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4874                           ; Switch size 1, requested type "simple"
  4875                           ; Number of cases is 1, Range of values is 0 to 0
  4876                           ; switch strategies available:
  4877                           ; Name         Instructions Cycles
  4878                           ; simple_byte            4     3 (average)
  4879                           ;	Chosen strategy is simple_byte
  4880  011912  500C               	movf	(btemp+11)^0,w,c
  4881  011914  0A00               	xorlw	0	; case 0
  4882  011916  A4D8               	btfss	status,2,c
  4883  011918  D7F6               	goto	l1350
  4884                           
  4885                           ; BSR set to: 1
  4886                           ; Switch size 1, requested type "simple"
  4887                           ; Number of cases is 5, Range of values is 0 to 5
  4888                           ; switch strategies available:
  4889                           ; Name         Instructions Cycles
  4890                           ; simple_byte           16     9 (average)
  4891                           ;	Chosen strategy is simple_byte
  4892  01191A  500B               	movf	(btemp+10)^0,w,c
  4893  01191C  0A00               	xorlw	0	; case 0
  4894  01191E  B4D8               	btfsc	status,2,c
  4895  011920  D4CD               	goto	l13454
  4896  011922  0A01               	xorlw	1	; case 1
  4897  011924  B4D8               	btfsc	status,2,c
  4898  011926  D008               	goto	l13576
  4899  011928  0A02               	xorlw	2	; case 3
  4900  01192A  B4D8               	btfsc	status,2,c
  4901  01192C  D005               	goto	l13576
  4902  01192E  0A07               	xorlw	7	; case 4
  4903  011930  B4D8               	btfsc	status,2,c
  4904  011932  D7E7               	goto	l1348
  4905  011934  0A01               	xorlw	1	; case 5
  4906  011936  D7E7               	goto	l1350
  4907  011938                     l13576:
  4908                           
  4909                           ; BSR set to: 1
  4910                           ;main.c: 319:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  4911  011938  0E01               	movlw	1
  4912  01193A  6EE6               	movwf	postinc1,c
  4913  01193C  EC47  F0E0         	call	_TimerDone	;wreg free
  4914  011940  5001               	movf	btemp^0,w,c
  4915  011942  B4D8               	btfsc	status,2,c
  4916  011944  D013               	goto	l13588
  4917  011946  EC35  F0E3         	call	_check_adc_scan	;wreg free
  4918  01194A  5001               	movf	btemp^0,w,c
  4919  01194C  B4D8               	btfsc	status,2,c
  4920  01194E  D00E               	goto	l13588
  4921                           
  4922                           ;main.c: 323:    convert_adc_data();
  4923  011950  EC3E  F0D4         	call	_convert_adc_data	;wreg free
  4924                           
  4925                           ;main.c: 327:    clear_adc_scan();
  4926  011954  EC45  F0E3         	call	_clear_adc_scan	;wreg free
  4927                           
  4928                           ; BSR set to: 0
  4929                           ;main.c: 328:    start_adc_scan();
  4930  011958  EC8B  F0DA         	call	_start_adc_scan	;wreg free
  4931                           
  4932                           ;main.c: 329:    StartTimer(TMR_ADC, 200);
  4933  01195C  0EC8               	movlw	200
  4934  01195E  6EE6               	movwf	postinc1,c
  4935  011960  0E00               	movlw	0
  4936  011962  6EE6               	movwf	postinc1,c
  4937  011964  0E01               	movlw	1
  4938  011966  6EE6               	movwf	postinc1,c
  4939  011968  ECF2  F0DD         	call	_StartTimer	;wreg free
  4940  01196C                     l13588:
  4941                           
  4942                           ;main.c: 336:   if (TimerDone(TMR_DISPLAY)) {
  4943                           
  4944                           ;main.c: 332:   if (V.ticks) {
  4945  01196C  0E0A               	movlw	10
  4946  01196E  6EE6               	movwf	postinc1,c
  4947  011970  EC47  F0E0         	call	_TimerDone	;wreg free
  4948  011974  5001               	movf	btemp^0,w,c
  4949  011976  B4D8               	btfsc	status,2,c
  4950  011978  EF6B  F091         	goto	l13672
  4951                           
  4952                           ;main.c: 337:    if (TimerDone(TMR_HELPDIS)) {
  4953  01197C  0E09               	movlw	9
  4954  01197E  6EE6               	movwf	postinc1,c
  4955  011980  EC47  F0E0         	call	_TimerDone	;wreg free
  4956  011984  5001               	movf	btemp^0,w,c
  4957  011986  B4D8               	btfsc	status,2,c
  4958  011988  D004               	goto	l13596
  4959                           
  4960                           ;main.c: 338:     set_display_info(DIS_STR);
  4961  01198A  0E00               	movlw	0
  4962  01198C  6EE6               	movwf	postinc1,c
  4963  01198E  EC4C  F0E2         	call	_set_display_info	;wreg free
  4964  011992                     l13596:
  4965                           
  4966                           ;main.c: 340:    calc_model_data();
  4967  011992  EC51  F0AE         	call	_calc_model_data	;wreg free
  4968                           
  4969                           ; BSR set to: 57
  4970                           ;main.c: 347:     hid_display(&H);
  4971                           
  4972                           ;main.c: 342:    if (0) {
  4973  011996  0EC6               	movlw	low _H
  4974  011998  6EE6               	movwf	postinc1,c
  4975  01199A  0E01               	movlw	high _H
  4976  01199C  6EE6               	movwf	postinc1,c
  4977  01199E  EC4E  F0C1         	call	_hid_display	;wreg free
  4978                           
  4979                           ;main.c: 348:     switch (H.hid_display) {
  4980  0119A2  EF01  F091         	goto	l13644
  4981  0119A6                     l1358:
  4982                           
  4983                           ; BSR set to: 1
  4984                           ;main.c: 350:      V.calib = 0;
  4985  0119A6  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  4986                           
  4987                           ; BSR set to: 1
  4988                           ;main.c: 351:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f      ", (C.day) ? 'D' :
      +                           ' ', C.p_pv);
  4989  0119A8  EE22  F021         	lfsr	2,_C+290	;volatile
  4990  0119AC  50DF               	movf	indf2,w,c
  4991  0119AE  A4D8               	btfss	status,2,c
  4992  0119B0  D002               	goto	l13606
  4993                           
  4994                           ; BSR set to: 1
  4995  0119B2  0E20               	movlw	32
  4996  0119B4  D001               	goto	L1
  4997  0119B6                     l13606:
  4998                           
  4999                           ; BSR set to: 1
  5000  0119B6  0E44               	movlw	68
  5001  0119B8                     L1:
  5002  0119B8  6E0B               	movwf	(btemp+10)^0,c
  5003  0119BA  0E00               	movlw	0
  5004  0119BC  6E0C               	movwf	(btemp+11)^0,c
  5005                           
  5006                           ;stkvar	_main$3774 @ sp[(-17)+2]
  5007  0119BE  0EF1               	movlw	-15
  5008  0119C0  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5009  0119C6  0EF2               	movlw	-14
  5010  0119C8  0060  F033  FFE3   	movff	btemp+11,plusw1
  5011                           
  5012                           ; BSR set to: 1
  5013  0119CE  EE21  F37B         	lfsr	2,_C+124	;volatile
  5014  0119D2  006F FF7B FFE6     	movff	postinc2,postinc1
  5015  0119D8  006F FF7B FFE6     	movff	postinc2,postinc1
  5016  0119DE  006F FF7B FFE6     	movff	postinc2,postinc1
  5017  0119E4  006F FF7B FFE6     	movff	postinc2,postinc1
  5018                           
  5019                           ;stkvar	_main$3774 @ sp[(-21)+2]
  5020  0119EA  0EED               	movlw	-19
  5021  0119EC  006F FF8F FFE6     	movff	plusw1,postinc1
  5022  0119F2  006F FF8F FFE6     	movff	plusw1,postinc1
  5023  0119F8  0E1C               	movlw	low STR_22
  5024  0119FA  6EE6               	movwf	postinc1,c
  5025  0119FC  0EFE               	movlw	high STR_22
  5026  0119FE  6EE6               	movwf	postinc1,c
  5027  011A00  0E00               	movlw	0
  5028  011A02  6EE6               	movwf	postinc1,c
  5029  011A04  0E00               	movlw	0
  5030  011A06  6EE6               	movwf	postinc1,c
  5031  011A08  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
  5032  011A0C  0060  F007  FFE6   	movff	btemp,postinc1
  5033  011A12  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5034  011A18  0E0A               	movlw	10
  5035  011A1A  6EE6               	movwf	postinc1,c
  5036  011A1C  EC56  F0D0         	call	_sprintf	;wreg free
  5037                           
  5038                           ; BSR set to: 0
  5039                           ;main.c: 352:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f       ", C.p_load);
  5040  011A20  EE21  F373         	lfsr	2,_C+116	;volatile
  5041  011A24  006F FF7B FFE6     	movff	postinc2,postinc1
  5042  011A2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5043  011A30  006F FF7B FFE6     	movff	postinc2,postinc1
  5044  011A36  006F FF7B FFE6     	movff	postinc2,postinc1
  5045  011A3C  0E06               	movlw	low STR_23
  5046  011A3E  6EE6               	movwf	postinc1,c
  5047  011A40  0EFE               	movlw	high STR_23
  5048  011A42  6EE6               	movwf	postinc1,c
  5049  011A44  0E00               	movlw	0
  5050  011A46  6EE6               	movwf	postinc1,c
  5051  011A48  0E01               	movlw	1
  5052  011A4A  6EE6               	movwf	postinc1,c
  5053  011A4C  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
  5054  011A50  0060  F007  FFE6   	movff	btemp,postinc1
  5055  011A56  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5056  011A5C  0E08               	movlw	8
  5057  011A5E  6EE6               	movwf	postinc1,c
  5058  011A60  EC56  F0D0         	call	_sprintf	;wreg free
  5059                           
  5060                           ; BSR set to: 0
  5061                           ;main.c: 353:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f       ", C.p_inverter);
  5062  011A64  EE21  F377         	lfsr	2,_C+120	;volatile
  5063  011A68  006F FF7B FFE6     	movff	postinc2,postinc1
  5064  011A6E  006F FF7B FFE6     	movff	postinc2,postinc1
  5065  011A74  006F FF7B FFE6     	movff	postinc2,postinc1
  5066  011A7A  006F FF7B FFE6     	movff	postinc2,postinc1
  5067  011A80  0EF0               	movlw	low STR_24
  5068  011A82  6EE6               	movwf	postinc1,c
  5069  011A84  0EFD               	movlw	high STR_24
  5070  011A86  6EE6               	movwf	postinc1,c
  5071  011A88  0E00               	movlw	0
  5072  011A8A  6EE6               	movwf	postinc1,c
  5073  011A8C  0E02               	movlw	2
  5074  011A8E  6EE6               	movwf	postinc1,c
  5075  011A90  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
  5076  011A94  0060  F007  FFE6   	movff	btemp,postinc1
  5077  011A9A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5078  011AA0  0E08               	movlw	8
  5079  011AA2  6EE6               	movwf	postinc1,c
  5080  011AA4  EC56  F0D0         	call	_sprintf	;wreg free
  5081                           
  5082                           ; BSR set to: 0
  5083                           ;main.c: 355:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f       ", (C.day) ? 'D' :
      +                           ' ', C.pvkw);
  5084  011AA8  EE22  F021         	lfsr	2,_C+290	;volatile
  5085  011AAC  50DF               	movf	indf2,w,c
  5086  011AAE  A4D8               	btfss	status,2,c
  5087  011AB0  D002               	goto	l13618
  5088                           
  5089                           ; BSR set to: 0
  5090  011AB2  0E20               	movlw	32
  5091  011AB4  D001               	goto	L2
  5092  011AB6                     l13618:
  5093                           
  5094                           ; BSR set to: 0
  5095  011AB6  0E44               	movlw	68
  5096  011AB8                     L2:
  5097  011AB8  6E0B               	movwf	(btemp+10)^0,c
  5098  011ABA  0E00               	movlw	0
  5099  011ABC  6E0C               	movwf	(btemp+11)^0,c
  5100                           
  5101                           ;stkvar	_main$3778 @ sp[(-17)+0]
  5102  011ABE  0EEF               	movlw	-17
  5103  011AC0  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5104  011AC6  0EF0               	movlw	-16
  5105  011AC8  0060  F033  FFE3   	movff	btemp+11,plusw1
  5106                           
  5107                           ; BSR set to: 0
  5108  011ACE  EE21  F3A7         	lfsr	2,_C+168	;volatile
  5109  011AD2  006F FF7B FFE6     	movff	postinc2,postinc1
  5110  011AD8  006F FF7B FFE6     	movff	postinc2,postinc1
  5111  011ADE  006F FF7B FFE6     	movff	postinc2,postinc1
  5112  011AE4  006F FF7B FFE6     	movff	postinc2,postinc1
  5113                           
  5114                           ;stkvar	_main$3778 @ sp[(-21)+0]
  5115  011AEA  0EEB               	movlw	-21
  5116  011AEC  006F FF8F FFE6     	movff	plusw1,postinc1
  5117  011AF2  006F FF8F FFE6     	movff	plusw1,postinc1
  5118  011AF8  0EDA               	movlw	low STR_25
  5119  011AFA  6EE6               	movwf	postinc1,c
  5120  011AFC  0EFD               	movlw	high STR_25
  5121  011AFE  6EE6               	movwf	postinc1,c
  5122  011B00  0E01               	movlw	1
  5123  011B02  6EE6               	movwf	postinc1,c
  5124  011B04  0E00               	movlw	0
  5125  011B06  6EE6               	movwf	postinc1,c
  5126  011B08  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
  5127  011B0C  0060  F007  FFE6   	movff	btemp,postinc1
  5128  011B12  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5129  011B18  0E0A               	movlw	10
  5130  011B1A  6EE6               	movwf	postinc1,c
  5131  011B1C  EC56  F0D0         	call	_sprintf	;wreg free
  5132                           
  5133                           ; BSR set to: 0
  5134                           ;main.c: 356:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f        ", C.loadkw);
  5135  011B20  EE21  F3AF         	lfsr	2,_C+176	;volatile
  5136  011B24  006F FF7B FFE6     	movff	postinc2,postinc1
  5137  011B2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5138  011B30  006F FF7B FFE6     	movff	postinc2,postinc1
  5139  011B36  006F FF7B FFE6     	movff	postinc2,postinc1
  5140  011B3C  0EC4               	movlw	low STR_26
  5141  011B3E  6EE6               	movwf	postinc1,c
  5142  011B40  0EFD               	movlw	high STR_26
  5143  011B42  6EE6               	movwf	postinc1,c
  5144  011B44  0E01               	movlw	1
  5145  011B46  6EE6               	movwf	postinc1,c
  5146  011B48  0E01               	movlw	1
  5147  011B4A  6EE6               	movwf	postinc1,c
  5148  011B4C  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
  5149  011B50  0060  F007  FFE6   	movff	btemp,postinc1
  5150  011B56  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5151  011B5C  0E08               	movlw	8
  5152  011B5E  6EE6               	movwf	postinc1,c
  5153  011B60  EC56  F0D0         	call	_sprintf	;wreg free
  5154                           
  5155                           ; BSR set to: 0
  5156                           ;main.c: 357:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f        ", C.invkw);
  5157  011B64  EE21  F3AB         	lfsr	2,_C+172	;volatile
  5158  011B68  006F FF7B FFE6     	movff	postinc2,postinc1
  5159  011B6E  006F FF7B FFE6     	movff	postinc2,postinc1
  5160  011B74  006F FF7B FFE6     	movff	postinc2,postinc1
  5161  011B7A  006F FF7B FFE6     	movff	postinc2,postinc1
  5162  011B80  0EAE               	movlw	low STR_27
  5163  011B82  6EE6               	movwf	postinc1,c
  5164  011B84  0EFD               	movlw	high STR_27
  5165  011B86  6EE6               	movwf	postinc1,c
  5166  011B88  0E01               	movlw	1
  5167  011B8A  6EE6               	movwf	postinc1,c
  5168  011B8C  0E02               	movlw	2
  5169  011B8E  6EE6               	movwf	postinc1,c
  5170  011B90  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
  5171  011B94  0060  F007  FFE6   	movff	btemp,postinc1
  5172  011B9A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5173  011BA0  0E08               	movlw	8
  5174  011BA2  6EE6               	movwf	postinc1,c
  5175  011BA4  EC56  F0D0         	call	_sprintf	;wreg free
  5176                           
  5177                           ;main.c: 358:      break;
  5178  011BA8  D342               	goto	l13646
  5179  011BAA                     l1368:
  5180                           
  5181                           ; BSR set to: 1
  5182                           ;main.c: 360:      V.calib = 0;
  5183  011BAA  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5184                           
  5185                           ; BSR set to: 1
  5186                           ;main.c: 361:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f    ", C.calc[V_PV], C
      +                          .calc[C_PV]);
  5187  011BAC  EE21  F303         	lfsr	2,_C+4	;volatile
  5188  011BB0  006F FF7B FFE6     	movff	postinc2,postinc1
  5189  011BB6  006F FF7B FFE6     	movff	postinc2,postinc1
  5190  011BBC  006F FF7B FFE6     	movff	postinc2,postinc1
  5191  011BC2  006F FF7B FFE6     	movff	postinc2,postinc1
  5192  011BC8  EE21  F313         	lfsr	2,_C+20	;volatile
  5193  011BCC  006F FF7B FFE6     	movff	postinc2,postinc1
  5194  011BD2  006F FF7B FFE6     	movff	postinc2,postinc1
  5195  011BD8  006F FF7B FFE6     	movff	postinc2,postinc1
  5196  011BDE  006F FF7B FFE6     	movff	postinc2,postinc1
  5197  011BE4  0E74               	movlw	low STR_28
  5198  011BE6  6EE6               	movwf	postinc1,c
  5199  011BE8  0EFE               	movlw	high STR_28
  5200  011BEA  6EE6               	movwf	postinc1,c
  5201  011BEC  0E00               	movlw	0
  5202  011BEE  6EE6               	movwf	postinc1,c
  5203  011BF0  0E00               	movlw	0
  5204  011BF2  6EE6               	movwf	postinc1,c
  5205  011BF4  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
  5206  011BF8  0060  F007  FFE6   	movff	btemp,postinc1
  5207  011BFE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5208  011C04  0E0C               	movlw	12
  5209  011C06  6EE6               	movwf	postinc1,c
  5210  011C08  EC56  F0D0         	call	_sprintf	;wreg free
  5211                           
  5212                           ;main.c: 362:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f    ", C.calc[V_BAT], 
      +                          C.calc[C_BATT]);
  5213  011C0C  EE21  F2FF         	lfsr	2,_C
  5214  011C10  006F FF7B FFE6     	movff	postinc2,postinc1
  5215  011C16  006F FF7B FFE6     	movff	postinc2,postinc1
  5216  011C1C  006F FF7B FFE6     	movff	postinc2,postinc1
  5217  011C22  006F FF7B FFE6     	movff	postinc2,postinc1
  5218  011C28  EE21  F30F         	lfsr	2,_C+16	;volatile
  5219  011C2C  006F FF7B FFE6     	movff	postinc2,postinc1
  5220  011C32  006F FF7B FFE6     	movff	postinc2,postinc1
  5221  011C38  006F FF7B FFE6     	movff	postinc2,postinc1
  5222  011C3E  006F FF7B FFE6     	movff	postinc2,postinc1
  5223  011C44  0E48               	movlw	low STR_29
  5224  011C46  6EE6               	movwf	postinc1,c
  5225  011C48  0EFE               	movlw	high STR_29
  5226  011C4A  6EE6               	movwf	postinc1,c
  5227  011C4C  0E00               	movlw	0
  5228  011C4E  6EE6               	movwf	postinc1,c
  5229  011C50  0E01               	movlw	1
  5230  011C52  6EE6               	movwf	postinc1,c
  5231  011C54  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
  5232  011C58  0060  F007  FFE6   	movff	btemp,postinc1
  5233  011C5E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5234  011C64  0E0C               	movlw	12
  5235  011C66  6EE6               	movwf	postinc1,c
  5236  011C68  EC56  F0D0         	call	_sprintf	;wreg free
  5237                           
  5238                           ;main.c: 363:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f    ", C.calc[V_CC], C
      +                          .c_load);
  5239  011C6C  EE21  F33F         	lfsr	2,_C+64	;volatile
  5240  011C70  006F FF7B FFE6     	movff	postinc2,postinc1
  5241  011C76  006F FF7B FFE6     	movff	postinc2,postinc1
  5242  011C7C  006F FF7B FFE6     	movff	postinc2,postinc1
  5243  011C82  006F FF7B FFE6     	movff	postinc2,postinc1
  5244  011C88  EE21  F307         	lfsr	2,_C+8	;volatile
  5245  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
  5246  011C92  006F FF7B FFE6     	movff	postinc2,postinc1
  5247  011C98  006F FF7B FFE6     	movff	postinc2,postinc1
  5248  011C9E  006F FF7B FFE6     	movff	postinc2,postinc1
  5249  011CA4  0E5E               	movlw	low STR_30
  5250  011CA6  6EE6               	movwf	postinc1,c
  5251  011CA8  0EFE               	movlw	high STR_30
  5252  011CAA  6EE6               	movwf	postinc1,c
  5253  011CAC  0E00               	movlw	0
  5254  011CAE  6EE6               	movwf	postinc1,c
  5255  011CB0  0E02               	movlw	2
  5256  011CB2  6EE6               	movwf	postinc1,c
  5257  011CB4  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
  5258  011CB8  0060  F007  FFE6   	movff	btemp,postinc1
  5259  011CBE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5260  011CC4  0E0C               	movlw	12
  5261  011CC6  6EE6               	movwf	postinc1,c
  5262  011CC8  EC56  F0D0         	call	_sprintf	;wreg free
  5263                           
  5264                           ;main.c: 365:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f        ", C.bkwi);
  5265  011CCC  EE21  F39F         	lfsr	2,_C+160	;volatile
  5266  011CD0  006F FF7B FFE6     	movff	postinc2,postinc1
  5267  011CD6  006F FF7B FFE6     	movff	postinc2,postinc1
  5268  011CDC  006F FF7B FFE6     	movff	postinc2,postinc1
  5269  011CE2  006F FF7B FFE6     	movff	postinc2,postinc1
  5270  011CE8  0E6C               	movlw	low STR_31
  5271  011CEA  6EE6               	movwf	postinc1,c
  5272  011CEC  0EFD               	movlw	high STR_31
  5273  011CEE  6EE6               	movwf	postinc1,c
  5274  011CF0  0E01               	movlw	1
  5275  011CF2  6EE6               	movwf	postinc1,c
  5276  011CF4  0E00               	movlw	0
  5277  011CF6  6EE6               	movwf	postinc1,c
  5278  011CF8  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
  5279  011CFC  0060  F007  FFE6   	movff	btemp,postinc1
  5280  011D02  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5281  011D08  0E08               	movlw	8
  5282  011D0A  6EE6               	movwf	postinc1,c
  5283  011D0C  EC56  F0D0         	call	_sprintf	;wreg free
  5284                           
  5285                           ;main.c: 366:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f        ", C.bkwo);
  5286  011D10  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5287  011D14  006F FF7B FFE6     	movff	postinc2,postinc1
  5288  011D1A  006F FF7B FFE6     	movff	postinc2,postinc1
  5289  011D20  006F FF7B FFE6     	movff	postinc2,postinc1
  5290  011D26  006F FF7B FFE6     	movff	postinc2,postinc1
  5291  011D2C  0E82               	movlw	low STR_32
  5292  011D2E  6EE6               	movwf	postinc1,c
  5293  011D30  0EFD               	movlw	high STR_32
  5294  011D32  6EE6               	movwf	postinc1,c
  5295  011D34  0E01               	movlw	1
  5296  011D36  6EE6               	movwf	postinc1,c
  5297  011D38  0E01               	movlw	1
  5298  011D3A  6EE6               	movwf	postinc1,c
  5299  011D3C  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
  5300  011D40  0060  F007  FFE6   	movff	btemp,postinc1
  5301  011D46  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5302  011D4C  0E08               	movlw	8
  5303  011D4E  6EE6               	movwf	postinc1,c
  5304  011D50  EC56  F0D0         	call	_sprintf	;wreg free
  5305                           
  5306                           ;main.c: 367:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f        ", C.bkwi + C.bkwo
      +                          );
  5307  011D54  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5308  011D58  006F FF7B FFE6     	movff	postinc2,postinc1
  5309  011D5E  006F FF7B FFE6     	movff	postinc2,postinc1
  5310  011D64  006F FF7B FFE6     	movff	postinc2,postinc1
  5311  011D6A  006F FF7B FFE6     	movff	postinc2,postinc1
  5312  011D70  EE21  F39F         	lfsr	2,_C+160	;volatile
  5313  011D74  006F FF7B FFE6     	movff	postinc2,postinc1
  5314  011D7A  006F FF7B FFE6     	movff	postinc2,postinc1
  5315  011D80  006F FF7B FFE6     	movff	postinc2,postinc1
  5316  011D86  006F FF7B FFE6     	movff	postinc2,postinc1
  5317  011D8C  EC18  F0A3         	call	___fladd	;wreg free
  5318  011D90  0060  F007  FFE6   	movff	btemp,postinc1
  5319  011D96  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5320  011D9C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5321  011DA2  0060  F013  FFE6   	movff	btemp+3,postinc1
  5322  011DA8  0E98               	movlw	low STR_33
  5323  011DAA  6EE6               	movwf	postinc1,c
  5324  011DAC  0EFD               	movlw	high STR_33
  5325  011DAE  6EE6               	movwf	postinc1,c
  5326  011DB0  0E01               	movlw	1
  5327  011DB2  6EE6               	movwf	postinc1,c
  5328  011DB4  0E02               	movlw	2
  5329  011DB6  6EE6               	movwf	postinc1,c
  5330  011DB8  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
  5331  011DBC  0060  F007  FFE6   	movff	btemp,postinc1
  5332  011DC2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5333  011DC8  0E08               	movlw	8
  5334  011DCA  6EE6               	movwf	postinc1,c
  5335  011DCC  EC56  F0D0         	call	_sprintf	;wreg free
  5336                           
  5337                           ;main.c: 368:      break;
  5338  011DD0  D22E               	goto	l13646
  5339  011DD2                     l1369:
  5340                           
  5341                           ; BSR set to: 1
  5342                           ;main.c: 370:      V.calib = 0;
  5343  011DD2  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5344                           
  5345                           ; BSR set to: 1
  5346                           ;main.c: 371:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f        ", C.p_bat);
  5347  011DD4  EE21  F37F         	lfsr	2,_C+128	;volatile
  5348  011DD8  006F FF7B FFE6     	movff	postinc2,postinc1
  5349  011DDE  006F FF7B FFE6     	movff	postinc2,postinc1
  5350  011DE4  006F FF7B FFE6     	movff	postinc2,postinc1
  5351  011DEA  006F FF7B FFE6     	movff	postinc2,postinc1
  5352  011DF0  0EE4               	movlw	low STR_34
  5353  011DF2  6EE6               	movwf	postinc1,c
  5354  011DF4  0EFC               	movlw	high STR_34
  5355  011DF6  6EE6               	movwf	postinc1,c
  5356  011DF8  0E00               	movlw	0
  5357  011DFA  6EE6               	movwf	postinc1,c
  5358  011DFC  0E00               	movlw	0
  5359  011DFE  6EE6               	movwf	postinc1,c
  5360  011E00  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
  5361  011E04  0060  F007  FFE6   	movff	btemp,postinc1
  5362  011E0A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5363  011E10  0E08               	movlw	8
  5364  011E12  6EE6               	movwf	postinc1,c
  5365  011E14  EC56  F0D0         	call	_sprintf	;wreg free
  5366                           
  5367                           ;main.c: 372:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f      ", C.dynamic_ah, 
      +                          C.pv_ah);
  5368  011E18  EE21  F393         	lfsr	2,_C+148	;volatile
  5369  011E1C  006F FF7B FFE6     	movff	postinc2,postinc1
  5370  011E22  006F FF7B FFE6     	movff	postinc2,postinc1
  5371  011E28  006F FF7B FFE6     	movff	postinc2,postinc1
  5372  011E2E  006F FF7B FFE6     	movff	postinc2,postinc1
  5373  011E34  EE21  F38F         	lfsr	2,_C+144	;volatile
  5374  011E38  006F FF7B FFE6     	movff	postinc2,postinc1
  5375  011E3E  006F FF7B FFE6     	movff	postinc2,postinc1
  5376  011E44  006F FF7B FFE6     	movff	postinc2,postinc1
  5377  011E4A  006F FF7B FFE6     	movff	postinc2,postinc1
  5378  011E50  0E29               	movlw	low STR_35
  5379  011E52  6EE6               	movwf	postinc1,c
  5380  011E54  0EFD               	movlw	high STR_35
  5381  011E56  6EE6               	movwf	postinc1,c
  5382  011E58  0E00               	movlw	0
  5383  011E5A  6EE6               	movwf	postinc1,c
  5384  011E5C  0E01               	movlw	1
  5385  011E5E  6EE6               	movwf	postinc1,c
  5386  011E60  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
  5387  011E64  0060  F007  FFE6   	movff	btemp,postinc1
  5388  011E6A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5389  011E70  0E0C               	movlw	12
  5390  011E72  6EE6               	movwf	postinc1,c
  5391  011E74  EC56  F0D0         	call	_sprintf	;wreg free
  5392                           
  5393                           ;main.c: 373:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d V%2.2f       ", spinners
      +                          (5, 0), C.soc, C.runtime, C.calc[V_BAT]);
  5394  011E78  EE21  F30F         	lfsr	2,_C+16	;volatile
  5395  011E7C  006F FF7B FFE6     	movff	postinc2,postinc1
  5396  011E82  006F FF7B FFE6     	movff	postinc2,postinc1
  5397  011E88  006F FF7B FFE6     	movff	postinc2,postinc1
  5398  011E8E  006F FF7B FFE6     	movff	postinc2,postinc1
  5399  011E94  EE21  F3B3         	lfsr	2,_C+180	;volatile
  5400  011E98  006F FF78  F00B    	movff	postinc2,btemp+10
  5401  011E9E  006F FF74  F00C    	movff	postdec2,btemp+11
  5402  011EA4  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5403  011EAA  0060  F033  FFE6   	movff	btemp+11,postinc1
  5404  011EB0  EE21  F3B5         	lfsr	2,_C+182	;volatile
  5405  011EB4  006F FF78  F00B    	movff	postinc2,btemp+10
  5406  011EBA  006F FF74  F00C    	movff	postdec2,btemp+11
  5407  011EC0  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5408  011EC6  0060  F033  FFE6   	movff	btemp+11,postinc1
  5409  011ECC  0E00               	movlw	0
  5410  011ECE  6EE6               	movwf	postinc1,c
  5411  011ED0  0E05               	movlw	5
  5412  011ED2  6EE6               	movwf	postinc1,c
  5413  011ED4  ECDB  F0D0         	call	_spinners	;wreg free
  5414  011ED8  5001               	movf	btemp^0,w,c
  5415  011EDA  6EE6               	movwf	postinc1,c
  5416  011EDC  0E00               	movlw	0
  5417  011EDE  6EE6               	movwf	postinc1,c
  5418  011EE0  0E4A               	movlw	low STR_36
  5419  011EE2  6EE6               	movwf	postinc1,c
  5420  011EE4  0EFC               	movlw	high STR_36
  5421  011EE6  6EE6               	movwf	postinc1,c
  5422  011EE8  0E00               	movlw	0
  5423  011EEA  6EE6               	movwf	postinc1,c
  5424  011EEC  0E02               	movlw	2
  5425  011EEE  6EE6               	movwf	postinc1,c
  5426  011EF0  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
  5427  011EF4  0060  F007  FFE6   	movff	btemp,postinc1
  5428  011EFA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5429  011F00  0E0E               	movlw	14
  5430  011F02  6EE6               	movwf	postinc1,c
  5431  011F04  EC56  F0D0         	call	_sprintf	;wreg free
  5432                           
  5433                           ;main.c: 375:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f            ", C.esr);
  5434  011F08  EE21  F387         	lfsr	2,_C+136	;volatile
  5435  011F0C  006F FF7B FFE6     	movff	postinc2,postinc1
  5436  011F12  006F FF7B FFE6     	movff	postinc2,postinc1
  5437  011F18  006F FF7B FFE6     	movff	postinc2,postinc1
  5438  011F1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5439  011F24  0ECD               	movlw	low STR_37
  5440  011F26  6EE6               	movwf	postinc1,c
  5441  011F28  0EFC               	movlw	high STR_37
  5442  011F2A  6EE6               	movwf	postinc1,c
  5443  011F2C  0E01               	movlw	1
  5444  011F2E  6EE6               	movwf	postinc1,c
  5445  011F30  0E00               	movlw	0
  5446  011F32  6EE6               	movwf	postinc1,c
  5447  011F34  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
  5448  011F38  0060  F007  FFE6   	movff	btemp,postinc1
  5449  011F3E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5450  011F44  0E08               	movlw	8
  5451  011F46  6EE6               	movwf	postinc1,c
  5452  011F48  EC56  F0D0         	call	_sprintf	;wreg free
  5453                           
  5454                           ;main.c: 376:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f        ", C.bv_one_load,
      +                           C.load_i1);
  5455  011F4C  EE22  F00D         	lfsr	2,_C+270	;volatile
  5456  011F50  006F FF7B FFE6     	movff	postinc2,postinc1
  5457  011F56  006F FF7B FFE6     	movff	postinc2,postinc1
  5458  011F5C  006F FF7B FFE6     	movff	postinc2,postinc1
  5459  011F62  006F FF7B FFE6     	movff	postinc2,postinc1
  5460  011F68  EE22  F019         	lfsr	2,_C+282	;volatile
  5461  011F6C  006F FF7B FFE6     	movff	postinc2,postinc1
  5462  011F72  006F FF7B FFE6     	movff	postinc2,postinc1
  5463  011F78  006F FF7B FFE6     	movff	postinc2,postinc1
  5464  011F7E  006F FF7B FFE6     	movff	postinc2,postinc1
  5465  011F84  0EFB               	movlw	low STR_38
  5466  011F86  6EE6               	movwf	postinc1,c
  5467  011F88  0EFC               	movlw	high STR_38
  5468  011F8A  6EE6               	movwf	postinc1,c
  5469  011F8C  0E01               	movlw	1
  5470  011F8E  6EE6               	movwf	postinc1,c
  5471  011F90  0E01               	movlw	1
  5472  011F92  6EE6               	movwf	postinc1,c
  5473  011F94  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
  5474  011F98  0060  F007  FFE6   	movff	btemp,postinc1
  5475  011F9E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5476  011FA4  0E0C               	movlw	12
  5477  011FA6  6EE6               	movwf	postinc1,c
  5478  011FA8  EC56  F0D0         	call	_sprintf	;wreg free
  5479                           
  5480                           ;main.c: 377:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f        ", C.bv_full_load
      +                          , C.load_i2);
  5481  011FAC  EE22  F011         	lfsr	2,_C+274	;volatile
  5482  011FB0  006F FF7B FFE6     	movff	postinc2,postinc1
  5483  011FB6  006F FF7B FFE6     	movff	postinc2,postinc1
  5484  011FBC  006F FF7B FFE6     	movff	postinc2,postinc1
  5485  011FC2  006F FF7B FFE6     	movff	postinc2,postinc1
  5486  011FC8  EE22  F01D         	lfsr	2,_C+286	;volatile
  5487  011FCC  006F FF7B FFE6     	movff	postinc2,postinc1
  5488  011FD2  006F FF7B FFE6     	movff	postinc2,postinc1
  5489  011FD8  006F FF7B FFE6     	movff	postinc2,postinc1
  5490  011FDE  006F FF7B FFE6     	movff	postinc2,postinc1
  5491  011FE4  0E12               	movlw	low STR_39
  5492  011FE6  6EE6               	movwf	postinc1,c
  5493  011FE8  0EFD               	movlw	high STR_39
  5494  011FEA  6EE6               	movwf	postinc1,c
  5495  011FEC  0E01               	movlw	1
  5496  011FEE  6EE6               	movwf	postinc1,c
  5497  011FF0  0E02               	movlw	2
  5498  011FF2  6EE6               	movwf	postinc1,c
  5499  011FF4  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
  5500  011FF8  0060  F007  FFE6   	movff	btemp,postinc1
  5501  011FFE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5502  012004  0E0C               	movlw	12
  5503  012006  6EE6               	movwf	postinc1,c
  5504  012008  EC56  F0D0         	call	_sprintf	;wreg free
  5505                           
  5506                           ;main.c: 378:      break;
  5507  01200C  D110               	goto	l13646
  5508  01200E                     l13630:
  5509                           
  5510                           ; BSR set to: 1
  5511                           ;main.c: 380:      if (!V.calib) {
  5512  01200E  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
  5513  012010  A4D8               	btfss	status,2,c
  5514  012012  D02D               	goto	l13634
  5515                           
  5516                           ; BSR set to: 1
  5517                           ;main.c: 381:       lp_filter(0.0, i, -1);
  5518  012014  0EFF               	movlw	255
  5519  012016  6EE6               	movwf	postinc1,c
  5520                           
  5521                           ;stkvar	_i @ sp[(-18)+14]
  5522  012018  0EFC               	movlw	-4
  5523  01201A  50E3               	movf	plusw1,w,c
  5524  01201C  6EE6               	movwf	postinc1,c
  5525  01201E  0E00               	movlw	0
  5526  012020  6EE6               	movwf	postinc1,c
  5527  012022  0E00               	movlw	0
  5528  012024  6EE6               	movwf	postinc1,c
  5529  012026  0E00               	movlw	0
  5530  012028  6EE6               	movwf	postinc1,c
  5531  01202A  0E00               	movlw	0
  5532  01202C  6EE6               	movwf	postinc1,c
  5533  01202E  EC67  F0C4         	call	_lp_filter	;wreg free
  5534                           
  5535                           ;main.c: 382:       lp_filter(0.0, j, -1);
  5536  012032  0EFF               	movlw	255
  5537  012034  6EE6               	movwf	postinc1,c
  5538                           
  5539                           ;stkvar	_j @ sp[(-18)+13]
  5540  012036  0EFB               	movlw	-5
  5541  012038  50E3               	movf	plusw1,w,c
  5542  01203A  6EE6               	movwf	postinc1,c
  5543  01203C  0E00               	movlw	0
  5544  01203E  6EE6               	movwf	postinc1,c
  5545  012040  0E00               	movlw	0
  5546  012042  6EE6               	movwf	postinc1,c
  5547  012044  0E00               	movlw	0
  5548  012046  6EE6               	movwf	postinc1,c
  5549  012048  0E00               	movlw	0
  5550  01204A  6EE6               	movwf	postinc1,c
  5551  01204C  EC67  F0C4         	call	_lp_filter	;wreg free
  5552                           
  5553                           ;main.c: 383:       lp_filter(0.0, k, -1);
  5554  012050  0EFF               	movlw	255
  5555  012052  6EE6               	movwf	postinc1,c
  5556                           
  5557                           ;stkvar	_k @ sp[(-18)+12]
  5558  012054  0EFA               	movlw	-6
  5559  012056  50E3               	movf	plusw1,w,c
  5560  012058  6EE6               	movwf	postinc1,c
  5561  01205A  0E00               	movlw	0
  5562  01205C  6EE6               	movwf	postinc1,c
  5563  01205E  0E00               	movlw	0
  5564  012060  6EE6               	movwf	postinc1,c
  5565  012062  0E00               	movlw	0
  5566  012064  6EE6               	movwf	postinc1,c
  5567  012066  0E00               	movlw	0
  5568  012068  6EE6               	movwf	postinc1,c
  5569  01206A  EC67  F0C4         	call	_lp_filter	;wreg free
  5570  01206E                     l13634:
  5571                           
  5572                           ;main.c: 385:      V.calib = 1;
  5573  01206E  0E01               	movlw	1
  5574  012070  0101               	movlb	1	; () banked
  5575  012072  6FB3               	movwf	(_V+172)& (0+255),b	;volatile
  5576                           
  5577                           ; BSR set to: 1
  5578                           ;main.c: 386:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          i), C.calc[i], inp_index + 1);
  5579                           ;stkvar	_inp_index @ sp[(-17)+11]
  5580  012074  0EFA               	movlw	-6
  5581  012076  50E3               	movf	plusw1,w,c
  5582  012078  6E0B               	movwf	(btemp+10)^0,c
  5583  01207A  6A0C               	clrf	(btemp+11)^0,c
  5584  01207C  0E01               	movlw	1
  5585  01207E  260B               	addwf	(btemp+10)^0,f,c
  5586  012080  0E00               	movlw	0
  5587  012082  220C               	addwfc	(btemp+11)^0,f,c
  5588  012084  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5589  01208A  0060  F033  FFE6   	movff	btemp+11,postinc1
  5590                           
  5591                           ;stkvar	_i @ sp[(-19)+14]
  5592  012090  0EFB               	movlw	-5
  5593  012092  50E3               	movf	plusw1,w,c
  5594  012094  0D04               	mullw	4
  5595  012096  0EFF               	movlw	low _C
  5596  012098  24F3               	addwf	243,w,c
  5597  01209A  6ED9               	movwf	fsr2l,c
  5598  01209C  0E06               	movlw	high _C
  5599  01209E  20F4               	addwfc	prodh,w,c
  5600  0120A0  6EDA               	movwf	fsr2h,c
  5601  0120A2  006F FF7B FFE6     	movff	postinc2,postinc1
  5602  0120A8  006F FF7B FFE6     	movff	postinc2,postinc1
  5603  0120AE  006F FF7B FFE6     	movff	postinc2,postinc1
  5604  0120B4  006F FF7B FFE6     	movff	postinc2,postinc1
  5605                           
  5606                           ;stkvar	_i @ sp[(-23)+14]
  5607  0120BA  0EF7               	movlw	-9
  5608  0120BC  50E3               	movf	plusw1,w,c
  5609  0120BE  6EE6               	movwf	postinc1,c
  5610  0120C0  EC5B  F0E2         	call	_get_raw_result	;wreg free
  5611  0120C4  0060  F007  FFE6   	movff	btemp,postinc1
  5612  0120CA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5613  0120D0  0E8A               	movlw	low STR_40
  5614  0120D2  6EE6               	movwf	postinc1,c
  5615  0120D4  0EFE               	movlw	high STR_40
  5616  0120D6  6EE6               	movwf	postinc1,c
  5617  0120D8  0E00               	movlw	0
  5618  0120DA  6EE6               	movwf	postinc1,c
  5619  0120DC  0E00               	movlw	0
  5620  0120DE  6EE6               	movwf	postinc1,c
  5621  0120E0  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
  5622  0120E4  0060  F007  FFE6   	movff	btemp,postinc1
  5623  0120EA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5624  0120F0  0E0C               	movlw	12
  5625  0120F2  6EE6               	movwf	postinc1,c
  5626  0120F4  EC56  F0D0         	call	_sprintf	;wreg free
  5627                           
  5628                           ; BSR set to: 0
  5629                           ;main.c: 387:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          j), C.calc[j], inp_index + 2);
  5630                           ;stkvar	_inp_index @ sp[(-17)+11]
  5631  0120F8  0EFA               	movlw	-6
  5632  0120FA  50E3               	movf	plusw1,w,c
  5633  0120FC  6E0B               	movwf	(btemp+10)^0,c
  5634  0120FE  6A0C               	clrf	(btemp+11)^0,c
  5635  012100  0E02               	movlw	2
  5636  012102  260B               	addwf	(btemp+10)^0,f,c
  5637  012104  0E00               	movlw	0
  5638  012106  220C               	addwfc	(btemp+11)^0,f,c
  5639  012108  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5640  01210E  0060  F033  FFE6   	movff	btemp+11,postinc1
  5641                           
  5642                           ;stkvar	_j @ sp[(-19)+13]
  5643  012114  0EFA               	movlw	-6
  5644  012116  50E3               	movf	plusw1,w,c
  5645  012118  0D04               	mullw	4
  5646  01211A  0EFF               	movlw	low _C
  5647  01211C  24F3               	addwf	243,w,c
  5648  01211E  6ED9               	movwf	fsr2l,c
  5649  012120  0E06               	movlw	high _C
  5650  012122  20F4               	addwfc	prodh,w,c
  5651  012124  6EDA               	movwf	fsr2h,c
  5652  012126  006F FF7B FFE6     	movff	postinc2,postinc1
  5653  01212C  006F FF7B FFE6     	movff	postinc2,postinc1
  5654  012132  006F FF7B FFE6     	movff	postinc2,postinc1
  5655  012138  006F FF7B FFE6     	movff	postinc2,postinc1
  5656                           
  5657                           ;stkvar	_j @ sp[(-23)+13]
  5658  01213E  0EF6               	movlw	-10
  5659  012140  50E3               	movf	plusw1,w,c
  5660  012142  6EE6               	movwf	postinc1,c
  5661  012144  EC5B  F0E2         	call	_get_raw_result	;wreg free
  5662  012148  0060  F007  FFE6   	movff	btemp,postinc1
  5663  01214E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5664  012154  0E8A               	movlw	low STR_40
  5665  012156  6EE6               	movwf	postinc1,c
  5666  012158  0EFE               	movlw	high STR_40
  5667  01215A  6EE6               	movwf	postinc1,c
  5668  01215C  0E00               	movlw	0
  5669  01215E  6EE6               	movwf	postinc1,c
  5670  012160  0E01               	movlw	1
  5671  012162  6EE6               	movwf	postinc1,c
  5672  012164  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
  5673  012168  0060  F007  FFE6   	movff	btemp,postinc1
  5674  01216E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5675  012174  0E0C               	movlw	12
  5676  012176  6EE6               	movwf	postinc1,c
  5677  012178  EC56  F0D0         	call	_sprintf	;wreg free
  5678                           
  5679                           ; BSR set to: 0
  5680                           ;main.c: 388:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          k), C.calc[k], inp_index + 3);
  5681                           ;stkvar	_inp_index @ sp[(-17)+11]
  5682  01217C  0EFA               	movlw	-6
  5683  01217E  50E3               	movf	plusw1,w,c
  5684  012180  6E0B               	movwf	(btemp+10)^0,c
  5685  012182  6A0C               	clrf	(btemp+11)^0,c
  5686  012184  0E03               	movlw	3
  5687  012186  260B               	addwf	(btemp+10)^0,f,c
  5688  012188  0E00               	movlw	0
  5689  01218A  220C               	addwfc	(btemp+11)^0,f,c
  5690  01218C  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5691  012192  0060  F033  FFE6   	movff	btemp+11,postinc1
  5692                           
  5693                           ;stkvar	_k @ sp[(-19)+12]
  5694  012198  0EF9               	movlw	-7
  5695  01219A  50E3               	movf	plusw1,w,c
  5696  01219C  0D04               	mullw	4
  5697  01219E  0EFF               	movlw	low _C
  5698  0121A0  24F3               	addwf	243,w,c
  5699  0121A2  6ED9               	movwf	fsr2l,c
  5700  0121A4  0E06               	movlw	high _C
  5701  0121A6  20F4               	addwfc	prodh,w,c
  5702  0121A8  6EDA               	movwf	fsr2h,c
  5703  0121AA  006F FF7B FFE6     	movff	postinc2,postinc1
  5704  0121B0  006F FF7B FFE6     	movff	postinc2,postinc1
  5705  0121B6  006F FF7B FFE6     	movff	postinc2,postinc1
  5706  0121BC  006F FF7B FFE6     	movff	postinc2,postinc1
  5707                           
  5708                           ;stkvar	_k @ sp[(-23)+12]
  5709  0121C2  0EF5               	movlw	-11
  5710  0121C4  50E3               	movf	plusw1,w,c
  5711  0121C6  6EE6               	movwf	postinc1,c
  5712  0121C8  EC5B  F0E2         	call	_get_raw_result	;wreg free
  5713  0121CC  0060  F007  FFE6   	movff	btemp,postinc1
  5714  0121D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5715  0121D8  0E8A               	movlw	low STR_40
  5716  0121DA  6EE6               	movwf	postinc1,c
  5717  0121DC  0EFE               	movlw	high STR_40
  5718  0121DE  6EE6               	movwf	postinc1,c
  5719  0121E0  0E00               	movlw	0
  5720  0121E2  6EE6               	movwf	postinc1,c
  5721  0121E4  0E02               	movlw	2
  5722  0121E6  6EE6               	movwf	postinc1,c
  5723  0121E8  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
  5724  0121EC  0060  F007  FFE6   	movff	btemp,postinc1
  5725  0121F2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5726  0121F8  0E0C               	movlw	12
  5727  0121FA  6EE6               	movwf	postinc1,c
  5728  0121FC  EC56  F0D0         	call	_sprintf	;wreg free
  5729                           
  5730                           ;main.c: 389:      break;
  5731  012200  D016               	goto	l13646
  5732  012202                     l13644:
  5733  012202  0101               	movlb	1	; () banked
  5734  012204  51C6               	movf	_H& (0+255),w,b
  5735  012206  6E0B               	movwf	(btemp+10)^0,c
  5736  012208  6A0C               	clrf	(btemp+11)^0,c
  5737                           
  5738                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5739                           ; Switch size 1, requested type "simple"
  5740                           ; Number of cases is 1, Range of values is 0 to 0
  5741                           ; switch strategies available:
  5742                           ; Name         Instructions Cycles
  5743                           ; simple_byte            4     3 (average)
  5744                           ;	Chosen strategy is simple_byte
  5745  01220A  500C               	movf	(btemp+11)^0,w,c
  5746  01220C  0A00               	xorlw	0	; case 0
  5747  01220E  A4D8               	btfss	status,2,c
  5748  012210  D00E               	goto	l13646
  5749                           
  5750                           ; BSR set to: 1
  5751                           ; Switch size 1, requested type "simple"
  5752                           ; Number of cases is 4, Range of values is 0 to 3
  5753                           ; switch strategies available:
  5754                           ; Name         Instructions Cycles
  5755                           ; simple_byte           13     7 (average)
  5756                           ;	Chosen strategy is simple_byte
  5757  012212  500B               	movf	(btemp+10)^0,w,c
  5758  012214  0A00               	xorlw	0	; case 0
  5759  012216  B4D8               	btfsc	status,2,c
  5760  012218  D4C8               	goto	l1368
  5761  01221A  0A01               	xorlw	1	; case 1
  5762  01221C  B4D8               	btfsc	status,2,c
  5763  01221E  EFD3  F08C         	goto	l1358
  5764  012222  0A03               	xorlw	3	; case 2
  5765  012224  B4D8               	btfsc	status,2,c
  5766  012226  D5D5               	goto	l1369
  5767  012228  0A01               	xorlw	1	; case 3
  5768  01222A  B4D8               	btfsc	status,2,c
  5769  01222C  D6F0               	goto	l13630
  5770  01222E                     l13646:
  5771                           
  5772                           ;main.c: 393:     clear_hid_pflags(&H);
  5773  01222E  0EC6               	movlw	low _H
  5774  012230  6EE6               	movwf	postinc1,c
  5775  012232  0E01               	movlw	high _H
  5776  012234  6EE6               	movwf	postinc1,c
  5777  012236  EC25  F0DA         	call	_clear_hid_pflags	;wreg free
  5778                           
  5779                           ;main.c: 395:    StartTimer(TMR_DISPLAY, 250);
  5780  01223A  0EFA               	movlw	250
  5781  01223C  6EE6               	movwf	postinc1,c
  5782  01223E  0E00               	movlw	0
  5783  012240  6EE6               	movwf	postinc1,c
  5784  012242  0E0A               	movlw	10
  5785  012244  6EE6               	movwf	postinc1,c
  5786  012246  ECF2  F0DD         	call	_StartTimer	;wreg free
  5787                           
  5788                           ;main.c: 396:    V.enter = check_enter_button(&H);
  5789  01224A  0EC6               	movlw	low _H
  5790  01224C  6EE6               	movwf	postinc1,c
  5791  01224E  0E01               	movlw	high _H
  5792  012250  6EE6               	movwf	postinc1,c
  5793  012252  EC4D  F0D9         	call	_check_enter_button	;wreg free
  5794  012256  5001               	movf	btemp^0,w,c
  5795  012258  0101               	movlb	1	; () banked
  5796  01225A  6FB4               	movwf	(_V+173)& (0+255),b	;volatile
  5797                           
  5798                           ; BSR set to: 1
  5799                           ;main.c: 397:    if (V.enter && (H.hid_display != HID_AUX)) {
  5800  01225C  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  5801  01225E  B4D8               	btfsc	status,2,c
  5802  012260  D011               	goto	l13660
  5803                           
  5804                           ; BSR set to: 1
  5805  012262  0E03               	movlw	3
  5806  012264  19C6               	xorwf	_H& (0+255),w,b
  5807  012266  B4D8               	btfsc	status,2,c
  5808  012268  D00D               	goto	l13660
  5809                           
  5810                           ; BSR set to: 1
  5811                           ;main.c: 398:     V.enter = 0;
  5812  01226A  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  5813                           
  5814                           ; BSR set to: 1
  5815                           ;main.c: 399:     V.screen = ~V.screen;
  5816  01226C  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  5817  01226E  D002               	goto	u13050
  5818  012270  0E01               	movlw	1
  5819  012272  D001               	goto	u13056
  5820  012274                     u13050:
  5821  012274  0E00               	movlw	0
  5822  012276                     u13056:
  5823  012276  0AFF               	xorlw	255
  5824  012278  6E0C               	movwf	(btemp+11)^0,c
  5825  01227A  51A3               	movf	(_V+156)& (0+255),w,b	;volatile
  5826  01227C  180C               	xorwf	(btemp+11)^0,w,c
  5827  01227E  0BFE               	andlw	-2
  5828  012280  180C               	xorwf	(btemp+11)^0,w,c
  5829  012282  6FA3               	movwf	(_V+156)& (0+255),b	;volatile
  5830  012284                     l13660:
  5831                           
  5832                           ; BSR set to: 1
  5833                           ;main.c: 401:    set_vterm(V.screen);
  5834  012284  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  5835  012286  D002               	goto	u13060
  5836  012288  0E01               	movlw	1
  5837  01228A  D001               	goto	u13066
  5838  01228C                     u13060:
  5839  01228C  0E00               	movlw	0
  5840  01228E                     u13066:
  5841  01228E  6EE6               	movwf	postinc1,c
  5842  012290  EC3D  F0E2         	call	_set_vterm	;wreg free
  5843                           
  5844                           ;main.c: 402:    update_lcd(V.screen);
  5845  012294  0101               	movlb	1	; () banked
  5846  012296  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  5847  012298  D002               	goto	u13070
  5848  01229A  0E01               	movlw	1
  5849  01229C  D001               	goto	u13076
  5850  01229E                     u13070:
  5851  01229E  0E00               	movlw	0
  5852  0122A0                     u13076:
  5853  0122A0  6EE6               	movwf	postinc1,c
  5854  0122A2  ECCE  F0CF         	call	_update_lcd	;wreg free
  5855                           
  5856                           ;main.c: 404:    wait_lcd_done();
  5857  0122A6  ECCC  F0E1         	call	_wait_lcd_done	;wreg free
  5858                           
  5859                           ; BSR set to: 0
  5860                           ;main.c: 405:    set_dac_a(3.333);
  5861  0122AA  0EDF               	movlw	223
  5862  0122AC  6EE6               	movwf	postinc1,c
  5863  0122AE  0E4F               	movlw	79
  5864  0122B0  6EE6               	movwf	postinc1,c
  5865  0122B2  0E55               	movlw	85
  5866  0122B4  6EE6               	movwf	postinc1,c
  5867  0122B6  0E40               	movlw	64
  5868  0122B8  6EE6               	movwf	postinc1,c
  5869  0122BA  EC30  F0DF         	call	_set_dac_a	;wreg free
  5870                           
  5871                           ;main.c: 406:    set_dac_b(6.666);
  5872  0122BE  0EDF               	movlw	223
  5873  0122C0  6EE6               	movwf	postinc1,c
  5874  0122C2  0E4F               	movlw	79
  5875  0122C4  6EE6               	movwf	postinc1,c
  5876  0122C6  0ED5               	movlw	213
  5877  0122C8  6EE6               	movwf	postinc1,c
  5878  0122CA  0E40               	movlw	64
  5879  0122CC  6EE6               	movwf	postinc1,c
  5880  0122CE  EC16  F0DF         	call	_set_dac_b	;wreg free
  5881                           
  5882                           ;main.c: 407:    set_dac();
  5883  0122D2  EC9A  F0D4         	call	_set_dac	;wreg free
  5884  0122D6                     l13672:
  5885                           
  5886                           ;main.c: 413:   check_help(V.flipper);
  5887  0122D6  0101               	movlb	1	; () banked
  5888  0122D8  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  5889  0122DA  6EE6               	movwf	postinc1,c
  5890  0122DC  EC5C  F0C2         	call	_check_help	;wreg free
  5891                           
  5892                           ;main.c: 415:   if (V.enter) {
  5893  0122E0  0101               	movlb	1	; () banked
  5894  0122E2  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  5895  0122E4  B4D8               	btfsc	status,2,c
  5896  0122E6  D062               	goto	l1374
  5897                           
  5898                           ; BSR set to: 1
  5899                           ;main.c: 416:    V.enter = 0;
  5900  0122E8  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  5901                           
  5902                           ;main.c: 417:    V.calib = 0;
  5903  0122EA  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5904                           
  5905                           ; BSR set to: 1
  5906                           ;main.c: 418:    inp_index += 3;
  5907                           ;stkvar	_inp_index @ sp[(-17)+11]
  5908  0122EC  0EFA               	movlw	-6
  5909  0122EE  006F FF8C  F001    	movff	plusw1,btemp
  5910  0122F4  0E03               	movlw	3
  5911  0122F6  2601               	addwf	btemp^0,f,c
  5912  0122F8  0EFA               	movlw	-6
  5913  0122FA  0060  F007  FFE3   	movff	btemp,plusw1
  5914                           
  5915                           ;main.c: 419:    if (inp_index > 9)
  5916                           ;stkvar	_inp_index @ sp[(-17)+11]
  5917  012300  0EFA               	movlw	-6
  5918  012302  006F FF8C  F001    	movff	plusw1,btemp
  5919  012308  0E09               	movlw	9
  5920  01230A  6401               	cpfsgt	btemp^0,c
  5921  01230C  D03A               	goto	l13700
  5922                           
  5923                           ; BSR set to: 1
  5924                           ;main.c: 420:     inp_index = 0;
  5925                           ;stkvar	_inp_index @ sp[(-17)+11]
  5926  01230E  0EFA               	movlw	-6
  5927  012310  6AE3               	clrf	plusw1,c
  5928  012312  D037               	goto	l13700
  5929  012314                     l13682:
  5930                           
  5931                           ; BSR set to: 1
  5932                           ;main.c: 423:     i = C_BATT;
  5933                           ;stkvar	_i @ sp[(-17)+14]
  5934  012314  0EFD               	movlw	-3
  5935  012316  6AE3               	clrf	plusw1,c
  5936                           
  5937                           ; BSR set to: 1
  5938                           ;main.c: 424:     j = C_PV;
  5939                           ;stkvar	_j @ sp[(-17)+13]
  5940  012318  0EFC               	movlw	-4
  5941  01231A  6AE3               	clrf	plusw1,c
  5942  01231C  2AE3               	incf	plusw1,f,c
  5943                           
  5944                           ; BSR set to: 1
  5945                           ;main.c: 425:     k = V_CC;
  5946                           ;stkvar	_k @ sp[(-17)+12]
  5947  01231E  0EFB               	movlw	-5
  5948  012320  6AE3               	clrf	plusw1,c
  5949  012322  82E3               	bsf	plusw1,1,c
  5950                           
  5951                           ;main.c: 426:     break;
  5952  012324  D043               	goto	l1374
  5953  012326                     l13688:
  5954                           
  5955                           ; BSR set to: 1
  5956                           ;main.c: 428:     i = V_BAT;
  5957                           ;stkvar	_i @ sp[(-17)+14]
  5958  012326  0EFD               	movlw	-3
  5959  012328  6AE3               	clrf	plusw1,c
  5960  01232A  84E3               	bsf	plusw1,2,c
  5961                           
  5962                           ;main.c: 429:     j = V_PV;
  5963                           ;stkvar	_j @ sp[(-17)+13]
  5964  01232C  0EFC               	movlw	-4
  5965  01232E  6AE3               	clrf	plusw1,c
  5966  012330  80E3               	bsf	plusw1,0,c
  5967  012332  84E3               	bsf	plusw1,2,c	;indir
  5968                           
  5969                           ;main.c: 430:     k = V_CBUS;
  5970                           ;stkvar	_k @ sp[(-17)+12]
  5971  012334  0EFB               	movlw	-5
  5972  012336  6AE3               	clrf	plusw1,c
  5973  012338  82E3               	bsf	plusw1,1,c
  5974  01233A  84E3               	bsf	plusw1,2,c	;indir
  5975                           
  5976                           ;main.c: 431:     break;
  5977  01233C  D037               	goto	l1374
  5978  01233E                     l13690:
  5979                           
  5980                           ; BSR set to: 1
  5981                           ;main.c: 433:     i = V_BBAT;
  5982                           ;stkvar	_i @ sp[(-17)+14]
  5983  01233E  0EFD               	movlw	-3
  5984  012340  6AE3               	clrf	plusw1,c
  5985  012342  82E3               	bsf	plusw1,1,c
  5986  012344  86E3               	bsf	plusw1,3,c	;indir
  5987                           
  5988                           ; BSR set to: 1
  5989                           ;main.c: 434:     j = V_TEMP;
  5990  012346  0E0B               	movlw	11
  5991  012348  6E0C               	movwf	(btemp+11)^0,c
  5992                           
  5993                           ;stkvar	_j @ sp[(-17)+13]
  5994  01234A  0EFC               	movlw	-4
  5995  01234C  0060  F033  FFE3   	movff	btemp+11,plusw1
  5996                           
  5997                           ; BSR set to: 1
  5998                           ;main.c: 435:     k = V_INVERTER;
  5999                           ;stkvar	_k @ sp[(-17)+12]
  6000  012352  0EFB               	movlw	-5
  6001  012354  6AE3               	clrf	plusw1,c
  6002  012356  84E3               	bsf	plusw1,2,c
  6003  012358  86E3               	bsf	plusw1,3,c	;indir
  6004                           
  6005                           ;main.c: 436:     break;
  6006  01235A  D028               	goto	l1374
  6007  01235C                     l13696:
  6008                           
  6009                           ; BSR set to: 1
  6010                           ;main.c: 438:     i = V_LIGHT_SENSOR;
  6011  01235C  0E0D               	movlw	13
  6012  01235E  6E0C               	movwf	(btemp+11)^0,c
  6013                           
  6014                           ;stkvar	_i @ sp[(-17)+14]
  6015  012360  0EFD               	movlw	-3
  6016  012362  0060  F033  FFE3   	movff	btemp+11,plusw1
  6017                           
  6018                           ;main.c: 439:     j = V_LIGHT_SENSOR;
  6019  012368  0E0D               	movlw	13
  6020  01236A  6E0C               	movwf	(btemp+11)^0,c
  6021                           
  6022                           ;stkvar	_j @ sp[(-17)+13]
  6023  01236C  0EFC               	movlw	-4
  6024  01236E  0060  F033  FFE3   	movff	btemp+11,plusw1
  6025                           
  6026                           ;main.c: 440:     k = V_LIGHT_SENSOR;
  6027  012374  0E0D               	movlw	13
  6028  012376  6E0C               	movwf	(btemp+11)^0,c
  6029                           
  6030                           ;stkvar	_k @ sp[(-17)+12]
  6031  012378  0EFB               	movlw	-5
  6032  01237A  0060  F033  FFE3   	movff	btemp+11,plusw1
  6033                           
  6034                           ;main.c: 441:     break;
  6035  012380  D015               	goto	l1374
  6036  012382                     l13700:
  6037                           
  6038                           ; BSR set to: 1
  6039                           ;stkvar	_inp_index @ sp[(-17)+11]
  6040  012382  0EFA               	movlw	-6
  6041  012384  50E3               	movf	plusw1,w,c
  6042  012386  6E0B               	movwf	(btemp+10)^0,c
  6043  012388  6A0C               	clrf	(btemp+11)^0,c
  6044                           
  6045                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6046                           ; Switch size 1, requested type "simple"
  6047                           ; Number of cases is 1, Range of values is 0 to 0
  6048                           ; switch strategies available:
  6049                           ; Name         Instructions Cycles
  6050                           ; simple_byte            4     3 (average)
  6051                           ;	Chosen strategy is simple_byte
  6052  01238A  500C               	movf	(btemp+11)^0,w,c
  6053  01238C  0A00               	xorlw	0	; case 0
  6054  01238E  A4D8               	btfss	status,2,c
  6055  012390  D00D               	goto	l1374
  6056                           
  6057                           ; BSR set to: 1
  6058                           ; Switch size 1, requested type "simple"
  6059                           ; Number of cases is 4, Range of values is 0 to 9
  6060                           ; switch strategies available:
  6061                           ; Name         Instructions Cycles
  6062                           ; simple_byte           13     7 (average)
  6063                           ;	Chosen strategy is simple_byte
  6064  012392  500B               	movf	(btemp+10)^0,w,c
  6065  012394  0A00               	xorlw	0	; case 0
  6066  012396  B4D8               	btfsc	status,2,c
  6067  012398  D7BD               	goto	l13682
  6068  01239A  0A03               	xorlw	3	; case 3
  6069  01239C  B4D8               	btfsc	status,2,c
  6070  01239E  D7C3               	goto	l13688
  6071  0123A0  0A05               	xorlw	5	; case 6
  6072  0123A2  B4D8               	btfsc	status,2,c
  6073  0123A4  D7CC               	goto	l13690
  6074  0123A6  0A0F               	xorlw	15	; case 9
  6075  0123A8  B4D8               	btfsc	status,2,c
  6076  0123AA  D7D8               	goto	l13696
  6077  0123AC                     l1374:
  6078                           
  6079                           ; BSR set to: 1
  6080                           ;main.c: 450:   if (V.set_sequ) {
  6081  0123AC  A1A2               	btfss	(_V+155)& (0+255),0,b	;volatile
  6082  0123AE  EF85  F08C         	goto	l13574
  6083                           
  6084                           ; BSR set to: 1
  6085                           ;main.c: 451:    if (TimerDone(TMR_INFO)) {
  6086  0123B2  0E07               	movlw	7
  6087  0123B4  6EE6               	movwf	postinc1,c
  6088  0123B6  EC47  F0E0         	call	_TimerDone	;wreg free
  6089  0123BA  5001               	movf	btemp^0,w,c
  6090  0123BC  B4D8               	btfsc	status,2,c
  6091  0123BE  D00C               	goto	l13710
  6092                           
  6093                           ;main.c: 452:     V.set_sequ = 0;
  6094  0123C0  0101               	movlb	1	; () banked
  6095  0123C2  91A2               	bcf	(_V+155)& (0+255),0,b	;volatile
  6096                           
  6097                           ; BSR set to: 1
  6098                           ;main.c: 453:     set_vterm(0);
  6099  0123C4  0E00               	movlw	0
  6100  0123C6  6EE6               	movwf	postinc1,c
  6101  0123C8  EC3D  F0E2         	call	_set_vterm	;wreg free
  6102                           
  6103                           ;main.c: 454:     update_lcd(0);
  6104  0123CC  0E00               	movlw	0
  6105  0123CE  6EE6               	movwf	postinc1,c
  6106  0123D0  ECCE  F0CF         	call	_update_lcd	;wreg free
  6107                           
  6108                           ;main.c: 455:    } else {
  6109  0123D4  EF85  F08C         	goto	l13574
  6110  0123D8                     l13710:
  6111                           
  6112                           ;main.c: 456:     set_vterm(2);
  6113  0123D8  0E02               	movlw	2
  6114  0123DA  6EE6               	movwf	postinc1,c
  6115  0123DC  EC3D  F0E2         	call	_set_vterm	;wreg free
  6116                           
  6117                           ;main.c: 457:     update_lcd(2);
  6118  0123E0  0E02               	movlw	2
  6119  0123E2  6EE6               	movwf	postinc1,c
  6120  0123E4  ECCE  F0CF         	call	_update_lcd	;wreg free
  6121  0123E8  EF85  F08C         	goto	l13574
  6122  0123EC                     __end_of_main:
  6123                           	opt callstack 0
  6124                           
  6125 ;; *************** function _static_soc *****************
  6126 ;; Defined at:
  6127 ;;		line 117 in file "mbmc.c"
  6128 ;; Parameters:    Size  Location     Type
  6129 ;;		None
  6130 ;; Auto vars:     Size  Location     Type
  6131 ;;		None
  6132 ;; Return value:  Size  Location     Type
  6133 ;;                  1  [STACK] void 
  6134 ;; Registers used:
  6135 ;;		wreg, fsr2l, fsr2h
  6136 ;; Tracked objects:
  6137 ;;		On entry : 0/0
  6138 ;;		On exit  : 0/0
  6139 ;;		Unchanged: 0/0
  6140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6145 ;;Total ram usage:        0 bytes
  6146 ;; Hardware stack levels used:    1
  6147 ;; Hardware stack levels required when called:   15
  6148 ;; This function calls:
  6149 ;;		Nothing
  6150 ;; This function is called by:
  6151 ;;		_main
  6152 ;; This function uses a reentrant model
  6153 ;;
  6154                           
  6155                           	psect	text1
  6156  01B69E                     __ptext1:
  6157                           	opt callstack 0
  6158  01B69E                     _static_soc:
  6159                           	opt callstack 15
  6160                           
  6161                           ;mbmc.c: 119:  C.runtime = 120;
  6162                           
  6163                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6164                           ;incstack = 0
  6165  01B69E  0E78               	movlw	120
  6166  01B6A0  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
  6167  01B6A6  0E00               	movlw	0
  6168  01B6A8  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
  6169                           
  6170                           ;mbmc.c: 120:  C.soc = 100;
  6171  01B6AE  0E64               	movlw	100
  6172  01B6B0  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
  6173  01B6B6  0E00               	movlw	0
  6174  01B6B8  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
  6175                           
  6176                           ;mbmc.c: 121:  C.dynamic_ah = C.bank_ah;
  6177  01B6BE  EE21  F38B         	lfsr	2,_C+140	;volatile
  6178  01B6C2  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
  6179  01B6C8  006F FF78  F790    	movff	postinc2,_C+145	;volatile
  6180  01B6CE  006F FF78  F791    	movff	postinc2,_C+146	;volatile
  6181  01B6D4  006F FF74  F792    	movff	postdec2,_C+147	;volatile
  6182                           
  6183                           ;mbmc.c: 122:  C.dynamic_ah_adj = C.dynamic_ah;
  6184  01B6DA  EE21  F38F         	lfsr	2,_C+144	;volatile
  6185  01B6DE  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  6186  01B6E4  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  6187  01B6EA  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  6188  01B6F0  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  6189                           
  6190                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6191  01B6F6  0012               	return		;funcret
  6192  01B6F8                     __end_of_static_soc:
  6193                           	opt callstack 0
  6194                           
  6195 ;; *************** function _start_switch_handler *****************
  6196 ;; Defined at:
  6197 ;;		line 125 in file "dio.c"
  6198 ;; Parameters:    Size  Location     Type
  6199 ;;		None
  6200 ;; Auto vars:     Size  Location     Type
  6201 ;;		None
  6202 ;; Return value:  Size  Location     Type
  6203 ;;                  1  [STACK] void 
  6204 ;; Registers used:
  6205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  6206 ;; Tracked objects:
  6207 ;;		On entry : 1/0
  6208 ;;		On exit  : 3F/39
  6209 ;;		Unchanged: 0/0
  6210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6215 ;;Total ram usage:        0 bytes
  6216 ;; Hardware stack levels used:    1
  6217 ;; Hardware stack levels required when called:   16
  6218 ;; This function calls:
  6219 ;;		_INT1_SetInterruptHandler
  6220 ;; This function is called by:
  6221 ;;		_main
  6222 ;; This function uses a reentrant model
  6223 ;;
  6224                           
  6225                           	psect	text2
  6226  01C3FE                     __ptext2:
  6227                           	opt callstack 0
  6228  01C3FE                     _start_switch_handler:
  6229                           	opt callstack 14
  6230                           
  6231                           ;dio.c: 127:  (PIE5bits.INT1IE = 0);
  6232                           
  6233                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6234                           ;incstack = 0
  6235  01C3FE  0139               	movlb	57	; () banked
  6236  01C400  9195               	bcf	149,0,b	;volatile
  6237                           
  6238                           ; BSR set to: 57
  6239                           ;dio.c: 128:  INT1_SetInterruptHandler(switch_handler);
  6240  01C402  0E4C               	movlw	low _switch_handler
  6241  01C404  6EE6               	movwf	postinc1,c
  6242  01C406  0E96               	movlw	high _switch_handler
  6243  01C408  6EE6               	movwf	postinc1,c
  6244  01C40A  0E01               	movlw	low (_switch_handler shr (0+16))
  6245  01C40C  6EE6               	movwf	postinc1,c
  6246  01C40E  ECD3  F0E0         	call	_INT1_SetInterruptHandler	;wreg free
  6247                           
  6248                           ;dio.c: 129:  S.button[SNULL].sw = SW_INVALID;
  6249  01C412  0E02               	movlw	2
  6250  01C414  0102               	movlb	2	; () banked
  6251  01C416  6F77               	movwf	(_S+35)& (0+255),b	;volatile
  6252                           
  6253                           ; BSR set to: 2
  6254                           ;dio.c: 130:  (PIE5bits.INT1IE = 1);
  6255  01C418  0139               	movlb	57	; () banked
  6256  01C41A  8195               	bsf	149,0,b	;volatile
  6257                           
  6258                           ; BSR set to: 57
  6259                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  6260  01C41C  0012               	return		;funcret
  6261  01C41E                     __end_of_start_switch_handler:
  6262                           	opt callstack 0
  6263                           
  6264 ;; *************** function _srand *****************
  6265 ;; Defined at:
  6266 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  6267 ;; Parameters:    Size  Location     Type
  6268 ;;  s               2  [STACK] unsigned int 
  6269 ;; Auto vars:     Size  Location     Type
  6270 ;;		None
  6271 ;; Return value:  Size  Location     Type
  6272 ;;                  1  [STACK] void 
  6273 ;; Registers used:
  6274 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  6275 ;; Tracked objects:
  6276 ;;		On entry : 0/0
  6277 ;;		On exit  : 3F/1
  6278 ;;		Unchanged: 0/0
  6279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6284 ;;Total ram usage:        0 bytes
  6285 ;; Hardware stack levels used:    1
  6286 ;; Hardware stack levels required when called:   15
  6287 ;; This function calls:
  6288 ;;		Nothing
  6289 ;; This function is called by:
  6290 ;;		_main
  6291 ;; This function uses a reentrant model
  6292 ;;
  6293                           
  6294                           	psect	text3
  6295  01BDF8                     __ptext3:
  6296                           	opt callstack 0
  6297  01BDF8                     _srand:
  6298                           	opt callstack 15
  6299                           
  6300                           ;stkvar	_s @ sp[(0)+-2]
  6301                           
  6302                           ; BSR set to: 57
  6303                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6304                           ;incstack = 0
  6305  01BDF8  0EFE               	movlw	-2
  6306  01BDFA  50E3               	movf	plusw1,w,c
  6307  01BDFC  0FFF               	addlw	255
  6308  01BDFE  6E0B               	movwf	(btemp+10)^0,c
  6309  01BE00  0EFF               	movlw	-1
  6310  01BE02  006F FF8C  F00C    	movff	plusw1,btemp+11
  6311  01BE08  0EFF               	movlw	255
  6312  01BE0A  220C               	addwfc	(btemp+11)^0,f,c
  6313  01BE0C  0060  F02C  F1F5   	movff	btemp+10,_seed
  6314  01BE12  0060  F030  F1F6   	movff	btemp+11,_seed+1
  6315  01BE18  0101               	movlb	1	; () banked
  6316  01BE1A  6BF7               	clrf	(_seed+2)& (0+255),b
  6317  01BE1C  6BF8               	clrf	(_seed+3)& (0+255),b
  6318  01BE1E  6BF9               	clrf	(_seed+4)& (0+255),b
  6319  01BE20  6BFA               	clrf	(_seed+5)& (0+255),b
  6320  01BE22  6BFB               	clrf	(_seed+6)& (0+255),b
  6321  01BE24  6BFC               	clrf	(_seed+7)& (0+255),b
  6322                           
  6323                           ; BSR set to: 1
  6324                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  6325  01BE26  52E5               	movf	postdec1,f,c
  6326  01BE28  52E5               	movf	postdec1,f,c
  6327  01BE2A  0012               	return		;funcret
  6328  01BE2C                     __end_of_srand:
  6329                           	opt callstack 0
  6330                           
  6331 ;; *************** function _spinners *****************
  6332 ;; Defined at:
  6333 ;;		line 146 in file "mbmc.c"
  6334 ;; Parameters:    Size  Location     Type
  6335 ;;  shape           1  [STACK] unsigned char 
  6336 ;;  reset           1  [STACK] const unsigned char 
  6337 ;; Auto vars:     Size  Location     Type
  6338 ;;  c               1  [STACK] unsigned char 
  6339 ;; Return value:  Size  Location     Type
  6340 ;;                  1  [STACK] unsigned char 
  6341 ;; Registers used:
  6342 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
  6343 ;; Tracked objects:
  6344 ;;		On entry : 0/0
  6345 ;;		On exit  : 0/0
  6346 ;;		Unchanged: 0/0
  6347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6352 ;;Total ram usage:        0 bytes
  6353 ;; Hardware stack levels used:    1
  6354 ;; Hardware stack levels required when called:   16
  6355 ;; This function calls:
  6356 ;;		_strlen
  6357 ;; This function is called by:
  6358 ;;		_main
  6359 ;; This function uses a reentrant model
  6360 ;;
  6361                           
  6362                           	psect	text4
  6363  01A1B6                     __ptext4:
  6364                           	opt callstack 0
  6365  01A1B6                     _spinners:
  6366                           	opt callstack 0
  6367                           
  6368                           ; BSR set to: 1
  6369                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6370  01A1B6  52E6               	movf	postinc1,f,c
  6371                           
  6372                           ;mbmc.c: 146: char spinners(uint8_t shape, const uint8_t reset);mbmc.c: 147: {;mbmc.c: 1
      +                          48:  static uint8_t s[6];;mbmc.c: 149:  char c;;mbmc.c: 151:  if (shape > (6 - 1))
  6373                           ;stkvar	_shape @ sp[(-1)+-1]
  6374                           
  6375                           ;incstack = 0
  6376  01A1B8  0EFE               	movlw	-2
  6377  01A1BA  006F FF8C  F001    	movff	plusw1,btemp
  6378  01A1C0  0E05               	movlw	5
  6379  01A1C2  6401               	cpfsgt	btemp^0,c
  6380  01A1C4  D002               	goto	l1979
  6381                           
  6382                           ;mbmc.c: 152:   shape = 0;
  6383                           ;stkvar	_shape @ sp[(-1)+-1]
  6384  01A1C6  0EFE               	movlw	-2
  6385  01A1C8  6AE3               	clrf	plusw1,c
  6386  01A1CA                     l1979:
  6387                           
  6388                           ;mbmc.c: 153:  if (reset)
  6389                           ;stkvar	_reset @ sp[(-1)+-2]
  6390  01A1CA  0EFD               	movlw	-3
  6391  01A1CC  50E3               	movf	plusw1,w,c
  6392  01A1CE  B4D8               	btfsc	status,2,c
  6393  01A1D0  D00C               	goto	l11196
  6394                           
  6395                           ;mbmc.c: 154:   s[shape] = 0;
  6396                           ;stkvar	_shape @ sp[(-1)+-1]
  6397  01A1D2  0EFE               	movlw	-2
  6398  01A1D4  50E3               	movf	plusw1,w,c
  6399  01A1D6  6E0B               	movwf	(btemp+10)^0,c
  6400  01A1D8  6A0C               	clrf	(btemp+11)^0,c
  6401  01A1DA  0EE3               	movlw	low spinners@s
  6402  01A1DC  240B               	addwf	(btemp+10)^0,w,c
  6403  01A1DE  6ED9               	movwf	fsr2l,c
  6404  01A1E0  0E01               	movlw	high spinners@s
  6405  01A1E2  200C               	addwfc	(btemp+11)^0,w,c
  6406  01A1E4  6EDA               	movwf	fsr2h,c
  6407  01A1E6  0E00               	movlw	0
  6408  01A1E8  6EDF               	movwf	indf2,c
  6409  01A1EA                     l11196:
  6410                           
  6411                           ;mbmc.c: 155:  c = spin[shape][s[shape]];
  6412                           ;stkvar	_shape @ sp[(-1)+-1]
  6413  01A1EA  0EFE               	movlw	-2
  6414  01A1EC  50E3               	movf	plusw1,w,c
  6415  01A1EE  0D14               	mullw	20
  6416  01A1F0  0E3F               	movlw	low _spin
  6417  01A1F2  6E0B               	movwf	(btemp+10)^0,c
  6418  01A1F4  0EFB               	movlw	high _spin
  6419  01A1F6  6E0C               	movwf	(btemp+11)^0,c
  6420  01A1F8  50F3               	movf	243,w,c
  6421  01A1FA  260B               	addwf	(btemp+10)^0,f,c
  6422  01A1FC  50F4               	movf	244,w,c
  6423  01A1FE  220C               	addwfc	(btemp+11)^0,f,c
  6424                           
  6425                           ;stkvar	_shape @ sp[(-1)+-1]
  6426  01A200  0EFE               	movlw	-2
  6427  01A202  50E3               	movf	plusw1,w,c
  6428  01A204  6E09               	movwf	(btemp+8)^0,c
  6429  01A206  6A0A               	clrf	(btemp+9)^0,c
  6430  01A208  0EE3               	movlw	low spinners@s
  6431  01A20A  2409               	addwf	(btemp+8)^0,w,c
  6432  01A20C  6ED9               	movwf	fsr2l,c
  6433  01A20E  0E01               	movlw	high spinners@s
  6434  01A210  200A               	addwfc	(btemp+9)^0,w,c
  6435  01A212  6EDA               	movwf	fsr2h,c
  6436  01A214  50DF               	movf	indf2,w,c
  6437  01A216  260B               	addwf	(btemp+10)^0,f,c
  6438  01A218  0E00               	movlw	0
  6439  01A21A  220C               	addwfc	(btemp+11)^0,f,c
  6440  01A21C  0060  F02F  FFF6   	movff	btemp+10,tblptrl
  6441  01A222  0060  F033  FFF7   	movff	btemp+11,tblptrh
  6442  01A228                     	if	0	;tblptru may be non-zero
  6443  01A228                     	endif
  6444  01A228                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6445  01A228  0E00               	movlw	low (__mediumconst shr (0+16))
  6446  01A22A  6EF8               	movwf	tblptru,c
  6447  01A22C                     	endif
  6448                           
  6449                           ;stkvar	_c @ sp[(-1)+0]
  6450  01A22C  0008               	tblrd		*
  6451  01A22E  0EFF               	movlw	-1
  6452  01A230  006F FFD7 FFE3     	movff	tablat,plusw1
  6453                           
  6454                           ;mbmc.c: 156:  if (++s[shape] >= strlen(spin[shape]))
  6455                           ;stkvar	_shape @ sp[(-1)+-1]
  6456  01A236  0EFE               	movlw	-2
  6457  01A238  50E3               	movf	plusw1,w,c
  6458  01A23A  0D14               	mullw	20
  6459  01A23C  0E3F               	movlw	low _spin
  6460  01A23E  6E0B               	movwf	(btemp+10)^0,c
  6461  01A240  0EFB               	movlw	high _spin
  6462  01A242  6E0C               	movwf	(btemp+11)^0,c
  6463  01A244  50F3               	movf	243,w,c
  6464  01A246  260B               	addwf	(btemp+10)^0,f,c
  6465  01A248  50F4               	movf	244,w,c
  6466  01A24A  220C               	addwfc	(btemp+11)^0,f,c
  6467  01A24C  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6468  01A252  0060  F033  FFE6   	movff	btemp+11,postinc1
  6469  01A258  EC9E  F0D6         	call	_strlen	;wreg free
  6470                           
  6471                           ;stkvar	_shape @ sp[(-1)+-1]
  6472  01A25C  0EFE               	movlw	-2
  6473  01A25E  50E3               	movf	plusw1,w,c
  6474  01A260  6E0B               	movwf	(btemp+10)^0,c
  6475  01A262  6A0C               	clrf	(btemp+11)^0,c
  6476  01A264  0EE3               	movlw	low spinners@s
  6477  01A266  240B               	addwf	(btemp+10)^0,w,c
  6478  01A268  6ED9               	movwf	fsr2l,c
  6479  01A26A  0E01               	movlw	high spinners@s
  6480  01A26C  200C               	addwfc	(btemp+11)^0,w,c
  6481  01A26E  6EDA               	movwf	fsr2h,c
  6482  01A270  2ADF               	incf	indf2,f,c
  6483  01A272  50DF               	movf	indf2,w,c
  6484  01A274  6E0B               	movwf	(btemp+10)^0,c
  6485  01A276  6A0C               	clrf	(btemp+11)^0,c
  6486  01A278  5001               	movf	btemp^0,w,c
  6487  01A27A  5C0B               	subwf	(btemp+10)^0,w,c
  6488  01A27C  5002               	movf	(btemp+1)^0,w,c
  6489  01A27E  580C               	subwfb	(btemp+11)^0,w,c
  6490  01A280  A0D8               	btfss	status,0,c
  6491  01A282  D00C               	goto	l11202
  6492                           
  6493                           ;mbmc.c: 157:   s[shape] = 0;
  6494                           ;stkvar	_shape @ sp[(-1)+-1]
  6495  01A284  0EFE               	movlw	-2
  6496  01A286  50E3               	movf	plusw1,w,c
  6497  01A288  6E0B               	movwf	(btemp+10)^0,c
  6498  01A28A  6A0C               	clrf	(btemp+11)^0,c
  6499  01A28C  0EE3               	movlw	low spinners@s
  6500  01A28E  240B               	addwf	(btemp+10)^0,w,c
  6501  01A290  6ED9               	movwf	fsr2l,c
  6502  01A292  0E01               	movlw	high spinners@s
  6503  01A294  200C               	addwfc	(btemp+11)^0,w,c
  6504  01A296  6EDA               	movwf	fsr2h,c
  6505  01A298  0E00               	movlw	0
  6506  01A29A  6EDF               	movwf	indf2,c
  6507  01A29C                     l11202:
  6508                           
  6509                           ;mbmc.c: 158:  return c;
  6510                           ;stkvar	_c @ sp[(-1)+0]
  6511  01A29C  0EFF               	movlw	-1
  6512  01A29E  006F FF8C  F001    	movff	plusw1,btemp
  6513                           
  6514                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  6515  01A2A4  52E5               	movf	postdec1,f,c
  6516  01A2A6  52E5               	movf	postdec1,f,c
  6517  01A2A8  52E5               	movf	postdec1,f,c
  6518  01A2AA  0012               	return		;funcret
  6519  01A2AC                     __end_of_spinners:
  6520                           	opt callstack 0
  6521                           
  6522 ;; *************** function _set_dac_b *****************
  6523 ;; Defined at:
  6524 ;;		line 296 in file "daq.c"
  6525 ;; Parameters:    Size  Location     Type
  6526 ;;  voltage         4  [STACK] const float 
  6527 ;; Auto vars:     Size  Location     Type
  6528 ;;		None
  6529 ;; Return value:  Size  Location     Type
  6530 ;;                  2  [STACK] unsigned short 
  6531 ;; Registers used:
  6532 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6533 ;; Tracked objects:
  6534 ;;		On entry : 0/0
  6535 ;;		On exit  : 0/0
  6536 ;;		Unchanged: 0/0
  6537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6542 ;;Total ram usage:        0 bytes
  6543 ;; Hardware stack levels used:    1
  6544 ;; Hardware stack levels required when called:   17
  6545 ;; This function calls:
  6546 ;;		_convert_dac_raw
  6547 ;; This function is called by:
  6548 ;;		_main
  6549 ;; This function uses a reentrant model
  6550 ;;
  6551                           
  6552                           	psect	text5
  6553  01BE2C                     __ptext5:
  6554                           	opt callstack 0
  6555  01BE2C                     _set_dac_b:
  6556                           	opt callstack 13
  6557                           
  6558                           ;daq.c: 296: uint16_t set_dac_b(const float voltage);daq.c: 297: {;daq.c: 298:  R.raw_da
      +                          c[1] = convert_dac_raw(voltage);
  6559                           ;stkvar	_voltage @ sp[(0)+-4]
  6560                           
  6561                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6562                           ;incstack = 0
  6563  01BE2C  0EFC               	movlw	-4
  6564  01BE2E  006F FF8F FFE6     	movff	plusw1,postinc1
  6565  01BE34  006F FF8F FFE6     	movff	plusw1,postinc1
  6566  01BE3A  006F FF8F FFE6     	movff	plusw1,postinc1
  6567  01BE40  006F FF8F FFE6     	movff	plusw1,postinc1
  6568  01BE46  EC2C  F0CE         	call	_convert_dac_raw	;wreg free
  6569  01BE4A  0060  F004  F0D1   	movff	btemp,_R+34	;volatile
  6570  01BE50  0060  F008  F0D2   	movff	btemp+1,_R+35	;volatile
  6571                           
  6572                           ; _set_dac_b: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  6573                           
  6574                           ;daq.c: 299:  return R.raw_dac[1];;	Return value of _set_dac_b is never used
  6575  01BE56  52E5               	movf	postdec1,f,c
  6576  01BE58  52E5               	movf	postdec1,f,c
  6577  01BE5A  52E5               	movf	postdec1,f,c
  6578  01BE5C  52E5               	movf	postdec1,f,c
  6579  01BE5E  0012               	return		;funcret
  6580  01BE60                     __end_of_set_dac_b:
  6581                           	opt callstack 0
  6582                           
  6583 ;; *************** function _set_dac_a *****************
  6584 ;; Defined at:
  6585 ;;		line 287 in file "daq.c"
  6586 ;; Parameters:    Size  Location     Type
  6587 ;;  voltage         4  [STACK] const float 
  6588 ;; Auto vars:     Size  Location     Type
  6589 ;;		None
  6590 ;; Return value:  Size  Location     Type
  6591 ;;                  2  [STACK] unsigned short 
  6592 ;; Registers used:
  6593 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6594 ;; Tracked objects:
  6595 ;;		On entry : 3F/0
  6596 ;;		On exit  : 0/0
  6597 ;;		Unchanged: 0/0
  6598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6603 ;;Total ram usage:        0 bytes
  6604 ;; Hardware stack levels used:    1
  6605 ;; Hardware stack levels required when called:   17
  6606 ;; This function calls:
  6607 ;;		_convert_dac_raw
  6608 ;; This function is called by:
  6609 ;;		_main
  6610 ;; This function uses a reentrant model
  6611 ;;
  6612                           
  6613                           	psect	text6
  6614  01BE60                     __ptext6:
  6615                           	opt callstack 0
  6616  01BE60                     _set_dac_a:
  6617                           	opt callstack 13
  6618                           
  6619                           ;daq.c: 287: uint16_t set_dac_a(const float voltage);daq.c: 288: {;daq.c: 289:  R.raw_da
      +                          c[0] = convert_dac_raw(voltage);
  6620                           ;stkvar	_voltage @ sp[(0)+-4]
  6621                           
  6622                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6623                           ;incstack = 0
  6624  01BE60  0EFC               	movlw	-4
  6625  01BE62  006F FF8F FFE6     	movff	plusw1,postinc1
  6626  01BE68  006F FF8F FFE6     	movff	plusw1,postinc1
  6627  01BE6E  006F FF8F FFE6     	movff	plusw1,postinc1
  6628  01BE74  006F FF8F FFE6     	movff	plusw1,postinc1
  6629  01BE7A  EC2C  F0CE         	call	_convert_dac_raw	;wreg free
  6630  01BE7E  0060  F004  F0CF   	movff	btemp,_R+32	;volatile
  6631  01BE84  0060  F008  F0D0   	movff	btemp+1,_R+33	;volatile
  6632                           
  6633                           ; _set_dac_a: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  6634                           
  6635                           ;daq.c: 290:  return R.raw_dac[0];;	Return value of _set_dac_a is never used
  6636  01BE8A  52E5               	movf	postdec1,f,c
  6637  01BE8C  52E5               	movf	postdec1,f,c
  6638  01BE8E  52E5               	movf	postdec1,f,c
  6639  01BE90  52E5               	movf	postdec1,f,c
  6640  01BE92  0012               	return		;funcret
  6641  01BE94                     __end_of_set_dac_a:
  6642                           	opt callstack 0
  6643                           
  6644 ;; *************** function _convert_dac_raw *****************
  6645 ;; Defined at:
  6646 ;;		line 269 in file "daq.c"
  6647 ;; Parameters:    Size  Location     Type
  6648 ;;  voltage         4  [STACK] float 
  6649 ;; Auto vars:     Size  Location     Type
  6650 ;;		None
  6651 ;; Return value:  Size  Location     Type
  6652 ;;                  2  [STACK] unsigned short 
  6653 ;; Registers used:
  6654 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6655 ;; Tracked objects:
  6656 ;;		On entry : 0/0
  6657 ;;		On exit  : 0/0
  6658 ;;		Unchanged: 0/0
  6659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6664 ;;Total ram usage:        0 bytes
  6665 ;; Hardware stack levels used:    1
  6666 ;; Hardware stack levels required when called:   16
  6667 ;; This function calls:
  6668 ;;		___fldiv
  6669 ;;		___flge
  6670 ;;		___fltol
  6671 ;; This function is called by:
  6672 ;;		_set_dac_a
  6673 ;;		_set_dac_b
  6674 ;; This function uses a reentrant model
  6675 ;;
  6676                           
  6677                           	psect	text7
  6678  019C58                     __ptext7:
  6679                           	opt callstack 0
  6680  019C58                     _convert_dac_raw:
  6681                           	opt callstack 13
  6682                           
  6683                           ;daq.c: 269: static uint16_t convert_dac_raw(float voltage);daq.c: 270: {;daq.c: 274:  i
      +                          f (voltage < 0.001)
  6684                           
  6685                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6686                           ;incstack = 0
  6687  019C58  0E6F               	movlw	111
  6688  019C5A  6EE6               	movwf	postinc1,c
  6689  019C5C  0E12               	movlw	18
  6690  019C5E  6EE6               	movwf	postinc1,c
  6691  019C60  0E83               	movlw	131
  6692  019C62  6EE6               	movwf	postinc1,c
  6693  019C64  0E3A               	movlw	58
  6694  019C66  6EE6               	movwf	postinc1,c
  6695                           
  6696                           ;stkvar	_voltage @ sp[(-4)+-4]
  6697  019C68  0EF8               	movlw	-8
  6698  019C6A  006F FF8F FFE6     	movff	plusw1,postinc1
  6699  019C70  006F FF8F FFE6     	movff	plusw1,postinc1
  6700  019C76  006F FF8F FFE6     	movff	plusw1,postinc1
  6701  019C7C  006F FF8F FFE6     	movff	plusw1,postinc1
  6702  019C82  EC1C  F0C9         	call	___flge	;wreg free
  6703  019C86  B001               	btfsc	btemp& (0+255),0,c
  6704  019C88  D018               	goto	l10768
  6705                           
  6706                           ;daq.c: 275:   voltage = 0.001;
  6707  019C8A  0E6F               	movlw	111
  6708  019C8C  6E09               	movwf	(btemp+8)^0,c
  6709  019C8E  0E12               	movlw	18
  6710  019C90  6E0A               	movwf	(btemp+9)^0,c
  6711  019C92  0E83               	movlw	131
  6712  019C94  6E0B               	movwf	(btemp+10)^0,c
  6713  019C96  0E3A               	movlw	58
  6714  019C98  6E0C               	movwf	(btemp+11)^0,c
  6715                           
  6716                           ;stkvar	_voltage @ sp[(0)+-4]
  6717  019C9A  0EFC               	movlw	-4
  6718  019C9C  0060  F027  FFE3   	movff	btemp+8,plusw1
  6719  019CA2  0EFD               	movlw	-3
  6720  019CA4  0060  F02B  FFE3   	movff	btemp+9,plusw1
  6721  019CAA  0EFE               	movlw	-2
  6722  019CAC  0060  F02F  FFE3   	movff	btemp+10,plusw1
  6723  019CB2  0EFF               	movlw	-1
  6724  019CB4  0060  F033  FFE3   	movff	btemp+11,plusw1
  6725  019CBA                     l10768:
  6726                           
  6727                           ;daq.c: 276:  if (voltage > 10.0)
  6728                           ;stkvar	_voltage @ sp[(0)+-4]
  6729  019CBA  0EFC               	movlw	-4
  6730  019CBC  006F FF8F FFE6     	movff	plusw1,postinc1
  6731  019CC2  006F FF8F FFE6     	movff	plusw1,postinc1
  6732  019CC8  006F FF8F FFE6     	movff	plusw1,postinc1
  6733  019CCE  006F FF8F FFE6     	movff	plusw1,postinc1
  6734  019CD4  0E00               	movlw	0
  6735  019CD6  6EE6               	movwf	postinc1,c
  6736  019CD8  0E00               	movlw	0
  6737  019CDA  6EE6               	movwf	postinc1,c
  6738  019CDC  0E20               	movlw	32
  6739  019CDE  6EE6               	movwf	postinc1,c
  6740  019CE0  0E41               	movlw	65
  6741  019CE2  6EE6               	movwf	postinc1,c
  6742  019CE4  EC1C  F0C9         	call	___flge	;wreg free
  6743  019CE8  B001               	btfsc	btemp& (0+255),0,c
  6744  019CEA  D018               	goto	l10772
  6745                           
  6746                           ;daq.c: 277:   voltage = 10.0;
  6747  019CEC  0E00               	movlw	0
  6748  019CEE  6E09               	movwf	(btemp+8)^0,c
  6749  019CF0  0E00               	movlw	0
  6750  019CF2  6E0A               	movwf	(btemp+9)^0,c
  6751  019CF4  0E20               	movlw	32
  6752  019CF6  6E0B               	movwf	(btemp+10)^0,c
  6753  019CF8  0E41               	movlw	65
  6754  019CFA  6E0C               	movwf	(btemp+11)^0,c
  6755                           
  6756                           ;stkvar	_voltage @ sp[(0)+-4]
  6757  019CFC  0EFC               	movlw	-4
  6758  019CFE  0060  F027  FFE3   	movff	btemp+8,plusw1
  6759  019D04  0EFD               	movlw	-3
  6760  019D06  0060  F02B  FFE3   	movff	btemp+9,plusw1
  6761  019D0C  0EFE               	movlw	-2
  6762  019D0E  0060  F02F  FFE3   	movff	btemp+10,plusw1
  6763  019D14  0EFF               	movlw	-1
  6764  019D16  0060  F033  FFE3   	movff	btemp+11,plusw1
  6765  019D1C                     l10772:
  6766                           
  6767                           ;daq.c: 281:  return(uint16_t) (voltage / 0.002442);
  6768  019D1C  0EF6               	movlw	246
  6769  019D1E  6EE6               	movwf	postinc1,c
  6770  019D20  0E09               	movlw	9
  6771  019D22  6EE6               	movwf	postinc1,c
  6772  019D24  0E20               	movlw	32
  6773  019D26  6EE6               	movwf	postinc1,c
  6774  019D28  0E3B               	movlw	59
  6775  019D2A  6EE6               	movwf	postinc1,c
  6776                           
  6777                           ;stkvar	_voltage @ sp[(-4)+-4]
  6778  019D2C  0EF8               	movlw	-8
  6779  019D2E  006F FF8F FFE6     	movff	plusw1,postinc1
  6780  019D34  006F FF8F FFE6     	movff	plusw1,postinc1
  6781  019D3A  006F FF8F FFE6     	movff	plusw1,postinc1
  6782  019D40  006F FF8F FFE6     	movff	plusw1,postinc1
  6783  019D46  ECF6  F0A6         	call	___fldiv	;wreg free
  6784  019D4A  0060  F007  FFE6   	movff	btemp,postinc1
  6785  019D50  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6786  019D56  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6787  019D5C  0060  F013  FFE6   	movff	btemp+3,postinc1
  6788  019D62  EC63  F0C8         	call	___fltol	;wreg free
  6789                           
  6790                           ; _convert_dac_raw: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
  6791  019D66  52E5               	movf	postdec1,f,c
  6792  019D68  52E5               	movf	postdec1,f,c
  6793  019D6A  52E5               	movf	postdec1,f,c
  6794  019D6C  52E5               	movf	postdec1,f,c
  6795  019D6E  0012               	return		;funcret
  6796  019D70                     __end_of_convert_dac_raw:
  6797                           	opt callstack 0
  6798                           
  6799 ;; *************** function _set_dac *****************
  6800 ;; Defined at:
  6801 ;;		line 245 in file "daq.c"
  6802 ;; Parameters:    Size  Location     Type
  6803 ;;		None
  6804 ;; Auto vars:     Size  Location     Type
  6805 ;;		None
  6806 ;; Return value:  Size  Location     Type
  6807 ;;                  1  [STACK] void 
  6808 ;; Registers used:
  6809 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  6810 ;; Tracked objects:
  6811 ;;		On entry : 0/0
  6812 ;;		On exit  : 0/0
  6813 ;;		Unchanged: 0/0
  6814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6819 ;;Total ram usage:        0 bytes
  6820 ;; Hardware stack levels used:    1
  6821 ;; Hardware stack levels required when called:   16
  6822 ;; This function calls:
  6823 ;;		_SPI1_Exchange8bit
  6824 ;;		_dac_spi_control
  6825 ;; This function is called by:
  6826 ;;		_main
  6827 ;; This function uses a reentrant model
  6828 ;;
  6829                           
  6830                           	psect	text8
  6831  01A934                     __ptext8:
  6832                           	opt callstack 0
  6833  01A934                     _set_dac:
  6834                           	opt callstack 14
  6835                           
  6836                           ;daq.c: 247:  while (!SPI1STATUSbits.TXBE);
  6837                           
  6838                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6839                           ;incstack = 0
  6840  01A934  013D               	movlb	61	; () banked
  6841  01A936  AB17               	btfss	23,5,b	;volatile
  6842  01A938  D7FD               	goto	_set_dac
  6843                           
  6844                           ; BSR set to: 61
  6845                           
  6846                           ;daq.c: 248:  do { LATCbits.LATC2 = 1; } while(0);
  6847  01A93A  84BC               	bsf	188,2,c	;volatile
  6848                           
  6849                           ; BSR set to: 61
  6850                           
  6851                           ;daq.c: 249:  do { LATCbits.LATC0 = 1; } while(0);
  6852  01A93C  80BC               	bsf	188,0,c	;volatile
  6853                           
  6854                           ; BSR set to: 61
  6855                           ;daq.c: 250:  dac_spi_control(1);
  6856  01A93E  0E01               	movlw	1
  6857  01A940  6EE6               	movwf	postinc1,c
  6858  01A942  ECD4  F0D8         	call	_dac_spi_control	;wreg free
  6859                           
  6860                           ;daq.c: 251:  R.max5322_cmd.map.dac0 = R.raw_dac[0]&0xff;
  6861  01A946  C0CF  F0D3         	movff	_R+32,_R+36	;volatile
  6862                           
  6863                           ;daq.c: 252:  R.max5322_cmd.map.dac1 = (R.raw_dac[0] >> 8) &0xf;
  6864  01A94A  EE20  F0CF         	lfsr	2,_R+32	;volatile
  6865  01A94E  006F FF78  F00B    	movff	postinc2,btemp+10
  6866  01A954  006F FF74  F00C    	movff	postdec2,btemp+11
  6867  01A95A  0060  F030  F00B   	movff	btemp+11,btemp+10
  6868  01A960  6A0C               	clrf	(btemp+11)^0,c
  6869  01A962  0E0F               	movlw	15
  6870  01A964  160B               	andwf	(btemp+10)^0,f,c
  6871  01A966  0100               	movlb	0	; () banked
  6872  01A968  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6873  01A96A  180B               	xorwf	(btemp+10)^0,w,c
  6874  01A96C  0BF0               	andlw	-16
  6875  01A96E  180B               	xorwf	(btemp+10)^0,w,c
  6876  01A970  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6877                           
  6878                           ; BSR set to: 0
  6879                           ;daq.c: 253:  R.max5322_cmd.map.cont = 0b0100;
  6880  01A972  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6881  01A974  0B0F               	andlw	-241
  6882  01A976  0940               	iorlw	64
  6883  01A978  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6884                           
  6885                           ; BSR set to: 0
  6886  01A97A  90BF               	bcf	191,0,c	;volatile
  6887                           
  6888                           ; BSR set to: 0
  6889                           ;daq.c: 255:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  6890  01A97C  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6891  01A97E  6EE6               	movwf	postinc1,c
  6892  01A980  EC1F  F0E2         	call	_SPI1_Exchange8bit	;wreg free
  6893                           
  6894                           ; BSR set to: 57
  6895                           ;daq.c: 256:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  6896  01A984  0100               	movlb	0	; () banked
  6897  01A986  51D3               	movf	(_R+36)& (0+255),w,b	;volatile
  6898  01A988  6EE6               	movwf	postinc1,c
  6899  01A98A  EC1F  F0E2         	call	_SPI1_Exchange8bit	;wreg free
  6900                           
  6901                           ; BSR set to: 57
  6902  01A98E  80BF               	bsf	191,0,c	;volatile
  6903                           
  6904                           ; BSR set to: 57
  6905                           ;daq.c: 258:  R.max5322_cmd.map.dac0 = R.raw_dac[1]&0xff;
  6906  01A990  C0D1  F0D3         	movff	_R+34,_R+36	;volatile
  6907                           
  6908                           ; BSR set to: 57
  6909                           ;daq.c: 259:  R.max5322_cmd.map.dac1 = (R.raw_dac[1] >> 8) &0xf;
  6910  01A994  EE20  F0D1         	lfsr	2,_R+34	;volatile
  6911  01A998  006F FF78  F00B    	movff	postinc2,btemp+10
  6912  01A99E  006F FF74  F00C    	movff	postdec2,btemp+11
  6913  01A9A4  0060  F030  F00B   	movff	btemp+11,btemp+10
  6914  01A9AA  6A0C               	clrf	(btemp+11)^0,c
  6915  01A9AC  0E0F               	movlw	15
  6916  01A9AE  160B               	andwf	(btemp+10)^0,f,c
  6917  01A9B0  0100               	movlb	0	; () banked
  6918  01A9B2  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6919  01A9B4  180B               	xorwf	(btemp+10)^0,w,c
  6920  01A9B6  0BF0               	andlw	-16
  6921  01A9B8  180B               	xorwf	(btemp+10)^0,w,c
  6922  01A9BA  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6923                           
  6924                           ; BSR set to: 0
  6925                           ;daq.c: 260:  R.max5322_cmd.map.cont = 0b0101;
  6926  01A9BC  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6927  01A9BE  0B0F               	andlw	-241
  6928  01A9C0  0950               	iorlw	80
  6929  01A9C2  6FD4               	movwf	(_R+37)& (0+255),b	;volatile
  6930                           
  6931                           ; BSR set to: 0
  6932  01A9C4  90BF               	bcf	191,0,c	;volatile
  6933                           
  6934                           ; BSR set to: 0
  6935                           ;daq.c: 262:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  6936  01A9C6  51D4               	movf	(_R+37)& (0+255),w,b	;volatile
  6937  01A9C8  6EE6               	movwf	postinc1,c
  6938  01A9CA  EC1F  F0E2         	call	_SPI1_Exchange8bit	;wreg free
  6939                           
  6940                           ; BSR set to: 57
  6941                           ;daq.c: 263:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  6942  01A9CE  0100               	movlb	0	; () banked
  6943  01A9D0  51D3               	movf	(_R+36)& (0+255),w,b	;volatile
  6944  01A9D2  6EE6               	movwf	postinc1,c
  6945  01A9D4  EC1F  F0E2         	call	_SPI1_Exchange8bit	;wreg free
  6946  01A9D8                     l1872:
  6947  01A9D8  013D               	movlb	61	; () banked
  6948  01A9DA  AB17               	btfss	23,5,b	;volatile
  6949  01A9DC  D7FD               	goto	l1872
  6950                           
  6951                           ; BSR set to: 61
  6952                           
  6953                           ;daq.c: 265:  do { LATFbits.LATF0 = 1; } while(0);
  6954  01A9DE  80BF               	bsf	191,0,c	;volatile
  6955                           
  6956                           ; BSR set to: 61
  6957                           ;daq.c: 266:  dac_spi_control(0);
  6958  01A9E0  0E00               	movlw	0
  6959  01A9E2  6EE6               	movwf	postinc1,c
  6960  01A9E4  ECD4  F0D8         	call	_dac_spi_control	;wreg free
  6961                           
  6962                           ; _set_dac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  6963  01A9E8  0012               	return		;funcret
  6964  01A9EA                     __end_of_set_dac:
  6965                           	opt callstack 0
  6966                           
  6967 ;; *************** function _dac_spi_control *****************
  6968 ;; Defined at:
  6969 ;;		line 197 in file "daq.c"
  6970 ;; Parameters:    Size  Location     Type
  6971 ;;  set             1  [STACK] _Bool 
  6972 ;; Auto vars:     Size  Location     Type
  6973 ;;		None
  6974 ;; Return value:  Size  Location     Type
  6975 ;;                  1  [STACK] void 
  6976 ;; Registers used:
  6977 ;;		wreg, fsr1l, fsr1h, status,2
  6978 ;; Tracked objects:
  6979 ;;		On entry : 3F/3D
  6980 ;;		On exit  : 0/0
  6981 ;;		Unchanged: 0/0
  6982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6987 ;;Total ram usage:        0 bytes
  6988 ;; Hardware stack levels used:    1
  6989 ;; Hardware stack levels required when called:   15
  6990 ;; This function calls:
  6991 ;;		Nothing
  6992 ;; This function is called by:
  6993 ;;		_set_dac
  6994 ;; This function uses a reentrant model
  6995 ;;
  6996                           
  6997                           	psect	text9
  6998  01B1A8                     __ptext9:
  6999                           	opt callstack 0
  7000  01B1A8                     _dac_spi_control:
  7001                           	opt callstack 14
  7002                           
  7003                           ;daq.c: 197: void dac_spi_control(_Bool set);daq.c: 198: {;daq.c: 199:  static _Bool ini
      +                          t = 0;;daq.c: 200:  static uint8_t S0, S1, S2, SC, SB;;daq.c: 202:  if (set) {
  7004                           ;stkvar	_set @ sp[(0)+-1]
  7005                           
  7006                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7007                           ;incstack = 0
  7008  01B1A8  0EFF               	movlw	-1
  7009  01B1AA  50E3               	movf	plusw1,w,c
  7010  01B1AC  B4D8               	btfsc	status,2,c
  7011  01B1AE  D022               	goto	l10760
  7012                           
  7013                           ;daq.c: 203:   SPI1CON0bits.EN = 0;
  7014  01B1B0  013D               	movlb	61	; () banked
  7015  01B1B2  9F14               	bcf	20,7,b	;volatile
  7016                           
  7017                           ; BSR set to: 61
  7018                           ;daq.c: 204:   if (!init) {
  7019  01B1B4  5043               	movf	dac_spi_control@init^0,w,c
  7020  01B1B6  A4D8               	btfss	status,2,c
  7021  01B1B8  D011               	goto	l10748
  7022                           
  7023                           ; BSR set to: 61
  7024                           ;daq.c: 205:    init = 1;
  7025  01B1BA  0E01               	movlw	1
  7026  01B1BC  6E43               	movwf	dac_spi_control@init^0,c
  7027                           
  7028                           ; BSR set to: 61
  7029                           ;daq.c: 206:    S0 = SPI1CON0;
  7030  01B1BE  006F F450  F042    	movff	15636,dac_spi_control@S0	;volatile
  7031                           
  7032                           ; BSR set to: 61
  7033                           ;daq.c: 207:    S1 = SPI1CON1;
  7034  01B1C4  006F F454  F0A8    	movff	15637,dac_spi_control@S1	;volatile
  7035                           
  7036                           ; BSR set to: 61
  7037                           ;daq.c: 208:    S2 = SPI1CON2;
  7038  01B1CA  006F F458  F0A7    	movff	15638,dac_spi_control@S2	;volatile
  7039                           
  7040                           ; BSR set to: 61
  7041                           ;daq.c: 209:    SC = SPI1CLK;
  7042  01B1D0  006F F470  F0A6    	movff	15644,dac_spi_control@SC	;volatile
  7043                           
  7044                           ; BSR set to: 61
  7045                           ;daq.c: 210:    SB = SPI1BAUD;
  7046  01B1D6  006F F464  F0A5    	movff	15641,dac_spi_control@SB	;volatile
  7047  01B1DC                     l10748:
  7048                           
  7049                           ; BSR set to: 61
  7050                           ;daq.c: 216:   SPI1CON1 = 0x00;
  7051  01B1DC  6B15               	clrf	21,b	;volatile
  7052                           
  7053                           ; BSR set to: 61
  7054                           ;daq.c: 217:   SPI1CON1bits.CKE = 1;
  7055  01B1DE  8D15               	bsf	21,6,b	;volatile
  7056                           
  7057                           ; BSR set to: 61
  7058                           ;daq.c: 218:   SPI1CON1bits.CKP = 0;
  7059  01B1E0  9B15               	bcf	21,5,b	;volatile
  7060                           
  7061                           ; BSR set to: 61
  7062                           ;daq.c: 219:   SPI1CON1bits.SMP = 0;
  7063  01B1E2  9F15               	bcf	21,7,b	;volatile
  7064                           
  7065                           ;daq.c: 221:   SPI1CON2 = 0x03;
  7066  01B1E4  0E03               	movlw	3
  7067  01B1E6  6F16               	movwf	22,b	;volatile
  7068                           
  7069                           ;daq.c: 223:   SPI1BAUD = 0x0f;
  7070  01B1E8  0E0F               	movlw	15
  7071  01B1EA  6F19               	movwf	25,b	;volatile
  7072                           
  7073                           ; BSR set to: 61
  7074                           ;daq.c: 225:   SPI1CLK = 0x00;
  7075  01B1EC  6B1C               	clrf	28,b	;volatile
  7076                           
  7077                           ;daq.c: 227:   SPI1CON0 = 0x83;
  7078  01B1EE  0E83               	movlw	131
  7079  01B1F0  6F14               	movwf	20,b	;volatile
  7080  01B1F2  D014               	goto	L3
  7081  01B1F4                     l10760:
  7082                           
  7083                           ;daq.c: 230:   if (init) {
  7084  01B1F4  5043               	movf	dac_spi_control@init^0,w,c
  7085  01B1F6  B4D8               	btfsc	status,2,c
  7086  01B1F8  D012               	goto	l1856
  7087                           
  7088                           ;daq.c: 234:    SPI1CON0bits.EN = 0;
  7089  01B1FA  013D               	movlb	61	; () banked
  7090  01B1FC  9F14               	bcf	20,7,b	;volatile
  7091                           
  7092                           ;daq.c: 235:    SPI1CON1 = S1;
  7093  01B1FE  0060  F2A3  FD15   	movff	dac_spi_control@S1,15637	;volatile
  7094                           
  7095                           ;daq.c: 236:    SPI1CON2 = S2;
  7096  01B204  0060  F29F  FD16   	movff	dac_spi_control@S2,15638	;volatile
  7097                           
  7098                           ;daq.c: 237:    SPI1CLK = SC;
  7099  01B20A  0060  F29B  FD1C   	movff	dac_spi_control@SC,15644	;volatile
  7100                           
  7101                           ;daq.c: 238:    SPI1BAUD = SB;
  7102  01B210  0060  F297  FD19   	movff	dac_spi_control@SB,15641	;volatile
  7103                           
  7104                           ;daq.c: 239:    SPI1CON0 = S0;
  7105  01B216  0060  F10B  FD14   	movff	dac_spi_control@S0,15636	;volatile
  7106  01B21C                     L3:
  7107                           
  7108                           ;daq.c: 240:    SPI1CON0bits.EN = 1;
  7109  01B21C  8F14               	bsf	20,7,b	;volatile
  7110  01B21E                     l1856:
  7111                           
  7112                           ; _dac_spi_control: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
  7113  01B21E  52E5               	movf	postdec1,f,c
  7114  01B220  0012               	return		;funcret
  7115  01B222                     __end_of_dac_spi_control:
  7116                           	opt callstack 0
  7117                           
  7118 ;; *************** function _init_port_dma *****************
  7119 ;; Defined at:
  7120 ;;		line 104 in file "eadog.c"
  7121 ;; Parameters:    Size  Location     Type
  7122 ;;		None
  7123 ;; Auto vars:     Size  Location     Type
  7124 ;;		None
  7125 ;; Return value:  Size  Location     Type
  7126 ;;                  1  [STACK] void 
  7127 ;; Registers used:
  7128 ;;		wreg, status,2
  7129 ;; Tracked objects:
  7130 ;;		On entry : 0/1
  7131 ;;		On exit  : 3F/3B
  7132 ;;		Unchanged: 0/0
  7133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7138 ;;Total ram usage:        0 bytes
  7139 ;; Hardware stack levels used:    1
  7140 ;; Hardware stack levels required when called:   15
  7141 ;; This function calls:
  7142 ;;		Nothing
  7143 ;; This function is called by:
  7144 ;;		_main
  7145 ;; This function uses a reentrant model
  7146 ;;
  7147                           
  7148                           	psect	text10
  7149  01BEC8                     __ptext10:
  7150                           	opt callstack 0
  7151  01BEC8                     _init_port_dma:
  7152                           	opt callstack 15
  7153                           
  7154                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
  7155                           
  7156                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7157                           ;incstack = 0
  7158  01BEC8  0E3F               	movlw	-193
  7159  01BECA  013B               	movlb	59	; () banked
  7160  01BECC  17DD               	andwf	221,f,b	;volatile
  7161                           
  7162                           ; BSR set to: 59
  7163                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
  7164  01BECE  9BDD               	bcf	221,5,b	;volatile
  7165                           
  7166                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
  7167  01BED0  51DD               	movf	221,w,b	;volatile
  7168  01BED2  0BF9               	andlw	-7
  7169  01BED4  0902               	iorlw	2
  7170  01BED6  6FDD               	movwf	221,b	;volatile
  7171                           
  7172                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
  7173  01BED8  0EE7               	movlw	-25
  7174  01BEDA  17DD               	andwf	221,f,b	;volatile
  7175                           
  7176                           ; BSR set to: 59
  7177                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
  7178  01BEDC  81DD               	bsf	221,0,b	;volatile
  7179                           
  7180                           ; BSR set to: 59
  7181                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
  7182  01BEDE  9DDC               	bcf	220,6,b	;volatile
  7183                           
  7184                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
  7185  01BEE0  0E3D               	movlw	61
  7186  01BEE2  6FD1               	movwf	209,b	;volatile
  7187  01BEE4  0EEA               	movlw	234
  7188  01BEE6  6FD0               	movwf	208,b	;volatile
  7189                           
  7190                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
  7191  01BEE8  0EFF               	movlw	low _port_data
  7192  01BEEA  6FD9               	movwf	217,b	;volatile
  7193  01BEEC  0E04               	movlw	high _port_data
  7194  01BEEE  6FDA               	movwf	218,b	;volatile
  7195  01BEF0  0E00               	movlw	low (_port_data shr (0+16))
  7196  01BEF2  6FDB               	movwf	219,b	;volatile
  7197                           
  7198                           ; BSR set to: 59
  7199                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
  7200  01BEF4  9BDC               	bcf	220,5,b	;volatile
  7201                           
  7202                           ; BSR set to: 59
  7203                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7204  01BEF6  0012               	return		;funcret
  7205  01BEF8                     __end_of_init_port_dma:
  7206                           	opt callstack 0
  7207                           
  7208 ;; *************** function _init_display *****************
  7209 ;; Defined at:
  7210 ;;		line 38 in file "eadog.c"
  7211 ;; Parameters:    Size  Location     Type
  7212 ;;		None
  7213 ;; Auto vars:     Size  Location     Type
  7214 ;;		None
  7215 ;; Return value:  Size  Location     Type
  7216 ;;                  1  [STACK] void 
  7217 ;; Registers used:
  7218 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7219 ;; Tracked objects:
  7220 ;;		On entry : 3F/3B
  7221 ;;		On exit  : 3F/3D
  7222 ;;		Unchanged: 0/0
  7223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7228 ;;Total ram usage:        0 bytes
  7229 ;; Hardware stack levels used:    1
  7230 ;; Hardware stack levels required when called:   17
  7231 ;; This function calls:
  7232 ;;		_ringBufS_init
  7233 ;;		_send_lcd_cmd
  7234 ;;		_send_lcd_cmd_long
  7235 ;;		_send_lcd_data
  7236 ;;		_wdtdelay
  7237 ;; This function is called by:
  7238 ;;		_main
  7239 ;; This function uses a reentrant model
  7240 ;;
  7241                           
  7242                           	psect	text11
  7243  01A2AC                     __ptext11:
  7244                           	opt callstack 0
  7245  01A2AC                     _init_display:
  7246                           	opt callstack 13
  7247                           
  7248                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  7249                           
  7250                           ; BSR set to: 59
  7251                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7252                           ;incstack = 0
  7253  01A2AC  0E83               	movlw	low _ring_buf1
  7254  01A2AE  0101               	movlb	1	; () banked
  7255  01A2B0  6FD5               	movwf	(_spi_link+6)& (0+255),b	;volatile
  7256  01A2B2  0E03               	movlw	high _ring_buf1
  7257  01A2B4  6FD6               	movwf	(_spi_link+7)& (0+255),b	;volatile
  7258                           
  7259                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  7260  01A2B6  0E40               	movlw	low _ring_buf2
  7261  01A2B8  6FD3               	movwf	(_spi_link+4)& (0+255),b	;volatile
  7262  01A2BA  0E03               	movlw	high _ring_buf2
  7263  01A2BC  6FD4               	movwf	(_spi_link+5)& (0+255),b	;volatile
  7264                           
  7265                           ; BSR set to: 1
  7266                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  7267  01A2BE  0060  F757  FFE6   	movff	_spi_link+6,postinc1
  7268  01A2C4  0060  F75B  FFE6   	movff	_spi_link+7,postinc1
  7269  01A2CA  EC33  F0E0         	call	_ringBufS_init	;wreg free
  7270                           
  7271                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  7272  01A2CE  0060  F74F  FFE6   	movff	_spi_link+4,postinc1
  7273  01A2D4  0060  F753  FFE6   	movff	_spi_link+5,postinc1
  7274  01A2DA  EC33  F0E0         	call	_ringBufS_init	;wreg free
  7275                           
  7276                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  7277  01A2DE  84BE               	bsf	190,2,c	;volatile
  7278                           
  7279                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
  7280  01A2E0  013D               	movlb	61	; () banked
  7281  01A2E2  9F14               	bcf	20,7,b	;volatile
  7282                           
  7283                           ; BSR set to: 61
  7284                           ;eadog.c: 49:  SPI1CON1 = 0x20;
  7285  01A2E4  0E20               	movlw	32
  7286  01A2E6  6F15               	movwf	21,b	;volatile
  7287                           
  7288                           ; BSR set to: 61
  7289                           ;eadog.c: 51:  SPI1CON2 = 0x03;
  7290  01A2E8  0E03               	movlw	3
  7291  01A2EA  6F16               	movwf	22,b	;volatile
  7292                           
  7293                           ; BSR set to: 61
  7294                           ;eadog.c: 53:  SPI1BAUD = 0x04;
  7295  01A2EC  0E04               	movlw	4
  7296  01A2EE  6F19               	movwf	25,b	;volatile
  7297                           
  7298                           ; BSR set to: 61
  7299                           ;eadog.c: 55:  SPI1CLK = 0x02;
  7300  01A2F0  0E02               	movlw	2
  7301  01A2F2  6F1C               	movwf	28,b	;volatile
  7302                           
  7303                           ; BSR set to: 61
  7304                           ;eadog.c: 57:  SPI1CON0 = 0x83;
  7305  01A2F4  0E83               	movlw	131
  7306  01A2F6  6F14               	movwf	20,b	;volatile
  7307                           
  7308                           ; BSR set to: 61
  7309                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
  7310  01A2F8  8F14               	bsf	20,7,b	;volatile
  7311                           
  7312                           ; BSR set to: 61
  7313                           ;eadog.c: 60:  wdtdelay(350000);
  7314  01A2FA  0E30               	movlw	48
  7315  01A2FC  6EE6               	movwf	postinc1,c
  7316  01A2FE  0E57               	movlw	87
  7317  01A300  6EE6               	movwf	postinc1,c
  7318  01A302  0E05               	movlw	5
  7319  01A304  6EE6               	movwf	postinc1,c
  7320  01A306  0E00               	movlw	0
  7321  01A308  6EE6               	movwf	postinc1,c
  7322  01A30A  EC7C  F0DB         	call	_wdtdelay	;wreg free
  7323                           
  7324                           ; BSR set to: 0
  7325                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
  7326  01A30E  0E46               	movlw	70
  7327  01A310  6EE6               	movwf	postinc1,c
  7328  01A312  ECB2  F0DD         	call	_send_lcd_cmd_long	;wreg free
  7329                           
  7330                           ; BSR set to: 0
  7331                           ;eadog.c: 62:  send_lcd_cmd(0x41);
  7332  01A316  0E41               	movlw	65
  7333  01A318  6EE6               	movwf	postinc1,c
  7334  01A31A  ECD2  F0DD         	call	_send_lcd_cmd	;wreg free
  7335                           
  7336                           ; BSR set to: 0
  7337                           ;eadog.c: 63:  wdtdelay(80);
  7338  01A31E  0E50               	movlw	80
  7339  01A320  6EE6               	movwf	postinc1,c
  7340  01A322  0E00               	movlw	0
  7341  01A324  6EE6               	movwf	postinc1,c
  7342  01A326  0E00               	movlw	0
  7343  01A328  6EE6               	movwf	postinc1,c
  7344  01A32A  0E00               	movlw	0
  7345  01A32C  6EE6               	movwf	postinc1,c
  7346  01A32E  EC7C  F0DB         	call	_wdtdelay	;wreg free
  7347                           
  7348                           ; BSR set to: 0
  7349                           ;eadog.c: 64:  send_lcd_cmd(0x53);
  7350  01A332  0E53               	movlw	83
  7351  01A334  6EE6               	movwf	postinc1,c
  7352  01A336  ECD2  F0DD         	call	_send_lcd_cmd	;wreg free
  7353                           
  7354                           ; BSR set to: 0
  7355                           ;eadog.c: 65:  send_lcd_data(2);
  7356  01A33A  0E02               	movlw	2
  7357  01A33C  6EE6               	movwf	postinc1,c
  7358  01A33E  EC60  F0E1         	call	_send_lcd_data	;wreg free
  7359                           
  7360                           ; BSR set to: 0
  7361                           ;eadog.c: 66:  wdtdelay(80);
  7362  01A342  0E50               	movlw	80
  7363  01A344  6EE6               	movwf	postinc1,c
  7364  01A346  0E00               	movlw	0
  7365  01A348  6EE6               	movwf	postinc1,c
  7366  01A34A  0E00               	movlw	0
  7367  01A34C  6EE6               	movwf	postinc1,c
  7368  01A34E  0E00               	movlw	0
  7369  01A350  6EE6               	movwf	postinc1,c
  7370  01A352  EC7C  F0DB         	call	_wdtdelay	;wreg free
  7371                           
  7372                           ; BSR set to: 0
  7373                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
  7374  01A356  0E51               	movlw	81
  7375  01A358  6EE6               	movwf	postinc1,c
  7376  01A35A  ECB2  F0DD         	call	_send_lcd_cmd_long	;wreg free
  7377                           
  7378                           ; BSR set to: 0
  7379                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
  7380  01A35E  013D               	movlb	61	; () banked
  7381  01A360  9F14               	bcf	20,7,b	;volatile
  7382                           
  7383                           ; BSR set to: 61
  7384                           ;eadog.c: 69:  SPI1CON2 = 0x02;
  7385  01A362  0E02               	movlw	2
  7386  01A364  6F16               	movwf	22,b	;volatile
  7387                           
  7388                           ; BSR set to: 61
  7389                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
  7390  01A366  8F14               	bsf	20,7,b	;volatile
  7391                           
  7392                           ; BSR set to: 61
  7393                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
  7394  01A368  931A               	bcf	26,1,b	;volatile
  7395                           
  7396                           ; BSR set to: 61
  7397                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
  7398  01A36A  0E3F               	movlw	-193
  7399  01A36C  013B               	movlb	59	; () banked
  7400  01A36E  17FD               	andwf	253,f,b	;volatile
  7401                           
  7402                           ; BSR set to: 59
  7403                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
  7404  01A370  9BFD               	bcf	253,5,b	;volatile
  7405                           
  7406                           ; BSR set to: 59
  7407                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
  7408  01A372  51FD               	movf	253,w,b	;volatile
  7409  01A374  0BF9               	andlw	-7
  7410  01A376  0902               	iorlw	2
  7411  01A378  6FFD               	movwf	253,b	;volatile
  7412                           
  7413                           ; BSR set to: 59
  7414                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
  7415  01A37A  0EE7               	movlw	-25
  7416  01A37C  17FD               	andwf	253,f,b	;volatile
  7417                           
  7418                           ; BSR set to: 59
  7419                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
  7420  01A37E  81FD               	bsf	253,0,b	;volatile
  7421                           
  7422                           ; BSR set to: 59
  7423                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
  7424  01A380  0E83               	movlw	low _ring_buf1
  7425  01A382  6FF9               	movwf	249,b	;volatile
  7426  01A384  0E03               	movlw	high _ring_buf1
  7427  01A386  6FFA               	movwf	250,b	;volatile
  7428  01A388  0E00               	movlw	low (_ring_buf1 shr (0+16))
  7429  01A38A  6FFB               	movwf	251,b	;volatile
  7430                           
  7431                           ; BSR set to: 59
  7432                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
  7433  01A38C  9BFC               	bcf	252,5,b	;volatile
  7434                           
  7435                           ; BSR set to: 59
  7436                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
  7437  01A38E  013D               	movlb	61	; () banked
  7438  01A390  831A               	bsf	26,1,b	;volatile
  7439                           
  7440                           ; BSR set to: 61
  7441                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
  7442  01A392  94BE               	bcf	190,2,c	;volatile
  7443                           
  7444                           ; BSR set to: 61
  7445                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  7446  01A394  0012               	return		;funcret
  7447  01A396                     __end_of_init_display:
  7448                           	opt callstack 0
  7449                           
  7450 ;; *************** function _send_lcd_data *****************
  7451 ;; Defined at:
  7452 ;;		line 123 in file "eadog.c"
  7453 ;; Parameters:    Size  Location     Type
  7454 ;;  data            1  [STACK] const unsigned char 
  7455 ;; Auto vars:     Size  Location     Type
  7456 ;;		None
  7457 ;; Return value:  Size  Location     Type
  7458 ;;                  1  [STACK] void 
  7459 ;; Registers used:
  7460 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7461 ;; Tracked objects:
  7462 ;;		On entry : 3F/0
  7463 ;;		On exit  : 3F/0
  7464 ;;		Unchanged: 0/0
  7465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7470 ;;Total ram usage:        0 bytes
  7471 ;; Hardware stack levels used:    1
  7472 ;; Hardware stack levels required when called:   16
  7473 ;; This function calls:
  7474 ;;		_SPI1_Exchange8bit
  7475 ;;		_wdtdelay
  7476 ;; This function is called by:
  7477 ;;		_init_display
  7478 ;; This function uses a reentrant model
  7479 ;;
  7480                           
  7481                           	psect	text12
  7482  01C2C0                     __ptext12:
  7483                           	opt callstack 0
  7484  01C2C0                     _send_lcd_data:
  7485                           	opt callstack 13
  7486                           
  7487                           ; BSR set to: 61
  7488                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7489                           ;incstack = 0
  7490                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
  7491  01C2C0  94BC               	bcf	188,2,c	;volatile
  7492                           
  7493                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
  7494                           ;stkvar	_data @ sp[(0)+-1]
  7495  01C2C2  0EFF               	movlw	-1
  7496  01C2C4  50E3               	movf	plusw1,w,c
  7497  01C2C6  6EE6               	movwf	postinc1,c
  7498  01C2C8  EC1F  F0E2         	call	_SPI1_Exchange8bit	;wreg free
  7499                           
  7500                           ; BSR set to: 57
  7501                           ;eadog.c: 127:  wdtdelay(8);
  7502  01C2CC  0E08               	movlw	8
  7503  01C2CE  6EE6               	movwf	postinc1,c
  7504  01C2D0  0E00               	movlw	0
  7505  01C2D2  6EE6               	movwf	postinc1,c
  7506  01C2D4  0E00               	movlw	0
  7507  01C2D6  6EE6               	movwf	postinc1,c
  7508  01C2D8  0E00               	movlw	0
  7509  01C2DA  6EE6               	movwf	postinc1,c
  7510  01C2DC  EC7C  F0DB         	call	_wdtdelay	;wreg free
  7511                           
  7512                           ; BSR set to: 0
  7513                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  7514  01C2E0  52E5               	movf	postdec1,f,c
  7515  01C2E2  0012               	return		;funcret
  7516  01C2E4                     __end_of_send_lcd_data:
  7517                           	opt callstack 0
  7518                           
  7519 ;; *************** function _send_lcd_cmd_long *****************
  7520 ;; Defined at:
  7521 ;;		line 139 in file "eadog.c"
  7522 ;; Parameters:    Size  Location     Type
  7523 ;;  cmd             1  [STACK] const unsigned char 
  7524 ;; Auto vars:     Size  Location     Type
  7525 ;;		None
  7526 ;; Return value:  Size  Location     Type
  7527 ;;                  1  [STACK] void 
  7528 ;; Registers used:
  7529 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7530 ;; Tracked objects:
  7531 ;;		On entry : 3F/0
  7532 ;;		On exit  : 3F/0
  7533 ;;		Unchanged: 0/0
  7534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7539 ;;Total ram usage:        0 bytes
  7540 ;; Hardware stack levels used:    1
  7541 ;; Hardware stack levels required when called:   16
  7542 ;; This function calls:
  7543 ;;		_SPI1_Exchange8bit
  7544 ;;		_wdtdelay
  7545 ;; This function is called by:
  7546 ;;		_init_display
  7547 ;; This function uses a reentrant model
  7548 ;;
  7549                           
  7550                           	psect	text13
  7551  01BB64                     __ptext13:
  7552                           	opt callstack 0
  7553  01BB64                     _send_lcd_cmd_long:
  7554                           	opt callstack 13
  7555                           
  7556                           ; BSR set to: 0
  7557                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7558                           ;incstack = 0
  7559                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
  7560  01BB64  94BC               	bcf	188,2,c	;volatile
  7561                           
  7562                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
  7563  01BB66  0EFE               	movlw	254
  7564  01BB68  6EE6               	movwf	postinc1,c
  7565  01BB6A  EC1F  F0E2         	call	_SPI1_Exchange8bit	;wreg free
  7566                           
  7567                           ; BSR set to: 57
  7568                           ;eadog.c: 143:  wdtdelay(8);
  7569  01BB6E  0E08               	movlw	8
  7570  01BB70  6EE6               	movwf	postinc1,c
  7571  01BB72  0E00               	movlw	0
  7572  01BB74  6EE6               	movwf	postinc1,c
  7573  01BB76  0E00               	movlw	0
  7574  01BB78  6EE6               	movwf	postinc1,c
  7575  01BB7A  0E00               	movlw	0
  7576  01BB7C  6EE6               	movwf	postinc1,c
  7577  01BB7E  EC7C  F0DB         	call	_wdtdelay	;wreg free
  7578                           
  7579                           ; BSR set to: 0
  7580                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
  7581                           ;stkvar	_cmd @ sp[(0)+-1]
  7582  01BB82  0EFF               	movlw	-1
  7583  01BB84  50E3               	movf	plusw1,w,c
  7584  01BB86  6EE6               	movwf	postinc1,c
  7585  01BB88  EC1F  F0E2         	call	_SPI1_Exchange8bit	;wreg free
  7586                           
  7587                           ;eadog.c: 145:  wdtdelay(800);
  7588  01BB8C  0E20               	movlw	32
  7589  01BB8E  6EE6               	movwf	postinc1,c
  7590  01BB90  0E03               	movlw	3
  7591  01BB92  6EE6               	movwf	postinc1,c
  7592  01BB94  0E00               	movlw	0
  7593  01BB96  6EE6               	movwf	postinc1,c
  7594  01BB98  0E00               	movlw	0
  7595  01BB9A  6EE6               	movwf	postinc1,c
  7596  01BB9C  EC7C  F0DB         	call	_wdtdelay	;wreg free
  7597                           
  7598                           ; BSR set to: 0
  7599                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7600  01BBA0  52E5               	movf	postdec1,f,c
  7601  01BBA2  0012               	return		;funcret
  7602  01BBA4                     __end_of_send_lcd_cmd_long:
  7603                           	opt callstack 0
  7604                           
  7605 ;; *************** function _send_lcd_cmd *****************
  7606 ;; Defined at:
  7607 ;;		line 130 in file "eadog.c"
  7608 ;; Parameters:    Size  Location     Type
  7609 ;;  cmd             1  [STACK] const unsigned char 
  7610 ;; Auto vars:     Size  Location     Type
  7611 ;;		None
  7612 ;; Return value:  Size  Location     Type
  7613 ;;                  1  [STACK] void 
  7614 ;; Registers used:
  7615 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7616 ;; Tracked objects:
  7617 ;;		On entry : 3F/0
  7618 ;;		On exit  : 3F/0
  7619 ;;		Unchanged: 0/0
  7620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7625 ;;Total ram usage:        0 bytes
  7626 ;; Hardware stack levels used:    1
  7627 ;; Hardware stack levels required when called:   16
  7628 ;; This function calls:
  7629 ;;		_SPI1_Exchange8bit
  7630 ;;		_wdtdelay
  7631 ;; This function is called by:
  7632 ;;		_init_display
  7633 ;; This function uses a reentrant model
  7634 ;;
  7635                           
  7636                           	psect	text14
  7637  01BBA4                     __ptext14:
  7638                           	opt callstack 0
  7639  01BBA4                     _send_lcd_cmd:
  7640                           	opt callstack 13
  7641                           
  7642                           ; BSR set to: 0
  7643                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7644                           ;incstack = 0
  7645                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
  7646  01BBA4  94BC               	bcf	188,2,c	;volatile
  7647                           
  7648                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
  7649  01BBA6  0EFE               	movlw	254
  7650  01BBA8  6EE6               	movwf	postinc1,c
  7651  01BBAA  EC1F  F0E2         	call	_SPI1_Exchange8bit	;wreg free
  7652                           
  7653                           ; BSR set to: 57
  7654                           ;eadog.c: 134:  wdtdelay(8);
  7655  01BBAE  0E08               	movlw	8
  7656  01BBB0  6EE6               	movwf	postinc1,c
  7657  01BBB2  0E00               	movlw	0
  7658  01BBB4  6EE6               	movwf	postinc1,c
  7659  01BBB6  0E00               	movlw	0
  7660  01BBB8  6EE6               	movwf	postinc1,c
  7661  01BBBA  0E00               	movlw	0
  7662  01BBBC  6EE6               	movwf	postinc1,c
  7663  01BBBE  EC7C  F0DB         	call	_wdtdelay	;wreg free
  7664                           
  7665                           ; BSR set to: 0
  7666                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
  7667                           ;stkvar	_cmd @ sp[(0)+-1]
  7668  01BBC2  0EFF               	movlw	-1
  7669  01BBC4  50E3               	movf	plusw1,w,c
  7670  01BBC6  6EE6               	movwf	postinc1,c
  7671  01BBC8  EC1F  F0E2         	call	_SPI1_Exchange8bit	;wreg free
  7672                           
  7673                           ;eadog.c: 136:  wdtdelay(8);
  7674  01BBCC  0E08               	movlw	8
  7675  01BBCE  6EE6               	movwf	postinc1,c
  7676  01BBD0  0E00               	movlw	0
  7677  01BBD2  6EE6               	movwf	postinc1,c
  7678  01BBD4  0E00               	movlw	0
  7679  01BBD6  6EE6               	movwf	postinc1,c
  7680  01BBD8  0E00               	movlw	0
  7681  01BBDA  6EE6               	movwf	postinc1,c
  7682  01BBDC  EC7C  F0DB         	call	_wdtdelay	;wreg free
  7683                           
  7684                           ; BSR set to: 0
  7685                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  7686  01BBE0  52E5               	movf	postdec1,f,c
  7687  01BBE2  0012               	return		;funcret
  7688  01BBE4                     __end_of_send_lcd_cmd:
  7689                           	opt callstack 0
  7690                           
  7691 ;; *************** function _SPI1_Exchange8bit *****************
  7692 ;; Defined at:
  7693 ;;		line 79 in file "mcc_generated_files/spi1.c"
  7694 ;; Parameters:    Size  Location     Type
  7695 ;;  data            1  [STACK] unsigned char 
  7696 ;; Auto vars:     Size  Location     Type
  7697 ;;		None
  7698 ;; Return value:  Size  Location     Type
  7699 ;;                  1  [STACK] unsigned char 
  7700 ;; Registers used:
  7701 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  7702 ;; Tracked objects:
  7703 ;;		On entry : 0/0
  7704 ;;		On exit  : 3F/39
  7705 ;;		Unchanged: 0/0
  7706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7711 ;;Total ram usage:        0 bytes
  7712 ;; Hardware stack levels used:    1
  7713 ;; Hardware stack levels required when called:   15
  7714 ;; This function calls:
  7715 ;;		Nothing
  7716 ;; This function is called by:
  7717 ;;		_send_lcd_data
  7718 ;;		_send_lcd_cmd
  7719 ;;		_send_lcd_cmd_long
  7720 ;;		_set_dac
  7721 ;; This function uses a reentrant model
  7722 ;;
  7723                           
  7724                           	psect	text15
  7725  01C43E                     __ptext15:
  7726                           	opt callstack 0
  7727  01C43E                     _SPI1_Exchange8bit:
  7728                           	opt callstack 14
  7729                           
  7730                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  7731                           
  7732                           ; BSR set to: 0
  7733                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7734                           ;incstack = 0
  7735  01C43E  0E01               	movlw	1
  7736  01C440  013D               	movlb	61	; () banked
  7737  01C442  6F12               	movwf	18,b	;volatile
  7738                           
  7739                           ; BSR set to: 61
  7740                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  7741                           ;stkvar	_data @ sp[(0)+-1]
  7742  01C444  0EFF               	movlw	-1
  7743  01C446  006F FF8F FD11     	movff	plusw1,15633	;volatile
  7744  01C44C                     l807:
  7745                           
  7746                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  7747  01C44C  0139               	movlb	57	; () banked
  7748  01C44E  A9A2               	btfss	162,4,b	;volatile
  7749  01C450  D7FD               	goto	l807
  7750                           
  7751                           ; BSR set to: 57
  7752                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  7753  01C452  006F F440  F001    	movff	15632,btemp	;volatile
  7754                           
  7755                           ; BSR set to: 57
  7756                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7757  01C458  52E5               	movf	postdec1,f,c
  7758  01C45A  0012               	return		;funcret
  7759  01C45C                     __end_of_SPI1_Exchange8bit:
  7760                           	opt callstack 0
  7761                           
  7762 ;; *************** function _ringBufS_init *****************
  7763 ;; Defined at:
  7764 ;;		line 22 in file "ringbufs.c"
  7765 ;; Parameters:    Size  Location     Type
  7766 ;;  _this           2  [STACK] PTR volatile struct ring
  7767 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7768 ;; Auto vars:     Size  Location     Type
  7769 ;;		None
  7770 ;; Return value:  Size  Location     Type
  7771 ;;                  1  [STACK] void 
  7772 ;; Registers used:
  7773 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7774 ;; Tracked objects:
  7775 ;;		On entry : 0/1
  7776 ;;		On exit  : 0/0
  7777 ;;		Unchanged: 0/0
  7778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7783 ;;Total ram usage:        0 bytes
  7784 ;; Hardware stack levels used:    1
  7785 ;; Hardware stack levels required when called:   16
  7786 ;; This function calls:
  7787 ;;		_memset
  7788 ;; This function is called by:
  7789 ;;		_init_display
  7790 ;; This function uses a reentrant model
  7791 ;;
  7792                           
  7793                           	psect	text16
  7794  01C066                     __ptext16:
  7795                           	opt callstack 0
  7796  01C066                     _ringBufS_init:
  7797                           	opt callstack 13
  7798                           
  7799                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  7800                           
  7801                           ; BSR set to: 57
  7802                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7803                           ;incstack = 0
  7804  01C066  0E43               	movlw	67
  7805  01C068  6EE6               	movwf	postinc1,c
  7806  01C06A  0E00               	movlw	0
  7807  01C06C  6EE6               	movwf	postinc1,c
  7808  01C06E  0E00               	movlw	0
  7809  01C070  6EE6               	movwf	postinc1,c
  7810  01C072  0E00               	movlw	0
  7811  01C074  6EE6               	movwf	postinc1,c
  7812                           
  7813                           ;stkvar	__this @ sp[(-4)+-2]
  7814  01C076  0EFA               	movlw	-6
  7815  01C078  006F FF8F FFE6     	movff	plusw1,postinc1
  7816  01C07E  006F FF8F FFE6     	movff	plusw1,postinc1
  7817  01C084  EC40  F0B7         	call	_memset	;wreg free
  7818                           
  7819                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  7820  01C088  52E5               	movf	postdec1,f,c
  7821  01C08A  52E5               	movf	postdec1,f,c
  7822  01C08C  0012               	return		;funcret
  7823  01C08E                     __end_of_ringBufS_init:
  7824                           	opt callstack 0
  7825                           
  7826 ;; *************** function _init_bsoc *****************
  7827 ;; Defined at:
  7828 ;;		line 110 in file "bsoc.c"
  7829 ;; Parameters:    Size  Location     Type
  7830 ;;		None
  7831 ;; Auto vars:     Size  Location     Type
  7832 ;;		None
  7833 ;; Return value:  Size  Location     Type
  7834 ;;                  1  [STACK] void 
  7835 ;; Registers used:
  7836 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  7837 ;; Tracked objects:
  7838 ;;		On entry : 0/0
  7839 ;;		On exit  : 0/0
  7840 ;;		Unchanged: 0/0
  7841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7846 ;;Total ram usage:        0 bytes
  7847 ;; Hardware stack levels used:    1
  7848 ;; Hardware stack levels required when called:   18
  7849 ;; This function calls:
  7850 ;;		_TMR3_SetInterruptHandler
  7851 ;;		_Volts_to_SOC
  7852 ;;		___fldiv
  7853 ;;		___flmul
  7854 ;;		___fltol
  7855 ;;		___xxtofl
  7856 ;;		_conv_raw_result
  7857 ;; This function is called by:
  7858 ;;		_main
  7859 ;; This function uses a reentrant model
  7860 ;;
  7861                           
  7862                           	psect	text17
  7863  017BF6                     __ptext17:
  7864                           	opt callstack 0
  7865  017BF6                     _init_bsoc:
  7866                           	opt callstack 12
  7867                           
  7868                           ;bsoc.c: 115:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  7869                           
  7870                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7871                           ;incstack = 0
  7872  017BF6  0E00               	movlw	0
  7873  017BF8  6EE6               	movwf	postinc1,c
  7874  017BFA  0E00               	movlw	0
  7875  017BFC  6EE6               	movwf	postinc1,c
  7876  017BFE  0E7A               	movlw	122
  7877  017C00  6EE6               	movwf	postinc1,c
  7878  017C02  0E44               	movlw	68
  7879  017C04  6EE6               	movwf	postinc1,c
  7880  017C06  0E00               	movlw	0
  7881  017C08  6EE6               	movwf	postinc1,c
  7882  017C0A  0E04               	movlw	4
  7883  017C0C  6EE6               	movwf	postinc1,c
  7884  017C0E  ECB3  F0A9         	call	_conv_raw_result	;wreg free
  7885  017C12  0060  F007  FFE6   	movff	btemp,postinc1
  7886  017C18  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7887  017C1E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7888  017C24  0060  F013  FFE6   	movff	btemp+3,postinc1
  7889  017C2A  EC63  F0C8         	call	___fltol	;wreg free
  7890  017C2E  0060  F007  FFE6   	movff	btemp,postinc1
  7891  017C34  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7892  017C3A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7893  017C40  0060  F013  FFE6   	movff	btemp+3,postinc1
  7894  017C46  0E00               	movlw	0
  7895  017C48  6EE6               	movwf	postinc1,c
  7896  017C4A  EC65  F0C3         	call	___xxtofl	;wreg free
  7897  017C4E  0060  F007  FFE6   	movff	btemp,postinc1
  7898  017C54  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7899  017C5A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7900  017C60  0060  F013  FFE6   	movff	btemp+3,postinc1
  7901  017C66  EC03  F09F         	call	___flmul	;wreg free
  7902  017C6A  0060  F007  FFE6   	movff	btemp,postinc1
  7903  017C70  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7904  017C76  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7905  017C7C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7906  017C82  EC63  F0C8         	call	___fltol	;wreg free
  7907  017C86  0060  F007  FFE6   	movff	btemp,postinc1
  7908  017C8C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7909  017C92  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7910  017C98  0060  F013  FFE6   	movff	btemp+3,postinc1
  7911  017C9E  ECE1  F0D3         	call	_Volts_to_SOC	;wreg free
  7912  017CA2  0060  F004  F7B5   	movff	btemp,_C+182	;volatile
  7913  017CA8  0060  F008  F7B6   	movff	btemp+1,_C+183	;volatile
  7914                           
  7915                           ;bsoc.c: 116:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
  7916  017CAE  EE21  F38B         	lfsr	2,_C+140	;volatile
  7917  017CB2  006F FF7B FFE6     	movff	postinc2,postinc1
  7918  017CB8  006F FF7B FFE6     	movff	postinc2,postinc1
  7919  017CBE  006F FF7B FFE6     	movff	postinc2,postinc1
  7920  017CC4  006F FF7B FFE6     	movff	postinc2,postinc1
  7921  017CCA  0E00               	movlw	0
  7922  017CCC  6EE6               	movwf	postinc1,c
  7923  017CCE  0E00               	movlw	0
  7924  017CD0  6EE6               	movwf	postinc1,c
  7925  017CD2  0EC8               	movlw	200
  7926  017CD4  6EE6               	movwf	postinc1,c
  7927  017CD6  0E42               	movlw	66
  7928  017CD8  6EE6               	movwf	postinc1,c
  7929  017CDA  0E00               	movlw	0
  7930  017CDC  6EE6               	movwf	postinc1,c
  7931  017CDE  0E00               	movlw	0
  7932  017CE0  6EE6               	movwf	postinc1,c
  7933  017CE2  0E7A               	movlw	122
  7934  017CE4  6EE6               	movwf	postinc1,c
  7935  017CE6  0E44               	movlw	68
  7936  017CE8  6EE6               	movwf	postinc1,c
  7937  017CEA  0E00               	movlw	0
  7938  017CEC  6EE6               	movwf	postinc1,c
  7939  017CEE  0E04               	movlw	4
  7940  017CF0  6EE6               	movwf	postinc1,c
  7941  017CF2  ECB3  F0A9         	call	_conv_raw_result	;wreg free
  7942  017CF6  0060  F007  FFE6   	movff	btemp,postinc1
  7943  017CFC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7944  017D02  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7945  017D08  0060  F013  FFE6   	movff	btemp+3,postinc1
  7946  017D0E  EC63  F0C8         	call	___fltol	;wreg free
  7947  017D12  0060  F007  FFE6   	movff	btemp,postinc1
  7948  017D18  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7949  017D1E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7950  017D24  0060  F013  FFE6   	movff	btemp+3,postinc1
  7951  017D2A  0E00               	movlw	0
  7952  017D2C  6EE6               	movwf	postinc1,c
  7953  017D2E  EC65  F0C3         	call	___xxtofl	;wreg free
  7954  017D32  0060  F007  FFE6   	movff	btemp,postinc1
  7955  017D38  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7956  017D3E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7957  017D44  0060  F013  FFE6   	movff	btemp+3,postinc1
  7958  017D4A  EC03  F09F         	call	___flmul	;wreg free
  7959  017D4E  0060  F007  FFE6   	movff	btemp,postinc1
  7960  017D54  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7961  017D5A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7962  017D60  0060  F013  FFE6   	movff	btemp+3,postinc1
  7963  017D66  EC63  F0C8         	call	___fltol	;wreg free
  7964  017D6A  0060  F007  FFE6   	movff	btemp,postinc1
  7965  017D70  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7966  017D76  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7967  017D7C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7968  017D82  ECE1  F0D3         	call	_Volts_to_SOC	;wreg free
  7969  017D86  0060  F004  F00B   	movff	btemp,btemp+10
  7970  017D8C  0060  F008  F00C   	movff	btemp+1,btemp+11
  7971  017D92  500B               	movf	(btemp+10)^0,w,c
  7972  017D94  6E05               	movwf	(btemp+4)^0,c
  7973  017D96  500C               	movf	(btemp+11)^0,w,c
  7974  017D98  6E06               	movwf	(btemp+5)^0,c
  7975  017D9A  6A07               	clrf	(btemp+6)^0,c
  7976  017D9C  6A08               	clrf	(btemp+7)^0,c
  7977  017D9E  0060  F017  FFE6   	movff	btemp+4,postinc1
  7978  017DA4  0060  F01B  FFE6   	movff	btemp+5,postinc1
  7979  017DAA  0060  F01F  FFE6   	movff	btemp+6,postinc1
  7980  017DB0  0060  F023  FFE6   	movff	btemp+7,postinc1
  7981  017DB6  0E00               	movlw	0
  7982  017DB8  6EE6               	movwf	postinc1,c
  7983  017DBA  EC65  F0C3         	call	___xxtofl	;wreg free
  7984  017DBE  0060  F007  FFE6   	movff	btemp,postinc1
  7985  017DC4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7986  017DCA  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7987  017DD0  0060  F013  FFE6   	movff	btemp+3,postinc1
  7988  017DD6  ECF6  F0A6         	call	___fldiv	;wreg free
  7989  017DDA  0060  F007  FFE6   	movff	btemp,postinc1
  7990  017DE0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7991  017DE6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7992  017DEC  0060  F013  FFE6   	movff	btemp+3,postinc1
  7993  017DF2  EC03  F09F         	call	___flmul	;wreg free
  7994  017DF6  0060  F004  F78F   	movff	btemp,_C+144	;volatile
  7995  017DFC  0060  F008  F790   	movff	btemp+1,_C+145	;volatile
  7996  017E02  0060  F00C  F791   	movff	btemp+2,_C+146	;volatile
  7997  017E08  0060  F010  F792   	movff	btemp+3,_C+147	;volatile
  7998                           
  7999                           ;bsoc.c: 117:  C.dynamic_ah_adj = C.dynamic_ah;
  8000  017E0E  EE21  F38F         	lfsr	2,_C+144	;volatile
  8001  017E12  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  8002  017E18  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  8003  017E1E  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  8004  017E24  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  8005                           
  8006                           ;bsoc.c: 118:  TMR3_SetInterruptHandler(calc_bsoc);
  8007  017E2A  0E98               	movlw	low _calc_bsoc
  8008  017E2C  6EE6               	movwf	postinc1,c
  8009  017E2E  0E33               	movlw	high _calc_bsoc
  8010  017E30  6EE6               	movwf	postinc1,c
  8011  017E32  0E01               	movlw	low (_calc_bsoc shr (0+16))
  8012  017E34  6EE6               	movwf	postinc1,c
  8013  017E36  ECBF  F0E0         	call	_TMR3_SetInterruptHandler	;wreg free
  8014                           
  8015                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  8016  017E3A  0012               	return		;funcret
  8017  017E3C                     __end_of_init_bsoc:
  8018                           	opt callstack 0
  8019                           
  8020 ;; *************** function _Volts_to_SOC *****************
  8021 ;; Defined at:
  8022 ;;		line 175 in file "bsoc.c"
  8023 ;; Parameters:    Size  Location     Type
  8024 ;;  cvoltage        4  [STACK] const unsigned long 
  8025 ;; Auto vars:     Size  Location     Type
  8026 ;;  soc             2  [STACK] unsigned short 
  8027 ;;  slot            1  [STACK] unsigned char 
  8028 ;; Return value:  Size  Location     Type
  8029 ;;                  2  [STACK] unsigned short 
  8030 ;; Registers used:
  8031 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  8032 ;; Tracked objects:
  8033 ;;		On entry : 0/0
  8034 ;;		On exit  : 0/0
  8035 ;;		Unchanged: 0/0
  8036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8041 ;;Total ram usage:        0 bytes
  8042 ;; Hardware stack levels used:    1
  8043 ;; Hardware stack levels required when called:   15
  8044 ;; This function calls:
  8045 ;;		Nothing
  8046 ;; This function is called by:
  8047 ;;		_init_bsoc
  8048 ;; This function uses a reentrant model
  8049 ;;
  8050                           
  8051                           	psect	text18
  8052  01A7C2                     __ptext18:
  8053                           	opt callstack 0
  8054  01A7C2                     _Volts_to_SOC:
  8055                           	opt callstack 0
  8056                           
  8057                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8058  01A7C2  52E6               	movf	postinc1,f,c
  8059  01A7C4  52E6               	movf	postinc1,f,c
  8060  01A7C6  52E6               	movf	postinc1,f,c
  8061                           
  8062                           ;bsoc.c: 175: uint16_t Volts_to_SOC(const uint32_t cvoltage);bsoc.c: 176: {;bsoc.c: 177:
      +                            uint8_t slot;;bsoc.c: 178:  uint16_t soc = 0;
  8063                           ;stkvar	_soc @ sp[(-3)+0]
  8064                           
  8065                           ;incstack = 0
  8066  01A7C8  0EFD               	movlw	-3
  8067  01A7CA  6AE3               	clrf	plusw1,c
  8068  01A7CC  0EFE               	movlw	-2
  8069  01A7CE  6AE3               	clrf	plusw1,c
  8070                           
  8071                           ;bsoc.c: 183:  for (slot = 0; slot < 26; slot++) {
  8072                           ;stkvar	_slot @ sp[(-3)+2]
  8073  01A7D0  0EFF               	movlw	-1
  8074  01A7D2  6AE3               	clrf	plusw1,c
  8075  01A7D4                     l10936:
  8076                           
  8077                           ;bsoc.c: 184:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  8078                           ;stkvar	_cvoltage @ sp[(-3)+-4]
  8079                           ;stkvar	_slot @ sp[(-3)+2]
  8080  01A7D4  0EFF               	movlw	-1
  8081  01A7D6  50E3               	movf	plusw1,w,c
  8082  01A7D8  0D08               	mullw	8
  8083  01A7DA  0EDF               	movlw	low _BVSOC_TABLE
  8084  01A7DC  24F3               	addwf	243,w,c
  8085  01A7DE  6EF6               	movwf	tblptrl,c
  8086  01A7E0  0EF9               	movlw	high _BVSOC_TABLE
  8087  01A7E2  20F4               	addwfc	244,w,c
  8088  01A7E4  6EF7               	movwf	tblptrh,c
  8089  01A7E6                     	if	1	;There are 3 active tblptr bytes
  8090  01A7E6  6AF8               	clrf	tblptru,c
  8091  01A7E8  0E00               	movlw	low (__mediumconst shr (0+16))
  8092  01A7EA  22F8               	addwfc	tblptru,f,c
  8093  01A7EC                     	endif
  8094  01A7EC  0EF9               	movlw	-7
  8095  01A7EE  50E3               	movf	plusw1,w,c
  8096  01A7F0  0009               	tblrd		*+
  8097  01A7F2  5CF5               	subwf	tablat,w,c
  8098  01A7F4  0EFA               	movlw	-6
  8099  01A7F6  50E3               	movf	plusw1,w,c
  8100  01A7F8  0009               	tblrd		*+
  8101  01A7FA  58F5               	subwfb	tablat,w,c
  8102  01A7FC  0EFB               	movlw	-5
  8103  01A7FE  50E3               	movf	plusw1,w,c
  8104  01A800  0009               	tblrd		*+
  8105  01A802  58F5               	subwfb	tablat,w,c
  8106  01A804  0EFC               	movlw	-4
  8107  01A806  50E3               	movf	plusw1,w,c
  8108  01A808  0009               	tblrd		*+
  8109  01A80A  58F5               	subwfb	tablat,w,c
  8110  01A80C  B0D8               	btfsc	status,0,c
  8111  01A80E  D020               	goto	l10940
  8112                           
  8113                           ;bsoc.c: 185:    soc = BVSOC_TABLE[slot][1];
  8114                           ;stkvar	_slot @ sp[(-3)+2]
  8115  01A810  0EFF               	movlw	-1
  8116  01A812  50E3               	movf	plusw1,w,c
  8117  01A814  0D08               	mullw	8
  8118  01A816  0E04               	movlw	4
  8119  01A818  26F3               	addwf	243,f,c
  8120  01A81A  0E00               	movlw	0
  8121  01A81C  22F4               	addwfc	244,f,c
  8122  01A81E  0EDF               	movlw	low _BVSOC_TABLE
  8123  01A820  24F3               	addwf	243,w,c
  8124  01A822  6EF6               	movwf	tblptrl,c
  8125  01A824  0EF9               	movlw	high _BVSOC_TABLE
  8126  01A826  20F4               	addwfc	244,w,c
  8127  01A828  6EF7               	movwf	tblptrh,c
  8128  01A82A                     	if	1	;There are 3 active tblptr bytes
  8129  01A82A  6AF8               	clrf	tblptru,c
  8130  01A82C  0E00               	movlw	low (__mediumconst shr (0+16))
  8131  01A82E  22F8               	addwfc	tblptru,f,c
  8132  01A830                     	endif
  8133  01A830  0009               	tblrd		*+
  8134  01A832  006F FFD4  F00B    	movff	tablat,btemp+10
  8135  01A838  0009               	tblrd		*+
  8136  01A83A  006F FFD4  F00C    	movff	tablat,btemp+11
  8137                           
  8138                           ;stkvar	_soc @ sp[(-3)+0]
  8139  01A840  0EFD               	movlw	-3
  8140  01A842  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8141  01A848  0EFE               	movlw	-2
  8142  01A84A  0060  F033  FFE3   	movff	btemp+11,plusw1
  8143  01A850                     l10940:
  8144                           
  8145                           ;bsoc.c: 187:  }
  8146                           ;stkvar	_slot @ sp[(-3)+2]
  8147  01A850  0EFF               	movlw	-1
  8148  01A852  2AE3               	incf	plusw1,f,c
  8149                           
  8150                           ;stkvar	_slot @ sp[(-3)+2]
  8151  01A854  0EFF               	movlw	-1
  8152  01A856  006F FF8C  F001    	movff	plusw1,btemp
  8153  01A85C  0E19               	movlw	25
  8154  01A85E  6401               	cpfsgt	btemp^0,c
  8155  01A860  D7B9               	goto	l10936
  8156                           
  8157                           ;bsoc.c: 188:  return soc;
  8158                           ;stkvar	_soc @ sp[(-3)+0]
  8159  01A862  0EFD               	movlw	-3
  8160  01A864  006F FF8C  F001    	movff	plusw1,btemp
  8161  01A86A  0EFE               	movlw	-2
  8162  01A86C  006F FF8C  F002    	movff	plusw1,btemp+1
  8163                           
  8164                           ; _Volts_to_SOC: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  8165  01A872  0EF9               	movlw	249
  8166  01A874  26E1               	addwf	fsr1l,f,c
  8167  01A876  0EFF               	movlw	255
  8168  01A878  22E2               	addwfc	fsr1h,f,c
  8169  01A87A  0012               	return		;funcret
  8170  01A87C                     __end_of_Volts_to_SOC:
  8171                           	opt callstack 0
  8172                           
  8173 ;; *************** function _hid_display *****************
  8174 ;; Defined at:
  8175 ;;		line 22 in file "hid.c"
  8176 ;; Parameters:    Size  Location     Type
  8177 ;;  h               2  [STACK] PTR struct H_data
  8178 ;;		 -> H(9), 
  8179 ;; Auto vars:     Size  Location     Type
  8180 ;;		None
  8181 ;; Return value:  Size  Location     Type
  8182 ;;                  2  [STACK] PTR struct H_data
  8183 ;; Registers used:
  8184 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
  8185 ;; Tracked objects:
  8186 ;;		On entry : 3F/39
  8187 ;;		On exit  : 0/0
  8188 ;;		Unchanged: 0/0
  8189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8194 ;;Total ram usage:        0 bytes
  8195 ;; Hardware stack levels used:    1
  8196 ;; Hardware stack levels required when called:   17
  8197 ;; This function calls:
  8198 ;;		_hid_input
  8199 ;; This function is called by:
  8200 ;;		_main
  8201 ;; This function uses a reentrant model
  8202 ;;
  8203                           
  8204                           	psect	text19
  8205  01829C                     __ptext19:
  8206                           	opt callstack 0
  8207  01829C                     _hid_display:
  8208                           	opt callstack 13
  8209                           
  8210                           ;hid.c: 22: H_data* hid_display(H_data* h);hid.c: 23: {;hid.c: 24:  hid_input(h);
  8211                           ;stkvar	_h @ sp[(0)+-2]
  8212                           
  8213                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8214                           ;incstack = 0
  8215  01829C  0EFE               	movlw	-2
  8216  01829E  006F FF8F FFE6     	movff	plusw1,postinc1
  8217  0182A4  006F FF8F FFE6     	movff	plusw1,postinc1
  8218  0182AA  EC67  F0CC         	call	_hid_input	;wreg free
  8219                           
  8220                           ;hid.c: 26:  switch (h->h_state) {
  8221  0182AE  D0E6               	goto	l13340
  8222  0182B0                     l13314:
  8223                           
  8224                           ;hid.c: 28:   h->h_state = H_STATE_DISPLAY;
  8225                           ;stkvar	_h @ sp[(0)+-2]
  8226  0182B0  0EFE               	movlw	-2
  8227  0182B2  006F FF8C  F00B    	movff	plusw1,btemp+10
  8228  0182B8  0EFF               	movlw	-1
  8229  0182BA  006F FF8C  F00C    	movff	plusw1,btemp+11
  8230  0182C0  0E01               	movlw	1
  8231  0182C2  240B               	addwf	(btemp+10)^0,w,c
  8232  0182C4  6ED9               	movwf	fsr2l,c
  8233  0182C6  0E00               	movlw	0
  8234  0182C8  200C               	addwfc	(btemp+11)^0,w,c
  8235  0182CA  6EDA               	movwf	fsr2h,c
  8236  0182CC  0E01               	movlw	1
  8237  0182CE  6EDF               	movwf	indf2,c
  8238                           
  8239                           ;hid.c: 29:   h->hid_display = HID_MAIN;
  8240                           ;stkvar	_h @ sp[(0)+-2]
  8241  0182D0  0EFE               	movlw	-2
  8242  0182D2  006F FF8F FFD9     	movff	plusw1,fsr2l
  8243  0182D8  0EFF               	movlw	-1
  8244  0182DA  006F FF8F FFDA     	movff	plusw1,fsr2h
  8245  0182E0  0E00               	movlw	0
  8246  0182E2  6EDF               	movwf	indf2,c
  8247                           
  8248                           ;hid.c: 30:   h->wait_enter = 1;
  8249                           ;stkvar	_h @ sp[(0)+-2]
  8250  0182E4  0EFE               	movlw	-2
  8251  0182E6  006F FF8C  F00B    	movff	plusw1,btemp+10
  8252  0182EC  0EFF               	movlw	-1
  8253  0182EE  006F FF8C  F00C    	movff	plusw1,btemp+11
  8254  0182F4  0E04               	movlw	4
  8255  0182F6  240B               	addwf	(btemp+10)^0,w,c
  8256  0182F8  6ED9               	movwf	fsr2l,c
  8257  0182FA  0E00               	movlw	0
  8258  0182FC  200C               	addwfc	(btemp+11)^0,w,c
  8259  0182FE  6EDA               	movwf	fsr2h,c
  8260  018300  0E01               	movlw	1
  8261  018302  6EDF               	movwf	indf2,c
  8262                           
  8263                           ;hid.c: 31:   h->wait_select = 1;
  8264                           ;stkvar	_h @ sp[(0)+-2]
  8265  018304  0EFE               	movlw	-2
  8266  018306  006F FF8C  F00B    	movff	plusw1,btemp+10
  8267  01830C  0EFF               	movlw	-1
  8268  01830E  006F FF8C  F00C    	movff	plusw1,btemp+11
  8269  018314  0E02               	movlw	2
  8270  018316  240B               	addwf	(btemp+10)^0,w,c
  8271  018318  6ED9               	movwf	fsr2l,c
  8272  01831A  0E00               	movlw	0
  8273  01831C  200C               	addwfc	(btemp+11)^0,w,c
  8274  01831E  6EDA               	movwf	fsr2h,c
  8275  018320  0E01               	movlw	1
  8276  018322  6EDF               	movwf	indf2,c
  8277                           
  8278                           ;hid.c: 32:   h->wait_calib = 1;
  8279                           ;stkvar	_h @ sp[(0)+-2]
  8280  018324  0EFE               	movlw	-2
  8281  018326  006F FF8C  F00B    	movff	plusw1,btemp+10
  8282  01832C  0EFF               	movlw	-1
  8283  01832E  006F FF8C  F00C    	movff	plusw1,btemp+11
  8284  018334  0E06               	movlw	6
  8285  018336  240B               	addwf	(btemp+10)^0,w,c
  8286  018338  6ED9               	movwf	fsr2l,c
  8287  01833A  0E00               	movlw	0
  8288  01833C  200C               	addwfc	(btemp+11)^0,w,c
  8289  01833E  6EDA               	movwf	fsr2h,c
  8290  018340  0E01               	movlw	1
  8291  018342  6EDF               	movwf	indf2,c
  8292                           
  8293                           ;hid.c: 33:   h->select_p = SW_OFF;
  8294                           ;stkvar	_h @ sp[(0)+-2]
  8295  018344  0EFE               	movlw	-2
  8296  018346  006F FF8C  F00B    	movff	plusw1,btemp+10
  8297  01834C  0EFF               	movlw	-1
  8298  01834E  006F FF8C  F00C    	movff	plusw1,btemp+11
  8299  018354  0E03               	movlw	3
  8300  018356  240B               	addwf	(btemp+10)^0,w,c
  8301  018358  6ED9               	movwf	fsr2l,c
  8302  01835A  0E00               	movlw	0
  8303  01835C  200C               	addwfc	(btemp+11)^0,w,c
  8304  01835E  6EDA               	movwf	fsr2h,c
  8305  018360  0E00               	movlw	0
  8306  018362  6EDF               	movwf	indf2,c
  8307                           
  8308                           ;hid.c: 34:   h->enter_p = SW_OFF;
  8309                           ;stkvar	_h @ sp[(0)+-2]
  8310  018364  0EFE               	movlw	-2
  8311  018366  006F FF8C  F00B    	movff	plusw1,btemp+10
  8312  01836C  0EFF               	movlw	-1
  8313  01836E  006F FF8C  F00C    	movff	plusw1,btemp+11
  8314  018374  0E05               	movlw	5
  8315  018376  240B               	addwf	(btemp+10)^0,w,c
  8316  018378  6ED9               	movwf	fsr2l,c
  8317  01837A  0E00               	movlw	0
  8318  01837C  200C               	addwfc	(btemp+11)^0,w,c
  8319  01837E  6EDA               	movwf	fsr2h,c
  8320  018380  0E00               	movlw	0
  8321  018382  6EDF               	movwf	indf2,c
  8322                           
  8323                           ;hid.c: 35:   h->calib_p = SW_OFF;
  8324                           ;stkvar	_h @ sp[(0)+-2]
  8325  018384  0EFE               	movlw	-2
  8326  018386  006F FF8C  F00B    	movff	plusw1,btemp+10
  8327  01838C  0EFF               	movlw	-1
  8328  01838E  006F FF8C  F00C    	movff	plusw1,btemp+11
  8329  018394  0E07               	movlw	7
  8330  018396  240B               	addwf	(btemp+10)^0,w,c
  8331  018398  6ED9               	movwf	fsr2l,c
  8332  01839A  0E00               	movlw	0
  8333  01839C  200C               	addwfc	(btemp+11)^0,w,c
  8334  01839E  6EDA               	movwf	fsr2h,c
  8335  0183A0  0E00               	movlw	0
  8336  0183A2  D06A               	goto	L4
  8337  0183A4                     l13330:
  8338                           
  8339                           ;hid.c: 39:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  8340                           ;stkvar	_h @ sp[(0)+-2]
  8341  0183A4  0EFE               	movlw	-2
  8342  0183A6  006F FF8C  F00B    	movff	plusw1,btemp+10
  8343  0183AC  0EFF               	movlw	-1
  8344  0183AE  006F FF8C  F00C    	movff	plusw1,btemp+11
  8345  0183B4  0E02               	movlw	2
  8346  0183B6  240B               	addwf	(btemp+10)^0,w,c
  8347  0183B8  6ED9               	movwf	fsr2l,c
  8348  0183BA  0E00               	movlw	0
  8349  0183BC  200C               	addwfc	(btemp+11)^0,w,c
  8350  0183BE  6EDA               	movwf	fsr2h,c
  8351  0183C0  50DF               	movf	indf2,w,c
  8352  0183C2  A4D8               	btfss	status,2,c
  8353  0183C4  D076               	goto	l2071
  8354                           
  8355                           ;stkvar	_h @ sp[(0)+-2]
  8356  0183C6  0EFE               	movlw	-2
  8357  0183C8  006F FF8C  F00B    	movff	plusw1,btemp+10
  8358  0183CE  0EFF               	movlw	-1
  8359  0183D0  006F FF8C  F00C    	movff	plusw1,btemp+11
  8360  0183D6  0E03               	movlw	3
  8361  0183D8  240B               	addwf	(btemp+10)^0,w,c
  8362  0183DA  6ED9               	movwf	fsr2l,c
  8363  0183DC  0E00               	movlw	0
  8364  0183DE  200C               	addwfc	(btemp+11)^0,w,c
  8365  0183E0  6EDA               	movwf	fsr2h,c
  8366  0183E2  50DF               	movf	indf2,w,c
  8367  0183E4  A4D8               	btfss	status,2,c
  8368  0183E6  D065               	goto	l2071
  8369                           
  8370                           ;hid.c: 40:    h->sequence = ++h->sequence & 0x3;
  8371                           ;stkvar	_h @ sp[(0)+-2]
  8372  0183E8  0EFE               	movlw	-2
  8373  0183EA  006F FF8C  F00B    	movff	plusw1,btemp+10
  8374  0183F0  0EFF               	movlw	-1
  8375  0183F2  006F FF8C  F00C    	movff	plusw1,btemp+11
  8376  0183F8  0E08               	movlw	8
  8377  0183FA  240B               	addwf	(btemp+10)^0,w,c
  8378  0183FC  6ED9               	movwf	fsr2l,c
  8379  0183FE  0E00               	movlw	0
  8380  018400  200C               	addwfc	(btemp+11)^0,w,c
  8381  018402  6EDA               	movwf	fsr2h,c
  8382                           
  8383                           ;stkvar	_h @ sp[(0)+-2]
  8384  018404  0EFE               	movlw	-2
  8385  018406  006F FF8C  F00B    	movff	plusw1,btemp+10
  8386  01840C  0EFF               	movlw	-1
  8387  01840E  006F FF8C  F00C    	movff	plusw1,btemp+11
  8388  018414  0E08               	movlw	8
  8389  018416  240B               	addwf	(btemp+10)^0,w,c
  8390  018418  6EE9               	movwf	fsr0l,c
  8391  01841A  0E00               	movlw	0
  8392  01841C  200C               	addwfc	(btemp+11)^0,w,c
  8393  01841E  6EEA               	movwf	fsr0h,c
  8394  018420  2AEF               	incf	indf0,f,c
  8395  018422  50EF               	movf	indf0,w,c
  8396  018424  0B03               	andlw	3
  8397  018426  6EDF               	movwf	indf2,c
  8398                           
  8399                           ;hid.c: 41:    h->hid_display = h->sequence;
  8400                           ;stkvar	_h @ sp[(0)+-2]
  8401  018428  0EFE               	movlw	-2
  8402  01842A  006F FF8C  F00B    	movff	plusw1,btemp+10
  8403  018430  0EFF               	movlw	-1
  8404  018432  006F FF8C  F00C    	movff	plusw1,btemp+11
  8405  018438  0E08               	movlw	8
  8406  01843A  240B               	addwf	(btemp+10)^0,w,c
  8407  01843C  6ED9               	movwf	fsr2l,c
  8408  01843E  0E00               	movlw	0
  8409  018440  200C               	addwfc	(btemp+11)^0,w,c
  8410  018442  6EDA               	movwf	fsr2h,c
  8411                           
  8412                           ;stkvar	_h @ sp[(0)+-2]
  8413  018444  0EFE               	movlw	-2
  8414  018446  006F FF8F FFE9     	movff	plusw1,fsr0l
  8415  01844C  0EFF               	movlw	-1
  8416  01844E  006F FF8F FFEA     	movff	plusw1,fsr0h
  8417  018454  006F FF7F FFEF     	movff	indf2,indf0
  8418                           
  8419                           ;hid.c: 42:    h->wait_select = 1;
  8420                           ;stkvar	_h @ sp[(0)+-2]
  8421  01845A  0EFE               	movlw	-2
  8422  01845C  006F FF8C  F00B    	movff	plusw1,btemp+10
  8423  018462  0EFF               	movlw	-1
  8424  018464  006F FF8C  F00C    	movff	plusw1,btemp+11
  8425  01846A  0E02               	movlw	2
  8426  01846C  240B               	addwf	(btemp+10)^0,w,c
  8427  01846E  6ED9               	movwf	fsr2l,c
  8428  018470  0E00               	movlw	0
  8429  018472  200C               	addwfc	(btemp+11)^0,w,c
  8430  018474  6EDA               	movwf	fsr2h,c
  8431  018476  0E01               	movlw	1
  8432  018478                     L4:
  8433  018478  6EDF               	movwf	indf2,c
  8434  01847A  D01B               	goto	l2071
  8435  01847C                     l13340:
  8436                           
  8437                           ;stkvar	_h @ sp[(0)+-2]
  8438  01847C  0EFE               	movlw	-2
  8439  01847E  006F FF8C  F00B    	movff	plusw1,btemp+10
  8440  018484  0EFF               	movlw	-1
  8441  018486  006F FF8C  F00C    	movff	plusw1,btemp+11
  8442  01848C  0E01               	movlw	1
  8443  01848E  240B               	addwf	(btemp+10)^0,w,c
  8444  018490  6ED9               	movwf	fsr2l,c
  8445  018492  0E00               	movlw	0
  8446  018494  200C               	addwfc	(btemp+11)^0,w,c
  8447  018496  6EDA               	movwf	fsr2h,c
  8448  018498  50DF               	movf	indf2,w,c
  8449  01849A  6E0B               	movwf	(btemp+10)^0,c
  8450  01849C  6A0C               	clrf	(btemp+11)^0,c
  8451                           
  8452                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8453                           ; Switch size 1, requested type "simple"
  8454                           ; Number of cases is 1, Range of values is 0 to 0
  8455                           ; switch strategies available:
  8456                           ; Name         Instructions Cycles
  8457                           ; simple_byte            4     3 (average)
  8458                           ;	Chosen strategy is simple_byte
  8459  01849E  500C               	movf	(btemp+11)^0,w,c
  8460  0184A0  0A00               	xorlw	0	; case 0
  8461  0184A2  A4D8               	btfss	status,2,c
  8462  0184A4  D77F               	goto	l13330
  8463                           
  8464                           ; Switch size 1, requested type "simple"
  8465                           ; Number of cases is 2, Range of values is 0 to 1
  8466                           ; switch strategies available:
  8467                           ; Name         Instructions Cycles
  8468                           ; simple_byte            7     4 (average)
  8469                           ;	Chosen strategy is simple_byte
  8470  0184A6  500B               	movf	(btemp+10)^0,w,c
  8471  0184A8  0A00               	xorlw	0	; case 0
  8472  0184AA  B4D8               	btfsc	status,2,c
  8473  0184AC  D701               	goto	l13314
  8474  0184AE  0A01               	xorlw	1	; case 1
  8475  0184B0  D779               	goto	l13330
  8476  0184B2                     l2071:
  8477                           
  8478                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
  8479  0184B2  52E5               	movf	postdec1,f,c
  8480  0184B4  52E5               	movf	postdec1,f,c
  8481  0184B6  0012               	return		;funcret
  8482  0184B8                     __end_of_hid_display:
  8483                           	opt callstack 0
  8484                           
  8485 ;; *************** function _hid_input *****************
  8486 ;; Defined at:
  8487 ;;		line 3 in file "hid.c"
  8488 ;; Parameters:    Size  Location     Type
  8489 ;;  h               2  [STACK] PTR struct H_data
  8490 ;;		 -> H(9), 
  8491 ;; Auto vars:     Size  Location     Type
  8492 ;;		None
  8493 ;; Return value:  Size  Location     Type
  8494 ;;                  2  [STACK] PTR struct H_data
  8495 ;; Registers used:
  8496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8497 ;; Tracked objects:
  8498 ;;		On entry : 0/39
  8499 ;;		On exit  : 0/0
  8500 ;;		Unchanged: 0/0
  8501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8506 ;;Total ram usage:        0 bytes
  8507 ;; Hardware stack levels used:    1
  8508 ;; Hardware stack levels required when called:   16
  8509 ;; This function calls:
  8510 ;;		_get_switch
  8511 ;; This function is called by:
  8512 ;;		_hid_display
  8513 ;; This function uses a reentrant model
  8514 ;;
  8515                           
  8516                           	psect	text20
  8517  0198CE                     __ptext20:
  8518                           	opt callstack 0
  8519  0198CE                     _hid_input:
  8520                           	opt callstack 13
  8521                           
  8522                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  8523                           
  8524                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8525                           ;incstack = 0
  8526  0198CE  0E02               	movlw	2
  8527  0198D0  6EE6               	movwf	postinc1,c
  8528  0198D2  ECDB  F0DF         	call	_get_switch	;wreg free
  8529  0198D6  5001               	movf	btemp^0,w,c
  8530  0198D8  B4D8               	btfsc	status,2,c
  8531  0198DA  D02C               	goto	l13148
  8532                           
  8533                           ;hid.c: 6:   h->wait_select = 0;
  8534                           ;stkvar	_h @ sp[(0)+-2]
  8535  0198DC  0EFE               	movlw	-2
  8536  0198DE  006F FF8C  F00B    	movff	plusw1,btemp+10
  8537  0198E4  0EFF               	movlw	-1
  8538  0198E6  006F FF8C  F00C    	movff	plusw1,btemp+11
  8539  0198EC  0E02               	movlw	2
  8540  0198EE  240B               	addwf	(btemp+10)^0,w,c
  8541  0198F0  6ED9               	movwf	fsr2l,c
  8542  0198F2  0E00               	movlw	0
  8543  0198F4  200C               	addwfc	(btemp+11)^0,w,c
  8544  0198F6  6EDA               	movwf	fsr2h,c
  8545  0198F8  0E00               	movlw	0
  8546  0198FA  6EDF               	movwf	indf2,c
  8547                           
  8548                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  8549  0198FC  0E02               	movlw	2
  8550  0198FE  6EE6               	movwf	postinc1,c
  8551  019900  ECDB  F0DF         	call	_get_switch	;wreg free
  8552  019904  5001               	movf	btemp^0,w,c
  8553  019906  B4D8               	btfsc	status,2,c
  8554  019908  D003               	goto	u12530
  8555  01990A  6A0C               	clrf	(btemp+11)^0,c
  8556  01990C  2A0C               	incf	(btemp+11)^0,f,c
  8557  01990E  D001               	goto	u12548
  8558  019910                     u12530:
  8559  019910  6A0C               	clrf	(btemp+11)^0,c
  8560  019912                     u12548:
  8561                           
  8562                           ;stkvar	_h @ sp[(0)+-2]
  8563  019912  0EFE               	movlw	-2
  8564  019914  006F FF8C  F009    	movff	plusw1,btemp+8
  8565  01991A  0EFF               	movlw	-1
  8566  01991C  006F FF8C  F00A    	movff	plusw1,btemp+9
  8567  019922  0E03               	movlw	3
  8568  019924  2409               	addwf	(btemp+8)^0,w,c
  8569  019926  6ED9               	movwf	fsr2l,c
  8570  019928  0E00               	movlw	0
  8571  01992A  200A               	addwfc	(btemp+9)^0,w,c
  8572  01992C  6EDA               	movwf	fsr2h,c
  8573  01992E  0060  F033  FFDF   	movff	btemp+11,indf2
  8574  019934                     l13148:
  8575                           
  8576                           ;hid.c: 10:  if (get_switch(SENTER)) {
  8577  019934  0E03               	movlw	3
  8578  019936  6EE6               	movwf	postinc1,c
  8579  019938  ECDB  F0DF         	call	_get_switch	;wreg free
  8580  01993C  5001               	movf	btemp^0,w,c
  8581  01993E  B4D8               	btfsc	status,2,c
  8582  019940  D02C               	goto	l13154
  8583                           
  8584                           ;hid.c: 11:   h->wait_enter = 0;
  8585                           ;stkvar	_h @ sp[(0)+-2]
  8586  019942  0EFE               	movlw	-2
  8587  019944  006F FF8C  F00B    	movff	plusw1,btemp+10
  8588  01994A  0EFF               	movlw	-1
  8589  01994C  006F FF8C  F00C    	movff	plusw1,btemp+11
  8590  019952  0E04               	movlw	4
  8591  019954  240B               	addwf	(btemp+10)^0,w,c
  8592  019956  6ED9               	movwf	fsr2l,c
  8593  019958  0E00               	movlw	0
  8594  01995A  200C               	addwfc	(btemp+11)^0,w,c
  8595  01995C  6EDA               	movwf	fsr2h,c
  8596  01995E  0E00               	movlw	0
  8597  019960  6EDF               	movwf	indf2,c
  8598                           
  8599                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  8600  019962  0E03               	movlw	3
  8601  019964  6EE6               	movwf	postinc1,c
  8602  019966  ECDB  F0DF         	call	_get_switch	;wreg free
  8603  01996A  5001               	movf	btemp^0,w,c
  8604  01996C  B4D8               	btfsc	status,2,c
  8605  01996E  D003               	goto	u12560
  8606  019970  6A0C               	clrf	(btemp+11)^0,c
  8607  019972  2A0C               	incf	(btemp+11)^0,f,c
  8608  019974  D001               	goto	u12578
  8609  019976                     u12560:
  8610  019976  6A0C               	clrf	(btemp+11)^0,c
  8611  019978                     u12578:
  8612                           
  8613                           ;stkvar	_h @ sp[(0)+-2]
  8614  019978  0EFE               	movlw	-2
  8615  01997A  006F FF8C  F009    	movff	plusw1,btemp+8
  8616  019980  0EFF               	movlw	-1
  8617  019982  006F FF8C  F00A    	movff	plusw1,btemp+9
  8618  019988  0E05               	movlw	5
  8619  01998A  2409               	addwf	(btemp+8)^0,w,c
  8620  01998C  6ED9               	movwf	fsr2l,c
  8621  01998E  0E00               	movlw	0
  8622  019990  200A               	addwfc	(btemp+9)^0,w,c
  8623  019992  6EDA               	movwf	fsr2h,c
  8624  019994  0060  F033  FFDF   	movff	btemp+11,indf2
  8625  01999A                     l13154:
  8626                           
  8627                           ;hid.c: 15:  if (get_switch(SCALIB)) {
  8628  01999A  0E04               	movlw	4
  8629  01999C  6EE6               	movwf	postinc1,c
  8630  01999E  ECDB  F0DF         	call	_get_switch	;wreg free
  8631  0199A2  5001               	movf	btemp^0,w,c
  8632  0199A4  B4D8               	btfsc	status,2,c
  8633  0199A6  D02C               	goto	l2062
  8634                           
  8635                           ;hid.c: 16:   h->wait_calib = 0;
  8636                           ;stkvar	_h @ sp[(0)+-2]
  8637  0199A8  0EFE               	movlw	-2
  8638  0199AA  006F FF8C  F00B    	movff	plusw1,btemp+10
  8639  0199B0  0EFF               	movlw	-1
  8640  0199B2  006F FF8C  F00C    	movff	plusw1,btemp+11
  8641  0199B8  0E06               	movlw	6
  8642  0199BA  240B               	addwf	(btemp+10)^0,w,c
  8643  0199BC  6ED9               	movwf	fsr2l,c
  8644  0199BE  0E00               	movlw	0
  8645  0199C0  200C               	addwfc	(btemp+11)^0,w,c
  8646  0199C2  6EDA               	movwf	fsr2h,c
  8647  0199C4  0E00               	movlw	0
  8648  0199C6  6EDF               	movwf	indf2,c
  8649                           
  8650                           ;hid.c: 17:   h->calib_p = get_switch(SCALIB);
  8651  0199C8  0E04               	movlw	4
  8652  0199CA  6EE6               	movwf	postinc1,c
  8653  0199CC  ECDB  F0DF         	call	_get_switch	;wreg free
  8654  0199D0  5001               	movf	btemp^0,w,c
  8655  0199D2  B4D8               	btfsc	status,2,c
  8656  0199D4  D003               	goto	u12590
  8657  0199D6  6A0C               	clrf	(btemp+11)^0,c
  8658  0199D8  2A0C               	incf	(btemp+11)^0,f,c
  8659  0199DA  D001               	goto	u12608
  8660  0199DC                     u12590:
  8661  0199DC  6A0C               	clrf	(btemp+11)^0,c
  8662  0199DE                     u12608:
  8663                           
  8664                           ;stkvar	_h @ sp[(0)+-2]
  8665  0199DE  0EFE               	movlw	-2
  8666  0199E0  006F FF8C  F009    	movff	plusw1,btemp+8
  8667  0199E6  0EFF               	movlw	-1
  8668  0199E8  006F FF8C  F00A    	movff	plusw1,btemp+9
  8669  0199EE  0E07               	movlw	7
  8670  0199F0  2409               	addwf	(btemp+8)^0,w,c
  8671  0199F2  6ED9               	movwf	fsr2l,c
  8672  0199F4  0E00               	movlw	0
  8673  0199F6  200A               	addwfc	(btemp+9)^0,w,c
  8674  0199F8  6EDA               	movwf	fsr2h,c
  8675  0199FA  0060  F033  FFDF   	movff	btemp+11,indf2
  8676  019A00                     l2062:
  8677                           
  8678                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
  8679  019A00  52E5               	movf	postdec1,f,c
  8680  019A02  52E5               	movf	postdec1,f,c
  8681  019A04  0012               	return		;funcret
  8682  019A06                     __end_of_hid_input:
  8683                           	opt callstack 0
  8684                           
  8685 ;; *************** function _get_switch *****************
  8686 ;; Defined at:
  8687 ;;		line 18 in file "dio.c"
  8688 ;; Parameters:    Size  Location     Type
  8689 ;;  i               1  [STACK] const unsigned char 
  8690 ;; Auto vars:     Size  Location     Type
  8691 ;;		None
  8692 ;; Return value:  Size  Location     Type
  8693 ;;                  1  [STACK] enum E17021
  8694 ;; Registers used:
  8695 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  8696 ;; Tracked objects:
  8697 ;;		On entry : 0/39
  8698 ;;		On exit  : 0/0
  8699 ;;		Unchanged: 0/0
  8700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8705 ;;Total ram usage:        0 bytes
  8706 ;; Hardware stack levels used:    1
  8707 ;; Hardware stack levels required when called:   15
  8708 ;; This function calls:
  8709 ;;		Nothing
  8710 ;; This function is called by:
  8711 ;;		_main
  8712 ;;		_hid_input
  8713 ;; This function uses a reentrant model
  8714 ;;
  8715                           
  8716                           	psect	text21
  8717  01BFB6                     __ptext21:
  8718                           	opt callstack 0
  8719  01BFB6                     _get_switch:
  8720                           	opt callstack 13
  8721                           
  8722                           ;dio.c: 18: SW_STATES get_switch(const uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  8723                           ;stkvar	_i @ sp[(0)+-1]
  8724                           
  8725                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8726                           ;incstack = 0
  8727  01BFB6  0EFF               	movlw	-1
  8728  01BFB8  006F FF8C  F001    	movff	plusw1,btemp
  8729  01BFBE  0E03               	movlw	3
  8730  01BFC0  6401               	cpfsgt	btemp^0,c
  8731  01BFC2  D002               	goto	l10144
  8732                           
  8733                           ;dio.c: 21:   return SW_OFF;
  8734  01BFC4  0E00               	movlw	0
  8735  01BFC6  D00A               	goto	L5
  8736  01BFC8                     l10144:
  8737                           
  8738                           ;dio.c: 23:  return S.button[i].sw;
  8739                           ;stkvar	_i @ sp[(0)+-1]
  8740  01BFC8  0EFF               	movlw	-1
  8741  01BFCA  50E3               	movf	plusw1,w,c
  8742  01BFCC  0D05               	mullw	5
  8743  01BFCE  0E54               	movlw	low _S
  8744  01BFD0  24F3               	addwf	243,w,c
  8745  01BFD2  6ED9               	movwf	fsr2l,c
  8746  01BFD4  0E02               	movlw	high _S
  8747  01BFD6  20F4               	addwfc	prodh,w,c
  8748  01BFD8  6EDA               	movwf	fsr2h,c
  8749  01BFDA  50DF               	movf	indf2,w,c
  8750  01BFDC                     L5:
  8751  01BFDC  6E01               	movwf	btemp^0,c
  8752                           
  8753                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  8754  01BFDE  52E5               	movf	postdec1,f,c
  8755  01BFE0  0012               	return		;funcret
  8756  01BFE2                     __end_of_get_switch:
  8757                           	opt callstack 0
  8758                           
  8759 ;; *************** function _esr_check *****************
  8760 ;; Defined at:
  8761 ;;		line 197 in file "bsoc.c"
  8762 ;; Parameters:    Size  Location     Type
  8763 ;;  fsm             1  [STACK] const unsigned char 
  8764 ;; Auto vars:     Size  Location     Type
  8765 ;;		None
  8766 ;; Return value:  Size  Location     Type
  8767 ;;                  4  [STACK] float 
  8768 ;; Registers used:
  8769 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8770 ;; Tracked objects:
  8771 ;;		On entry : 0/0
  8772 ;;		On exit  : 0/0
  8773 ;;		Unchanged: 0/0
  8774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8779 ;;Total ram usage:        0 bytes
  8780 ;; Hardware stack levels used:    1
  8781 ;; Hardware stack levels required when called:   18
  8782 ;; This function calls:
  8783 ;;		_StartTimer
  8784 ;;		_TimerDone
  8785 ;;		___fldiv
  8786 ;;		___flsub
  8787 ;;		_conv_raw_result
  8788 ;;		_fabsf
  8789 ;;		_set_load_relay_one
  8790 ;;		_set_load_relay_two
  8791 ;;		_update_adc_result
  8792 ;; This function is called by:
  8793 ;;		_main
  8794 ;; This function uses a reentrant model
  8795 ;;
  8796                           
  8797                           	psect	text22
  8798  01716C                     __ptext22:
  8799                           	opt callstack 0
  8800  01716C                     _esr_check:
  8801                           	opt callstack 12
  8802                           
  8803                           ;bsoc.c: 197: float esr_check(const uint8_t fsm);bsoc.c: 198: {;bsoc.c: 199:  static uin
      +                          t8_t esr_state = 0;;bsoc.c: 201:  if (fsm) {
  8804                           ;stkvar	_fsm @ sp[(0)+-1]
  8805                           
  8806                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8807                           ;incstack = 0
  8808  01716C  0EFF               	movlw	-1
  8809  01716E  50E3               	movf	plusw1,w,c
  8810  017170  B4D8               	btfsc	status,2,c
  8811  017172  D149               	goto	l11292
  8812                           
  8813                           ;bsoc.c: 202:   esr_state = 0;
  8814  017174  0100               	movlb	0	; () banked
  8815  017176  6BA4               	clrf	esr_check@esr_state& (0+255),b
  8816                           
  8817                           ; BSR set to: 0
  8818                           ;bsoc.c: 203:   return -10.0;
  8819  017178  0E00               	movlw	0
  8820  01717A  6E01               	movwf	btemp^0,c
  8821  01717C  0E00               	movlw	0
  8822  01717E  6E02               	movwf	(btemp+1)^0,c
  8823  017180  0E20               	movlw	32
  8824  017182  6E03               	movwf	(btemp+2)^0,c
  8825  017184  0EC1               	movlw	193
  8826  017186  D15B               	goto	L6
  8827  017188                     l11224:
  8828                           
  8829                           ; BSR set to: 0
  8830                           ;bsoc.c: 208:   StartTimer(TMR_ESR, 10000);
  8831  017188  0E10               	movlw	16
  8832  01718A  6EE6               	movwf	postinc1,c
  8833  01718C  0E27               	movlw	39
  8834  01718E  6EE6               	movwf	postinc1,c
  8835  017190  0E0C               	movlw	12
  8836  017192  6EE6               	movwf	postinc1,c
  8837  017194  ECF2  F0DD         	call	_StartTimer	;wreg free
  8838  017198                     l11226:
  8839                           
  8840                           ;bsoc.c: 209:   esr_state++;
  8841  017198  0100               	movlb	0	; () banked
  8842  01719A  2BA4               	incf	esr_check@esr_state& (0+255),f,b
  8843                           
  8844                           ;bsoc.c: 210:   break;
  8845  01719C  D149               	goto	l11294
  8846  01719E                     l11228:
  8847                           
  8848                           ; BSR set to: 0
  8849                           ;bsoc.c: 215:   set_load_relay_one(0);
  8850  01719E  0E00               	movlw	0
  8851  0171A0  6EE6               	movwf	postinc1,c
  8852  0171A2  ECD9  F0E2         	call	_set_load_relay_one	;wreg free
  8853                           
  8854                           ;bsoc.c: 216:   set_load_relay_two(0);
  8855  0171A6  0E00               	movlw	0
  8856  0171A8  6EE6               	movwf	postinc1,c
  8857  0171AA  ECD1  F0E2         	call	_set_load_relay_two	;wreg free
  8858                           
  8859                           ;bsoc.c: 217:   if (TimerDone(TMR_ESR)) {
  8860  0171AE  0E0C               	movlw	12
  8861  0171B0  6EE6               	movwf	postinc1,c
  8862  0171B2  EC47  F0E0         	call	_TimerDone	;wreg free
  8863  0171B6  5001               	movf	btemp^0,w,c
  8864  0171B8  B4D8               	btfsc	status,2,c
  8865  0171BA  D009               	goto	l11234
  8866                           
  8867                           ;bsoc.c: 218:    StartTimer(TMR_ESR, 10000);
  8868  0171BC  0E10               	movlw	16
  8869  0171BE  6EE6               	movwf	postinc1,c
  8870  0171C0  0E27               	movlw	39
  8871  0171C2  6EE6               	movwf	postinc1,c
  8872  0171C4  0E0C               	movlw	12
  8873  0171C6  6EE6               	movwf	postinc1,c
  8874  0171C8  ECF2  F0DD         	call	_StartTimer	;wreg free
  8875                           
  8876                           ;bsoc.c: 219:   } else {
  8877  0171CC  D006               	goto	l11238
  8878  0171CE                     l11234:
  8879                           
  8880                           ;bsoc.c: 220:    return -2.0;
  8881  0171CE  0E00               	movlw	0
  8882  0171D0  6E01               	movwf	btemp^0,c
  8883  0171D2  0E00               	movlw	0
  8884  0171D4  6E02               	movwf	(btemp+1)^0,c
  8885  0171D6  0E00               	movlw	0
  8886  0171D8  D066               	goto	L8
  8887  0171DA                     l11238:
  8888                           
  8889                           ;bsoc.c: 225:   update_adc_result();
  8890  0171DA  EC71  F0DE         	call	_update_adc_result	;wreg free
  8891                           
  8892                           ;bsoc.c: 226:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  8893  0171DE  0E00               	movlw	0
  8894  0171E0  6EE6               	movwf	postinc1,c
  8895  0171E2  0E04               	movlw	4
  8896  0171E4  6EE6               	movwf	postinc1,c
  8897  0171E6  ECB3  F0A9         	call	_conv_raw_result	;wreg free
  8898  0171EA  0060  F004  F815   	movff	btemp,_C+278	;volatile
  8899  0171F0  0060  F008  F816   	movff	btemp+1,_C+279	;volatile
  8900  0171F6  0060  F00C  F817   	movff	btemp+2,_C+280	;volatile
  8901  0171FC  0060  F010  F818   	movff	btemp+3,_C+281	;volatile
  8902  017202  D7CA               	goto	l11226
  8903  017204                     l11244:
  8904                           
  8905                           ; BSR set to: 0
  8906                           ;bsoc.c: 230:   set_load_relay_one(1);
  8907  017204  0E01               	movlw	1
  8908  017206  6EE6               	movwf	postinc1,c
  8909  017208  ECD9  F0E2         	call	_set_load_relay_one	;wreg free
  8910                           
  8911                           ;bsoc.c: 231:   if (TimerDone(TMR_ESR)) {
  8912  01720C  0E0C               	movlw	12
  8913  01720E  6EE6               	movwf	postinc1,c
  8914  017210  EC47  F0E0         	call	_TimerDone	;wreg free
  8915  017214  5001               	movf	btemp^0,w,c
  8916  017216  B4D8               	btfsc	status,2,c
  8917  017218  D009               	goto	l11250
  8918                           
  8919                           ;bsoc.c: 232:    StartTimer(TMR_ESR, 10000);
  8920  01721A  0E10               	movlw	16
  8921  01721C  6EE6               	movwf	postinc1,c
  8922  01721E  0E27               	movlw	39
  8923  017220  6EE6               	movwf	postinc1,c
  8924  017222  0E0C               	movlw	12
  8925  017224  6EE6               	movwf	postinc1,c
  8926  017226  ECF2  F0DD         	call	_StartTimer	;wreg free
  8927                           
  8928                           ;bsoc.c: 233:   } else {
  8929  01722A  D006               	goto	l11254
  8930  01722C                     l11250:
  8931                           
  8932                           ;bsoc.c: 234:    return -3.0;
  8933  01722C  0E00               	movlw	0
  8934  01722E  6E01               	movwf	btemp^0,c
  8935  017230  0E00               	movlw	0
  8936  017232  6E02               	movwf	(btemp+1)^0,c
  8937  017234  0E40               	movlw	64
  8938  017236  D037               	goto	L8
  8939  017238                     l11254:
  8940                           
  8941                           ;bsoc.c: 237:   update_adc_result();
  8942  017238  EC71  F0DE         	call	_update_adc_result	;wreg free
  8943                           
  8944                           ;bsoc.c: 238:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  8945  01723C  0E00               	movlw	0
  8946  01723E  6EE6               	movwf	postinc1,c
  8947  017240  0E04               	movlw	4
  8948  017242  6EE6               	movwf	postinc1,c
  8949  017244  ECB3  F0A9         	call	_conv_raw_result	;wreg free
  8950  017248  0060  F004  F819   	movff	btemp,_C+282	;volatile
  8951  01724E  0060  F008  F81A   	movff	btemp+1,_C+283	;volatile
  8952  017254  0060  F00C  F81B   	movff	btemp+2,_C+284	;volatile
  8953  01725A  0060  F010  F81C   	movff	btemp+3,_C+285	;volatile
  8954                           
  8955                           ;bsoc.c: 239:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  8956  017260  0E00               	movlw	0
  8957  017262  6EE6               	movwf	postinc1,c
  8958  017264  0E00               	movlw	0
  8959  017266  6EE6               	movwf	postinc1,c
  8960  017268  ECB3  F0A9         	call	_conv_raw_result	;wreg free
  8961  01726C  0060  F004  F80D   	movff	btemp,_C+270	;volatile
  8962  017272  0060  F008  F80E   	movff	btemp+1,_C+271	;volatile
  8963  017278  0060  F00C  F80F   	movff	btemp+2,_C+272	;volatile
  8964  01727E  0060  F010  F810   	movff	btemp+3,_C+273	;volatile
  8965  017284  D789               	goto	l11226
  8966  017286                     l11262:
  8967                           
  8968                           ; BSR set to: 0
  8969                           ;bsoc.c: 243:   set_load_relay_two(1);
  8970  017286  0E01               	movlw	1
  8971  017288  6EE6               	movwf	postinc1,c
  8972  01728A  ECD1  F0E2         	call	_set_load_relay_two	;wreg free
  8973                           
  8974                           ;bsoc.c: 244:   if (!TimerDone(TMR_ESR))
  8975  01728E  0E0C               	movlw	12
  8976  017290  6EE6               	movwf	postinc1,c
  8977  017292  EC47  F0E0         	call	_TimerDone	;wreg free
  8978  017296  5001               	movf	btemp^0,w,c
  8979  017298  A4D8               	btfss	status,2,c
  8980  01729A  D008               	goto	l11270
  8981                           
  8982                           ;bsoc.c: 245:    return -4.0;
  8983  01729C  0E00               	movlw	0
  8984  01729E  6E01               	movwf	btemp^0,c
  8985  0172A0  0E00               	movlw	0
  8986  0172A2  6E02               	movwf	(btemp+1)^0,c
  8987  0172A4  0E80               	movlw	128
  8988  0172A6                     L8:
  8989  0172A6  6E03               	movwf	(btemp+2)^0,c
  8990  0172A8  0EC0               	movlw	192
  8991  0172AA  D0C9               	goto	L6
  8992  0172AC                     l11270:
  8993                           
  8994                           ;bsoc.c: 247:   update_adc_result();
  8995  0172AC  EC71  F0DE         	call	_update_adc_result	;wreg free
  8996                           
  8997                           ;bsoc.c: 248:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  8998  0172B0  0E00               	movlw	0
  8999  0172B2  6EE6               	movwf	postinc1,c
  9000  0172B4  0E04               	movlw	4
  9001  0172B6  6EE6               	movwf	postinc1,c
  9002  0172B8  ECB3  F0A9         	call	_conv_raw_result	;wreg free
  9003  0172BC  0060  F004  F81D   	movff	btemp,_C+286	;volatile
  9004  0172C2  0060  F008  F81E   	movff	btemp+1,_C+287	;volatile
  9005  0172C8  0060  F00C  F81F   	movff	btemp+2,_C+288	;volatile
  9006  0172CE  0060  F010  F820   	movff	btemp+3,_C+289	;volatile
  9007                           
  9008                           ;bsoc.c: 249:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  9009  0172D4  0E00               	movlw	0
  9010  0172D6  6EE6               	movwf	postinc1,c
  9011  0172D8  0E00               	movlw	0
  9012  0172DA  6EE6               	movwf	postinc1,c
  9013  0172DC  ECB3  F0A9         	call	_conv_raw_result	;wreg free
  9014  0172E0  0060  F004  F811   	movff	btemp,_C+274	;volatile
  9015  0172E6  0060  F008  F812   	movff	btemp+1,_C+275	;volatile
  9016  0172EC  0060  F00C  F813   	movff	btemp+2,_C+276	;volatile
  9017  0172F2  0060  F010  F814   	movff	btemp+3,_C+277	;volatile
  9018                           
  9019                           ;bsoc.c: 251:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  9020  0172F8  EE22  F011         	lfsr	2,_C+274	;volatile
  9021  0172FC  006F FF7B FFE6     	movff	postinc2,postinc1
  9022  017302  006F FF7B FFE6     	movff	postinc2,postinc1
  9023  017308  006F FF7B FFE6     	movff	postinc2,postinc1
  9024  01730E  006F FF7B FFE6     	movff	postinc2,postinc1
  9025  017314  EE22  F00D         	lfsr	2,_C+270	;volatile
  9026  017318  006F FF7B FFE6     	movff	postinc2,postinc1
  9027  01731E  006F FF7B FFE6     	movff	postinc2,postinc1
  9028  017324  006F FF7B FFE6     	movff	postinc2,postinc1
  9029  01732A  006F FF7B FFE6     	movff	postinc2,postinc1
  9030  017330  EC4C  F0DD         	call	___flsub	;wreg free
  9031  017334  0060  F007  FFE6   	movff	btemp,postinc1
  9032  01733A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9033  017340  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9034  017346  0060  F013  FFE6   	movff	btemp+3,postinc1
  9035  01734C  EE22  F01D         	lfsr	2,_C+286	;volatile
  9036  017350  006F FF7B FFE6     	movff	postinc2,postinc1
  9037  017356  006F FF7B FFE6     	movff	postinc2,postinc1
  9038  01735C  006F FF7B FFE6     	movff	postinc2,postinc1
  9039  017362  006F FF7B FFE6     	movff	postinc2,postinc1
  9040  017368  EE22  F019         	lfsr	2,_C+282	;volatile
  9041  01736C  006F FF7B FFE6     	movff	postinc2,postinc1
  9042  017372  006F FF7B FFE6     	movff	postinc2,postinc1
  9043  017378  006F FF7B FFE6     	movff	postinc2,postinc1
  9044  01737E  006F FF7B FFE6     	movff	postinc2,postinc1
  9045  017384  EC4C  F0DD         	call	___flsub	;wreg free
  9046  017388  0060  F007  FFE6   	movff	btemp,postinc1
  9047  01738E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9048  017394  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9049  01739A  0060  F013  FFE6   	movff	btemp+3,postinc1
  9050  0173A0  ECF6  F0A6         	call	___fldiv	;wreg free
  9051  0173A4  0060  F007  FFE6   	movff	btemp,postinc1
  9052  0173AA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9053  0173B0  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9054  0173B6  0060  F013  FFE6   	movff	btemp+3,postinc1
  9055  0173BC  ECF5  F0D4         	call	_fabsf	;wreg free
  9056  0173C0  0060  F004  F787   	movff	btemp,_C+136	;volatile
  9057  0173C6  0060  F008  F788   	movff	btemp+1,_C+137	;volatile
  9058  0173CC  0060  F00C  F789   	movff	btemp+2,_C+138	;volatile
  9059  0173D2  0060  F010  F78A   	movff	btemp+3,_C+139	;volatile
  9060                           
  9061                           ;bsoc.c: 252:   set_load_relay_one(0);
  9062  0173D8  0E00               	movlw	0
  9063  0173DA  6EE6               	movwf	postinc1,c
  9064  0173DC  ECD9  F0E2         	call	_set_load_relay_one	;wreg free
  9065                           
  9066                           ;bsoc.c: 253:   set_load_relay_two(0);
  9067  0173E0  0E00               	movlw	0
  9068  0173E2  6EE6               	movwf	postinc1,c
  9069  0173E4  ECD1  F0E2         	call	_set_load_relay_two	;wreg free
  9070                           
  9071                           ;bsoc.c: 254:   esr_state = 0;
  9072  0173E8  0100               	movlb	0	; () banked
  9073  0173EA  6BA4               	clrf	esr_check@esr_state& (0+255),b
  9074                           
  9075                           ; BSR set to: 0
  9076                           ;bsoc.c: 255:   return C.esr;
  9077  0173EC  0061  FE1C  F001   	movff	_C+136,btemp	;volatile
  9078  0173F2  0061  FE20  F002   	movff	_C+137,btemp+1	;volatile
  9079  0173F8  0061  FE24  F003   	movff	_C+138,btemp+2	;volatile
  9080  0173FE  0061  FE28  F004   	movff	_C+139,btemp+3	;volatile
  9081  017404  D01D               	goto	l2187
  9082  017406                     l11292:
  9083  017406  0100               	movlb	0	; () banked
  9084  017408  51A4               	movf	esr_check@esr_state& (0+255),w,b
  9085  01740A  6E0B               	movwf	(btemp+10)^0,c
  9086  01740C  6A0C               	clrf	(btemp+11)^0,c
  9087                           
  9088                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9089                           ; Switch size 1, requested type "simple"
  9090                           ; Number of cases is 1, Range of values is 0 to 0
  9091                           ; switch strategies available:
  9092                           ; Name         Instructions Cycles
  9093                           ; simple_byte            4     3 (average)
  9094                           ;	Chosen strategy is simple_byte
  9095  01740E  500C               	movf	(btemp+11)^0,w,c
  9096  017410  0A00               	xorlw	0	; case 0
  9097  017412  A4D8               	btfss	status,2,c
  9098  017414  D00D               	goto	l11294
  9099                           
  9100                           ; BSR set to: 0
  9101                           ; Switch size 1, requested type "simple"
  9102                           ; Number of cases is 4, Range of values is 0 to 3
  9103                           ; switch strategies available:
  9104                           ; Name         Instructions Cycles
  9105                           ; simple_byte           13     7 (average)
  9106                           ;	Chosen strategy is simple_byte
  9107  017416  500B               	movf	(btemp+10)^0,w,c
  9108  017418  0A00               	xorlw	0	; case 0
  9109  01741A  B4D8               	btfsc	status,2,c
  9110  01741C  D6B5               	goto	l11224
  9111  01741E  0A01               	xorlw	1	; case 1
  9112  017420  B4D8               	btfsc	status,2,c
  9113  017422  D6BD               	goto	l11228
  9114  017424  0A03               	xorlw	3	; case 2
  9115  017426  B4D8               	btfsc	status,2,c
  9116  017428  D6ED               	goto	l11244
  9117  01742A  0A01               	xorlw	1	; case 3
  9118  01742C  B4D8               	btfsc	status,2,c
  9119  01742E  D72B               	goto	l11262
  9120  017430                     l11294:
  9121                           
  9122                           ; BSR set to: 0
  9123                           ;bsoc.c: 260:  return -1.0;
  9124  017430  0E00               	movlw	0
  9125  017432  6E01               	movwf	btemp^0,c
  9126  017434  0E00               	movlw	0
  9127  017436  6E02               	movwf	(btemp+1)^0,c
  9128  017438  0E80               	movlw	128
  9129  01743A  6E03               	movwf	(btemp+2)^0,c
  9130  01743C  0EBF               	movlw	191
  9131  01743E                     L6:
  9132  01743E  6E04               	movwf	(btemp+3)^0,c
  9133  017440                     l2187:
  9134                           
  9135                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  9136  017440  52E5               	movf	postdec1,f,c
  9137  017442  0012               	return		;funcret
  9138  017444                     __end_of_esr_check:
  9139                           	opt callstack 0
  9140                           
  9141 ;; *************** function _update_adc_result *****************
  9142 ;; Defined at:
  9143 ;;		line 99 in file "daq.c"
  9144 ;; Parameters:    Size  Location     Type
  9145 ;;		None
  9146 ;; Auto vars:     Size  Location     Type
  9147 ;;		None
  9148 ;; Return value:  Size  Location     Type
  9149 ;;                  1  [STACK] _Bool 
  9150 ;; Registers used:
  9151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  9152 ;; Tracked objects:
  9153 ;;		On entry : 0/0
  9154 ;;		On exit  : 0/0
  9155 ;;		Unchanged: 0/0
  9156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9161 ;;Total ram usage:        0 bytes
  9162 ;; Hardware stack levels used:    1
  9163 ;; Hardware stack levels required when called:   17
  9164 ;; This function calls:
  9165 ;;		_StartTimer
  9166 ;;		_TimerDone
  9167 ;;		_check_adc_scan
  9168 ;;		_clear_adc_scan
  9169 ;;		_start_adc_scan
  9170 ;; This function is called by:
  9171 ;;		_esr_check
  9172 ;; This function uses a reentrant model
  9173 ;;
  9174                           
  9175                           	psect	text23
  9176  01BCE2                     __ptext23:
  9177                           	opt callstack 0
  9178  01BCE2                     _update_adc_result:
  9179                           	opt callstack 12
  9180                           
  9181                           ;daq.c: 101:  if (R.done) {
  9182                           
  9183                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9184                           ;incstack = 0
  9185  01BCE2  0100               	movlb	0	; () banked
  9186  01BCE4  51E4               	movf	(_R+53)& (0+255),w,b	;volatile
  9187  01BCE6  B4D8               	btfsc	status,2,c
  9188  01BCE8  0012               	return	
  9189                           
  9190                           ; BSR set to: 0
  9191                           ;daq.c: 102:   clear_adc_scan();
  9192  01BCEA  EC45  F0E3         	call	_clear_adc_scan	;wreg free
  9193                           
  9194                           ; BSR set to: 0
  9195                           ;daq.c: 103:   start_adc_scan();
  9196  01BCEE  EC8B  F0DA         	call	_start_adc_scan	;wreg free
  9197                           
  9198                           ;daq.c: 104:   StartTimer(TMR_ADC, 200);
  9199  01BCF2  0EC8               	movlw	200
  9200  01BCF4  6EE6               	movwf	postinc1,c
  9201  01BCF6  0E00               	movlw	0
  9202  01BCF8  6EE6               	movwf	postinc1,c
  9203  01BCFA  0E01               	movlw	1
  9204  01BCFC  6EE6               	movwf	postinc1,c
  9205  01BCFE  ECF2  F0DD         	call	_StartTimer	;wreg free
  9206  01BD02                     l10724:
  9207  01BD02  0E01               	movlw	1
  9208  01BD04  6EE6               	movwf	postinc1,c
  9209  01BD06  EC47  F0E0         	call	_TimerDone	;wreg free
  9210  01BD0A  5001               	movf	btemp^0,w,c
  9211  01BD0C  A4D8               	btfss	status,2,c
  9212  01BD0E  0012               	return	
  9213  01BD10  EC35  F0E3         	call	_check_adc_scan	;wreg free
  9214  01BD14  5001               	movf	btemp^0,w,c
  9215  01BD16  A4D8               	btfss	status,2,c
  9216  01BD18  0012               	return	
  9217  01BD1A  D7F3               	goto	l10724
  9218  01BD1C                     __end_of_update_adc_result:
  9219                           	opt callstack 0
  9220                           
  9221 ;; *************** function _start_adc_scan *****************
  9222 ;; Defined at:
  9223 ;;		line 60 in file "daq.c"
  9224 ;; Parameters:    Size  Location     Type
  9225 ;;		None
  9226 ;; Auto vars:     Size  Location     Type
  9227 ;;		None
  9228 ;; Return value:  Size  Location     Type
  9229 ;;                  1  [STACK] _Bool 
  9230 ;; Registers used:
  9231 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  9232 ;; Tracked objects:
  9233 ;;		On entry : 0/0
  9234 ;;		On exit  : 1/0
  9235 ;;		Unchanged: 0/0
  9236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9241 ;;Total ram usage:        0 bytes
  9242 ;; Hardware stack levels used:    1
  9243 ;; Hardware stack levels required when called:   16
  9244 ;; This function calls:
  9245 ;;		_ADCC_DischargeSampleCapacitor
  9246 ;;		_ADCC_SetADIInterruptHandler
  9247 ;;		_ADCC_SetADTIInterruptHandler
  9248 ;;		_ADCC_StartConversion
  9249 ;; This function is called by:
  9250 ;;		_main
  9251 ;;		_update_adc_result
  9252 ;; This function uses a reentrant model
  9253 ;;
  9254                           
  9255                           	psect	text24
  9256  01B516                     __ptext24:
  9257                           	opt callstack 0
  9258  01B516                     _start_adc_scan:
  9259                           	opt callstack 14
  9260                           
  9261                           ;daq.c: 62:  if (R.done)
  9262                           
  9263                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9264                           ;incstack = 0
  9265  01B516  0100               	movlb	0	; () banked
  9266  01B518  51E4               	movf	(_R+53)& (0+255),w,b	;volatile
  9267  01B51A  A4D8               	btfss	status,2,c
  9268  01B51C  0012               	return	
  9269                           
  9270                           ; BSR set to: 0
  9271                           ;daq.c: 65:  R.scan_index = 0;
  9272  01B51E  6BE1               	clrf	(_R+50)& (0+255),b	;volatile
  9273                           
  9274                           ; BSR set to: 0
  9275                           ;daq.c: 66:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  9276  01B520  013A               	movlb	58	; () banked
  9277  01B522  5140               	movf	64,w,b	;volatile
  9278  01B524  006E F940  F001    	movff	14928,btemp	;volatile
  9279  01B52A  6A02               	clrf	(btemp+1)^0,c
  9280  01B52C  0060  F004  F002   	movff	btemp,btemp+1
  9281  01B532  6A01               	clrf	btemp^0,c
  9282  01B534  2601               	addwf	btemp^0,f,c
  9283  01B536  0E00               	movlw	0
  9284  01B538  2202               	addwfc	(btemp+1)^0,f,c
  9285  01B53A  0E77               	movlw	119
  9286  01B53C  1401               	andwf	btemp^0,w,c
  9287  01B53E  0100               	movlb	0	; () banked
  9288  01B540  6FE2               	movwf	(_R+51)& (0+255),b	;volatile
  9289  01B542  0E3C               	movlw	60
  9290  01B544  1402               	andwf	(btemp+1)^0,w,c
  9291  01B546  6FE3               	movwf	(_R+52)& (0+255),b	;volatile
  9292                           
  9293                           ; BSR set to: 0
  9294                           ;daq.c: 67:  ADCC_SetADIInterruptHandler(adc_int_handler);
  9295  01B548  0EB2               	movlw	low _adc_int_handler
  9296  01B54A  6EE6               	movwf	postinc1,c
  9297  01B54C  0EC6               	movlw	high _adc_int_handler
  9298  01B54E  6EE6               	movwf	postinc1,c
  9299  01B550  0E01               	movlw	low (_adc_int_handler shr (0+16))
  9300  01B552  6EE6               	movwf	postinc1,c
  9301  01B554  EC0F  F0E1         	call	_ADCC_SetADIInterruptHandler	;wreg free
  9302                           
  9303                           ;daq.c: 68:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  9304  01B558  0E2A               	movlw	low _adc_int_t_handler
  9305  01B55A  6EE6               	movwf	postinc1,c
  9306  01B55C  0EB1               	movlw	high _adc_int_t_handler
  9307  01B55E  6EE6               	movwf	postinc1,c
  9308  01B560  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  9309  01B562  6EE6               	movwf	postinc1,c
  9310  01B564  ECFB  F0E0         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  9311                           
  9312                           ;daq.c: 69:  ADCC_DischargeSampleCapacitor();
  9313  01B568  EC31  F0E3         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  9314                           
  9315                           ; BSR set to: 62
  9316                           ;daq.c: 70:  ADCC_StartConversion(R.scan_index & 0xf);
  9317  01B56C  0100               	movlb	0	; () banked
  9318  01B56E  51E1               	movf	(_R+50)& (0+255),w,b	;volatile
  9319  01B570  0B0F               	andlw	15
  9320  01B572  6EE6               	movwf	postinc1,c
  9321  01B574  ECC8  F0E2         	call	_ADCC_StartConversion	;wreg free
  9322                           
  9323                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9324  01B578  0012               	return		;funcret
  9325  01B57A                     __end_of_start_adc_scan:
  9326                           	opt callstack 0
  9327                           
  9328 ;; *************** function _ADCC_StartConversion *****************
  9329 ;; Defined at:
  9330 ;;		line 128 in file "mcc_generated_files/adcc.c"
  9331 ;; Parameters:    Size  Location     Type
  9332 ;;  channel         1  [STACK] enum E16136
  9333 ;; Auto vars:     Size  Location     Type
  9334 ;;		None
  9335 ;; Return value:  Size  Location     Type
  9336 ;;                  1  [STACK] void 
  9337 ;; Registers used:
  9338 ;;		fsr1l, fsr1h
  9339 ;; Tracked objects:
  9340 ;;		On entry : 3F/0
  9341 ;;		On exit  : 3F/3E
  9342 ;;		Unchanged: 0/0
  9343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9348 ;;Total ram usage:        0 bytes
  9349 ;; Hardware stack levels used:    1
  9350 ;; Hardware stack levels required when called:   15
  9351 ;; This function calls:
  9352 ;;		Nothing
  9353 ;; This function is called by:
  9354 ;;		_start_adc_scan
  9355 ;;		_adc_int_t_handler
  9356 ;; This function uses a reentrant model
  9357 ;;
  9358                           
  9359                           	psect	text25
  9360  01C590                     __ptext25:
  9361                           	opt callstack 0
  9362  01C590                     _ADCC_StartConversion:
  9363                           	opt callstack 0
  9364                           
  9365                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  9366                           ;stkvar	_channel @ sp[(0)+-1]
  9367                           
  9368                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9369                           ;incstack = 0
  9370 ;; hardware stack exceeded
  9371  01C590  0EFF               	movlw	-1
  9372  01C592  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  9373                           
  9374                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  9375  01C598  013E               	movlb	62	; () banked
  9376  01C59A  8FF8               	bsf	248,7,b	;volatile
  9377                           
  9378                           ; BSR set to: 62
  9379                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  9380  01C59C  81F8               	bsf	248,0,b	;volatile
  9381                           
  9382                           ; BSR set to: 62
  9383                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  9384  01C59E  52E5               	movf	postdec1,f,c
  9385  01C5A0  0012               	return		;funcret
  9386  01C5A2                     __end_of_ADCC_StartConversion:
  9387                           	opt callstack 0
  9388                           
  9389 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  9390 ;; Defined at:
  9391 ;;		line 189 in file "mcc_generated_files/adcc.c"
  9392 ;; Parameters:    Size  Location     Type
  9393 ;;		None
  9394 ;; Auto vars:     Size  Location     Type
  9395 ;;		None
  9396 ;; Return value:  Size  Location     Type
  9397 ;;                  1  [STACK] void 
  9398 ;; Registers used:
  9399 ;;		wreg, status,2
  9400 ;; Tracked objects:
  9401 ;;		On entry : 0/0
  9402 ;;		On exit  : 3F/3E
  9403 ;;		Unchanged: 0/0
  9404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9409 ;;Total ram usage:        0 bytes
  9410 ;; Hardware stack levels used:    1
  9411 ;; Hardware stack levels required when called:   15
  9412 ;; This function calls:
  9413 ;;		Nothing
  9414 ;; This function is called by:
  9415 ;;		_start_adc_scan
  9416 ;;		_adc_int_t_handler
  9417 ;; This function uses a reentrant model
  9418 ;;
  9419                           
  9420                           	psect	text26
  9421  01C662                     __ptext26:
  9422                           	opt callstack 0
  9423  01C662                     _ADCC_DischargeSampleCapacitor:
  9424                           	opt callstack 0
  9425                           
  9426                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  9427                           
  9428                           ; BSR set to: 62
  9429                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9430                           ;incstack = 0
  9431 ;; hardware stack exceeded
  9432  01C662  0E3B               	movlw	59
  9433  01C664  013E               	movlb	62	; () banked
  9434  01C666  6FF1               	movwf	241,b	;volatile
  9435                           
  9436                           ; BSR set to: 62
  9437                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  9438  01C668  0012               	return		;funcret
  9439  01C66A                     __end_of_ADCC_DischargeSampleCapacitor:
  9440                           	opt callstack 0
  9441                           
  9442 ;; *************** function _clear_adc_scan *****************
  9443 ;; Defined at:
  9444 ;;		line 91 in file "daq.c"
  9445 ;; Parameters:    Size  Location     Type
  9446 ;;		None
  9447 ;; Auto vars:     Size  Location     Type
  9448 ;;		None
  9449 ;; Return value:  Size  Location     Type
  9450 ;;                  1  [STACK] void 
  9451 ;; Registers used:
  9452 ;;		None
  9453 ;; Tracked objects:
  9454 ;;		On entry : 0/0
  9455 ;;		On exit  : 3F/0
  9456 ;;		Unchanged: 0/0
  9457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9462 ;;Total ram usage:        0 bytes
  9463 ;; Hardware stack levels used:    1
  9464 ;; Hardware stack levels required when called:   15
  9465 ;; This function calls:
  9466 ;;		Nothing
  9467 ;; This function is called by:
  9468 ;;		_main
  9469 ;;		_update_adc_result
  9470 ;; This function uses a reentrant model
  9471 ;;
  9472                           
  9473                           	psect	text27
  9474  01C68A                     __ptext27:
  9475                           	opt callstack 0
  9476  01C68A                     _clear_adc_scan:
  9477                           	opt callstack 13
  9478                           
  9479                           ;daq.c: 93:  R.done = 0;
  9480                           
  9481                           ; BSR set to: 62
  9482                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9483                           ;incstack = 0
  9484  01C68A  0100               	movlb	0	; () banked
  9485  01C68C  6BE4               	clrf	(_R+53)& (0+255),b	;volatile
  9486                           
  9487                           ; BSR set to: 0
  9488                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9489  01C68E  0012               	return		;funcret
  9490  01C690                     __end_of_clear_adc_scan:
  9491                           	opt callstack 0
  9492                           
  9493 ;; *************** function _check_adc_scan *****************
  9494 ;; Defined at:
  9495 ;;		line 83 in file "daq.c"
  9496 ;; Parameters:    Size  Location     Type
  9497 ;;		None
  9498 ;; Auto vars:     Size  Location     Type
  9499 ;;		None
  9500 ;; Return value:  Size  Location     Type
  9501 ;;                  1  [STACK] _Bool 
  9502 ;; Registers used:
  9503 ;;		btemp
  9504 ;; Tracked objects:
  9505 ;;		On entry : 0/1
  9506 ;;		On exit  : 0/0
  9507 ;;		Unchanged: 0/0
  9508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9513 ;;Total ram usage:        0 bytes
  9514 ;; Hardware stack levels used:    1
  9515 ;; Hardware stack levels required when called:   15
  9516 ;; This function calls:
  9517 ;;		Nothing
  9518 ;; This function is called by:
  9519 ;;		_main
  9520 ;;		_update_adc_result
  9521 ;; This function uses a reentrant model
  9522 ;;
  9523                           
  9524                           	psect	text28
  9525  01C66A                     __ptext28:
  9526                           	opt callstack 0
  9527  01C66A                     _check_adc_scan:
  9528                           	opt callstack 13
  9529                           
  9530                           ;daq.c: 85:  return R.done;
  9531                           
  9532                           ; BSR set to: 0
  9533                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9534                           ;incstack = 0
  9535  01C66A  0060  F390  F001   	movff	_R+53,btemp	;volatile
  9536                           
  9537                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9538  01C670  0012               	return		;funcret
  9539  01C672                     __end_of_check_adc_scan:
  9540                           	opt callstack 0
  9541                           
  9542 ;; *************** function _set_load_relay_two *****************
  9543 ;; Defined at:
  9544 ;;		line 130 in file "mbmc.c"
  9545 ;; Parameters:    Size  Location     Type
  9546 ;;  mode            1  [STACK] const _Bool 
  9547 ;; Auto vars:     Size  Location     Type
  9548 ;;		None
  9549 ;; Return value:  Size  Location     Type
  9550 ;;                  1  [STACK] void 
  9551 ;; Registers used:
  9552 ;;		wreg, fsr1l, fsr1h
  9553 ;; Tracked objects:
  9554 ;;		On entry : 0/0
  9555 ;;		On exit  : 0/0
  9556 ;;		Unchanged: 0/0
  9557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9562 ;;Total ram usage:        0 bytes
  9563 ;; Hardware stack levels used:    1
  9564 ;; Hardware stack levels required when called:   15
  9565 ;; This function calls:
  9566 ;;		Nothing
  9567 ;; This function is called by:
  9568 ;;		_main
  9569 ;;		_esr_check
  9570 ;; This function uses a reentrant model
  9571 ;;
  9572                           
  9573                           	psect	text29
  9574  01C5A2                     __ptext29:
  9575                           	opt callstack 0
  9576  01C5A2                     _set_load_relay_two:
  9577                           	opt callstack 15
  9578                           
  9579                           ;mbmc.c: 130: void set_load_relay_two(const _Bool mode);mbmc.c: 131: {;mbmc.c: 132:  LAT
      +                          Dbits.LATD5 = mode;
  9580                           ;stkvar	_mode @ sp[(0)+-1]
  9581                           
  9582                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9583                           ;incstack = 0
  9584  01C5A2  0EFF               	movlw	-1
  9585  01C5A4  B0E3               	btfsc	plusw1,0,c
  9586  01C5A6  D002               	bra	u9625
  9587  01C5A8  9ABD               	bcf	189,5,c	;volatile
  9588  01C5AA  D001               	bra	u9626
  9589  01C5AC                     u9625:
  9590  01C5AC  8ABD               	bsf	189,5,c	;volatile
  9591  01C5AE                     u9626:
  9592                           
  9593                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  9594  01C5AE  52E5               	movf	postdec1,f,c
  9595  01C5B0  0012               	return		;funcret
  9596  01C5B2                     __end_of_set_load_relay_two:
  9597                           	opt callstack 0
  9598                           
  9599 ;; *************** function _set_load_relay_one *****************
  9600 ;; Defined at:
  9601 ;;		line 125 in file "mbmc.c"
  9602 ;; Parameters:    Size  Location     Type
  9603 ;;  mode            1  [STACK] const _Bool 
  9604 ;; Auto vars:     Size  Location     Type
  9605 ;;		None
  9606 ;; Return value:  Size  Location     Type
  9607 ;;                  1  [STACK] void 
  9608 ;; Registers used:
  9609 ;;		wreg, fsr1l, fsr1h
  9610 ;; Tracked objects:
  9611 ;;		On entry : 0/0
  9612 ;;		On exit  : 0/0
  9613 ;;		Unchanged: 0/0
  9614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9619 ;;Total ram usage:        0 bytes
  9620 ;; Hardware stack levels used:    1
  9621 ;; Hardware stack levels required when called:   15
  9622 ;; This function calls:
  9623 ;;		Nothing
  9624 ;; This function is called by:
  9625 ;;		_main
  9626 ;;		_esr_check
  9627 ;; This function uses a reentrant model
  9628 ;;
  9629                           
  9630                           	psect	text30
  9631  01C5B2                     __ptext30:
  9632                           	opt callstack 0
  9633  01C5B2                     _set_load_relay_one:
  9634                           	opt callstack 15
  9635                           
  9636                           ;mbmc.c: 125: void set_load_relay_one(const _Bool mode);mbmc.c: 126: {;mbmc.c: 127:  LAT
      +                          Dbits.LATD4 = mode;
  9637                           ;stkvar	_mode @ sp[(0)+-1]
  9638                           
  9639                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9640                           ;incstack = 0
  9641  01C5B2  0EFF               	movlw	-1
  9642  01C5B4  B0E3               	btfsc	plusw1,0,c
  9643  01C5B6  D002               	bra	u9615
  9644  01C5B8  98BD               	bcf	189,4,c	;volatile
  9645  01C5BA  D001               	bra	u9616
  9646  01C5BC                     u9615:
  9647  01C5BC  88BD               	bsf	189,4,c	;volatile
  9648  01C5BE                     u9616:
  9649                           
  9650                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  9651  01C5BE  52E5               	movf	postdec1,f,c
  9652  01C5C0  0012               	return		;funcret
  9653  01C5C2                     __end_of_set_load_relay_one:
  9654                           	opt callstack 0
  9655                           
  9656 ;; *************** function _eaDogM_WriteCommand *****************
  9657 ;; Defined at:
  9658 ;;		line 385 in file "eadog.c"
  9659 ;; Parameters:    Size  Location     Type
  9660 ;;  cmd             1  [STACK] const unsigned char 
  9661 ;; Auto vars:     Size  Location     Type
  9662 ;;		None
  9663 ;; Return value:  Size  Location     Type
  9664 ;;                  1  [STACK] void 
  9665 ;; Registers used:
  9666 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9667 ;; Tracked objects:
  9668 ;;		On entry : 3F/3D
  9669 ;;		On exit  : 3F/0
  9670 ;;		Unchanged: 0/0
  9671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9676 ;;Total ram usage:        0 bytes
  9677 ;; Hardware stack levels used:    1
  9678 ;; Hardware stack levels required when called:   26
  9679 ;; This function calls:
  9680 ;;		_send_lcd_cmd_dma
  9681 ;; This function is called by:
  9682 ;;		_main
  9683 ;; This function uses a reentrant model
  9684 ;;
  9685                           
  9686                           	psect	text31
  9687  01C5E2                     __ptext31:
  9688                           	opt callstack 0
  9689  01C5E2                     _eaDogM_WriteCommand:
  9690                           	opt callstack 4
  9691                           
  9692                           ;eadog.c: 385: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 386: {;eadog.c: 387:
      +                            send_lcd_cmd_dma(cmd);
  9693                           ;stkvar	_cmd @ sp[(0)+-1]
  9694                           
  9695                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9696                           ;incstack = 0
  9697  01C5E2  0EFF               	movlw	-1
  9698  01C5E4  50E3               	movf	plusw1,w,c
  9699  01C5E6  6EE6               	movwf	postinc1,c
  9700  01C5E8  EC2E  F0E2         	call	_send_lcd_cmd_dma	;wreg free
  9701                           
  9702                           ; BSR set to: 0
  9703                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  9704  01C5EC  52E5               	movf	postdec1,f,c
  9705  01C5EE  0012               	return		;funcret
  9706  01C5F0                     __end_of_eaDogM_WriteCommand:
  9707                           	opt callstack 0
  9708                           
  9709 ;; *************** function _convert_adc_data *****************
  9710 ;; Defined at:
  9711 ;;		line 51 in file "mbmc.c"
  9712 ;; Parameters:    Size  Location     Type
  9713 ;;		None
  9714 ;; Auto vars:     Size  Location     Type
  9715 ;;  i               1  [STACK] unsigned char 
  9716 ;; Return value:  Size  Location     Type
  9717 ;;                  1  [STACK] void 
  9718 ;; Registers used:
  9719 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9720 ;; Tracked objects:
  9721 ;;		On entry : 0/1
  9722 ;;		On exit  : 0/0
  9723 ;;		Unchanged: 0/0
  9724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9729 ;;Total ram usage:        0 bytes
  9730 ;; Hardware stack levels used:    1
  9731 ;; Hardware stack levels required when called:   18
  9732 ;; This function calls:
  9733 ;;		_conv_raw_result
  9734 ;;		_lp_filter
  9735 ;; This function is called by:
  9736 ;;		_main
  9737 ;; This function uses a reentrant model
  9738 ;;
  9739                           
  9740                           	psect	text32
  9741  01A87C                     __ptext32:
  9742                           	opt callstack 0
  9743  01A87C                     _convert_adc_data:
  9744                           	opt callstack 0
  9745                           
  9746                           ; BSR set to: 0
  9747                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9748  01A87C  52E6               	movf	postinc1,f,c
  9749                           
  9750                           ;mbmc.c: 53:  uint8_t i = 0;
  9751                           ;stkvar	_i @ sp[(-1)+0]
  9752                           
  9753                           ;incstack = 0
  9754  01A87E  0EFF               	movlw	-1
  9755  01A880  6AE3               	clrf	plusw1,c
  9756  01A882                     l11306:
  9757                           
  9758                           ;mbmc.c: 56:   if (V.calib) {
  9759  01A882  0101               	movlb	1	; () banked
  9760  01A884  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
  9761  01A886  B4D8               	btfsc	status,2,c
  9762  01A888  D01B               	goto	l11310
  9763                           
  9764                           ; BSR set to: 1
  9765                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  9766  01A88A  0E01               	movlw	1
  9767  01A88C  6EE6               	movwf	postinc1,c
  9768                           
  9769                           ;stkvar	_i @ sp[(-2)+0]
  9770  01A88E  0EFE               	movlw	-2
  9771  01A890  50E3               	movf	plusw1,w,c
  9772  01A892  6EE6               	movwf	postinc1,c
  9773  01A894  0E01               	movlw	1
  9774  01A896  6EE6               	movwf	postinc1,c
  9775                           
  9776                           ;stkvar	_i @ sp[(-4)+0]
  9777  01A898  0EFC               	movlw	-4
  9778  01A89A  50E3               	movf	plusw1,w,c
  9779  01A89C  6EE6               	movwf	postinc1,c
  9780  01A89E  ECB3  F0A9         	call	_conv_raw_result	;wreg free
  9781  01A8A2  0060  F007  FFE6   	movff	btemp,postinc1
  9782  01A8A8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9783  01A8AE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9784  01A8B4  0060  F013  FFE6   	movff	btemp+3,postinc1
  9785  01A8BA  EC67  F0C4         	call	_lp_filter	;wreg free
  9786  01A8BE  D01A               	goto	L9
  9787  01A8C0                     l11310:
  9788                           
  9789                           ; BSR set to: 1
  9790                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  9791  01A8C0  0E00               	movlw	0
  9792  01A8C2  6EE6               	movwf	postinc1,c
  9793                           
  9794                           ;stkvar	_i @ sp[(-2)+0]
  9795  01A8C4  0EFE               	movlw	-2
  9796  01A8C6  50E3               	movf	plusw1,w,c
  9797  01A8C8  6EE6               	movwf	postinc1,c
  9798  01A8CA  0E00               	movlw	0
  9799  01A8CC  6EE6               	movwf	postinc1,c
  9800                           
  9801                           ;stkvar	_i @ sp[(-4)+0]
  9802  01A8CE  0EFC               	movlw	-4
  9803  01A8D0  50E3               	movf	plusw1,w,c
  9804  01A8D2  6EE6               	movwf	postinc1,c
  9805  01A8D4  ECB3  F0A9         	call	_conv_raw_result	;wreg free
  9806  01A8D8  0060  F007  FFE6   	movff	btemp,postinc1
  9807  01A8DE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9808  01A8E4  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9809  01A8EA  0060  F013  FFE6   	movff	btemp+3,postinc1
  9810  01A8F0  EC67  F0C4         	call	_lp_filter	;wreg free
  9811  01A8F4                     L9:
  9812                           
  9813                           ;stkvar	_i @ sp[(-1)+0]
  9814  01A8F4  0EFF               	movlw	-1
  9815  01A8F6  50E3               	movf	plusw1,w,c
  9816  01A8F8  0D04               	mullw	4
  9817  01A8FA  0EFF               	movlw	low _C
  9818  01A8FC  24F3               	addwf	243,w,c
  9819  01A8FE  6ED9               	movwf	fsr2l,c
  9820  01A900  0E06               	movlw	high _C
  9821  01A902  20F4               	addwfc	prodh,w,c
  9822  01A904  6EDA               	movwf	fsr2h,c
  9823  01A906  0060  F007  FFDE   	movff	btemp,postinc2
  9824  01A90C  0060  F00B  FFDE   	movff	btemp+1,postinc2
  9825  01A912  0060  F00F  FFDE   	movff	btemp+2,postinc2
  9826  01A918  0060  F013  FFDE   	movff	btemp+3,postinc2
  9827                           
  9828                           ;mbmc.c: 61:  } while (++i < 16);
  9829                           ;stkvar	_i @ sp[(-1)+0]
  9830  01A91E  0EFF               	movlw	-1
  9831  01A920  2AE3               	incf	plusw1,f,c
  9832  01A922  0EFF               	movlw	-1
  9833  01A924  006F FF8C  F001    	movff	plusw1,btemp
  9834  01A92A  0E0F               	movlw	15
  9835  01A92C  6401               	cpfsgt	btemp^0,c
  9836  01A92E  D7A9               	goto	l11306
  9837                           
  9838                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  9839  01A930  52E5               	movf	postdec1,f,c
  9840  01A932  0012               	return		;funcret
  9841  01A934                     __end_of_convert_adc_data:
  9842                           	opt callstack 0
  9843                           
  9844 ;; *************** function _clear_hid_pflags *****************
  9845 ;; Defined at:
  9846 ;;		line 67 in file "hid.c"
  9847 ;; Parameters:    Size  Location     Type
  9848 ;;  h               2  [STACK] PTR struct H_data
  9849 ;;		 -> H(9), 
  9850 ;; Auto vars:     Size  Location     Type
  9851 ;;		None
  9852 ;; Return value:  Size  Location     Type
  9853 ;;                  1  [STACK] void 
  9854 ;; Registers used:
  9855 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
  9856 ;; Tracked objects:
  9857 ;;		On entry : 3E/0
  9858 ;;		On exit  : 0/0
  9859 ;;		Unchanged: 0/0
  9860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9865 ;;Total ram usage:        0 bytes
  9866 ;; Hardware stack levels used:    1
  9867 ;; Hardware stack levels required when called:   15
  9868 ;; This function calls:
  9869 ;;		Nothing
  9870 ;; This function is called by:
  9871 ;;		_main
  9872 ;; This function uses a reentrant model
  9873 ;;
  9874                           
  9875                           	psect	text33
  9876  01B44A                     __ptext33:
  9877                           	opt callstack 0
  9878  01B44A                     _clear_hid_pflags:
  9879                           	opt callstack 15
  9880                           
  9881                           ;hid.c: 67: void clear_hid_pflags(H_data* h);hid.c: 68: {;hid.c: 69:  h->select_p = SW_O
      +                          FF;
  9882                           ;stkvar	_h @ sp[(0)+-2]
  9883                           
  9884                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9885                           ;incstack = 0
  9886  01B44A  0EFE               	movlw	-2
  9887  01B44C  006F FF8C  F00B    	movff	plusw1,btemp+10
  9888  01B452  0EFF               	movlw	-1
  9889  01B454  006F FF8C  F00C    	movff	plusw1,btemp+11
  9890  01B45A  0E03               	movlw	3
  9891  01B45C  240B               	addwf	(btemp+10)^0,w,c
  9892  01B45E  6ED9               	movwf	fsr2l,c
  9893  01B460  0E00               	movlw	0
  9894  01B462  200C               	addwfc	(btemp+11)^0,w,c
  9895  01B464  6EDA               	movwf	fsr2h,c
  9896  01B466  0E00               	movlw	0
  9897  01B468  6EDF               	movwf	indf2,c
  9898                           
  9899                           ;hid.c: 70:  h->enter_p = SW_OFF;
  9900                           ;stkvar	_h @ sp[(0)+-2]
  9901  01B46A  0EFE               	movlw	-2
  9902  01B46C  006F FF8C  F00B    	movff	plusw1,btemp+10
  9903  01B472  0EFF               	movlw	-1
  9904  01B474  006F FF8C  F00C    	movff	plusw1,btemp+11
  9905  01B47A  0E05               	movlw	5
  9906  01B47C  240B               	addwf	(btemp+10)^0,w,c
  9907  01B47E  6ED9               	movwf	fsr2l,c
  9908  01B480  0E00               	movlw	0
  9909  01B482  200C               	addwfc	(btemp+11)^0,w,c
  9910  01B484  6EDA               	movwf	fsr2h,c
  9911  01B486  0E00               	movlw	0
  9912  01B488  6EDF               	movwf	indf2,c
  9913                           
  9914                           ;hid.c: 71:  h->calib_p = SW_OFF;
  9915                           ;stkvar	_h @ sp[(0)+-2]
  9916  01B48A  0EFE               	movlw	-2
  9917  01B48C  006F FF8C  F00B    	movff	plusw1,btemp+10
  9918  01B492  0EFF               	movlw	-1
  9919  01B494  006F FF8C  F00C    	movff	plusw1,btemp+11
  9920  01B49A  0E07               	movlw	7
  9921  01B49C  240B               	addwf	(btemp+10)^0,w,c
  9922  01B49E  6ED9               	movwf	fsr2l,c
  9923  01B4A0  0E00               	movlw	0
  9924  01B4A2  200C               	addwfc	(btemp+11)^0,w,c
  9925  01B4A4  6EDA               	movwf	fsr2h,c
  9926  01B4A6  0E00               	movlw	0
  9927  01B4A8  6EDF               	movwf	indf2,c
  9928                           
  9929                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
  9930  01B4AA  52E5               	movf	postdec1,f,c
  9931  01B4AC  52E5               	movf	postdec1,f,c
  9932  01B4AE  0012               	return		;funcret
  9933  01B4B0                     __end_of_clear_hid_pflags:
  9934                           	opt callstack 0
  9935                           
  9936 ;; *************** function _check_help *****************
  9937 ;; Defined at:
  9938 ;;		line 40 in file "mconfig.c"
  9939 ;; Parameters:    Size  Location     Type
  9940 ;;  flipper         1  [STACK] const _Bool 
  9941 ;; Auto vars:     Size  Location     Type
  9942 ;;  estatus         1    0        _Bool 
  9943 ;; Return value:  Size  Location     Type
  9944 ;;                  1  [STACK] _Bool 
  9945 ;; Registers used:
  9946 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9947 ;; Tracked objects:
  9948 ;;		On entry : 3F/1
  9949 ;;		On exit  : 0/0
  9950 ;;		Unchanged: 0/0
  9951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9956 ;;Total ram usage:        0 bytes
  9957 ;; Hardware stack levels used:    1
  9958 ;; Hardware stack levels required when called:   28
  9959 ;; This function calls:
  9960 ;;		_StartTimer
  9961 ;;		_TimerDone
  9962 ;;		_display_help
  9963 ;;		_display_info
  9964 ;;		_get_vterm_ptr
  9965 ;;		_help_button
  9966 ;;		_mode_lamp_bright
  9967 ;;		_mode_lamp_dim
  9968 ;;		_set_display_info
  9969 ;;		_set_temp_display_help
  9970 ;;		_set_vterm
  9971 ;;		_sprintf
  9972 ;;		_update_lcd
  9973 ;;		_vterm_dump
  9974 ;; This function is called by:
  9975 ;;		_main
  9976 ;; This function uses a reentrant model
  9977 ;;
  9978                           
  9979                           	psect	text34
  9980  0184B8                     __ptext34:
  9981                           	opt callstack 0
  9982  0184B8                     _check_help:
  9983                           	opt callstack 2
  9984                           
  9985                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  9986                           
  9987                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9988                           ;incstack = 0
  9989  0184B8  EC8E  F0DE         	call	_help_button	;wreg free
  9990  0184BC  5001               	movf	btemp^0,w,c
  9991  0184BE  B4D8               	btfsc	status,2,c
  9992  0184C0  D0D0               	goto	l13398
  9993  0184C2  EC39  F0E3         	call	_display_info	;wreg free
  9994  0184C6  0401               	decf	btemp^0,w,c
  9995  0184C8  B4D8               	btfsc	status,2,c
  9996  0184CA  D0CB               	goto	l13398
  9997                           
  9998                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  9999  0184CC  0EDC               	movlw	220
 10000  0184CE  6EE6               	movwf	postinc1,c
 10001  0184D0  0E05               	movlw	5
 10002  0184D2  6EE6               	movwf	postinc1,c
 10003  0184D4  0E0B               	movlw	11
 10004  0184D6  6EE6               	movwf	postinc1,c
 10005  0184D8  ECF2  F0DD         	call	_StartTimer	;wreg free
 10006                           
 10007                           ;mconfig.c: 48:   if (V.debug)
 10008  0184DC  0101               	movlb	1	; () banked
 10009  0184DE  B3A2               	btfsc	(_V+155)& (0+255),1,b	;volatile
 10010                           
 10011                           ; BSR set to: 1
 10012                           ;mconfig.c: 49:    vterm_dump();
 10013  0184E0  EC03  F0CD         	call	_vterm_dump	;wreg free
 10014                           
 10015                           ;mconfig.c: 51:   set_vterm(1);
 10016  0184E4  0E01               	movlw	1
 10017  0184E6  6EE6               	movwf	postinc1,c
 10018  0184E8  EC3D  F0E2         	call	_set_vterm	;wreg free
 10019                           
 10020                           ;mconfig.c: 52:   set_temp_display_help(display_info());
 10021  0184EC  EC39  F0E3         	call	_display_info	;wreg free
 10022  0184F0  5001               	movf	btemp^0,w,c
 10023  0184F2  6EE6               	movwf	postinc1,c
 10024  0184F4  ECE1  F0E2         	call	_set_temp_display_help	;wreg free
 10025                           
 10026                           ; BSR set to: 1
 10027                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
 10028  0184F8  0E01               	movlw	1
 10029  0184FA  6EE6               	movwf	postinc1,c
 10030  0184FC  EC4C  F0E2         	call	_set_display_info	;wreg free
 10031                           
 10032                           ;mconfig.c: 54:   if (flipper) {
 10033                           ;stkvar	_flipper @ sp[(0)+-1]
 10034  018500  0EFF               	movlw	-1
 10035  018502  50E3               	movf	plusw1,w,c
 10036  018504  B4D8               	btfsc	status,2,c
 10037  018506  D019               	goto	l13384
 10038                           
 10039                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
 10040  018508  0EB3               	movlw	low STR_45
 10041  01850A  6EE6               	movwf	postinc1,c
 10042  01850C  0EFF               	movlw	high STR_45
 10043  01850E  6EE6               	movwf	postinc1,c
 10044  018510  0E5D               	movlw	low STR_47
 10045  018512  6EE6               	movwf	postinc1,c
 10046  018514  0EFF               	movlw	high STR_47
 10047  018516  6EE6               	movwf	postinc1,c
 10048  018518  0E01               	movlw	1
 10049  01851A  6EE6               	movwf	postinc1,c
 10050  01851C  0E00               	movlw	0
 10051  01851E  6EE6               	movwf	postinc1,c
 10052  018520  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
 10053  018524  0060  F007  FFE6   	movff	btemp,postinc1
 10054  01852A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10055  018530  0E06               	movlw	6
 10056  018532  6EE6               	movwf	postinc1,c
 10057  018534  EC56  F0D0         	call	_sprintf	;wreg free
 10058                           
 10059                           ;mconfig.c: 56:   } else {
 10060  018538  D018               	goto	l1684
 10061  01853A                     l13384:
 10062                           
 10063                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
 10064  01853A  0EC9               	movlw	low STR_46
 10065  01853C  6EE6               	movwf	postinc1,c
 10066  01853E  0EFF               	movlw	high STR_46
 10067  018540  6EE6               	movwf	postinc1,c
 10068  018542  0E5D               	movlw	low STR_47
 10069  018544  6EE6               	movwf	postinc1,c
 10070  018546  0EFF               	movlw	high STR_47
 10071  018548  6EE6               	movwf	postinc1,c
 10072  01854A  0E01               	movlw	1
 10073  01854C  6EE6               	movwf	postinc1,c
 10074  01854E  0E00               	movlw	0
 10075  018550  6EE6               	movwf	postinc1,c
 10076  018552  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
 10077  018556  0060  F007  FFE6   	movff	btemp,postinc1
 10078  01855C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10079  018562  0E06               	movlw	6
 10080  018564  6EE6               	movwf	postinc1,c
 10081  018566  EC56  F0D0         	call	_sprintf	;wreg free
 10082  01856A                     l1684:
 10083                           
 10084                           ; BSR set to: 0
 10085                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
 10086  01856A  0101               	movlb	1	; () banked
 10087  01856C  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
 10088  01856E  32E8               	rrcf	wreg,f,c
 10089  018570  32E8               	rrcf	wreg,f,c
 10090  018572  0B03               	andlw	3
 10091  018574  0D24               	mullw	36
 10092  018576  0E12               	movlw	18
 10093  018578  26F3               	addwf	243,f,c
 10094  01857A  0E00               	movlw	0
 10095  01857C  22F4               	addwfc	244,f,c
 10096  01857E  0EAF               	movlw	low _T
 10097  018580  6E0B               	movwf	(btemp+10)^0,c
 10098  018582  0EFA               	movlw	high _T
 10099  018584  6E0C               	movwf	(btemp+11)^0,c
 10100  018586  50F3               	movf	243,w,c
 10101  018588  260B               	addwf	(btemp+10)^0,f,c
 10102  01858A  50F4               	movf	244,w,c
 10103  01858C  220C               	addwfc	(btemp+11)^0,f,c
 10104  01858E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10105  018594  0060  F033  FFE6   	movff	btemp+11,postinc1
 10106  01859A  0EBF               	movlw	low STR_49
 10107  01859C  6EE6               	movwf	postinc1,c
 10108  01859E  0EFF               	movlw	high STR_49
 10109  0185A0  6EE6               	movwf	postinc1,c
 10110  0185A2  0E01               	movlw	1
 10111  0185A4  6EE6               	movwf	postinc1,c
 10112  0185A6  0E01               	movlw	1
 10113  0185A8  6EE6               	movwf	postinc1,c
 10114  0185AA  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
 10115  0185AE  0060  F007  FFE6   	movff	btemp,postinc1
 10116  0185B4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10117  0185BA  0E06               	movlw	6
 10118  0185BC  6EE6               	movwf	postinc1,c
 10119  0185BE  EC56  F0D0         	call	_sprintf	;wreg free
 10120                           
 10121                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
 10122  0185C2  0101               	movlb	1	; () banked
 10123  0185C4  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
 10124  0185C6  32E8               	rrcf	wreg,f,c
 10125  0185C8  32E8               	rrcf	wreg,f,c
 10126  0185CA  0B03               	andlw	3
 10127  0185CC  0D24               	mullw	36
 10128  0185CE  0EAF               	movlw	low _T
 10129  0185D0  6E0B               	movwf	(btemp+10)^0,c
 10130  0185D2  0EFA               	movlw	high _T
 10131  0185D4  6E0C               	movwf	(btemp+11)^0,c
 10132  0185D6  50F3               	movf	243,w,c
 10133  0185D8  260B               	addwf	(btemp+10)^0,f,c
 10134  0185DA  50F4               	movf	244,w,c
 10135  0185DC  220C               	addwfc	(btemp+11)^0,f,c
 10136  0185DE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10137  0185E4  0060  F033  FFE6   	movff	btemp+11,postinc1
 10138  0185EA  0EBF               	movlw	low STR_49
 10139  0185EC  6EE6               	movwf	postinc1,c
 10140  0185EE  0EFF               	movlw	high STR_49
 10141  0185F0  6EE6               	movwf	postinc1,c
 10142  0185F2  0E01               	movlw	1
 10143  0185F4  6EE6               	movwf	postinc1,c
 10144  0185F6  0E02               	movlw	2
 10145  0185F8  6EE6               	movwf	postinc1,c
 10146  0185FA  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
 10147  0185FE  0060  F007  FFE6   	movff	btemp,postinc1
 10148  018604  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10149  01860A  0E06               	movlw	6
 10150  01860C  6EE6               	movwf	postinc1,c
 10151  01860E  EC56  F0D0         	call	_sprintf	;wreg free
 10152                           
 10153                           ; BSR set to: 0
 10154                           ;mconfig.c: 61:   V.help_id++;
 10155  018612  EE20  F1A2         	lfsr	2,_V+155	;volatile
 10156  018616  38DF               	swapf	223,w,c
 10157  018618  6E0C               	movwf	(btemp+11)^0,c
 10158  01861A  320C               	rrcf	(btemp+11)^0,f,c
 10159  01861C  300C               	rrcf	(btemp+11)^0,w,c
 10160  01861E  0B03               	andlw	3
 10161  018620  6E0C               	movwf	(btemp+11)^0,c
 10162  018622  2A0C               	incf	(btemp+11)^0,f,c
 10163  018624  3A0C               	swapf	(btemp+11)^0,f,c
 10164  018626  360C               	rlcf	(btemp+11)^0,f,c
 10165  018628  360C               	rlcf	(btemp+11)^0,f,c
 10166  01862A  50DF               	movf	223,w,c
 10167  01862C  180C               	xorwf	(btemp+11)^0,w,c
 10168  01862E  0B3F               	andlw	-193
 10169  018630  180C               	xorwf	(btemp+11)^0,w,c
 10170  018632  6EDF               	movwf	223,c
 10171                           
 10172                           ; BSR set to: 0
 10173                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
 10174  018634  0EB8               	movlw	184
 10175  018636  6EE6               	movwf	postinc1,c
 10176  018638  0E0B               	movlw	11
 10177  01863A  6EE6               	movwf	postinc1,c
 10178  01863C  0E09               	movlw	9
 10179  01863E  6EE6               	movwf	postinc1,c
 10180  018640  ECF2  F0DD         	call	_StartTimer	;wreg free
 10181                           
 10182                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
 10183  018644  0EB8               	movlw	184
 10184  018646  6EE6               	movwf	postinc1,c
 10185  018648  0E0B               	movlw	11
 10186  01864A  6EE6               	movwf	postinc1,c
 10187  01864C  0E07               	movlw	7
 10188  01864E  6EE6               	movwf	postinc1,c
 10189  018650  ECF2  F0DD         	call	_StartTimer	;wreg free
 10190                           
 10191                           ;mconfig.c: 64:   mode_lamp_bright();
 10192  018654  ECF8  F0E2         	call	_mode_lamp_bright	;wreg free
 10193                           
 10194                           ;mconfig.c: 65:   update_lcd(1);
 10195  018658  0E01               	movlw	1
 10196  01865A  6EE6               	movwf	postinc1,c
 10197  01865C  ECCE  F0CF         	call	_update_lcd	;wreg free
 10198                           
 10199                           ;mconfig.c: 67:  } else {
 10200  018660  D032               	goto	l1685
 10201  018662                     l13398:
 10202                           
 10203                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
 10204  018662  0E09               	movlw	9
 10205  018664  6EE6               	movwf	postinc1,c
 10206  018666  EC47  F0E0         	call	_TimerDone	;wreg free
 10207  01866A  5001               	movf	btemp^0,w,c
 10208  01866C  B4D8               	btfsc	status,2,c
 10209  01866E  D02B               	goto	l1685
 10210                           
 10211                           ;mconfig.c: 69:    set_vterm(0);
 10212  018670  0E00               	movlw	0
 10213  018672  6EE6               	movwf	postinc1,c
 10214  018674  EC3D  F0E2         	call	_set_vterm	;wreg free
 10215                           
 10216                           ;mconfig.c: 70:    V.help = 0;
 10217  018678  0101               	movlb	1	; () banked
 10218  01867A  95A2               	bcf	(_V+155)& (0+255),2,b	;volatile
 10219                           
 10220                           ; BSR set to: 1
 10221                           ;mconfig.c: 71:    set_display_info(display_help());
 10222  01867C  EC3D  F0E3         	call	_display_help	;wreg free
 10223  018680  5001               	movf	btemp^0,w,c
 10224  018682  6EE6               	movwf	postinc1,c
 10225  018684  EC4C  F0E2         	call	_set_display_info	;wreg free
 10226                           
 10227                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
 10228  018688  0060  F673  FFE6   	movff	_V+149,postinc1
 10229  01868E  0060  F677  FFE6   	movff	_V+150,postinc1
 10230  018694  EC85  F0E2         	call	_mode_lamp_dim	;wreg free
 10231                           
 10232                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
 10233  018698  0E0B               	movlw	11
 10234  01869A  6EE6               	movwf	postinc1,c
 10235  01869C  EC47  F0E0         	call	_TimerDone	;wreg free
 10236  0186A0  5001               	movf	btemp^0,w,c
 10237  0186A2  B4D8               	btfsc	status,2,c
 10238  0186A4  D010               	goto	l1685
 10239                           
 10240                           ;mconfig.c: 74:     V.flipper = !V.flipper;
 10241  0186A6  0101               	movlb	1	; () banked
 10242  0186A8  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
 10243  0186AA  A4D8               	btfss	status,2,c
 10244  0186AC  D002               	goto	u12870
 10245  0186AE  0E01               	movlw	1
 10246  0186B0  D001               	goto	u12880
 10247  0186B2                     u12870:
 10248  0186B2  0E00               	movlw	0
 10249  0186B4                     u12880:
 10250  0186B4  6FB2               	movwf	(_V+171)& (0+255),b	;volatile
 10251                           
 10252                           ; BSR set to: 1
 10253                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
 10254  0186B6  0EDC               	movlw	220
 10255  0186B8  6EE6               	movwf	postinc1,c
 10256  0186BA  0E05               	movlw	5
 10257  0186BC  6EE6               	movwf	postinc1,c
 10258  0186BE  0E0B               	movlw	11
 10259  0186C0  6EE6               	movwf	postinc1,c
 10260  0186C2  ECF2  F0DD         	call	_StartTimer	;wreg free
 10261  0186C6                     l1685:
 10262                           
 10263                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 10264  0186C6  52E5               	movf	postdec1,f,c
 10265  0186C8  0012               	return		;funcret
 10266  0186CA                     __end_of_check_help:
 10267                           	opt callstack 0
 10268                           
 10269 ;; *************** function _vterm_dump *****************
 10270 ;; Defined at:
 10271 ;;		line 121 in file "mconfig.c"
 10272 ;; Parameters:    Size  Location     Type
 10273 ;;		None
 10274 ;; Auto vars:     Size  Location     Type
 10275 ;;		None
 10276 ;; Return value:  Size  Location     Type
 10277 ;;                  1  [STACK] void 
 10278 ;; Registers used:
 10279 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10280 ;; Tracked objects:
 10281 ;;		On entry : 3F/1
 10282 ;;		On exit  : 0/0
 10283 ;;		Unchanged: 0/0
 10284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10289 ;;Total ram usage:        0 bytes
 10290 ;; Hardware stack levels used:    1
 10291 ;; Hardware stack levels required when called:   27
 10292 ;; This function calls:
 10293 ;;		_WaitMs
 10294 ;;		_eaDogM_WriteStringAtPos
 10295 ;;		_get_vterm_ptr
 10296 ;;		_sprintf
 10297 ;;		_wait_lcd_done
 10298 ;; This function is called by:
 10299 ;;		_check_help
 10300 ;; This function uses a reentrant model
 10301 ;;
 10302                           
 10303                           	psect	text35
 10304  019A06                     __ptext35:
 10305                           	opt callstack 0
 10306  019A06                     _vterm_dump:
 10307                           	opt callstack 2
 10308                           
 10309                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
 10310                           
 10311                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10312                           ;incstack = 0
 10313  019A06  0E01               	movlw	1
 10314  019A08  6EE6               	movwf	postinc1,c
 10315  019A0A  0E00               	movlw	0
 10316  019A0C  6EE6               	movwf	postinc1,c
 10317  019A0E  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
 10318  019A12  0060  F007  FFE6   	movff	btemp,postinc1
 10319  019A18  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10320  019A1E  0E00               	movlw	0
 10321  019A20  6EE6               	movwf	postinc1,c
 10322  019A22  0E00               	movlw	0
 10323  019A24  6EE6               	movwf	postinc1,c
 10324  019A26  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
 10325  019A2A  0060  F007  FFE6   	movff	btemp,postinc1
 10326  019A30  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10327  019A36  0EA4               	movlw	low STR_51
 10328  019A38  6EE6               	movwf	postinc1,c
 10329  019A3A  0EFF               	movlw	high STR_51
 10330  019A3C  6EE6               	movwf	postinc1,c
 10331  019A3E  0E08               	movlw	low (_V+1)
 10332  019A40  6EE6               	movwf	postinc1,c
 10333  019A42  0E01               	movlw	high (_V+1)
 10334  019A44  6EE6               	movwf	postinc1,c
 10335  019A46  0E08               	movlw	8
 10336  019A48  6EE6               	movwf	postinc1,c
 10337  019A4A  EC56  F0D0         	call	_sprintf	;wreg free
 10338                           
 10339                           ; BSR set to: 0
 10340                           ;mconfig.c: 124:  wait_lcd_done();
 10341  019A4E  ECCC  F0E1         	call	_wait_lcd_done	;wreg free
 10342                           
 10343                           ; BSR set to: 0
 10344                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 10345  019A52  0E08               	movlw	low (_V+1)
 10346  019A54  6EE6               	movwf	postinc1,c
 10347  019A56  0E01               	movlw	high (_V+1)
 10348  019A58  6EE6               	movwf	postinc1,c
 10349  019A5A  0E00               	movlw	0
 10350  019A5C  6EE6               	movwf	postinc1,c
 10351  019A5E  0E00               	movlw	0
 10352  019A60  6EE6               	movwf	postinc1,c
 10353  019A62  ECF7  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10354                           
 10355                           ; BSR set to: 59
 10356                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
 10357  019A66  0E01               	movlw	1
 10358  019A68  6EE6               	movwf	postinc1,c
 10359  019A6A  0E01               	movlw	1
 10360  019A6C  6EE6               	movwf	postinc1,c
 10361  019A6E  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
 10362  019A72  0060  F007  FFE6   	movff	btemp,postinc1
 10363  019A78  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10364  019A7E  0E00               	movlw	0
 10365  019A80  6EE6               	movwf	postinc1,c
 10366  019A82  0E01               	movlw	1
 10367  019A84  6EE6               	movwf	postinc1,c
 10368  019A86  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
 10369  019A8A  0060  F007  FFE6   	movff	btemp,postinc1
 10370  019A90  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10371  019A96  0EA4               	movlw	low STR_51
 10372  019A98  6EE6               	movwf	postinc1,c
 10373  019A9A  0EFF               	movlw	high STR_51
 10374  019A9C  6EE6               	movwf	postinc1,c
 10375  019A9E  0E08               	movlw	low (_V+1)
 10376  019AA0  6EE6               	movwf	postinc1,c
 10377  019AA2  0E01               	movlw	high (_V+1)
 10378  019AA4  6EE6               	movwf	postinc1,c
 10379  019AA6  0E08               	movlw	8
 10380  019AA8  6EE6               	movwf	postinc1,c
 10381  019AAA  EC56  F0D0         	call	_sprintf	;wreg free
 10382                           
 10383                           ; BSR set to: 0
 10384                           ;mconfig.c: 127:  wait_lcd_done();
 10385  019AAE  ECCC  F0E1         	call	_wait_lcd_done	;wreg free
 10386                           
 10387                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 10388  019AB2  0E08               	movlw	low (_V+1)
 10389  019AB4  6EE6               	movwf	postinc1,c
 10390  019AB6  0E01               	movlw	high (_V+1)
 10391  019AB8  6EE6               	movwf	postinc1,c
 10392  019ABA  0E00               	movlw	0
 10393  019ABC  6EE6               	movwf	postinc1,c
 10394  019ABE  0E01               	movlw	1
 10395  019AC0  6EE6               	movwf	postinc1,c
 10396  019AC2  ECF7  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10397                           
 10398                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
 10399  019AC6  0E01               	movlw	1
 10400  019AC8  6EE6               	movwf	postinc1,c
 10401  019ACA  0E02               	movlw	2
 10402  019ACC  6EE6               	movwf	postinc1,c
 10403  019ACE  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
 10404  019AD2  0060  F007  FFE6   	movff	btemp,postinc1
 10405  019AD8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10406  019ADE  0E00               	movlw	0
 10407  019AE0  6EE6               	movwf	postinc1,c
 10408  019AE2  0E02               	movlw	2
 10409  019AE4  6EE6               	movwf	postinc1,c
 10410  019AE6  ECC4  F0DF         	call	_get_vterm_ptr	;wreg free
 10411  019AEA  0060  F007  FFE6   	movff	btemp,postinc1
 10412  019AF0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10413  019AF6  0EA4               	movlw	low STR_51
 10414  019AF8  6EE6               	movwf	postinc1,c
 10415  019AFA  0EFF               	movlw	high STR_51
 10416  019AFC  6EE6               	movwf	postinc1,c
 10417  019AFE  0E08               	movlw	low (_V+1)
 10418  019B00  6EE6               	movwf	postinc1,c
 10419  019B02  0E01               	movlw	high (_V+1)
 10420  019B04  6EE6               	movwf	postinc1,c
 10421  019B06  0E08               	movlw	8
 10422  019B08  6EE6               	movwf	postinc1,c
 10423  019B0A  EC56  F0D0         	call	_sprintf	;wreg free
 10424                           
 10425                           ; BSR set to: 0
 10426                           ;mconfig.c: 130:  wait_lcd_done();
 10427  019B0E  ECCC  F0E1         	call	_wait_lcd_done	;wreg free
 10428                           
 10429                           ; BSR set to: 0
 10430                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 10431  019B12  0E08               	movlw	low (_V+1)
 10432  019B14  6EE6               	movwf	postinc1,c
 10433  019B16  0E01               	movlw	high (_V+1)
 10434  019B18  6EE6               	movwf	postinc1,c
 10435  019B1A  0E00               	movlw	0
 10436  019B1C  6EE6               	movwf	postinc1,c
 10437  019B1E  0E02               	movlw	2
 10438  019B20  6EE6               	movwf	postinc1,c
 10439  019B22  ECF7  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10440                           
 10441                           ; BSR set to: 59
 10442                           ;mconfig.c: 132:  WaitMs(3000);
 10443  019B26  0EB8               	movlw	184
 10444  019B28  6EE6               	movwf	postinc1,c
 10445  019B2A  0E0B               	movlw	11
 10446  019B2C  6EE6               	movwf	postinc1,c
 10447  019B2E  ECE1  F0DE         	call	_WaitMs	;wreg free
 10448                           
 10449                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 10450  019B32  0012               	return		;funcret
 10451  019B34                     __end_of_vterm_dump:
 10452                           	opt callstack 0
 10453                           
 10454 ;; *************** function _sprintf *****************
 10455 ;; Defined at:
 10456 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 10457 ;; Parameters:    Size  Location     Type
 10458 ;;  s               2  [STACK] PTR unsigned char 
 10459 ;;		 -> D.lcd(480), D(482), port_data(512), V(191), 
 10460 ;;  fmt             2  [STACK] PTR const unsigned char 
 10461 ;;		 -> STR_64(127), STR_62(3), STR_61(3), STR_60(19), 
 10462 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 10463 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 10464 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 10465 ;;		 -> STR_47(19), STR_42(22), STR_41(22), STR_40(22), 
 10466 ;;		 -> STR_39(23), STR_38(23), STR_37(23), STR_36(29), 
 10467 ;;		 -> STR_35(23), STR_34(23), STR_33(22), STR_32(22), 
 10468 ;;		 -> STR_31(22), STR_30(22), STR_29(22), STR_28(22), 
 10469 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(22), 
 10470 ;;		 -> STR_23(22), STR_22(22), STR_21(17), STR_20(16), 
 10471 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 10472 ;;		 -> STR_15(21), STR_14(21), STR_13(21), STR_12(21), 
 10473 ;;		 -> STR_11(22), STR_10(22), STR_9(26), STR_8(21), 
 10474 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 10475 ;;		 -> STR_2(21), STR_1(21), 
 10476 ;; Auto vars:     Size  Location     Type
 10477 ;;  f               6  [STACK] struct _IO_FILE
 10478 ;;  ap              2  [STACK] PTR void [1]
 10479 ;;		 -> ?_printf(2), ?_sprintf(2), 
 10480 ;;  ret             2    0        int 
 10481 ;; Return value:  Size  Location     Type
 10482 ;;                  2  [STACK] int 
 10483 ;; Registers used:
 10484 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10485 ;; Tracked objects:
 10486 ;;		On entry : 0/1
 10487 ;;		On exit  : 3F/0
 10488 ;;		Unchanged: 0/0
 10489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10494 ;;Total ram usage:        0 bytes
 10495 ;; Hardware stack levels used:    1
 10496 ;; Hardware stack levels required when called:   23
 10497 ;; This function calls:
 10498 ;;		_vfprintf
 10499 ;; This function is called by:
 10500 ;;		_main
 10501 ;;		_check_help
 10502 ;;		_vterm_dump
 10503 ;;		_calc_bsoc
 10504 ;; This function uses a reentrant model
 10505 ;;
 10506                           
 10507                           	psect	text36
 10508  01A0AC                     __ptext36:
 10509                           	opt callstack 0
 10510  01A0AC                     _sprintf:
 10511                           	opt callstack 0
 10512                           
 10513                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10514  01A0AC  0E08               	movlw	8
 10515  01A0AE  26E1               	addwf	fsr1l,f,c
 10516  01A0B0  0E00               	movlw	0
 10517  01A0B2  22E2               	addwfc	fsr1h,f,c
 10518                           
 10519                           ;incstack = 0
 10520 ;; hardware stack exceeded
 10521  01A0B4  0EFE               	movlw	254
 10522  01A0B6  6E0B               	movwf	(btemp+10)^0,c
 10523  01A0B8  0EFF               	movlw	255
 10524  01A0BA  6E0C               	movwf	(btemp+11)^0,c
 10525                           
 10526                           ;stkvar	?_sprintf @ sp[(-8)+-3]
 10527  01A0BC  0EF5               	movlw	245
 10528  01A0BE  24E1               	addwf	fsr1l,w,c
 10529  01A0C0  6E09               	movwf	(btemp+8)^0,c
 10530  01A0C2  0EFF               	movlw	255
 10531  01A0C4  20E2               	addwfc	fsr1h,w,c
 10532  01A0C6  6E0A               	movwf	(btemp+9)^0,c
 10533  01A0C8  500B               	movf	(btemp+10)^0,w,c
 10534  01A0CA  2609               	addwf	(btemp+8)^0,f,c
 10535  01A0CC  500C               	movf	(btemp+11)^0,w,c
 10536  01A0CE  220A               	addwfc	(btemp+9)^0,f,c
 10537                           
 10538                           ;stkvar	_ap @ sp[(-8)+6]
 10539  01A0D0  0EFF               	movlw	-1
 10540  01A0D2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 10541  01A0D8  0EFE               	movlw	-2
 10542  01A0DA  0060  F027  FFE3   	movff	btemp+8,plusw1
 10543                           
 10544                           ;stkvar	_s @ sp[(-8)+-3]
 10545  01A0E0  0EF5               	movlw	-11
 10546  01A0E2  006F FF8C  F00B    	movff	plusw1,btemp+10
 10547  01A0E8  0EF6               	movlw	-10
 10548  01A0EA  006F FF8C  F00C    	movff	plusw1,btemp+11
 10549                           
 10550                           ;stkvar	_f @ sp[(-8)+0]
 10551  01A0F0  0EF9               	movlw	-7
 10552  01A0F2  0060  F033  FFE3   	movff	btemp+11,plusw1
 10553  01A0F8  0EF8               	movlw	-8
 10554  01A0FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10555                           
 10556                           ;stkvar	_f @ sp[(-8)+0]
 10557  01A100  0EFA               	movlw	250
 10558  01A102  24E1               	addwf	fsr1l,w,c
 10559  01A104  6ED9               	movwf	fsr2l,c
 10560  01A106  0EFF               	movlw	255
 10561  01A108  20E2               	addwfc	fsr1h,w,c
 10562  01A10A  6EDA               	movwf	fsr2h,c
 10563  01A10C  0E00               	movlw	0
 10564  01A10E  6EDE               	movwf	postinc2,c
 10565  01A110  0E00               	movlw	0
 10566  01A112  6EDD               	movwf	postdec2,c
 10567                           
 10568                           ;stkvar	_f @ sp[(-8)+0]
 10569  01A114  0EFC               	movlw	252
 10570  01A116  24E1               	addwf	fsr1l,w,c
 10571  01A118  6ED9               	movwf	fsr2l,c
 10572  01A11A  0EFF               	movlw	255
 10573  01A11C  20E2               	addwfc	fsr1h,w,c
 10574  01A11E  6EDA               	movwf	fsr2h,c
 10575  01A120  0E00               	movlw	0
 10576  01A122  6EDE               	movwf	postinc2,c
 10577  01A124  0E00               	movlw	0
 10578  01A126  6EDD               	movwf	postdec2,c
 10579                           
 10580                           ;stkvar	_ap @ sp[(-8)+6]
 10581  01A128  0EFE               	movlw	254
 10582  01A12A  24E1               	addwf	fsr1l,w,c
 10583  01A12C  6E01               	movwf	btemp^0,c
 10584  01A12E  0EFF               	movlw	255
 10585  01A130  20E2               	addwfc	fsr1h,w,c
 10586  01A132  6E02               	movwf	(btemp+1)^0,c
 10587  01A134  0060  F007  FFE6   	movff	btemp,postinc1
 10588  01A13A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10589                           
 10590                           ;stkvar	_fmt @ sp[(-10)+-5]
 10591  01A140  0EF1               	movlw	-15
 10592  01A142  006F FF8F FFE6     	movff	plusw1,postinc1
 10593  01A148  006F FF8F FFE6     	movff	plusw1,postinc1
 10594                           
 10595                           ;stkvar	_f @ sp[(-12)+0]
 10596  01A14E  0EF4               	movlw	244
 10597  01A150  24E1               	addwf	fsr1l,w,c
 10598  01A152  6E01               	movwf	btemp^0,c
 10599  01A154  0EFF               	movlw	255
 10600  01A156  20E2               	addwfc	fsr1h,w,c
 10601  01A158  6E02               	movwf	(btemp+1)^0,c
 10602  01A15A  0060  F007  FFE6   	movff	btemp,postinc1
 10603  01A160  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10604  01A166  EC4C  F0D5         	call	_vfprintf	;wreg free
 10605                           
 10606                           ; BSR set to: 0
 10607                           ;stkvar	_f @ sp[(-8)+0]
 10608  01A16A  0EFA               	movlw	250
 10609  01A16C  24E1               	addwf	fsr1l,w,c
 10610  01A16E  6ED9               	movwf	fsr2l,c
 10611  01A170  0EFF               	movlw	255
 10612  01A172  20E2               	addwfc	fsr1h,w,c
 10613  01A174  6EDA               	movwf	fsr2h,c
 10614  01A176  006F FF78  F00B    	movff	postinc2,btemp+10
 10615  01A17C  006F FF74  F00C    	movff	postdec2,btemp+11
 10616                           
 10617                           ;stkvar	_s @ sp[(-8)+-3]
 10618  01A182  0EF5               	movlw	-11
 10619  01A184  006F FF8C  F009    	movff	plusw1,btemp+8
 10620  01A18A  0EF6               	movlw	-10
 10621  01A18C  006F FF8C  F00A    	movff	plusw1,btemp+9
 10622  01A192  500B               	movf	(btemp+10)^0,w,c
 10623  01A194  2409               	addwf	(btemp+8)^0,w,c
 10624  01A196  6ED9               	movwf	fsr2l,c
 10625  01A198  500C               	movf	(btemp+11)^0,w,c
 10626  01A19A  200A               	addwfc	(btemp+9)^0,w,c
 10627  01A19C  6EDA               	movwf	fsr2h,c
 10628  01A19E  0E00               	movlw	0
 10629  01A1A0  6EDF               	movwf	indf2,c
 10630                           
 10631                           ; BSR set to: 0
 10632                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, args
      +                          ize = 4, vargsize = 0
 10633  01A1A2  0EF8               	movlw	248
 10634  01A1A4  26E1               	addwf	fsr1l,f,c
 10635  01A1A6  0EFF               	movlw	255
 10636  01A1A8  22E2               	addwfc	fsr1h,f,c
 10637  01A1AA  52E5               	movf	postdec1,f,c
 10638  01A1AC  50E7               	movf	indf1,w,c
 10639  01A1AE  5EE1               	subwf	fsr1l,f,c
 10640  01A1B0  0E00               	movlw	0
 10641  01A1B2  5AE2               	subwfb	fsr1h,f,c
 10642  01A1B4  0012               	return		;funcret
 10643  01A1B6                     __end_of_sprintf:
 10644                           	opt callstack 0
 10645                           
 10646 ;; *************** function _get_vterm_ptr *****************
 10647 ;; Defined at:
 10648 ;;		line 116 in file "mconfig.c"
 10649 ;; Parameters:    Size  Location     Type
 10650 ;;  line            1  [STACK] const unsigned char 
 10651 ;;  vterm           1  [STACK] const unsigned char 
 10652 ;; Auto vars:     Size  Location     Type
 10653 ;;		None
 10654 ;; Return value:  Size  Location     Type
 10655 ;;                  2  [STACK] PTR unsigned char 
 10656 ;; Registers used:
 10657 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
 10658 ;; Tracked objects:
 10659 ;;		On entry : 0/1
 10660 ;;		On exit  : 0/0
 10661 ;;		Unchanged: 0/0
 10662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10667 ;;Total ram usage:        0 bytes
 10668 ;; Hardware stack levels used:    1
 10669 ;; Hardware stack levels required when called:   15
 10670 ;; This function calls:
 10671 ;;		Nothing
 10672 ;; This function is called by:
 10673 ;;		_main
 10674 ;;		_check_help
 10675 ;;		_vterm_dump
 10676 ;; This function uses a reentrant model
 10677 ;;
 10678                           
 10679                           	psect	text37
 10680  01BF88                     __ptext37:
 10681                           	opt callstack 0
 10682  01BF88                     _get_vterm_ptr:
 10683                           	opt callstack 15
 10684                           
 10685                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
 10686                           ;stkvar	_vterm @ sp[(0)+-2]
 10687                           
 10688                           ; BSR set to: 0
 10689                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10690                           ;incstack = 0
 10691  01BF88  0EFE               	movlw	-2
 10692  01BF8A  50E3               	movf	plusw1,w,c
 10693  01BF8C  0B03               	andlw	3
 10694  01BF8E  0D78               	mullw	120
 10695  01BF90  0E2A               	movlw	low _D
 10696  01BF92  6E01               	movwf	btemp^0,c
 10697  01BF94  0E08               	movlw	high _D
 10698  01BF96  6E02               	movwf	(btemp+1)^0,c
 10699  01BF98  50F3               	movf	243,w,c
 10700  01BF9A  2601               	addwf	btemp^0,f,c
 10701  01BF9C  50F4               	movf	244,w,c
 10702  01BF9E  2202               	addwfc	(btemp+1)^0,f,c
 10703                           
 10704                           ;stkvar	_line @ sp[(0)+-1]
 10705  01BFA0  0EFF               	movlw	-1
 10706  01BFA2  50E3               	movf	plusw1,w,c
 10707  01BFA4  0B03               	andlw	3
 10708  01BFA6  0D28               	mullw	40
 10709  01BFA8  50F3               	movf	243,w,c
 10710  01BFAA  2601               	addwf	btemp^0,f,c
 10711  01BFAC  50F4               	movf	244,w,c
 10712  01BFAE  2202               	addwfc	(btemp+1)^0,f,c
 10713                           
 10714                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 10715  01BFB0  52E5               	movf	postdec1,f,c
 10716  01BFB2  52E5               	movf	postdec1,f,c
 10717  01BFB4  0012               	return		;funcret
 10718  01BFB6                     __end_of_get_vterm_ptr:
 10719                           	opt callstack 0
 10720                           
 10721 ;; *************** function _WaitMs *****************
 10722 ;; Defined at:
 10723 ;;		line 32 in file "timers.c"
 10724 ;; Parameters:    Size  Location     Type
 10725 ;;  numMilliseco    2  [STACK] const unsigned short 
 10726 ;; Auto vars:     Size  Location     Type
 10727 ;;		None
 10728 ;; Return value:  Size  Location     Type
 10729 ;;                  1  [STACK] void 
 10730 ;; Registers used:
 10731 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 10732 ;; Tracked objects:
 10733 ;;		On entry : 0/1
 10734 ;;		On exit  : 0/0
 10735 ;;		Unchanged: 0/0
 10736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10741 ;;Total ram usage:        0 bytes
 10742 ;; Hardware stack levels used:    1
 10743 ;; Hardware stack levels required when called:   16
 10744 ;; This function calls:
 10745 ;;		_StartTimer
 10746 ;;		_TimerDone
 10747 ;; This function is called by:
 10748 ;;		_main
 10749 ;;		_vterm_dump
 10750 ;; This function uses a reentrant model
 10751 ;;
 10752                           
 10753                           	psect	text38
 10754  01BDC2                     __ptext38:
 10755                           	opt callstack 0
 10756  01BDC2                     _WaitMs:
 10757                           	opt callstack 12
 10758                           
 10759                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 10760                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 10761                           
 10762                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10763                           ;incstack = 0
 10764  01BDC2  0EFE               	movlw	-2
 10765  01BDC4  006F FF8F FFE6     	movff	plusw1,postinc1
 10766  01BDCA  006F FF8F FFE6     	movff	plusw1,postinc1
 10767  01BDD0  0E00               	movlw	0
 10768  01BDD2  6EE6               	movwf	postinc1,c
 10769  01BDD4  ECF2  F0DD         	call	_StartTimer	;wreg free
 10770                           
 10771                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 10772  01BDD8  D005               	goto	l10086
 10773  01BDDA                     l1616:
 10774                           
 10775                           ;timers.c: 36:   __nop();
 10776  01BDDA  F000               	nop	
 10777                           
 10778                           ;timers.c: 37:   __nop();
 10779  01BDDC  F000               	nop	
 10780                           
 10781                           ;timers.c: 38:   __nop();
 10782  01BDDE  F000               	nop	
 10783                           
 10784                           ;timers.c: 39:   __nop();
 10785  01BDE0  F000               	nop	
 10786  01BDE2  0004               	clrwdt		;# 
 10787  01BDE4                     l10086:
 10788                           
 10789                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 10790  01BDE4  0E00               	movlw	0
 10791  01BDE6  6EE6               	movwf	postinc1,c
 10792  01BDE8  EC47  F0E0         	call	_TimerDone	;wreg free
 10793  01BDEC  5001               	movf	btemp^0,w,c
 10794  01BDEE  B4D8               	btfsc	status,2,c
 10795  01BDF0  D7F4               	goto	l1616
 10796                           
 10797                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 10798  01BDF2  52E5               	movf	postdec1,f,c
 10799  01BDF4  52E5               	movf	postdec1,f,c
 10800  01BDF6  0012               	return		;funcret
 10801  01BDF8                     __end_of_WaitMs:
 10802                           	opt callstack 0
 10803                           
 10804 ;; *************** function _update_lcd *****************
 10805 ;; Defined at:
 10806 ;;		line 85 in file "mconfig.c"
 10807 ;; Parameters:    Size  Location     Type
 10808 ;;  vterm           1  [STACK] unsigned char 
 10809 ;; Auto vars:     Size  Location     Type
 10810 ;;		None
 10811 ;; Return value:  Size  Location     Type
 10812 ;;                  1  [STACK] unsigned char 
 10813 ;; Registers used:
 10814 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10815 ;; Tracked objects:
 10816 ;;		On entry : 0/0
 10817 ;;		On exit  : 0/0
 10818 ;;		Unchanged: 0/0
 10819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10824 ;;Total ram usage:        0 bytes
 10825 ;; Hardware stack levels used:    1
 10826 ;; Hardware stack levels required when called:   27
 10827 ;; This function calls:
 10828 ;;		_eaDogM_WriteStringAtPos
 10829 ;;		_wait_lcd_done
 10830 ;; This function is called by:
 10831 ;;		_main
 10832 ;;		_check_help
 10833 ;; This function uses a reentrant model
 10834 ;;
 10835                           
 10836                           	psect	text39
 10837  019F9C                     __ptext39:
 10838                           	opt callstack 0
 10839  019F9C                     _update_lcd:
 10840                           	opt callstack 3
 10841                           
 10842                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
 10843                           ;stkvar	_vterm @ sp[(0)+-1]
 10844                           
 10845                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10846                           ;incstack = 0
 10847  019F9C  0EFF               	movlw	-1
 10848  019F9E  006F FF8C  F001    	movff	plusw1,btemp
 10849  019FA4  0E03               	movlw	3
 10850  019FA6  1601               	andwf	btemp^0,f,c
 10851  019FA8  0EFF               	movlw	-1
 10852  019FAA  0060  F007  FFE3   	movff	btemp,plusw1
 10853                           
 10854                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
 10855  019FB0  EE22  F20A         	lfsr	2,_D+480
 10856  019FB4  A0DF               	btfss	indf2,0,c
 10857  019FB6  D004               	goto	l13108
 10858                           
 10859                           ;stkvar	_vterm @ sp[(0)+-1]
 10860  019FB8  0EFF               	movlw	-1
 10861  019FBA  50E3               	movf	plusw1,w,c
 10862  019FBC  B4D8               	btfsc	status,2,c
 10863  019FBE  D074               	goto	l1692
 10864  019FC0                     l13108:
 10865                           
 10866                           ;mconfig.c: 92:  D.lcd[vterm][0][20] = 0;
 10867                           ;stkvar	_vterm @ sp[(0)+-1]
 10868  019FC0  0EFF               	movlw	-1
 10869  019FC2  50E3               	movf	plusw1,w,c
 10870  019FC4  0D78               	mullw	120
 10871  019FC6  0E3E               	movlw	low (_D+20)
 10872  019FC8  24F3               	addwf	243,w,c
 10873  019FCA  6ED9               	movwf	fsr2l,c
 10874  019FCC  0E08               	movlw	high (_D+20)
 10875  019FCE  20F4               	addwfc	prodh,w,c
 10876  019FD0  6EDA               	movwf	fsr2h,c
 10877  019FD2  0E00               	movlw	0
 10878  019FD4  6EDF               	movwf	indf2,c
 10879                           
 10880                           ;mconfig.c: 93:  D.lcd[vterm][1][20] = 0;
 10881                           ;stkvar	_vterm @ sp[(0)+-1]
 10882  019FD6  0EFF               	movlw	-1
 10883  019FD8  50E3               	movf	plusw1,w,c
 10884  019FDA  0D78               	mullw	120
 10885  019FDC  0E66               	movlw	low (_D+60)
 10886  019FDE  24F3               	addwf	243,w,c
 10887  019FE0  6ED9               	movwf	fsr2l,c
 10888  019FE2  0E08               	movlw	high (_D+60)
 10889  019FE4  20F4               	addwfc	prodh,w,c
 10890  019FE6  6EDA               	movwf	fsr2h,c
 10891  019FE8  0E00               	movlw	0
 10892  019FEA  6EDF               	movwf	indf2,c
 10893                           
 10894                           ;mconfig.c: 94:  D.lcd[vterm][2][20] = 0;
 10895                           ;stkvar	_vterm @ sp[(0)+-1]
 10896  019FEC  0EFF               	movlw	-1
 10897  019FEE  50E3               	movf	plusw1,w,c
 10898  019FF0  0D78               	mullw	120
 10899  019FF2  0E8E               	movlw	low (_D+100)
 10900  019FF4  24F3               	addwf	243,w,c
 10901  019FF6  6ED9               	movwf	fsr2l,c
 10902  019FF8  0E08               	movlw	high (_D+100)
 10903  019FFA  20F4               	addwfc	prodh,w,c
 10904  019FFC  6EDA               	movwf	fsr2h,c
 10905  019FFE  0E00               	movlw	0
 10906  01A000  6EDF               	movwf	indf2,c
 10907                           
 10908                           ;mconfig.c: 95:  wait_lcd_done();
 10909  01A002  ECCC  F0E1         	call	_wait_lcd_done	;wreg free
 10910                           
 10911                           ; BSR set to: 0
 10912                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 10913                           ;stkvar	_vterm @ sp[(0)+-1]
 10914  01A006  0EFF               	movlw	-1
 10915  01A008  50E3               	movf	plusw1,w,c
 10916  01A00A  0D78               	mullw	120
 10917  01A00C  0E2A               	movlw	low _D
 10918  01A00E  6E0B               	movwf	(btemp+10)^0,c
 10919  01A010  0E08               	movlw	high _D
 10920  01A012  6E0C               	movwf	(btemp+11)^0,c
 10921  01A014  50F3               	movf	243,w,c
 10922  01A016  260B               	addwf	(btemp+10)^0,f,c
 10923  01A018  50F4               	movf	244,w,c
 10924  01A01A  220C               	addwfc	(btemp+11)^0,f,c
 10925  01A01C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10926  01A022  0060  F033  FFE6   	movff	btemp+11,postinc1
 10927  01A028  0E00               	movlw	0
 10928  01A02A  6EE6               	movwf	postinc1,c
 10929  01A02C  0E00               	movlw	0
 10930  01A02E  6EE6               	movwf	postinc1,c
 10931  01A030  ECF7  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10932                           
 10933                           ; BSR set to: 59
 10934                           ;mconfig.c: 97:  wait_lcd_done();
 10935  01A034  ECCC  F0E1         	call	_wait_lcd_done	;wreg free
 10936                           
 10937                           ; BSR set to: 0
 10938                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 10939                           ;stkvar	_vterm @ sp[(0)+-1]
 10940  01A038  0EFF               	movlw	-1
 10941  01A03A  50E3               	movf	plusw1,w,c
 10942  01A03C  0D78               	mullw	120
 10943  01A03E  0E2A               	movlw	low _D
 10944  01A040  6E0B               	movwf	(btemp+10)^0,c
 10945  01A042  0E08               	movlw	high _D
 10946  01A044  6E0C               	movwf	(btemp+11)^0,c
 10947  01A046  0E28               	movlw	40
 10948  01A048  260B               	addwf	(btemp+10)^0,f,c
 10949  01A04A  0E00               	movlw	0
 10950  01A04C  220C               	addwfc	(btemp+11)^0,f,c
 10951  01A04E  50F3               	movf	243,w,c
 10952  01A050  260B               	addwf	(btemp+10)^0,f,c
 10953  01A052  50F4               	movf	244,w,c
 10954  01A054  220C               	addwfc	(btemp+11)^0,f,c
 10955  01A056  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10956  01A05C  0060  F033  FFE6   	movff	btemp+11,postinc1
 10957  01A062  0E00               	movlw	0
 10958  01A064  6EE6               	movwf	postinc1,c
 10959  01A066  0E01               	movlw	1
 10960  01A068  6EE6               	movwf	postinc1,c
 10961  01A06A  ECF7  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10962                           
 10963                           ; BSR set to: 59
 10964                           ;mconfig.c: 99:  wait_lcd_done();
 10965  01A06E  ECCC  F0E1         	call	_wait_lcd_done	;wreg free
 10966                           
 10967                           ; BSR set to: 0
 10968                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 10969                           ;stkvar	_vterm @ sp[(0)+-1]
 10970  01A072  0EFF               	movlw	-1
 10971  01A074  50E3               	movf	plusw1,w,c
 10972  01A076  0D78               	mullw	120
 10973  01A078  0E2A               	movlw	low _D
 10974  01A07A  6E0B               	movwf	(btemp+10)^0,c
 10975  01A07C  0E08               	movlw	high _D
 10976  01A07E  6E0C               	movwf	(btemp+11)^0,c
 10977  01A080  0E50               	movlw	80
 10978  01A082  260B               	addwf	(btemp+10)^0,f,c
 10979  01A084  0E00               	movlw	0
 10980  01A086  220C               	addwfc	(btemp+11)^0,f,c
 10981  01A088  50F3               	movf	243,w,c
 10982  01A08A  260B               	addwf	(btemp+10)^0,f,c
 10983  01A08C  50F4               	movf	244,w,c
 10984  01A08E  220C               	addwfc	(btemp+11)^0,f,c
 10985  01A090  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10986  01A096  0060  F033  FFE6   	movff	btemp+11,postinc1
 10987  01A09C  0E00               	movlw	0
 10988  01A09E  6EE6               	movwf	postinc1,c
 10989  01A0A0  0E02               	movlw	2
 10990  01A0A2  6EE6               	movwf	postinc1,c
 10991  01A0A4  ECF7  F0D5         	call	_eaDogM_WriteStringAtPos	;wreg free
 10992  01A0A8                     l1692:
 10993                           
 10994                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 10995  01A0A8  52E5               	movf	postdec1,f,c
 10996  01A0AA  0012               	return		;funcret
 10997  01A0AC                     __end_of_update_lcd:
 10998                           	opt callstack 0
 10999                           
 11000 ;; *************** function _eaDogM_WriteStringAtPos *****************
 11001 ;; Defined at:
 11002 ;;		line 195 in file "eadog.c"
 11003 ;; Parameters:    Size  Location     Type
 11004 ;;  r               1  [STACK] const unsigned char 
 11005 ;;  c               1  [STACK] const unsigned char 
 11006 ;;  strPtr          2  [STACK] PTR unsigned char 
 11007 ;;		 -> D.lcd(480), D(482), V(191), 
 11008 ;; Auto vars:     Size  Location     Type
 11009 ;;  row             1  [STACK] unsigned char 
 11010 ;; Return value:  Size  Location     Type
 11011 ;;                  1  [STACK] void 
 11012 ;; Registers used:
 11013 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11014 ;; Tracked objects:
 11015 ;;		On entry : 3F/0
 11016 ;;		On exit  : 3F/3B
 11017 ;;		Unchanged: 0/0
 11018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11023 ;;Total ram usage:        0 bytes
 11024 ;; Hardware stack levels used:    1
 11025 ;; Hardware stack levels required when called:   26
 11026 ;; This function calls:
 11027 ;;		_eaDogM_WriteString
 11028 ;;		_send_lcd_cmd_dma
 11029 ;;		_send_lcd_data_dma
 11030 ;;		_wait_lcd_done
 11031 ;;		_wdtdelay
 11032 ;; This function is called by:
 11033 ;;		_update_lcd
 11034 ;;		_vterm_dump
 11035 ;; This function uses a reentrant model
 11036 ;;
 11037                           
 11038                           	psect	text40
 11039  01ABEE                     __ptext40:
 11040                           	opt callstack 0
 11041  01ABEE                     _eaDogM_WriteStringAtPos:
 11042                           	opt callstack 0
 11043                           
 11044                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11045  01ABEE  52E6               	movf	postinc1,f,c
 11046                           
 11047                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 11048                           
 11049                           ;incstack = 0
 11050  01ABF0  D014               	goto	l13084
 11051  01ABF2                     l13072:
 11052                           
 11053                           ;eadog.c: 201:   row = 0x40;
 11054                           ;stkvar	_row @ sp[(-1)+0]
 11055  01ABF2  0EFF               	movlw	-1
 11056  01ABF4  6AE3               	clrf	plusw1,c
 11057  01ABF6  8CE3               	bsf	plusw1,6,c
 11058                           
 11059                           ;eadog.c: 202:   break;
 11060  01ABF8  D026               	goto	l13086
 11061  01ABFA                     l13074:
 11062                           
 11063                           ;eadog.c: 204:   row = 0x14;
 11064                           ;stkvar	_row @ sp[(-1)+0]
 11065  01ABFA  0EFF               	movlw	-1
 11066  01ABFC  6AE3               	clrf	plusw1,c
 11067  01ABFE  84E3               	bsf	plusw1,2,c
 11068  01AC00  88E3               	bsf	plusw1,4,c	;indir
 11069                           
 11070                           ;eadog.c: 205:   break;
 11071  01AC02  D021               	goto	l13086
 11072  01AC04                     l13076:
 11073                           
 11074                           ;eadog.c: 207:   row = 0x54;
 11075  01AC04  0E54               	movlw	84
 11076  01AC06  6E0C               	movwf	(btemp+11)^0,c
 11077                           
 11078                           ;stkvar	_row @ sp[(-1)+0]
 11079  01AC08  0EFF               	movlw	-1
 11080  01AC0A  0060  F033  FFE3   	movff	btemp+11,plusw1
 11081                           
 11082                           ;eadog.c: 208:   break;
 11083  01AC10  D01A               	goto	l13086
 11084  01AC12                     l13078:
 11085                           
 11086                           ;eadog.c: 210:   row = 0x1;
 11087                           ;stkvar	_row @ sp[(-1)+0]
 11088  01AC12  0EFF               	movlw	-1
 11089  01AC14  6AE3               	clrf	plusw1,c
 11090  01AC16  2AE3               	incf	plusw1,f,c
 11091                           
 11092                           ;eadog.c: 211:   break;
 11093  01AC18  D016               	goto	l13086
 11094  01AC1A                     l13084:
 11095                           
 11096                           ;stkvar	_r @ sp[(-1)+-1]
 11097  01AC1A  0EFE               	movlw	-2
 11098  01AC1C  50E3               	movf	plusw1,w,c
 11099  01AC1E  6E0B               	movwf	(btemp+10)^0,c
 11100  01AC20  6A0C               	clrf	(btemp+11)^0,c
 11101                           
 11102                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11103                           ; Switch size 1, requested type "simple"
 11104                           ; Number of cases is 1, Range of values is 0 to 0
 11105                           ; switch strategies available:
 11106                           ; Name         Instructions Cycles
 11107                           ; simple_byte            4     3 (average)
 11108                           ;	Chosen strategy is simple_byte
 11109  01AC22  500C               	movf	(btemp+11)^0,w,c
 11110  01AC24  0A00               	xorlw	0	; case 0
 11111  01AC26  A4D8               	btfss	status,2,c
 11112  01AC28  D7E4               	goto	l13072
 11113                           
 11114                           ; Switch size 1, requested type "simple"
 11115                           ; Number of cases is 4, Range of values is 0 to 3
 11116                           ; switch strategies available:
 11117                           ; Name         Instructions Cycles
 11118                           ; simple_byte           13     7 (average)
 11119                           ;	Chosen strategy is simple_byte
 11120  01AC2A  500B               	movf	(btemp+10)^0,w,c
 11121  01AC2C  0A00               	xorlw	0	; case 0
 11122  01AC2E  B4D8               	btfsc	status,2,c
 11123  01AC30  D7E0               	goto	l13072
 11124  01AC32  0A01               	xorlw	1	; case 1
 11125  01AC34  B4D8               	btfsc	status,2,c
 11126  01AC36  D7E1               	goto	l13074
 11127  01AC38  0A03               	xorlw	3	; case 2
 11128  01AC3A  B4D8               	btfsc	status,2,c
 11129  01AC3C  D7E3               	goto	l13076
 11130  01AC3E  0A01               	xorlw	1	; case 3
 11131  01AC40  B4D8               	btfsc	status,2,c
 11132  01AC42  D7E7               	goto	l13078
 11133  01AC44  D7D6               	goto	l13072
 11134  01AC46                     l13086:
 11135                           
 11136                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 11137  01AC46  0E45               	movlw	69
 11138  01AC48  6EE6               	movwf	postinc1,c
 11139  01AC4A  EC2E  F0E2         	call	_send_lcd_cmd_dma	;wreg free
 11140                           
 11141                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 11142                           ;stkvar	_c @ sp[(-1)+-2]
 11143  01AC4E  0EFD               	movlw	-3
 11144  01AC50  006F FF8C  F00C    	movff	plusw1,btemp+11
 11145                           
 11146                           ;stkvar	_row @ sp[(-1)+0]
 11147  01AC56  0EFF               	movlw	-1
 11148  01AC58  50E3               	movf	plusw1,w,c
 11149  01AC5A  240C               	addwf	(btemp+11)^0,w,c
 11150  01AC5C  6EE6               	movwf	postinc1,c
 11151  01AC5E  EC4F  F0DC         	call	_send_lcd_data_dma	;wreg free
 11152                           
 11153                           ; BSR set to: 59
 11154                           ;eadog.c: 218:  wait_lcd_done();
 11155  01AC62  ECCC  F0E1         	call	_wait_lcd_done	;wreg free
 11156                           
 11157                           ; BSR set to: 0
 11158                           ;eadog.c: 219:  wdtdelay(8);
 11159  01AC66  0E08               	movlw	8
 11160  01AC68  6EE6               	movwf	postinc1,c
 11161  01AC6A  0E00               	movlw	0
 11162  01AC6C  6EE6               	movwf	postinc1,c
 11163  01AC6E  0E00               	movlw	0
 11164  01AC70  6EE6               	movwf	postinc1,c
 11165  01AC72  0E00               	movlw	0
 11166  01AC74  6EE6               	movwf	postinc1,c
 11167  01AC76  EC7C  F0DB         	call	_wdtdelay	;wreg free
 11168                           
 11169                           ;eadog.c: 220:  eaDogM_WriteString(strPtr);
 11170                           ;stkvar	_strPtr @ sp[(-1)+-4]
 11171  01AC7A  0EFB               	movlw	-5
 11172  01AC7C  006F FF8F FFE6     	movff	plusw1,postinc1
 11173  01AC82  006F FF8F FFE6     	movff	plusw1,postinc1
 11174  01AC88  EC4B  F0D6         	call	_eaDogM_WriteString	;wreg free
 11175                           
 11176                           ; BSR set to: 59
 11177                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 11178  01AC8C  0EFB               	movlw	251
 11179  01AC8E  26E1               	addwf	fsr1l,f,c
 11180  01AC90  0EFF               	movlw	255
 11181  01AC92  22E2               	addwfc	fsr1h,f,c
 11182  01AC94  0012               	return		;funcret
 11183  01AC96                     __end_of_eaDogM_WriteStringAtPos:
 11184                           	opt callstack 0
 11185                           
 11186 ;; *************** function _send_lcd_cmd_dma *****************
 11187 ;; Defined at:
 11188 ;;		line 171 in file "eadog.c"
 11189 ;; Parameters:    Size  Location     Type
 11190 ;;  strPtr          1  [STACK] const unsigned char 
 11191 ;; Auto vars:     Size  Location     Type
 11192 ;;		None
 11193 ;; Return value:  Size  Location     Type
 11194 ;;                  1  [STACK] void 
 11195 ;; Registers used:
 11196 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11197 ;; Tracked objects:
 11198 ;;		On entry : 0/3D
 11199 ;;		On exit  : 3F/0
 11200 ;;		Unchanged: 0/0
 11201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11206 ;;Total ram usage:        0 bytes
 11207 ;; Hardware stack levels used:    1
 11208 ;; Hardware stack levels required when called:   25
 11209 ;; This function calls:
 11210 ;;		_send_lcd_data_dma
 11211 ;;		_wait_lcd_done
 11212 ;; This function is called by:
 11213 ;;		_eaDogM_WriteStringAtPos
 11214 ;;		_eaDogM_WriteCommand
 11215 ;; This function uses a reentrant model
 11216 ;;
 11217                           
 11218                           	psect	text41
 11219  01C45C                     __ptext41:
 11220                           	opt callstack 0
 11221  01C45C                     _send_lcd_cmd_dma:
 11222                           	opt callstack 3
 11223                           
 11224                           ;eadog.c: 171: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:
      +                            send_lcd_data_dma(0xFE);
 11225                           
 11226                           ; BSR set to: 59
 11227                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11228                           ;incstack = 0
 11229  01C45C  0EFE               	movlw	254
 11230  01C45E  6EE6               	movwf	postinc1,c
 11231  01C460  EC4F  F0DC         	call	_send_lcd_data_dma	;wreg free
 11232                           
 11233                           ; BSR set to: 59
 11234                           ;eadog.c: 174:  wait_lcd_done();
 11235  01C464  ECCC  F0E1         	call	_wait_lcd_done	;wreg free
 11236                           
 11237                           ; BSR set to: 0
 11238                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 11239                           ;stkvar	_strPtr @ sp[(0)+-1]
 11240  01C468  0EFF               	movlw	-1
 11241  01C46A  50E3               	movf	plusw1,w,c
 11242  01C46C  6EE6               	movwf	postinc1,c
 11243  01C46E  EC4F  F0DC         	call	_send_lcd_data_dma	;wreg free
 11244                           
 11245                           ;eadog.c: 176:  wait_lcd_done();
 11246  01C472  ECCC  F0E1         	call	_wait_lcd_done	;wreg free
 11247                           
 11248                           ; BSR set to: 0
 11249                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 11250  01C476  52E5               	movf	postdec1,f,c
 11251  01C478  0012               	return		;funcret
 11252  01C47A                     __end_of_send_lcd_cmd_dma:
 11253                           	opt callstack 0
 11254                           
 11255 ;; *************** function _wait_lcd_done *****************
 11256 ;; Defined at:
 11257 ;;		line 444 in file "eadog.c"
 11258 ;; Parameters:    Size  Location     Type
 11259 ;;		None
 11260 ;; Auto vars:     Size  Location     Type
 11261 ;;		None
 11262 ;; Return value:  Size  Location     Type
 11263 ;;                  1  [STACK] void 
 11264 ;; Registers used:
 11265 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 11266 ;; Tracked objects:
 11267 ;;		On entry : 0/1
 11268 ;;		On exit  : 3F/0
 11269 ;;		Unchanged: 0/0
 11270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11275 ;;Total ram usage:        0 bytes
 11276 ;; Hardware stack levels used:    1
 11277 ;; Hardware stack levels required when called:   16
 11278 ;; This function calls:
 11279 ;;		_wdtdelay
 11280 ;; This function is called by:
 11281 ;;		_main
 11282 ;;		_send_lcd_cmd_dma
 11283 ;;		_eaDogM_WriteStringAtPos
 11284 ;;		_update_lcd
 11285 ;;		_vterm_dump
 11286 ;; This function uses a reentrant model
 11287 ;;
 11288                           
 11289                           	psect	text42
 11290  01C398                     __ptext42:
 11291                           	opt callstack 0
 11292  01C398                     _wait_lcd_done:
 11293                           	opt callstack 14
 11294                           
 11295                           ;eadog.c: 446:  while (spi_link.LCD_DATA);
 11296                           
 11297                           ; BSR set to: 0
 11298                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11299                           ;incstack = 0
 11300  01C398  0101               	movlb	1	; () banked
 11301  01C39A  B7CF               	btfsc	_spi_link& (0+255),3,b	;volatile
 11302  01C39C  D7FD               	goto	_wait_lcd_done
 11303  01C39E                     u8770:
 11304  01C39E  013D               	movlb	61	; () banked
 11305  01C3A0  AB17               	btfss	23,5,b	;volatile
 11306  01C3A2  D7FD               	goto	u8770
 11307                           
 11308                           ; BSR set to: 61
 11309                           ;eadog.c: 448:  wdtdelay(50);
 11310  01C3A4  0E32               	movlw	50
 11311  01C3A6  6EE6               	movwf	postinc1,c
 11312  01C3A8  0E00               	movlw	0
 11313  01C3AA  6EE6               	movwf	postinc1,c
 11314  01C3AC  0E00               	movlw	0
 11315  01C3AE  6EE6               	movwf	postinc1,c
 11316  01C3B0  0E00               	movlw	0
 11317  01C3B2  6EE6               	movwf	postinc1,c
 11318  01C3B4  EC7C  F0DB         	call	_wdtdelay	;wreg free
 11319                           
 11320                           ; BSR set to: 0
 11321                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 11322  01C3B8  0012               	return		;funcret
 11323  01C3BA                     __end_of_wait_lcd_done:
 11324                           	opt callstack 0
 11325                           
 11326 ;; *************** function _wdtdelay *****************
 11327 ;; Defined at:
 11328 ;;		line 23 in file "eadog.c"
 11329 ;; Parameters:    Size  Location     Type
 11330 ;;  delay           4  [STACK] const unsigned long 
 11331 ;; Auto vars:     Size  Location     Type
 11332 ;;		None
 11333 ;; Return value:  Size  Location     Type
 11334 ;;                  1  [STACK] void 
 11335 ;; Registers used:
 11336 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 11337 ;; Tracked objects:
 11338 ;;		On entry : 2/3D
 11339 ;;		On exit  : 3F/0
 11340 ;;		Unchanged: 0/0
 11341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11346 ;;Total ram usage:        0 bytes
 11347 ;; Hardware stack levels used:    1
 11348 ;; Hardware stack levels required when called:   15
 11349 ;; This function calls:
 11350 ;;		Nothing
 11351 ;; This function is called by:
 11352 ;;		_init_display
 11353 ;;		_send_lcd_data
 11354 ;;		_send_lcd_cmd
 11355 ;;		_send_lcd_cmd_long
 11356 ;;		_eaDogM_WriteStringAtPos
 11357 ;;		_wait_lcd_done
 11358 ;; This function uses a reentrant model
 11359 ;;
 11360                           
 11361                           	psect	text43
 11362  01B6F8                     __ptext43:
 11363                           	opt callstack 0
 11364  01B6F8                     _wdtdelay:
 11365                           	opt callstack 14
 11366                           
 11367                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 11368                           
 11369                           ; BSR set to: 0
 11370                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11371                           ;incstack = 0
 11372  01B6F8  0100               	movlb	0	; () banked
 11373  01B6FA  6B78               	clrf	wdtdelay@dcount& (0+255),b
 11374  01B6FC  6B79               	clrf	(wdtdelay@dcount+1)& (0+255),b
 11375  01B6FE  6B7A               	clrf	(wdtdelay@dcount+2)& (0+255),b
 11376  01B700  6B7B               	clrf	(wdtdelay@dcount+3)& (0+255),b
 11377  01B702                     l1469:
 11378                           
 11379                           ; BSR set to: 0
 11380                           ;eadog.c: 28:   __nop();
 11381  01B702  F000               	nop	
 11382  01B704  0004               	clrwdt		;# 
 11383                           
 11384                           ;eadog.c: 30:  };
 11385  01B706  0E01               	movlw	1
 11386  01B708  0100               	movlb	0	; () banked
 11387  01B70A  2778               	addwf	wdtdelay@dcount& (0+255),f,b
 11388  01B70C  0E00               	movlw	0
 11389  01B70E  2379               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 11390  01B710  237A               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 11391  01B712  237B               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 11392                           
 11393                           ; BSR set to: 0
 11394                           ;stkvar	_delay @ sp[(0)+-4]
 11395  01B714  0EFC               	movlw	-4
 11396  01B716  006F FF8C  F001    	movff	plusw1,btemp
 11397  01B71C  5178               	movf	wdtdelay@dcount& (0+255),w,b
 11398  01B71E  5C01               	subwf	btemp^0,w,c
 11399  01B720  0EFD               	movlw	-3
 11400  01B722  006F FF8C  F001    	movff	plusw1,btemp
 11401  01B728  5179               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 11402  01B72A  5801               	subwfb	btemp^0,w,c
 11403  01B72C  0EFE               	movlw	-2
 11404  01B72E  006F FF8C  F001    	movff	plusw1,btemp
 11405  01B734  517A               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 11406  01B736  5801               	subwfb	btemp^0,w,c
 11407  01B738  0EFF               	movlw	-1
 11408  01B73A  006F FF8C  F001    	movff	plusw1,btemp
 11409  01B740  517B               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 11410  01B742  5801               	subwfb	btemp^0,w,c
 11411  01B744  B0D8               	btfsc	status,0,c
 11412  01B746  D7DD               	goto	l1469
 11413                           
 11414                           ; BSR set to: 0
 11415                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 11416  01B748  52E5               	movf	postdec1,f,c
 11417  01B74A  52E5               	movf	postdec1,f,c
 11418  01B74C  52E5               	movf	postdec1,f,c
 11419  01B74E  52E5               	movf	postdec1,f,c
 11420  01B750  0012               	return		;funcret
 11421  01B752                     __end_of_wdtdelay:
 11422                           	opt callstack 0
 11423                           
 11424 ;; *************** function _send_lcd_data_dma *****************
 11425 ;; Defined at:
 11426 ;;		line 182 in file "eadog.c"
 11427 ;; Parameters:    Size  Location     Type
 11428 ;;  strPtr          1  [STACK] const unsigned char 
 11429 ;; Auto vars:     Size  Location     Type
 11430 ;;		None
 11431 ;; Return value:  Size  Location     Type
 11432 ;;                  1  [STACK] void 
 11433 ;; Registers used:
 11434 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11435 ;; Tracked objects:
 11436 ;;		On entry : 0/0
 11437 ;;		On exit  : 3F/3B
 11438 ;;		Unchanged: 0/0
 11439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11444 ;;Total ram usage:        0 bytes
 11445 ;; Hardware stack levels used:    1
 11446 ;; Hardware stack levels required when called:   24
 11447 ;; This function calls:
 11448 ;;		_printf
 11449 ;;		_ringBufS_flush
 11450 ;;		_start_lcd
 11451 ;;		_wait_lcd_set
 11452 ;; This function is called by:
 11453 ;;		_send_lcd_cmd_dma
 11454 ;;		_eaDogM_WriteStringAtPos
 11455 ;; This function uses a reentrant model
 11456 ;;
 11457                           
 11458                           	psect	text44
 11459  01B89E                     __ptext44:
 11460                           	opt callstack 0
 11461  01B89E                     _send_lcd_data_dma:
 11462                           	opt callstack 4
 11463                           
 11464                           ;eadog.c: 182: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 183: {;eadog.c: 184
      +                          :  wait_lcd_set();
 11465                           
 11466                           ; BSR set to: 0
 11467                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11468                           ;incstack = 0
 11469  01B89E  EC48  F0E3         	call	_wait_lcd_set	;wreg free
 11470                           
 11471                           ; BSR set to: 1
 11472                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 11473  01B8A2  0E00               	movlw	0
 11474  01B8A4  6EE6               	movwf	postinc1,c
 11475  01B8A6  0060  F757  FFE6   	movff	_spi_link+6,postinc1
 11476  01B8AC  0060  F75B  FFE6   	movff	_spi_link+7,postinc1
 11477  01B8B2  EC3B  F0D7         	call	_ringBufS_flush	;wreg free
 11478  01B8B6  94BC               	bcf	188,2,c	;volatile
 11479                           
 11480                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 11481  01B8B8  013B               	movlb	59	; () banked
 11482  01B8BA  9FFC               	bcf	252,7,b	;volatile
 11483                           
 11484                           ; BSR set to: 59
 11485                           ;eadog.c: 189:  DMA1SSZ = 1;
 11486  01B8BC  0E00               	movlw	0
 11487  01B8BE  6FF8               	movwf	248,b	;volatile
 11488  01B8C0  0E01               	movlw	1
 11489  01B8C2  6FF7               	movwf	247,b	;volatile
 11490                           
 11491                           ; BSR set to: 59
 11492                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 11493  01B8C4  8FFC               	bsf	252,7,b	;volatile
 11494                           
 11495                           ; BSR set to: 59
 11496                           ;eadog.c: 191:  printf("%c", strPtr);
 11497                           ;stkvar	_strPtr @ sp[(0)+-1]
 11498  01B8C6  0EFF               	movlw	-1
 11499  01B8C8  50E3               	movf	plusw1,w,c
 11500  01B8CA  6EE6               	movwf	postinc1,c
 11501  01B8CC  0E00               	movlw	0
 11502  01B8CE  6EE6               	movwf	postinc1,c
 11503  01B8D0  0EF9               	movlw	low STR_44
 11504  01B8D2  6EE6               	movwf	postinc1,c
 11505  01B8D4  0EFF               	movlw	high STR_44
 11506  01B8D6  6EE6               	movwf	postinc1,c
 11507  01B8D8  0E04               	movlw	4
 11508  01B8DA  6EE6               	movwf	postinc1,c
 11509  01B8DC  ECBD  F0DA         	call	_printf	;wreg free
 11510                           
 11511                           ; BSR set to: 0
 11512                           ;eadog.c: 192:  start_lcd();
 11513  01B8E0  EC4B  F0E3         	call	_start_lcd	;wreg free
 11514                           
 11515                           ; BSR set to: 59
 11516                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 11517  01B8E4  52E5               	movf	postdec1,f,c
 11518  01B8E6  0012               	return		;funcret
 11519  01B8E8                     __end_of_send_lcd_data_dma:
 11520                           	opt callstack 0
 11521                           
 11522 ;; *************** function _eaDogM_WriteString *****************
 11523 ;; Defined at:
 11524 ;;		line 151 in file "eadog.c"
 11525 ;; Parameters:    Size  Location     Type
 11526 ;;  strPtr          2  [STACK] PTR unsigned char 
 11527 ;;		 -> D.lcd(480), D(482), V(191), 
 11528 ;; Auto vars:     Size  Location     Type
 11529 ;;		None
 11530 ;; Return value:  Size  Location     Type
 11531 ;;                  1  [STACK] void 
 11532 ;; Registers used:
 11533 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11534 ;; Tracked objects:
 11535 ;;		On entry : 3F/0
 11536 ;;		On exit  : 3F/3B
 11537 ;;		Unchanged: 0/0
 11538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11543 ;;Total ram usage:        0 bytes
 11544 ;; Hardware stack levels used:    1
 11545 ;; Hardware stack levels required when called:   24
 11546 ;; This function calls:
 11547 ;;		_printf
 11548 ;;		_ringBufS_flush
 11549 ;;		_start_lcd
 11550 ;;		_strlen
 11551 ;;		_wait_lcd_set
 11552 ;; This function is called by:
 11553 ;;		_eaDogM_WriteStringAtPos
 11554 ;; This function uses a reentrant model
 11555 ;;
 11556                           
 11557                           	psect	text45
 11558  01AC96                     __ptext45:
 11559                           	opt callstack 0
 11560  01AC96                     _eaDogM_WriteString:
 11561                           	opt callstack 4
 11562                           
 11563                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 11564                           
 11565                           ; BSR set to: 59
 11566                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11567                           ;incstack = 0
 11568  01AC96  EC48  F0E3         	call	_wait_lcd_set	;wreg free
 11569                           
 11570                           ; BSR set to: 1
 11571                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 11572  01AC9A  0E00               	movlw	0
 11573  01AC9C  6EE6               	movwf	postinc1,c
 11574  01AC9E  0060  F757  FFE6   	movff	_spi_link+6,postinc1
 11575  01ACA4  0060  F75B  FFE6   	movff	_spi_link+7,postinc1
 11576  01ACAA  EC3B  F0D7         	call	_ringBufS_flush	;wreg free
 11577  01ACAE  94BC               	bcf	188,2,c	;volatile
 11578                           
 11579                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 11580                           ;stkvar	_strPtr @ sp[(0)+-2]
 11581  01ACB0  0EFE               	movlw	-2
 11582  01ACB2  006F FF8F FFE6     	movff	plusw1,postinc1
 11583  01ACB8  006F FF8F FFE6     	movff	plusw1,postinc1
 11584  01ACBE  EC9E  F0D6         	call	_strlen	;wreg free
 11585  01ACC2  5002               	movf	(btemp+1)^0,w,c
 11586  01ACC4  E104               	bnz	u12480
 11587  01ACC6  0E41               	movlw	65
 11588  01ACC8  5C01               	subwf	btemp^0,w,c
 11589  01ACCA  A0D8               	btfss	status,0,c
 11590  01ACCC  D010               	goto	l13028
 11591  01ACCE                     u12480:
 11592                           
 11593                           ;stkvar	_strPtr @ sp[(0)+-2]
 11594  01ACCE  0EFE               	movlw	-2
 11595  01ACD0  006F FF8C  F00B    	movff	plusw1,btemp+10
 11596  01ACD6  0EFF               	movlw	-1
 11597  01ACD8  006F FF8C  F00C    	movff	plusw1,btemp+11
 11598  01ACDE  0E40               	movlw	64
 11599  01ACE0  240B               	addwf	(btemp+10)^0,w,c
 11600  01ACE2  6ED9               	movwf	fsr2l,c
 11601  01ACE4  0E00               	movlw	0
 11602  01ACE6  200C               	addwfc	(btemp+11)^0,w,c
 11603  01ACE8  6EDA               	movwf	fsr2h,c
 11604  01ACEA  0E00               	movlw	0
 11605  01ACEC  6EDF               	movwf	indf2,c
 11606  01ACEE                     l13028:
 11607                           
 11608                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 11609  01ACEE  013B               	movlb	59	; () banked
 11610  01ACF0  9FFC               	bcf	252,7,b	;volatile
 11611                           
 11612                           ; BSR set to: 59
 11613                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 11614                           ;stkvar	_strPtr @ sp[(0)+-2]
 11615  01ACF2  0EFE               	movlw	-2
 11616  01ACF4  006F FF8F FFE6     	movff	plusw1,postinc1
 11617  01ACFA  006F FF8F FFE6     	movff	plusw1,postinc1
 11618  01AD00  EC9E  F0D6         	call	_strlen	;wreg free
 11619  01AD04  0060  F007  FBF7   	movff	btemp,15351	;volatile
 11620  01AD0A  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
 11621                           
 11622                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 11623  01AD10  013B               	movlb	59	; () banked
 11624  01AD12  8FFC               	bsf	252,7,b	;volatile
 11625                           
 11626                           ; BSR set to: 59
 11627                           ;eadog.c: 161:  printf("%s", strPtr);
 11628                           ;stkvar	_strPtr @ sp[(0)+-2]
 11629  01AD14  0EFE               	movlw	-2
 11630  01AD16  006F FF8F FFE6     	movff	plusw1,postinc1
 11631  01AD1C  006F FF8F FFE6     	movff	plusw1,postinc1
 11632  01AD22  0EFC               	movlw	low STR_43
 11633  01AD24  6EE6               	movwf	postinc1,c
 11634  01AD26  0EFF               	movlw	high STR_43
 11635  01AD28  6EE6               	movwf	postinc1,c
 11636  01AD2A  0E04               	movlw	4
 11637  01AD2C  6EE6               	movwf	postinc1,c
 11638  01AD2E  ECBD  F0DA         	call	_printf	;wreg free
 11639                           
 11640                           ; BSR set to: 0
 11641                           ;eadog.c: 162:  start_lcd();
 11642  01AD32  EC4B  F0E3         	call	_start_lcd	;wreg free
 11643                           
 11644                           ; BSR set to: 59
 11645                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 11646  01AD36  52E5               	movf	postdec1,f,c
 11647  01AD38  52E5               	movf	postdec1,f,c
 11648  01AD3A  0012               	return		;funcret
 11649  01AD3C                     __end_of_eaDogM_WriteString:
 11650                           	opt callstack 0
 11651                           
 11652 ;; *************** function _wait_lcd_set *****************
 11653 ;; Defined at:
 11654 ;;		line 434 in file "eadog.c"
 11655 ;; Parameters:    Size  Location     Type
 11656 ;;		None
 11657 ;; Auto vars:     Size  Location     Type
 11658 ;;		None
 11659 ;; Return value:  Size  Location     Type
 11660 ;;                  1  [STACK] void 
 11661 ;; Registers used:
 11662 ;;		None
 11663 ;; Tracked objects:
 11664 ;;		On entry : 0/0
 11665 ;;		On exit  : 3F/1
 11666 ;;		Unchanged: 0/0
 11667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11672 ;;Total ram usage:        0 bytes
 11673 ;; Hardware stack levels used:    1
 11674 ;; Hardware stack levels required when called:   15
 11675 ;; This function calls:
 11676 ;;		Nothing
 11677 ;; This function is called by:
 11678 ;;		_eaDogM_WriteString
 11679 ;;		_send_lcd_data_dma
 11680 ;; This function uses a reentrant model
 11681 ;;
 11682                           
 11683                           	psect	text46
 11684  01C690                     __ptext46:
 11685                           	opt callstack 0
 11686  01C690                     _wait_lcd_set:
 11687                           	opt callstack 12
 11688                           
 11689                           ;eadog.c: 436:  spi_link.LCD_DATA = 1;
 11690                           
 11691                           ; BSR set to: 59
 11692                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11693                           ;incstack = 0
 11694  01C690  0101               	movlb	1	; () banked
 11695  01C692  87CF               	bsf	_spi_link& (0+255),3,b	;volatile
 11696                           
 11697                           ; BSR set to: 1
 11698                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 11699  01C694  0012               	return		;funcret
 11700  01C696                     __end_of_wait_lcd_set:
 11701                           	opt callstack 0
 11702                           
 11703 ;; *************** function _start_lcd *****************
 11704 ;; Defined at:
 11705 ;;		line 429 in file "eadog.c"
 11706 ;; Parameters:    Size  Location     Type
 11707 ;;		None
 11708 ;; Auto vars:     Size  Location     Type
 11709 ;;		None
 11710 ;; Return value:  Size  Location     Type
 11711 ;;                  1  [STACK] void 
 11712 ;; Registers used:
 11713 ;;		None
 11714 ;; Tracked objects:
 11715 ;;		On entry : 3F/0
 11716 ;;		On exit  : 3F/3B
 11717 ;;		Unchanged: 0/0
 11718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11723 ;;Total ram usage:        0 bytes
 11724 ;; Hardware stack levels used:    1
 11725 ;; Hardware stack levels required when called:   15
 11726 ;; This function calls:
 11727 ;;		Nothing
 11728 ;; This function is called by:
 11729 ;;		_eaDogM_WriteString
 11730 ;;		_send_lcd_data_dma
 11731 ;; This function uses a reentrant model
 11732 ;;
 11733                           
 11734                           	psect	text47
 11735  01C696                     __ptext47:
 11736                           	opt callstack 0
 11737  01C696                     _start_lcd:
 11738                           	opt callstack 12
 11739                           
 11740                           ;eadog.c: 431:  DMA1CON0bits.DMA1SIRQEN = 1;
 11741                           
 11742                           ; BSR set to: 1
 11743                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11744                           ;incstack = 0
 11745  01C696  013B               	movlb	59	; () banked
 11746  01C698  8DFC               	bsf	252,6,b	;volatile
 11747                           
 11748                           ; BSR set to: 59
 11749                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 11750  01C69A  0012               	return		;funcret
 11751  01C69C                     __end_of_start_lcd:
 11752                           	opt callstack 0
 11753                           
 11754 ;; *************** function _ringBufS_flush *****************
 11755 ;; Defined at:
 11756 ;;		line 76 in file "ringbufs.c"
 11757 ;; Parameters:    Size  Location     Type
 11758 ;;  _this           2  [STACK] PTR struct ringBufS_t
 11759 ;;		 -> ring_buf1(67), 
 11760 ;;  clearBuffer     1  [STACK] const char 
 11761 ;; Auto vars:     Size  Location     Type
 11762 ;;		None
 11763 ;; Return value:  Size  Location     Type
 11764 ;;                  1  [STACK] void 
 11765 ;; Registers used:
 11766 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 11767 ;; Tracked objects:
 11768 ;;		On entry : 3F/1
 11769 ;;		On exit  : 0/0
 11770 ;;		Unchanged: 0/0
 11771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11776 ;;Total ram usage:        0 bytes
 11777 ;; Hardware stack levels used:    1
 11778 ;; Hardware stack levels required when called:   16
 11779 ;; This function calls:
 11780 ;;		_memset
 11781 ;; This function is called by:
 11782 ;;		_eaDogM_WriteString
 11783 ;;		_send_lcd_data_dma
 11784 ;; This function uses a reentrant model
 11785 ;;
 11786                           
 11787                           	psect	text48
 11788  01AE76                     __ptext48:
 11789                           	opt callstack 0
 11790  01AE76                     _ringBufS_flush:
 11791                           	opt callstack 11
 11792                           
 11793                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 11794                           ;stkvar	__this @ sp[(0)+-2]
 11795                           
 11796                           ; BSR set to: 59
 11797                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11798                           ;incstack = 0
 11799  01AE76  0EFE               	movlw	-2
 11800  01AE78  006F FF8C  F00B    	movff	plusw1,btemp+10
 11801  01AE7E  0EFF               	movlw	-1
 11802  01AE80  006F FF8C  F00C    	movff	plusw1,btemp+11
 11803  01AE86  0E42               	movlw	66
 11804  01AE88  240B               	addwf	(btemp+10)^0,w,c
 11805  01AE8A  6ED9               	movwf	fsr2l,c
 11806  01AE8C  0E00               	movlw	0
 11807  01AE8E  200C               	addwfc	(btemp+11)^0,w,c
 11808  01AE90  6EDA               	movwf	fsr2h,c
 11809  01AE92  0E00               	movlw	0
 11810  01AE94  6EDF               	movwf	indf2,c
 11811                           
 11812                           ;ringbufs.c: 79:  _this->head = 0;
 11813                           ;stkvar	__this @ sp[(0)+-2]
 11814  01AE96  0EFE               	movlw	-2
 11815  01AE98  006F FF8C  F00B    	movff	plusw1,btemp+10
 11816  01AE9E  0EFF               	movlw	-1
 11817  01AEA0  006F FF8C  F00C    	movff	plusw1,btemp+11
 11818  01AEA6  0E40               	movlw	64
 11819  01AEA8  240B               	addwf	(btemp+10)^0,w,c
 11820  01AEAA  6ED9               	movwf	fsr2l,c
 11821  01AEAC  0E00               	movlw	0
 11822  01AEAE  200C               	addwfc	(btemp+11)^0,w,c
 11823  01AEB0  6EDA               	movwf	fsr2h,c
 11824  01AEB2  0E00               	movlw	0
 11825  01AEB4  6EDF               	movwf	indf2,c
 11826                           
 11827                           ;ringbufs.c: 80:  _this->tail = 0;
 11828                           ;stkvar	__this @ sp[(0)+-2]
 11829  01AEB6  0EFE               	movlw	-2
 11830  01AEB8  006F FF8C  F00B    	movff	plusw1,btemp+10
 11831  01AEBE  0EFF               	movlw	-1
 11832  01AEC0  006F FF8C  F00C    	movff	plusw1,btemp+11
 11833  01AEC6  0E41               	movlw	65
 11834  01AEC8  240B               	addwf	(btemp+10)^0,w,c
 11835  01AECA  6ED9               	movwf	fsr2l,c
 11836  01AECC  0E00               	movlw	0
 11837  01AECE  200C               	addwfc	(btemp+11)^0,w,c
 11838  01AED0  6EDA               	movwf	fsr2h,c
 11839  01AED2  0E00               	movlw	0
 11840  01AED4  6EDF               	movwf	indf2,c
 11841                           
 11842                           ;ringbufs.c: 81:  if (clearBuffer) {
 11843                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 11844  01AED6  0EFD               	movlw	-3
 11845  01AED8  50E3               	movf	plusw1,w,c
 11846  01AEDA  B4D8               	btfsc	status,2,c
 11847  01AEDC  D011               	goto	l1601
 11848                           
 11849                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 11850  01AEDE  0E40               	movlw	64
 11851  01AEE0  6EE6               	movwf	postinc1,c
 11852  01AEE2  0E00               	movlw	0
 11853  01AEE4  6EE6               	movwf	postinc1,c
 11854  01AEE6  0E00               	movlw	0
 11855  01AEE8  6EE6               	movwf	postinc1,c
 11856  01AEEA  0E00               	movlw	0
 11857  01AEEC  6EE6               	movwf	postinc1,c
 11858                           
 11859                           ;stkvar	__this @ sp[(-4)+-2]
 11860  01AEEE  0EFA               	movlw	-6
 11861  01AEF0  006F FF8F FFE6     	movff	plusw1,postinc1
 11862  01AEF6  006F FF8F FFE6     	movff	plusw1,postinc1
 11863  01AEFC  EC40  F0B7         	call	_memset	;wreg free
 11864  01AF00                     l1601:
 11865                           
 11866                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 11867  01AF00  52E5               	movf	postdec1,f,c
 11868  01AF02  52E5               	movf	postdec1,f,c
 11869  01AF04  52E5               	movf	postdec1,f,c
 11870  01AF06  0012               	return		;funcret
 11871  01AF08                     __end_of_ringBufS_flush:
 11872                           	opt callstack 0
 11873                           
 11874 ;; *************** function _memset *****************
 11875 ;; Defined at:
 11876 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 11877 ;; Parameters:    Size  Location     Type
 11878 ;;  dest            2  [STACK] PTR void 
 11879 ;;		 -> ring_buf2(67), ring_buf1(67), 
 11880 ;;  c               2  [STACK] int 
 11881 ;;  n               2  [STACK] unsigned int 
 11882 ;; Auto vars:     Size  Location     Type
 11883 ;;  s               2  [STACK] PTR unsigned char 
 11884 ;;		 -> ring_buf2(67), ring_buf1(67), 
 11885 ;;  k               2  [STACK] unsigned int 
 11886 ;; Return value:  Size  Location     Type
 11887 ;;                  2  [STACK] PTR void 
 11888 ;; Registers used:
 11889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 11890 ;; Tracked objects:
 11891 ;;		On entry : 0/1
 11892 ;;		On exit  : 0/0
 11893 ;;		Unchanged: 0/0
 11894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11899 ;;Total ram usage:        0 bytes
 11900 ;; Hardware stack levels used:    1
 11901 ;; Hardware stack levels required when called:   15
 11902 ;; This function calls:
 11903 ;;		Nothing
 11904 ;; This function is called by:
 11905 ;;		_ringBufS_init
 11906 ;;		_ringBufS_flush
 11907 ;; This function uses a reentrant model
 11908 ;;
 11909                           
 11910                           	psect	text49
 11911  016E80                     __ptext49:
 11912                           	opt callstack 0
 11913  016E80                     _memset:
 11914                           	opt callstack 0
 11915                           
 11916                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11917  016E80  52E6               	movf	postinc1,f,c
 11918  016E82  52E6               	movf	postinc1,f,c
 11919  016E84  52E6               	movf	postinc1,f,c
 11920  016E86  52E6               	movf	postinc1,f,c
 11921                           
 11922                           ;stkvar	_dest @ sp[(-4)+-2]
 11923                           
 11924                           ;incstack = 0
 11925  016E88  0EFA               	movlw	-6
 11926  016E8A  006F FF8C  F00B    	movff	plusw1,btemp+10
 11927  016E90  0EFB               	movlw	-5
 11928  016E92  006F FF8C  F00C    	movff	plusw1,btemp+11
 11929                           
 11930                           ;stkvar	_s @ sp[(-4)+0]
 11931  016E98  0EFD               	movlw	-3
 11932  016E9A  0060  F033  FFE3   	movff	btemp+11,plusw1
 11933  016EA0  0EFC               	movlw	-4
 11934  016EA2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11935                           
 11936                           ;stkvar	_n @ sp[(-4)+-6]
 11937  016EA8  0EF6               	movlw	-10
 11938  016EAA  006F FF8C  F001    	movff	plusw1,btemp
 11939  016EB0  0EF7               	movlw	-9
 11940  016EB2  50E3               	movf	plusw1,w,c
 11941  016EB4  1001               	iorwf	btemp^0,w,c
 11942  016EB6  B4D8               	btfsc	status,2,c
 11943  016EB8  D154               	goto	u11030
 11944                           
 11945                           ;stkvar	_c @ sp[(-4)+-4]
 11946                           ;stkvar	_s @ sp[(-4)+0]
 11947  016EBA  0EFC               	movlw	-4
 11948  016EBC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11949  016EC2  0EFD               	movlw	-3
 11950  016EC4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11951  016ECA  0EF8               	movlw	-8
 11952  016ECC  006F FF8F FFDF     	movff	plusw1,indf2
 11953                           
 11954                           ;stkvar	_c @ sp[(-4)+-4]
 11955                           ;stkvar	_n @ sp[(-4)+-6]
 11956                           ;stkvar	_s @ sp[(-4)+0]
 11957  016ED2  0EFC               	movlw	-4
 11958  016ED4  006F FF8C  F00B    	movff	plusw1,btemp+10
 11959  016EDA  0EFD               	movlw	-3
 11960  016EDC  006F FF8C  F00C    	movff	plusw1,btemp+11
 11961  016EE2  0EF6               	movlw	-10
 11962  016EE4  50E3               	movf	plusw1,w,c
 11963  016EE6  260B               	addwf	(btemp+10)^0,f,c
 11964  016EE8  0EF7               	movlw	-9
 11965  016EEA  50E3               	movf	plusw1,w,c
 11966  016EEC  220C               	addwfc	(btemp+11)^0,f,c
 11967  016EEE  0EFF               	movlw	255
 11968  016EF0  240B               	addwf	(btemp+10)^0,w,c
 11969  016EF2  6ED9               	movwf	fsr2l,c
 11970  016EF4  0EFF               	movlw	255
 11971  016EF6  200C               	addwfc	(btemp+11)^0,w,c
 11972  016EF8  6EDA               	movwf	fsr2h,c
 11973  016EFA  0EF8               	movlw	-8
 11974  016EFC  006F FF8F FFDF     	movff	plusw1,indf2
 11975                           
 11976                           ;stkvar	_n @ sp[(-4)+-6]
 11977  016F02  0EF7               	movlw	-9
 11978  016F04  50E3               	movf	plusw1,w,c
 11979  016F06  E108               	bnz	l12180
 11980  016F08  0EF6               	movlw	-10
 11981  016F0A  006F FF8C  F001    	movff	plusw1,btemp
 11982  016F10  0E03               	movlw	3
 11983  016F12  5E01               	subwf	btemp^0,f,c
 11984  016F14  A0D8               	btfss	status,0,c
 11985  016F16  D125               	goto	u11030
 11986  016F18                     l12180:
 11987                           
 11988                           ;stkvar	_c @ sp[(-4)+-4]
 11989                           ;stkvar	_s @ sp[(-4)+0]
 11990  016F18  0EFC               	movlw	-4
 11991  016F1A  006F FF8C  F00B    	movff	plusw1,btemp+10
 11992  016F20  0EFD               	movlw	-3
 11993  016F22  006F FF8C  F00C    	movff	plusw1,btemp+11
 11994  016F28  0E01               	movlw	1
 11995  016F2A  240B               	addwf	(btemp+10)^0,w,c
 11996  016F2C  6ED9               	movwf	fsr2l,c
 11997  016F2E  0E00               	movlw	0
 11998  016F30  200C               	addwfc	(btemp+11)^0,w,c
 11999  016F32  6EDA               	movwf	fsr2h,c
 12000  016F34  0EF8               	movlw	-8
 12001  016F36  006F FF8F FFDF     	movff	plusw1,indf2
 12002                           
 12003                           ;stkvar	_c @ sp[(-4)+-4]
 12004                           ;stkvar	_s @ sp[(-4)+0]
 12005  016F3C  0EFC               	movlw	-4
 12006  016F3E  006F FF8C  F00B    	movff	plusw1,btemp+10
 12007  016F44  0EFD               	movlw	-3
 12008  016F46  006F FF8C  F00C    	movff	plusw1,btemp+11
 12009  016F4C  0E02               	movlw	2
 12010  016F4E  240B               	addwf	(btemp+10)^0,w,c
 12011  016F50  6ED9               	movwf	fsr2l,c
 12012  016F52  0E00               	movlw	0
 12013  016F54  200C               	addwfc	(btemp+11)^0,w,c
 12014  016F56  6EDA               	movwf	fsr2h,c
 12015  016F58  0EF8               	movlw	-8
 12016  016F5A  006F FF8F FFDF     	movff	plusw1,indf2
 12017                           
 12018                           ;stkvar	_c @ sp[(-4)+-4]
 12019                           ;stkvar	_n @ sp[(-4)+-6]
 12020                           ;stkvar	_s @ sp[(-4)+0]
 12021  016F60  0EFC               	movlw	-4
 12022  016F62  006F FF8C  F00B    	movff	plusw1,btemp+10
 12023  016F68  0EFD               	movlw	-3
 12024  016F6A  006F FF8C  F00C    	movff	plusw1,btemp+11
 12025  016F70  0EF6               	movlw	-10
 12026  016F72  50E3               	movf	plusw1,w,c
 12027  016F74  260B               	addwf	(btemp+10)^0,f,c
 12028  016F76  0EF7               	movlw	-9
 12029  016F78  50E3               	movf	plusw1,w,c
 12030  016F7A  220C               	addwfc	(btemp+11)^0,f,c
 12031  016F7C  0EFE               	movlw	254
 12032  016F7E  240B               	addwf	(btemp+10)^0,w,c
 12033  016F80  6ED9               	movwf	fsr2l,c
 12034  016F82  0EFF               	movlw	255
 12035  016F84  200C               	addwfc	(btemp+11)^0,w,c
 12036  016F86  6EDA               	movwf	fsr2h,c
 12037  016F88  0EF8               	movlw	-8
 12038  016F8A  006F FF8F FFDF     	movff	plusw1,indf2
 12039                           
 12040                           ;stkvar	_c @ sp[(-4)+-4]
 12041                           ;stkvar	_n @ sp[(-4)+-6]
 12042                           ;stkvar	_s @ sp[(-4)+0]
 12043  016F90  0EFC               	movlw	-4
 12044  016F92  006F FF8C  F00B    	movff	plusw1,btemp+10
 12045  016F98  0EFD               	movlw	-3
 12046  016F9A  006F FF8C  F00C    	movff	plusw1,btemp+11
 12047  016FA0  0EF6               	movlw	-10
 12048  016FA2  50E3               	movf	plusw1,w,c
 12049  016FA4  260B               	addwf	(btemp+10)^0,f,c
 12050  016FA6  0EF7               	movlw	-9
 12051  016FA8  50E3               	movf	plusw1,w,c
 12052  016FAA  220C               	addwfc	(btemp+11)^0,f,c
 12053  016FAC  0EFD               	movlw	253
 12054  016FAE  240B               	addwf	(btemp+10)^0,w,c
 12055  016FB0  6ED9               	movwf	fsr2l,c
 12056  016FB2  0EFF               	movlw	255
 12057  016FB4  200C               	addwfc	(btemp+11)^0,w,c
 12058  016FB6  6EDA               	movwf	fsr2h,c
 12059  016FB8  0EF8               	movlw	-8
 12060  016FBA  006F FF8F FFDF     	movff	plusw1,indf2
 12061                           
 12062                           ;stkvar	_n @ sp[(-4)+-6]
 12063  016FC0  0EF7               	movlw	-9
 12064  016FC2  50E3               	movf	plusw1,w,c
 12065  016FC4  E108               	bnz	l12186
 12066  016FC6  0EF6               	movlw	-10
 12067  016FC8  006F FF8C  F001    	movff	plusw1,btemp
 12068  016FCE  0E07               	movlw	7
 12069  016FD0  5E01               	subwf	btemp^0,f,c
 12070  016FD2  A0D8               	btfss	status,0,c
 12071  016FD4  D0C6               	goto	u11030
 12072  016FD6                     l12186:
 12073                           
 12074                           ;stkvar	_c @ sp[(-4)+-4]
 12075                           ;stkvar	_s @ sp[(-4)+0]
 12076  016FD6  0EFC               	movlw	-4
 12077  016FD8  006F FF8C  F00B    	movff	plusw1,btemp+10
 12078  016FDE  0EFD               	movlw	-3
 12079  016FE0  006F FF8C  F00C    	movff	plusw1,btemp+11
 12080  016FE6  0E03               	movlw	3
 12081  016FE8  240B               	addwf	(btemp+10)^0,w,c
 12082  016FEA  6ED9               	movwf	fsr2l,c
 12083  016FEC  0E00               	movlw	0
 12084  016FEE  200C               	addwfc	(btemp+11)^0,w,c
 12085  016FF0  6EDA               	movwf	fsr2h,c
 12086  016FF2  0EF8               	movlw	-8
 12087  016FF4  006F FF8F FFDF     	movff	plusw1,indf2
 12088                           
 12089                           ;stkvar	_c @ sp[(-4)+-4]
 12090                           ;stkvar	_n @ sp[(-4)+-6]
 12091                           ;stkvar	_s @ sp[(-4)+0]
 12092  016FFA  0EFC               	movlw	-4
 12093  016FFC  006F FF8C  F00B    	movff	plusw1,btemp+10
 12094  017002  0EFD               	movlw	-3
 12095  017004  006F FF8C  F00C    	movff	plusw1,btemp+11
 12096  01700A  0EF6               	movlw	-10
 12097  01700C  50E3               	movf	plusw1,w,c
 12098  01700E  260B               	addwf	(btemp+10)^0,f,c
 12099  017010  0EF7               	movlw	-9
 12100  017012  50E3               	movf	plusw1,w,c
 12101  017014  220C               	addwfc	(btemp+11)^0,f,c
 12102  017016  0EFC               	movlw	252
 12103  017018  240B               	addwf	(btemp+10)^0,w,c
 12104  01701A  6ED9               	movwf	fsr2l,c
 12105  01701C  0EFF               	movlw	255
 12106  01701E  200C               	addwfc	(btemp+11)^0,w,c
 12107  017020  6EDA               	movwf	fsr2h,c
 12108  017022  0EF8               	movlw	-8
 12109  017024  006F FF8F FFDF     	movff	plusw1,indf2
 12110                           
 12111                           ;stkvar	_n @ sp[(-4)+-6]
 12112  01702A  0EF7               	movlw	-9
 12113  01702C  50E3               	movf	plusw1,w,c
 12114  01702E  E108               	bnz	l12192
 12115  017030  0EF6               	movlw	-10
 12116  017032  006F FF8C  F001    	movff	plusw1,btemp
 12117  017038  0E09               	movlw	9
 12118  01703A  5E01               	subwf	btemp^0,f,c
 12119  01703C  A0D8               	btfss	status,0,c
 12120  01703E  D091               	goto	u11030
 12121  017040                     l12192:
 12122                           
 12123                           ;stkvar	_s @ sp[(-4)+0]
 12124  017040  0EFC               	movlw	-4
 12125  017042  006F FF8C  F00B    	movff	plusw1,btemp+10
 12126  017048  1E0B               	comf	(btemp+10)^0,f,c
 12127  01704A  0EFD               	movlw	-3
 12128  01704C  006F FF8C  F00C    	movff	plusw1,btemp+11
 12129  017052  1E0C               	comf	(btemp+11)^0,f,c
 12130  017054  2A0B               	incf	(btemp+10)^0,f,c
 12131  017056  B4D8               	btfsc	status,2,c
 12132  017058  2A0C               	incf	(btemp+11)^0,f,c
 12133  01705A  0E03               	movlw	3
 12134  01705C  160B               	andwf	(btemp+10)^0,f,c
 12135  01705E  0E00               	movlw	0
 12136  017060  160C               	andwf	(btemp+11)^0,f,c
 12137                           
 12138                           ;stkvar	_k @ sp[(-4)+2]
 12139  017062  0EFE               	movlw	-2
 12140  017064  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12141  01706A  0EFF               	movlw	-1
 12142  01706C  0060  F033  FFE3   	movff	btemp+11,plusw1
 12143                           
 12144                           ;stkvar	_k @ sp[(-4)+2]
 12145                           ;stkvar	_s @ sp[(-4)+0]
 12146  017072  0EFC               	movlw	-4
 12147  017074  50E3               	movf	plusw1,w,c
 12148  017076  6E01               	movwf	btemp^0,c
 12149  017078  0EFE               	movlw	-2
 12150  01707A  50E3               	movf	plusw1,w,c
 12151  01707C  2601               	addwf	btemp^0,f,c
 12152  01707E  0EFC               	movlw	-4
 12153  017080  0060  F007  FFE3   	movff	btemp,plusw1
 12154  017086  0EFD               	movlw	-3
 12155  017088  50E3               	movf	plusw1,w,c
 12156  01708A  6E01               	movwf	btemp^0,c
 12157  01708C  0EFF               	movlw	-1
 12158  01708E  50E3               	movf	plusw1,w,c
 12159  017090  2201               	addwfc	btemp^0,f,c
 12160  017092  0EFD               	movlw	-3
 12161  017094  0060  F007  FFE3   	movff	btemp,plusw1
 12162                           
 12163                           ;stkvar	_k @ sp[(-4)+2]
 12164                           ;stkvar	_n @ sp[(-4)+-6]
 12165  01709A  0EF6               	movlw	-10
 12166  01709C  50E3               	movf	plusw1,w,c
 12167  01709E  6E01               	movwf	btemp^0,c
 12168  0170A0  0EFE               	movlw	-2
 12169  0170A2  50E3               	movf	plusw1,w,c
 12170  0170A4  5E01               	subwf	btemp^0,f,c
 12171  0170A6  0EF6               	movlw	-10
 12172  0170A8  0060  F007  FFE3   	movff	btemp,plusw1
 12173  0170AE  0EF7               	movlw	-9
 12174  0170B0  50E3               	movf	plusw1,w,c
 12175  0170B2  6E01               	movwf	btemp^0,c
 12176  0170B4  0EFF               	movlw	-1
 12177  0170B6  50E3               	movf	plusw1,w,c
 12178  0170B8  5A01               	subwfb	btemp^0,f,c
 12179  0170BA  0EF7               	movlw	-9
 12180  0170BC  0060  F007  FFE3   	movff	btemp,plusw1
 12181  0170C2  0EFC               	movlw	252
 12182  0170C4  6E0B               	movwf	(btemp+10)^0,c
 12183  0170C6  0EFF               	movlw	255
 12184  0170C8  6E0C               	movwf	(btemp+11)^0,c
 12185                           
 12186                           ;stkvar	_n @ sp[(-4)+-6]
 12187  0170CA  0EF6               	movlw	-10
 12188  0170CC  006F FF8C  F001    	movff	plusw1,btemp
 12189  0170D2  500B               	movf	(btemp+10)^0,w,c
 12190  0170D4  1601               	andwf	btemp^0,f,c
 12191  0170D6  0EF6               	movlw	-10
 12192  0170D8  0060  F007  FFE3   	movff	btemp,plusw1
 12193  0170DE  0EF7               	movlw	-9
 12194  0170E0  006F FF8C  F001    	movff	plusw1,btemp
 12195  0170E6  500C               	movf	(btemp+11)^0,w,c
 12196  0170E8  1601               	andwf	btemp^0,f,c
 12197  0170EA  0EF7               	movlw	-9
 12198  0170EC  D02E               	goto	L10
 12199  0170EE                     l12200:
 12200                           
 12201                           ;stkvar	_c @ sp[(-4)+-4]
 12202                           ;stkvar	_s @ sp[(-4)+0]
 12203  0170EE  0EFC               	movlw	-4
 12204  0170F0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12205  0170F6  0EFD               	movlw	-3
 12206  0170F8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12207  0170FE  0EF8               	movlw	-8
 12208  017100  006F FF8F FFDF     	movff	plusw1,indf2
 12209                           
 12210                           ;stkvar	_n @ sp[(-4)+-6]
 12211  017106  0EF6               	movlw	-10
 12212  017108  006F FF8C  F001    	movff	plusw1,btemp
 12213  01710E  0E01               	movlw	1
 12214  017110  5E01               	subwf	btemp^0,f,c
 12215  017112  0EF6               	movlw	-10
 12216  017114  0060  F007  FFE3   	movff	btemp,plusw1
 12217  01711A  0EF7               	movlw	-9
 12218  01711C  006F FF8C  F001    	movff	plusw1,btemp
 12219  017122  0E00               	movlw	0
 12220  017124  5A01               	subwfb	btemp^0,f,c
 12221  017126  0EF7               	movlw	-9
 12222  017128  0060  F007  FFE3   	movff	btemp,plusw1
 12223                           
 12224                           ;stkvar	_s @ sp[(-4)+0]
 12225  01712E  0EFC               	movlw	-4
 12226  017130  50E3               	movf	plusw1,w,c
 12227  017132  0F01               	addlw	1
 12228  017134  6E01               	movwf	btemp^0,c
 12229  017136  0EFC               	movlw	-4
 12230  017138  0060  F007  FFE3   	movff	btemp,plusw1
 12231  01713E  6A01               	clrf	btemp^0,c
 12232  017140  0EFD               	movlw	-3
 12233  017142  50E3               	movf	plusw1,w,c
 12234  017144  2001               	addwfc	btemp^0,w,c
 12235  017146  6E01               	movwf	btemp^0,c
 12236  017148  0EFD               	movlw	-3
 12237  01714A                     L10:
 12238  01714A  0060  F007  FFE3   	movff	btemp,plusw1
 12239                           
 12240                           ;stkvar	_n @ sp[(-4)+-6]
 12241  017150  0EF6               	movlw	-10
 12242  017152  006F FF8C  F001    	movff	plusw1,btemp
 12243  017158  0EF7               	movlw	-9
 12244  01715A  50E3               	movf	plusw1,w,c
 12245  01715C  1001               	iorwf	btemp^0,w,c
 12246  01715E  A4D8               	btfss	status,2,c
 12247  017160  D7C6               	goto	l12200
 12248  017162                     u11030:
 12249                           
 12250                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 12251  017162  0EF6               	movlw	246
 12252  017164  26E1               	addwf	fsr1l,f,c
 12253  017166  0EFF               	movlw	255
 12254  017168  22E2               	addwfc	fsr1h,f,c
 12255  01716A  0012               	return		;funcret
 12256  01716C                     __end_of_memset:
 12257                           	opt callstack 0
 12258                           
 12259 ;; *************** function _printf *****************
 12260 ;; Defined at:
 12261 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 12262 ;; Parameters:    Size  Location     Type
 12263 ;;  fmt             2  [STACK] PTR const unsigned char 
 12264 ;;		 -> STR_44(3), STR_43(3), 
 12265 ;; Auto vars:     Size  Location     Type
 12266 ;;  ap              2  [STACK] PTR void [1]
 12267 ;;		 -> ?_printf(2), ?_sprintf(2), 
 12268 ;;  ret             2    0        int 
 12269 ;; Return value:  Size  Location     Type
 12270 ;;                  2  [STACK] int 
 12271 ;; Registers used:
 12272 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12273 ;; Tracked objects:
 12274 ;;		On entry : 3F/3B
 12275 ;;		On exit  : 3F/0
 12276 ;;		Unchanged: 0/0
 12277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12282 ;;Total ram usage:        0 bytes
 12283 ;; Hardware stack levels used:    1
 12284 ;; Hardware stack levels required when called:   23
 12285 ;; This function calls:
 12286 ;;		_vfprintf
 12287 ;; This function is called by:
 12288 ;;		_eaDogM_WriteString
 12289 ;;		_send_lcd_data_dma
 12290 ;; This function uses a reentrant model
 12291 ;;
 12292                           
 12293                           	psect	text50
 12294  01B57A                     __ptext50:
 12295                           	opt callstack 0
 12296  01B57A                     _printf:
 12297                           	opt callstack 0
 12298                           
 12299                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12300  01B57A  52E6               	movf	postinc1,f,c
 12301  01B57C  52E6               	movf	postinc1,f,c
 12302                           
 12303                           ;stkvar	?_printf @ sp[(-2)+-3]
 12304                           
 12305                           ;incstack = 0
 12306  01B57E  0EFB               	movlw	251
 12307  01B580  24E1               	addwf	fsr1l,w,c
 12308  01B582  6E0B               	movwf	(btemp+10)^0,c
 12309  01B584  0EFF               	movlw	255
 12310  01B586  20E2               	addwfc	fsr1h,w,c
 12311  01B588  6E0C               	movwf	(btemp+11)^0,c
 12312                           
 12313                           ;stkvar	_ap @ sp[(-2)+0]
 12314  01B58A  0EFF               	movlw	-1
 12315  01B58C  0060  F033  FFE3   	movff	btemp+11,plusw1
 12316  01B592  0EFE               	movlw	-2
 12317  01B594  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12318                           
 12319                           ;stkvar	_ap @ sp[(-2)+0]
 12320  01B59A  0EFE               	movlw	254
 12321  01B59C  24E1               	addwf	fsr1l,w,c
 12322  01B59E  6E01               	movwf	btemp^0,c
 12323  01B5A0  0EFF               	movlw	255
 12324  01B5A2  20E2               	addwfc	fsr1h,w,c
 12325  01B5A4  6E02               	movwf	(btemp+1)^0,c
 12326  01B5A6  0060  F007  FFE6   	movff	btemp,postinc1
 12327  01B5AC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12328                           
 12329                           ;stkvar	_fmt @ sp[(-4)+-3]
 12330  01B5B2  0EF9               	movlw	-7
 12331  01B5B4  006F FF8F FFE6     	movff	plusw1,postinc1
 12332  01B5BA  006F FF8F FFE6     	movff	plusw1,postinc1
 12333  01B5C0  0E00               	movlw	0
 12334  01B5C2  6EE6               	movwf	postinc1,c
 12335  01B5C4  0E00               	movlw	0
 12336  01B5C6  6EE6               	movwf	postinc1,c
 12337  01B5C8  EC4C  F0D5         	call	_vfprintf	;wreg free
 12338                           
 12339                           ; BSR set to: 0
 12340                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 12341  01B5CC  52E5               	movf	postdec1,f,c
 12342  01B5CE  52E5               	movf	postdec1,f,c
 12343  01B5D0  52E5               	movf	postdec1,f,c
 12344  01B5D2  50E7               	movf	indf1,w,c
 12345  01B5D4  5EE1               	subwf	fsr1l,f,c
 12346  01B5D6  0E00               	movlw	0
 12347  01B5D8  5AE2               	subwfb	fsr1h,f,c
 12348  01B5DA  0012               	return		;funcret
 12349  01B5DC                     __end_of_printf:
 12350                           	opt callstack 0
 12351                           
 12352 ;; *************** function _vfprintf *****************
 12353 ;; Defined at:
 12354 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12355 ;; Parameters:    Size  Location     Type
 12356 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12357 ;;		 -> f(6), NULL(0), 
 12358 ;;  fmt             2  [STACK] PTR const unsigned char 
 12359 ;;		 -> STR_64(127), STR_62(3), STR_61(3), STR_60(19), 
 12360 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 12361 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 12362 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 12363 ;;		 -> STR_47(19), STR_44(3), STR_43(3), STR_42(22), 
 12364 ;;		 -> STR_41(22), STR_40(22), STR_39(23), STR_38(23), 
 12365 ;;		 -> STR_37(23), STR_36(29), STR_35(23), STR_34(23), 
 12366 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 12367 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 12368 ;;		 -> STR_25(22), STR_24(22), STR_23(22), STR_22(22), 
 12369 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 12370 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 12371 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 12372 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 12373 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 12374 ;;  ap              2  [STACK] PTR PTR void 
 12375 ;;		 -> ap(2), ap(2), 
 12376 ;; Auto vars:     Size  Location     Type
 12377 ;;  cfmt            2  [STACK] PTR unsigned char 
 12378 ;;		 -> STR_64(127), STR_62(3), STR_61(3), STR_60(19), 
 12379 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 12380 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 12381 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 12382 ;;		 -> STR_47(19), STR_44(3), STR_43(3), STR_42(22), 
 12383 ;;		 -> STR_41(22), STR_40(22), STR_39(23), STR_38(23), 
 12384 ;;		 -> STR_37(23), STR_36(29), STR_35(23), STR_34(23), 
 12385 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 12386 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 12387 ;;		 -> STR_25(22), STR_24(22), STR_23(22), STR_22(22), 
 12388 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 12389 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 12390 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 12391 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 12392 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 12393 ;; Return value:  Size  Location     Type
 12394 ;;                  2  [STACK] int 
 12395 ;; Registers used:
 12396 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12397 ;; Tracked objects:
 12398 ;;		On entry : 0/1
 12399 ;;		On exit  : 3F/0
 12400 ;;		Unchanged: 0/0
 12401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12406 ;;Total ram usage:        0 bytes
 12407 ;; Hardware stack levels used:    1
 12408 ;; Hardware stack levels required when called:   22
 12409 ;; This function calls:
 12410 ;;		_vfpfcnvrt
 12411 ;; This function is called by:
 12412 ;;		_sprintf
 12413 ;;		_printf
 12414 ;; This function uses a reentrant model
 12415 ;;
 12416                           
 12417                           	psect	text51
 12418  01AA98                     __ptext51:
 12419                           	opt callstack 0
 12420  01AA98                     _vfprintf:
 12421                           	opt callstack 0
 12422                           
 12423                           ; BSR set to: 0
 12424                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12425  01AA98  52E6               	movf	postinc1,f,c
 12426  01AA9A  52E6               	movf	postinc1,f,c
 12427                           
 12428                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 12429                           ;stkvar	_fmt @ sp[(-2)+-4]
 12430                           
 12431                           ;incstack = 0
 12432 ;; hardware stack exceeded
 12433  01AA9C  0EFA               	movlw	-6
 12434  01AA9E  006F FF8C  F00B    	movff	plusw1,btemp+10
 12435  01AAA4  0EFB               	movlw	-5
 12436  01AAA6  006F FF8C  F00C    	movff	plusw1,btemp+11
 12437                           
 12438                           ;stkvar	_cfmt @ sp[(-2)+0]
 12439  01AAAC  0EFF               	movlw	-1
 12440  01AAAE  0060  F033  FFE3   	movff	btemp+11,plusw1
 12441  01AAB4  0EFE               	movlw	-2
 12442  01AAB6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12443                           
 12444                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 12445  01AABC  0100               	movlb	0	; () banked
 12446  01AABE  6B9A               	clrf	_nout& (0+255),b
 12447  01AAC0  6B9B               	clrf	(_nout+1)& (0+255),b
 12448                           
 12449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 12450  01AAC2  D021               	goto	l13050
 12451  01AAC4                     l13048:
 12452                           
 12453                           ; BSR set to: 0
 12454                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 12455                           ;stkvar	_ap @ sp[(-2)+-6]
 12456  01AAC4  0EF8               	movlw	-8
 12457  01AAC6  006F FF8F FFE6     	movff	plusw1,postinc1
 12458  01AACC  006F FF8F FFE6     	movff	plusw1,postinc1
 12459                           
 12460                           ;stkvar	_cfmt @ sp[(-4)+0]
 12461  01AAD2  0EFC               	movlw	252
 12462  01AAD4  24E1               	addwf	fsr1l,w,c
 12463  01AAD6  6E01               	movwf	btemp^0,c
 12464  01AAD8  0EFF               	movlw	255
 12465  01AADA  20E2               	addwfc	fsr1h,w,c
 12466  01AADC  6E02               	movwf	(btemp+1)^0,c
 12467  01AADE  0060  F007  FFE6   	movff	btemp,postinc1
 12468  01AAE4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12469                           
 12470                           ;stkvar	_fp @ sp[(-6)+-2]
 12471  01AAEA  0EF8               	movlw	-8
 12472  01AAEC  006F FF8F FFE6     	movff	plusw1,postinc1
 12473  01AAF2  006F FF8F FFE6     	movff	plusw1,postinc1
 12474  01AAF8  ECF6  F091         	call	_vfpfcnvrt	;wreg free
 12475  01AAFC  5001               	movf	btemp^0,w,c
 12476  01AAFE  0100               	movlb	0	; () banked
 12477  01AB00  279A               	addwf	_nout& (0+255),f,b
 12478  01AB02  5002               	movf	(btemp+1)^0,w,c
 12479  01AB04  239B               	addwfc	(_nout+1)& (0+255),f,b
 12480  01AB06                     l13050:
 12481                           
 12482                           ; BSR set to: 0
 12483                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 12484                           ;stkvar	_cfmt @ sp[(-2)+0]
 12485  01AB06  50E1               	movf	fsr1l,w,c
 12486  01AB08  0FFE               	addlw	-2
 12487  01AB0A  6ED9               	movwf	fsr2l,c
 12488  01AB0C  50E2               	movf	fsr1h,w,c
 12489  01AB0E  6EDA               	movwf	fsr2h,c
 12490  01AB10  0EFF               	movlw	255
 12491  01AB12  22DA               	addwfc	fsr2h,f,c
 12492  01AB14  006F FF7B FFF6     	movff	postinc2,tblptrl
 12493  01AB1A  006F FF77 FFF7     	movff	postdec2,tblptrh
 12494  01AB20                     	if	0	;tblptru may be non-zero
 12495  01AB20                     	endif
 12496  01AB20                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12497  01AB20  0E00               	movlw	low (__mediumconst shr (0+16))
 12498  01AB22  6EF8               	movwf	tblptru,c
 12499  01AB24                     	endif
 12500  01AB24  0008               	tblrd		*
 12501  01AB26  50F5               	movf	tablat,w,c
 12502  01AB28  0900               	iorlw	0
 12503  01AB2A  A4D8               	btfss	status,2,c
 12504  01AB2C  D7CB               	goto	l13048
 12505                           
 12506                           ; BSR set to: 0
 12507                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 12508  01AB2E  0060  F268  F001   	movff	_nout,btemp
 12509  01AB34  0060  F26C  F002   	movff	_nout+1,btemp+1
 12510                           
 12511                           ; BSR set to: 0
 12512                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 12513  01AB3A  0EF8               	movlw	248
 12514  01AB3C  26E1               	addwf	fsr1l,f,c
 12515  01AB3E  0EFF               	movlw	255
 12516  01AB40  22E2               	addwfc	fsr1h,f,c
 12517  01AB42  0012               	return		;funcret
 12518  01AB44                     __end_of_vfprintf:
 12519                           	opt callstack 0
 12520                           
 12521 ;; *************** function _vfpfcnvrt *****************
 12522 ;; Defined at:
 12523 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12524 ;; Parameters:    Size  Location     Type
 12525 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12526 ;;		 -> f(6), NULL(0), 
 12527 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 12528 ;;		 -> cfmt(2), 
 12529 ;;  ap              2  [STACK] PTR PTR void 
 12530 ;;		 -> ap(2), ap(2), 
 12531 ;; Auto vars:     Size  Location     Type
 12532 ;;  llu             8  [STACK] unsigned long long 
 12533 ;;  ll              8  [STACK] long long 
 12534 ;;  f               4  [STACK] long long 
 12535 ;;  ct              3  [STACK] unsigned char [3]
 12536 ;;  vp              3    0        PTR void 
 12537 ;;  cp              2  [STACK] PTR unsigned char 
 12538 ;;		 -> ?_printf(2), ?_sprintf(2), STR_46(9), STR_45(12), 
 12539 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 12540 ;;		 -> V(191), 
 12541 ;;  i               2    0        int 
 12542 ;;  done            2    0        int 
 12543 ;;  c               1  [STACK] unsigned char 
 12544 ;; Return value:  Size  Location     Type
 12545 ;;                  2  [STACK] int 
 12546 ;; Registers used:
 12547 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12548 ;; Tracked objects:
 12549 ;;		On entry : 0/0
 12550 ;;		On exit  : 0/0
 12551 ;;		Unchanged: 0/0
 12552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12557 ;;Total ram usage:        0 bytes
 12558 ;; Hardware stack levels used:    1
 12559 ;; Hardware stack levels required when called:   21
 12560 ;; This function calls:
 12561 ;;		_atoi
 12562 ;;		_ctoa
 12563 ;;		_dtoa
 12564 ;;		_efgtoa
 12565 ;;		_fputc
 12566 ;;		_isdigit
 12567 ;;		_isupper
 12568 ;;		_stoa
 12569 ;;		_strncmp
 12570 ;;		_tolower
 12571 ;;		_utoa
 12572 ;;		_xtoa
 12573 ;; This function is called by:
 12574 ;;		_vfprintf
 12575 ;; This function uses a reentrant model
 12576 ;;
 12577                           
 12578                           	psect	text52
 12579  0123EC                     __ptext52:
 12580                           	opt callstack 0
 12581  0123EC                     _vfpfcnvrt:
 12582                           	opt callstack 0
 12583                           
 12584                           ; BSR set to: 0
 12585                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 12586  0123EC  0E20               	movlw	32
 12587  0123EE  26E1               	addwf	fsr1l,f,c
 12588  0123F0  0E00               	movlw	0
 12589  0123F2  22E2               	addwfc	fsr1h,f,c
 12590                           
 12591                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 12592                           ;stkvar	_fmt @ sp[(-32)+-4]
 12593                           
 12594                           ;incstack = 0
 12595 ;; hardware stack exceeded
 12596  0123F4  0EDC               	movlw	-36
 12597  0123F6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12598  0123FC  0EDD               	movlw	-35
 12599  0123FE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12600  012404  006F FF7B FFF6     	movff	postinc2,tblptrl
 12601  01240A  006F FF77 FFF7     	movff	postdec2,tblptrh
 12602  012410                     	if	0	;tblptru may be non-zero
 12603  012410                     	endif
 12604  012410                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12605  012410  0E00               	movlw	low (__mediumconst shr (0+16))
 12606  012412  6EF8               	movwf	tblptru,c
 12607  012414                     	endif
 12608  012414  0008               	tblrd		*
 12609  012416  50F5               	movf	tablat,w,c
 12610  012418  0A25               	xorlw	37
 12611  01241A  A4D8               	btfss	status,2,c
 12612  01241C  EF9D  F099         	goto	l13010
 12613                           
 12614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 12615                           ;stkvar	_fmt @ sp[(-32)+-4]
 12616  012420  0EDC               	movlw	-36
 12617  012422  006F FF8F FFD9     	movff	plusw1,fsr2l
 12618  012428  0EDD               	movlw	-35
 12619  01242A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12620  012430  2ADE               	incf	postinc2,f,c
 12621  012432  0E00               	movlw	0
 12622  012434  22DD               	addwfc	postdec2,f,c
 12623                           
 12624                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 12625  012436  6A3A               	clrf	_width^0,c
 12626  012438  6A3B               	clrf	(_width+1)^0,c
 12627  01243A  6A3E               	clrf	_flags^0,c
 12628  01243C  6A3F               	clrf	(_flags+1)^0,c
 12629                           
 12630                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 12631  01243E  683C               	setf	_prec^0,c
 12632  012440  683D               	setf	(_prec+1)^0,c
 12633                           
 12634                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 12635                           ;stkvar	_fmt @ sp[(-32)+-4]
 12636  012442  0EDC               	movlw	-36
 12637  012444  006F FF8F FFD9     	movff	plusw1,fsr2l
 12638  01244A  0EDD               	movlw	-35
 12639  01244C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12640  012452  006F FF7B FFF6     	movff	postinc2,tblptrl
 12641  012458  006F FF77 FFF7     	movff	postdec2,tblptrh
 12642  01245E                     	if	0	;tblptru may be non-zero
 12643  01245E                     	endif
 12644  01245E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12645  01245E  0E00               	movlw	low (__mediumconst shr (0+16))
 12646  012460  6EF8               	movwf	tblptru,c
 12647  012462                     	endif
 12648  012462  0008               	tblrd		*
 12649  012464  50F5               	movf	tablat,w,c
 12650  012466  0A2A               	xorlw	42
 12651  012468  A4D8               	btfss	status,2,c
 12652  01246A  D031               	goto	l12828
 12653                           
 12654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 12655                           ;stkvar	_fmt @ sp[(-32)+-4]
 12656  01246C  0EDC               	movlw	-36
 12657  01246E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12658  012474  0EDD               	movlw	-35
 12659  012476  006F FF8F FFDA     	movff	plusw1,fsr2h
 12660  01247C  2ADE               	incf	postinc2,f,c
 12661  01247E  0E00               	movlw	0
 12662  012480  22DD               	addwfc	postdec2,f,c
 12663                           
 12664                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 12665                           ;stkvar	_ap @ sp[(-32)+-6]
 12666  012482  0EDA               	movlw	-38
 12667  012484  006F FF8F FFD9     	movff	plusw1,fsr2l
 12668  01248A  0EDB               	movlw	-37
 12669  01248C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12670  012492  0E02               	movlw	2
 12671  012494  5EDE               	subwf	postinc2,f,c
 12672  012496  0E00               	movlw	0
 12673  012498  5ADD               	subwfb	postdec2,f,c
 12674  01249A  006F FF78  F00B    	movff	postinc2,btemp+10
 12675  0124A0  006F FF74  F00C    	movff	postdec2,btemp+11
 12676  0124A6  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12677  0124AC  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12678  0124B2  006F FF78  F03A    	movff	postinc2,_width
 12679  0124B8  006F FF74  F03B    	movff	postdec2,_width+1
 12680                           
 12681                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 12682  0124BE  AE3B               	btfss	(_width+1)^0,7,c
 12683  0124C0  D066               	goto	u12220
 12684                           
 12685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 12686  0124C2  803E               	bsf	_flags^0,0,c
 12687                           
 12688                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 12689  0124C4  6C3A               	negf	_width^0,c
 12690  0124C6  1E3B               	comf	(_width+1)^0,f,c
 12691  0124C8  B0D8               	btfsc	status,0,c
 12692  0124CA  2A3B               	incf	(_width+1)^0,f,c
 12693  0124CC  D060               	goto	u12220
 12694  0124CE                     l12828:
 12695                           
 12696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 12697                           ;stkvar	_fmt @ sp[(-32)+-4]
 12698  0124CE  0EDC               	movlw	-36
 12699  0124D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12700  0124D6  0EDD               	movlw	-35
 12701  0124D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12702  0124DE  006F FF78  F00B    	movff	postinc2,btemp+10
 12703  0124E4  006F FF74  F00C    	movff	postdec2,btemp+11
 12704  0124EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12705  0124F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 12706  0124F6  ECC1  F0BC         	call	_atoi	;wreg free
 12707  0124FA  0060  F004  F03A   	movff	btemp,_width
 12708  012500  0060  F008  F03B   	movff	btemp+1,_width+1
 12709                           
 12710                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 12711  012506  D00B               	goto	l12832
 12712  012508                     l12830:
 12713                           
 12714                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 12715                           ;stkvar	_fmt @ sp[(-32)+-4]
 12716  012508  0EDC               	movlw	-36
 12717  01250A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12718  012510  0EDD               	movlw	-35
 12719  012512  006F FF8F FFDA     	movff	plusw1,fsr2h
 12720  012518  2ADE               	incf	postinc2,f,c
 12721  01251A  0E00               	movlw	0
 12722  01251C  22DD               	addwfc	postdec2,f,c
 12723  01251E                     l12832:
 12724  01251E  0ED0               	movlw	208
 12725  012520  6E0B               	movwf	(btemp+10)^0,c
 12726  012522  0EFF               	movlw	255
 12727  012524  6E0C               	movwf	(btemp+11)^0,c
 12728                           
 12729                           ;stkvar	_fmt @ sp[(-32)+-4]
 12730  012526  0EDC               	movlw	-36
 12731  012528  006F FF8F FFD9     	movff	plusw1,fsr2l
 12732  01252E  0EDD               	movlw	-35
 12733  012530  006F FF8F FFDA     	movff	plusw1,fsr2h
 12734  012536  006F FF7B FFF6     	movff	postinc2,tblptrl
 12735  01253C  006F FF77 FFF7     	movff	postdec2,tblptrh
 12736  012542                     	if	0	;tblptru may be non-zero
 12737  012542                     	endif
 12738  012542                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12739  012542  0E00               	movlw	low (__mediumconst shr (0+16))
 12740  012544  6EF8               	movwf	tblptru,c
 12741  012546                     	endif
 12742  012546  0008               	tblrd		*
 12743  012548  50F5               	movf	tablat,w,c
 12744  01254A  6E09               	movwf	(btemp+8)^0,c
 12745  01254C  6A0A               	clrf	(btemp+9)^0,c
 12746  01254E  500B               	movf	(btemp+10)^0,w,c
 12747  012550  2609               	addwf	(btemp+8)^0,f,c
 12748  012552  500C               	movf	(btemp+11)^0,w,c
 12749  012554  220A               	addwfc	(btemp+9)^0,f,c
 12750  012556  500A               	movf	(btemp+9)^0,w,c
 12751  012558  E106               	bnz	u12200
 12752  01255A  0E0A               	movlw	10
 12753  01255C  5C09               	subwf	(btemp+8)^0,w,c
 12754  01255E  B0D8               	btfsc	status,0,c
 12755  012560  D002               	goto	u12200
 12756  012562  0E01               	movlw	1
 12757  012564  D001               	goto	u12210
 12758  012566                     u12200:
 12759  012566  0E00               	movlw	0
 12760  012568                     u12210:
 12761  012568  6E0B               	movwf	(btemp+10)^0,c
 12762  01256A  6A0C               	clrf	(btemp+11)^0,c
 12763                           
 12764                           ;stkvar	_vfpfcnvrt$5878 @ sp[(-32)+4]
 12765  01256C  0EE4               	movlw	-28
 12766  01256E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12767  012574  0EE5               	movlw	-27
 12768  012576  0060  F033  FFE3   	movff	btemp+11,plusw1
 12769                           
 12770                           ;stkvar	_vfpfcnvrt$5878 @ sp[(-32)+4]
 12771  01257C  0EE4               	movlw	-28
 12772  01257E  006F FF8C  F001    	movff	plusw1,btemp
 12773  012584  0EE5               	movlw	-27
 12774  012586  50E3               	movf	plusw1,w,c
 12775  012588  1001               	iorwf	btemp^0,w,c
 12776  01258A  A4D8               	btfss	status,2,c
 12777  01258C  D7BD               	goto	l12830
 12778  01258E                     u12220:
 12779                           
 12780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 12781                           ;stkvar	_fmt @ sp[(-32)+-4]
 12782  01258E  0EDC               	movlw	-36
 12783  012590  006F FF8F FFD9     	movff	plusw1,fsr2l
 12784  012596  0EDD               	movlw	-35
 12785  012598  006F FF8F FFDA     	movff	plusw1,fsr2h
 12786  01259E  006F FF7B FFF6     	movff	postinc2,tblptrl
 12787  0125A4  006F FF77 FFF7     	movff	postdec2,tblptrh
 12788  0125AA                     	if	0	;tblptru may be non-zero
 12789  0125AA                     	endif
 12790  0125AA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12791  0125AA  0E00               	movlw	low (__mediumconst shr (0+16))
 12792  0125AC  6EF8               	movwf	tblptru,c
 12793  0125AE                     	endif
 12794  0125AE  0008               	tblrd		*
 12795  0125B0  50F5               	movf	tablat,w,c
 12796  0125B2  0A2E               	xorlw	46
 12797  0125B4  A4D8               	btfss	status,2,c
 12798  0125B6  D0AC               	goto	u12270
 12799                           
 12800                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 12801  0125B8  6A3C               	clrf	_prec^0,c
 12802  0125BA  6A3D               	clrf	(_prec+1)^0,c
 12803                           
 12804                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 12805                           ;stkvar	_fmt @ sp[(-32)+-4]
 12806  0125BC  0EDC               	movlw	-36
 12807  0125BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 12808  0125C4  0EDD               	movlw	-35
 12809  0125C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 12810  0125CC  2ADE               	incf	postinc2,f,c
 12811  0125CE  0E00               	movlw	0
 12812  0125D0  22DD               	addwfc	postdec2,f,c
 12813                           
 12814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 12815                           ;stkvar	_fmt @ sp[(-32)+-4]
 12816  0125D2  0EDC               	movlw	-36
 12817  0125D4  006F FF8F FFD9     	movff	plusw1,fsr2l
 12818  0125DA  0EDD               	movlw	-35
 12819  0125DC  006F FF8F FFDA     	movff	plusw1,fsr2h
 12820  0125E2  006F FF7B FFF6     	movff	postinc2,tblptrl
 12821  0125E8  006F FF77 FFF7     	movff	postdec2,tblptrh
 12822  0125EE                     	if	0	;tblptru may be non-zero
 12823  0125EE                     	endif
 12824  0125EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12825  0125EE  0E00               	movlw	low (__mediumconst shr (0+16))
 12826  0125F0  6EF8               	movwf	tblptru,c
 12827  0125F2                     	endif
 12828  0125F2  0008               	tblrd		*
 12829  0125F4  50F5               	movf	tablat,w,c
 12830  0125F6  0A2A               	xorlw	42
 12831  0125F8  A4D8               	btfss	status,2,c
 12832  0125FA  D02A               	goto	l12850
 12833                           
 12834                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 12835                           ;stkvar	_fmt @ sp[(-32)+-4]
 12836  0125FC  0EDC               	movlw	-36
 12837  0125FE  006F FF8F FFD9     	movff	plusw1,fsr2l
 12838  012604  0EDD               	movlw	-35
 12839  012606  006F FF8F FFDA     	movff	plusw1,fsr2h
 12840  01260C  2ADE               	incf	postinc2,f,c
 12841  01260E  0E00               	movlw	0
 12842  012610  22DD               	addwfc	postdec2,f,c
 12843                           
 12844                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 12845                           ;stkvar	_ap @ sp[(-32)+-6]
 12846  012612  0EDA               	movlw	-38
 12847  012614  006F FF8F FFD9     	movff	plusw1,fsr2l
 12848  01261A  0EDB               	movlw	-37
 12849  01261C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12850  012622  0E02               	movlw	2
 12851  012624  5EDE               	subwf	postinc2,f,c
 12852  012626  0E00               	movlw	0
 12853  012628  5ADD               	subwfb	postdec2,f,c
 12854  01262A  006F FF78  F00B    	movff	postinc2,btemp+10
 12855  012630  006F FF74  F00C    	movff	postdec2,btemp+11
 12856  012636  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12857  01263C  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12858  012642  006F FF78  F03C    	movff	postinc2,_prec
 12859  012648  006F FF74  F03D    	movff	postdec2,_prec+1
 12860                           
 12861                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 12862  01264E  D060               	goto	u12270
 12863  012650                     l12850:
 12864                           
 12865                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 12866                           ;stkvar	_fmt @ sp[(-32)+-4]
 12867  012650  0EDC               	movlw	-36
 12868  012652  006F FF8F FFD9     	movff	plusw1,fsr2l
 12869  012658  0EDD               	movlw	-35
 12870  01265A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12871  012660  006F FF78  F00B    	movff	postinc2,btemp+10
 12872  012666  006F FF74  F00C    	movff	postdec2,btemp+11
 12873  01266C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12874  012672  0060  F033  FFE6   	movff	btemp+11,postinc1
 12875  012678  ECC1  F0BC         	call	_atoi	;wreg free
 12876  01267C  0060  F004  F03C   	movff	btemp,_prec
 12877  012682  0060  F008  F03D   	movff	btemp+1,_prec+1
 12878                           
 12879                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 12880  012688  D00B               	goto	l12854
 12881  01268A                     l12852:
 12882                           
 12883                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 12884                           ;stkvar	_fmt @ sp[(-32)+-4]
 12885  01268A  0EDC               	movlw	-36
 12886  01268C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12887  012692  0EDD               	movlw	-35
 12888  012694  006F FF8F FFDA     	movff	plusw1,fsr2h
 12889  01269A  2ADE               	incf	postinc2,f,c
 12890  01269C  0E00               	movlw	0
 12891  01269E  22DD               	addwfc	postdec2,f,c
 12892  0126A0                     l12854:
 12893  0126A0  0ED0               	movlw	208
 12894  0126A2  6E0B               	movwf	(btemp+10)^0,c
 12895  0126A4  0EFF               	movlw	255
 12896  0126A6  6E0C               	movwf	(btemp+11)^0,c
 12897                           
 12898                           ;stkvar	_fmt @ sp[(-32)+-4]
 12899  0126A8  0EDC               	movlw	-36
 12900  0126AA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12901  0126B0  0EDD               	movlw	-35
 12902  0126B2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12903  0126B8  006F FF7B FFF6     	movff	postinc2,tblptrl
 12904  0126BE  006F FF77 FFF7     	movff	postdec2,tblptrh
 12905  0126C4                     	if	0	;tblptru may be non-zero
 12906  0126C4                     	endif
 12907  0126C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12908  0126C4  0E00               	movlw	low (__mediumconst shr (0+16))
 12909  0126C6  6EF8               	movwf	tblptru,c
 12910  0126C8                     	endif
 12911  0126C8  0008               	tblrd		*
 12912  0126CA  50F5               	movf	tablat,w,c
 12913  0126CC  6E09               	movwf	(btemp+8)^0,c
 12914  0126CE  6A0A               	clrf	(btemp+9)^0,c
 12915  0126D0  500B               	movf	(btemp+10)^0,w,c
 12916  0126D2  2609               	addwf	(btemp+8)^0,f,c
 12917  0126D4  500C               	movf	(btemp+11)^0,w,c
 12918  0126D6  220A               	addwfc	(btemp+9)^0,f,c
 12919  0126D8  500A               	movf	(btemp+9)^0,w,c
 12920  0126DA  E106               	bnz	u12250
 12921  0126DC  0E0A               	movlw	10
 12922  0126DE  5C09               	subwf	(btemp+8)^0,w,c
 12923  0126E0  B0D8               	btfsc	status,0,c
 12924  0126E2  D002               	goto	u12250
 12925  0126E4  0E01               	movlw	1
 12926  0126E6  D001               	goto	u12260
 12927  0126E8                     u12250:
 12928  0126E8  0E00               	movlw	0
 12929  0126EA                     u12260:
 12930  0126EA  6E0B               	movwf	(btemp+10)^0,c
 12931  0126EC  6A0C               	clrf	(btemp+11)^0,c
 12932                           
 12933                           ;stkvar	_vfpfcnvrt$5879 @ sp[(-32)+0]
 12934  0126EE  0EE0               	movlw	-32
 12935  0126F0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12936  0126F6  0EE1               	movlw	-31
 12937  0126F8  0060  F033  FFE3   	movff	btemp+11,plusw1
 12938                           
 12939                           ;stkvar	_vfpfcnvrt$5879 @ sp[(-32)+0]
 12940  0126FE  0EE0               	movlw	-32
 12941  012700  006F FF8C  F001    	movff	plusw1,btemp
 12942  012706  0EE1               	movlw	-31
 12943  012708  50E3               	movf	plusw1,w,c
 12944  01270A  1001               	iorwf	btemp^0,w,c
 12945  01270C  A4D8               	btfss	status,2,c
 12946  01270E  D7BD               	goto	l12852
 12947  012710                     u12270:
 12948                           
 12949                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 12950                           ;stkvar	_fmt @ sp[(-32)+-4]
 12951  012710  0EDC               	movlw	-36
 12952  012712  006F FF8F FFD9     	movff	plusw1,fsr2l
 12953  012718  0EDD               	movlw	-35
 12954  01271A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12955  012720  006F FF7B FFF6     	movff	postinc2,tblptrl
 12956  012726  006F FF77 FFF7     	movff	postdec2,tblptrh
 12957  01272C                     	if	0	;tblptru may be non-zero
 12958  01272C                     	endif
 12959  01272C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12960  01272C  0E00               	movlw	low (__mediumconst shr (0+16))
 12961  01272E  6EF8               	movwf	tblptru,c
 12962  012730                     	endif
 12963  012730  0008               	tblrd		*
 12964  012732  50F5               	movf	tablat,w,c
 12965  012734  6EE6               	movwf	postinc1,c
 12966  012736  0E00               	movlw	0
 12967  012738  6EE6               	movwf	postinc1,c
 12968  01273A  EC53  F0D8         	call	_tolower	;wreg free
 12969                           
 12970                           ;stkvar	_ct @ sp[(-32)+26]
 12971  01273E  0EFA               	movlw	-6
 12972  012740  0060  F007  FFE3   	movff	btemp,plusw1
 12973                           
 12974                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 12975                           ;stkvar	_ct @ sp[(-32)+26]
 12976  012746  0EFA               	movlw	-6
 12977  012748  50E3               	movf	plusw1,w,c
 12978  01274A  B4D8               	btfsc	status,2,c
 12979  01274C  D05B               	goto	l12870
 12980                           
 12981                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 12982                           ;stkvar	_ct @ sp[(-32)+26]
 12983  01274E  0EFB               	movlw	251
 12984  012750  24E1               	addwf	fsr1l,w,c
 12985  012752  6ED9               	movwf	fsr2l,c
 12986  012754  0EFF               	movlw	255
 12987  012756  20E2               	addwfc	fsr1h,w,c
 12988  012758  6EDA               	movwf	fsr2h,c
 12989                           
 12990                           ;stkvar	_fmt @ sp[(-32)+-4]
 12991  01275A  0EDC               	movlw	-36
 12992  01275C  006F FF8F FFE9     	movff	plusw1,fsr0l
 12993  012762  0EDD               	movlw	-35
 12994  012764  006F FF8F FFEA     	movff	plusw1,fsr0h
 12995  01276A  006F FFB8  F00B    	movff	postinc0,btemp+10
 12996  012770  006F FFB4  F00C    	movff	postdec0,btemp+11
 12997  012776  0E01               	movlw	1
 12998  012778  260B               	addwf	(btemp+10)^0,f,c
 12999  01277A  0E00               	movlw	0
 13000  01277C  220C               	addwfc	(btemp+11)^0,f,c
 13001  01277E  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 13002  012784  0060  F033  FFF7   	movff	btemp+11,tblptrh
 13003  01278A                     	if	0	;tblptru may be non-zero
 13004  01278A                     	endif
 13005  01278A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13006  01278A  0E00               	movlw	low (__mediumconst shr (0+16))
 13007  01278C  6EF8               	movwf	tblptru,c
 13008  01278E                     	endif
 13009  01278E  0008               	tblrd		*
 13010  012790  50F5               	movf	tablat,w,c
 13011  012792  6EE6               	movwf	postinc1,c
 13012  012794  0E00               	movlw	0
 13013  012796  6EE6               	movwf	postinc1,c
 13014  012798  EC53  F0D8         	call	_tolower	;wreg free
 13015  01279C  5001               	movf	btemp^0,w,c
 13016  01279E  6EDF               	movwf	indf2,c
 13017                           
 13018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 13019                           ;stkvar	_ct @ sp[(-32)+26]
 13020  0127A0  0EFB               	movlw	251
 13021  0127A2  24E1               	addwf	fsr1l,w,c
 13022  0127A4  6ED9               	movwf	fsr2l,c
 13023  0127A6  0EFF               	movlw	255
 13024  0127A8  20E2               	addwfc	fsr1h,w,c
 13025  0127AA  6EDA               	movwf	fsr2h,c
 13026  0127AC  50DF               	movf	indf2,w,c
 13027  0127AE  B4D8               	btfsc	status,2,c
 13028  0127B0  D029               	goto	l12870
 13029                           
 13030                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 13031                           ;stkvar	_ct @ sp[(-32)+26]
 13032  0127B2  0EFC               	movlw	252
 13033  0127B4  24E1               	addwf	fsr1l,w,c
 13034  0127B6  6ED9               	movwf	fsr2l,c
 13035  0127B8  0EFF               	movlw	255
 13036  0127BA  20E2               	addwfc	fsr1h,w,c
 13037  0127BC  6EDA               	movwf	fsr2h,c
 13038                           
 13039                           ;stkvar	_fmt @ sp[(-32)+-4]
 13040  0127BE  0EDC               	movlw	-36
 13041  0127C0  006F FF8F FFE9     	movff	plusw1,fsr0l
 13042  0127C6  0EDD               	movlw	-35
 13043  0127C8  006F FF8F FFEA     	movff	plusw1,fsr0h
 13044  0127CE  006F FFB8  F00B    	movff	postinc0,btemp+10
 13045  0127D4  006F FFB4  F00C    	movff	postdec0,btemp+11
 13046  0127DA  0E02               	movlw	2
 13047  0127DC  260B               	addwf	(btemp+10)^0,f,c
 13048  0127DE  0E00               	movlw	0
 13049  0127E0  220C               	addwfc	(btemp+11)^0,f,c
 13050  0127E2  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 13051  0127E8  0060  F033  FFF7   	movff	btemp+11,tblptrh
 13052  0127EE                     	if	0	;tblptru may be non-zero
 13053  0127EE                     	endif
 13054  0127EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13055  0127EE  0E00               	movlw	low (__mediumconst shr (0+16))
 13056  0127F0  6EF8               	movwf	tblptru,c
 13057  0127F2                     	endif
 13058  0127F2  0008               	tblrd		*
 13059  0127F4  50F5               	movf	tablat,w,c
 13060  0127F6  6EE6               	movwf	postinc1,c
 13061  0127F8  0E00               	movlw	0
 13062  0127FA  6EE6               	movwf	postinc1,c
 13063  0127FC  EC53  F0D8         	call	_tolower	;wreg free
 13064  012800  5001               	movf	btemp^0,w,c
 13065  012802  6EDF               	movwf	indf2,c
 13066  012804                     l12870:
 13067                           
 13068                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 13069                           ;stkvar	_fmt @ sp[(-32)+-4]
 13070  012804  0EDC               	movlw	-36
 13071  012806  006F FF8F FFD9     	movff	plusw1,fsr2l
 13072  01280C  0EDD               	movlw	-35
 13073  01280E  006F FF8F FFDA     	movff	plusw1,fsr2h
 13074  012814  006F FF7B FFF6     	movff	postinc2,tblptrl
 13075  01281A  006F FF77 FFF7     	movff	postdec2,tblptrh
 13076  012820                     	if	0	;tblptru may be non-zero
 13077  012820                     	endif
 13078  012820                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13079  012820  0E00               	movlw	low (__mediumconst shr (0+16))
 13080  012822  6EF8               	movwf	tblptru,c
 13081  012824                     	endif
 13082  012824  0008               	tblrd		*
 13083  012826  50F5               	movf	tablat,w,c
 13084  012828  0A63               	xorlw	99
 13085  01282A  A4D8               	btfss	status,2,c
 13086  01282C  D037               	goto	l12880
 13087                           
 13088                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 13089                           ;stkvar	_fmt @ sp[(-32)+-4]
 13090  01282E  0EDC               	movlw	-36
 13091  012830  006F FF8F FFD9     	movff	plusw1,fsr2l
 13092  012836  0EDD               	movlw	-35
 13093  012838  006F FF8F FFDA     	movff	plusw1,fsr2h
 13094  01283E  2ADE               	incf	postinc2,f,c
 13095  012840  0E00               	movlw	0
 13096  012842  22DD               	addwfc	postdec2,f,c
 13097                           
 13098                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 13099                           ;stkvar	_ap @ sp[(-32)+-6]
 13100  012844  0EDA               	movlw	-38
 13101  012846  006F FF8F FFD9     	movff	plusw1,fsr2l
 13102  01284C  0EDB               	movlw	-37
 13103  01284E  006F FF8F FFDA     	movff	plusw1,fsr2h
 13104  012854  0E02               	movlw	2
 13105  012856  5EDE               	subwf	postinc2,f,c
 13106  012858  0E00               	movlw	0
 13107  01285A  5ADD               	subwfb	postdec2,f,c
 13108  01285C  006F FF78  F00B    	movff	postinc2,btemp+10
 13109  012862  006F FF74  F00C    	movff	postdec2,btemp+11
 13110  012868  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13111  01286E  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13112  012874  50DF               	movf	indf2,w,c
 13113  012876  6E0C               	movwf	(btemp+11)^0,c
 13114                           
 13115                           ;stkvar	_c @ sp[(-32)+31]
 13116  012878  0EFF               	movlw	-1
 13117  01287A  0060  F033  FFE3   	movff	btemp+11,plusw1
 13118                           
 13119                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 13120                           ;stkvar	_c @ sp[(-32)+31]
 13121  012880  0EFF               	movlw	-1
 13122  012882  50E3               	movf	plusw1,w,c
 13123  012884  6EE6               	movwf	postinc1,c
 13124                           
 13125                           ;stkvar	_fp @ sp[(-33)+-2]
 13126  012886  0EDD               	movlw	-35
 13127  012888  006F FF8F FFE6     	movff	plusw1,postinc1
 13128  01288E  006F FF8F FFE6     	movff	plusw1,postinc1
 13129  012894  ECCD  F0D7         	call	_ctoa	;wreg free
 13130  012898  EFC7  F099         	goto	l2470
 13131  01289C                     l12880:
 13132                           
 13133                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 13134                           ;stkvar	_fmt @ sp[(-32)+-4]
 13135  01289C  0EDC               	movlw	-36
 13136  01289E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13137  0128A4  0EDD               	movlw	-35
 13138  0128A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 13139  0128AC  006F FF7B FFF6     	movff	postinc2,tblptrl
 13140  0128B2  006F FF77 FFF7     	movff	postdec2,tblptrh
 13141  0128B8                     	if	0	;tblptru may be non-zero
 13142  0128B8                     	endif
 13143  0128B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13144  0128B8  0E00               	movlw	low (__mediumconst shr (0+16))
 13145  0128BA  6EF8               	movwf	tblptru,c
 13146  0128BC                     	endif
 13147  0128BC  0008               	tblrd		*
 13148  0128BE  50F5               	movf	tablat,w,c
 13149  0128C0  0A64               	xorlw	100
 13150  0128C2  B4D8               	btfsc	status,2,c
 13151  0128C4  D015               	goto	u12320
 13152                           
 13153                           ;stkvar	_fmt @ sp[(-32)+-4]
 13154  0128C6  0EDC               	movlw	-36
 13155  0128C8  006F FF8F FFD9     	movff	plusw1,fsr2l
 13156  0128CE  0EDD               	movlw	-35
 13157  0128D0  006F FF8F FFDA     	movff	plusw1,fsr2h
 13158  0128D6  006F FF7B FFF6     	movff	postinc2,tblptrl
 13159  0128DC  006F FF77 FFF7     	movff	postdec2,tblptrh
 13160  0128E2                     	if	0	;tblptru may be non-zero
 13161  0128E2                     	endif
 13162  0128E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13163  0128E2  0E00               	movlw	low (__mediumconst shr (0+16))
 13164  0128E4  6EF8               	movwf	tblptru,c
 13165  0128E6                     	endif
 13166  0128E6  0008               	tblrd		*
 13167  0128E8  50F5               	movf	tablat,w,c
 13168  0128EA  0A69               	xorlw	105
 13169  0128EC  A4D8               	btfss	status,2,c
 13170  0128EE  D076               	goto	l12892
 13171  0128F0                     u12320:
 13172                           
 13173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 13174                           ;stkvar	_fmt @ sp[(-32)+-4]
 13175  0128F0  0EDC               	movlw	-36
 13176  0128F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 13177  0128F8  0EDD               	movlw	-35
 13178  0128FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 13179  012900  2ADE               	incf	postinc2,f,c
 13180  012902  0E00               	movlw	0
 13181  012904  22DD               	addwfc	postdec2,f,c
 13182                           
 13183                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 13184                           ;stkvar	_ap @ sp[(-32)+-6]
 13185  012906  0EDA               	movlw	-38
 13186  012908  006F FF8F FFD9     	movff	plusw1,fsr2l
 13187  01290E  0EDB               	movlw	-37
 13188  012910  006F FF8F FFDA     	movff	plusw1,fsr2h
 13189  012916  0E02               	movlw	2
 13190  012918  5EDE               	subwf	postinc2,f,c
 13191  01291A  0E00               	movlw	0
 13192  01291C  5ADD               	subwfb	postdec2,f,c
 13193  01291E  006F FF78  F00B    	movff	postinc2,btemp+10
 13194  012924  006F FF74  F00C    	movff	postdec2,btemp+11
 13195  01292A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13196  012930  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13197  012936  006F FF78  F00B    	movff	postinc2,btemp+10
 13198  01293C  006F FF74  F00C    	movff	postdec2,btemp+11
 13199                           
 13200                           ;stkvar	_ll @ sp[(-32)+14]
 13201  012942  0EEE               	movlw	-18
 13202  012944  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13203  01294A  0EEF               	movlw	-17
 13204  01294C  0060  F033  FFE3   	movff	btemp+11,plusw1
 13205  012952  6A01               	clrf	btemp^0,c
 13206  012954  BEE3               	btfsc	plusw1,7,c
 13207  012956  6801               	setf	btemp^0,c
 13208  012958  0EF0               	movlw	-16
 13209  01295A  0060  F007  FFE3   	movff	btemp,plusw1
 13210  012960  0EF1               	movlw	-15
 13211  012962  0060  F007  FFE3   	movff	btemp,plusw1
 13212  012968  0EF2               	movlw	-14
 13213  01296A  0060  F007  FFE3   	movff	btemp,plusw1
 13214  012970  0EF3               	movlw	-13
 13215  012972  0060  F007  FFE3   	movff	btemp,plusw1
 13216  012978  0EF4               	movlw	-12
 13217  01297A  0060  F007  FFE3   	movff	btemp,plusw1
 13218  012980  0EF5               	movlw	-11
 13219  012982  0060  F007  FFE3   	movff	btemp,plusw1
 13220  012988                     l12888:
 13221                           
 13222                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 13223                           ;stkvar	_ll @ sp[(-32)+14]
 13224  012988  50E1               	movf	fsr1l,w,c
 13225  01298A  0FEE               	addlw	-18
 13226  01298C  6ED9               	movwf	fsr2l,c
 13227  01298E  50E2               	movf	fsr1h,w,c
 13228  012990  6EDA               	movwf	fsr2h,c
 13229  012992  0EFF               	movlw	255
 13230  012994  22DA               	addwfc	fsr2h,f,c
 13231  012996  006F FF7B FFE6     	movff	postinc2,postinc1
 13232  01299C  006F FF7B FFE6     	movff	postinc2,postinc1
 13233  0129A2  006F FF7B FFE6     	movff	postinc2,postinc1
 13234  0129A8  006F FF7B FFE6     	movff	postinc2,postinc1
 13235  0129AE  006F FF7B FFE6     	movff	postinc2,postinc1
 13236  0129B4  006F FF7B FFE6     	movff	postinc2,postinc1
 13237  0129BA  006F FF7B FFE6     	movff	postinc2,postinc1
 13238  0129C0  006F FF7B FFE6     	movff	postinc2,postinc1
 13239                           
 13240                           ;stkvar	_fp @ sp[(-40)+-2]
 13241  0129C6  0ED6               	movlw	-42
 13242  0129C8  006F FF8F FFE6     	movff	plusw1,postinc1
 13243  0129CE  006F FF8F FFE6     	movff	plusw1,postinc1
 13244  0129D4  EC11  F0AC         	call	_dtoa	;wreg free
 13245  0129D8  EFC7  F099         	goto	l2470
 13246  0129DC                     l12892:
 13247                           
 13248                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 13249  0129DC  0E02               	movlw	2
 13250  0129DE  6EE6               	movwf	postinc1,c
 13251  0129E0  0E00               	movlw	0
 13252  0129E2  6EE6               	movwf	postinc1,c
 13253  0129E4  0EEA               	movlw	low STR_73
 13254  0129E6  6EE6               	movwf	postinc1,c
 13255  0129E8  0EFF               	movlw	high STR_73
 13256  0129EA  6EE6               	movwf	postinc1,c
 13257                           
 13258                           ;stkvar	_fmt @ sp[(-36)+-4]
 13259  0129EC  0ED8               	movlw	-40
 13260  0129EE  006F FF8F FFD9     	movff	plusw1,fsr2l
 13261  0129F4  0ED9               	movlw	-39
 13262  0129F6  006F FF8F FFDA     	movff	plusw1,fsr2h
 13263  0129FC  006F FF78  F00B    	movff	postinc2,btemp+10
 13264  012A02  006F FF74  F00C    	movff	postdec2,btemp+11
 13265  012A08  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13266  012A0E  0060  F033  FFE6   	movff	btemp+11,postinc1
 13267  012A14  EC3E  F0C0         	call	_strncmp	;wreg free
 13268  012A18  5001               	movf	btemp^0,w,c
 13269  012A1A  1002               	iorwf	(btemp+1)^0,w,c
 13270  012A1C  B4D8               	btfsc	status,2,c
 13271  012A1E  D022               	goto	u12340
 13272  012A20  0E02               	movlw	2
 13273  012A22  6EE6               	movwf	postinc1,c
 13274  012A24  0E00               	movlw	0
 13275  012A26  6EE6               	movwf	postinc1,c
 13276  012A28  0EF0               	movlw	low STR_77
 13277  012A2A  6EE6               	movwf	postinc1,c
 13278  012A2C  0EFF               	movlw	high STR_77
 13279  012A2E  6EE6               	movwf	postinc1,c
 13280                           
 13281                           ;stkvar	_fmt @ sp[(-36)+-4]
 13282  012A30  0ED8               	movlw	-40
 13283  012A32  006F FF8F FFD9     	movff	plusw1,fsr2l
 13284  012A38  0ED9               	movlw	-39
 13285  012A3A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13286  012A40  006F FF78  F00B    	movff	postinc2,btemp+10
 13287  012A46  006F FF74  F00C    	movff	postdec2,btemp+11
 13288  012A4C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13289  012A52  0060  F033  FFE6   	movff	btemp+11,postinc1
 13290  012A58  EC3E  F0C0         	call	_strncmp	;wreg free
 13291  012A5C  5001               	movf	btemp^0,w,c
 13292  012A5E  1002               	iorwf	(btemp+1)^0,w,c
 13293  012A60  A4D8               	btfss	status,2,c
 13294  012A62  D069               	goto	l12904
 13295  012A64                     u12340:
 13296                           
 13297                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 13298                           ;stkvar	_fmt @ sp[(-32)+-4]
 13299  012A64  0EDC               	movlw	-36
 13300  012A66  006F FF8F FFD9     	movff	plusw1,fsr2l
 13301  012A6C  0EDD               	movlw	-35
 13302  012A6E  006F FF8F FFDA     	movff	plusw1,fsr2h
 13303  012A74  0E02               	movlw	2
 13304  012A76  26DE               	addwf	postinc2,f,c
 13305  012A78  0E00               	movlw	0
 13306  012A7A  22DD               	addwfc	postdec2,f,c
 13307                           
 13308                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 13309                           ;stkvar	_ap @ sp[(-32)+-6]
 13310  012A7C  0EDA               	movlw	-38
 13311  012A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13312  012A84  0EDB               	movlw	-37
 13313  012A86  006F FF8F FFDA     	movff	plusw1,fsr2h
 13314  012A8C  0E04               	movlw	4
 13315  012A8E  5EDE               	subwf	postinc2,f,c
 13316  012A90  0E00               	movlw	0
 13317  012A92  5ADD               	subwfb	postdec2,f,c
 13318  012A94  006F FF78  F00B    	movff	postinc2,btemp+10
 13319  012A9A  006F FF74  F00C    	movff	postdec2,btemp+11
 13320  012AA0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13321  012AA6  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13322  012AAC  006F FF78  F009    	movff	postinc2,btemp+8
 13323  012AB2  006F FF78  F00A    	movff	postinc2,btemp+9
 13324  012AB8  006F FF78  F00B    	movff	postinc2,btemp+10
 13325  012ABE  006F FF78  F00C    	movff	postinc2,btemp+11
 13326  012AC4  0060  F024  F011   	movff	btemp+8,btemp+16
 13327  012ACA  0060  F028  F012   	movff	btemp+9,btemp+17
 13328  012AD0  0060  F02C  F013   	movff	btemp+10,btemp+18
 13329  012AD6  0060  F030  F014   	movff	btemp+11,btemp+19
 13330  012ADC  6A15               	clrf	(btemp+20)^0,c
 13331  012ADE  BE14               	btfsc	(btemp+19)^0,7,c
 13332  012AE0  6815               	setf	(btemp+20)^0,c
 13333  012AE2  0060  F054  F016   	movff	btemp+20,btemp+21
 13334  012AE8  0060  F054  F017   	movff	btemp+20,btemp+22
 13335  012AEE  0060  F054  F018   	movff	btemp+20,btemp+23
 13336                           
 13337                           ;stkvar	_ll @ sp[(-32)+14]
 13338  012AF4  0EEE               	movlw	-18
 13339  012AF6  0060  F047  FFE3   	movff	btemp+16,plusw1
 13340  012AFC  0EEF               	movlw	-17
 13341  012AFE  0060  F04B  FFE3   	movff	btemp+17,plusw1
 13342  012B04  0EF0               	movlw	-16
 13343  012B06  0060  F04F  FFE3   	movff	btemp+18,plusw1
 13344  012B0C  0EF1               	movlw	-15
 13345  012B0E  0060  F053  FFE3   	movff	btemp+19,plusw1
 13346  012B14  0EF2               	movlw	-14
 13347  012B16  0060  F057  FFE3   	movff	btemp+20,plusw1
 13348  012B1C  0EF3               	movlw	-13
 13349  012B1E  0060  F05B  FFE3   	movff	btemp+21,plusw1
 13350  012B24  0EF4               	movlw	-12
 13351  012B26  0060  F05F  FFE3   	movff	btemp+22,plusw1
 13352  012B2C  0EF5               	movlw	-11
 13353  012B2E  0060  F063  FFE3   	movff	btemp+23,plusw1
 13354  012B34  D729               	goto	l12888
 13355  012B36                     l12904:
 13356                           
 13357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 13358                           ;stkvar	_ct @ sp[(-32)+26]
 13359  012B36  0EFA               	movlw	-6
 13360  012B38  006F FF8C  F001    	movff	plusw1,btemp
 13361  012B3E  0E66               	movlw	102
 13362  012B40  1801               	xorwf	btemp^0,w,c
 13363  012B42  A4D8               	btfss	status,2,c
 13364  012B44  D06E               	goto	l12916
 13365                           
 13366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 13367                           ;stkvar	_fmt @ sp[(-32)+-4]
 13368  012B46  0EDC               	movlw	-36
 13369  012B48  006F FF8F FFD9     	movff	plusw1,fsr2l
 13370  012B4E  0EDD               	movlw	-35
 13371  012B50  006F FF8F FFDA     	movff	plusw1,fsr2h
 13372  012B56  006F FF7B FFF6     	movff	postinc2,tblptrl
 13373  012B5C  006F FF77 FFF7     	movff	postdec2,tblptrh
 13374  012B62                     	if	0	;tblptru may be non-zero
 13375  012B62                     	endif
 13376  012B62                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13377  012B62  0E00               	movlw	low (__mediumconst shr (0+16))
 13378  012B64  6EF8               	movwf	tblptru,c
 13379  012B66                     	endif
 13380                           
 13381                           ;stkvar	_c @ sp[(-32)+31]
 13382  012B66  0008               	tblrd		*
 13383  012B68  0EFF               	movlw	-1
 13384  012B6A  006F FFD7 FFE3     	movff	tablat,plusw1
 13385                           
 13386                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 13387                           ;stkvar	_fmt @ sp[(-32)+-4]
 13388  012B70  0EDC               	movlw	-36
 13389  012B72  006F FF8F FFD9     	movff	plusw1,fsr2l
 13390  012B78  0EDD               	movlw	-35
 13391  012B7A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13392  012B80  2ADE               	incf	postinc2,f,c
 13393  012B82  0E00               	movlw	0
 13394  012B84  22DD               	addwfc	postdec2,f,c
 13395                           
 13396                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 13397                           ;stkvar	_ap @ sp[(-32)+-6]
 13398  012B86  0EDA               	movlw	-38
 13399  012B88  006F FF8F FFD9     	movff	plusw1,fsr2l
 13400  012B8E  0EDB               	movlw	-37
 13401  012B90  006F FF8F FFDA     	movff	plusw1,fsr2h
 13402  012B96  0E04               	movlw	4
 13403  012B98  5EDE               	subwf	postinc2,f,c
 13404  012B9A  0E00               	movlw	0
 13405  012B9C  5ADD               	subwfb	postdec2,f,c
 13406  012B9E  006F FF78  F00B    	movff	postinc2,btemp+10
 13407  012BA4  006F FF74  F00C    	movff	postdec2,btemp+11
 13408  012BAA  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13409  012BB0  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13410  012BB6  006F FF78  F009    	movff	postinc2,btemp+8
 13411  012BBC  006F FF78  F00A    	movff	postinc2,btemp+9
 13412  012BC2  006F FF78  F00B    	movff	postinc2,btemp+10
 13413  012BC8  006F FF78  F00C    	movff	postinc2,btemp+11
 13414                           
 13415                           ;stkvar	_f @ sp[(-32)+22]
 13416  012BCE  0EF6               	movlw	-10
 13417  012BD0  0060  F027  FFE3   	movff	btemp+8,plusw1
 13418  012BD6  0EF7               	movlw	-9
 13419  012BD8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13420  012BDE  0EF8               	movlw	-8
 13421  012BE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13422  012BE6  0EF9               	movlw	-7
 13423  012BE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 13424  012BEE                     l12912:
 13425                           
 13426                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 13427                           ;stkvar	_c @ sp[(-32)+31]
 13428  012BEE  0EFF               	movlw	-1
 13429  012BF0  50E3               	movf	plusw1,w,c
 13430  012BF2  6EE6               	movwf	postinc1,c
 13431                           
 13432                           ;stkvar	_f @ sp[(-33)+22]
 13433  012BF4  0EF5               	movlw	-11
 13434  012BF6  006F FF8F FFE6     	movff	plusw1,postinc1
 13435  012BFC  006F FF8F FFE6     	movff	plusw1,postinc1
 13436  012C02  006F FF8F FFE6     	movff	plusw1,postinc1
 13437  012C08  006F FF8F FFE6     	movff	plusw1,postinc1
 13438                           
 13439                           ;stkvar	_fp @ sp[(-37)+-2]
 13440  012C0E  0ED9               	movlw	-39
 13441  012C10  006F FF8F FFE6     	movff	plusw1,postinc1
 13442  012C16  006F FF8F FFE6     	movff	plusw1,postinc1
 13443  012C1C  EC00  F080         	call	_efgtoa	;wreg free
 13444  012C20  D3B6               	goto	l2470
 13445  012C22                     l12916:
 13446                           
 13447                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 13448  012C22  0E02               	movlw	2
 13449  012C24  6EE6               	movwf	postinc1,c
 13450  012C26  0E00               	movlw	0
 13451  012C28  6EE6               	movwf	postinc1,c
 13452  012C2A  0EED               	movlw	low STR_82
 13453  012C2C  6EE6               	movwf	postinc1,c
 13454  012C2E  0EFF               	movlw	high STR_82
 13455  012C30  6EE6               	movwf	postinc1,c
 13456                           
 13457                           ;stkvar	_ct @ sp[(-36)+26]
 13458  012C32  0EF6               	movlw	246
 13459  012C34  24E1               	addwf	fsr1l,w,c
 13460  012C36  6E01               	movwf	btemp^0,c
 13461  012C38  0EFF               	movlw	255
 13462  012C3A  20E2               	addwfc	fsr1h,w,c
 13463  012C3C  6E02               	movwf	(btemp+1)^0,c
 13464  012C3E  0060  F007  FFE6   	movff	btemp,postinc1
 13465  012C44  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13466  012C4A  EC3E  F0C0         	call	_strncmp	;wreg free
 13467  012C4E  5001               	movf	btemp^0,w,c
 13468  012C50  1002               	iorwf	(btemp+1)^0,w,c
 13469  012C52  A4D8               	btfss	status,2,c
 13470  012C54  D096               	goto	l12936
 13471                           
 13472                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 13473                           ;stkvar	_fmt @ sp[(-32)+-4]
 13474  012C56  0EDC               	movlw	-36
 13475  012C58  006F FF8F FFD9     	movff	plusw1,fsr2l
 13476  012C5E  0EDD               	movlw	-35
 13477  012C60  006F FF8F FFDA     	movff	plusw1,fsr2h
 13478  012C66  006F FF78  F00B    	movff	postinc2,btemp+10
 13479  012C6C  006F FF74  F00C    	movff	postdec2,btemp+11
 13480  012C72  0E01               	movlw	1
 13481  012C74  260B               	addwf	(btemp+10)^0,f,c
 13482  012C76  0E00               	movlw	0
 13483  012C78  220C               	addwfc	(btemp+11)^0,f,c
 13484  012C7A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 13485  012C80  0060  F033  FFF7   	movff	btemp+11,tblptrh
 13486  012C86                     	if	0	;tblptru may be non-zero
 13487  012C86                     	endif
 13488  012C86                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13489  012C86  0E00               	movlw	low (__mediumconst shr (0+16))
 13490  012C88  6EF8               	movwf	tblptru,c
 13491  012C8A                     	endif
 13492                           
 13493                           ;stkvar	_c @ sp[(-32)+31]
 13494  012C8A  0008               	tblrd		*
 13495  012C8C  0EFF               	movlw	-1
 13496  012C8E  006F FFD7 FFE3     	movff	tablat,plusw1
 13497  012C94  0EBF               	movlw	191
 13498  012C96  6E0B               	movwf	(btemp+10)^0,c
 13499  012C98  0EFF               	movlw	255
 13500  012C9A  6E0C               	movwf	(btemp+11)^0,c
 13501                           
 13502                           ;stkvar	_fmt @ sp[(-32)+-4]
 13503  012C9C  0EDC               	movlw	-36
 13504  012C9E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13505  012CA4  0EDD               	movlw	-35
 13506  012CA6  006F FF8F FFDA     	movff	plusw1,fsr2h
 13507  012CAC  006F FF7B FFF6     	movff	postinc2,tblptrl
 13508  012CB2  006F FF77 FFF7     	movff	postdec2,tblptrh
 13509  012CB8                     	if	0	;tblptru may be non-zero
 13510  012CB8                     	endif
 13511  012CB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13512  012CB8  0E00               	movlw	low (__mediumconst shr (0+16))
 13513  012CBA  6EF8               	movwf	tblptru,c
 13514  012CBC                     	endif
 13515  012CBC  0008               	tblrd		*
 13516  012CBE  50F5               	movf	tablat,w,c
 13517  012CC0  6E09               	movwf	(btemp+8)^0,c
 13518  012CC2  6A0A               	clrf	(btemp+9)^0,c
 13519  012CC4  500B               	movf	(btemp+10)^0,w,c
 13520  012CC6  2609               	addwf	(btemp+8)^0,f,c
 13521  012CC8  500C               	movf	(btemp+11)^0,w,c
 13522  012CCA  220A               	addwfc	(btemp+9)^0,f,c
 13523  012CCC  500A               	movf	(btemp+9)^0,w,c
 13524  012CCE  E106               	bnz	u12370
 13525  012CD0  0E1A               	movlw	26
 13526  012CD2  5C09               	subwf	(btemp+8)^0,w,c
 13527  012CD4  B0D8               	btfsc	status,0,c
 13528  012CD6  D002               	goto	u12370
 13529  012CD8  0E01               	movlw	1
 13530  012CDA  D001               	goto	u12380
 13531  012CDC                     u12370:
 13532  012CDC  0E00               	movlw	0
 13533  012CDE                     u12380:
 13534  012CDE  6E0B               	movwf	(btemp+10)^0,c
 13535  012CE0  6A0C               	clrf	(btemp+11)^0,c
 13536                           
 13537                           ;stkvar	_vfpfcnvrt$5890 @ sp[(-32)+2]
 13538  012CE2  0EE2               	movlw	-30
 13539  012CE4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13540  012CEA  0EE3               	movlw	-29
 13541  012CEC  0060  F033  FFE3   	movff	btemp+11,plusw1
 13542                           
 13543                           ;stkvar	_vfpfcnvrt$5890 @ sp[(-32)+2]
 13544  012CF2  0EE2               	movlw	-30
 13545  012CF4  006F FF8C  F001    	movff	plusw1,btemp
 13546  012CFA  0EE3               	movlw	-29
 13547  012CFC  50E3               	movf	plusw1,w,c
 13548  012CFE  1001               	iorwf	btemp^0,w,c
 13549                           
 13550                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 13551                           ;stkvar	_ap @ sp[(-32)+-6]
 13552                           
 13553                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 13554                           
 13555                           ;stkvar	_f @ sp[(-32)+22]
 13556                           
 13557                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 13558                           ;stkvar	_ap @ sp[(-32)+-6]
 13559  012D00  0EDA               	movlw	-38
 13560  012D02  006F FF8F FFD9     	movff	plusw1,fsr2l
 13561  012D08  0EDB               	movlw	-37
 13562  012D0A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13563  012D10  0E04               	movlw	4
 13564  012D12  5EDE               	subwf	postinc2,f,c
 13565  012D14  0E00               	movlw	0
 13566  012D16  5ADD               	subwfb	postdec2,f,c
 13567  012D18  006F FF78  F00B    	movff	postinc2,btemp+10
 13568  012D1E  006F FF74  F00C    	movff	postdec2,btemp+11
 13569  012D24  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13570  012D2A  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13571  012D30  006F FF78  F009    	movff	postinc2,btemp+8
 13572  012D36  006F FF78  F00A    	movff	postinc2,btemp+9
 13573  012D3C  006F FF78  F00B    	movff	postinc2,btemp+10
 13574  012D42  006F FF78  F00C    	movff	postinc2,btemp+11
 13575                           
 13576                           ;stkvar	_f @ sp[(-32)+22]
 13577  012D48  0EF6               	movlw	-10
 13578  012D4A  0060  F027  FFE3   	movff	btemp+8,plusw1
 13579  012D50  0EF7               	movlw	-9
 13580  012D52  0060  F02B  FFE3   	movff	btemp+9,plusw1
 13581  012D58  0EF8               	movlw	-8
 13582  012D5A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13583  012D60  0EF9               	movlw	-7
 13584  012D62  0060  F033  FFE3   	movff	btemp+11,plusw1
 13585                           
 13586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 13587                           ;stkvar	_fmt @ sp[(-32)+-4]
 13588  012D68  0EDC               	movlw	-36
 13589  012D6A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13590  012D70  0EDD               	movlw	-35
 13591  012D72  006F FF8F FFDA     	movff	plusw1,fsr2h
 13592  012D78  0E02               	movlw	2
 13593  012D7A  26DE               	addwf	postinc2,f,c
 13594  012D7C  0E00               	movlw	0
 13595  012D7E  22DD               	addwfc	postdec2,f,c
 13596  012D80  D736               	goto	l12912
 13597  012D82                     l12936:
 13598                           
 13599                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 13600                           ;stkvar	_fmt @ sp[(-32)+-4]
 13601  012D82  0EDC               	movlw	-36
 13602  012D84  006F FF8F FFD9     	movff	plusw1,fsr2l
 13603  012D8A  0EDD               	movlw	-35
 13604  012D8C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13605  012D92  006F FF7B FFF6     	movff	postinc2,tblptrl
 13606  012D98  006F FF77 FFF7     	movff	postdec2,tblptrh
 13607  012D9E                     	if	0	;tblptru may be non-zero
 13608  012D9E                     	endif
 13609  012D9E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13610  012D9E  0E00               	movlw	low (__mediumconst shr (0+16))
 13611  012DA0  6EF8               	movwf	tblptru,c
 13612  012DA2                     	endif
 13613  012DA2  0008               	tblrd		*
 13614  012DA4  50F5               	movf	tablat,w,c
 13615  012DA6  0A73               	xorlw	115
 13616  012DA8  A4D8               	btfss	status,2,c
 13617  012DAA  D042               	goto	l12946
 13618                           
 13619                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 13620                           ;stkvar	_fmt @ sp[(-32)+-4]
 13621  012DAC  0EDC               	movlw	-36
 13622  012DAE  006F FF8F FFD9     	movff	plusw1,fsr2l
 13623  012DB4  0EDD               	movlw	-35
 13624  012DB6  006F FF8F FFDA     	movff	plusw1,fsr2h
 13625  012DBC  2ADE               	incf	postinc2,f,c
 13626  012DBE  0E00               	movlw	0
 13627  012DC0  22DD               	addwfc	postdec2,f,c
 13628                           
 13629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 13630                           ;stkvar	_ap @ sp[(-32)+-6]
 13631  012DC2  0EDA               	movlw	-38
 13632  012DC4  006F FF8F FFD9     	movff	plusw1,fsr2l
 13633  012DCA  0EDB               	movlw	-37
 13634  012DCC  006F FF8F FFDA     	movff	plusw1,fsr2h
 13635  012DD2  0E02               	movlw	2
 13636  012DD4  5EDE               	subwf	postinc2,f,c
 13637  012DD6  0E00               	movlw	0
 13638  012DD8  5ADD               	subwfb	postdec2,f,c
 13639  012DDA  006F FF78  F00B    	movff	postinc2,btemp+10
 13640  012DE0  006F FF74  F00C    	movff	postdec2,btemp+11
 13641  012DE6  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13642  012DEC  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13643  012DF2  006F FF78  F00B    	movff	postinc2,btemp+10
 13644  012DF8  006F FF74  F00C    	movff	postdec2,btemp+11
 13645                           
 13646                           ;stkvar	_cp @ sp[(-32)+29]
 13647  012DFE  0EFE               	movlw	-2
 13648  012E00  0060  F033  FFE3   	movff	btemp+11,plusw1
 13649  012E06  0EFD               	movlw	-3
 13650  012E08  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13651                           
 13652                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 13653                           ;stkvar	_cp @ sp[(-32)+29]
 13654  012E0E  0EFD               	movlw	-3
 13655  012E10  006F FF8F FFE6     	movff	plusw1,postinc1
 13656  012E16  006F FF8F FFE6     	movff	plusw1,postinc1
 13657                           
 13658                           ;stkvar	_fp @ sp[(-34)+-2]
 13659  012E1C  0EDC               	movlw	-36
 13660  012E1E  006F FF8F FFE6     	movff	plusw1,postinc1
 13661  012E24  006F FF8F FFE6     	movff	plusw1,postinc1
 13662  012E2A  EC22  F0BA         	call	_stoa	;wreg free
 13663  012E2E  D2AF               	goto	l2470
 13664  012E30                     l12946:
 13665                           
 13666                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 13667                           ;stkvar	_fmt @ sp[(-32)+-4]
 13668  012E30  0EDC               	movlw	-36
 13669  012E32  006F FF8F FFD9     	movff	plusw1,fsr2l
 13670  012E38  0EDD               	movlw	-35
 13671  012E3A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13672  012E40  006F FF7B FFF6     	movff	postinc2,tblptrl
 13673  012E46  006F FF77 FFF7     	movff	postdec2,tblptrh
 13674  012E4C                     	if	0	;tblptru may be non-zero
 13675  012E4C                     	endif
 13676  012E4C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13677  012E4C  0E00               	movlw	low (__mediumconst shr (0+16))
 13678  012E4E  6EF8               	movwf	tblptru,c
 13679  012E50                     	endif
 13680  012E50  0008               	tblrd		*
 13681  012E52  50F5               	movf	tablat,w,c
 13682  012E54  0A75               	xorlw	117
 13683  012E56  A4D8               	btfss	status,2,c
 13684  012E58  D07C               	goto	l12956
 13685                           
 13686                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 13687                           ;stkvar	_fmt @ sp[(-32)+-4]
 13688  012E5A  0EDC               	movlw	-36
 13689  012E5C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13690  012E62  0EDD               	movlw	-35
 13691  012E64  006F FF8F FFDA     	movff	plusw1,fsr2h
 13692  012E6A  2ADE               	incf	postinc2,f,c
 13693  012E6C  0E00               	movlw	0
 13694  012E6E  22DD               	addwfc	postdec2,f,c
 13695                           
 13696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 13697                           ;stkvar	_ap @ sp[(-32)+-6]
 13698  012E70  0EDA               	movlw	-38
 13699  012E72  006F FF8F FFD9     	movff	plusw1,fsr2l
 13700  012E78  0EDB               	movlw	-37
 13701  012E7A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13702  012E80  0E02               	movlw	2
 13703  012E82  5EDE               	subwf	postinc2,f,c
 13704  012E84  0E00               	movlw	0
 13705  012E86  5ADD               	subwfb	postdec2,f,c
 13706  012E88  006F FF78  F00B    	movff	postinc2,btemp+10
 13707  012E8E  006F FF74  F00C    	movff	postdec2,btemp+11
 13708  012E94  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13709  012E9A  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13710  012EA0  006F FF78  F00B    	movff	postinc2,btemp+10
 13711  012EA6  006F FF74  F00C    	movff	postdec2,btemp+11
 13712  012EAC  500B               	movf	(btemp+10)^0,w,c
 13713  012EAE  6E11               	movwf	(btemp+16)^0,c
 13714  012EB0  500C               	movf	(btemp+11)^0,w,c
 13715  012EB2  6E12               	movwf	(btemp+17)^0,c
 13716  012EB4  6A13               	clrf	(btemp+18)^0,c
 13717  012EB6  6A14               	clrf	(btemp+19)^0,c
 13718  012EB8  6A15               	clrf	(btemp+20)^0,c
 13719  012EBA  6A16               	clrf	(btemp+21)^0,c
 13720  012EBC  6A17               	clrf	(btemp+22)^0,c
 13721  012EBE  6A18               	clrf	(btemp+23)^0,c
 13722                           
 13723                           ;stkvar	_llu @ sp[(-32)+6]
 13724  012EC0  0EE6               	movlw	-26
 13725  012EC2  0060  F047  FFE3   	movff	btemp+16,plusw1
 13726  012EC8  0EE7               	movlw	-25
 13727  012ECA  0060  F04B  FFE3   	movff	btemp+17,plusw1
 13728  012ED0  0EE8               	movlw	-24
 13729  012ED2  0060  F04F  FFE3   	movff	btemp+18,plusw1
 13730  012ED8  0EE9               	movlw	-23
 13731  012EDA  0060  F053  FFE3   	movff	btemp+19,plusw1
 13732  012EE0  0EEA               	movlw	-22
 13733  012EE2  0060  F057  FFE3   	movff	btemp+20,plusw1
 13734  012EE8  0EEB               	movlw	-21
 13735  012EEA  0060  F05B  FFE3   	movff	btemp+21,plusw1
 13736  012EF0  0EEC               	movlw	-20
 13737  012EF2  0060  F05F  FFE3   	movff	btemp+22,plusw1
 13738  012EF8  0EED               	movlw	-19
 13739  012EFA  0060  F063  FFE3   	movff	btemp+23,plusw1
 13740                           
 13741                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 13742                           ;stkvar	_llu @ sp[(-32)+6]
 13743  012F00  50E1               	movf	fsr1l,w,c
 13744  012F02  0FE6               	addlw	-26
 13745  012F04  6ED9               	movwf	fsr2l,c
 13746  012F06  50E2               	movf	fsr1h,w,c
 13747  012F08  6EDA               	movwf	fsr2h,c
 13748  012F0A  0EFF               	movlw	255
 13749  012F0C  22DA               	addwfc	fsr2h,f,c
 13750  012F0E  006F FF7B FFE6     	movff	postinc2,postinc1
 13751  012F14  006F FF7B FFE6     	movff	postinc2,postinc1
 13752  012F1A  006F FF7B FFE6     	movff	postinc2,postinc1
 13753  012F20  006F FF7B FFE6     	movff	postinc2,postinc1
 13754  012F26  006F FF7B FFE6     	movff	postinc2,postinc1
 13755  012F2C  006F FF7B FFE6     	movff	postinc2,postinc1
 13756  012F32  006F FF7B FFE6     	movff	postinc2,postinc1
 13757  012F38  006F FF7B FFE6     	movff	postinc2,postinc1
 13758                           
 13759                           ;stkvar	_fp @ sp[(-40)+-2]
 13760  012F3E  0ED6               	movlw	-42
 13761  012F40  006F FF8F FFE6     	movff	plusw1,postinc1
 13762  012F46  006F FF8F FFE6     	movff	plusw1,postinc1
 13763  012F4C  EC0A  F0B4         	call	_utoa	;wreg free
 13764  012F50  D21E               	goto	l2470
 13765  012F52                     l12956:
 13766                           
 13767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 13768  012F52  0E02               	movlw	2
 13769  012F54  6EE6               	movwf	postinc1,c
 13770  012F56  0E00               	movlw	0
 13771  012F58  6EE6               	movwf	postinc1,c
 13772  012F5A  0EF3               	movlw	low STR_87
 13773  012F5C  6EE6               	movwf	postinc1,c
 13774  012F5E  0EFF               	movlw	high STR_87
 13775  012F60  6EE6               	movwf	postinc1,c
 13776                           
 13777                           ;stkvar	_fmt @ sp[(-36)+-4]
 13778  012F62  0ED8               	movlw	-40
 13779  012F64  006F FF8F FFD9     	movff	plusw1,fsr2l
 13780  012F6A  0ED9               	movlw	-39
 13781  012F6C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13782  012F72  006F FF78  F00B    	movff	postinc2,btemp+10
 13783  012F78  006F FF74  F00C    	movff	postdec2,btemp+11
 13784  012F7E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13785  012F84  0060  F033  FFE6   	movff	btemp+11,postinc1
 13786  012F8A  EC3E  F0C0         	call	_strncmp	;wreg free
 13787  012F8E  5001               	movf	btemp^0,w,c
 13788  012F90  1002               	iorwf	(btemp+1)^0,w,c
 13789  012F92  A4D8               	btfss	status,2,c
 13790  012F94  D039               	goto	l12966
 13791                           
 13792                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 13793                           ;stkvar	_fmt @ sp[(-32)+-4]
 13794  012F96  0EDC               	movlw	-36
 13795  012F98  006F FF8F FFD9     	movff	plusw1,fsr2l
 13796  012F9E  0EDD               	movlw	-35
 13797  012FA0  006F FF8F FFDA     	movff	plusw1,fsr2h
 13798  012FA6  0E02               	movlw	2
 13799  012FA8  26DE               	addwf	postinc2,f,c
 13800  012FAA  0E00               	movlw	0
 13801  012FAC  22DD               	addwfc	postdec2,f,c
 13802                           
 13803                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 13804                           ;stkvar	_ap @ sp[(-32)+-6]
 13805  012FAE  0EDA               	movlw	-38
 13806  012FB0  006F FF8F FFD9     	movff	plusw1,fsr2l
 13807  012FB6  0EDB               	movlw	-37
 13808  012FB8  006F FF8F FFDA     	movff	plusw1,fsr2h
 13809  012FBE  0E04               	movlw	4
 13810  012FC0  5EDE               	subwf	postinc2,f,c
 13811  012FC2  0E00               	movlw	0
 13812  012FC4  5ADD               	subwfb	postdec2,f,c
 13813  012FC6  006F FF78  F00B    	movff	postinc2,btemp+10
 13814  012FCC  006F FF74  F00C    	movff	postdec2,btemp+11
 13815  012FD2  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13816  012FD8  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13817  012FDE  006F FF78  F009    	movff	postinc2,btemp+8
 13818  012FE4  006F FF78  F00A    	movff	postinc2,btemp+9
 13819  012FEA  006F FF78  F00B    	movff	postinc2,btemp+10
 13820  012FF0  006F FF78  F00C    	movff	postinc2,btemp+11
 13821  012FF6  5009               	movf	(btemp+8)^0,w,c
 13822  012FF8  6E11               	movwf	(btemp+16)^0,c
 13823  012FFA  500A               	movf	(btemp+9)^0,w,c
 13824  012FFC  6E12               	movwf	(btemp+17)^0,c
 13825  012FFE  500B               	movf	(btemp+10)^0,w,c
 13826  013000  6E13               	movwf	(btemp+18)^0,c
 13827  013002  500C               	movf	(btemp+11)^0,w,c
 13828  013004  6E14               	movwf	(btemp+19)^0,c
 13829  013006  D758               	goto	L11
 13830  013008                     l12966:
 13831                           
 13832                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 13833                           ;stkvar	_fmt @ sp[(-32)+-4]
 13834  013008  0EDC               	movlw	-36
 13835  01300A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13836  013010  0EDD               	movlw	-35
 13837  013012  006F FF8F FFDA     	movff	plusw1,fsr2h
 13838  013018  006F FF7B FFF6     	movff	postinc2,tblptrl
 13839  01301E  006F FF77 FFF7     	movff	postdec2,tblptrh
 13840  013024                     	if	0	;tblptru may be non-zero
 13841  013024                     	endif
 13842  013024                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13843  013024  0E00               	movlw	low (__mediumconst shr (0+16))
 13844  013026  6EF8               	movwf	tblptru,c
 13845  013028                     	endif
 13846  013028  0008               	tblrd		*
 13847  01302A  50F5               	movf	tablat,w,c
 13848  01302C  0A78               	xorlw	120
 13849  01302E  B4D8               	btfsc	status,2,c
 13850  013030  D015               	goto	u12440
 13851                           
 13852                           ;stkvar	_fmt @ sp[(-32)+-4]
 13853  013032  0EDC               	movlw	-36
 13854  013034  006F FF8F FFD9     	movff	plusw1,fsr2l
 13855  01303A  0EDD               	movlw	-35
 13856  01303C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13857  013042  006F FF7B FFF6     	movff	postinc2,tblptrl
 13858  013048  006F FF77 FFF7     	movff	postdec2,tblptrh
 13859  01304E                     	if	0	;tblptru may be non-zero
 13860  01304E                     	endif
 13861  01304E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13862  01304E  0E00               	movlw	low (__mediumconst shr (0+16))
 13863  013050  6EF8               	movwf	tblptru,c
 13864  013052                     	endif
 13865  013052  0008               	tblrd		*
 13866  013054  50F5               	movf	tablat,w,c
 13867  013056  0A58               	xorlw	88
 13868  013058  A4D8               	btfss	status,2,c
 13869  01305A  D094               	goto	l12980
 13870  01305C                     u12440:
 13871                           
 13872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 13873                           ;stkvar	_fmt @ sp[(-32)+-4]
 13874  01305C  0EDC               	movlw	-36
 13875  01305E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13876  013064  0EDD               	movlw	-35
 13877  013066  006F FF8F FFDA     	movff	plusw1,fsr2h
 13878  01306C  006F FF7B FFF6     	movff	postinc2,tblptrl
 13879  013072  006F FF77 FFF7     	movff	postdec2,tblptrh
 13880  013078                     	if	0	;tblptru may be non-zero
 13881  013078                     	endif
 13882  013078                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13883  013078  0E00               	movlw	low (__mediumconst shr (0+16))
 13884  01307A  6EF8               	movwf	tblptru,c
 13885  01307C                     	endif
 13886                           
 13887                           ;stkvar	_c @ sp[(-32)+31]
 13888  01307C  0008               	tblrd		*
 13889  01307E  0EFF               	movlw	-1
 13890  013080  006F FFD7 FFE3     	movff	tablat,plusw1
 13891                           
 13892                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 13893                           ;stkvar	_fmt @ sp[(-32)+-4]
 13894  013086  0EDC               	movlw	-36
 13895  013088  006F FF8F FFD9     	movff	plusw1,fsr2l
 13896  01308E  0EDD               	movlw	-35
 13897  013090  006F FF8F FFDA     	movff	plusw1,fsr2h
 13898  013096  2ADE               	incf	postinc2,f,c
 13899  013098  0E00               	movlw	0
 13900  01309A  22DD               	addwfc	postdec2,f,c
 13901                           
 13902                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 13903                           ;stkvar	_ap @ sp[(-32)+-6]
 13904  01309C  0EDA               	movlw	-38
 13905  01309E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13906  0130A4  0EDB               	movlw	-37
 13907  0130A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 13908  0130AC  0E02               	movlw	2
 13909  0130AE  5EDE               	subwf	postinc2,f,c
 13910  0130B0  0E00               	movlw	0
 13911  0130B2  5ADD               	subwfb	postdec2,f,c
 13912  0130B4  006F FF78  F00B    	movff	postinc2,btemp+10
 13913  0130BA  006F FF74  F00C    	movff	postdec2,btemp+11
 13914  0130C0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13915  0130C6  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13916  0130CC  006F FF78  F00B    	movff	postinc2,btemp+10
 13917  0130D2  006F FF74  F00C    	movff	postdec2,btemp+11
 13918  0130D8  500B               	movf	(btemp+10)^0,w,c
 13919  0130DA  6E11               	movwf	(btemp+16)^0,c
 13920  0130DC  500C               	movf	(btemp+11)^0,w,c
 13921  0130DE  6E12               	movwf	(btemp+17)^0,c
 13922  0130E0  6A13               	clrf	(btemp+18)^0,c
 13923  0130E2  6A14               	clrf	(btemp+19)^0,c
 13924  0130E4  6A15               	clrf	(btemp+20)^0,c
 13925  0130E6  6A16               	clrf	(btemp+21)^0,c
 13926  0130E8  6A17               	clrf	(btemp+22)^0,c
 13927  0130EA  6A18               	clrf	(btemp+23)^0,c
 13928                           
 13929                           ;stkvar	_llu @ sp[(-32)+6]
 13930  0130EC  0EE6               	movlw	-26
 13931  0130EE  0060  F047  FFE3   	movff	btemp+16,plusw1
 13932  0130F4  0EE7               	movlw	-25
 13933  0130F6  0060  F04B  FFE3   	movff	btemp+17,plusw1
 13934  0130FC  0EE8               	movlw	-24
 13935  0130FE  0060  F04F  FFE3   	movff	btemp+18,plusw1
 13936  013104  0EE9               	movlw	-23
 13937  013106  0060  F053  FFE3   	movff	btemp+19,plusw1
 13938  01310C  0EEA               	movlw	-22
 13939  01310E  0060  F057  FFE3   	movff	btemp+20,plusw1
 13940  013114  0EEB               	movlw	-21
 13941  013116  0060  F05B  FFE3   	movff	btemp+21,plusw1
 13942  01311C  0EEC               	movlw	-20
 13943  01311E  0060  F05F  FFE3   	movff	btemp+22,plusw1
 13944  013124  0EED               	movlw	-19
 13945  013126  0060  F063  FFE3   	movff	btemp+23,plusw1
 13946                           
 13947                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 13948                           ;stkvar	_c @ sp[(-32)+31]
 13949  01312C  0EFF               	movlw	-1
 13950  01312E  50E3               	movf	plusw1,w,c
 13951  013130  6EE6               	movwf	postinc1,c
 13952                           
 13953                           ;stkvar	_llu @ sp[(-33)+6]
 13954  013132  50E1               	movf	fsr1l,w,c
 13955  013134  0FE5               	addlw	-27
 13956  013136  6ED9               	movwf	fsr2l,c
 13957  013138  50E2               	movf	fsr1h,w,c
 13958  01313A  6EDA               	movwf	fsr2h,c
 13959  01313C  0EFF               	movlw	255
 13960  01313E  22DA               	addwfc	fsr2h,f,c
 13961  013140  006F FF7B FFE6     	movff	postinc2,postinc1
 13962  013146  006F FF7B FFE6     	movff	postinc2,postinc1
 13963  01314C  006F FF7B FFE6     	movff	postinc2,postinc1
 13964  013152  006F FF7B FFE6     	movff	postinc2,postinc1
 13965  013158  006F FF7B FFE6     	movff	postinc2,postinc1
 13966  01315E  006F FF7B FFE6     	movff	postinc2,postinc1
 13967  013164  006F FF7B FFE6     	movff	postinc2,postinc1
 13968  01316A  006F FF7B FFE6     	movff	postinc2,postinc1
 13969                           
 13970                           ;stkvar	_fp @ sp[(-41)+-2]
 13971  013170  0ED5               	movlw	-43
 13972  013172  006F FF8F FFE6     	movff	plusw1,postinc1
 13973  013178  006F FF8F FFE6     	movff	plusw1,postinc1
 13974  01317E  EC77  F0B0         	call	_xtoa	;wreg free
 13975  013182  D105               	goto	l2470
 13976  013184                     l12980:
 13977                           
 13978                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 13979  013184  0E02               	movlw	2
 13980  013186  6EE6               	movwf	postinc1,c
 13981  013188  0E00               	movlw	0
 13982  01318A  6EE6               	movwf	postinc1,c
 13983  01318C  0EF6               	movlw	low STR_92
 13984  01318E  6EE6               	movwf	postinc1,c
 13985  013190  0EFF               	movlw	high STR_92
 13986  013192  6EE6               	movwf	postinc1,c
 13987                           
 13988                           ;stkvar	_fmt @ sp[(-36)+-4]
 13989  013194  0ED8               	movlw	-40
 13990  013196  006F FF8F FFD9     	movff	plusw1,fsr2l
 13991  01319C  0ED9               	movlw	-39
 13992  01319E  006F FF8F FFDA     	movff	plusw1,fsr2h
 13993  0131A4  006F FF78  F00B    	movff	postinc2,btemp+10
 13994  0131AA  006F FF74  F00C    	movff	postdec2,btemp+11
 13995  0131B0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13996  0131B6  0060  F033  FFE6   	movff	btemp+11,postinc1
 13997  0131BC  EC3E  F0C0         	call	_strncmp	;wreg free
 13998  0131C0  5001               	movf	btemp^0,w,c
 13999  0131C2  1002               	iorwf	(btemp+1)^0,w,c
 14000  0131C4  B4D8               	btfsc	status,2,c
 14001  0131C6  D022               	goto	u12460
 14002  0131C8  0E02               	movlw	2
 14003  0131CA  6EE6               	movwf	postinc1,c
 14004  0131CC  0E00               	movlw	0
 14005  0131CE  6EE6               	movwf	postinc1,c
 14006  0131D0  0EE7               	movlw	low STR_96
 14007  0131D2  6EE6               	movwf	postinc1,c
 14008  0131D4  0EFF               	movlw	high STR_96
 14009  0131D6  6EE6               	movwf	postinc1,c
 14010                           
 14011                           ;stkvar	_fmt @ sp[(-36)+-4]
 14012  0131D8  0ED8               	movlw	-40
 14013  0131DA  006F FF8F FFD9     	movff	plusw1,fsr2l
 14014  0131E0  0ED9               	movlw	-39
 14015  0131E2  006F FF8F FFDA     	movff	plusw1,fsr2h
 14016  0131E8  006F FF78  F00B    	movff	postinc2,btemp+10
 14017  0131EE  006F FF74  F00C    	movff	postdec2,btemp+11
 14018  0131F4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14019  0131FA  0060  F033  FFE6   	movff	btemp+11,postinc1
 14020  013200  EC3E  F0C0         	call	_strncmp	;wreg free
 14021  013204  5001               	movf	btemp^0,w,c
 14022  013206  1002               	iorwf	(btemp+1)^0,w,c
 14023  013208  A4D8               	btfss	status,2,c
 14024  01320A  D058               	goto	l12994
 14025  01320C                     u12460:
 14026                           
 14027                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 14028                           ;stkvar	_fmt @ sp[(-32)+-4]
 14029  01320C  0EDC               	movlw	-36
 14030  01320E  006F FF8F FFD9     	movff	plusw1,fsr2l
 14031  013214  0EDD               	movlw	-35
 14032  013216  006F FF8F FFDA     	movff	plusw1,fsr2h
 14033  01321C  006F FF78  F00B    	movff	postinc2,btemp+10
 14034  013222  006F FF74  F00C    	movff	postdec2,btemp+11
 14035  013228  0E01               	movlw	1
 14036  01322A  260B               	addwf	(btemp+10)^0,f,c
 14037  01322C  0E00               	movlw	0
 14038  01322E  220C               	addwfc	(btemp+11)^0,f,c
 14039  013230  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 14040  013236  0060  F033  FFF7   	movff	btemp+11,tblptrh
 14041  01323C                     	if	0	;tblptru may be non-zero
 14042  01323C                     	endif
 14043  01323C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14044  01323C  0E00               	movlw	low (__mediumconst shr (0+16))
 14045  01323E  6EF8               	movwf	tblptru,c
 14046  013240                     	endif
 14047                           
 14048                           ;stkvar	_c @ sp[(-32)+31]
 14049  013240  0008               	tblrd		*
 14050  013242  0EFF               	movlw	-1
 14051  013244  006F FFD7 FFE3     	movff	tablat,plusw1
 14052                           
 14053                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 14054                           ;stkvar	_fmt @ sp[(-32)+-4]
 14055  01324A  0EDC               	movlw	-36
 14056  01324C  006F FF8F FFD9     	movff	plusw1,fsr2l
 14057  013252  0EDD               	movlw	-35
 14058  013254  006F FF8F FFDA     	movff	plusw1,fsr2h
 14059  01325A  0E02               	movlw	2
 14060  01325C  26DE               	addwf	postinc2,f,c
 14061  01325E  0E00               	movlw	0
 14062  013260  22DD               	addwfc	postdec2,f,c
 14063                           
 14064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 14065                           ;stkvar	_ap @ sp[(-32)+-6]
 14066  013262  0EDA               	movlw	-38
 14067  013264  006F FF8F FFD9     	movff	plusw1,fsr2l
 14068  01326A  0EDB               	movlw	-37
 14069  01326C  006F FF8F FFDA     	movff	plusw1,fsr2h
 14070  013272  0E04               	movlw	4
 14071  013274  5EDE               	subwf	postinc2,f,c
 14072  013276  0E00               	movlw	0
 14073  013278  5ADD               	subwfb	postdec2,f,c
 14074  01327A  006F FF78  F00B    	movff	postinc2,btemp+10
 14075  013280  006F FF74  F00C    	movff	postdec2,btemp+11
 14076  013286  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14077  01328C  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14078  013292  006F FF78  F009    	movff	postinc2,btemp+8
 14079  013298  006F FF78  F00A    	movff	postinc2,btemp+9
 14080  01329E  006F FF78  F00B    	movff	postinc2,btemp+10
 14081  0132A4  006F FF78  F00C    	movff	postinc2,btemp+11
 14082  0132AA  5009               	movf	(btemp+8)^0,w,c
 14083  0132AC  6E11               	movwf	(btemp+16)^0,c
 14084  0132AE  500A               	movf	(btemp+9)^0,w,c
 14085  0132B0  6E12               	movwf	(btemp+17)^0,c
 14086  0132B2  500B               	movf	(btemp+10)^0,w,c
 14087  0132B4  6E13               	movwf	(btemp+18)^0,c
 14088  0132B6  500C               	movf	(btemp+11)^0,w,c
 14089  0132B8  6E14               	movwf	(btemp+19)^0,c
 14090  0132BA  D714               	goto	L12
 14091  0132BC                     l12994:
 14092                           
 14093                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 14094                           ;stkvar	_fmt @ sp[(-32)+-4]
 14095  0132BC  0EDC               	movlw	-36
 14096  0132BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 14097  0132C4  0EDD               	movlw	-35
 14098  0132C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 14099  0132CC  006F FF7B FFF6     	movff	postinc2,tblptrl
 14100  0132D2  006F FF77 FFF7     	movff	postdec2,tblptrh
 14101  0132D8                     	if	0	;tblptru may be non-zero
 14102  0132D8                     	endif
 14103  0132D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14104  0132D8  0E00               	movlw	low (__mediumconst shr (0+16))
 14105  0132DA  6EF8               	movwf	tblptru,c
 14106  0132DC                     	endif
 14107  0132DC  0008               	tblrd		*
 14108  0132DE  50F5               	movf	tablat,w,c
 14109  0132E0  0A25               	xorlw	37
 14110  0132E2  A4D8               	btfss	status,2,c
 14111  0132E4  D01A               	goto	l13004
 14112                           
 14113                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 14114                           ;stkvar	_fmt @ sp[(-32)+-4]
 14115  0132E6  0EDC               	movlw	-36
 14116  0132E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 14117  0132EE  0EDD               	movlw	-35
 14118  0132F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 14119  0132F6  2ADE               	incf	postinc2,f,c
 14120  0132F8  0E00               	movlw	0
 14121  0132FA  22DD               	addwfc	postdec2,f,c
 14122                           
 14123                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 14124                           ;stkvar	_fp @ sp[(-32)+-2]
 14125  0132FC  0EDE               	movlw	-34
 14126  0132FE  006F FF8F FFE6     	movff	plusw1,postinc1
 14127  013304  006F FF8F FFE6     	movff	plusw1,postinc1
 14128  01330A  0E25               	movlw	37
 14129  01330C  6EE6               	movwf	postinc1,c
 14130  01330E  0E00               	movlw	0
 14131  013310  6EE6               	movwf	postinc1,c
 14132  013312  EC9A  F0CD         	call	_fputc	;wreg free
 14133  013316                     l13000:
 14134                           
 14135                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 14136  013316  0E01               	movlw	1
 14137  013318  D00C               	goto	L13
 14138  01331A                     l13004:
 14139                           
 14140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 14141                           ;stkvar	_fmt @ sp[(-32)+-4]
 14142  01331A  0EDC               	movlw	-36
 14143  01331C  006F FF8F FFD9     	movff	plusw1,fsr2l
 14144  013322  0EDD               	movlw	-35
 14145  013324  006F FF8F FFDA     	movff	plusw1,fsr2h
 14146  01332A  2ADE               	incf	postinc2,f,c
 14147  01332C  0E00               	movlw	0
 14148  01332E  22DD               	addwfc	postdec2,f,c
 14149                           
 14150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 14151  013330  0E00               	movlw	0
 14152  013332                     L13:
 14153  013332  6E01               	movwf	btemp^0,c
 14154  013334  0E00               	movlw	0
 14155  013336  6E02               	movwf	(btemp+1)^0,c
 14156  013338  D02A               	goto	l2470
 14157  01333A                     l13010:
 14158                           
 14159                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 14160                           ;stkvar	_fp @ sp[(-32)+-2]
 14161  01333A  0EDE               	movlw	-34
 14162  01333C  006F FF8F FFE6     	movff	plusw1,postinc1
 14163  013342  006F FF8F FFE6     	movff	plusw1,postinc1
 14164                           
 14165                           ;stkvar	_fmt @ sp[(-34)+-4]
 14166  013348  0EDA               	movlw	-38
 14167  01334A  006F FF8F FFD9     	movff	plusw1,fsr2l
 14168  013350  0EDB               	movlw	-37
 14169  013352  006F FF8F FFDA     	movff	plusw1,fsr2h
 14170  013358  006F FF7B FFF6     	movff	postinc2,tblptrl
 14171  01335E  006F FF77 FFF7     	movff	postdec2,tblptrh
 14172  013364                     	if	0	;tblptru may be non-zero
 14173  013364                     	endif
 14174  013364                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14175  013364  0E00               	movlw	low (__mediumconst shr (0+16))
 14176  013366  6EF8               	movwf	tblptru,c
 14177  013368                     	endif
 14178  013368  0008               	tblrd		*
 14179  01336A  50F5               	movf	tablat,w,c
 14180  01336C  6EE6               	movwf	postinc1,c
 14181  01336E  0E00               	movlw	0
 14182  013370  6EE6               	movwf	postinc1,c
 14183  013372  EC9A  F0CD         	call	_fputc	;wreg free
 14184                           
 14185                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 14186                           ;stkvar	_fmt @ sp[(-32)+-4]
 14187  013376  0EDC               	movlw	-36
 14188  013378  006F FF8F FFD9     	movff	plusw1,fsr2l
 14189  01337E  0EDD               	movlw	-35
 14190  013380  006F FF8F FFDA     	movff	plusw1,fsr2h
 14191  013386  2ADE               	incf	postinc2,f,c
 14192  013388  0E00               	movlw	0
 14193  01338A  22DD               	addwfc	postdec2,f,c
 14194  01338C  D7C4               	goto	l13000
 14195  01338E                     l2470:
 14196                           
 14197                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 14198  01338E  0EDA               	movlw	218
 14199  013390  26E1               	addwf	fsr1l,f,c
 14200  013392  0EFF               	movlw	255
 14201  013394  22E2               	addwfc	fsr1h,f,c
 14202  013396  0012               	return		;funcret
 14203  013398                     __end_of_vfpfcnvrt:
 14204                           	opt callstack 0
 14205                           
 14206 ;; *************** function _xtoa *****************
 14207 ;; Defined at:
 14208 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14209 ;; Parameters:    Size  Location     Type
 14210 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14211 ;;		 -> f(6), NULL(0), 
 14212 ;;  d               8  [STACK] unsigned long long 
 14213 ;;  x               1  [STACK] unsigned char 
 14214 ;; Auto vars:     Size  Location     Type
 14215 ;;  n               8  [STACK] unsigned long long 
 14216 ;;  c               2  [STACK] int 
 14217 ;;  i               2  [STACK] int 
 14218 ;;  w               2  [STACK] int 
 14219 ;;  p               2  [STACK] int 
 14220 ;; Return value:  Size  Location     Type
 14221 ;;                  2  [STACK] int 
 14222 ;; Registers used:
 14223 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 14224 ;; Tracked objects:
 14225 ;;		On entry : 0/0
 14226 ;;		On exit  : 0/0
 14227 ;;		Unchanged: 0/0
 14228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14233 ;;Total ram usage:        0 bytes
 14234 ;; Hardware stack levels used:    1
 14235 ;; Hardware stack levels required when called:   20
 14236 ;; This function calls:
 14237 ;;		_isalpha
 14238 ;;		_isupper
 14239 ;;		_pad
 14240 ;;		_toupper
 14241 ;; This function is called by:
 14242 ;;		_vfpfcnvrt
 14243 ;; This function uses a reentrant model
 14244 ;;
 14245                           
 14246                           	psect	text53
 14247  0160EE                     __ptext53:
 14248                           	opt callstack 0
 14249  0160EE                     _xtoa:
 14250                           	opt callstack 0
 14251                           
 14252                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 14253  0160EE  0E14               	movlw	20
 14254  0160F0  26E1               	addwf	fsr1l,f,c
 14255  0160F2  0E00               	movlw	0
 14256  0160F4  22E2               	addwfc	fsr1h,f,c
 14257                           
 14258                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 14259                           
 14260                           ;incstack = 0
 14261 ;; hardware stack exceeded
 14262  0160F6  AE3D               	btfss	(_prec+1)^0,7,c
 14263                           
 14264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 14265  0160F8  923E               	bcf	_flags^0,1,c
 14266                           
 14267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 14268  0160FA  BE3D               	btfsc	(_prec+1)^0,7,c
 14269  0160FC  D005               	goto	u12000
 14270  0160FE  503D               	movf	(_prec+1)^0,w,c
 14271  016100  E110               	bnz	l12730
 14272  016102  043C               	decf	_prec^0,w,c
 14273  016104  B0D8               	btfsc	status,0,c
 14274  016106  D00D               	goto	l12730
 14275  016108                     u12000:
 14276  016108  0E01               	movlw	1
 14277  01610A  6E0B               	movwf	(btemp+10)^0,c
 14278  01610C  0E00               	movlw	0
 14279  01610E  6E0C               	movwf	(btemp+11)^0,c
 14280                           
 14281                           ;stkvar	_p @ sp[(-20)+18]
 14282  016110  0EFE               	movlw	-2
 14283  016112  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14284  016118  0EFF               	movlw	-1
 14285  01611A  0060  F033  FFE3   	movff	btemp+11,plusw1
 14286  016120  D008               	goto	l2420
 14287  016122                     l12730:
 14288                           
 14289                           ;stkvar	_p @ sp[(-20)+18]
 14290  016122  0EFE               	movlw	-2
 14291  016124  0060  F0F3  FFE3   	movff	_prec,plusw1
 14292  01612A  0EFF               	movlw	-1
 14293  01612C  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 14294  016132                     l2420:
 14295                           
 14296                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 14297                           ;stkvar	_w @ sp[(-20)+16]
 14298  016132  0EFC               	movlw	-4
 14299  016134  0060  F0EB  FFE3   	movff	_width,plusw1
 14300  01613A  0EFD               	movlw	-3
 14301  01613C  0060  F0EF  FFE3   	movff	_width+1,plusw1
 14302                           
 14303                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 14304  016142  A83E               	btfss	_flags^0,4,c
 14305  016144  D00B               	goto	l12736
 14306                           
 14307                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 14308                           ;stkvar	_w @ sp[(-20)+16]
 14309  016146  50E1               	movf	fsr1l,w,c
 14310  016148  0FFC               	addlw	-4
 14311  01614A  6ED9               	movwf	fsr2l,c
 14312  01614C  50E2               	movf	fsr1h,w,c
 14313  01614E  6EDA               	movwf	fsr2h,c
 14314  016150  0EFF               	movlw	255
 14315  016152  22DA               	addwfc	fsr2h,f,c
 14316  016154  0EFE               	movlw	254
 14317  016156  26DE               	addwf	postinc2,f,c
 14318  016158  0EFF               	movlw	255
 14319  01615A  22DD               	addwfc	postdec2,f,c
 14320  01615C                     l12736:
 14321                           
 14322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 14323                           ;stkvar	_d @ sp[(-20)+-10]
 14324  01615C  0EE2               	movlw	226
 14325  01615E  24E1               	addwf	fsr1l,w,c
 14326  016160  6ED9               	movwf	fsr2l,c
 14327  016162  0EFF               	movlw	255
 14328  016164  20E2               	addwfc	fsr1h,w,c
 14329  016166  6EDA               	movwf	fsr2h,c
 14330                           
 14331                           ;stkvar	_n @ sp[(-20)+4]
 14332  016168  0E08               	movlw	8
 14333  01616A  6E01               	movwf	btemp^0,c
 14334  01616C  0EF0               	movlw	-16
 14335  01616E                     us1202999:
 14336  01616E  006F FF7B FFE3     	movff	postinc2,plusw1
 14337  016174  28E8               	incf	wreg,w,c
 14338  016176  2E01               	decfsz	btemp^0,f,c
 14339  016178  D7FA               	bra	us1202999
 14340                           
 14341                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 14342  01617A  0E4F               	movlw	79
 14343  01617C  6E0B               	movwf	(btemp+10)^0,c
 14344  01617E  0E00               	movlw	0
 14345  016180  6E0C               	movwf	(btemp+11)^0,c
 14346                           
 14347                           ;stkvar	_i @ sp[(-20)+14]
 14348  016182  0EFA               	movlw	-6
 14349  016184  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14350  01618A  0EFB               	movlw	-5
 14351  01618C  0060  F033  FFE3   	movff	btemp+11,plusw1
 14352                           
 14353                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 14354  016192  0102               	movlb	2	; () banked
 14355  016194  6BE6               	clrf	(_dbuf+79)& (0+255),b
 14356                           
 14357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14358  016196  D0EE               	goto	l12774
 14359  016198                     l12742:
 14360                           
 14361                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 14362                           ;stkvar	_i @ sp[(-20)+14]
 14363  016198  50E1               	movf	fsr1l,w,c
 14364  01619A  0FFA               	addlw	-6
 14365  01619C  6ED9               	movwf	fsr2l,c
 14366  01619E  50E2               	movf	fsr1h,w,c
 14367  0161A0  6EDA               	movwf	fsr2h,c
 14368  0161A2  0EFF               	movlw	255
 14369  0161A4  22DA               	addwfc	fsr2h,f,c
 14370  0161A6  06DE               	decf	postinc2,f,c
 14371  0161A8  0E00               	movlw	0
 14372  0161AA  5ADD               	subwfb	postdec2,f,c
 14373                           
 14374                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 14375                           ;stkvar	_n @ sp[(-20)+4]
 14376  0161AC  0EF0               	movlw	-16
 14377  0161AE  006F FF8C  F00B    	movff	plusw1,btemp+10
 14378  0161B4  0EF1               	movlw	-15
 14379  0161B6  006F FF8C  F00C    	movff	plusw1,btemp+11
 14380  0161BC  0E0F               	movlw	15
 14381  0161BE  160B               	andwf	(btemp+10)^0,f,c
 14382  0161C0  0E00               	movlw	0
 14383  0161C2  160C               	andwf	(btemp+11)^0,f,c
 14384                           
 14385                           ;stkvar	_c @ sp[(-20)+12]
 14386  0161C4  0EF8               	movlw	-8
 14387  0161C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14388  0161CC  0EF9               	movlw	-7
 14389  0161CE  0060  F033  FFE3   	movff	btemp+11,plusw1
 14390                           
 14391                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 14392                           ;stkvar	_c @ sp[(-20)+12]
 14393  0161D4  0EF9               	movlw	-7
 14394  0161D6  BEE3               	btfsc	plusw1,7,c
 14395  0161D8  D00F               	goto	l12750
 14396  0161DA  0EF9               	movlw	-7
 14397  0161DC  50E3               	movf	plusw1,w,c
 14398  0161DE  E108               	bnz	u12030
 14399  0161E0  0EF8               	movlw	-8
 14400  0161E2  006F FF8C  F001    	movff	plusw1,btemp
 14401  0161E8  0E0A               	movlw	10
 14402  0161EA  5E01               	subwf	btemp^0,f,c
 14403  0161EC  A0D8               	btfss	status,0,c
 14404  0161EE  D004               	goto	l12750
 14405  0161F0                     u12030:
 14406                           
 14407                           ;stkvar	_c @ sp[(-20)+12]
 14408  0161F0  0EF8               	movlw	-8
 14409  0161F2  50E3               	movf	plusw1,w,c
 14410  0161F4  0F57               	addlw	87
 14411  0161F6  D003               	goto	L14
 14412  0161F8                     l12750:
 14413                           
 14414                           ;stkvar	_c @ sp[(-20)+12]
 14415  0161F8  0EF8               	movlw	-8
 14416  0161FA  50E3               	movf	plusw1,w,c
 14417  0161FC  0F30               	addlw	48
 14418  0161FE                     L14:
 14419  0161FE  6E0B               	movwf	(btemp+10)^0,c
 14420  016200  0EF9               	movlw	-7
 14421  016202  006F FF8C  F00C    	movff	plusw1,btemp+11
 14422  016208  0E00               	movlw	0
 14423  01620A  220C               	addwfc	(btemp+11)^0,f,c
 14424                           
 14425                           ;stkvar	_c @ sp[(-20)+12]
 14426  01620C  0EF8               	movlw	-8
 14427  01620E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14428  016214  0EF9               	movlw	-7
 14429  016216  0060  F033  FFE3   	movff	btemp+11,plusw1
 14430  01621C  0EBF               	movlw	191
 14431  01621E  6E0B               	movwf	(btemp+10)^0,c
 14432  016220  0EFF               	movlw	255
 14433  016222  6E0C               	movwf	(btemp+11)^0,c
 14434                           
 14435                           ;stkvar	_x @ sp[(-20)+-11]
 14436  016224  0EE1               	movlw	-31
 14437  016226  50E3               	movf	plusw1,w,c
 14438  016228  6E09               	movwf	(btemp+8)^0,c
 14439  01622A  6A0A               	clrf	(btemp+9)^0,c
 14440  01622C  500B               	movf	(btemp+10)^0,w,c
 14441  01622E  2609               	addwf	(btemp+8)^0,f,c
 14442  016230  500C               	movf	(btemp+11)^0,w,c
 14443  016232  220A               	addwfc	(btemp+9)^0,f,c
 14444  016234  500A               	movf	(btemp+9)^0,w,c
 14445  016236  E106               	bnz	u12040
 14446  016238  0E1A               	movlw	26
 14447  01623A  5C09               	subwf	(btemp+8)^0,w,c
 14448  01623C  B0D8               	btfsc	status,0,c
 14449  01623E  D002               	goto	u12040
 14450  016240  0E01               	movlw	1
 14451  016242  D001               	goto	u12050
 14452  016244                     u12040:
 14453  016244  0E00               	movlw	0
 14454  016246                     u12050:
 14455  016246  6E0B               	movwf	(btemp+10)^0,c
 14456  016248  6A0C               	clrf	(btemp+11)^0,c
 14457                           
 14458                           ;stkvar	_xtoa$5863 @ sp[(-20)+2]
 14459  01624A  0EEE               	movlw	-18
 14460  01624C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14461  016252  0EEF               	movlw	-17
 14462  016254  0060  F033  FFE3   	movff	btemp+11,plusw1
 14463                           
 14464                           ;stkvar	_xtoa$5863 @ sp[(-20)+2]
 14465  01625A  0EEE               	movlw	-18
 14466  01625C  006F FF8C  F001    	movff	plusw1,btemp
 14467  016262  0EEF               	movlw	-17
 14468  016264  50E3               	movf	plusw1,w,c
 14469  016266  1001               	iorwf	btemp^0,w,c
 14470  016268  B4D8               	btfsc	status,2,c
 14471  01626A  D041               	goto	l12766
 14472  01626C  0E9F               	movlw	159
 14473  01626E  6E0B               	movwf	(btemp+10)^0,c
 14474  016270  0EFF               	movlw	255
 14475  016272  6E0C               	movwf	(btemp+11)^0,c
 14476                           
 14477                           ;stkvar	_c @ sp[(-20)+12]
 14478  016274  0EF8               	movlw	-8
 14479  016276  006F FF8C  F009    	movff	plusw1,btemp+8
 14480  01627C  0EF9               	movlw	-7
 14481  01627E  006F FF8C  F00A    	movff	plusw1,btemp+9
 14482  016284  0E20               	movlw	32
 14483  016286  1209               	iorwf	(btemp+8)^0,f,c
 14484  016288  0E00               	movlw	0
 14485  01628A  120A               	iorwf	(btemp+9)^0,f,c
 14486  01628C  500B               	movf	(btemp+10)^0,w,c
 14487  01628E  2609               	addwf	(btemp+8)^0,f,c
 14488  016290  500C               	movf	(btemp+11)^0,w,c
 14489  016292  220A               	addwfc	(btemp+9)^0,f,c
 14490  016294  500A               	movf	(btemp+9)^0,w,c
 14491  016296  E106               	bnz	u12070
 14492  016298  0E1A               	movlw	26
 14493  01629A  5C09               	subwf	(btemp+8)^0,w,c
 14494  01629C  B0D8               	btfsc	status,0,c
 14495  01629E  D002               	goto	u12070
 14496  0162A0  0E01               	movlw	1
 14497  0162A2  D001               	goto	u12080
 14498  0162A4                     u12070:
 14499  0162A4  0E00               	movlw	0
 14500  0162A6                     u12080:
 14501  0162A6  6E0B               	movwf	(btemp+10)^0,c
 14502  0162A8  6A0C               	clrf	(btemp+11)^0,c
 14503                           
 14504                           ;stkvar	_xtoa$5864 @ sp[(-20)+0]
 14505  0162AA  0EEC               	movlw	-20
 14506  0162AC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14507  0162B2  0EED               	movlw	-19
 14508  0162B4  0060  F033  FFE3   	movff	btemp+11,plusw1
 14509                           
 14510                           ;stkvar	_xtoa$5864 @ sp[(-20)+0]
 14511  0162BA  0EEC               	movlw	-20
 14512  0162BC  006F FF8C  F001    	movff	plusw1,btemp
 14513  0162C2  0EED               	movlw	-19
 14514  0162C4  50E3               	movf	plusw1,w,c
 14515  0162C6  1001               	iorwf	btemp^0,w,c
 14516  0162C8  B4D8               	btfsc	status,2,c
 14517  0162CA  D011               	goto	l12766
 14518                           
 14519                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 14520                           ;stkvar	_c @ sp[(-20)+12]
 14521  0162CC  0EF8               	movlw	-8
 14522  0162CE  006F FF8F FFE6     	movff	plusw1,postinc1
 14523  0162D4  006F FF8F FFE6     	movff	plusw1,postinc1
 14524  0162DA  EC11  F0D8         	call	_toupper	;wreg free
 14525                           
 14526                           ;stkvar	_c @ sp[(-20)+12]
 14527  0162DE  0EF8               	movlw	-8
 14528  0162E0  0060  F007  FFE3   	movff	btemp,plusw1
 14529  0162E6  0EF9               	movlw	-7
 14530  0162E8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 14531  0162EE                     l12766:
 14532                           
 14533                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 14534                           ;stkvar	_c @ sp[(-20)+12]
 14535                           ;stkvar	_i @ sp[(-20)+14]
 14536  0162EE  0EFA               	movlw	-6
 14537  0162F0  006F FF8C  F00B    	movff	plusw1,btemp+10
 14538  0162F6  0EFB               	movlw	-5
 14539  0162F8  006F FF8C  F00C    	movff	plusw1,btemp+11
 14540  0162FE  0E97               	movlw	low _dbuf
 14541  016300  240B               	addwf	(btemp+10)^0,w,c
 14542  016302  6ED9               	movwf	fsr2l,c
 14543  016304  0E02               	movlw	high _dbuf
 14544  016306  200C               	addwfc	(btemp+11)^0,w,c
 14545  016308  6EDA               	movwf	fsr2h,c
 14546  01630A  0EF8               	movlw	-8
 14547  01630C  006F FF8F FFDF     	movff	plusw1,indf2
 14548                           
 14549                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 14550                           ;stkvar	_p @ sp[(-20)+18]
 14551  016312  50E1               	movf	fsr1l,w,c
 14552  016314  0FFE               	addlw	-2
 14553  016316  6ED9               	movwf	fsr2l,c
 14554  016318  50E2               	movf	fsr1h,w,c
 14555  01631A  6EDA               	movwf	fsr2h,c
 14556  01631C  0EFF               	movlw	255
 14557  01631E  22DA               	addwfc	fsr2h,f,c
 14558  016320  06DE               	decf	postinc2,f,c
 14559  016322  0E00               	movlw	0
 14560  016324  5ADD               	subwfb	postdec2,f,c
 14561                           
 14562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 14563                           ;stkvar	_w @ sp[(-20)+16]
 14564  016326  50E1               	movf	fsr1l,w,c
 14565  016328  0FFC               	addlw	-4
 14566  01632A  6ED9               	movwf	fsr2l,c
 14567  01632C  50E2               	movf	fsr1h,w,c
 14568  01632E  6EDA               	movwf	fsr2h,c
 14569  016330  0EFF               	movlw	255
 14570  016332  22DA               	addwfc	fsr2h,f,c
 14571  016334  06DE               	decf	postinc2,f,c
 14572  016336  0E00               	movlw	0
 14573  016338  5ADD               	subwfb	postdec2,f,c
 14574                           
 14575                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 14576  01633A  0E04               	movlw	4
 14577  01633C  6E0C               	movwf	(btemp+11)^0,c
 14578                           
 14579                           ;stkvar	_n @ sp[(-20)+4]
 14580  01633E  50E1               	movf	fsr1l,w,c
 14581  016340  0FF0               	addlw	-16
 14582  016342  6ED9               	movwf	fsr2l,c
 14583  016344  50E2               	movf	fsr1h,w,c
 14584  016346  6EDA               	movwf	fsr2h,c
 14585  016348  0EFF               	movlw	255
 14586  01634A  22DA               	addwfc	fsr2h,f,c
 14587  01634C  280C               	incf	(btemp+11)^0,w,c
 14588  01634E  52DE               	movf	postinc2,f,c
 14589  016350  D00F               	goto	u12100
 14590  016352                     u12105:
 14591  016352  52DE               	movf	postinc2,f,c
 14592  016354  52DE               	movf	postinc2,f,c
 14593  016356  52DE               	movf	postinc2,f,c
 14594  016358  52DE               	movf	postinc2,f,c
 14595  01635A  52DE               	movf	postinc2,f,c
 14596  01635C  52DE               	movf	postinc2,f,c
 14597  01635E  90D8               	bcf	status,0,c
 14598  016360  32DD               	rrcf	postdec2,f,c
 14599  016362  32DD               	rrcf	postdec2,f,c
 14600  016364  32DD               	rrcf	postdec2,f,c
 14601  016366  32DD               	rrcf	postdec2,f,c
 14602  016368  32DD               	rrcf	postdec2,f,c
 14603  01636A  32DD               	rrcf	postdec2,f,c
 14604  01636C  32DD               	rrcf	postdec2,f,c
 14605  01636E  32DE               	rrcf	postinc2,f,c
 14606  016370                     u12100:
 14607  016370  2EE8               	decfsz	wreg,f,c
 14608  016372  D7EF               	goto	u12105
 14609  016374                     l12774:
 14610                           
 14611                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14612                           ;stkvar	_i @ sp[(-20)+14]
 14613  016374  0EFB               	movlw	-5
 14614  016376  BEE3               	btfsc	plusw1,7,c
 14615  016378  D03A               	goto	u12150
 14616  01637A  0EFB               	movlw	-5
 14617  01637C  50E3               	movf	plusw1,w,c
 14618  01637E  E108               	bnz	u12110
 14619  016380  0EFA               	movlw	-6
 14620  016382  006F FF8C  F001    	movff	plusw1,btemp
 14621  016388  0E02               	movlw	2
 14622  01638A  5E01               	subwf	btemp^0,f,c
 14623  01638C  A0D8               	btfss	status,0,c
 14624  01638E  D02F               	goto	u12150
 14625  016390                     u12110:
 14626                           
 14627                           ;stkvar	_n @ sp[(-20)+4]
 14628  016390  0EF0               	movlw	-16
 14629  016392  50E3               	movf	plusw1,w,c
 14630  016394  E115               	bnz	u12121
 14631  016396  0EF1               	movlw	-15
 14632  016398  50E3               	movf	plusw1,w,c
 14633  01639A  E112               	bnz	u12121
 14634  01639C  0EF2               	movlw	-14
 14635  01639E  50E3               	movf	plusw1,w,c
 14636  0163A0  E10F               	bnz	u12121
 14637  0163A2  0EF3               	movlw	-13
 14638  0163A4  50E3               	movf	plusw1,w,c
 14639  0163A6  E10C               	bnz	u12121
 14640  0163A8  0EF4               	movlw	-12
 14641  0163AA  50E3               	movf	plusw1,w,c
 14642  0163AC  E109               	bnz	u12121
 14643  0163AE  0EF5               	movlw	-11
 14644  0163B0  50E3               	movf	plusw1,w,c
 14645  0163B2  E106               	bnz	u12121
 14646  0163B4  0EF6               	movlw	-10
 14647  0163B6  50E3               	movf	plusw1,w,c
 14648  0163B8  E103               	bnz	u12121
 14649  0163BA  0EF7               	movlw	-9
 14650  0163BC  50E3               	movf	plusw1,w,c
 14651  0163BE  A4D8               	btfss	status,2,c
 14652  0163C0                     u12121:
 14653  0163C0  D6EB               	goto	l12742
 14654                           
 14655                           ;stkvar	_p @ sp[(-20)+18]
 14656  0163C2  0EFF               	movlw	-1
 14657  0163C4  BEE3               	btfsc	plusw1,7,c
 14658  0163C6  D007               	goto	u12130
 14659  0163C8  0EFF               	movlw	-1
 14660  0163CA  50E3               	movf	plusw1,w,c
 14661  0163CC  E103               	bnz	u12131
 14662  0163CE  0EFE               	movlw	-2
 14663  0163D0  04E3               	decf	plusw1,w,c
 14664  0163D2  B0D8               	btfsc	status,0,c
 14665  0163D4                     u12131:
 14666  0163D4  D6E1               	goto	l12742
 14667  0163D6                     u12130:
 14668                           
 14669                           ;stkvar	_w @ sp[(-20)+16]
 14670  0163D6  0EFD               	movlw	-3
 14671  0163D8  BEE3               	btfsc	plusw1,7,c
 14672  0163DA  D009               	goto	u12150
 14673  0163DC  0EFD               	movlw	-3
 14674  0163DE  50E3               	movf	plusw1,w,c
 14675  0163E0  E104               	bnz	u12140
 14676  0163E2  0EFC               	movlw	-4
 14677  0163E4  04E3               	decf	plusw1,w,c
 14678  0163E6  A0D8               	btfss	status,0,c
 14679  0163E8  D002               	goto	u12150
 14680  0163EA                     u12140:
 14681  0163EA  B23E               	btfsc	_flags^0,1,c
 14682  0163EC  D6D5               	goto	l12742
 14683  0163EE                     u12150:
 14684                           
 14685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 14686  0163EE  A83E               	btfss	_flags^0,4,c
 14687  0163F0  D036               	goto	l12790
 14688                           
 14689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 14690                           ;stkvar	_i @ sp[(-20)+14]
 14691  0163F2  50E1               	movf	fsr1l,w,c
 14692  0163F4  0FFA               	addlw	-6
 14693  0163F6  6ED9               	movwf	fsr2l,c
 14694  0163F8  50E2               	movf	fsr1h,w,c
 14695  0163FA  6EDA               	movwf	fsr2h,c
 14696  0163FC  0EFF               	movlw	255
 14697  0163FE  22DA               	addwfc	fsr2h,f,c
 14698  016400  06DE               	decf	postinc2,f,c
 14699  016402  0E00               	movlw	0
 14700  016404  5ADD               	subwfb	postdec2,f,c
 14701                           
 14702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 14703                           ;stkvar	_x @ sp[(-20)+-11]
 14704                           ;stkvar	_i @ sp[(-20)+14]
 14705  016406  0EFA               	movlw	-6
 14706  016408  006F FF8C  F00B    	movff	plusw1,btemp+10
 14707  01640E  0EFB               	movlw	-5
 14708  016410  006F FF8C  F00C    	movff	plusw1,btemp+11
 14709  016416  0E97               	movlw	low _dbuf
 14710  016418  240B               	addwf	(btemp+10)^0,w,c
 14711  01641A  6ED9               	movwf	fsr2l,c
 14712  01641C  0E02               	movlw	high _dbuf
 14713  01641E  200C               	addwfc	(btemp+11)^0,w,c
 14714  016420  6EDA               	movwf	fsr2h,c
 14715  016422  0EE1               	movlw	-31
 14716  016424  006F FF8F FFDF     	movff	plusw1,indf2
 14717                           
 14718                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 14719                           ;stkvar	_i @ sp[(-20)+14]
 14720  01642A  50E1               	movf	fsr1l,w,c
 14721  01642C  0FFA               	addlw	-6
 14722  01642E  6ED9               	movwf	fsr2l,c
 14723  016430  50E2               	movf	fsr1h,w,c
 14724  016432  6EDA               	movwf	fsr2h,c
 14725  016434  0EFF               	movlw	255
 14726  016436  22DA               	addwfc	fsr2h,f,c
 14727  016438  06DE               	decf	postinc2,f,c
 14728  01643A  0E00               	movlw	0
 14729  01643C  5ADD               	subwfb	postdec2,f,c
 14730                           
 14731                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 14732                           ;stkvar	_i @ sp[(-20)+14]
 14733  01643E  0EFA               	movlw	-6
 14734  016440  006F FF8C  F00B    	movff	plusw1,btemp+10
 14735  016446  0EFB               	movlw	-5
 14736  016448  006F FF8C  F00C    	movff	plusw1,btemp+11
 14737  01644E  0E97               	movlw	low _dbuf
 14738  016450  240B               	addwf	(btemp+10)^0,w,c
 14739  016452  6ED9               	movwf	fsr2l,c
 14740  016454  0E02               	movlw	high _dbuf
 14741  016456  200C               	addwfc	(btemp+11)^0,w,c
 14742  016458  6EDA               	movwf	fsr2h,c
 14743  01645A  0E30               	movlw	48
 14744  01645C  6EDF               	movwf	indf2,c
 14745  01645E                     l12790:
 14746                           
 14747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 14748                           ;stkvar	_w @ sp[(-20)+16]
 14749  01645E  0EFC               	movlw	-4
 14750  016460  006F FF8F FFE6     	movff	plusw1,postinc1
 14751  016466  006F FF8F FFE6     	movff	plusw1,postinc1
 14752                           
 14753                           ;stkvar	_i @ sp[(-22)+14]
 14754  01646C  0E97               	movlw	low _dbuf
 14755  01646E  6E0B               	movwf	(btemp+10)^0,c
 14756  016470  0E02               	movlw	high _dbuf
 14757  016472  6E0C               	movwf	(btemp+11)^0,c
 14758  016474  0EF8               	movlw	-8
 14759  016476  50E3               	movf	plusw1,w,c
 14760  016478  260B               	addwf	(btemp+10)^0,f,c
 14761  01647A  0EF9               	movlw	-7
 14762  01647C  50E3               	movf	plusw1,w,c
 14763  01647E  220C               	addwfc	(btemp+11)^0,f,c
 14764  016480  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14765  016486  0060  F033  FFE6   	movff	btemp+11,postinc1
 14766                           
 14767                           ;stkvar	_fp @ sp[(-24)+-2]
 14768  01648C  0EE6               	movlw	-26
 14769  01648E  006F FF8F FFE6     	movff	plusw1,postinc1
 14770  016494  006F FF8F FFE6     	movff	plusw1,postinc1
 14771  01649A  EC44  F0CF         	call	_pad	;wreg free
 14772                           
 14773                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 14774  01649E  0EE1               	movlw	225
 14775  0164A0  26E1               	addwf	fsr1l,f,c
 14776  0164A2  0EFF               	movlw	255
 14777  0164A4  22E2               	addwfc	fsr1h,f,c
 14778  0164A6  0012               	return		;funcret
 14779  0164A8                     __end_of_xtoa:
 14780                           	opt callstack 0
 14781                           
 14782 ;; *************** function _toupper *****************
 14783 ;; Defined at:
 14784 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 14785 ;; Parameters:    Size  Location     Type
 14786 ;;  c               2  [STACK] int 
 14787 ;; Auto vars:     Size  Location     Type
 14788 ;;		None
 14789 ;; Return value:  Size  Location     Type
 14790 ;;                  2  [STACK] int 
 14791 ;; Registers used:
 14792 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 14793 ;; Tracked objects:
 14794 ;;		On entry : 0/2
 14795 ;;		On exit  : 0/0
 14796 ;;		Unchanged: 0/0
 14797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14802 ;;Total ram usage:        0 bytes
 14803 ;; Hardware stack levels used:    1
 14804 ;; Hardware stack levels required when called:   16
 14805 ;; This function calls:
 14806 ;;		_islower
 14807 ;; This function is called by:
 14808 ;;		_xtoa
 14809 ;; This function uses a reentrant model
 14810 ;;
 14811                           
 14812                           	psect	text54
 14813  01B022                     __ptext54:
 14814                           	opt callstack 0
 14815  01B022                     _toupper:
 14816                           	opt callstack 0
 14817                           
 14818                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14819  01B022  52E6               	movf	postinc1,f,c
 14820  01B024  52E6               	movf	postinc1,f,c
 14821                           
 14822                           ;stkvar	_c @ sp[(-2)+-2]
 14823                           
 14824                           ;incstack = 0
 14825 ;; hardware stack exceeded
 14826  01B026  0EFC               	movlw	-4
 14827  01B028  50E3               	movf	plusw1,w,c
 14828  01B02A  0F9F               	addlw	159
 14829  01B02C  6E0B               	movwf	(btemp+10)^0,c
 14830  01B02E  0EFD               	movlw	-3
 14831  01B030  006F FF8C  F00C    	movff	plusw1,btemp+11
 14832  01B036  0EFF               	movlw	255
 14833  01B038  220C               	addwfc	(btemp+11)^0,f,c
 14834  01B03A  500C               	movf	(btemp+11)^0,w,c
 14835  01B03C  E106               	bnz	u6350
 14836  01B03E  0E1A               	movlw	26
 14837  01B040  5C0B               	subwf	(btemp+10)^0,w,c
 14838  01B042  B0D8               	btfsc	status,0,c
 14839  01B044  D002               	goto	u6350
 14840  01B046  0E01               	movlw	1
 14841  01B048  D001               	goto	u6360
 14842  01B04A                     u6350:
 14843  01B04A  0E00               	movlw	0
 14844  01B04C                     u6360:
 14845  01B04C  6E0B               	movwf	(btemp+10)^0,c
 14846  01B04E  6A0C               	clrf	(btemp+11)^0,c
 14847                           
 14848                           ;stkvar	_toupper$6670 @ sp[(-2)+0]
 14849  01B050  0EFE               	movlw	-2
 14850  01B052  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14851  01B058  0EFF               	movlw	-1
 14852  01B05A  0060  F033  FFE3   	movff	btemp+11,plusw1
 14853                           
 14854                           ;stkvar	_toupper$6670 @ sp[(-2)+0]
 14855  01B060  0EFE               	movlw	-2
 14856  01B062  006F FF8C  F001    	movff	plusw1,btemp
 14857  01B068  0EFF               	movlw	-1
 14858  01B06A  50E3               	movf	plusw1,w,c
 14859  01B06C  1001               	iorwf	btemp^0,w,c
 14860  01B06E  B4D8               	btfsc	status,2,c
 14861  01B070  D00D               	goto	l8320
 14862                           
 14863                           ;stkvar	_c @ sp[(-2)+-2]
 14864  01B072  0EFC               	movlw	-4
 14865  01B074  006F FF8C  F001    	movff	plusw1,btemp
 14866  01B07A  0EFD               	movlw	-3
 14867  01B07C  006F FF8C  F002    	movff	plusw1,btemp+1
 14868  01B082  0E5F               	movlw	95
 14869  01B084  1601               	andwf	btemp^0,f,c
 14870  01B086  0E00               	movlw	0
 14871  01B088  1602               	andwf	(btemp+1)^0,f,c
 14872  01B08A  D008               	goto	l3587
 14873  01B08C                     l8320:
 14874                           
 14875                           ;stkvar	_c @ sp[(-2)+-2]
 14876  01B08C  0EFC               	movlw	-4
 14877  01B08E  006F FF8C  F001    	movff	plusw1,btemp
 14878  01B094  0EFD               	movlw	-3
 14879  01B096  006F FF8C  F002    	movff	plusw1,btemp+1
 14880  01B09C                     l3587:
 14881                           
 14882                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14883  01B09C  52E5               	movf	postdec1,f,c
 14884  01B09E  52E5               	movf	postdec1,f,c
 14885  01B0A0  52E5               	movf	postdec1,f,c
 14886  01B0A2  52E5               	movf	postdec1,f,c
 14887  01B0A4  0012               	return		;funcret
 14888  01B0A6                     __end_of_toupper:
 14889                           	opt callstack 0
 14890                           
 14891 ;; *************** function _islower *****************
 14892 ;; Defined at:
 14893 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 14894 ;; Parameters:    Size  Location     Type
 14895 ;;  c               2  [STACK] int 
 14896 ;; Auto vars:     Size  Location     Type
 14897 ;;		None
 14898 ;; Return value:  Size  Location     Type
 14899 ;;                  2  [STACK] int 
 14900 ;; Registers used:
 14901 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 14902 ;; Tracked objects:
 14903 ;;		On entry : 0/0
 14904 ;;		On exit  : 0/0
 14905 ;;		Unchanged: 0/0
 14906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14911 ;;Total ram usage:        0 bytes
 14912 ;; Hardware stack levels used:    1
 14913 ;; Hardware stack levels required when called:   15
 14914 ;; This function calls:
 14915 ;;		Nothing
 14916 ;; This function is called by:
 14917 ;;		_toupper
 14918 ;; This function uses a reentrant model
 14919 ;;
 14920                           
 14921                           	psect	text55
 14922  01BEF8                     __ptext55:
 14923                           	opt callstack 0
 14924  01BEF8                     _islower:
 14925                           	opt callstack 0
 14926                           
 14927                           ;stkvar	_c @ sp[(0)+-2]
 14928                           
 14929                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14930                           ;incstack = 0
 14931 ;; hardware stack exceeded
 14932  01BEF8  0EFE               	movlw	-2
 14933  01BEFA  50E3               	movf	plusw1,w,c
 14934  01BEFC  0F9F               	addlw	159
 14935  01BEFE  6E0B               	movwf	(btemp+10)^0,c
 14936  01BF00  0EFF               	movlw	-1
 14937  01BF02  006F FF8C  F00C    	movff	plusw1,btemp+11
 14938  01BF08  0EFF               	movlw	255
 14939  01BF0A  220C               	addwfc	(btemp+11)^0,f,c
 14940  01BF0C  500C               	movf	(btemp+11)^0,w,c
 14941  01BF0E  E106               	bnz	u5990
 14942  01BF10  0E1A               	movlw	26
 14943  01BF12  5C0B               	subwf	(btemp+10)^0,w,c
 14944  01BF14  B0D8               	btfsc	status,0,c
 14945  01BF16  D002               	goto	u5990
 14946  01BF18  0E01               	movlw	1
 14947  01BF1A  D001               	goto	u6000
 14948  01BF1C                     u5990:
 14949  01BF1C  0E00               	movlw	0
 14950  01BF1E                     u6000:
 14951  01BF1E  6E01               	movwf	btemp^0,c
 14952  01BF20  6A02               	clrf	(btemp+1)^0,c
 14953                           
 14954                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14955  01BF22  52E5               	movf	postdec1,f,c
 14956  01BF24  52E5               	movf	postdec1,f,c
 14957  01BF26  0012               	return		;funcret
 14958  01BF28                     __end_of_islower:
 14959                           	opt callstack 0
 14960                           
 14961 ;; *************** function _isalpha *****************
 14962 ;; Defined at:
 14963 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 14964 ;; Parameters:    Size  Location     Type
 14965 ;;  c               2  [STACK] int 
 14966 ;; Auto vars:     Size  Location     Type
 14967 ;;		None
 14968 ;; Return value:  Size  Location     Type
 14969 ;;                  2  [STACK] int 
 14970 ;; Registers used:
 14971 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 14972 ;; Tracked objects:
 14973 ;;		On entry : 0/0
 14974 ;;		On exit  : 0/0
 14975 ;;		Unchanged: 0/0
 14976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14981 ;;Total ram usage:        0 bytes
 14982 ;; Hardware stack levels used:    1
 14983 ;; Hardware stack levels required when called:   15
 14984 ;; This function calls:
 14985 ;;		Nothing
 14986 ;; This function is called by:
 14987 ;;		_xtoa
 14988 ;; This function uses a reentrant model
 14989 ;;
 14990                           
 14991                           	psect	text56
 14992  01BADE                     __ptext56:
 14993                           	opt callstack 0
 14994  01BADE                     _isalpha:
 14995                           	opt callstack 0
 14996                           
 14997                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14998                           ;incstack = 0
 14999 ;; hardware stack exceeded
 15000  01BADE  0E9F               	movlw	159
 15001  01BAE0  6E0B               	movwf	(btemp+10)^0,c
 15002  01BAE2  0EFF               	movlw	255
 15003  01BAE4  6E0C               	movwf	(btemp+11)^0,c
 15004                           
 15005                           ;stkvar	_c @ sp[(0)+-2]
 15006  01BAE6  0EFE               	movlw	-2
 15007  01BAE8  006F FF8C  F009    	movff	plusw1,btemp+8
 15008  01BAEE  0EFF               	movlw	-1
 15009  01BAF0  006F FF8C  F00A    	movff	plusw1,btemp+9
 15010  01BAF6  0E20               	movlw	32
 15011  01BAF8  1209               	iorwf	(btemp+8)^0,f,c
 15012  01BAFA  0E00               	movlw	0
 15013  01BAFC  120A               	iorwf	(btemp+9)^0,f,c
 15014  01BAFE  500B               	movf	(btemp+10)^0,w,c
 15015  01BB00  2609               	addwf	(btemp+8)^0,f,c
 15016  01BB02  500C               	movf	(btemp+11)^0,w,c
 15017  01BB04  220A               	addwfc	(btemp+9)^0,f,c
 15018  01BB06  500A               	movf	(btemp+9)^0,w,c
 15019  01BB08  E106               	bnz	u6330
 15020  01BB0A  0E1A               	movlw	26
 15021  01BB0C  5C09               	subwf	(btemp+8)^0,w,c
 15022  01BB0E  B0D8               	btfsc	status,0,c
 15023  01BB10  D002               	goto	u6330
 15024  01BB12  0E01               	movlw	1
 15025  01BB14  D001               	goto	u6340
 15026  01BB16                     u6330:
 15027  01BB16  0E00               	movlw	0
 15028  01BB18                     u6340:
 15029  01BB18  6E01               	movwf	btemp^0,c
 15030  01BB1A  6A02               	clrf	(btemp+1)^0,c
 15031                           
 15032                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 15033  01BB1C  52E5               	movf	postdec1,f,c
 15034  01BB1E  52E5               	movf	postdec1,f,c
 15035  01BB20  0012               	return		;funcret
 15036  01BB22                     __end_of_isalpha:
 15037                           	opt callstack 0
 15038                           
 15039 ;; *************** function _utoa *****************
 15040 ;; Defined at:
 15041 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15042 ;; Parameters:    Size  Location     Type
 15043 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15044 ;;		 -> f(6), NULL(0), 
 15045 ;;  d               8  [STACK] unsigned long long 
 15046 ;; Auto vars:     Size  Location     Type
 15047 ;;  n               8  [STACK] unsigned long long 
 15048 ;;  i               2  [STACK] int 
 15049 ;;  w               2  [STACK] int 
 15050 ;;  p               2  [STACK] int 
 15051 ;; Return value:  Size  Location     Type
 15052 ;;                  2  [STACK] int 
 15053 ;; Registers used:
 15054 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 15055 ;; Tracked objects:
 15056 ;;		On entry : 0/0
 15057 ;;		On exit  : 0/0
 15058 ;;		Unchanged: 0/0
 15059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15064 ;;Total ram usage:        0 bytes
 15065 ;; Hardware stack levels used:    1
 15066 ;; Hardware stack levels required when called:   20
 15067 ;; This function calls:
 15068 ;;		___lodiv
 15069 ;;		___lomod
 15070 ;;		_pad
 15071 ;; This function is called by:
 15072 ;;		_vfpfcnvrt
 15073 ;; This function uses a reentrant model
 15074 ;;
 15075                           
 15076                           	psect	text57
 15077  016814                     __ptext57:
 15078                           	opt callstack 0
 15079  016814                     _utoa:
 15080                           	opt callstack 0
 15081                           
 15082                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 15083  016814  0E0E               	movlw	14
 15084  016816  26E1               	addwf	fsr1l,f,c
 15085  016818  0E00               	movlw	0
 15086  01681A  22E2               	addwfc	fsr1h,f,c
 15087                           
 15088                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 15089                           
 15090                           ;incstack = 0
 15091 ;; hardware stack exceeded
 15092  01681C  AE3D               	btfss	(_prec+1)^0,7,c
 15093                           
 15094                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 15095  01681E  923E               	bcf	_flags^0,1,c
 15096                           
 15097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 15098  016820  BE3D               	btfsc	(_prec+1)^0,7,c
 15099  016822  D005               	goto	u11920
 15100  016824  503D               	movf	(_prec+1)^0,w,c
 15101  016826  E110               	bnz	l12690
 15102  016828  043C               	decf	_prec^0,w,c
 15103  01682A  B0D8               	btfsc	status,0,c
 15104  01682C  D00D               	goto	l12690
 15105  01682E                     u11920:
 15106  01682E  0E01               	movlw	1
 15107  016830  6E0B               	movwf	(btemp+10)^0,c
 15108  016832  0E00               	movlw	0
 15109  016834  6E0C               	movwf	(btemp+11)^0,c
 15110                           
 15111                           ;stkvar	_p @ sp[(-14)+12]
 15112  016836  0EFE               	movlw	-2
 15113  016838  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15114  01683E  0EFF               	movlw	-1
 15115  016840  0060  F033  FFE3   	movff	btemp+11,plusw1
 15116  016846  D008               	goto	l2405
 15117  016848                     l12690:
 15118                           
 15119                           ;stkvar	_p @ sp[(-14)+12]
 15120  016848  0EFE               	movlw	-2
 15121  01684A  0060  F0F3  FFE3   	movff	_prec,plusw1
 15122  016850  0EFF               	movlw	-1
 15123  016852  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 15124  016858                     l2405:
 15125                           
 15126                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 15127                           ;stkvar	_w @ sp[(-14)+10]
 15128  016858  0EFC               	movlw	-4
 15129  01685A  0060  F0EB  FFE3   	movff	_width,plusw1
 15130  016860  0EFD               	movlw	-3
 15131  016862  0060  F0EF  FFE3   	movff	_width+1,plusw1
 15132                           
 15133                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 15134                           ;stkvar	_d @ sp[(-14)+-10]
 15135  016868  0EE8               	movlw	232
 15136  01686A  24E1               	addwf	fsr1l,w,c
 15137  01686C  6ED9               	movwf	fsr2l,c
 15138  01686E  0EFF               	movlw	255
 15139  016870  20E2               	addwfc	fsr1h,w,c
 15140  016872  6EDA               	movwf	fsr2h,c
 15141                           
 15142                           ;stkvar	_n @ sp[(-14)+0]
 15143  016874  0E08               	movlw	8
 15144  016876  6E01               	movwf	btemp^0,c
 15145  016878  0EF2               	movlw	-14
 15146  01687A                     us1193999:
 15147  01687A  006F FF7B FFE3     	movff	postinc2,plusw1
 15148  016880  28E8               	incf	wreg,w,c
 15149  016882  2E01               	decfsz	btemp^0,f,c
 15150  016884  D7FA               	bra	us1193999
 15151                           
 15152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 15153  016886  0E4F               	movlw	79
 15154  016888  6E0B               	movwf	(btemp+10)^0,c
 15155  01688A  0E00               	movlw	0
 15156  01688C  6E0C               	movwf	(btemp+11)^0,c
 15157                           
 15158                           ;stkvar	_i @ sp[(-14)+8]
 15159  01688E  0EFA               	movlw	-6
 15160  016890  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15161  016896  0EFB               	movlw	-5
 15162  016898  0060  F033  FFE3   	movff	btemp+11,plusw1
 15163                           
 15164                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 15165  01689E  0102               	movlb	2	; () banked
 15166  0168A0  6BE6               	clrf	(_dbuf+79)& (0+255),b
 15167                           
 15168                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 15169  0168A2  D0FB               	goto	l12708
 15170  0168A4                     l12698:
 15171                           
 15172                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 15173                           ;stkvar	_i @ sp[(-14)+8]
 15174  0168A4  50E1               	movf	fsr1l,w,c
 15175  0168A6  0FFA               	addlw	-6
 15176  0168A8  6ED9               	movwf	fsr2l,c
 15177  0168AA  50E2               	movf	fsr1h,w,c
 15178  0168AC  6EDA               	movwf	fsr2h,c
 15179  0168AE  0EFF               	movlw	255
 15180  0168B0  22DA               	addwfc	fsr2h,f,c
 15181  0168B2  06DE               	decf	postinc2,f,c
 15182  0168B4  0E00               	movlw	0
 15183  0168B6  5ADD               	subwfb	postdec2,f,c
 15184                           
 15185                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 15186  0168B8  0E0A               	movlw	10
 15187  0168BA  6EE6               	movwf	postinc1,c
 15188  0168BC  0E00               	movlw	0
 15189  0168BE  6EE6               	movwf	postinc1,c
 15190  0168C0  0E00               	movlw	0
 15191  0168C2  6EE6               	movwf	postinc1,c
 15192  0168C4  0E00               	movlw	0
 15193  0168C6  6EE6               	movwf	postinc1,c
 15194  0168C8  0E00               	movlw	0
 15195  0168CA  6EE6               	movwf	postinc1,c
 15196  0168CC  0E00               	movlw	0
 15197  0168CE  6EE6               	movwf	postinc1,c
 15198  0168D0  0E00               	movlw	0
 15199  0168D2  6EE6               	movwf	postinc1,c
 15200  0168D4  0E00               	movlw	0
 15201  0168D6  6EE6               	movwf	postinc1,c
 15202                           
 15203                           ;stkvar	_n @ sp[(-22)+0]
 15204  0168D8  50E1               	movf	fsr1l,w,c
 15205  0168DA  0FEA               	addlw	-22
 15206  0168DC  6ED9               	movwf	fsr2l,c
 15207  0168DE  50E2               	movf	fsr1h,w,c
 15208  0168E0  6EDA               	movwf	fsr2h,c
 15209  0168E2  0EFF               	movlw	255
 15210  0168E4  22DA               	addwfc	fsr2h,f,c
 15211  0168E6  006F FF7B FFE6     	movff	postinc2,postinc1
 15212  0168EC  006F FF7B FFE6     	movff	postinc2,postinc1
 15213  0168F2  006F FF7B FFE6     	movff	postinc2,postinc1
 15214  0168F8  006F FF7B FFE6     	movff	postinc2,postinc1
 15215  0168FE  006F FF7B FFE6     	movff	postinc2,postinc1
 15216  016904  006F FF7B FFE6     	movff	postinc2,postinc1
 15217  01690A  006F FF7B FFE6     	movff	postinc2,postinc1
 15218  016910  006F FF7B FFE6     	movff	postinc2,postinc1
 15219  016916  ECC7  F0CB         	call	___lomod	;wreg free
 15220  01691A  52E5               	movf	postdec1,f,c
 15221  01691C  006F FF9C  F018    	movff	indf1,btemp+23
 15222  016922  52E5               	movf	postdec1,f,c
 15223  016924  006F FF9C  F017    	movff	indf1,btemp+22
 15224  01692A  52E5               	movf	postdec1,f,c
 15225  01692C  006F FF9C  F016    	movff	indf1,btemp+21
 15226  016932  52E5               	movf	postdec1,f,c
 15227  016934  006F FF9C  F015    	movff	indf1,btemp+20
 15228  01693A  52E5               	movf	postdec1,f,c
 15229  01693C  006F FF9C  F014    	movff	indf1,btemp+19
 15230  016942  52E5               	movf	postdec1,f,c
 15231  016944  006F FF9C  F013    	movff	indf1,btemp+18
 15232  01694A  52E5               	movf	postdec1,f,c
 15233  01694C  006F FF9C  F012    	movff	indf1,btemp+17
 15234  016952  52E5               	movf	postdec1,f,c
 15235  016954  006F FF9C  F011    	movff	indf1,btemp+16
 15236  01695A  0EF8               	movlw	248
 15237  01695C  26E1               	addwf	fsr1l,f,c
 15238  01695E  0EFF               	movlw	255
 15239  016960  22E2               	addwfc	fsr1h,f,c
 15240  016962  0E30               	movlw	48
 15241  016964  2611               	addwf	(btemp+16)^0,f,c
 15242                           
 15243                           ;stkvar	_i @ sp[(-14)+8]
 15244  016966  0EFA               	movlw	-6
 15245  016968  006F FF8C  F00B    	movff	plusw1,btemp+10
 15246  01696E  0EFB               	movlw	-5
 15247  016970  006F FF8C  F00C    	movff	plusw1,btemp+11
 15248  016976  0E97               	movlw	low _dbuf
 15249  016978  240B               	addwf	(btemp+10)^0,w,c
 15250  01697A  6ED9               	movwf	fsr2l,c
 15251  01697C  0E02               	movlw	high _dbuf
 15252  01697E  200C               	addwfc	(btemp+11)^0,w,c
 15253  016980  6EDA               	movwf	fsr2h,c
 15254  016982  0060  F047  FFDF   	movff	btemp+16,indf2
 15255                           
 15256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 15257                           ;stkvar	_p @ sp[(-14)+12]
 15258  016988  50E1               	movf	fsr1l,w,c
 15259  01698A  0FFE               	addlw	-2
 15260  01698C  6ED9               	movwf	fsr2l,c
 15261  01698E  50E2               	movf	fsr1h,w,c
 15262  016990  6EDA               	movwf	fsr2h,c
 15263  016992  0EFF               	movlw	255
 15264  016994  22DA               	addwfc	fsr2h,f,c
 15265  016996  06DE               	decf	postinc2,f,c
 15266  016998  0E00               	movlw	0
 15267  01699A  5ADD               	subwfb	postdec2,f,c
 15268                           
 15269                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 15270                           ;stkvar	_w @ sp[(-14)+10]
 15271  01699C  50E1               	movf	fsr1l,w,c
 15272  01699E  0FFC               	addlw	-4
 15273  0169A0  6ED9               	movwf	fsr2l,c
 15274  0169A2  50E2               	movf	fsr1h,w,c
 15275  0169A4  6EDA               	movwf	fsr2h,c
 15276  0169A6  0EFF               	movlw	255
 15277  0169A8  22DA               	addwfc	fsr2h,f,c
 15278  0169AA  06DE               	decf	postinc2,f,c
 15279  0169AC  0E00               	movlw	0
 15280  0169AE  5ADD               	subwfb	postdec2,f,c
 15281                           
 15282                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 15283  0169B0  0E0A               	movlw	10
 15284  0169B2  6EE6               	movwf	postinc1,c
 15285  0169B4  0E00               	movlw	0
 15286  0169B6  6EE6               	movwf	postinc1,c
 15287  0169B8  0E00               	movlw	0
 15288  0169BA  6EE6               	movwf	postinc1,c
 15289  0169BC  0E00               	movlw	0
 15290  0169BE  6EE6               	movwf	postinc1,c
 15291  0169C0  0E00               	movlw	0
 15292  0169C2  6EE6               	movwf	postinc1,c
 15293  0169C4  0E00               	movlw	0
 15294  0169C6  6EE6               	movwf	postinc1,c
 15295  0169C8  0E00               	movlw	0
 15296  0169CA  6EE6               	movwf	postinc1,c
 15297  0169CC  0E00               	movlw	0
 15298  0169CE  6EE6               	movwf	postinc1,c
 15299                           
 15300                           ;stkvar	_n @ sp[(-22)+0]
 15301  0169D0  50E1               	movf	fsr1l,w,c
 15302  0169D2  0FEA               	addlw	-22
 15303  0169D4  6ED9               	movwf	fsr2l,c
 15304  0169D6  50E2               	movf	fsr1h,w,c
 15305  0169D8  6EDA               	movwf	fsr2h,c
 15306  0169DA  0EFF               	movlw	255
 15307  0169DC  22DA               	addwfc	fsr2h,f,c
 15308  0169DE  006F FF7B FFE6     	movff	postinc2,postinc1
 15309  0169E4  006F FF7B FFE6     	movff	postinc2,postinc1
 15310  0169EA  006F FF7B FFE6     	movff	postinc2,postinc1
 15311  0169F0  006F FF7B FFE6     	movff	postinc2,postinc1
 15312  0169F6  006F FF7B FFE6     	movff	postinc2,postinc1
 15313  0169FC  006F FF7B FFE6     	movff	postinc2,postinc1
 15314  016A02  006F FF7B FFE6     	movff	postinc2,postinc1
 15315  016A08  006F FF7B FFE6     	movff	postinc2,postinc1
 15316  016A0E  ECA3  F0C7         	call	___lodiv	;wreg free
 15317  016A12  52E5               	movf	postdec1,f,c
 15318  016A14  006F FF9C  F018    	movff	indf1,btemp+23
 15319  016A1A  52E5               	movf	postdec1,f,c
 15320  016A1C  006F FF9C  F017    	movff	indf1,btemp+22
 15321  016A22  52E5               	movf	postdec1,f,c
 15322  016A24  006F FF9C  F016    	movff	indf1,btemp+21
 15323  016A2A  52E5               	movf	postdec1,f,c
 15324  016A2C  006F FF9C  F015    	movff	indf1,btemp+20
 15325  016A32  52E5               	movf	postdec1,f,c
 15326  016A34  006F FF9C  F014    	movff	indf1,btemp+19
 15327  016A3A  52E5               	movf	postdec1,f,c
 15328  016A3C  006F FF9C  F013    	movff	indf1,btemp+18
 15329  016A42  52E5               	movf	postdec1,f,c
 15330  016A44  006F FF9C  F012    	movff	indf1,btemp+17
 15331  016A4A  52E5               	movf	postdec1,f,c
 15332  016A4C  006F FF9C  F011    	movff	indf1,btemp+16
 15333  016A52  0EF8               	movlw	248
 15334  016A54  26E1               	addwf	fsr1l,f,c
 15335  016A56  0EFF               	movlw	255
 15336  016A58  22E2               	addwfc	fsr1h,f,c
 15337                           
 15338                           ;stkvar	_n @ sp[(-14)+0]
 15339  016A5A  0EF2               	movlw	-14
 15340  016A5C  0060  F047  FFE3   	movff	btemp+16,plusw1
 15341  016A62  0EF3               	movlw	-13
 15342  016A64  0060  F04B  FFE3   	movff	btemp+17,plusw1
 15343  016A6A  0EF4               	movlw	-12
 15344  016A6C  0060  F04F  FFE3   	movff	btemp+18,plusw1
 15345  016A72  0EF5               	movlw	-11
 15346  016A74  0060  F053  FFE3   	movff	btemp+19,plusw1
 15347  016A7A  0EF6               	movlw	-10
 15348  016A7C  0060  F057  FFE3   	movff	btemp+20,plusw1
 15349  016A82  0EF7               	movlw	-9
 15350  016A84  0060  F05B  FFE3   	movff	btemp+21,plusw1
 15351  016A8A  0EF8               	movlw	-8
 15352  016A8C  0060  F05F  FFE3   	movff	btemp+22,plusw1
 15353  016A92  0EF9               	movlw	-7
 15354  016A94  0060  F063  FFE3   	movff	btemp+23,plusw1
 15355  016A9A                     l12708:
 15356                           
 15357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 15358                           ;stkvar	_i @ sp[(-14)+8]
 15359  016A9A  0EFA               	movlw	-6
 15360  016A9C  006F FF8C  F001    	movff	plusw1,btemp
 15361  016AA2  0EFB               	movlw	-5
 15362  016AA4  50E3               	movf	plusw1,w,c
 15363  016AA6  1001               	iorwf	btemp^0,w,c
 15364  016AA8  B4D8               	btfsc	status,2,c
 15365  016AAA  D02F               	goto	u11980
 15366                           
 15367                           ;stkvar	_n @ sp[(-14)+0]
 15368  016AAC  0EF2               	movlw	-14
 15369  016AAE  50E3               	movf	plusw1,w,c
 15370  016AB0  E115               	bnz	u11951
 15371  016AB2  0EF3               	movlw	-13
 15372  016AB4  50E3               	movf	plusw1,w,c
 15373  016AB6  E112               	bnz	u11951
 15374  016AB8  0EF4               	movlw	-12
 15375  016ABA  50E3               	movf	plusw1,w,c
 15376  016ABC  E10F               	bnz	u11951
 15377  016ABE  0EF5               	movlw	-11
 15378  016AC0  50E3               	movf	plusw1,w,c
 15379  016AC2  E10C               	bnz	u11951
 15380  016AC4  0EF6               	movlw	-10
 15381  016AC6  50E3               	movf	plusw1,w,c
 15382  016AC8  E109               	bnz	u11951
 15383  016ACA  0EF7               	movlw	-9
 15384  016ACC  50E3               	movf	plusw1,w,c
 15385  016ACE  E106               	bnz	u11951
 15386  016AD0  0EF8               	movlw	-8
 15387  016AD2  50E3               	movf	plusw1,w,c
 15388  016AD4  E103               	bnz	u11951
 15389  016AD6  0EF9               	movlw	-7
 15390  016AD8  50E3               	movf	plusw1,w,c
 15391  016ADA  A4D8               	btfss	status,2,c
 15392  016ADC                     u11951:
 15393  016ADC  D6E3               	goto	l12698
 15394                           
 15395                           ;stkvar	_p @ sp[(-14)+12]
 15396  016ADE  0EFF               	movlw	-1
 15397  016AE0  BEE3               	btfsc	plusw1,7,c
 15398  016AE2  D007               	goto	u11960
 15399  016AE4  0EFF               	movlw	-1
 15400  016AE6  50E3               	movf	plusw1,w,c
 15401  016AE8  E103               	bnz	u11961
 15402  016AEA  0EFE               	movlw	-2
 15403  016AEC  04E3               	decf	plusw1,w,c
 15404  016AEE  B0D8               	btfsc	status,0,c
 15405  016AF0                     u11961:
 15406  016AF0  D6D9               	goto	l12698
 15407  016AF2                     u11960:
 15408                           
 15409                           ;stkvar	_w @ sp[(-14)+10]
 15410  016AF2  0EFD               	movlw	-3
 15411  016AF4  BEE3               	btfsc	plusw1,7,c
 15412  016AF6  D009               	goto	u11980
 15413  016AF8  0EFD               	movlw	-3
 15414  016AFA  50E3               	movf	plusw1,w,c
 15415  016AFC  E104               	bnz	u11970
 15416  016AFE  0EFC               	movlw	-4
 15417  016B00  04E3               	decf	plusw1,w,c
 15418  016B02  A0D8               	btfss	status,0,c
 15419  016B04  D002               	goto	u11980
 15420  016B06                     u11970:
 15421  016B06  B23E               	btfsc	_flags^0,1,c
 15422  016B08  D6CD               	goto	l12698
 15423  016B0A                     u11980:
 15424                           
 15425                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 15426                           ;stkvar	_w @ sp[(-14)+10]
 15427  016B0A  0EFC               	movlw	-4
 15428  016B0C  006F FF8F FFE6     	movff	plusw1,postinc1
 15429  016B12  006F FF8F FFE6     	movff	plusw1,postinc1
 15430                           
 15431                           ;stkvar	_i @ sp[(-16)+8]
 15432  016B18  0E97               	movlw	low _dbuf
 15433  016B1A  6E0B               	movwf	(btemp+10)^0,c
 15434  016B1C  0E02               	movlw	high _dbuf
 15435  016B1E  6E0C               	movwf	(btemp+11)^0,c
 15436  016B20  0EF8               	movlw	-8
 15437  016B22  50E3               	movf	plusw1,w,c
 15438  016B24  260B               	addwf	(btemp+10)^0,f,c
 15439  016B26  0EF9               	movlw	-7
 15440  016B28  50E3               	movf	plusw1,w,c
 15441  016B2A  220C               	addwfc	(btemp+11)^0,f,c
 15442  016B2C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15443  016B32  0060  F033  FFE6   	movff	btemp+11,postinc1
 15444                           
 15445                           ;stkvar	_fp @ sp[(-18)+-2]
 15446  016B38  0EEC               	movlw	-20
 15447  016B3A  006F FF8F FFE6     	movff	plusw1,postinc1
 15448  016B40  006F FF8F FFE6     	movff	plusw1,postinc1
 15449  016B46  EC44  F0CF         	call	_pad	;wreg free
 15450                           
 15451                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 15452  016B4A  0EE8               	movlw	232
 15453  016B4C  26E1               	addwf	fsr1l,f,c
 15454  016B4E  0EFF               	movlw	255
 15455  016B50  22E2               	addwfc	fsr1h,f,c
 15456  016B52  0012               	return		;funcret
 15457  016B54                     __end_of_utoa:
 15458                           	opt callstack 0
 15459                           
 15460 ;; *************** function ___lomod *****************
 15461 ;; Defined at:
 15462 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 15463 ;; Parameters:    Size  Location     Type
 15464 ;;  dividend        8  [STACK] unsigned long long 
 15465 ;;  divisor         8  [STACK] unsigned long long 
 15466 ;; Auto vars:     Size  Location     Type
 15467 ;;  counter         1  [STACK] unsigned char 
 15468 ;; Return value:  Size  Location     Type
 15469 ;;                  8  [STACK] unsigned long long 
 15470 ;; Registers used:
 15471 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 15472 ;; Tracked objects:
 15473 ;;		On entry : 0/2
 15474 ;;		On exit  : 0/0
 15475 ;;		Unchanged: 0/0
 15476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15481 ;;Total ram usage:        0 bytes
 15482 ;; Hardware stack levels used:    1
 15483 ;; Hardware stack levels required when called:   15
 15484 ;; This function calls:
 15485 ;;		Nothing
 15486 ;; This function is called by:
 15487 ;;		_utoa
 15488 ;; This function uses a reentrant model
 15489 ;;
 15490                           
 15491                           	psect	text58
 15492  01978E                     __ptext58:
 15493                           	opt callstack 0
 15494  01978E                     ___lomod:
 15495                           	opt callstack 0
 15496                           
 15497                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 15498  01978E  52E6               	movf	postinc1,f,c
 15499                           
 15500                           ;stkvar	_divisor @ sp[(-1)+-16]
 15501                           
 15502                           ;incstack = 0
 15503 ;; hardware stack exceeded
 15504  019790  0EEF               	movlw	-17
 15505  019792  50E3               	movf	plusw1,w,c
 15506  019794  E116               	bnz	u7480
 15507  019796  0EF0               	movlw	-16
 15508  019798  50E3               	movf	plusw1,w,c
 15509  01979A  E113               	bnz	u7480
 15510  01979C  0EF1               	movlw	-15
 15511  01979E  50E3               	movf	plusw1,w,c
 15512  0197A0  E110               	bnz	u7480
 15513  0197A2  0EF2               	movlw	-14
 15514  0197A4  50E3               	movf	plusw1,w,c
 15515  0197A6  E10D               	bnz	u7480
 15516  0197A8  0EF3               	movlw	-13
 15517  0197AA  50E3               	movf	plusw1,w,c
 15518  0197AC  E10A               	bnz	u7480
 15519  0197AE  0EF4               	movlw	-12
 15520  0197B0  50E3               	movf	plusw1,w,c
 15521  0197B2  E107               	bnz	u7480
 15522  0197B4  0EF5               	movlw	-11
 15523  0197B6  50E3               	movf	plusw1,w,c
 15524  0197B8  E104               	bnz	u7480
 15525  0197BA  0EF6               	movlw	-10
 15526  0197BC  50E3               	movf	plusw1,w,c
 15527  0197BE  B4D8               	btfsc	status,2,c
 15528  0197C0  D075               	goto	u7510
 15529  0197C2                     u7480:
 15530                           
 15531                           ;stkvar	_counter @ sp[(-1)+0]
 15532  0197C2  0EFF               	movlw	-1
 15533  0197C4  6AE3               	clrf	plusw1,c
 15534  0197C6  D012               	goto	L15
 15535  0197C8                     l8930:
 15536                           
 15537                           ;stkvar	_divisor @ sp[(-1)+-16]
 15538  0197C8  90D8               	bcf	status,0,c
 15539  0197CA  0EEF               	movlw	-17
 15540  0197CC  36E3               	rlcf	plusw1,f,c
 15541  0197CE  0EF0               	movlw	-16
 15542  0197D0  36E3               	rlcf	plusw1,f,c
 15543  0197D2  0EF1               	movlw	-15
 15544  0197D4  36E3               	rlcf	plusw1,f,c
 15545  0197D6  0EF2               	movlw	-14
 15546  0197D8  36E3               	rlcf	plusw1,f,c
 15547  0197DA  0EF3               	movlw	-13
 15548  0197DC  36E3               	rlcf	plusw1,f,c
 15549  0197DE  0EF4               	movlw	-12
 15550  0197E0  36E3               	rlcf	plusw1,f,c
 15551  0197E2  0EF5               	movlw	-11
 15552  0197E4  36E3               	rlcf	plusw1,f,c
 15553  0197E6  0EF6               	movlw	-10
 15554  0197E8  36E3               	rlcf	plusw1,f,c
 15555                           
 15556                           ;stkvar	_counter @ sp[(-1)+0]
 15557  0197EA  0EFF               	movlw	-1
 15558  0197EC                     L15:
 15559  0197EC  2AE3               	incf	plusw1,f,c
 15560                           
 15561                           ;stkvar	_divisor @ sp[(-1)+-16]
 15562  0197EE  0EF6               	movlw	-10
 15563  0197F0  AEE3               	btfss	plusw1,7,c
 15564  0197F2  D7EA               	goto	l8930
 15565  0197F4                     u7490:
 15566                           
 15567                           ;stkvar	_divisor @ sp[(-1)+-16]
 15568                           ;stkvar	_dividend @ sp[(-1)+-8]
 15569  0197F4  50E1               	movf	fsr1l,w,c
 15570  0197F6  0FF7               	addlw	-9
 15571  0197F8  6ED9               	movwf	fsr2l,c
 15572  0197FA  50E2               	movf	fsr1h,w,c
 15573  0197FC  6EDA               	movwf	fsr2h,c
 15574  0197FE  0EFF               	movlw	255
 15575  019800  22DA               	addwfc	fsr2h,f,c
 15576  019802  0EEF               	movlw	-17
 15577  019804  50E3               	movf	plusw1,w,c
 15578  019806  5CDE               	subwf	postinc2,w,c
 15579  019808  0EF0               	movlw	-16
 15580  01980A  50E3               	movf	plusw1,w,c
 15581  01980C  58DE               	subwfb	postinc2,w,c
 15582  01980E  0EF1               	movlw	-15
 15583  019810  50E3               	movf	plusw1,w,c
 15584  019812  58DE               	subwfb	postinc2,w,c
 15585  019814  0EF2               	movlw	-14
 15586  019816  50E3               	movf	plusw1,w,c
 15587  019818  58DE               	subwfb	postinc2,w,c
 15588  01981A  0EF3               	movlw	-13
 15589  01981C  50E3               	movf	plusw1,w,c
 15590  01981E  58DE               	subwfb	postinc2,w,c
 15591  019820  0EF4               	movlw	-12
 15592  019822  50E3               	movf	plusw1,w,c
 15593  019824  58DE               	subwfb	postinc2,w,c
 15594  019826  0EF5               	movlw	-11
 15595  019828  50E3               	movf	plusw1,w,c
 15596  01982A  58DE               	subwfb	postinc2,w,c
 15597  01982C  0EF6               	movlw	-10
 15598  01982E  50E3               	movf	plusw1,w,c
 15599  019830  58DE               	subwfb	postinc2,w,c
 15600  019832  A0D8               	btfss	status,0,c
 15601  019834  D01F               	goto	l8938
 15602                           
 15603                           ;stkvar	_divisor @ sp[(-1)+-16]
 15604                           ;stkvar	_dividend @ sp[(-1)+-8]
 15605  019836  50E1               	movf	fsr1l,w,c
 15606  019838  0FF7               	addlw	-9
 15607  01983A  6ED9               	movwf	fsr2l,c
 15608  01983C  50E2               	movf	fsr1h,w,c
 15609  01983E  6EDA               	movwf	fsr2h,c
 15610  019840  0EFF               	movlw	255
 15611  019842  22DA               	addwfc	fsr2h,f,c
 15612  019844  0EEF               	movlw	-17
 15613  019846  50E3               	movf	plusw1,w,c
 15614  019848  5EDE               	subwf	postinc2,f,c
 15615  01984A  0EF0               	movlw	-16
 15616  01984C  50E3               	movf	plusw1,w,c
 15617  01984E  5ADE               	subwfb	postinc2,f,c
 15618  019850  0EF1               	movlw	-15
 15619  019852  50E3               	movf	plusw1,w,c
 15620  019854  5ADE               	subwfb	postinc2,f,c
 15621  019856  0EF2               	movlw	-14
 15622  019858  50E3               	movf	plusw1,w,c
 15623  01985A  5ADE               	subwfb	postinc2,f,c
 15624  01985C  0EF3               	movlw	-13
 15625  01985E  50E3               	movf	plusw1,w,c
 15626  019860  5ADE               	subwfb	postinc2,f,c
 15627  019862  0EF4               	movlw	-12
 15628  019864  50E3               	movf	plusw1,w,c
 15629  019866  5ADE               	subwfb	postinc2,f,c
 15630  019868  0EF5               	movlw	-11
 15631  01986A  50E3               	movf	plusw1,w,c
 15632  01986C  5ADE               	subwfb	postinc2,f,c
 15633  01986E  0EF6               	movlw	-10
 15634  019870  50E3               	movf	plusw1,w,c
 15635  019872  5ADE               	subwfb	postinc2,f,c
 15636  019874                     l8938:
 15637                           
 15638                           ;stkvar	_divisor @ sp[(-1)+-16]
 15639  019874  90D8               	bcf	status,0,c
 15640  019876  0EF6               	movlw	-10
 15641  019878  32E3               	rrcf	plusw1,f,c
 15642  01987A  0EF5               	movlw	-11
 15643  01987C  32E3               	rrcf	plusw1,f,c
 15644  01987E  0EF4               	movlw	-12
 15645  019880  32E3               	rrcf	plusw1,f,c
 15646  019882  0EF3               	movlw	-13
 15647  019884  32E3               	rrcf	plusw1,f,c
 15648  019886  0EF2               	movlw	-14
 15649  019888  32E3               	rrcf	plusw1,f,c
 15650  01988A  0EF1               	movlw	-15
 15651  01988C  32E3               	rrcf	plusw1,f,c
 15652  01988E  0EF0               	movlw	-16
 15653  019890  32E3               	rrcf	plusw1,f,c
 15654  019892  0EEF               	movlw	-17
 15655  019894  32E3               	rrcf	plusw1,f,c
 15656                           
 15657                           ;stkvar	_counter @ sp[(-1)+0]
 15658  019896  0EFF               	movlw	-1
 15659  019898  50E3               	movf	plusw1,w,c
 15660  01989A  6E01               	movwf	btemp^0,c
 15661  01989C  0E01               	movlw	1
 15662  01989E  5E01               	subwf	btemp^0,f,c
 15663  0198A0  0EFF               	movlw	-1
 15664  0198A2  0060  F007  FFE3   	movff	btemp,plusw1
 15665  0198A8  A4D8               	btfss	status,2,c
 15666  0198AA  D7A4               	goto	u7490
 15667  0198AC                     u7510:
 15668                           
 15669                           ;stkvar	_dividend @ sp[(-1)+-8]
 15670  0198AC  0EF7               	movlw	247
 15671  0198AE  24E1               	addwf	fsr1l,w,c
 15672  0198B0  6ED9               	movwf	fsr2l,c
 15673  0198B2  0EFF               	movlw	255
 15674  0198B4  20E2               	addwfc	fsr1h,w,c
 15675  0198B6  6EDA               	movwf	fsr2h,c
 15676                           
 15677                           ;stkvar	?___lomod @ sp[(-1)+-8]
 15678  0198B8  0E08               	movlw	8
 15679  0198BA  6E01               	movwf	btemp^0,c
 15680  0198BC  0EF7               	movlw	-9
 15681  0198BE                     us752999:
 15682  0198BE  006F FF7B FFE3     	movff	postinc2,plusw1
 15683  0198C4  28E8               	incf	wreg,w,c
 15684  0198C6  2E01               	decfsz	btemp^0,f,c
 15685  0198C8  D7FA               	bra	us752999
 15686                           
 15687                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 15688  0198CA  52E5               	movf	postdec1,f,c
 15689  0198CC  0012               	return		;funcret
 15690  0198CE                     __end_of___lomod:
 15691                           	opt callstack 0
 15692                           
 15693 ;; *************** function ___lodiv *****************
 15694 ;; Defined at:
 15695 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 15696 ;; Parameters:    Size  Location     Type
 15697 ;;  dividend        8  [STACK] unsigned long long 
 15698 ;;  divisor         8  [STACK] unsigned long long 
 15699 ;; Auto vars:     Size  Location     Type
 15700 ;;  quotient        8  [STACK] unsigned long long 
 15701 ;;  counter         1  [STACK] unsigned char 
 15702 ;; Return value:  Size  Location     Type
 15703 ;;                  8  [STACK] unsigned long long 
 15704 ;; Registers used:
 15705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 15706 ;; Tracked objects:
 15707 ;;		On entry : 0/2
 15708 ;;		On exit  : 0/0
 15709 ;;		Unchanged: 0/0
 15710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15715 ;;Total ram usage:        0 bytes
 15716 ;; Hardware stack levels used:    1
 15717 ;; Hardware stack levels required when called:   15
 15718 ;; This function calls:
 15719 ;;		Nothing
 15720 ;; This function is called by:
 15721 ;;		_utoa
 15722 ;; This function uses a reentrant model
 15723 ;;
 15724                           
 15725                           	psect	text59
 15726  018F46                     __ptext59:
 15727                           	opt callstack 0
 15728  018F46                     ___lodiv:
 15729                           	opt callstack 0
 15730                           
 15731                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 15732  018F46  0E09               	movlw	9
 15733  018F48  26E1               	addwf	fsr1l,f,c
 15734  018F4A  0E00               	movlw	0
 15735  018F4C  22E2               	addwfc	fsr1h,f,c
 15736                           
 15737                           ;stkvar	_quotient @ sp[(-9)+0]
 15738                           
 15739                           ;incstack = 0
 15740 ;; hardware stack exceeded
 15741  018F4E  0E07               	movlw	7
 15742  018F50  6E01               	movwf	btemp^0,c
 15743  018F52  0EF7               	movlw	-9
 15744  018F54                     u7421:
 15745  018F54  6AE3               	clrf	plusw1,c
 15746  018F56  2AE8               	incf	wreg,f,c
 15747  018F58  0601               	decf	btemp^0,f,c
 15748  018F5A  E2FC               	bc	u7421
 15749                           
 15750                           ;stkvar	_divisor @ sp[(-9)+-16]
 15751  018F5C  0EE7               	movlw	-25
 15752  018F5E  50E3               	movf	plusw1,w,c
 15753  018F60  E116               	bnz	u7430
 15754  018F62  0EE8               	movlw	-24
 15755  018F64  50E3               	movf	plusw1,w,c
 15756  018F66  E113               	bnz	u7430
 15757  018F68  0EE9               	movlw	-23
 15758  018F6A  50E3               	movf	plusw1,w,c
 15759  018F6C  E110               	bnz	u7430
 15760  018F6E  0EEA               	movlw	-22
 15761  018F70  50E3               	movf	plusw1,w,c
 15762  018F72  E10D               	bnz	u7430
 15763  018F74  0EEB               	movlw	-21
 15764  018F76  50E3               	movf	plusw1,w,c
 15765  018F78  E10A               	bnz	u7430
 15766  018F7A  0EEC               	movlw	-20
 15767  018F7C  50E3               	movf	plusw1,w,c
 15768  018F7E  E107               	bnz	u7430
 15769  018F80  0EED               	movlw	-19
 15770  018F82  50E3               	movf	plusw1,w,c
 15771  018F84  E104               	bnz	u7430
 15772  018F86  0EEE               	movlw	-18
 15773  018F88  50E3               	movf	plusw1,w,c
 15774  018F8A  B4D8               	btfsc	status,2,c
 15775  018F8C  D088               	goto	u7460
 15776  018F8E                     u7430:
 15777                           
 15778                           ;stkvar	_counter @ sp[(-9)+8]
 15779  018F8E  0EFF               	movlw	-1
 15780  018F90  6AE3               	clrf	plusw1,c
 15781  018F92  D012               	goto	L16
 15782  018F94                     l8906:
 15783                           
 15784                           ;stkvar	_divisor @ sp[(-9)+-16]
 15785  018F94  90D8               	bcf	status,0,c
 15786  018F96  0EE7               	movlw	-25
 15787  018F98  36E3               	rlcf	plusw1,f,c
 15788  018F9A  0EE8               	movlw	-24
 15789  018F9C  36E3               	rlcf	plusw1,f,c
 15790  018F9E  0EE9               	movlw	-23
 15791  018FA0  36E3               	rlcf	plusw1,f,c
 15792  018FA2  0EEA               	movlw	-22
 15793  018FA4  36E3               	rlcf	plusw1,f,c
 15794  018FA6  0EEB               	movlw	-21
 15795  018FA8  36E3               	rlcf	plusw1,f,c
 15796  018FAA  0EEC               	movlw	-20
 15797  018FAC  36E3               	rlcf	plusw1,f,c
 15798  018FAE  0EED               	movlw	-19
 15799  018FB0  36E3               	rlcf	plusw1,f,c
 15800  018FB2  0EEE               	movlw	-18
 15801  018FB4  36E3               	rlcf	plusw1,f,c
 15802                           
 15803                           ;stkvar	_counter @ sp[(-9)+8]
 15804  018FB6  0EFF               	movlw	-1
 15805  018FB8                     L16:
 15806  018FB8  2AE3               	incf	plusw1,f,c
 15807                           
 15808                           ;stkvar	_divisor @ sp[(-9)+-16]
 15809  018FBA  0EEE               	movlw	-18
 15810  018FBC  AEE3               	btfss	plusw1,7,c
 15811  018FBE  D7EA               	goto	l8906
 15812  018FC0                     u7440:
 15813                           
 15814                           ;stkvar	_quotient @ sp[(-9)+0]
 15815  018FC0  90D8               	bcf	status,0,c
 15816  018FC2  0EF7               	movlw	-9
 15817  018FC4  36E3               	rlcf	plusw1,f,c
 15818  018FC6  0EF8               	movlw	-8
 15819  018FC8  36E3               	rlcf	plusw1,f,c
 15820  018FCA  0EF9               	movlw	-7
 15821  018FCC  36E3               	rlcf	plusw1,f,c
 15822  018FCE  0EFA               	movlw	-6
 15823  018FD0  36E3               	rlcf	plusw1,f,c
 15824  018FD2  0EFB               	movlw	-5
 15825  018FD4  36E3               	rlcf	plusw1,f,c
 15826  018FD6  0EFC               	movlw	-4
 15827  018FD8  36E3               	rlcf	plusw1,f,c
 15828  018FDA  0EFD               	movlw	-3
 15829  018FDC  36E3               	rlcf	plusw1,f,c
 15830  018FDE  0EFE               	movlw	-2
 15831  018FE0  36E3               	rlcf	plusw1,f,c
 15832                           
 15833                           ;stkvar	_divisor @ sp[(-9)+-16]
 15834                           ;stkvar	_dividend @ sp[(-9)+-8]
 15835  018FE2  50E1               	movf	fsr1l,w,c
 15836  018FE4  0FEF               	addlw	-17
 15837  018FE6  6ED9               	movwf	fsr2l,c
 15838  018FE8  50E2               	movf	fsr1h,w,c
 15839  018FEA  6EDA               	movwf	fsr2h,c
 15840  018FEC  0EFF               	movlw	255
 15841  018FEE  22DA               	addwfc	fsr2h,f,c
 15842  018FF0  0EE7               	movlw	-25
 15843  018FF2  50E3               	movf	plusw1,w,c
 15844  018FF4  5CDE               	subwf	postinc2,w,c
 15845  018FF6  0EE8               	movlw	-24
 15846  018FF8  50E3               	movf	plusw1,w,c
 15847  018FFA  58DE               	subwfb	postinc2,w,c
 15848  018FFC  0EE9               	movlw	-23
 15849  018FFE  50E3               	movf	plusw1,w,c
 15850  019000  58DE               	subwfb	postinc2,w,c
 15851  019002  0EEA               	movlw	-22
 15852  019004  50E3               	movf	plusw1,w,c
 15853  019006  58DE               	subwfb	postinc2,w,c
 15854  019008  0EEB               	movlw	-21
 15855  01900A  50E3               	movf	plusw1,w,c
 15856  01900C  58DE               	subwfb	postinc2,w,c
 15857  01900E  0EEC               	movlw	-20
 15858  019010  50E3               	movf	plusw1,w,c
 15859  019012  58DE               	subwfb	postinc2,w,c
 15860  019014  0EED               	movlw	-19
 15861  019016  50E3               	movf	plusw1,w,c
 15862  019018  58DE               	subwfb	postinc2,w,c
 15863  01901A  0EEE               	movlw	-18
 15864  01901C  50E3               	movf	plusw1,w,c
 15865  01901E  58DE               	subwfb	postinc2,w,c
 15866  019020  A0D8               	btfss	status,0,c
 15867  019022  D021               	goto	l8918
 15868                           
 15869                           ;stkvar	_divisor @ sp[(-9)+-16]
 15870                           ;stkvar	_dividend @ sp[(-9)+-8]
 15871  019024  50E1               	movf	fsr1l,w,c
 15872  019026  0FEF               	addlw	-17
 15873  019028  6ED9               	movwf	fsr2l,c
 15874  01902A  50E2               	movf	fsr1h,w,c
 15875  01902C  6EDA               	movwf	fsr2h,c
 15876  01902E  0EFF               	movlw	255
 15877  019030  22DA               	addwfc	fsr2h,f,c
 15878  019032  0EE7               	movlw	-25
 15879  019034  50E3               	movf	plusw1,w,c
 15880  019036  5EDE               	subwf	postinc2,f,c
 15881  019038  0EE8               	movlw	-24
 15882  01903A  50E3               	movf	plusw1,w,c
 15883  01903C  5ADE               	subwfb	postinc2,f,c
 15884  01903E  0EE9               	movlw	-23
 15885  019040  50E3               	movf	plusw1,w,c
 15886  019042  5ADE               	subwfb	postinc2,f,c
 15887  019044  0EEA               	movlw	-22
 15888  019046  50E3               	movf	plusw1,w,c
 15889  019048  5ADE               	subwfb	postinc2,f,c
 15890  01904A  0EEB               	movlw	-21
 15891  01904C  50E3               	movf	plusw1,w,c
 15892  01904E  5ADE               	subwfb	postinc2,f,c
 15893  019050  0EEC               	movlw	-20
 15894  019052  50E3               	movf	plusw1,w,c
 15895  019054  5ADE               	subwfb	postinc2,f,c
 15896  019056  0EED               	movlw	-19
 15897  019058  50E3               	movf	plusw1,w,c
 15898  01905A  5ADE               	subwfb	postinc2,f,c
 15899  01905C  0EEE               	movlw	-18
 15900  01905E  50E3               	movf	plusw1,w,c
 15901  019060  5ADE               	subwfb	postinc2,f,c
 15902                           
 15903                           ;stkvar	_quotient @ sp[(-9)+0]
 15904  019062  0EF7               	movlw	-9
 15905  019064  80E3               	bsf	plusw1,0,c
 15906  019066                     l8918:
 15907                           
 15908                           ;stkvar	_divisor @ sp[(-9)+-16]
 15909  019066  90D8               	bcf	status,0,c
 15910  019068  0EEE               	movlw	-18
 15911  01906A  32E3               	rrcf	plusw1,f,c
 15912  01906C  0EED               	movlw	-19
 15913  01906E  32E3               	rrcf	plusw1,f,c
 15914  019070  0EEC               	movlw	-20
 15915  019072  32E3               	rrcf	plusw1,f,c
 15916  019074  0EEB               	movlw	-21
 15917  019076  32E3               	rrcf	plusw1,f,c
 15918  019078  0EEA               	movlw	-22
 15919  01907A  32E3               	rrcf	plusw1,f,c
 15920  01907C  0EE9               	movlw	-23
 15921  01907E  32E3               	rrcf	plusw1,f,c
 15922  019080  0EE8               	movlw	-24
 15923  019082  32E3               	rrcf	plusw1,f,c
 15924  019084  0EE7               	movlw	-25
 15925  019086  32E3               	rrcf	plusw1,f,c
 15926                           
 15927                           ;stkvar	_counter @ sp[(-9)+8]
 15928  019088  0EFF               	movlw	-1
 15929  01908A  50E3               	movf	plusw1,w,c
 15930  01908C  6E01               	movwf	btemp^0,c
 15931  01908E  0E01               	movlw	1
 15932  019090  5E01               	subwf	btemp^0,f,c
 15933  019092  0EFF               	movlw	-1
 15934  019094  0060  F007  FFE3   	movff	btemp,plusw1
 15935  01909A  A4D8               	btfss	status,2,c
 15936  01909C  D791               	goto	u7440
 15937  01909E                     u7460:
 15938                           
 15939                           ;stkvar	_quotient @ sp[(-9)+0]
 15940  01909E  0EF7               	movlw	247
 15941  0190A0  24E1               	addwf	fsr1l,w,c
 15942  0190A2  6ED9               	movwf	fsr2l,c
 15943  0190A4  0EFF               	movlw	255
 15944  0190A6  20E2               	addwfc	fsr1h,w,c
 15945  0190A8  6EDA               	movwf	fsr2h,c
 15946                           
 15947                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 15948  0190AA  0E08               	movlw	8
 15949  0190AC  6E01               	movwf	btemp^0,c
 15950  0190AE  0EEF               	movlw	-17
 15951  0190B0                     us747999:
 15952  0190B0  006F FF7B FFE3     	movff	postinc2,plusw1
 15953  0190B6  28E8               	incf	wreg,w,c
 15954  0190B8  2E01               	decfsz	btemp^0,f,c
 15955  0190BA  D7FA               	bra	us747999
 15956                           
 15957                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 15958  0190BC  0EF7               	movlw	247
 15959  0190BE  26E1               	addwf	fsr1l,f,c
 15960  0190C0  0EFF               	movlw	255
 15961  0190C2  22E2               	addwfc	fsr1h,f,c
 15962  0190C4  0012               	return		;funcret
 15963  0190C6                     __end_of___lodiv:
 15964                           	opt callstack 0
 15965                           
 15966 ;; *************** function _strncmp *****************
 15967 ;; Defined at:
 15968 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 15969 ;; Parameters:    Size  Location     Type
 15970 ;;  _l              2  [STACK] PTR const unsigned char 
 15971 ;;		 -> ct(3), STR_64(127), STR_62(3), STR_61(3), 
 15972 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 15973 ;;		 -> STR_56(19), STR_55(19), STR_54(24), STR_53(15), 
 15974 ;;		 -> STR_52(15), STR_51(15), STR_50(10), STR_49(10), 
 15975 ;;		 -> STR_48(19), STR_47(19), STR_44(3), STR_43(3), 
 15976 ;;		 -> STR_42(22), STR_41(22), STR_40(22), STR_39(23), 
 15977 ;;		 -> STR_38(23), STR_37(23), STR_36(29), STR_35(23), 
 15978 ;;		 -> STR_34(23), STR_33(22), STR_32(22), STR_31(22), 
 15979 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 15980 ;;		 -> STR_26(22), STR_25(22), STR_24(22), STR_23(22), 
 15981 ;;		 -> STR_22(22), STR_21(17), STR_20(16), STR_19(16), 
 15982 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 15983 ;;		 -> STR_14(21), STR_13(21), STR_12(21), STR_11(22), 
 15984 ;;		 -> STR_10(22), STR_9(26), STR_8(21), STR_7(21), 
 15985 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 15986 ;;		 -> STR_1(21), 
 15987 ;;  _r              2  [STACK] PTR const unsigned char 
 15988 ;;		 -> STR_98(3), STR_94(3), STR_89(3), STR_84(3), 
 15989 ;;		 -> STR_79(3), STR_75(3), 
 15990 ;;  n               2  [STACK] unsigned int 
 15991 ;; Auto vars:     Size  Location     Type
 15992 ;;  r               2  [STACK] PTR const unsigned char 
 15993 ;;		 -> STR_98(3), STR_94(3), STR_89(3), STR_84(3), 
 15994 ;;		 -> STR_79(3), STR_75(3), 
 15995 ;;  l               2  [STACK] PTR const unsigned char 
 15996 ;;		 -> ct(3), STR_64(127), STR_62(3), STR_61(3), 
 15997 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 15998 ;;		 -> STR_56(19), STR_55(19), STR_54(24), STR_53(15), 
 15999 ;;		 -> STR_52(15), STR_51(15), STR_50(10), STR_49(10), 
 16000 ;;		 -> STR_48(19), STR_47(19), STR_44(3), STR_43(3), 
 16001 ;;		 -> STR_42(22), STR_41(22), STR_40(22), STR_39(23), 
 16002 ;;		 -> STR_38(23), STR_37(23), STR_36(29), STR_35(23), 
 16003 ;;		 -> STR_34(23), STR_33(22), STR_32(22), STR_31(22), 
 16004 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 16005 ;;		 -> STR_26(22), STR_25(22), STR_24(22), STR_23(22), 
 16006 ;;		 -> STR_22(22), STR_21(17), STR_20(16), STR_19(16), 
 16007 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 16008 ;;		 -> STR_14(21), STR_13(21), STR_12(21), STR_11(22), 
 16009 ;;		 -> STR_10(22), STR_9(26), STR_8(21), STR_7(21), 
 16010 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 16011 ;;		 -> STR_1(21), 
 16012 ;; Return value:  Size  Location     Type
 16013 ;;                  2  [STACK] int 
 16014 ;; Registers used:
 16015 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 16016 ;; Tracked objects:
 16017 ;;		On entry : 0/0
 16018 ;;		On exit  : 0/0
 16019 ;;		Unchanged: 0/0
 16020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16025 ;;Total ram usage:        0 bytes
 16026 ;; Hardware stack levels used:    1
 16027 ;; Hardware stack levels required when called:   15
 16028 ;; This function calls:
 16029 ;;		Nothing
 16030 ;; This function is called by:
 16031 ;;		_vfpfcnvrt
 16032 ;; This function uses a reentrant model
 16033 ;;
 16034                           
 16035                           	psect	text60
 16036  01807C                     __ptext60:
 16037                           	opt callstack 0
 16038  01807C                     _strncmp:
 16039                           	opt callstack 0
 16040                           
 16041                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16042  01807C  52E6               	movf	postinc1,f,c
 16043  01807E  52E6               	movf	postinc1,f,c
 16044  018080  52E6               	movf	postinc1,f,c
 16045  018082  52E6               	movf	postinc1,f,c
 16046                           
 16047                           ;stkvar	__l @ sp[(-4)+-2]
 16048                           
 16049                           ;incstack = 0
 16050 ;; hardware stack exceeded
 16051  018084  0EFA               	movlw	-6
 16052  018086  006F FF8C  F00B    	movff	plusw1,btemp+10
 16053  01808C  0EFB               	movlw	-5
 16054  01808E  006F FF8C  F00C    	movff	plusw1,btemp+11
 16055                           
 16056                           ;stkvar	_l @ sp[(-4)+2]
 16057  018094  0EFF               	movlw	-1
 16058  018096  0060  F033  FFE3   	movff	btemp+11,plusw1
 16059  01809C  0EFE               	movlw	-2
 16060  01809E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16061                           
 16062                           ;stkvar	__r @ sp[(-4)+-4]
 16063  0180A4  0EF8               	movlw	-8
 16064  0180A6  006F FF8C  F00B    	movff	plusw1,btemp+10
 16065  0180AC  0EF9               	movlw	-7
 16066  0180AE  006F FF8C  F00C    	movff	plusw1,btemp+11
 16067                           
 16068                           ;stkvar	_r @ sp[(-4)+0]
 16069  0180B4  0EFD               	movlw	-3
 16070  0180B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 16071  0180BC  0EFC               	movlw	-4
 16072  0180BE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16073                           
 16074                           ;stkvar	_n @ sp[(-4)+-6]
 16075  0180C4  0EF6               	movlw	-10
 16076  0180C6  006F FF8C  F001    	movff	plusw1,btemp
 16077  0180CC  0E01               	movlw	1
 16078  0180CE  5E01               	subwf	btemp^0,f,c
 16079  0180D0  0EF6               	movlw	-10
 16080  0180D2  0060  F007  FFE3   	movff	btemp,plusw1
 16081  0180D8  0EF7               	movlw	-9
 16082  0180DA  006F FF8C  F001    	movff	plusw1,btemp
 16083  0180E0  0E00               	movlw	0
 16084  0180E2  5A01               	subwfb	btemp^0,f,c
 16085  0180E4  0EF7               	movlw	-9
 16086  0180E6  0060  F007  FFE3   	movff	btemp,plusw1
 16087  0180EC  0EF6               	movlw	-10
 16088  0180EE  28E3               	incf	plusw1,w,c
 16089  0180F0  E13F               	bnz	l9588
 16090  0180F2  0EF7               	movlw	-9
 16091  0180F4  28E3               	incf	plusw1,w,c
 16092  0180F6  A4D8               	btfss	status,2,c
 16093  0180F8  D03B               	goto	l9588
 16094  0180FA  0E00               	movlw	0
 16095  0180FC  6E01               	movwf	btemp^0,c
 16096  0180FE  0E00               	movlw	0
 16097  018100  6E02               	movwf	(btemp+1)^0,c
 16098  018102  D0C7               	goto	l3559
 16099  018104                     l9586:
 16100                           
 16101                           ;stkvar	_l @ sp[(-4)+2]
 16102  018104  0EFE               	movlw	-2
 16103  018106  50E3               	movf	plusw1,w,c
 16104  018108  0F01               	addlw	1
 16105  01810A  6E01               	movwf	btemp^0,c
 16106  01810C  0EFE               	movlw	-2
 16107  01810E  0060  F007  FFE3   	movff	btemp,plusw1
 16108  018114  6A01               	clrf	btemp^0,c
 16109  018116  0EFF               	movlw	-1
 16110  018118  50E3               	movf	plusw1,w,c
 16111  01811A  2001               	addwfc	btemp^0,w,c
 16112  01811C  6E01               	movwf	btemp^0,c
 16113  01811E  0EFF               	movlw	-1
 16114  018120  0060  F007  FFE3   	movff	btemp,plusw1
 16115                           
 16116                           ;stkvar	_r @ sp[(-4)+0]
 16117  018126  0EFC               	movlw	-4
 16118  018128  50E3               	movf	plusw1,w,c
 16119  01812A  0F01               	addlw	1
 16120  01812C  6E01               	movwf	btemp^0,c
 16121  01812E  0EFC               	movlw	-4
 16122  018130  0060  F007  FFE3   	movff	btemp,plusw1
 16123  018136  6A01               	clrf	btemp^0,c
 16124  018138  0EFD               	movlw	-3
 16125  01813A  50E3               	movf	plusw1,w,c
 16126  01813C  2001               	addwfc	btemp^0,w,c
 16127  01813E  6E01               	movwf	btemp^0,c
 16128  018140  0EFD               	movlw	-3
 16129  018142  0060  F007  FFE3   	movff	btemp,plusw1
 16130                           
 16131                           ;stkvar	_n @ sp[(-4)+-6]
 16132  018148  0EF6               	movlw	-10
 16133  01814A  006F FF8C  F001    	movff	plusw1,btemp
 16134  018150  0E01               	movlw	1
 16135  018152  5E01               	subwf	btemp^0,f,c
 16136  018154  0EF6               	movlw	-10
 16137  018156  0060  F007  FFE3   	movff	btemp,plusw1
 16138  01815C  0EF7               	movlw	-9
 16139  01815E  006F FF8C  F001    	movff	plusw1,btemp
 16140  018164  0E00               	movlw	0
 16141  018166  5A01               	subwfb	btemp^0,f,c
 16142  018168  0EF7               	movlw	-9
 16143  01816A  0060  F007  FFE3   	movff	btemp,plusw1
 16144  018170                     l9588:
 16145                           
 16146                           ;stkvar	_l @ sp[(-4)+2]
 16147  018170  0EFE               	movlw	-2
 16148  018172  006F FF8F FFF6     	movff	plusw1,tblptrl
 16149  018178  0EFF               	movlw	-1
 16150  01817A  006F FF8F FFF7     	movff	plusw1,tblptrh
 16151  018180  0E00               	movlw	low (__mediumconst shr (0+16))
 16152  018182  6EF8               	movwf	tblptru,c
 16153  018184  0E1F               	movlw	(high __ramtop+-1)
 16154  018186  64F7               	cpfsgt	tblptrh,c
 16155  018188  D003               	bra	u8717
 16156  01818A  0008               	tblrd		*
 16157  01818C  50F5               	movf	tablat,w,c
 16158  01818E  D007               	bra	u8710
 16159  018190                     u8717:
 16160  018190  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16161  018196  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16162  01819C  50EF               	movf	indf0,w,c
 16163  01819E                     u8710:
 16164  01819E  0900               	iorlw	0
 16165  0181A0  B4D8               	btfsc	status,2,c
 16166  0181A2  D04A               	goto	u8750
 16167                           
 16168                           ;stkvar	_r @ sp[(-4)+0]
 16169  0181A4  50E1               	movf	fsr1l,w,c
 16170  0181A6  0FFC               	addlw	-4
 16171  0181A8  6ED9               	movwf	fsr2l,c
 16172  0181AA  50E2               	movf	fsr1h,w,c
 16173  0181AC  6EDA               	movwf	fsr2h,c
 16174  0181AE  0EFF               	movlw	255
 16175  0181B0  22DA               	addwfc	fsr2h,f,c
 16176  0181B2  006F FF7B FFF6     	movff	postinc2,tblptrl
 16177  0181B8  006F FF77 FFF7     	movff	postdec2,tblptrh
 16178  0181BE                     	if	0	;tblptru may be non-zero
 16179  0181BE                     	endif
 16180  0181BE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16181  0181BE  0E00               	movlw	low (__mediumconst shr (0+16))
 16182  0181C0  6EF8               	movwf	tblptru,c
 16183  0181C2                     	endif
 16184  0181C2  0008               	tblrd		*
 16185  0181C4  50F5               	movf	tablat,w,c
 16186  0181C6  0900               	iorlw	0
 16187  0181C8  B4D8               	btfsc	status,2,c
 16188  0181CA  D036               	goto	u8750
 16189                           
 16190                           ;stkvar	_n @ sp[(-4)+-6]
 16191  0181CC  0EF6               	movlw	-10
 16192  0181CE  006F FF8C  F001    	movff	plusw1,btemp
 16193  0181D4  0EF7               	movlw	-9
 16194  0181D6  50E3               	movf	plusw1,w,c
 16195  0181D8  1001               	iorwf	btemp^0,w,c
 16196  0181DA  B4D8               	btfsc	status,2,c
 16197  0181DC  D02D               	goto	u8750
 16198                           
 16199                           ;stkvar	_r @ sp[(-4)+0]
 16200  0181DE  50E1               	movf	fsr1l,w,c
 16201  0181E0  0FFC               	addlw	-4
 16202  0181E2  6ED9               	movwf	fsr2l,c
 16203  0181E4  50E2               	movf	fsr1h,w,c
 16204  0181E6  6EDA               	movwf	fsr2h,c
 16205  0181E8  0EFF               	movlw	255
 16206  0181EA  22DA               	addwfc	fsr2h,f,c
 16207  0181EC  006F FF7B FFF6     	movff	postinc2,tblptrl
 16208  0181F2  006F FF77 FFF7     	movff	postdec2,tblptrh
 16209  0181F8                     	if	0	;tblptru may be non-zero
 16210  0181F8                     	endif
 16211  0181F8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16212  0181F8  0E00               	movlw	low (__mediumconst shr (0+16))
 16213  0181FA  6EF8               	movwf	tblptru,c
 16214  0181FC                     	endif
 16215  0181FC  0008               	tblrd		*
 16216  0181FE  006F FFD4  F00C    	movff	tablat,btemp+11
 16217                           
 16218                           ;stkvar	_l @ sp[(-4)+2]
 16219  018204  0EFE               	movlw	-2
 16220  018206  006F FF8F FFF6     	movff	plusw1,tblptrl
 16221  01820C  0EFF               	movlw	-1
 16222  01820E  006F FF8F FFF7     	movff	plusw1,tblptrh
 16223  018214  0E00               	movlw	low (__mediumconst shr (0+16))
 16224  018216  6EF8               	movwf	tblptru,c
 16225  018218  0E1F               	movlw	(high __ramtop+-1)
 16226  01821A  64F7               	cpfsgt	tblptrh,c
 16227  01821C  D003               	bra	u8757
 16228  01821E  0008               	tblrd		*
 16229  018220  50F5               	movf	tablat,w,c
 16230  018222  D007               	bra	u8755
 16231  018224                     u8757:
 16232  018224  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16233  01822A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16234  018230  50EF               	movf	indf0,w,c
 16235  018232                     u8755:
 16236  018232  180C               	xorwf	(btemp+11)^0,w,c
 16237  018234  B4D8               	btfsc	status,2,c
 16238  018236  D766               	goto	l9586
 16239  018238                     u8750:
 16240                           
 16241                           ;stkvar	_l @ sp[(-4)+2]
 16242  018238  0EFE               	movlw	-2
 16243  01823A  006F FF8F FFF6     	movff	plusw1,tblptrl
 16244  018240  0EFF               	movlw	-1
 16245  018242  006F FF8F FFF7     	movff	plusw1,tblptrh
 16246  018248  0E00               	movlw	low (__mediumconst shr (0+16))
 16247  01824A  6EF8               	movwf	tblptru,c
 16248  01824C  0E1F               	movlw	(high __ramtop+-1)
 16249  01824E  64F7               	cpfsgt	tblptrh,c
 16250  018250  D003               	bra	u8767
 16251  018252  0008               	tblrd		*
 16252  018254  50F5               	movf	tablat,w,c
 16253  018256  D007               	bra	u8760
 16254  018258                     u8767:
 16255  018258  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16256  01825E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16257  018264  50EF               	movf	indf0,w,c
 16258  018266                     u8760:
 16259  018266  6E01               	movwf	btemp^0,c
 16260  018268  6A02               	clrf	(btemp+1)^0,c
 16261                           
 16262                           ;stkvar	_r @ sp[(-4)+0]
 16263  01826A  50E1               	movf	fsr1l,w,c
 16264  01826C  0FFC               	addlw	-4
 16265  01826E  6ED9               	movwf	fsr2l,c
 16266  018270  50E2               	movf	fsr1h,w,c
 16267  018272  6EDA               	movwf	fsr2h,c
 16268  018274  0EFF               	movlw	255
 16269  018276  22DA               	addwfc	fsr2h,f,c
 16270  018278  006F FF7B FFF6     	movff	postinc2,tblptrl
 16271  01827E  006F FF77 FFF7     	movff	postdec2,tblptrh
 16272  018284                     	if	0	;tblptru may be non-zero
 16273  018284                     	endif
 16274  018284                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16275  018284  0E00               	movlw	low (__mediumconst shr (0+16))
 16276  018286  6EF8               	movwf	tblptru,c
 16277  018288                     	endif
 16278  018288  0008               	tblrd		*
 16279  01828A  50F5               	movf	tablat,w,c
 16280  01828C  5E01               	subwf	btemp^0,f,c
 16281  01828E  0E00               	movlw	0
 16282  018290  5A02               	subwfb	(btemp+1)^0,f,c
 16283  018292                     l3559:
 16284                           
 16285                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 16286  018292  0EF6               	movlw	246
 16287  018294  26E1               	addwf	fsr1l,f,c
 16288  018296  0EFF               	movlw	255
 16289  018298  22E2               	addwfc	fsr1h,f,c
 16290  01829A  0012               	return		;funcret
 16291  01829C                     __end_of_strncmp:
 16292                           	opt callstack 0
 16293                           
 16294 ;; *************** function _stoa *****************
 16295 ;; Defined at:
 16296 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16297 ;; Parameters:    Size  Location     Type
 16298 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16299 ;;		 -> f(6), NULL(0), 
 16300 ;;  s               2  [STACK] PTR unsigned char 
 16301 ;;		 -> ?_printf(2), ?_sprintf(2), STR_46(9), STR_45(12), 
 16302 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 16303 ;;		 -> V(191), 
 16304 ;; Auto vars:     Size  Location     Type
 16305 ;;  nuls            7  [STACK] unsigned char [7]
 16306 ;;  l               2  [STACK] int 
 16307 ;;  p               2  [STACK] int 
 16308 ;;  cp              2  [STACK] PTR unsigned char 
 16309 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_46(9), 
 16310 ;;		 -> STR_45(12), D.lcd(480), D(482), T(144), 
 16311 ;;		 -> STR_3(5), V(191), 
 16312 ;;  w               2  [STACK] int 
 16313 ;;  i               2  [STACK] int 
 16314 ;; Return value:  Size  Location     Type
 16315 ;;                  2  [STACK] int 
 16316 ;; Registers used:
 16317 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 16318 ;; Tracked objects:
 16319 ;;		On entry : 0/0
 16320 ;;		On exit  : 0/0
 16321 ;;		Unchanged: 0/0
 16322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16327 ;;Total ram usage:        0 bytes
 16328 ;; Hardware stack levels used:    1
 16329 ;; Hardware stack levels required when called:   18
 16330 ;; This function calls:
 16331 ;;		_fputc
 16332 ;;		_strlen
 16333 ;; This function is called by:
 16334 ;;		_vfpfcnvrt
 16335 ;; This function uses a reentrant model
 16336 ;;
 16337                           
 16338                           	psect	text61
 16339  017444                     __ptext61:
 16340                           	opt callstack 0
 16341  017444                     _stoa:
 16342                           	opt callstack 0
 16343                           
 16344                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 16345  017444  0E11               	movlw	17
 16346  017446  26E1               	addwf	fsr1l,f,c
 16347  017448  0E00               	movlw	0
 16348  01744A  22E2               	addwfc	fsr1h,f,c
 16349                           
 16350                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 16351                           
 16352                           ;incstack = 0
 16353 ;; hardware stack exceeded
 16354  01744C  EE20  F100         	lfsr	2,stoa@F1166
 16355                           
 16356                           ;stkvar	_nuls @ sp[(-17)+0]
 16357  017450  0E07               	movlw	7
 16358  017452  6E01               	movwf	btemp^0,c
 16359  017454  0EEF               	movlw	-17
 16360  017456                     us1181999:
 16361  017456  006F FF7B FFE3     	movff	postinc2,plusw1
 16362  01745C  28E8               	incf	wreg,w,c
 16363  01745E  2E01               	decfsz	btemp^0,f,c
 16364  017460  D7FA               	bra	us1181999
 16365                           
 16366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 16367                           ;stkvar	_s @ sp[(-17)+-4]
 16368  017462  0EEB               	movlw	-21
 16369  017464  006F FF8C  F00B    	movff	plusw1,btemp+10
 16370  01746A  0EEC               	movlw	-20
 16371  01746C  006F FF8C  F00C    	movff	plusw1,btemp+11
 16372                           
 16373                           ;stkvar	_cp @ sp[(-17)+11]
 16374  017472  0EFB               	movlw	-5
 16375  017474  0060  F033  FFE3   	movff	btemp+11,plusw1
 16376  01747A  0EFA               	movlw	-6
 16377  01747C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16378                           
 16379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 16380                           ;stkvar	_cp @ sp[(-17)+11]
 16381  017482  0EFA               	movlw	-6
 16382  017484  006F FF8C  F001    	movff	plusw1,btemp
 16383  01748A  0EFB               	movlw	-5
 16384  01748C  50E3               	movf	plusw1,w,c
 16385  01748E  1001               	iorwf	btemp^0,w,c
 16386  017490  A4D8               	btfss	status,2,c
 16387  017492  D00E               	goto	l12638
 16388                           
 16389                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 16390                           ;stkvar	_nuls @ sp[(-17)+0]
 16391  017494  0EEF               	movlw	239
 16392  017496  24E1               	addwf	fsr1l,w,c
 16393  017498  6E0B               	movwf	(btemp+10)^0,c
 16394  01749A  0EFF               	movlw	255
 16395  01749C  20E2               	addwfc	fsr1h,w,c
 16396  01749E  6E0C               	movwf	(btemp+11)^0,c
 16397                           
 16398                           ;stkvar	_cp @ sp[(-17)+11]
 16399  0174A0  0EFB               	movlw	-5
 16400  0174A2  0060  F033  FFE3   	movff	btemp+11,plusw1
 16401  0174A8  0EFA               	movlw	-6
 16402  0174AA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16403  0174B0                     l12638:
 16404                           
 16405                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 16406                           ;stkvar	_cp @ sp[(-17)+11]
 16407  0174B0  0EFA               	movlw	-6
 16408  0174B2  006F FF8F FFE6     	movff	plusw1,postinc1
 16409  0174B8  006F FF8F FFE6     	movff	plusw1,postinc1
 16410  0174BE  EC9E  F0D6         	call	_strlen	;wreg free
 16411                           
 16412                           ;stkvar	_l @ sp[(-17)+7]
 16413  0174C2  0EF6               	movlw	-10
 16414  0174C4  0060  F007  FFE3   	movff	btemp,plusw1
 16415  0174CA  0EF7               	movlw	-9
 16416  0174CC  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16417                           
 16418                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 16419                           ;stkvar	_p @ sp[(-17)+9]
 16420  0174D2  0EF8               	movlw	-8
 16421  0174D4  0060  F0F3  FFE3   	movff	_prec,plusw1
 16422  0174DA  0EF9               	movlw	-7
 16423  0174DC  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 16424                           
 16425                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 16426                           ;stkvar	_p @ sp[(-17)+9]
 16427  0174E2  0EF9               	movlw	-7
 16428  0174E4  BEE3               	btfsc	plusw1,7,c
 16429  0174E6  D023               	goto	l2384
 16430                           
 16431                           ;stkvar	_l @ sp[(-17)+7]
 16432                           ;stkvar	_p @ sp[(-17)+9]
 16433  0174E8  50E1               	movf	fsr1l,w,c
 16434  0174EA  0FF8               	addlw	-8
 16435  0174EC  6ED9               	movwf	fsr2l,c
 16436  0174EE  50E2               	movf	fsr1h,w,c
 16437  0174F0  6EDA               	movwf	fsr2h,c
 16438  0174F2  0EFF               	movlw	255
 16439  0174F4  22DA               	addwfc	fsr2h,f,c
 16440  0174F6  0EF6               	movlw	-10
 16441  0174F8  50E3               	movf	plusw1,w,c
 16442  0174FA  5CDE               	subwf	postinc2,w,c
 16443  0174FC  50DE               	movf	postinc2,w,c
 16444  0174FE  0A80               	xorlw	128
 16445  017500  6E01               	movwf	btemp^0,c
 16446  017502  0EF7               	movlw	-9
 16447  017504  50E3               	movf	plusw1,w,c
 16448  017506  0A80               	xorlw	128
 16449  017508  5801               	subwfb	btemp^0,w,c
 16450  01750A  B0D8               	btfsc	status,0,c
 16451  01750C  D010               	goto	l2384
 16452                           
 16453                           ;stkvar	_p @ sp[(-17)+9]
 16454                           ;stkvar	_l @ sp[(-17)+7]
 16455  01750E  0EF8               	movlw	-8
 16456  017510  006F FF8C  F001    	movff	plusw1,btemp
 16457  017516  0EF6               	movlw	-10
 16458  017518  0060  F007  FFE3   	movff	btemp,plusw1
 16459  01751E  0EF9               	movlw	-7
 16460  017520  006F FF8C  F001    	movff	plusw1,btemp
 16461  017526  0EF7               	movlw	-9
 16462  017528  0060  F007  FFE3   	movff	btemp,plusw1
 16463  01752E                     l2384:
 16464                           
 16465                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 16466                           ;stkvar	_l @ sp[(-17)+7]
 16467                           ;stkvar	_p @ sp[(-17)+9]
 16468  01752E  0EF6               	movlw	-10
 16469  017530  006F FF8C  F001    	movff	plusw1,btemp
 16470  017536  0EF8               	movlw	-8
 16471  017538  0060  F007  FFE3   	movff	btemp,plusw1
 16472  01753E  0EF7               	movlw	-9
 16473  017540  006F FF8C  F001    	movff	plusw1,btemp
 16474  017546  0EF9               	movlw	-7
 16475  017548  0060  F007  FFE3   	movff	btemp,plusw1
 16476                           
 16477                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 16478                           ;stkvar	_w @ sp[(-17)+13]
 16479  01754E  0EFC               	movlw	-4
 16480  017550  0060  F0EB  FFE3   	movff	_width,plusw1
 16481  017556  0EFD               	movlw	-3
 16482  017558  0060  F0EF  FFE3   	movff	_width+1,plusw1
 16483                           
 16484                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 16485  01755E  A03E               	btfss	_flags^0,0,c
 16486  017560  D01F               	goto	l12658
 16487  017562  D031               	goto	u11860
 16488  017564                     l12654:
 16489                           
 16490                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 16491                           ;stkvar	_fp @ sp[(-17)+-2]
 16492  017564  0EED               	movlw	-19
 16493  017566  006F FF8F FFE6     	movff	plusw1,postinc1
 16494  01756C  006F FF8F FFE6     	movff	plusw1,postinc1
 16495  017572  0E20               	movlw	32
 16496  017574  6EE6               	movwf	postinc1,c
 16497  017576  0E00               	movlw	0
 16498  017578  6EE6               	movwf	postinc1,c
 16499  01757A  EC9A  F0CD         	call	_fputc	;wreg free
 16500                           
 16501                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 16502                           ;stkvar	_l @ sp[(-17)+7]
 16503  01757E  0EF6               	movlw	-10
 16504  017580  50E3               	movf	plusw1,w,c
 16505  017582  0F01               	addlw	1
 16506  017584  6E01               	movwf	btemp^0,c
 16507  017586  0EF6               	movlw	-10
 16508  017588  0060  F007  FFE3   	movff	btemp,plusw1
 16509  01758E  6A01               	clrf	btemp^0,c
 16510  017590  0EF7               	movlw	-9
 16511  017592  50E3               	movf	plusw1,w,c
 16512  017594  2001               	addwfc	btemp^0,w,c
 16513  017596  6E01               	movwf	btemp^0,c
 16514  017598  0EF7               	movlw	-9
 16515  01759A  0060  F007  FFE3   	movff	btemp,plusw1
 16516  0175A0                     l12658:
 16517                           
 16518                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 16519                           ;stkvar	_w @ sp[(-17)+13]
 16520                           ;stkvar	_l @ sp[(-17)+7]
 16521  0175A0  50E1               	movf	fsr1l,w,c
 16522  0175A2  0FF6               	addlw	-10
 16523  0175A4  6ED9               	movwf	fsr2l,c
 16524  0175A6  50E2               	movf	fsr1h,w,c
 16525  0175A8  6EDA               	movwf	fsr2h,c
 16526  0175AA  0EFF               	movlw	255
 16527  0175AC  22DA               	addwfc	fsr2h,f,c
 16528  0175AE  0EFC               	movlw	-4
 16529  0175B0  50E3               	movf	plusw1,w,c
 16530  0175B2  5CDE               	subwf	postinc2,w,c
 16531  0175B4  50DE               	movf	postinc2,w,c
 16532  0175B6  0A80               	xorlw	128
 16533  0175B8  6E01               	movwf	btemp^0,c
 16534  0175BA  0EFD               	movlw	-3
 16535  0175BC  50E3               	movf	plusw1,w,c
 16536  0175BE  0A80               	xorlw	128
 16537  0175C0  5801               	subwfb	btemp^0,w,c
 16538  0175C2  A0D8               	btfss	status,0,c
 16539  0175C4  D7CF               	goto	l12654
 16540  0175C6                     u11860:
 16541                           
 16542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 16543                           ;stkvar	_i @ sp[(-17)+15]
 16544  0175C6  0EFE               	movlw	-2
 16545  0175C8  6AE3               	clrf	plusw1,c
 16546  0175CA  0EFF               	movlw	-1
 16547  0175CC  6AE3               	clrf	plusw1,c
 16548                           
 16549                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 16550  0175CE  D045               	goto	l12668
 16551  0175D0                     l12662:
 16552                           
 16553                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 16554                           ;stkvar	_fp @ sp[(-17)+-2]
 16555  0175D0  0EED               	movlw	-19
 16556  0175D2  006F FF8F FFE6     	movff	plusw1,postinc1
 16557  0175D8  006F FF8F FFE6     	movff	plusw1,postinc1
 16558                           
 16559                           ;stkvar	_cp @ sp[(-19)+11]
 16560  0175DE  0EF8               	movlw	-8
 16561  0175E0  006F FF8F FFF6     	movff	plusw1,tblptrl
 16562  0175E6  0EF9               	movlw	-7
 16563  0175E8  006F FF8F FFF7     	movff	plusw1,tblptrh
 16564  0175EE  0E00               	movlw	low (__mediumconst shr (0+16))
 16565  0175F0  6EF8               	movwf	tblptru,c
 16566  0175F2  0E1F               	movlw	(high __ramtop+-1)
 16567  0175F4  64F7               	cpfsgt	tblptrh,c
 16568  0175F6  D003               	bra	u11877
 16569  0175F8  0008               	tblrd		*
 16570  0175FA  50F5               	movf	tablat,w,c
 16571  0175FC  D007               	bra	u11870
 16572  0175FE                     u11877:
 16573  0175FE  006F FFDB FFE9     	movff	tblptrl,fsr0l
 16574  017604  006F FFDF FFEA     	movff	tblptrh,fsr0h
 16575  01760A  50EF               	movf	indf0,w,c
 16576  01760C                     u11870:
 16577  01760C  6EE6               	movwf	postinc1,c
 16578  01760E  0E00               	movlw	0
 16579  017610  6EE6               	movwf	postinc1,c
 16580  017612  EC9A  F0CD         	call	_fputc	;wreg free
 16581                           
 16582                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 16583                           ;stkvar	_cp @ sp[(-17)+11]
 16584  017616  0EFA               	movlw	-6
 16585  017618  50E3               	movf	plusw1,w,c
 16586  01761A  0F01               	addlw	1
 16587  01761C  6E01               	movwf	btemp^0,c
 16588  01761E  0EFA               	movlw	-6
 16589  017620  0060  F007  FFE3   	movff	btemp,plusw1
 16590  017626  6A01               	clrf	btemp^0,c
 16591  017628  0EFB               	movlw	-5
 16592  01762A  50E3               	movf	plusw1,w,c
 16593  01762C  2001               	addwfc	btemp^0,w,c
 16594  01762E  6E01               	movwf	btemp^0,c
 16595  017630  0EFB               	movlw	-5
 16596  017632  0060  F007  FFE3   	movff	btemp,plusw1
 16597                           
 16598                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 16599                           ;stkvar	_i @ sp[(-17)+15]
 16600  017638  0EFE               	movlw	-2
 16601  01763A  50E3               	movf	plusw1,w,c
 16602  01763C  0F01               	addlw	1
 16603  01763E  6E01               	movwf	btemp^0,c
 16604  017640  0EFE               	movlw	-2
 16605  017642  0060  F007  FFE3   	movff	btemp,plusw1
 16606  017648  6A01               	clrf	btemp^0,c
 16607  01764A  0EFF               	movlw	-1
 16608  01764C  50E3               	movf	plusw1,w,c
 16609  01764E  2001               	addwfc	btemp^0,w,c
 16610  017650  6E01               	movwf	btemp^0,c
 16611  017652  0EFF               	movlw	-1
 16612  017654  0060  F007  FFE3   	movff	btemp,plusw1
 16613  01765A                     l12668:
 16614                           
 16615                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 16616                           ;stkvar	_p @ sp[(-17)+9]
 16617                           ;stkvar	_i @ sp[(-17)+15]
 16618  01765A  50E1               	movf	fsr1l,w,c
 16619  01765C  0FFE               	addlw	-2
 16620  01765E  6ED9               	movwf	fsr2l,c
 16621  017660  50E2               	movf	fsr1h,w,c
 16622  017662  6EDA               	movwf	fsr2h,c
 16623  017664  0EFF               	movlw	255
 16624  017666  22DA               	addwfc	fsr2h,f,c
 16625  017668  0EF8               	movlw	-8
 16626  01766A  50E3               	movf	plusw1,w,c
 16627  01766C  5CDE               	subwf	postinc2,w,c
 16628  01766E  50DE               	movf	postinc2,w,c
 16629  017670  0A80               	xorlw	128
 16630  017672  6E01               	movwf	btemp^0,c
 16631  017674  0EF9               	movlw	-7
 16632  017676  50E3               	movf	plusw1,w,c
 16633  017678  0A80               	xorlw	128
 16634  01767A  5801               	subwfb	btemp^0,w,c
 16635  01767C  A0D8               	btfss	status,0,c
 16636  01767E  D7A8               	goto	l12662
 16637                           
 16638                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 16639  017680  B03E               	btfsc	_flags^0,0,c
 16640  017682  D01F               	goto	l12676
 16641  017684  D031               	goto	u11900
 16642  017686                     l12672:
 16643                           
 16644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 16645                           ;stkvar	_fp @ sp[(-17)+-2]
 16646  017686  0EED               	movlw	-19
 16647  017688  006F FF8F FFE6     	movff	plusw1,postinc1
 16648  01768E  006F FF8F FFE6     	movff	plusw1,postinc1
 16649  017694  0E20               	movlw	32
 16650  017696  6EE6               	movwf	postinc1,c
 16651  017698  0E00               	movlw	0
 16652  01769A  6EE6               	movwf	postinc1,c
 16653  01769C  EC9A  F0CD         	call	_fputc	;wreg free
 16654                           
 16655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 16656                           ;stkvar	_l @ sp[(-17)+7]
 16657  0176A0  0EF6               	movlw	-10
 16658  0176A2  50E3               	movf	plusw1,w,c
 16659  0176A4  0F01               	addlw	1
 16660  0176A6  6E01               	movwf	btemp^0,c
 16661  0176A8  0EF6               	movlw	-10
 16662  0176AA  0060  F007  FFE3   	movff	btemp,plusw1
 16663  0176B0  6A01               	clrf	btemp^0,c
 16664  0176B2  0EF7               	movlw	-9
 16665  0176B4  50E3               	movf	plusw1,w,c
 16666  0176B6  2001               	addwfc	btemp^0,w,c
 16667  0176B8  6E01               	movwf	btemp^0,c
 16668  0176BA  0EF7               	movlw	-9
 16669  0176BC  0060  F007  FFE3   	movff	btemp,plusw1
 16670  0176C2                     l12676:
 16671                           
 16672                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 16673                           ;stkvar	_w @ sp[(-17)+13]
 16674                           ;stkvar	_l @ sp[(-17)+7]
 16675  0176C2  50E1               	movf	fsr1l,w,c
 16676  0176C4  0FF6               	addlw	-10
 16677  0176C6  6ED9               	movwf	fsr2l,c
 16678  0176C8  50E2               	movf	fsr1h,w,c
 16679  0176CA  6EDA               	movwf	fsr2h,c
 16680  0176CC  0EFF               	movlw	255
 16681  0176CE  22DA               	addwfc	fsr2h,f,c
 16682  0176D0  0EFC               	movlw	-4
 16683  0176D2  50E3               	movf	plusw1,w,c
 16684  0176D4  5CDE               	subwf	postinc2,w,c
 16685  0176D6  50DE               	movf	postinc2,w,c
 16686  0176D8  0A80               	xorlw	128
 16687  0176DA  6E01               	movwf	btemp^0,c
 16688  0176DC  0EFD               	movlw	-3
 16689  0176DE  50E3               	movf	plusw1,w,c
 16690  0176E0  0A80               	xorlw	128
 16691  0176E2  5801               	subwfb	btemp^0,w,c
 16692  0176E4  A0D8               	btfss	status,0,c
 16693  0176E6  D7CF               	goto	l12672
 16694  0176E8                     u11900:
 16695                           
 16696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 16697                           ;stkvar	_l @ sp[(-17)+7]
 16698  0176E8  0EF6               	movlw	-10
 16699  0176EA  006F FF8C  F001    	movff	plusw1,btemp
 16700  0176F0  0EF7               	movlw	-9
 16701  0176F2  006F FF8C  F002    	movff	plusw1,btemp+1
 16702                           
 16703                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 16704  0176F8  0EEB               	movlw	235
 16705  0176FA  26E1               	addwf	fsr1l,f,c
 16706  0176FC  0EFF               	movlw	255
 16707  0176FE  22E2               	addwfc	fsr1h,f,c
 16708  017700  0012               	return		;funcret
 16709  017702                     __end_of_stoa:
 16710                           	opt callstack 0
 16711                           
 16712 ;; *************** function _efgtoa *****************
 16713 ;; Defined at:
 16714 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16715 ;; Parameters:    Size  Location     Type
 16716 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16717 ;;		 -> f(6), NULL(0), 
 16718 ;;  f               4  [STACK] PTR struct _IO_FILE
 16719 ;;  c               1  [STACK] unsigned char 
 16720 ;; Auto vars:     Size  Location     Type
 16721 ;;  u               4  [STACK] unsigned char 
 16722 ;;  g               4  [STACK] unsigned char 
 16723 ;;  l               4  [STACK] unsigned char 
 16724 ;;  h               4  [STACK] unsigned char 
 16725 ;;  ou              4  [STACK] unsigned char 
 16726 ;;  n               2  [STACK] int 
 16727 ;;  e               2  [STACK] int 
 16728 ;;  i               2  [STACK] int 
 16729 ;;  w               2  [STACK] int 
 16730 ;;  p               2  [STACK] int 
 16731 ;;  sign            2  [STACK] int 
 16732 ;;  d               2  [STACK] int 
 16733 ;;  ne              2  [STACK] int 
 16734 ;;  m               2  [STACK] int 
 16735 ;;  pp              2  [STACK] int 
 16736 ;;  t               2  [STACK] int 
 16737 ;;  mode            1  [STACK] unsigned char 
 16738 ;;  nmode           1  [STACK] unsigned char 
 16739 ;; Return value:  Size  Location     Type
 16740 ;;                  2  [STACK] int 
 16741 ;; Registers used:
 16742 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 16743 ;; Tracked objects:
 16744 ;;		On entry : 0/0
 16745 ;;		On exit  : 0/0
 16746 ;;		Unchanged: 0/0
 16747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16752 ;;Total ram usage:        0 bytes
 16753 ;; Hardware stack levels used:    1
 16754 ;; Hardware stack levels required when called:   20
 16755 ;; This function calls:
 16756 ;;		___awdiv
 16757 ;;		___awmod
 16758 ;;		___fladd
 16759 ;;		___fldiv
 16760 ;;		___fleq
 16761 ;;		___flge
 16762 ;;		___flmul
 16763 ;;		___flneg
 16764 ;;		___flsub
 16765 ;;		___fltol
 16766 ;;		___fpclassifyf
 16767 ;;		_floorf
 16768 ;;		_isupper
 16769 ;;		_pad
 16770 ;;		_strcpy
 16771 ;;		_tolower
 16772 ;; This function is called by:
 16773 ;;		_vfpfcnvrt
 16774 ;; This function uses a reentrant model
 16775 ;;
 16776                           
 16777                           	psect	text62
 16778  010000                     __ptext62:
 16779                           	opt callstack 0
 16780  010000                     _efgtoa:
 16781                           	opt callstack 0
 16782                           
 16783                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 16784  010000  0E38               	movlw	56
 16785  010002  26E1               	addwf	fsr1l,f,c
 16786  010004  0E00               	movlw	0
 16787  010006  22E2               	addwfc	fsr1h,f,c
 16788                           
 16789                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 16790                           ;stkvar	_sign @ sp[(-56)+42]
 16791                           
 16792                           ;incstack = 0
 16793 ;; hardware stack exceeded
 16794  010008  0EF2               	movlw	-14
 16795  01000A  6AE3               	clrf	plusw1,c
 16796  01000C  0EF3               	movlw	-13
 16797  01000E  6AE3               	clrf	plusw1,c
 16798                           
 16799                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 16800                           ;stkvar	_f @ sp[(-56)+-6]
 16801  010010  0EC2               	movlw	-62
 16802  010012  006F FF8C  F009    	movff	plusw1,btemp+8
 16803  010018  0EC3               	movlw	-61
 16804  01001A  006F FF8C  F00A    	movff	plusw1,btemp+9
 16805  010020  0EC4               	movlw	-60
 16806  010022  006F FF8C  F00B    	movff	plusw1,btemp+10
 16807  010028  0EC5               	movlw	-59
 16808  01002A  006F FF8C  F00C    	movff	plusw1,btemp+11
 16809                           
 16810                           ;stkvar	_g @ sp[(-56)+16]
 16811  010030  0ED8               	movlw	-40
 16812  010032  0060  F027  FFE3   	movff	btemp+8,plusw1
 16813  010038  0ED9               	movlw	-39
 16814  01003A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16815  010040  0EDA               	movlw	-38
 16816  010042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16817  010048  0EDB               	movlw	-37
 16818  01004A  0060  F033  FFE3   	movff	btemp+11,plusw1
 16819                           
 16820                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 16821                           ;stkvar	_g @ sp[(-56)+16]
 16822  010050  0EDB               	movlw	-37
 16823  010052  AEE3               	btfss	plusw1,7,c
 16824  010054  D02B               	goto	l12336
 16825                           
 16826                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 16827  010056  0E01               	movlw	1
 16828  010058  6E0B               	movwf	(btemp+10)^0,c
 16829  01005A  0E00               	movlw	0
 16830  01005C  6E0C               	movwf	(btemp+11)^0,c
 16831                           
 16832                           ;stkvar	_sign @ sp[(-56)+42]
 16833  01005E  0EF2               	movlw	-14
 16834  010060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16835  010066  0EF3               	movlw	-13
 16836  010068  0060  F033  FFE3   	movff	btemp+11,plusw1
 16837                           
 16838                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 16839                           ;stkvar	_g @ sp[(-56)+16]
 16840  01006E  0ED8               	movlw	-40
 16841  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 16842  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 16843  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 16844  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 16845  010088  EC99  F0DC         	call	___flneg	;wreg free
 16846                           
 16847                           ;stkvar	_g @ sp[(-56)+16]
 16848  01008C  0ED8               	movlw	-40
 16849  01008E  0060  F007  FFE3   	movff	btemp,plusw1
 16850  010094  0ED9               	movlw	-39
 16851  010096  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16852  01009C  0EDA               	movlw	-38
 16853  01009E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16854  0100A4  0EDB               	movlw	-37
 16855  0100A6  0060  F013  FFE3   	movff	btemp+3,plusw1
 16856  0100AC                     l12336:
 16857                           
 16858                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 16859                           ;stkvar	_n @ sp[(-56)+32]
 16860  0100AC  0EE8               	movlw	-24
 16861  0100AE  6AE3               	clrf	plusw1,c
 16862  0100B0  0EE9               	movlw	-23
 16863  0100B2  6AE3               	clrf	plusw1,c
 16864                           
 16865                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 16866                           ;stkvar	_w @ sp[(-56)+38]
 16867  0100B4  0EEE               	movlw	-18
 16868  0100B6  0060  F0EB  FFE3   	movff	_width,plusw1
 16869  0100BC  0EEF               	movlw	-17
 16870  0100BE  0060  F0EF  FFE3   	movff	_width+1,plusw1
 16871                           
 16872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 16873                           ;stkvar	_sign @ sp[(-56)+42]
 16874  0100C4  0EF2               	movlw	-14
 16875  0100C6  006F FF8C  F001    	movff	plusw1,btemp
 16876  0100CC  0EF3               	movlw	-13
 16877  0100CE  50E3               	movf	plusw1,w,c
 16878  0100D0  1001               	iorwf	btemp^0,w,c
 16879  0100D2  A4D8               	btfss	status,2,c
 16880  0100D4  D002               	goto	u11310
 16881  0100D6  A43E               	btfss	_flags^0,2,c
 16882  0100D8  D036               	goto	l12356
 16883  0100DA                     u11310:
 16884                           
 16885                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 16886                           ;stkvar	_sign @ sp[(-56)+42]
 16887  0100DA  0EF2               	movlw	-14
 16888  0100DC  006F FF8C  F001    	movff	plusw1,btemp
 16889  0100E2  0EF3               	movlw	-13
 16890  0100E4  50E3               	movf	plusw1,w,c
 16891  0100E6  1001               	iorwf	btemp^0,w,c
 16892  0100E8  A4D8               	btfss	status,2,c
 16893  0100EA  D002               	goto	l12348
 16894  0100EC  0E2B               	movlw	43
 16895  0100EE  D001               	goto	L17
 16896  0100F0                     l12348:
 16897  0100F0  0E2D               	movlw	45
 16898  0100F2                     L17:
 16899  0100F2  6E0B               	movwf	(btemp+10)^0,c
 16900  0100F4  0E00               	movlw	0
 16901  0100F6  6E0C               	movwf	(btemp+11)^0,c
 16902                           
 16903                           ;stkvar	_efgtoa$5825 @ sp[(-56)+10]
 16904  0100F8  0ED2               	movlw	-46
 16905  0100FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16906  010100  0ED3               	movlw	-45
 16907  010102  0060  F033  FFE3   	movff	btemp+11,plusw1
 16908                           
 16909                           ;stkvar	_efgtoa$5825 @ sp[(-56)+10]
 16910  010108  0ED2               	movlw	-46
 16911  01010A  006F FF8C  F297    	movff	plusw1,_dbuf
 16912                           
 16913                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 16914                           ;stkvar	_n @ sp[(-56)+32]
 16915  010110  0EE8               	movlw	-24
 16916  010112  50E3               	movf	plusw1,w,c
 16917  010114  0F01               	addlw	1
 16918  010116  6E01               	movwf	btemp^0,c
 16919  010118  0EE8               	movlw	-24
 16920  01011A  0060  F007  FFE3   	movff	btemp,plusw1
 16921  010120  6A01               	clrf	btemp^0,c
 16922  010122  0EE9               	movlw	-23
 16923  010124  50E3               	movf	plusw1,w,c
 16924  010126  2001               	addwfc	btemp^0,w,c
 16925  010128  6E01               	movwf	btemp^0,c
 16926  01012A  0EE9               	movlw	-23
 16927  01012C  0060  F007  FFE3   	movff	btemp,plusw1
 16928                           
 16929                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 16930                           ;stkvar	_w @ sp[(-56)+38]
 16931  010132  50E1               	movf	fsr1l,w,c
 16932  010134  0FEE               	addlw	-18
 16933  010136  6ED9               	movwf	fsr2l,c
 16934  010138  50E2               	movf	fsr1h,w,c
 16935  01013A  6EDA               	movwf	fsr2h,c
 16936  01013C  0EFF               	movlw	255
 16937  01013E  22DA               	addwfc	fsr2h,f,c
 16938  010140  06DE               	decf	postinc2,f,c
 16939  010142  0E00               	movlw	0
 16940  010144  5ADD               	subwfb	postdec2,f,c
 16941  010146                     l12356:
 16942                           
 16943                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 16944                           ;stkvar	_g @ sp[(-56)+16]
 16945  010146  0ED8               	movlw	-40
 16946  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 16947  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 16948  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 16949  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 16950  010160  EC15  F0C6         	call	___fpclassifyf	;wreg free
 16951  010164  0401               	decf	btemp^0,w,c
 16952  010166  1002               	iorwf	(btemp+1)^0,w,c
 16953  010168  A4D8               	btfss	status,2,c
 16954  01016A  D076               	goto	l12374
 16955  01016C  0EBF               	movlw	191
 16956  01016E  6E0B               	movwf	(btemp+10)^0,c
 16957  010170  0EFF               	movlw	255
 16958  010172  6E0C               	movwf	(btemp+11)^0,c
 16959                           
 16960                           ;stkvar	_c @ sp[(-56)+-7]
 16961  010174  0EC1               	movlw	-63
 16962  010176  50E3               	movf	plusw1,w,c
 16963  010178  6E09               	movwf	(btemp+8)^0,c
 16964  01017A  6A0A               	clrf	(btemp+9)^0,c
 16965  01017C  500B               	movf	(btemp+10)^0,w,c
 16966  01017E  2609               	addwf	(btemp+8)^0,f,c
 16967  010180  500C               	movf	(btemp+11)^0,w,c
 16968  010182  220A               	addwfc	(btemp+9)^0,f,c
 16969  010184  500A               	movf	(btemp+9)^0,w,c
 16970  010186  E106               	bnz	u11340
 16971  010188  0E1A               	movlw	26
 16972  01018A  5C09               	subwf	(btemp+8)^0,w,c
 16973  01018C  B0D8               	btfsc	status,0,c
 16974  01018E  D002               	goto	u11340
 16975  010190  0E01               	movlw	1
 16976  010192  D001               	goto	u11350
 16977  010194                     u11340:
 16978  010194  0E00               	movlw	0
 16979  010196                     u11350:
 16980  010196  6E0B               	movwf	(btemp+10)^0,c
 16981  010198  6A0C               	clrf	(btemp+11)^0,c
 16982                           
 16983                           ;stkvar	_efgtoa$5826 @ sp[(-56)+8]
 16984  01019A  0ED0               	movlw	-48
 16985  01019C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16986  0101A2  0ED1               	movlw	-47
 16987  0101A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 16988                           
 16989                           ;stkvar	_efgtoa$5826 @ sp[(-56)+8]
 16990  0101AA  0ED0               	movlw	-48
 16991  0101AC  006F FF8C  F001    	movff	plusw1,btemp
 16992  0101B2  0ED1               	movlw	-47
 16993  0101B4  50E3               	movf	plusw1,w,c
 16994  0101B6  1001               	iorwf	btemp^0,w,c
 16995  0101B8  B4D8               	btfsc	status,2,c
 16996  0101BA  D017               	goto	l12366
 16997                           
 16998                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 16999  0101BC  0ED7               	movlw	low STR_65
 17000  0101BE  6EE6               	movwf	postinc1,c
 17001  0101C0  0EFF               	movlw	high STR_65
 17002  0101C2  6EE6               	movwf	postinc1,c
 17003                           
 17004                           ;stkvar	_n @ sp[(-58)+32]
 17005  0101C4  0E97               	movlw	low _dbuf
 17006  0101C6  6E0B               	movwf	(btemp+10)^0,c
 17007  0101C8  0E02               	movlw	high _dbuf
 17008  0101CA  6E0C               	movwf	(btemp+11)^0,c
 17009  0101CC  0EE6               	movlw	-26
 17010  0101CE  50E3               	movf	plusw1,w,c
 17011  0101D0  260B               	addwf	(btemp+10)^0,f,c
 17012  0101D2  0EE7               	movlw	-25
 17013  0101D4  50E3               	movf	plusw1,w,c
 17014  0101D6  220C               	addwfc	(btemp+11)^0,f,c
 17015  0101D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17016  0101DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 17017  0101E4  ECAD  F0D2         	call	_strcpy	;wreg free
 17018                           
 17019                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 17020  0101E8  D016               	goto	l12368
 17021  0101EA                     l12366:
 17022                           
 17023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 17024  0101EA  0EDF               	movlw	low STR_66
 17025  0101EC  6EE6               	movwf	postinc1,c
 17026  0101EE  0EFF               	movlw	high STR_66
 17027  0101F0  6EE6               	movwf	postinc1,c
 17028                           
 17029                           ;stkvar	_n @ sp[(-58)+32]
 17030  0101F2  0E97               	movlw	low _dbuf
 17031  0101F4  6E0B               	movwf	(btemp+10)^0,c
 17032  0101F6  0E02               	movlw	high _dbuf
 17033  0101F8  6E0C               	movwf	(btemp+11)^0,c
 17034  0101FA  0EE6               	movlw	-26
 17035  0101FC  50E3               	movf	plusw1,w,c
 17036  0101FE  260B               	addwf	(btemp+10)^0,f,c
 17037  010200  0EE7               	movlw	-25
 17038  010202  50E3               	movf	plusw1,w,c
 17039  010204  220C               	addwfc	(btemp+11)^0,f,c
 17040  010206  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17041  01020C  0060  F033  FFE6   	movff	btemp+11,postinc1
 17042  010212  ECAD  F0D2         	call	_strcpy	;wreg free
 17043  010216                     l12368:
 17044                           
 17045                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 17046                           ;stkvar	_w @ sp[(-56)+38]
 17047  010216  50E1               	movf	fsr1l,w,c
 17048  010218  0FEE               	addlw	-18
 17049  01021A  6ED9               	movwf	fsr2l,c
 17050  01021C  50E2               	movf	fsr1h,w,c
 17051  01021E  6EDA               	movwf	fsr2h,c
 17052  010220  0EFF               	movlw	255
 17053  010222  22DA               	addwfc	fsr2h,f,c
 17054  010224  0EFD               	movlw	253
 17055  010226  26DE               	addwf	postinc2,f,c
 17056  010228  0EFF               	movlw	255
 17057  01022A  22DD               	addwfc	postdec2,f,c
 17058  01022C                     l12370:
 17059                           
 17060                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 17061                           ;stkvar	_w @ sp[(-56)+38]
 17062  01022C  0EEE               	movlw	-18
 17063  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 17064  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 17065  01023A  0E97               	movlw	low _dbuf
 17066  01023C  6EE6               	movwf	postinc1,c
 17067  01023E  0E02               	movlw	high _dbuf
 17068  010240  6EE6               	movwf	postinc1,c
 17069                           
 17070                           ;stkvar	_fp @ sp[(-60)+-2]
 17071  010242  0EC2               	movlw	-62
 17072  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 17073  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 17074  010250  EC44  F0CF         	call	_pad	;wreg free
 17075  010254  EF1D  F089         	goto	l2302
 17076  010258                     l12374:
 17077                           
 17078                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 17079                           ;stkvar	_g @ sp[(-56)+16]
 17080  010258  0ED8               	movlw	-40
 17081  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 17082  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 17083  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 17084  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 17085  010272  EC15  F0C6         	call	___fpclassifyf	;wreg free
 17086  010276  5001               	movf	btemp^0,w,c
 17087  010278  1002               	iorwf	(btemp+1)^0,w,c
 17088  01027A  A4D8               	btfss	status,2,c
 17089  01027C  D056               	goto	l12392
 17090  01027E  0EBF               	movlw	191
 17091  010280  6E0B               	movwf	(btemp+10)^0,c
 17092  010282  0EFF               	movlw	255
 17093  010284  6E0C               	movwf	(btemp+11)^0,c
 17094                           
 17095                           ;stkvar	_c @ sp[(-56)+-7]
 17096  010286  0EC1               	movlw	-63
 17097  010288  50E3               	movf	plusw1,w,c
 17098  01028A  6E09               	movwf	(btemp+8)^0,c
 17099  01028C  6A0A               	clrf	(btemp+9)^0,c
 17100  01028E  500B               	movf	(btemp+10)^0,w,c
 17101  010290  2609               	addwf	(btemp+8)^0,f,c
 17102  010292  500C               	movf	(btemp+11)^0,w,c
 17103  010294  220A               	addwfc	(btemp+9)^0,f,c
 17104  010296  500A               	movf	(btemp+9)^0,w,c
 17105  010298  E106               	bnz	u11380
 17106  01029A  0E1A               	movlw	26
 17107  01029C  5C09               	subwf	(btemp+8)^0,w,c
 17108  01029E  B0D8               	btfsc	status,0,c
 17109  0102A0  D002               	goto	u11380
 17110  0102A2  0E01               	movlw	1
 17111  0102A4  D001               	goto	u11390
 17112  0102A6                     u11380:
 17113  0102A6  0E00               	movlw	0
 17114  0102A8                     u11390:
 17115  0102A8  6E0B               	movwf	(btemp+10)^0,c
 17116  0102AA  6A0C               	clrf	(btemp+11)^0,c
 17117                           
 17118                           ;stkvar	_efgtoa$5830 @ sp[(-56)+6]
 17119  0102AC  0ECE               	movlw	-50
 17120  0102AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17121  0102B4  0ECF               	movlw	-49
 17122  0102B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 17123                           
 17124                           ;stkvar	_efgtoa$5830 @ sp[(-56)+6]
 17125  0102BC  0ECE               	movlw	-50
 17126  0102BE  006F FF8C  F001    	movff	plusw1,btemp
 17127  0102C4  0ECF               	movlw	-49
 17128  0102C6  50E3               	movf	plusw1,w,c
 17129  0102C8  1001               	iorwf	btemp^0,w,c
 17130  0102CA  B4D8               	btfsc	status,2,c
 17131  0102CC  D017               	goto	l12384
 17132                           
 17133                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 17134  0102CE  0EDB               	movlw	low STR_69
 17135  0102D0  6EE6               	movwf	postinc1,c
 17136  0102D2  0EFF               	movlw	high STR_69
 17137  0102D4  6EE6               	movwf	postinc1,c
 17138                           
 17139                           ;stkvar	_n @ sp[(-58)+32]
 17140  0102D6  0E97               	movlw	low _dbuf
 17141  0102D8  6E0B               	movwf	(btemp+10)^0,c
 17142  0102DA  0E02               	movlw	high _dbuf
 17143  0102DC  6E0C               	movwf	(btemp+11)^0,c
 17144  0102DE  0EE6               	movlw	-26
 17145  0102E0  50E3               	movf	plusw1,w,c
 17146  0102E2  260B               	addwf	(btemp+10)^0,f,c
 17147  0102E4  0EE7               	movlw	-25
 17148  0102E6  50E3               	movf	plusw1,w,c
 17149  0102E8  220C               	addwfc	(btemp+11)^0,f,c
 17150  0102EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17151  0102F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 17152  0102F6  ECAD  F0D2         	call	_strcpy	;wreg free
 17153                           
 17154                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 17155  0102FA  D78D               	goto	l12368
 17156  0102FC                     l12384:
 17157                           
 17158                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 17159  0102FC  0EE3               	movlw	low STR_70
 17160  0102FE  6EE6               	movwf	postinc1,c
 17161  010300  0EFF               	movlw	high STR_70
 17162  010302  6EE6               	movwf	postinc1,c
 17163                           
 17164                           ;stkvar	_n @ sp[(-58)+32]
 17165  010304  0E97               	movlw	low _dbuf
 17166  010306  6E0B               	movwf	(btemp+10)^0,c
 17167  010308  0E02               	movlw	high _dbuf
 17168  01030A  6E0C               	movwf	(btemp+11)^0,c
 17169  01030C  0EE6               	movlw	-26
 17170  01030E  50E3               	movf	plusw1,w,c
 17171  010310  260B               	addwf	(btemp+10)^0,f,c
 17172  010312  0EE7               	movlw	-25
 17173  010314  50E3               	movf	plusw1,w,c
 17174  010316  220C               	addwfc	(btemp+11)^0,f,c
 17175  010318  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17176  01031E  0060  F033  FFE6   	movff	btemp+11,postinc1
 17177  010324  ECAD  F0D2         	call	_strcpy	;wreg free
 17178  010328  D776               	goto	l12368
 17179  01032A                     l12392:
 17180                           
 17181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 17182  01032A  0E00               	movlw	0
 17183  01032C  6E09               	movwf	(btemp+8)^0,c
 17184  01032E  0E00               	movlw	0
 17185  010330  6E0A               	movwf	(btemp+9)^0,c
 17186  010332  0E80               	movlw	128
 17187  010334  6E0B               	movwf	(btemp+10)^0,c
 17188  010336  0E3F               	movlw	63
 17189  010338  6E0C               	movwf	(btemp+11)^0,c
 17190                           
 17191                           ;stkvar	_u @ sp[(-56)+12]
 17192  01033A  0ED4               	movlw	-44
 17193  01033C  0060  F027  FFE3   	movff	btemp+8,plusw1
 17194  010342  0ED5               	movlw	-43
 17195  010344  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17196  01034A  0ED6               	movlw	-42
 17197  01034C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17198  010352  0ED7               	movlw	-41
 17199  010354  0060  F033  FFE3   	movff	btemp+11,plusw1
 17200                           
 17201                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 17202                           ;stkvar	_e @ sp[(-56)+34]
 17203  01035A  0EEA               	movlw	-22
 17204  01035C  6AE3               	clrf	plusw1,c
 17205  01035E  0EEB               	movlw	-21
 17206  010360  6AE3               	clrf	plusw1,c
 17207                           
 17208                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 17209  010362  0E00               	movlw	0
 17210  010364  6EE6               	movwf	postinc1,c
 17211  010366  0E00               	movlw	0
 17212  010368  6EE6               	movwf	postinc1,c
 17213  01036A  0E00               	movlw	0
 17214  01036C  6EE6               	movwf	postinc1,c
 17215  01036E  0E00               	movlw	0
 17216  010370  6EE6               	movwf	postinc1,c
 17217                           
 17218                           ;stkvar	_g @ sp[(-60)+16]
 17219  010372  0ED4               	movlw	-44
 17220  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 17221  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 17222  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 17223  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 17224  01038C  EC7F  F0D3         	call	___fleq	;wreg free
 17225  010390  A001               	btfss	btemp& (0+255),0,c
 17226  010392  D039               	goto	l12404
 17227  010394  D0BC               	goto	u11430
 17228  010396                     l12400:
 17229                           
 17230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 17231  010396  0E00               	movlw	0
 17232  010398  6EE6               	movwf	postinc1,c
 17233  01039A  0E00               	movlw	0
 17234  01039C  6EE6               	movwf	postinc1,c
 17235  01039E  0E20               	movlw	32
 17236  0103A0  6EE6               	movwf	postinc1,c
 17237  0103A2  0E41               	movlw	65
 17238  0103A4  6EE6               	movwf	postinc1,c
 17239                           
 17240                           ;stkvar	_u @ sp[(-60)+12]
 17241  0103A6  0ED0               	movlw	-48
 17242  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 17243  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 17244  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 17245  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 17246  0103C0  EC03  F09F         	call	___flmul	;wreg free
 17247                           
 17248                           ;stkvar	_u @ sp[(-56)+12]
 17249  0103C4  0ED4               	movlw	-44
 17250  0103C6  0060  F007  FFE3   	movff	btemp,plusw1
 17251  0103CC  0ED5               	movlw	-43
 17252  0103CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17253  0103D4  0ED6               	movlw	-42
 17254  0103D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17255  0103DC  0ED7               	movlw	-41
 17256  0103DE  0060  F013  FFE3   	movff	btemp+3,plusw1
 17257                           
 17258                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 17259                           ;stkvar	_e @ sp[(-56)+34]
 17260  0103E4  0EEA               	movlw	-22
 17261  0103E6  50E3               	movf	plusw1,w,c
 17262  0103E8  0F01               	addlw	1
 17263  0103EA  6E01               	movwf	btemp^0,c
 17264  0103EC  0EEA               	movlw	-22
 17265  0103EE  0060  F007  FFE3   	movff	btemp,plusw1
 17266  0103F4  6A01               	clrf	btemp^0,c
 17267  0103F6  0EEB               	movlw	-21
 17268  0103F8  50E3               	movf	plusw1,w,c
 17269  0103FA  2001               	addwfc	btemp^0,w,c
 17270  0103FC  6E01               	movwf	btemp^0,c
 17271  0103FE  0EEB               	movlw	-21
 17272  010400  0060  F007  FFE3   	movff	btemp,plusw1
 17273  010406                     l12404:
 17274                           
 17275                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 17276  010406  0E00               	movlw	0
 17277  010408  6EE6               	movwf	postinc1,c
 17278  01040A  0E00               	movlw	0
 17279  01040C  6EE6               	movwf	postinc1,c
 17280  01040E  0E20               	movlw	32
 17281  010410  6EE6               	movwf	postinc1,c
 17282  010412  0E41               	movlw	65
 17283  010414  6EE6               	movwf	postinc1,c
 17284                           
 17285                           ;stkvar	_u @ sp[(-60)+12]
 17286  010416  0ED0               	movlw	-48
 17287  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 17288  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 17289  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 17290  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 17291  010430  EC03  F09F         	call	___flmul	;wreg free
 17292  010434  0060  F007  FFE6   	movff	btemp,postinc1
 17293  01043A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17294  010440  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17295  010446  0060  F013  FFE6   	movff	btemp+3,postinc1
 17296                           
 17297                           ;stkvar	_g @ sp[(-60)+16]
 17298  01044C  0ED4               	movlw	-44
 17299  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 17300  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 17301  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 17302  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 17303  010466  EC1C  F0C9         	call	___flge	;wreg free
 17304  01046A  A001               	btfss	btemp& (0+255),0,c
 17305  01046C  D032               	goto	l12410
 17306  01046E  D793               	goto	l12400
 17307  010470                     l12406:
 17308                           
 17309                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 17310  010470  0E00               	movlw	0
 17311  010472  6EE6               	movwf	postinc1,c
 17312  010474  0E00               	movlw	0
 17313  010476  6EE6               	movwf	postinc1,c
 17314  010478  0E20               	movlw	32
 17315  01047A  6EE6               	movwf	postinc1,c
 17316  01047C  0E41               	movlw	65
 17317  01047E  6EE6               	movwf	postinc1,c
 17318                           
 17319                           ;stkvar	_u @ sp[(-60)+12]
 17320  010480  0ED0               	movlw	-48
 17321  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 17322  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 17323  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 17324  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 17325  01049A  ECF6  F0A6         	call	___fldiv	;wreg free
 17326                           
 17327                           ;stkvar	_u @ sp[(-56)+12]
 17328  01049E  0ED4               	movlw	-44
 17329  0104A0  0060  F007  FFE3   	movff	btemp,plusw1
 17330  0104A6  0ED5               	movlw	-43
 17331  0104A8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17332  0104AE  0ED6               	movlw	-42
 17333  0104B0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17334  0104B6  0ED7               	movlw	-41
 17335  0104B8  0060  F013  FFE3   	movff	btemp+3,plusw1
 17336                           
 17337                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 17338                           ;stkvar	_e @ sp[(-56)+34]
 17339  0104BE  50E1               	movf	fsr1l,w,c
 17340  0104C0  0FEA               	addlw	-22
 17341  0104C2  6ED9               	movwf	fsr2l,c
 17342  0104C4  50E2               	movf	fsr1h,w,c
 17343  0104C6  6EDA               	movwf	fsr2h,c
 17344  0104C8  0EFF               	movlw	255
 17345  0104CA  22DA               	addwfc	fsr2h,f,c
 17346  0104CC  06DE               	decf	postinc2,f,c
 17347  0104CE  0E00               	movlw	0
 17348  0104D0  5ADD               	subwfb	postdec2,f,c
 17349  0104D2                     l12410:
 17350                           
 17351                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 17352                           ;stkvar	_u @ sp[(-56)+12]
 17353  0104D2  0ED4               	movlw	-44
 17354  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 17355  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 17356  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 17357  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 17358                           
 17359                           ;stkvar	_g @ sp[(-60)+16]
 17360  0104EC  0ED4               	movlw	-44
 17361  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 17362  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 17363  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 17364  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 17365  010506  EC1C  F0C9         	call	___flge	;wreg free
 17366  01050A  A001               	btfss	btemp& (0+255),0,c
 17367  01050C  D7B1               	goto	l12406
 17368  01050E                     u11430:
 17369                           
 17370                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 17371                           ;stkvar	_c @ sp[(-56)+-7]
 17372  01050E  0EC1               	movlw	-63
 17373  010510  50E3               	movf	plusw1,w,c
 17374  010512  6EE6               	movwf	postinc1,c
 17375  010514  0E00               	movlw	0
 17376  010516  6EE6               	movwf	postinc1,c
 17377  010518  EC53  F0D8         	call	_tolower	;wreg free
 17378                           
 17379                           ;stkvar	_mode @ sp[(-56)+54]
 17380  01051C  0EFE               	movlw	-2
 17381  01051E  0060  F007  FFE3   	movff	btemp,plusw1
 17382                           
 17383                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 17384                           ;stkvar	_mode @ sp[(-56)+54]
 17385                           ;stkvar	_nmode @ sp[(-56)+55]
 17386  010524  0EFE               	movlw	-2
 17387  010526  006F FF8C  F001    	movff	plusw1,btemp
 17388  01052C  0EFF               	movlw	-1
 17389  01052E  0060  F007  FFE3   	movff	btemp,plusw1
 17390                           
 17391                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 17392                           ;stkvar	_mode @ sp[(-56)+54]
 17393  010534  0EFE               	movlw	-2
 17394  010536  006F FF8C  F001    	movff	plusw1,btemp
 17395  01053C  0E67               	movlw	103
 17396  01053E  1801               	xorwf	btemp^0,w,c
 17397  010540  A4D8               	btfss	status,2,c
 17398  010542  D025               	goto	l12428
 17399                           
 17400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 17401  010544  503C               	movf	_prec^0,w,c
 17402  010546  103D               	iorwf	(_prec+1)^0,w,c
 17403  010548  A4D8               	btfss	status,2,c
 17404  01054A  D004               	goto	l12422
 17405                           
 17406                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 17407  01054C  0E00               	movlw	0
 17408  01054E  6E3D               	movwf	(_prec+1)^0,c
 17409  010550  0E01               	movlw	1
 17410  010552  6E3C               	movwf	_prec^0,c
 17411  010554                     l12422:
 17412                           
 17413                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 17414  010554  BE3D               	btfsc	(_prec+1)^0,7,c
 17415  010556  D005               	goto	u11460
 17416  010558  503D               	movf	(_prec+1)^0,w,c
 17417  01055A  E110               	bnz	l12426
 17418  01055C  043C               	decf	_prec^0,w,c
 17419  01055E  B0D8               	btfsc	status,0,c
 17420  010560  D00D               	goto	l12426
 17421  010562                     u11460:
 17422  010562  0E06               	movlw	6
 17423  010564  6E0B               	movwf	(btemp+10)^0,c
 17424  010566  0E00               	movlw	0
 17425  010568  6E0C               	movwf	(btemp+11)^0,c
 17426                           
 17427                           ;stkvar	_p @ sp[(-56)+40]
 17428  01056A  0EF0               	movlw	-16
 17429  01056C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17430  010572  0EF1               	movlw	-15
 17431  010574  0060  F033  FFE3   	movff	btemp+11,plusw1
 17432  01057A  D00C               	goto	l12434
 17433  01057C                     l12426:
 17434                           
 17435                           ;stkvar	_p @ sp[(-56)+40]
 17436  01057C  0EF0               	movlw	-16
 17437  01057E  0060  F0F3  FFE3   	movff	_prec,plusw1
 17438  010584  0EF1               	movlw	-15
 17439  010586  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 17440  01058C  D003               	goto	l12434
 17441  01058E                     l12428:
 17442                           
 17443                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 17444  01058E  AE3D               	btfss	(_prec+1)^0,7,c
 17445  010590  D7F5               	goto	l12426
 17446  010592  D7E7               	goto	u11460
 17447  010594                     l12434:
 17448                           
 17449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 17450                           ;stkvar	_mode @ sp[(-56)+54]
 17451  010594  0EFE               	movlw	-2
 17452  010596  006F FF8C  F001    	movff	plusw1,btemp
 17453  01059C  0E67               	movlw	103
 17454  01059E  1801               	xorwf	btemp^0,w,c
 17455  0105A0  A4D8               	btfss	status,2,c
 17456  0105A2  D02F               	goto	l12444
 17457                           
 17458                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 17459                           ;stkvar	_e @ sp[(-56)+34]
 17460  0105A4  0EEB               	movlw	-21
 17461  0105A6  AEE3               	btfss	plusw1,7,c
 17462  0105A8  D00E               	goto	u11490
 17463  0105AA  0EEA               	movlw	-22
 17464  0105AC  006F FF8C  F001    	movff	plusw1,btemp
 17465  0105B2  0EFC               	movlw	252
 17466  0105B4  5E01               	subwf	btemp^0,f,c
 17467  0105B6  0EEB               	movlw	-21
 17468  0105B8  006F FF8C  F001    	movff	plusw1,btemp
 17469  0105BE  0EFF               	movlw	255
 17470  0105C0  5A01               	subwfb	btemp^0,f,c
 17471  0105C2  A0D8               	btfss	status,0,c
 17472  0105C4  D018               	goto	l12442
 17473  0105C6                     u11490:
 17474                           
 17475                           ;stkvar	_e @ sp[(-56)+34]
 17476                           ;stkvar	_p @ sp[(-56)+40]
 17477  0105C6  0EF0               	movlw	-16
 17478  0105C8  50E3               	movf	plusw1,w,c
 17479  0105CA  0FFF               	addlw	255
 17480  0105CC  6E0B               	movwf	(btemp+10)^0,c
 17481  0105CE  0EF1               	movlw	-15
 17482  0105D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 17483  0105D6  0EFF               	movlw	255
 17484  0105D8  220C               	addwfc	(btemp+11)^0,f,c
 17485  0105DA  0EEA               	movlw	-22
 17486  0105DC  50E3               	movf	plusw1,w,c
 17487  0105DE  5C0B               	subwf	(btemp+10)^0,w,c
 17488  0105E0  500C               	movf	(btemp+11)^0,w,c
 17489  0105E2  0A80               	xorlw	128
 17490  0105E4  6E01               	movwf	btemp^0,c
 17491  0105E6  0EEB               	movlw	-21
 17492  0105E8  50E3               	movf	plusw1,w,c
 17493  0105EA  0A80               	xorlw	128
 17494  0105EC  5801               	subwfb	btemp^0,w,c
 17495  0105EE  A0D8               	btfss	status,0,c
 17496  0105F0  D002               	goto	l12442
 17497                           
 17498                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 17499  0105F2  0E66               	movlw	102
 17500  0105F4  D001               	goto	L18
 17501  0105F6                     l12442:
 17502                           
 17503                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 17504  0105F6  0E65               	movlw	101
 17505  0105F8                     L18:
 17506  0105F8  6E0C               	movwf	(btemp+11)^0,c
 17507                           
 17508                           ;stkvar	_nmode @ sp[(-56)+55]
 17509  0105FA  0EFF               	movlw	-1
 17510  0105FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 17511  010602                     l12444:
 17512                           
 17513                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 17514                           ;stkvar	_p @ sp[(-56)+40]
 17515                           ;stkvar	_m @ sp[(-56)+48]
 17516  010602  0EF0               	movlw	-16
 17517  010604  006F FF8C  F001    	movff	plusw1,btemp
 17518  01060A  0EF8               	movlw	-8
 17519  01060C  0060  F007  FFE3   	movff	btemp,plusw1
 17520  010612  0EF1               	movlw	-15
 17521  010614  006F FF8C  F001    	movff	plusw1,btemp
 17522  01061A  0EF9               	movlw	-7
 17523  01061C  0060  F007  FFE3   	movff	btemp,plusw1
 17524                           
 17525                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 17526                           ;stkvar	_mode @ sp[(-56)+54]
 17527  010622  0EFE               	movlw	-2
 17528  010624  006F FF8C  F001    	movff	plusw1,btemp
 17529  01062A  0E67               	movlw	103
 17530  01062C  1801               	xorwf	btemp^0,w,c
 17531  01062E  A4D8               	btfss	status,2,c
 17532  010630  D00B               	goto	u11530
 17533                           
 17534                           ;stkvar	_nmode @ sp[(-56)+55]
 17535  010632  0EFF               	movlw	-1
 17536  010634  006F FF8C  F001    	movff	plusw1,btemp
 17537  01063A  0E66               	movlw	102
 17538  01063C  1801               	xorwf	btemp^0,w,c
 17539  01063E  A4D8               	btfss	status,2,c
 17540  010640  D014               	goto	l2331
 17541                           
 17542                           ;stkvar	_e @ sp[(-56)+34]
 17543  010642  0EEB               	movlw	-21
 17544  010644  AEE3               	btfss	plusw1,7,c
 17545  010646  D011               	goto	l2331
 17546  010648                     u11530:
 17547                           
 17548                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 17549                           ;stkvar	_m @ sp[(-56)+48]
 17550  010648  0EF8               	movlw	-8
 17551  01064A  50E3               	movf	plusw1,w,c
 17552  01064C  0F01               	addlw	1
 17553  01064E  6E01               	movwf	btemp^0,c
 17554  010650  0EF8               	movlw	-8
 17555  010652  0060  F007  FFE3   	movff	btemp,plusw1
 17556  010658  6A01               	clrf	btemp^0,c
 17557  01065A  0EF9               	movlw	-7
 17558  01065C  50E3               	movf	plusw1,w,c
 17559  01065E  2001               	addwfc	btemp^0,w,c
 17560  010660  6E01               	movwf	btemp^0,c
 17561  010662  0EF9               	movlw	-7
 17562  010664  0060  F007  FFE3   	movff	btemp,plusw1
 17563  01066A                     l2331:
 17564                           
 17565                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 17566                           ;stkvar	_nmode @ sp[(-56)+55]
 17567  01066A  0EFF               	movlw	-1
 17568  01066C  006F FF8C  F001    	movff	plusw1,btemp
 17569  010672  0E66               	movlw	102
 17570  010674  1801               	xorwf	btemp^0,w,c
 17571  010676  A4D8               	btfss	status,2,c
 17572  010678  D03B               	goto	l12464
 17573                           
 17574                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 17575                           ;stkvar	_e @ sp[(-56)+34]
 17576  01067A  0EEB               	movlw	-21
 17577  01067C  AEE3               	btfss	plusw1,7,c
 17578  01067E  D01C               	goto	l12460
 17579                           
 17580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 17581  010680  0E00               	movlw	0
 17582  010682  6E09               	movwf	(btemp+8)^0,c
 17583  010684  0E00               	movlw	0
 17584  010686  6E0A               	movwf	(btemp+9)^0,c
 17585  010688  0E80               	movlw	128
 17586  01068A  6E0B               	movwf	(btemp+10)^0,c
 17587  01068C  0E3F               	movlw	63
 17588  01068E  6E0C               	movwf	(btemp+11)^0,c
 17589                           
 17590                           ;stkvar	_u @ sp[(-56)+12]
 17591  010690  0ED4               	movlw	-44
 17592  010692  0060  F027  FFE3   	movff	btemp+8,plusw1
 17593  010698  0ED5               	movlw	-43
 17594  01069A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17595  0106A0  0ED6               	movlw	-42
 17596  0106A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17597  0106A8  0ED7               	movlw	-41
 17598  0106AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 17599                           
 17600                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 17601                           ;stkvar	_e @ sp[(-56)+34]
 17602  0106B0  0EEA               	movlw	-22
 17603  0106B2  6AE3               	clrf	plusw1,c
 17604  0106B4  0EEB               	movlw	-21
 17605  0106B6  6AE3               	clrf	plusw1,c
 17606  0106B8                     l12460:
 17607                           
 17608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 17609                           ;stkvar	_mode @ sp[(-56)+54]
 17610  0106B8  0EFE               	movlw	-2
 17611  0106BA  006F FF8C  F001    	movff	plusw1,btemp
 17612  0106C0  0E67               	movlw	103
 17613  0106C2  1801               	xorwf	btemp^0,w,c
 17614  0106C4  B4D8               	btfsc	status,2,c
 17615  0106C6  D014               	goto	l12464
 17616                           
 17617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 17618                           ;stkvar	_e @ sp[(-56)+34]
 17619                           ;stkvar	_m @ sp[(-56)+48]
 17620  0106C8  0EF8               	movlw	-8
 17621  0106CA  50E3               	movf	plusw1,w,c
 17622  0106CC  6E01               	movwf	btemp^0,c
 17623  0106CE  0EEA               	movlw	-22
 17624  0106D0  50E3               	movf	plusw1,w,c
 17625  0106D2  2601               	addwf	btemp^0,f,c
 17626  0106D4  0EF8               	movlw	-8
 17627  0106D6  0060  F007  FFE3   	movff	btemp,plusw1
 17628  0106DC  0EF9               	movlw	-7
 17629  0106DE  50E3               	movf	plusw1,w,c
 17630  0106E0  6E01               	movwf	btemp^0,c
 17631  0106E2  0EEB               	movlw	-21
 17632  0106E4  50E3               	movf	plusw1,w,c
 17633  0106E6  2201               	addwfc	btemp^0,f,c
 17634  0106E8  0EF9               	movlw	-7
 17635  0106EA  0060  F007  FFE3   	movff	btemp,plusw1
 17636  0106F0                     l12464:
 17637                           
 17638                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 17639                           ;stkvar	_i @ sp[(-56)+36]
 17640  0106F0  0EEC               	movlw	-20
 17641  0106F2  6AE3               	clrf	plusw1,c
 17642  0106F4  0EED               	movlw	-19
 17643  0106F6  6AE3               	clrf	plusw1,c
 17644                           
 17645                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 17646                           ;stkvar	_g @ sp[(-56)+16]
 17647  0106F8  0ED8               	movlw	-40
 17648  0106FA  006F FF8C  F009    	movff	plusw1,btemp+8
 17649  010700  0ED9               	movlw	-39
 17650  010702  006F FF8C  F00A    	movff	plusw1,btemp+9
 17651  010708  0EDA               	movlw	-38
 17652  01070A  006F FF8C  F00B    	movff	plusw1,btemp+10
 17653  010710  0EDB               	movlw	-37
 17654  010712  006F FF8C  F00C    	movff	plusw1,btemp+11
 17655                           
 17656                           ;stkvar	_h @ sp[(-56)+24]
 17657  010718  0EE0               	movlw	-32
 17658  01071A  0060  F027  FFE3   	movff	btemp+8,plusw1
 17659  010720  0EE1               	movlw	-31
 17660  010722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17661  010728  0EE2               	movlw	-30
 17662  01072A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17663  010730  0EE3               	movlw	-29
 17664  010732  0060  F033  FFE3   	movff	btemp+11,plusw1
 17665                           
 17666                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 17667                           ;stkvar	_u @ sp[(-56)+12]
 17668  010738  0ED4               	movlw	-44
 17669  01073A  006F FF8C  F009    	movff	plusw1,btemp+8
 17670  010740  0ED5               	movlw	-43
 17671  010742  006F FF8C  F00A    	movff	plusw1,btemp+9
 17672  010748  0ED6               	movlw	-42
 17673  01074A  006F FF8C  F00B    	movff	plusw1,btemp+10
 17674  010750  0ED7               	movlw	-41
 17675  010752  006F FF8C  F00C    	movff	plusw1,btemp+11
 17676                           
 17677                           ;stkvar	_ou @ sp[(-56)+28]
 17678  010758  0EE4               	movlw	-28
 17679  01075A  0060  F027  FFE3   	movff	btemp+8,plusw1
 17680  010760  0EE5               	movlw	-27
 17681  010762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17682  010768  0EE6               	movlw	-26
 17683  01076A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17684  010770  0EE7               	movlw	-25
 17685  010772  0060  F033  FFE3   	movff	btemp+11,plusw1
 17686                           
 17687                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 17688  010778  D0D6               	goto	l12480
 17689  01077A                     l12470:
 17690                           
 17691                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 17692                           ;stkvar	_u @ sp[(-56)+12]
 17693  01077A  0ED4               	movlw	-44
 17694  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 17695  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 17696  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 17697  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 17698                           
 17699                           ;stkvar	_h @ sp[(-60)+24]
 17700  010794  0EDC               	movlw	-36
 17701  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 17702  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 17703  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 17704  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 17705  0107AE  ECF6  F0A6         	call	___fldiv	;wreg free
 17706  0107B2  0060  F007  FFE6   	movff	btemp,postinc1
 17707  0107B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17708  0107BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17709  0107C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 17710  0107CA  EC54  F0B2         	call	_floorf	;wreg free
 17711                           
 17712                           ;stkvar	_l @ sp[(-56)+20]
 17713  0107CE  0EDC               	movlw	-36
 17714  0107D0  0060  F007  FFE3   	movff	btemp,plusw1
 17715  0107D6  0EDD               	movlw	-35
 17716  0107D8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17717  0107DE  0EDE               	movlw	-34
 17718  0107E0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17719  0107E6  0EDF               	movlw	-33
 17720  0107E8  0060  F013  FFE3   	movff	btemp+3,plusw1
 17721                           
 17722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 17723                           ;stkvar	_l @ sp[(-56)+20]
 17724  0107EE  0EDC               	movlw	-36
 17725  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 17726  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 17727  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 17728  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 17729  010808  EC63  F0C8         	call	___fltol	;wreg free
 17730  01080C  0060  F004  F00B   	movff	btemp,btemp+10
 17731  010812  0060  F008  F00C   	movff	btemp+1,btemp+11
 17732                           
 17733                           ;stkvar	_d @ sp[(-56)+44]
 17734  010818  0EF4               	movlw	-12
 17735  01081A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17736  010820  0EF5               	movlw	-11
 17737  010822  0060  F033  FFE3   	movff	btemp+11,plusw1
 17738                           
 17739                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 17740                           ;stkvar	_u @ sp[(-56)+12]
 17741  010828  0ED4               	movlw	-44
 17742  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 17743  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 17744  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 17745  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 17746                           
 17747                           ;stkvar	_l @ sp[(-60)+20]
 17748  010842  0ED8               	movlw	-40
 17749  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 17750  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 17751  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 17752  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 17753  01085C  EC03  F09F         	call	___flmul	;wreg free
 17754  010860  0060  F007  FFE6   	movff	btemp,postinc1
 17755  010866  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17756  01086C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17757  010872  0060  F013  FFE6   	movff	btemp+3,postinc1
 17758                           
 17759                           ;stkvar	_h @ sp[(-60)+24]
 17760  010878  0EDC               	movlw	-36
 17761  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 17762  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 17763  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 17764  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 17765  010892  EC4C  F0DD         	call	___flsub	;wreg free
 17766                           
 17767                           ;stkvar	_h @ sp[(-56)+24]
 17768  010896  0EE0               	movlw	-32
 17769  010898  0060  F007  FFE3   	movff	btemp,plusw1
 17770  01089E  0EE1               	movlw	-31
 17771  0108A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17772  0108A6  0EE2               	movlw	-30
 17773  0108A8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17774  0108AE  0EE3               	movlw	-29
 17775  0108B0  0060  F013  FFE3   	movff	btemp+3,plusw1
 17776                           
 17777                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 17778  0108B6  0E00               	movlw	0
 17779  0108B8  6EE6               	movwf	postinc1,c
 17780  0108BA  0E00               	movlw	0
 17781  0108BC  6EE6               	movwf	postinc1,c
 17782  0108BE  0E20               	movlw	32
 17783  0108C0  6EE6               	movwf	postinc1,c
 17784  0108C2  0E41               	movlw	65
 17785  0108C4  6EE6               	movwf	postinc1,c
 17786                           
 17787                           ;stkvar	_u @ sp[(-60)+12]
 17788  0108C6  0ED0               	movlw	-48
 17789  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 17790  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 17791  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 17792  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 17793  0108E0  ECF6  F0A6         	call	___fldiv	;wreg free
 17794                           
 17795                           ;stkvar	_u @ sp[(-56)+12]
 17796  0108E4  0ED4               	movlw	-44
 17797  0108E6  0060  F007  FFE3   	movff	btemp,plusw1
 17798  0108EC  0ED5               	movlw	-43
 17799  0108EE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17800  0108F4  0ED6               	movlw	-42
 17801  0108F6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17802  0108FC  0ED7               	movlw	-41
 17803  0108FE  0060  F013  FFE3   	movff	btemp+3,plusw1
 17804                           
 17805                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 17806                           ;stkvar	_i @ sp[(-56)+36]
 17807  010904  0EEC               	movlw	-20
 17808  010906  50E3               	movf	plusw1,w,c
 17809  010908  0F01               	addlw	1
 17810  01090A  6E01               	movwf	btemp^0,c
 17811  01090C  0EEC               	movlw	-20
 17812  01090E  0060  F007  FFE3   	movff	btemp,plusw1
 17813  010914  6A01               	clrf	btemp^0,c
 17814  010916  0EED               	movlw	-19
 17815  010918  50E3               	movf	plusw1,w,c
 17816  01091A  2001               	addwfc	btemp^0,w,c
 17817  01091C  6E01               	movwf	btemp^0,c
 17818  01091E  0EED               	movlw	-19
 17819  010920  0060  F007  FFE3   	movff	btemp,plusw1
 17820  010926                     l12480:
 17821                           
 17822                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 17823                           ;stkvar	_m @ sp[(-56)+48]
 17824                           ;stkvar	_i @ sp[(-56)+36]
 17825  010926  50E1               	movf	fsr1l,w,c
 17826  010928  0FEC               	addlw	-20
 17827  01092A  6ED9               	movwf	fsr2l,c
 17828  01092C  50E2               	movf	fsr1h,w,c
 17829  01092E  6EDA               	movwf	fsr2h,c
 17830  010930  0EFF               	movlw	255
 17831  010932  22DA               	addwfc	fsr2h,f,c
 17832  010934  0EF8               	movlw	-8
 17833  010936  50E3               	movf	plusw1,w,c
 17834  010938  5CDE               	subwf	postinc2,w,c
 17835  01093A  50DE               	movf	postinc2,w,c
 17836  01093C  0A80               	xorlw	128
 17837  01093E  6E01               	movwf	btemp^0,c
 17838  010940  0EF9               	movlw	-7
 17839  010942  50E3               	movf	plusw1,w,c
 17840  010944  0A80               	xorlw	128
 17841  010946  5801               	subwfb	btemp^0,w,c
 17842  010948  A0D8               	btfss	status,0,c
 17843  01094A  D717               	goto	l12470
 17844                           
 17845                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 17846  01094C  0E00               	movlw	0
 17847  01094E  6EE6               	movwf	postinc1,c
 17848  010950  0E00               	movlw	0
 17849  010952  6EE6               	movwf	postinc1,c
 17850  010954  0EA0               	movlw	160
 17851  010956  6EE6               	movwf	postinc1,c
 17852  010958  0E40               	movlw	64
 17853  01095A  6EE6               	movwf	postinc1,c
 17854                           
 17855                           ;stkvar	_u @ sp[(-60)+12]
 17856  01095C  0ED0               	movlw	-48
 17857  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 17858  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 17859  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 17860  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 17861  010976  EC03  F09F         	call	___flmul	;wreg free
 17862                           
 17863                           ;stkvar	_l @ sp[(-56)+20]
 17864  01097A  0EDC               	movlw	-36
 17865  01097C  0060  F007  FFE3   	movff	btemp,plusw1
 17866  010982  0EDD               	movlw	-35
 17867  010984  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17868  01098A  0EDE               	movlw	-34
 17869  01098C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17870  010992  0EDF               	movlw	-33
 17871  010994  0060  F013  FFE3   	movff	btemp+3,plusw1
 17872                           
 17873                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 17874                           ;stkvar	_l @ sp[(-56)+20]
 17875  01099A  0EDC               	movlw	-36
 17876  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 17877  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 17878  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 17879  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 17880                           
 17881                           ;stkvar	_h @ sp[(-60)+24]
 17882  0109B4  0EDC               	movlw	-36
 17883  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 17884  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 17885  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 17886  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 17887  0109CE  EC1C  F0C9         	call	___flge	;wreg free
 17888  0109D2  A001               	btfss	btemp& (0+255),0,c
 17889  0109D4  D021               	goto	u11600
 17890                           
 17891                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 17892                           ;stkvar	_l @ sp[(-56)+20]
 17893                           
 17894                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 17895                           
 17896                           ;stkvar	_l @ sp[(-56)+20]
 17897                           
 17898                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 17899  0109D6  0EDC               	movlw	-36
 17900  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 17901  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 17902  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 17903  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 17904                           
 17905                           ;stkvar	_h @ sp[(-60)+24]
 17906  0109F0  0EDC               	movlw	-36
 17907  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 17908  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 17909  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 17910  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 17911  010A0A  EC7F  F0D3         	call	___fleq	;wreg free
 17912  010A0E  A001               	btfss	btemp& (0+255),0,c
 17913  010A10  D01B               	goto	l12494
 17914                           
 17915                           ;stkvar	_d @ sp[(-56)+44]
 17916  010A12  0EF4               	movlw	-12
 17917  010A14  B0E3               	btfsc	plusw1,0,c
 17918  010A16  D018               	goto	l12494
 17919  010A18                     u11600:
 17920                           
 17921                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 17922  010A18  0E00               	movlw	0
 17923  010A1A  6E09               	movwf	(btemp+8)^0,c
 17924  010A1C  0E00               	movlw	0
 17925  010A1E  6E0A               	movwf	(btemp+9)^0,c
 17926  010A20  0E00               	movlw	0
 17927  010A22  6E0B               	movwf	(btemp+10)^0,c
 17928  010A24  0E00               	movlw	0
 17929  010A26  6E0C               	movwf	(btemp+11)^0,c
 17930                           
 17931                           ;stkvar	_l @ sp[(-56)+20]
 17932  010A28  0EDC               	movlw	-36
 17933  010A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 17934  010A30  0EDD               	movlw	-35
 17935  010A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17936  010A38  0EDE               	movlw	-34
 17937  010A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17938  010A40  0EDF               	movlw	-33
 17939  010A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 17940  010A48                     l12494:
 17941                           
 17942                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 17943                           ;stkvar	_l @ sp[(-56)+20]
 17944  010A48  0EDC               	movlw	-36
 17945  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 17946  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 17947  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 17948  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 17949                           
 17950                           ;stkvar	_g @ sp[(-60)+16]
 17951  010A62  0ED4               	movlw	-44
 17952  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 17953  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 17954  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 17955  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 17956  010A7C  EC18  F0A3         	call	___fladd	;wreg free
 17957                           
 17958                           ;stkvar	_h @ sp[(-56)+24]
 17959  010A80  0EE0               	movlw	-32
 17960  010A82  0060  F007  FFE3   	movff	btemp,plusw1
 17961  010A88  0EE1               	movlw	-31
 17962  010A8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17963  010A90  0EE2               	movlw	-30
 17964  010A92  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17965  010A98  0EE3               	movlw	-29
 17966  010A9A  0060  F013  FFE3   	movff	btemp+3,plusw1
 17967                           
 17968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 17969                           ;stkvar	_ou @ sp[(-56)+28]
 17970  010AA0  0EE4               	movlw	-28
 17971  010AA2  006F FF8C  F009    	movff	plusw1,btemp+8
 17972  010AA8  0EE5               	movlw	-27
 17973  010AAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 17974  010AB0  0EE6               	movlw	-26
 17975  010AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 17976  010AB8  0EE7               	movlw	-25
 17977  010ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 17978                           
 17979                           ;stkvar	_u @ sp[(-56)+12]
 17980  010AC0  0ED4               	movlw	-44
 17981  010AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 17982  010AC8  0ED5               	movlw	-43
 17983  010ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17984  010AD0  0ED6               	movlw	-42
 17985  010AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17986  010AD8  0ED7               	movlw	-41
 17987  010ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 17988                           
 17989                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 17990                           ;stkvar	_nmode @ sp[(-56)+55]
 17991  010AE0  0EFF               	movlw	-1
 17992  010AE2  006F FF8C  F001    	movff	plusw1,btemp
 17993  010AE8  0E65               	movlw	101
 17994  010AEA  1801               	xorwf	btemp^0,w,c
 17995  010AEC  B4D8               	btfsc	status,2,c
 17996  010AEE  D011               	goto	l12502
 17997                           
 17998                           ;stkvar	_e @ sp[(-56)+34]
 17999                           ;stkvar	_ne @ sp[(-56)+46]
 18000  010AF0  0EEA               	movlw	-22
 18001  010AF2  006F FF8C  F001    	movff	plusw1,btemp
 18002  010AF8  0EF6               	movlw	-10
 18003  010AFA  0060  F007  FFE3   	movff	btemp,plusw1
 18004  010B00  0EEB               	movlw	-21
 18005  010B02  006F FF8C  F001    	movff	plusw1,btemp
 18006  010B08  0EF7               	movlw	-9
 18007  010B0A  0060  F007  FFE3   	movff	btemp,plusw1
 18008  010B10  D004               	goto	l2346
 18009  010B12                     l12502:
 18010                           
 18011                           ;stkvar	_ne @ sp[(-56)+46]
 18012  010B12  0EF6               	movlw	-10
 18013  010B14  6AE3               	clrf	plusw1,c
 18014  010B16  0EF7               	movlw	-9
 18015  010B18  6AE3               	clrf	plusw1,c
 18016  010B1A                     l2346:
 18017                           
 18018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 18019                           ;stkvar	_pp @ sp[(-56)+50]
 18020  010B1A  0EFA               	movlw	-6
 18021  010B1C  6AE3               	clrf	plusw1,c
 18022  010B1E  0EFB               	movlw	-5
 18023  010B20  6AE3               	clrf	plusw1,c
 18024                           
 18025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 18026                           ;stkvar	_t @ sp[(-56)+52]
 18027  010B22  0EFC               	movlw	-4
 18028  010B24  6AE3               	clrf	plusw1,c
 18029  010B26  0EFD               	movlw	-3
 18030  010B28  6AE3               	clrf	plusw1,c
 18031                           
 18032                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 18033                           ;stkvar	_i @ sp[(-56)+36]
 18034  010B2A  0EEC               	movlw	-20
 18035  010B2C  6AE3               	clrf	plusw1,c
 18036  010B2E  0EED               	movlw	-19
 18037  010B30  6AE3               	clrf	plusw1,c
 18038                           
 18039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 18040  010B32  D1B7               	goto	l12554
 18041  010B34                     l12504:
 18042                           
 18043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 18044                           ;stkvar	_u @ sp[(-56)+12]
 18045  010B34  0ED4               	movlw	-44
 18046  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 18047  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 18048  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 18049  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 18050                           
 18051                           ;stkvar	_h @ sp[(-60)+24]
 18052  010B4E  0EDC               	movlw	-36
 18053  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 18054  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 18055  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 18056  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 18057  010B68  ECF6  F0A6         	call	___fldiv	;wreg free
 18058  010B6C  0060  F007  FFE6   	movff	btemp,postinc1
 18059  010B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 18060  010B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 18061  010B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 18062  010B84  EC54  F0B2         	call	_floorf	;wreg free
 18063                           
 18064                           ;stkvar	_l @ sp[(-56)+20]
 18065  010B88  0EDC               	movlw	-36
 18066  010B8A  0060  F007  FFE3   	movff	btemp,plusw1
 18067  010B90  0EDD               	movlw	-35
 18068  010B92  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18069  010B98  0EDE               	movlw	-34
 18070  010B9A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18071  010BA0  0EDF               	movlw	-33
 18072  010BA2  0060  F013  FFE3   	movff	btemp+3,plusw1
 18073                           
 18074                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 18075                           ;stkvar	_l @ sp[(-56)+20]
 18076  010BA8  0EDC               	movlw	-36
 18077  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 18078  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 18079  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 18080  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 18081  010BC2  EC63  F0C8         	call	___fltol	;wreg free
 18082  010BC6  0060  F004  F00B   	movff	btemp,btemp+10
 18083  010BCC  0060  F008  F00C   	movff	btemp+1,btemp+11
 18084                           
 18085                           ;stkvar	_d @ sp[(-56)+44]
 18086  010BD2  0EF4               	movlw	-12
 18087  010BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18088  010BDA  0EF5               	movlw	-11
 18089  010BDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 18090                           
 18091                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 18092  010BE2  B83E               	btfsc	_flags^0,4,c
 18093  010BE4  D026               	goto	l12518
 18094                           
 18095                           ;stkvar	_d @ sp[(-56)+44]
 18096  010BE6  0EF4               	movlw	-12
 18097  010BE8  006F FF8C  F001    	movff	plusw1,btemp
 18098  010BEE  0EF5               	movlw	-11
 18099  010BF0  50E3               	movf	plusw1,w,c
 18100  010BF2  1001               	iorwf	btemp^0,w,c
 18101  010BF4  A4D8               	btfss	status,2,c
 18102  010BF6  D01D               	goto	l12518
 18103                           
 18104                           ;stkvar	_mode @ sp[(-56)+54]
 18105  010BF8  0EFE               	movlw	-2
 18106  010BFA  006F FF8C  F001    	movff	plusw1,btemp
 18107  010C00  0E67               	movlw	103
 18108  010C02  1801               	xorwf	btemp^0,w,c
 18109  010C04  A4D8               	btfss	status,2,c
 18110  010C06  D015               	goto	l12518
 18111                           
 18112                           ;stkvar	_ne @ sp[(-56)+46]
 18113  010C08  0EF7               	movlw	-9
 18114  010C0A  AEE3               	btfss	plusw1,7,c
 18115  010C0C  D012               	goto	l12518
 18116                           
 18117                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 18118                           ;stkvar	_t @ sp[(-56)+52]
 18119  010C0E  0EFC               	movlw	-4
 18120  010C10  50E3               	movf	plusw1,w,c
 18121  010C12  0F01               	addlw	1
 18122  010C14  6E01               	movwf	btemp^0,c
 18123  010C16  0EFC               	movlw	-4
 18124  010C18  0060  F007  FFE3   	movff	btemp,plusw1
 18125  010C1E  6A01               	clrf	btemp^0,c
 18126  010C20  0EFD               	movlw	-3
 18127  010C22  50E3               	movf	plusw1,w,c
 18128  010C24  2001               	addwfc	btemp^0,w,c
 18129  010C26  6E01               	movwf	btemp^0,c
 18130  010C28  0EFD               	movlw	-3
 18131  010C2A  0060  F007  FFE3   	movff	btemp,plusw1
 18132                           
 18133                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 18134  010C30  D0AF               	goto	l12546
 18135  010C32                     l12518:
 18136                           
 18137                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 18138                           ;stkvar	_pp @ sp[(-56)+50]
 18139  010C32  0EFA               	movlw	-6
 18140  010C34  006F FF8C  F001    	movff	plusw1,btemp
 18141  010C3A  0EFB               	movlw	-5
 18142  010C3C  50E3               	movf	plusw1,w,c
 18143  010C3E  1001               	iorwf	btemp^0,w,c
 18144  010C40  A4D8               	btfss	status,2,c
 18145  010C42  D070               	goto	l12538
 18146                           
 18147                           ;stkvar	_ne @ sp[(-56)+46]
 18148  010C44  0EF7               	movlw	-9
 18149  010C46  AEE3               	btfss	plusw1,7,c
 18150  010C48  D06D               	goto	l12538
 18151                           
 18152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 18153                           ;stkvar	_n @ sp[(-56)+32]
 18154  010C4A  0EE8               	movlw	-24
 18155  010C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 18156  010C52  0EE9               	movlw	-23
 18157  010C54  006F FF8C  F00C    	movff	plusw1,btemp+11
 18158  010C5A  0E97               	movlw	low _dbuf
 18159  010C5C  240B               	addwf	(btemp+10)^0,w,c
 18160  010C5E  6ED9               	movwf	fsr2l,c
 18161  010C60  0E02               	movlw	high _dbuf
 18162  010C62  200C               	addwfc	(btemp+11)^0,w,c
 18163  010C64  6EDA               	movwf	fsr2h,c
 18164  010C66  0E2E               	movlw	46
 18165  010C68  6EDF               	movwf	indf2,c
 18166                           
 18167                           ;stkvar	_n @ sp[(-56)+32]
 18168  010C6A  0EE8               	movlw	-24
 18169  010C6C  50E3               	movf	plusw1,w,c
 18170  010C6E  0F01               	addlw	1
 18171  010C70  6E01               	movwf	btemp^0,c
 18172  010C72  0EE8               	movlw	-24
 18173  010C74  0060  F007  FFE3   	movff	btemp,plusw1
 18174  010C7A  6A01               	clrf	btemp^0,c
 18175  010C7C  0EE9               	movlw	-23
 18176  010C7E  50E3               	movf	plusw1,w,c
 18177  010C80  2001               	addwfc	btemp^0,w,c
 18178  010C82  6E01               	movwf	btemp^0,c
 18179  010C84  0EE9               	movlw	-23
 18180  010C86  0060  F007  FFE3   	movff	btemp,plusw1
 18181                           
 18182                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 18183                           ;stkvar	_w @ sp[(-56)+38]
 18184  010C8C  50E1               	movf	fsr1l,w,c
 18185  010C8E  0FEE               	addlw	-18
 18186  010C90  6ED9               	movwf	fsr2l,c
 18187  010C92  50E2               	movf	fsr1h,w,c
 18188  010C94  6EDA               	movwf	fsr2h,c
 18189  010C96  0EFF               	movlw	255
 18190  010C98  22DA               	addwfc	fsr2h,f,c
 18191  010C9A  06DE               	decf	postinc2,f,c
 18192  010C9C  0E00               	movlw	0
 18193  010C9E  5ADD               	subwfb	postdec2,f,c
 18194                           
 18195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 18196  010CA0  0E01               	movlw	1
 18197  010CA2  6E0B               	movwf	(btemp+10)^0,c
 18198  010CA4  0E00               	movlw	0
 18199  010CA6  6E0C               	movwf	(btemp+11)^0,c
 18200                           
 18201                           ;stkvar	_pp @ sp[(-56)+50]
 18202  010CA8  0EFA               	movlw	-6
 18203  010CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18204  010CB0  0EFB               	movlw	-5
 18205  010CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 18206  010CB8  D035               	goto	l12538
 18207  010CBA                     l12530:
 18208                           
 18209                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 18210                           ;stkvar	_n @ sp[(-56)+32]
 18211  010CBA  0EE8               	movlw	-24
 18212  010CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 18213  010CC2  0EE9               	movlw	-23
 18214  010CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 18215  010CCA  0E97               	movlw	low _dbuf
 18216  010CCC  240B               	addwf	(btemp+10)^0,w,c
 18217  010CCE  6ED9               	movwf	fsr2l,c
 18218  010CD0  0E02               	movlw	high _dbuf
 18219  010CD2  200C               	addwfc	(btemp+11)^0,w,c
 18220  010CD4  6EDA               	movwf	fsr2h,c
 18221  010CD6  0E30               	movlw	48
 18222  010CD8  6EDF               	movwf	indf2,c
 18223                           
 18224                           ;stkvar	_n @ sp[(-56)+32]
 18225  010CDA  0EE8               	movlw	-24
 18226  010CDC  50E3               	movf	plusw1,w,c
 18227  010CDE  0F01               	addlw	1
 18228  010CE0  6E01               	movwf	btemp^0,c
 18229  010CE2  0EE8               	movlw	-24
 18230  010CE4  0060  F007  FFE3   	movff	btemp,plusw1
 18231  010CEA  6A01               	clrf	btemp^0,c
 18232  010CEC  0EE9               	movlw	-23
 18233  010CEE  50E3               	movf	plusw1,w,c
 18234  010CF0  2001               	addwfc	btemp^0,w,c
 18235  010CF2  6E01               	movwf	btemp^0,c
 18236  010CF4  0EE9               	movlw	-23
 18237  010CF6  0060  F007  FFE3   	movff	btemp,plusw1
 18238                           
 18239                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 18240                           ;stkvar	_w @ sp[(-56)+38]
 18241  010CFC  50E1               	movf	fsr1l,w,c
 18242  010CFE  0FEE               	addlw	-18
 18243  010D00  6ED9               	movwf	fsr2l,c
 18244  010D02  50E2               	movf	fsr1h,w,c
 18245  010D04  6EDA               	movwf	fsr2h,c
 18246  010D06  0EFF               	movlw	255
 18247  010D08  22DA               	addwfc	fsr2h,f,c
 18248  010D0A  06DE               	decf	postinc2,f,c
 18249  010D0C  0E00               	movlw	0
 18250  010D0E  5ADD               	subwfb	postdec2,f,c
 18251                           
 18252                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 18253                           ;stkvar	_t @ sp[(-56)+52]
 18254  010D10  50E1               	movf	fsr1l,w,c
 18255  010D12  0FFC               	addlw	-4
 18256  010D14  6ED9               	movwf	fsr2l,c
 18257  010D16  50E2               	movf	fsr1h,w,c
 18258  010D18  6EDA               	movwf	fsr2h,c
 18259  010D1A  0EFF               	movlw	255
 18260  010D1C  22DA               	addwfc	fsr2h,f,c
 18261  010D1E  06DE               	decf	postinc2,f,c
 18262  010D20  0E00               	movlw	0
 18263  010D22  5ADD               	subwfb	postdec2,f,c
 18264  010D24                     l12538:
 18265                           
 18266                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 18267                           ;stkvar	_t @ sp[(-56)+52]
 18268  010D24  0EFC               	movlw	-4
 18269  010D26  006F FF8C  F001    	movff	plusw1,btemp
 18270  010D2C  0EFD               	movlw	-3
 18271  010D2E  50E3               	movf	plusw1,w,c
 18272  010D30  1001               	iorwf	btemp^0,w,c
 18273  010D32  A4D8               	btfss	status,2,c
 18274  010D34  D7C2               	goto	l12530
 18275                           
 18276                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 18277                           ;stkvar	_n @ sp[(-56)+32]
 18278  010D36  0EE8               	movlw	-24
 18279  010D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 18280  010D3E  0EE9               	movlw	-23
 18281  010D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 18282  010D46  0E97               	movlw	low _dbuf
 18283  010D48  240B               	addwf	(btemp+10)^0,w,c
 18284  010D4A  6ED9               	movwf	fsr2l,c
 18285  010D4C  0E02               	movlw	high _dbuf
 18286  010D4E  200C               	addwfc	(btemp+11)^0,w,c
 18287  010D50  6EDA               	movwf	fsr2h,c
 18288                           
 18289                           ;stkvar	_d @ sp[(-56)+44]
 18290  010D52  0EF4               	movlw	-12
 18291  010D54  50E3               	movf	plusw1,w,c
 18292  010D56  0F30               	addlw	48
 18293  010D58  6EDF               	movwf	indf2,c
 18294                           
 18295                           ;stkvar	_n @ sp[(-56)+32]
 18296  010D5A  0EE8               	movlw	-24
 18297  010D5C  50E3               	movf	plusw1,w,c
 18298  010D5E  0F01               	addlw	1
 18299  010D60  6E01               	movwf	btemp^0,c
 18300  010D62  0EE8               	movlw	-24
 18301  010D64  0060  F007  FFE3   	movff	btemp,plusw1
 18302  010D6A  6A01               	clrf	btemp^0,c
 18303  010D6C  0EE9               	movlw	-23
 18304  010D6E  50E3               	movf	plusw1,w,c
 18305  010D70  2001               	addwfc	btemp^0,w,c
 18306  010D72  6E01               	movwf	btemp^0,c
 18307  010D74  0EE9               	movlw	-23
 18308  010D76  0060  F007  FFE3   	movff	btemp,plusw1
 18309                           
 18310                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 18311                           ;stkvar	_w @ sp[(-56)+38]
 18312  010D7C  50E1               	movf	fsr1l,w,c
 18313  010D7E  0FEE               	addlw	-18
 18314  010D80  6ED9               	movwf	fsr2l,c
 18315  010D82  50E2               	movf	fsr1h,w,c
 18316  010D84  6EDA               	movwf	fsr2h,c
 18317  010D86  0EFF               	movlw	255
 18318  010D88  22DA               	addwfc	fsr2h,f,c
 18319  010D8A  06DE               	decf	postinc2,f,c
 18320  010D8C  0E00               	movlw	0
 18321  010D8E  5ADD               	subwfb	postdec2,f,c
 18322  010D90                     l12546:
 18323                           
 18324                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 18325                           ;stkvar	_u @ sp[(-56)+12]
 18326  010D90  0ED4               	movlw	-44
 18327  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 18328  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 18329  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 18330  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 18331                           
 18332                           ;stkvar	_l @ sp[(-60)+20]
 18333  010DAA  0ED8               	movlw	-40
 18334  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 18335  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 18336  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 18337  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 18338  010DC4  EC03  F09F         	call	___flmul	;wreg free
 18339  010DC8  0060  F007  FFE6   	movff	btemp,postinc1
 18340  010DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 18341  010DD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 18342  010DDA  0060  F013  FFE6   	movff	btemp+3,postinc1
 18343                           
 18344                           ;stkvar	_h @ sp[(-60)+24]
 18345  010DE0  0EDC               	movlw	-36
 18346  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 18347  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 18348  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 18349  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 18350  010DFA  EC4C  F0DD         	call	___flsub	;wreg free
 18351                           
 18352                           ;stkvar	_h @ sp[(-56)+24]
 18353  010DFE  0EE0               	movlw	-32
 18354  010E00  0060  F007  FFE3   	movff	btemp,plusw1
 18355  010E06  0EE1               	movlw	-31
 18356  010E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18357  010E0E  0EE2               	movlw	-30
 18358  010E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18359  010E16  0EE3               	movlw	-29
 18360  010E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 18361                           
 18362                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 18363  010E1E  0E00               	movlw	0
 18364  010E20  6EE6               	movwf	postinc1,c
 18365  010E22  0E00               	movlw	0
 18366  010E24  6EE6               	movwf	postinc1,c
 18367  010E26  0E20               	movlw	32
 18368  010E28  6EE6               	movwf	postinc1,c
 18369  010E2A  0E41               	movlw	65
 18370  010E2C  6EE6               	movwf	postinc1,c
 18371                           
 18372                           ;stkvar	_u @ sp[(-60)+12]
 18373  010E2E  0ED0               	movlw	-48
 18374  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 18375  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 18376  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 18377  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 18378  010E48  ECF6  F0A6         	call	___fldiv	;wreg free
 18379                           
 18380                           ;stkvar	_u @ sp[(-56)+12]
 18381  010E4C  0ED4               	movlw	-44
 18382  010E4E  0060  F007  FFE3   	movff	btemp,plusw1
 18383  010E54  0ED5               	movlw	-43
 18384  010E56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18385  010E5C  0ED6               	movlw	-42
 18386  010E5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18387  010E64  0ED7               	movlw	-41
 18388  010E66  0060  F013  FFE3   	movff	btemp+3,plusw1
 18389                           
 18390                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 18391                           ;stkvar	_ne @ sp[(-56)+46]
 18392  010E6C  50E1               	movf	fsr1l,w,c
 18393  010E6E  0FF6               	addlw	-10
 18394  010E70  6ED9               	movwf	fsr2l,c
 18395  010E72  50E2               	movf	fsr1h,w,c
 18396  010E74  6EDA               	movwf	fsr2h,c
 18397  010E76  0EFF               	movlw	255
 18398  010E78  22DA               	addwfc	fsr2h,f,c
 18399  010E7A  06DE               	decf	postinc2,f,c
 18400  010E7C  0E00               	movlw	0
 18401  010E7E  5ADD               	subwfb	postdec2,f,c
 18402                           
 18403                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 18404                           ;stkvar	_i @ sp[(-56)+36]
 18405  010E80  0EEC               	movlw	-20
 18406  010E82  50E3               	movf	plusw1,w,c
 18407  010E84  0F01               	addlw	1
 18408  010E86  6E01               	movwf	btemp^0,c
 18409  010E88  0EEC               	movlw	-20
 18410  010E8A  0060  F007  FFE3   	movff	btemp,plusw1
 18411  010E90  6A01               	clrf	btemp^0,c
 18412  010E92  0EED               	movlw	-19
 18413  010E94  50E3               	movf	plusw1,w,c
 18414  010E96  2001               	addwfc	btemp^0,w,c
 18415  010E98  6E01               	movwf	btemp^0,c
 18416  010E9A  0EED               	movlw	-19
 18417  010E9C  0060  F007  FFE3   	movff	btemp,plusw1
 18418  010EA2                     l12554:
 18419                           
 18420                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 18421                           ;stkvar	_m @ sp[(-56)+48]
 18422                           ;stkvar	_i @ sp[(-56)+36]
 18423  010EA2  50E1               	movf	fsr1l,w,c
 18424  010EA4  0FEC               	addlw	-20
 18425  010EA6  6ED9               	movwf	fsr2l,c
 18426  010EA8  50E2               	movf	fsr1h,w,c
 18427  010EAA  6EDA               	movwf	fsr2h,c
 18428  010EAC  0EFF               	movlw	255
 18429  010EAE  22DA               	addwfc	fsr2h,f,c
 18430  010EB0  0EF8               	movlw	-8
 18431  010EB2  50E3               	movf	plusw1,w,c
 18432  010EB4  5CDE               	subwf	postinc2,w,c
 18433  010EB6  50DE               	movf	postinc2,w,c
 18434  010EB8  0A80               	xorlw	128
 18435  010EBA  6E01               	movwf	btemp^0,c
 18436  010EBC  0EF9               	movlw	-7
 18437  010EBE  50E3               	movf	plusw1,w,c
 18438  010EC0  0A80               	xorlw	128
 18439  010EC2  5801               	subwfb	btemp^0,w,c
 18440  010EC4  B0D8               	btfsc	status,0,c
 18441  010EC6  D00E               	goto	u11700
 18442                           
 18443                           ;stkvar	_n @ sp[(-56)+32]
 18444  010EC8  0EE9               	movlw	-23
 18445  010ECA  BEE3               	btfsc	plusw1,7,c
 18446  010ECC  D633               	goto	l12504
 18447  010ECE  0EE9               	movlw	-23
 18448  010ED0  50E3               	movf	plusw1,w,c
 18449  010ED2  E108               	bnz	u11700
 18450  010ED4  0EE8               	movlw	-24
 18451  010ED6  006F FF8C  F001    	movff	plusw1,btemp
 18452  010EDC  0E4B               	movlw	75
 18453  010EDE  5E01               	subwf	btemp^0,f,c
 18454  010EE0  A0D8               	btfss	status,0,c
 18455  010EE2  D628               	goto	l12504
 18456  010EE4                     u11700:
 18457                           
 18458                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 18459                           ;stkvar	_pp @ sp[(-56)+50]
 18460  010EE4  0EFA               	movlw	-6
 18461  010EE6  006F FF8C  F001    	movff	plusw1,btemp
 18462  010EEC  0EFB               	movlw	-5
 18463  010EEE  50E3               	movf	plusw1,w,c
 18464  010EF0  1001               	iorwf	btemp^0,w,c
 18465  010EF2  B4D8               	btfsc	status,2,c
 18466  010EF4  A83E               	btfss	_flags^0,4,c
 18467  010EF6  D021               	goto	l12566
 18468                           
 18469                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 18470                           ;stkvar	_n @ sp[(-56)+32]
 18471  010EF8  0EE8               	movlw	-24
 18472  010EFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 18473  010F00  0EE9               	movlw	-23
 18474  010F02  006F FF8C  F00C    	movff	plusw1,btemp+11
 18475  010F08  0E97               	movlw	low _dbuf
 18476  010F0A  240B               	addwf	(btemp+10)^0,w,c
 18477  010F0C  6ED9               	movwf	fsr2l,c
 18478  010F0E  0E02               	movlw	high _dbuf
 18479  010F10  200C               	addwfc	(btemp+11)^0,w,c
 18480  010F12  6EDA               	movwf	fsr2h,c
 18481  010F14  0E2E               	movlw	46
 18482  010F16  6EDF               	movwf	indf2,c
 18483                           
 18484                           ;stkvar	_n @ sp[(-56)+32]
 18485  010F18  0EE8               	movlw	-24
 18486  010F1A  50E3               	movf	plusw1,w,c
 18487  010F1C  0F01               	addlw	1
 18488  010F1E  6E01               	movwf	btemp^0,c
 18489  010F20  0EE8               	movlw	-24
 18490  010F22  0060  F007  FFE3   	movff	btemp,plusw1
 18491  010F28  6A01               	clrf	btemp^0,c
 18492  010F2A  0EE9               	movlw	-23
 18493  010F2C  50E3               	movf	plusw1,w,c
 18494  010F2E  2001               	addwfc	btemp^0,w,c
 18495  010F30  6E01               	movwf	btemp^0,c
 18496  010F32  0EE9               	movlw	-23
 18497  010F34  0060  F007  FFE3   	movff	btemp,plusw1
 18498  010F3A                     l12566:
 18499                           
 18500                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 18501                           ;stkvar	_n @ sp[(-56)+32]
 18502  010F3A  0EE8               	movlw	-24
 18503  010F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 18504  010F42  0EE9               	movlw	-23
 18505  010F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 18506  010F4A  0E97               	movlw	low _dbuf
 18507  010F4C  240B               	addwf	(btemp+10)^0,w,c
 18508  010F4E  6ED9               	movwf	fsr2l,c
 18509  010F50  0E02               	movlw	high _dbuf
 18510  010F52  200C               	addwfc	(btemp+11)^0,w,c
 18511  010F54  6EDA               	movwf	fsr2h,c
 18512  010F56  0E00               	movlw	0
 18513  010F58  6EDF               	movwf	indf2,c
 18514                           
 18515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 18516                           ;stkvar	_nmode @ sp[(-56)+55]
 18517  010F5A  0EFF               	movlw	-1
 18518  010F5C  006F FF8C  F001    	movff	plusw1,btemp
 18519  010F62  0E65               	movlw	101
 18520  010F64  1801               	xorwf	btemp^0,w,c
 18521  010F66  A4D8               	btfss	status,2,c
 18522  010F68  EF16  F081         	goto	l12370
 18523                           
 18524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 18525  010F6C  0E4F               	movlw	79
 18526  010F6E  6E0B               	movwf	(btemp+10)^0,c
 18527  010F70  0E00               	movlw	0
 18528  010F72  6E0C               	movwf	(btemp+11)^0,c
 18529                           
 18530                           ;stkvar	_i @ sp[(-56)+36]
 18531  010F74  0EEC               	movlw	-20
 18532  010F76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18533  010F7C  0EED               	movlw	-19
 18534  010F7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 18535                           
 18536                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 18537                           ;stkvar	_i @ sp[(-56)+36]
 18538  010F84  0EEC               	movlw	-20
 18539  010F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 18540  010F8C  0EED               	movlw	-19
 18541  010F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 18542  010F94  0E97               	movlw	low _dbuf
 18543  010F96  240B               	addwf	(btemp+10)^0,w,c
 18544  010F98  6ED9               	movwf	fsr2l,c
 18545  010F9A  0E02               	movlw	high _dbuf
 18546  010F9C  200C               	addwfc	(btemp+11)^0,w,c
 18547  010F9E  6EDA               	movwf	fsr2h,c
 18548  010FA0  0E00               	movlw	0
 18549  010FA2  6EDF               	movwf	indf2,c
 18550                           
 18551                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 18552                           ;stkvar	_sign @ sp[(-56)+42]
 18553  010FA4  0EF2               	movlw	-14
 18554  010FA6  6AE3               	clrf	plusw1,c
 18555  010FA8  0EF3               	movlw	-13
 18556  010FAA  6AE3               	clrf	plusw1,c
 18557                           
 18558                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 18559                           ;stkvar	_e @ sp[(-56)+34]
 18560  010FAC  0EEB               	movlw	-21
 18561  010FAE  AEE3               	btfss	plusw1,7,c
 18562  010FB0  D012               	goto	l12580
 18563                           
 18564                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 18565  010FB2  0E01               	movlw	1
 18566  010FB4  6E0B               	movwf	(btemp+10)^0,c
 18567  010FB6  0E00               	movlw	0
 18568  010FB8  6E0C               	movwf	(btemp+11)^0,c
 18569                           
 18570                           ;stkvar	_sign @ sp[(-56)+42]
 18571  010FBA  0EF2               	movlw	-14
 18572  010FBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18573  010FC2  0EF3               	movlw	-13
 18574  010FC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 18575                           
 18576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 18577                           ;stkvar	_e @ sp[(-56)+34]
 18578                           ;stkvar	_e @ sp[(-56)+34]
 18579  010FCA  0EEA               	movlw	-22
 18580  010FCC  6CE3               	negf	plusw1,c
 18581  010FCE  0EEB               	movlw	-21
 18582  010FD0  1EE3               	comf	plusw1,f,c
 18583  010FD2  B0D8               	btfsc	status,0,c
 18584  010FD4  2AE3               	incf	plusw1,f,c
 18585  010FD6                     l12580:
 18586                           
 18587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 18588  010FD6  0E02               	movlw	2
 18589  010FD8  6E0B               	movwf	(btemp+10)^0,c
 18590  010FDA  0E00               	movlw	0
 18591  010FDC  6E0C               	movwf	(btemp+11)^0,c
 18592                           
 18593                           ;stkvar	_p @ sp[(-56)+40]
 18594  010FDE  0EF0               	movlw	-16
 18595  010FE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18596  010FE6  0EF1               	movlw	-15
 18597  010FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 18598                           
 18599                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 18600  010FEE  D051               	goto	l12592
 18601  010FF0                     l12582:
 18602                           
 18603                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 18604                           ;stkvar	_i @ sp[(-56)+36]
 18605  010FF0  50E1               	movf	fsr1l,w,c
 18606  010FF2  0FEC               	addlw	-20
 18607  010FF4  6ED9               	movwf	fsr2l,c
 18608  010FF6  50E2               	movf	fsr1h,w,c
 18609  010FF8  6EDA               	movwf	fsr2h,c
 18610  010FFA  0EFF               	movlw	255
 18611  010FFC  22DA               	addwfc	fsr2h,f,c
 18612  010FFE  06DE               	decf	postinc2,f,c
 18613  011000  0E00               	movlw	0
 18614  011002  5ADD               	subwfb	postdec2,f,c
 18615                           
 18616                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 18617                           ;stkvar	_i @ sp[(-56)+36]
 18618  011004  0EEC               	movlw	-20
 18619  011006  006F FF8C  F00B    	movff	plusw1,btemp+10
 18620  01100C  0EED               	movlw	-19
 18621  01100E  006F FF8C  F00C    	movff	plusw1,btemp+11
 18622  011014  0E97               	movlw	low _dbuf
 18623  011016  240B               	addwf	(btemp+10)^0,w,c
 18624  011018  6ED9               	movwf	fsr2l,c
 18625  01101A  0E02               	movlw	high _dbuf
 18626  01101C  200C               	addwfc	(btemp+11)^0,w,c
 18627  01101E  6EDA               	movwf	fsr2h,c
 18628  011020  0E0A               	movlw	10
 18629  011022  6EE6               	movwf	postinc1,c
 18630  011024  0E00               	movlw	0
 18631  011026  6EE6               	movwf	postinc1,c
 18632                           
 18633                           ;stkvar	_e @ sp[(-58)+34]
 18634  011028  0EE8               	movlw	-24
 18635  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 18636  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 18637  011036  ECB8  F0CE         	call	___awmod	;wreg free
 18638  01103A  5001               	movf	btemp^0,w,c
 18639  01103C  0F30               	addlw	48
 18640  01103E  6EDF               	movwf	indf2,c
 18641                           
 18642                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 18643  011040  0E0A               	movlw	10
 18644  011042  6EE6               	movwf	postinc1,c
 18645  011044  0E00               	movlw	0
 18646  011046  6EE6               	movwf	postinc1,c
 18647                           
 18648                           ;stkvar	_e @ sp[(-58)+34]
 18649  011048  0EE8               	movlw	-24
 18650  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 18651  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 18652  011056  EC7F  F0CA         	call	___awdiv	;wreg free
 18653                           
 18654                           ;stkvar	_e @ sp[(-56)+34]
 18655  01105A  0EEA               	movlw	-22
 18656  01105C  0060  F007  FFE3   	movff	btemp,plusw1
 18657  011062  0EEB               	movlw	-21
 18658  011064  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18659                           
 18660                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 18661                           ;stkvar	_p @ sp[(-56)+40]
 18662  01106A  50E1               	movf	fsr1l,w,c
 18663  01106C  0FF0               	addlw	-16
 18664  01106E  6ED9               	movwf	fsr2l,c
 18665  011070  50E2               	movf	fsr1h,w,c
 18666  011072  6EDA               	movwf	fsr2h,c
 18667  011074  0EFF               	movlw	255
 18668  011076  22DA               	addwfc	fsr2h,f,c
 18669  011078  06DE               	decf	postinc2,f,c
 18670  01107A  0E00               	movlw	0
 18671  01107C  5ADD               	subwfb	postdec2,f,c
 18672                           
 18673                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 18674                           ;stkvar	_w @ sp[(-56)+38]
 18675  01107E  50E1               	movf	fsr1l,w,c
 18676  011080  0FEE               	addlw	-18
 18677  011082  6ED9               	movwf	fsr2l,c
 18678  011084  50E2               	movf	fsr1h,w,c
 18679  011086  6EDA               	movwf	fsr2h,c
 18680  011088  0EFF               	movlw	255
 18681  01108A  22DA               	addwfc	fsr2h,f,c
 18682  01108C  06DE               	decf	postinc2,f,c
 18683  01108E  0E00               	movlw	0
 18684  011090  5ADD               	subwfb	postdec2,f,c
 18685  011092                     l12592:
 18686                           
 18687                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 18688                           ;stkvar	_e @ sp[(-56)+34]
 18689  011092  0EEA               	movlw	-22
 18690  011094  006F FF8C  F001    	movff	plusw1,btemp
 18691  01109A  0EEB               	movlw	-21
 18692  01109C  50E3               	movf	plusw1,w,c
 18693  01109E  1001               	iorwf	btemp^0,w,c
 18694  0110A0  A4D8               	btfss	status,2,c
 18695  0110A2  D7A6               	goto	l12582
 18696                           
 18697                           ;stkvar	_p @ sp[(-56)+40]
 18698  0110A4  0EF1               	movlw	-15
 18699  0110A6  BEE3               	btfsc	plusw1,7,c
 18700  0110A8  D007               	goto	u11760
 18701  0110AA  0EF1               	movlw	-15
 18702  0110AC  50E3               	movf	plusw1,w,c
 18703  0110AE  E1A0               	bnz	l12582
 18704  0110B0  0EF0               	movlw	-16
 18705  0110B2  04E3               	decf	plusw1,w,c
 18706  0110B4  B0D8               	btfsc	status,0,c
 18707  0110B6  D79C               	goto	l12582
 18708  0110B8                     u11760:
 18709                           
 18710                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 18711                           ;stkvar	_i @ sp[(-56)+36]
 18712  0110B8  50E1               	movf	fsr1l,w,c
 18713  0110BA  0FEC               	addlw	-20
 18714  0110BC  6ED9               	movwf	fsr2l,c
 18715  0110BE  50E2               	movf	fsr1h,w,c
 18716  0110C0  6EDA               	movwf	fsr2h,c
 18717  0110C2  0EFF               	movlw	255
 18718  0110C4  22DA               	addwfc	fsr2h,f,c
 18719  0110C6  06DE               	decf	postinc2,f,c
 18720  0110C8  0E00               	movlw	0
 18721  0110CA  5ADD               	subwfb	postdec2,f,c
 18722                           
 18723                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 18724                           ;stkvar	_sign @ sp[(-56)+42]
 18725  0110CC  0EF2               	movlw	-14
 18726  0110CE  006F FF8C  F001    	movff	plusw1,btemp
 18727  0110D4  0EF3               	movlw	-13
 18728  0110D6  50E3               	movf	plusw1,w,c
 18729  0110D8  1001               	iorwf	btemp^0,w,c
 18730  0110DA  A4D8               	btfss	status,2,c
 18731  0110DC  D002               	goto	l12602
 18732  0110DE  0E2B               	movlw	43
 18733  0110E0  D001               	goto	L19
 18734  0110E2                     l12602:
 18735  0110E2  0E2D               	movlw	45
 18736  0110E4                     L19:
 18737  0110E4  6E0B               	movwf	(btemp+10)^0,c
 18738  0110E6  0E00               	movlw	0
 18739  0110E8  6E0C               	movwf	(btemp+11)^0,c
 18740                           
 18741                           ;stkvar	_efgtoa$5834 @ sp[(-56)+4]
 18742  0110EA  0ECC               	movlw	-52
 18743  0110EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18744  0110F2  0ECD               	movlw	-51
 18745  0110F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 18746                           
 18747                           ;stkvar	_efgtoa$5834 @ sp[(-56)+4]
 18748                           ;stkvar	_i @ sp[(-56)+36]
 18749  0110FA  0EEC               	movlw	-20
 18750  0110FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 18751  011102  0EED               	movlw	-19
 18752  011104  006F FF8C  F00C    	movff	plusw1,btemp+11
 18753  01110A  0E97               	movlw	low _dbuf
 18754  01110C  240B               	addwf	(btemp+10)^0,w,c
 18755  01110E  6ED9               	movwf	fsr2l,c
 18756  011110  0E02               	movlw	high _dbuf
 18757  011112  200C               	addwfc	(btemp+11)^0,w,c
 18758  011114  6EDA               	movwf	fsr2h,c
 18759  011116  0ECC               	movlw	-52
 18760  011118  006F FF8F FFDF     	movff	plusw1,indf2
 18761                           
 18762                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 18763                           ;stkvar	_w @ sp[(-56)+38]
 18764  01111E  50E1               	movf	fsr1l,w,c
 18765  011120  0FEE               	addlw	-18
 18766  011122  6ED9               	movwf	fsr2l,c
 18767  011124  50E2               	movf	fsr1h,w,c
 18768  011126  6EDA               	movwf	fsr2h,c
 18769  011128  0EFF               	movlw	255
 18770  01112A  22DA               	addwfc	fsr2h,f,c
 18771  01112C  06DE               	decf	postinc2,f,c
 18772  01112E  0E00               	movlw	0
 18773  011130  5ADD               	subwfb	postdec2,f,c
 18774                           
 18775                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 18776                           ;stkvar	_i @ sp[(-56)+36]
 18777  011132  50E1               	movf	fsr1l,w,c
 18778  011134  0FEC               	addlw	-20
 18779  011136  6ED9               	movwf	fsr2l,c
 18780  011138  50E2               	movf	fsr1h,w,c
 18781  01113A  6EDA               	movwf	fsr2h,c
 18782  01113C  0EFF               	movlw	255
 18783  01113E  22DA               	addwfc	fsr2h,f,c
 18784  011140  06DE               	decf	postinc2,f,c
 18785  011142  0E00               	movlw	0
 18786  011144  5ADD               	subwfb	postdec2,f,c
 18787  011146  0EBF               	movlw	191
 18788  011148  6E0B               	movwf	(btemp+10)^0,c
 18789  01114A  0EFF               	movlw	255
 18790  01114C  6E0C               	movwf	(btemp+11)^0,c
 18791                           
 18792                           ;stkvar	_c @ sp[(-56)+-7]
 18793  01114E  0EC1               	movlw	-63
 18794  011150  50E3               	movf	plusw1,w,c
 18795  011152  6E09               	movwf	(btemp+8)^0,c
 18796  011154  6A0A               	clrf	(btemp+9)^0,c
 18797  011156  500B               	movf	(btemp+10)^0,w,c
 18798  011158  2609               	addwf	(btemp+8)^0,f,c
 18799  01115A  500C               	movf	(btemp+11)^0,w,c
 18800  01115C  220A               	addwfc	(btemp+9)^0,f,c
 18801  01115E  500A               	movf	(btemp+9)^0,w,c
 18802  011160  E106               	bnz	u11780
 18803  011162  0E1A               	movlw	26
 18804  011164  5C09               	subwf	(btemp+8)^0,w,c
 18805  011166  B0D8               	btfsc	status,0,c
 18806  011168  D002               	goto	u11780
 18807  01116A  0E01               	movlw	1
 18808  01116C  D001               	goto	u11790
 18809  01116E                     u11780:
 18810  01116E  0E00               	movlw	0
 18811  011170                     u11790:
 18812  011170  6E0B               	movwf	(btemp+10)^0,c
 18813  011172  6A0C               	clrf	(btemp+11)^0,c
 18814                           
 18815                           ;stkvar	_efgtoa$5836 @ sp[(-56)+0]
 18816  011174  0EC8               	movlw	-56
 18817  011176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18818  01117C  0EC9               	movlw	-55
 18819  01117E  0060  F033  FFE3   	movff	btemp+11,plusw1
 18820                           
 18821                           ;stkvar	_efgtoa$5836 @ sp[(-56)+0]
 18822  011184  0EC8               	movlw	-56
 18823  011186  006F FF8C  F001    	movff	plusw1,btemp
 18824  01118C  0EC9               	movlw	-55
 18825  01118E  50E3               	movf	plusw1,w,c
 18826  011190  1001               	iorwf	btemp^0,w,c
 18827  011192  A4D8               	btfss	status,2,c
 18828  011194  D002               	goto	l12618
 18829  011196  0E65               	movlw	101
 18830  011198  D001               	goto	L20
 18831  01119A                     l12618:
 18832  01119A  0E45               	movlw	69
 18833  01119C                     L20:
 18834  01119C  6E0B               	movwf	(btemp+10)^0,c
 18835  01119E  0E00               	movlw	0
 18836  0111A0  6E0C               	movwf	(btemp+11)^0,c
 18837                           
 18838                           ;stkvar	_efgtoa$5835 @ sp[(-56)+2]
 18839  0111A2  0ECA               	movlw	-54
 18840  0111A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18841  0111AA  0ECB               	movlw	-53
 18842  0111AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 18843                           
 18844                           ;stkvar	_efgtoa$5835 @ sp[(-56)+2]
 18845                           ;stkvar	_i @ sp[(-56)+36]
 18846  0111B2  0EEC               	movlw	-20
 18847  0111B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 18848  0111BA  0EED               	movlw	-19
 18849  0111BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 18850  0111C2  0E97               	movlw	low _dbuf
 18851  0111C4  240B               	addwf	(btemp+10)^0,w,c
 18852  0111C6  6ED9               	movwf	fsr2l,c
 18853  0111C8  0E02               	movlw	high _dbuf
 18854  0111CA  200C               	addwfc	(btemp+11)^0,w,c
 18855  0111CC  6EDA               	movwf	fsr2h,c
 18856  0111CE  0ECA               	movlw	-54
 18857  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 18858                           
 18859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 18860                           ;stkvar	_w @ sp[(-56)+38]
 18861  0111D6  50E1               	movf	fsr1l,w,c
 18862  0111D8  0FEE               	addlw	-18
 18863  0111DA  6ED9               	movwf	fsr2l,c
 18864  0111DC  50E2               	movf	fsr1h,w,c
 18865  0111DE  6EDA               	movwf	fsr2h,c
 18866  0111E0  0EFF               	movlw	255
 18867  0111E2  22DA               	addwfc	fsr2h,f,c
 18868  0111E4  06DE               	decf	postinc2,f,c
 18869  0111E6  0E00               	movlw	0
 18870  0111E8  5ADD               	subwfb	postdec2,f,c
 18871                           
 18872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 18873                           ;stkvar	_i @ sp[(-56)+36]
 18874  0111EA  0EEC               	movlw	-20
 18875  0111EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 18876  0111F2  0EED               	movlw	-19
 18877  0111F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 18878  0111FA  0E97               	movlw	low _dbuf
 18879  0111FC  240B               	addwf	(btemp+10)^0,w,c
 18880  0111FE  6E09               	movwf	(btemp+8)^0,c
 18881  011200  0E02               	movlw	high _dbuf
 18882  011202  200C               	addwfc	(btemp+11)^0,w,c
 18883  011204  6E0A               	movwf	(btemp+9)^0,c
 18884  011206  0060  F027  FFE6   	movff	btemp+8,postinc1
 18885  01120C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 18886                           
 18887                           ;stkvar	_n @ sp[(-58)+32]
 18888  011212  0E97               	movlw	low _dbuf
 18889  011214  6E0B               	movwf	(btemp+10)^0,c
 18890  011216  0E02               	movlw	high _dbuf
 18891  011218  6E0C               	movwf	(btemp+11)^0,c
 18892  01121A  0EE6               	movlw	-26
 18893  01121C  50E3               	movf	plusw1,w,c
 18894  01121E  260B               	addwf	(btemp+10)^0,f,c
 18895  011220  0EE7               	movlw	-25
 18896  011222  50E3               	movf	plusw1,w,c
 18897  011224  220C               	addwfc	(btemp+11)^0,f,c
 18898  011226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18899  01122C  0060  F033  FFE6   	movff	btemp+11,postinc1
 18900  011232  ECAD  F0D2         	call	_strcpy	;wreg free
 18901  011236  EF16  F081         	goto	l12370
 18902  01123A                     l2302:
 18903                           
 18904                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 18905  01123A  0EC1               	movlw	193
 18906  01123C  26E1               	addwf	fsr1l,f,c
 18907  01123E  0EFF               	movlw	255
 18908  011240  22E2               	addwfc	fsr1h,f,c
 18909  011242  0012               	return		;funcret
 18910  011244                     __end_of_efgtoa:
 18911                           	opt callstack 0
 18912                           
 18913 ;; *************** function _tolower *****************
 18914 ;; Defined at:
 18915 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 18916 ;; Parameters:    Size  Location     Type
 18917 ;;  c               2  [STACK] int 
 18918 ;; Auto vars:     Size  Location     Type
 18919 ;;		None
 18920 ;; Return value:  Size  Location     Type
 18921 ;;                  2  [STACK] int 
 18922 ;; Registers used:
 18923 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 18924 ;; Tracked objects:
 18925 ;;		On entry : 0/0
 18926 ;;		On exit  : 0/0
 18927 ;;		Unchanged: 0/0
 18928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18933 ;;Total ram usage:        0 bytes
 18934 ;; Hardware stack levels used:    1
 18935 ;; Hardware stack levels required when called:   16
 18936 ;; This function calls:
 18937 ;;		_isupper
 18938 ;; This function is called by:
 18939 ;;		_efgtoa
 18940 ;;		_vfpfcnvrt
 18941 ;; This function uses a reentrant model
 18942 ;;
 18943                           
 18944                           	psect	text63
 18945  01B0A6                     __ptext63:
 18946                           	opt callstack 0
 18947  01B0A6                     _tolower:
 18948                           	opt callstack 0
 18949                           
 18950                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18951  01B0A6  52E6               	movf	postinc1,f,c
 18952  01B0A8  52E6               	movf	postinc1,f,c
 18953                           
 18954                           ;stkvar	_c @ sp[(-2)+-2]
 18955                           
 18956                           ;incstack = 0
 18957 ;; hardware stack exceeded
 18958  01B0AA  0EFC               	movlw	-4
 18959  01B0AC  50E3               	movf	plusw1,w,c
 18960  01B0AE  0FBF               	addlw	191
 18961  01B0B0  6E0B               	movwf	(btemp+10)^0,c
 18962  01B0B2  0EFD               	movlw	-3
 18963  01B0B4  006F FF8C  F00C    	movff	plusw1,btemp+11
 18964  01B0BA  0EFF               	movlw	255
 18965  01B0BC  220C               	addwfc	(btemp+11)^0,f,c
 18966  01B0BE  500C               	movf	(btemp+11)^0,w,c
 18967  01B0C0  E106               	bnz	u6200
 18968  01B0C2  0E1A               	movlw	26
 18969  01B0C4  5C0B               	subwf	(btemp+10)^0,w,c
 18970  01B0C6  B0D8               	btfsc	status,0,c
 18971  01B0C8  D002               	goto	u6200
 18972  01B0CA  0E01               	movlw	1
 18973  01B0CC  D001               	goto	u6210
 18974  01B0CE                     u6200:
 18975  01B0CE  0E00               	movlw	0
 18976  01B0D0                     u6210:
 18977  01B0D0  6E0B               	movwf	(btemp+10)^0,c
 18978  01B0D2  6A0C               	clrf	(btemp+11)^0,c
 18979                           
 18980                           ;stkvar	_tolower$6655 @ sp[(-2)+0]
 18981  01B0D4  0EFE               	movlw	-2
 18982  01B0D6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18983  01B0DC  0EFF               	movlw	-1
 18984  01B0DE  0060  F033  FFE3   	movff	btemp+11,plusw1
 18985                           
 18986                           ;stkvar	_tolower$6655 @ sp[(-2)+0]
 18987  01B0E4  0EFE               	movlw	-2
 18988  01B0E6  006F FF8C  F001    	movff	plusw1,btemp
 18989  01B0EC  0EFF               	movlw	-1
 18990  01B0EE  50E3               	movf	plusw1,w,c
 18991  01B0F0  1001               	iorwf	btemp^0,w,c
 18992  01B0F2  B4D8               	btfsc	status,2,c
 18993  01B0F4  D00D               	goto	l8264
 18994                           
 18995                           ;stkvar	_c @ sp[(-2)+-2]
 18996  01B0F6  0EFC               	movlw	-4
 18997  01B0F8  006F FF8C  F001    	movff	plusw1,btemp
 18998  01B0FE  0EFD               	movlw	-3
 18999  01B100  006F FF8C  F002    	movff	plusw1,btemp+1
 19000  01B106  0E20               	movlw	32
 19001  01B108  1201               	iorwf	btemp^0,f,c
 19002  01B10A  0E00               	movlw	0
 19003  01B10C  1202               	iorwf	(btemp+1)^0,f,c
 19004  01B10E  D008               	goto	l3574
 19005  01B110                     l8264:
 19006                           
 19007                           ;stkvar	_c @ sp[(-2)+-2]
 19008  01B110  0EFC               	movlw	-4
 19009  01B112  006F FF8C  F001    	movff	plusw1,btemp
 19010  01B118  0EFD               	movlw	-3
 19011  01B11A  006F FF8C  F002    	movff	plusw1,btemp+1
 19012  01B120                     l3574:
 19013                           
 19014                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19015  01B120  52E5               	movf	postdec1,f,c
 19016  01B122  52E5               	movf	postdec1,f,c
 19017  01B124  52E5               	movf	postdec1,f,c
 19018  01B126  52E5               	movf	postdec1,f,c
 19019  01B128  0012               	return		;funcret
 19020  01B12A                     __end_of_tolower:
 19021                           	opt callstack 0
 19022                           
 19023 ;; *************** function _isupper *****************
 19024 ;; Defined at:
 19025 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 19026 ;; Parameters:    Size  Location     Type
 19027 ;;  c               2  [STACK] int 
 19028 ;; Auto vars:     Size  Location     Type
 19029 ;;		None
 19030 ;; Return value:  Size  Location     Type
 19031 ;;                  2  [STACK] int 
 19032 ;; Registers used:
 19033 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 19034 ;; Tracked objects:
 19035 ;;		On entry : 0/0
 19036 ;;		On exit  : 0/0
 19037 ;;		Unchanged: 0/0
 19038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19043 ;;Total ram usage:        0 bytes
 19044 ;; Hardware stack levels used:    1
 19045 ;; Hardware stack levels required when called:   15
 19046 ;; This function calls:
 19047 ;;		Nothing
 19048 ;; This function is called by:
 19049 ;;		_efgtoa
 19050 ;;		_xtoa
 19051 ;;		_vfpfcnvrt
 19052 ;;		_tolower
 19053 ;; This function uses a reentrant model
 19054 ;;
 19055                           
 19056                           	psect	text64
 19057  01BF28                     __ptext64:
 19058                           	opt callstack 0
 19059  01BF28                     _isupper:
 19060                           	opt callstack 0
 19061                           
 19062                           ;stkvar	_c @ sp[(0)+-2]
 19063                           
 19064                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19065                           ;incstack = 0
 19066 ;; hardware stack exceeded
 19067  01BF28  0EFE               	movlw	-2
 19068  01BF2A  50E3               	movf	plusw1,w,c
 19069  01BF2C  0FBF               	addlw	191
 19070  01BF2E  6E0B               	movwf	(btemp+10)^0,c
 19071  01BF30  0EFF               	movlw	-1
 19072  01BF32  006F FF8C  F00C    	movff	plusw1,btemp+11
 19073  01BF38  0EFF               	movlw	255
 19074  01BF3A  220C               	addwfc	(btemp+11)^0,f,c
 19075  01BF3C  500C               	movf	(btemp+11)^0,w,c
 19076  01BF3E  E106               	bnz	u5550
 19077  01BF40  0E1A               	movlw	26
 19078  01BF42  5C0B               	subwf	(btemp+10)^0,w,c
 19079  01BF44  B0D8               	btfsc	status,0,c
 19080  01BF46  D002               	goto	u5550
 19081  01BF48  0E01               	movlw	1
 19082  01BF4A  D001               	goto	u5560
 19083  01BF4C                     u5550:
 19084  01BF4C  0E00               	movlw	0
 19085  01BF4E                     u5560:
 19086  01BF4E  6E01               	movwf	btemp^0,c
 19087  01BF50  6A02               	clrf	(btemp+1)^0,c
 19088                           
 19089                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19090  01BF52  52E5               	movf	postdec1,f,c
 19091  01BF54  52E5               	movf	postdec1,f,c
 19092  01BF56  0012               	return		;funcret
 19093  01BF58                     __end_of_isupper:
 19094                           	opt callstack 0
 19095                           
 19096 ;; *************** function _strcpy *****************
 19097 ;; Defined at:
 19098 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 19099 ;; Parameters:    Size  Location     Type
 19100 ;;  dest            2  [STACK] PTR unsigned char 
 19101 ;;		 -> dbuf(80), 
 19102 ;;  src             2  [STACK] PTR const unsigned char 
 19103 ;;		 -> STR_70(4), STR_69(4), STR_66(4), STR_65(4), 
 19104 ;;		 -> dbuf(80), 
 19105 ;; Auto vars:     Size  Location     Type
 19106 ;;  d               2  [STACK] PTR unsigned char 
 19107 ;;		 -> dbuf(80), 
 19108 ;;  s               2  [STACK] PTR const unsigned char 
 19109 ;;		 -> STR_70(4), STR_69(4), STR_66(4), STR_65(4), 
 19110 ;;		 -> dbuf(80), 
 19111 ;; Return value:  Size  Location     Type
 19112 ;;                  2  [STACK] PTR unsigned char 
 19113 ;; Registers used:
 19114 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 19115 ;; Tracked objects:
 19116 ;;		On entry : 0/0
 19117 ;;		On exit  : 0/0
 19118 ;;		Unchanged: 0/0
 19119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19124 ;;Total ram usage:        0 bytes
 19125 ;; Hardware stack levels used:    1
 19126 ;; Hardware stack levels required when called:   15
 19127 ;; This function calls:
 19128 ;;		Nothing
 19129 ;; This function is called by:
 19130 ;;		_efgtoa
 19131 ;; This function uses a reentrant model
 19132 ;;
 19133                           
 19134                           	psect	text65
 19135  01A55A                     __ptext65:
 19136                           	opt callstack 0
 19137  01A55A                     _strcpy:
 19138                           	opt callstack 0
 19139                           
 19140                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19141  01A55A  52E6               	movf	postinc1,f,c
 19142  01A55C  52E6               	movf	postinc1,f,c
 19143  01A55E  52E6               	movf	postinc1,f,c
 19144  01A560  52E6               	movf	postinc1,f,c
 19145                           
 19146                           ;stkvar	_src @ sp[(-4)+-4]
 19147                           
 19148                           ;incstack = 0
 19149 ;; hardware stack exceeded
 19150  01A562  0EF8               	movlw	-8
 19151  01A564  006F FF8C  F00B    	movff	plusw1,btemp+10
 19152  01A56A  0EF9               	movlw	-7
 19153  01A56C  006F FF8C  F00C    	movff	plusw1,btemp+11
 19154                           
 19155                           ;stkvar	_s @ sp[(-4)+2]
 19156  01A572  0EFF               	movlw	-1
 19157  01A574  0060  F033  FFE3   	movff	btemp+11,plusw1
 19158  01A57A  0EFE               	movlw	-2
 19159  01A57C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19160                           
 19161                           ;stkvar	_dest @ sp[(-4)+-2]
 19162  01A582  0EFA               	movlw	-6
 19163  01A584  006F FF8C  F00B    	movff	plusw1,btemp+10
 19164  01A58A  0EFB               	movlw	-5
 19165  01A58C  006F FF8C  F00C    	movff	plusw1,btemp+11
 19166                           
 19167                           ;stkvar	_d @ sp[(-4)+0]
 19168  01A592  0EFD               	movlw	-3
 19169  01A594  0060  F033  FFE3   	movff	btemp+11,plusw1
 19170  01A59A  0EFC               	movlw	-4
 19171  01A59C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19172  01A5A2                     l12232:
 19173                           
 19174                           ;stkvar	_s @ sp[(-4)+2]
 19175  01A5A2  50E1               	movf	fsr1l,w,c
 19176  01A5A4  0FFE               	addlw	-2
 19177  01A5A6  6ED9               	movwf	fsr2l,c
 19178  01A5A8  50E2               	movf	fsr1h,w,c
 19179  01A5AA  6EDA               	movwf	fsr2h,c
 19180  01A5AC  0EFF               	movlw	255
 19181  01A5AE  22DA               	addwfc	fsr2h,f,c
 19182  01A5B0  006F FF7C  F00B    	movff	indf2,btemp+10
 19183  01A5B6  0E01               	movlw	1
 19184  01A5B8  26DE               	addwf	postinc2,f,c
 19185  01A5BA  006F FF7C  F00C    	movff	indf2,btemp+11
 19186  01A5C0  0E00               	movlw	0
 19187  01A5C2  22DD               	addwfc	postdec2,f,c
 19188  01A5C4  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 19189  01A5CA  0060  F033  FFF7   	movff	btemp+11,tblptrh
 19190  01A5D0  0E00               	movlw	low (__mediumconst shr (0+16))
 19191  01A5D2  6EF8               	movwf	tblptru,c
 19192                           
 19193                           ;stkvar	_d @ sp[(-4)+0]
 19194  01A5D4  50E1               	movf	fsr1l,w,c
 19195  01A5D6  0FFC               	addlw	-4
 19196  01A5D8  6ED9               	movwf	fsr2l,c
 19197  01A5DA  50E2               	movf	fsr1h,w,c
 19198  01A5DC  6EDA               	movwf	fsr2h,c
 19199  01A5DE  0EFF               	movlw	255
 19200  01A5E0  22DA               	addwfc	fsr2h,f,c
 19201  01A5E2  006F FF7C  F00B    	movff	indf2,btemp+10
 19202  01A5E8  0E01               	movlw	1
 19203  01A5EA  26DE               	addwf	postinc2,f,c
 19204  01A5EC  006F FF7C  F00C    	movff	indf2,btemp+11
 19205  01A5F2  0E00               	movlw	0
 19206  01A5F4  22DD               	addwfc	postdec2,f,c
 19207  01A5F6  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 19208  01A5FC  0060  F033  FFDA   	movff	btemp+11,fsr2h
 19209  01A602  0E1F               	movlw	(high __ramtop+-1)
 19210  01A604  64F7               	cpfsgt	tblptrh,c
 19211  01A606  D003               	bra	u11087
 19212  01A608  0008               	tblrd		*
 19213  01A60A  50F5               	movf	tablat,w,c
 19214  01A60C  D007               	bra	u11080
 19215  01A60E                     u11087:
 19216  01A60E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 19217  01A614  006F FFDF FFEA     	movff	tblptrh,fsr0h
 19218  01A61A  50EF               	movf	indf0,w,c
 19219  01A61C                     u11080:
 19220  01A61C  6EDF               	movwf	indf2,c
 19221  01A61E  50DF               	movf	indf2,w,c
 19222  01A620  A4D8               	btfss	status,2,c
 19223  01A622  D7BF               	goto	l12232
 19224                           
 19225                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 19226  01A624  0EF8               	movlw	248
 19227  01A626  26E1               	addwf	fsr1l,f,c
 19228  01A628  0EFF               	movlw	255
 19229  01A62A  22E2               	addwfc	fsr1h,f,c
 19230  01A62C  0012               	return		;funcret
 19231  01A62E                     __end_of_strcpy:
 19232                           	opt callstack 0
 19233                           
 19234 ;; *************** function _floorf *****************
 19235 ;; Defined at:
 19236 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 19237 ;; Parameters:    Size  Location     Type
 19238 ;;  x               4  [STACK] float 
 19239 ;; Auto vars:     Size  Location     Type
 19240 ;;  u               4  [STACK] struct .
 19241 ;;  m               4  [STACK] unsigned long 
 19242 ;;  e               2  [STACK] int 
 19243 ;; Return value:  Size  Location     Type
 19244 ;;                  4  [STACK] float 
 19245 ;; Registers used:
 19246 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 19247 ;; Tracked objects:
 19248 ;;		On entry : 0/0
 19249 ;;		On exit  : 0/0
 19250 ;;		Unchanged: 0/0
 19251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19256 ;;Total ram usage:        0 bytes
 19257 ;; Hardware stack levels used:    1
 19258 ;; Hardware stack levels required when called:   15
 19259 ;; This function calls:
 19260 ;;		Nothing
 19261 ;; This function is called by:
 19262 ;;		_efgtoa
 19263 ;; This function uses a reentrant model
 19264 ;;
 19265                           
 19266                           	psect	text66
 19267  0164A8                     __ptext66:
 19268                           	opt callstack 0
 19269  0164A8                     _floorf:
 19270                           	opt callstack 0
 19271                           
 19272                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 19273  0164A8  0E0A               	movlw	10
 19274  0164AA  26E1               	addwf	fsr1l,f,c
 19275  0164AC  0E00               	movlw	0
 19276  0164AE  22E2               	addwfc	fsr1h,f,c
 19277                           
 19278                           ;incstack = 0
 19279 ;; hardware stack exceeded
 19280  0164B0  0060  F7A4  F009   	movff	floorf@F524,btemp+8
 19281  0164B6  0060  F7A8  F00A   	movff	floorf@F524+1,btemp+9
 19282  0164BC  0060  F7AC  F00B   	movff	floorf@F524+2,btemp+10
 19283  0164C2  0060  F7B0  F00C   	movff	floorf@F524+3,btemp+11
 19284                           
 19285                           ;stkvar	_u @ sp[(-10)+0]
 19286  0164C8  0EF6               	movlw	-10
 19287  0164CA  0060  F027  FFE3   	movff	btemp+8,plusw1
 19288  0164D0  0EF7               	movlw	-9
 19289  0164D2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19290  0164D8  0EF8               	movlw	-8
 19291  0164DA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19292  0164E0  0EF9               	movlw	-7
 19293  0164E2  0060  F033  FFE3   	movff	btemp+11,plusw1
 19294                           
 19295                           ;stkvar	_x @ sp[(-10)+-4]
 19296  0164E8  0EF2               	movlw	-14
 19297  0164EA  006F FF8C  F009    	movff	plusw1,btemp+8
 19298  0164F0  0EF3               	movlw	-13
 19299  0164F2  006F FF8C  F00A    	movff	plusw1,btemp+9
 19300  0164F8  0EF4               	movlw	-12
 19301  0164FA  006F FF8C  F00B    	movff	plusw1,btemp+10
 19302  016500  0EF5               	movlw	-11
 19303  016502  006F FF8C  F00C    	movff	plusw1,btemp+11
 19304                           
 19305                           ;stkvar	_u @ sp[(-10)+0]
 19306  016508  0EF6               	movlw	-10
 19307  01650A  0060  F027  FFE3   	movff	btemp+8,plusw1
 19308  016510  0EF7               	movlw	-9
 19309  016512  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19310  016518  0EF8               	movlw	-8
 19311  01651A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19312  016520  0EF9               	movlw	-7
 19313  016522  0060  F033  FFE3   	movff	btemp+11,plusw1
 19314  016528  0E81               	movlw	129
 19315  01652A  6E0B               	movwf	(btemp+10)^0,c
 19316  01652C  0EFF               	movlw	255
 19317  01652E  6E0C               	movwf	(btemp+11)^0,c
 19318                           
 19319                           ;stkvar	_u @ sp[(-10)+0]
 19320  016530  0EF6               	movlw	-10
 19321  016532  006F FF8C  F005    	movff	plusw1,btemp+4
 19322  016538  0EF7               	movlw	-9
 19323  01653A  006F FF8C  F006    	movff	plusw1,btemp+5
 19324  016540  0EF8               	movlw	-8
 19325  016542  006F FF8C  F007    	movff	plusw1,btemp+6
 19326  016548  0EF9               	movlw	-7
 19327  01654A  006F FF8C  F008    	movff	plusw1,btemp+7
 19328  016550  0E18               	movlw	24
 19329  016552  D005               	goto	u6230
 19330  016554                     u6235:
 19331  016554  90D8               	bcf	status,0,c
 19332  016556  3208               	rrcf	(btemp+7)^0,f,c
 19333  016558  3207               	rrcf	(btemp+6)^0,f,c
 19334  01655A  3206               	rrcf	(btemp+5)^0,f,c
 19335  01655C  3205               	rrcf	(btemp+4)^0,f,c
 19336  01655E                     u6230:
 19337  01655E  2EE8               	decfsz	wreg,f,c
 19338  016560  D7F9               	goto	u6235
 19339  016562  0060  F014  F009   	movff	btemp+4,btemp+8
 19340  016568  0060  F018  F00A   	movff	btemp+5,btemp+9
 19341  01656E  0EFF               	movlw	255
 19342  016570  1609               	andwf	(btemp+8)^0,f,c
 19343  016572  0E00               	movlw	0
 19344  016574  160A               	andwf	(btemp+9)^0,f,c
 19345  016576  500B               	movf	(btemp+10)^0,w,c
 19346  016578  2609               	addwf	(btemp+8)^0,f,c
 19347  01657A  500C               	movf	(btemp+11)^0,w,c
 19348  01657C  220A               	addwfc	(btemp+9)^0,f,c
 19349                           
 19350                           ;stkvar	_e @ sp[(-10)+8]
 19351  01657E  0EFE               	movlw	-2
 19352  016580  0060  F027  FFE3   	movff	btemp+8,plusw1
 19353  016586  0EFF               	movlw	-1
 19354  016588  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19355                           
 19356                           ;stkvar	_e @ sp[(-10)+8]
 19357  01658E  0EFF               	movlw	-1
 19358  016590  BEE3               	btfsc	plusw1,7,c
 19359  016592  D019               	goto	l8278
 19360  016594  0EFF               	movlw	-1
 19361  016596  50E3               	movf	plusw1,w,c
 19362  016598  E108               	bnz	u6240
 19363  01659A  0EFE               	movlw	-2
 19364  01659C  006F FF8C  F001    	movff	plusw1,btemp
 19365  0165A2  0E17               	movlw	23
 19366  0165A4  5E01               	subwf	btemp^0,f,c
 19367  0165A6  A0D8               	btfss	status,0,c
 19368  0165A8  D00E               	goto	l8278
 19369  0165AA                     u6240:
 19370                           
 19371                           ;stkvar	_x @ sp[(-10)+-4]
 19372  0165AA  0EF2               	movlw	-14
 19373  0165AC  006F FF8C  F001    	movff	plusw1,btemp
 19374  0165B2  0EF3               	movlw	-13
 19375  0165B4  006F FF8C  F002    	movff	plusw1,btemp+1
 19376  0165BA  0EF4               	movlw	-12
 19377  0165BC  006F FF8C  F003    	movff	plusw1,btemp+2
 19378  0165C2  0EF5               	movlw	-11
 19379  0165C4  D11F               	goto	L21
 19380  0165C6                     l8278:
 19381                           
 19382                           ;stkvar	_e @ sp[(-10)+8]
 19383  0165C6  0EFF               	movlw	-1
 19384  0165C8  BEE3               	btfsc	plusw1,7,c
 19385  0165CA  D0B4               	goto	l8294
 19386                           
 19387                           ;stkvar	_e @ sp[(-10)+8]
 19388  0165CC  0EFE               	movlw	-2
 19389  0165CE  006F FF8C  F00C    	movff	plusw1,btemp+11
 19390  0165D4  0EFF               	movlw	255
 19391  0165D6  6E05               	movwf	(btemp+4)^0,c
 19392  0165D8  0EFF               	movlw	255
 19393  0165DA  6E06               	movwf	(btemp+5)^0,c
 19394  0165DC  0E7F               	movlw	127
 19395  0165DE  6E07               	movwf	(btemp+6)^0,c
 19396  0165E0  0E00               	movlw	0
 19397  0165E2  6E08               	movwf	(btemp+7)^0,c
 19398  0165E4                     u6265:
 19399  0165E4  660C               	tstfsz	(btemp+11)^0,c
 19400  0165E6  D001               	goto	u6266
 19401  0165E8  D007               	goto	u6267
 19402  0165EA                     u6266:
 19403  0165EA  3408               	rlcf	(btemp+7)^0,w,c
 19404  0165EC  3208               	rrcf	(btemp+7)^0,f,c
 19405  0165EE  3207               	rrcf	(btemp+6)^0,f,c
 19406  0165F0  3206               	rrcf	(btemp+5)^0,f,c
 19407  0165F2  3205               	rrcf	(btemp+4)^0,f,c
 19408  0165F4  2E0C               	decfsz	(btemp+11)^0,f,c
 19409  0165F6  D7F6               	goto	u6265
 19410  0165F8                     u6267:
 19411                           
 19412                           ;stkvar	_m @ sp[(-10)+4]
 19413  0165F8  0EFA               	movlw	-6
 19414  0165FA  0060  F017  FFE3   	movff	btemp+4,plusw1
 19415  016600  0EFB               	movlw	-5
 19416  016602  0060  F01B  FFE3   	movff	btemp+5,plusw1
 19417  016608  0EFC               	movlw	-4
 19418  01660A  0060  F01F  FFE3   	movff	btemp+6,plusw1
 19419  016610  0EFD               	movlw	-3
 19420  016612  0060  F023  FFE3   	movff	btemp+7,plusw1
 19421                           
 19422                           ;stkvar	_m @ sp[(-10)+4]
 19423                           ;stkvar	_u @ sp[(-10)+0]
 19424  016618  0EF6               	movlw	-10
 19425  01661A  006F FF8C  F009    	movff	plusw1,btemp+8
 19426  016620  0EF7               	movlw	-9
 19427  016622  006F FF8C  F00A    	movff	plusw1,btemp+9
 19428  016628  0EF8               	movlw	-8
 19429  01662A  006F FF8C  F00B    	movff	plusw1,btemp+10
 19430  016630  0EF9               	movlw	-7
 19431  016632  006F FF8C  F00C    	movff	plusw1,btemp+11
 19432  016638  0EFA               	movlw	-6
 19433  01663A  50E3               	movf	plusw1,w,c
 19434  01663C  1609               	andwf	(btemp+8)^0,f,c
 19435  01663E  0EFB               	movlw	-5
 19436  016640  50E3               	movf	plusw1,w,c
 19437  016642  160A               	andwf	(btemp+9)^0,f,c
 19438  016644  0EFC               	movlw	-4
 19439  016646  50E3               	movf	plusw1,w,c
 19440  016648  160B               	andwf	(btemp+10)^0,f,c
 19441  01664A  0EFD               	movlw	-3
 19442  01664C  50E3               	movf	plusw1,w,c
 19443  01664E  160C               	andwf	(btemp+11)^0,f,c
 19444  016650  5009               	movf	(btemp+8)^0,w,c
 19445  016652  100A               	iorwf	(btemp+9)^0,w,c
 19446  016654  100B               	iorwf	(btemp+10)^0,w,c
 19447  016656  100C               	iorwf	(btemp+11)^0,w,c
 19448  016658  B4D8               	btfsc	status,2,c
 19449  01665A  D7A7               	goto	u6240
 19450                           
 19451                           ;stkvar	_u @ sp[(-10)+0]
 19452  01665C  0EF6               	movlw	-10
 19453  01665E  006F FF8C  F009    	movff	plusw1,btemp+8
 19454  016664  0EF7               	movlw	-9
 19455  016666  006F FF8C  F00A    	movff	plusw1,btemp+9
 19456  01666C  0EF8               	movlw	-8
 19457  01666E  006F FF8C  F00B    	movff	plusw1,btemp+10
 19458  016674  0EF9               	movlw	-7
 19459  016676  006F FF8C  F00C    	movff	plusw1,btemp+11
 19460  01667C  0E20               	movlw	32
 19461  01667E  D005               	goto	u6280
 19462  016680                     u6285:
 19463  016680  90D8               	bcf	status,0,c
 19464  016682  320C               	rrcf	(btemp+11)^0,f,c
 19465  016684  320B               	rrcf	(btemp+10)^0,f,c
 19466  016686  320A               	rrcf	(btemp+9)^0,f,c
 19467  016688  3209               	rrcf	(btemp+8)^0,f,c
 19468  01668A                     u6280:
 19469  01668A  2EE8               	decfsz	wreg,f,c
 19470  01668C  D7F9               	goto	u6285
 19471  01668E  5009               	movf	(btemp+8)^0,w,c
 19472  016690  B4D8               	btfsc	status,2,c
 19473  016692  D028               	goto	l8292
 19474                           
 19475                           ;stkvar	_m @ sp[(-10)+4]
 19476                           ;stkvar	_u @ sp[(-10)+0]
 19477  016694  0EF6               	movlw	-10
 19478  016696  50E3               	movf	plusw1,w,c
 19479  016698  6E01               	movwf	btemp^0,c
 19480  01669A  0EFA               	movlw	-6
 19481  01669C  50E3               	movf	plusw1,w,c
 19482  01669E  2601               	addwf	btemp^0,f,c
 19483  0166A0  0EF6               	movlw	-10
 19484  0166A2  0060  F007  FFE3   	movff	btemp,plusw1
 19485  0166A8  0EF7               	movlw	-9
 19486  0166AA  50E3               	movf	plusw1,w,c
 19487  0166AC  6E01               	movwf	btemp^0,c
 19488  0166AE  0EFB               	movlw	-5
 19489  0166B0  50E3               	movf	plusw1,w,c
 19490  0166B2  2201               	addwfc	btemp^0,f,c
 19491  0166B4  0EF7               	movlw	-9
 19492  0166B6  0060  F007  FFE3   	movff	btemp,plusw1
 19493  0166BC  0EF8               	movlw	-8
 19494  0166BE  50E3               	movf	plusw1,w,c
 19495  0166C0  6E01               	movwf	btemp^0,c
 19496  0166C2  0EFC               	movlw	-4
 19497  0166C4  50E3               	movf	plusw1,w,c
 19498  0166C6  2201               	addwfc	btemp^0,f,c
 19499  0166C8  0EF8               	movlw	-8
 19500  0166CA  0060  F007  FFE3   	movff	btemp,plusw1
 19501  0166D0  0EF9               	movlw	-7
 19502  0166D2  50E3               	movf	plusw1,w,c
 19503  0166D4  6E01               	movwf	btemp^0,c
 19504  0166D6  0EFD               	movlw	-3
 19505  0166D8  50E3               	movf	plusw1,w,c
 19506  0166DA  2201               	addwfc	btemp^0,f,c
 19507  0166DC  0EF9               	movlw	-7
 19508  0166DE  0060  F007  FFE3   	movff	btemp,plusw1
 19509  0166E4                     l8292:
 19510                           
 19511                           ;stkvar	_m @ sp[(-10)+4]
 19512  0166E4  0EFA               	movlw	-6
 19513  0166E6  006F FF8C  F009    	movff	plusw1,btemp+8
 19514  0166EC  0EFB               	movlw	-5
 19515  0166EE  006F FF8C  F00A    	movff	plusw1,btemp+9
 19516  0166F4  0EFC               	movlw	-4
 19517  0166F6  006F FF8C  F00B    	movff	plusw1,btemp+10
 19518  0166FC  0EFD               	movlw	-3
 19519  0166FE  006F FF8C  F00C    	movff	plusw1,btemp+11
 19520  016704  1C09               	comf	(btemp+8)^0,w,c
 19521  016706  6E05               	movwf	(btemp+4)^0,c
 19522  016708  1C0A               	comf	(btemp+9)^0,w,c
 19523  01670A  6E06               	movwf	(btemp+5)^0,c
 19524  01670C  1C0B               	comf	(btemp+10)^0,w,c
 19525  01670E  6E07               	movwf	(btemp+6)^0,c
 19526  016710  1C0C               	comf	(btemp+11)^0,w,c
 19527  016712  6E08               	movwf	(btemp+7)^0,c
 19528                           
 19529                           ;stkvar	_u @ sp[(-10)+0]
 19530  016714  50E1               	movf	fsr1l,w,c
 19531  016716  0FF6               	addlw	-10
 19532  016718  6ED9               	movwf	fsr2l,c
 19533  01671A  50E2               	movf	fsr1h,w,c
 19534  01671C  6EDA               	movwf	fsr2h,c
 19535  01671E  0EFF               	movlw	255
 19536  016720  22DA               	addwfc	fsr2h,f,c
 19537  016722  5005               	movf	(btemp+4)^0,w,c
 19538  016724  16DE               	andwf	postinc2,f,c
 19539  016726  5006               	movf	(btemp+5)^0,w,c
 19540  016728  16DE               	andwf	postinc2,f,c
 19541  01672A  5007               	movf	(btemp+6)^0,w,c
 19542  01672C  16DE               	andwf	postinc2,f,c
 19543  01672E  5008               	movf	(btemp+7)^0,w,c
 19544  016730  16DE               	andwf	postinc2,f,c
 19545  016732  D05B               	goto	l8302
 19546  016734                     l8294:
 19547                           
 19548                           ;stkvar	_u @ sp[(-10)+0]
 19549  016734  0EF6               	movlw	-10
 19550  016736  006F FF8C  F009    	movff	plusw1,btemp+8
 19551  01673C  0EF7               	movlw	-9
 19552  01673E  006F FF8C  F00A    	movff	plusw1,btemp+9
 19553  016744  0EF8               	movlw	-8
 19554  016746  006F FF8C  F00B    	movff	plusw1,btemp+10
 19555  01674C  0EF9               	movlw	-7
 19556  01674E  006F FF8C  F00C    	movff	plusw1,btemp+11
 19557  016754  0E20               	movlw	32
 19558  016756  D005               	goto	u6300
 19559  016758                     u6305:
 19560  016758  90D8               	bcf	status,0,c
 19561  01675A  320C               	rrcf	(btemp+11)^0,f,c
 19562  01675C  320B               	rrcf	(btemp+10)^0,f,c
 19563  01675E  320A               	rrcf	(btemp+9)^0,f,c
 19564  016760  3209               	rrcf	(btemp+8)^0,f,c
 19565  016762                     u6300:
 19566  016762  2EE8               	decfsz	wreg,f,c
 19567  016764  D7F9               	goto	u6305
 19568  016766  6609               	tstfsz	(btemp+8)^0,c
 19569  016768  D009               	goto	l8298
 19570                           
 19571                           ;stkvar	_u @ sp[(-10)+0]
 19572  01676A  0EF6               	movlw	-10
 19573  01676C  6AE3               	clrf	plusw1,c
 19574  01676E  0EF7               	movlw	-9
 19575  016770  6AE3               	clrf	plusw1,c
 19576  016772  0EF8               	movlw	-8
 19577  016774  6AE3               	clrf	plusw1,c
 19578  016776  0EF9               	movlw	-7
 19579  016778  6AE3               	clrf	plusw1,c
 19580  01677A  D037               	goto	l8302
 19581  01677C                     l8298:
 19582                           
 19583                           ;stkvar	_u @ sp[(-10)+0]
 19584  01677C  0EF6               	movlw	-10
 19585  01677E  006F FF8C  F009    	movff	plusw1,btemp+8
 19586  016784  0EF7               	movlw	-9
 19587  016786  006F FF8C  F00A    	movff	plusw1,btemp+9
 19588  01678C  0EF8               	movlw	-8
 19589  01678E  006F FF8C  F00B    	movff	plusw1,btemp+10
 19590  016794  0EF9               	movlw	-7
 19591  016796  006F FF8C  F00C    	movff	plusw1,btemp+11
 19592  01679C  90D8               	bcf	status,0,c
 19593  01679E  3409               	rlcf	(btemp+8)^0,w,c
 19594  0167A0  6E05               	movwf	(btemp+4)^0,c
 19595  0167A2  340A               	rlcf	(btemp+9)^0,w,c
 19596  0167A4  6E06               	movwf	(btemp+5)^0,c
 19597  0167A6  340B               	rlcf	(btemp+10)^0,w,c
 19598  0167A8  6E07               	movwf	(btemp+6)^0,c
 19599  0167AA  340C               	rlcf	(btemp+11)^0,w,c
 19600  0167AC  6E08               	movwf	(btemp+7)^0,c
 19601  0167AE  5005               	movf	(btemp+4)^0,w,c
 19602  0167B0  1006               	iorwf	(btemp+5)^0,w,c
 19603  0167B2  1007               	iorwf	(btemp+6)^0,w,c
 19604  0167B4  1008               	iorwf	(btemp+7)^0,w,c
 19605  0167B6  B4D8               	btfsc	status,2,c
 19606  0167B8  D018               	goto	l8302
 19607  0167BA  0E00               	movlw	0
 19608  0167BC  6E09               	movwf	(btemp+8)^0,c
 19609  0167BE  0E00               	movlw	0
 19610  0167C0  6E0A               	movwf	(btemp+9)^0,c
 19611  0167C2  0E80               	movlw	128
 19612  0167C4  6E0B               	movwf	(btemp+10)^0,c
 19613  0167C6  0EBF               	movlw	191
 19614  0167C8  6E0C               	movwf	(btemp+11)^0,c
 19615                           
 19616                           ;stkvar	_u @ sp[(-10)+0]
 19617  0167CA  0EF6               	movlw	-10
 19618  0167CC  0060  F027  FFE3   	movff	btemp+8,plusw1
 19619  0167D2  0EF7               	movlw	-9
 19620  0167D4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19621  0167DA  0EF8               	movlw	-8
 19622  0167DC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19623  0167E2  0EF9               	movlw	-7
 19624  0167E4  0060  F033  FFE3   	movff	btemp+11,plusw1
 19625  0167EA                     l8302:
 19626                           
 19627                           ;stkvar	_u @ sp[(-10)+0]
 19628  0167EA  0EF6               	movlw	-10
 19629  0167EC  006F FF8C  F001    	movff	plusw1,btemp
 19630  0167F2  0EF7               	movlw	-9
 19631  0167F4  006F FF8C  F002    	movff	plusw1,btemp+1
 19632  0167FA  0EF8               	movlw	-8
 19633  0167FC  006F FF8C  F003    	movff	plusw1,btemp+2
 19634  016802  0EF9               	movlw	-7
 19635  016804                     L21:
 19636  016804  006F FF8C  F004    	movff	plusw1,btemp+3
 19637                           
 19638                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19639  01680A  0EF2               	movlw	242
 19640  01680C  26E1               	addwf	fsr1l,f,c
 19641  01680E  0EFF               	movlw	255
 19642  016810  22E2               	addwfc	fsr1h,f,c
 19643  016812  0012               	return		;funcret
 19644  016814                     __end_of_floorf:
 19645                           	opt callstack 0
 19646                           
 19647 ;; *************** function ___fpclassifyf *****************
 19648 ;; Defined at:
 19649 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 19650 ;; Parameters:    Size  Location     Type
 19651 ;;  x               4  [STACK] float 
 19652 ;; Auto vars:     Size  Location     Type
 19653 ;;  u               4  [STACK] struct .
 19654 ;;  e               2  [STACK] int 
 19655 ;; Return value:  Size  Location     Type
 19656 ;;                  2  [STACK] int 
 19657 ;; Registers used:
 19658 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 19659 ;; Tracked objects:
 19660 ;;		On entry : 0/0
 19661 ;;		On exit  : 0/0
 19662 ;;		Unchanged: 0/0
 19663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19668 ;;Total ram usage:        0 bytes
 19669 ;; Hardware stack levels used:    1
 19670 ;; Hardware stack levels required when called:   15
 19671 ;; This function calls:
 19672 ;;		Nothing
 19673 ;; This function is called by:
 19674 ;;		_efgtoa
 19675 ;; This function uses a reentrant model
 19676 ;;
 19677                           
 19678                           	psect	text67
 19679  018C2A                     __ptext67:
 19680                           	opt callstack 0
 19681  018C2A                     ___fpclassifyf:
 19682                           	opt callstack 0
 19683                           
 19684                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19685  018C2A  0E06               	movlw	6
 19686  018C2C  26E1               	addwf	fsr1l,f,c
 19687  018C2E  0E00               	movlw	0
 19688  018C30  22E2               	addwfc	fsr1h,f,c
 19689                           
 19690                           ;incstack = 0
 19691 ;; hardware stack exceeded
 19692  018C32  0060  F190  F009   	movff	___fpclassifyf@F463,btemp+8
 19693  018C38  0060  F194  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 19694  018C3E  0060  F198  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 19695  018C44  0060  F19C  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 19696                           
 19697                           ;stkvar	_u @ sp[(-6)+0]
 19698  018C4A  0EFA               	movlw	-6
 19699  018C4C  0060  F027  FFE3   	movff	btemp+8,plusw1
 19700  018C52  0EFB               	movlw	-5
 19701  018C54  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19702  018C5A  0EFC               	movlw	-4
 19703  018C5C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19704  018C62  0EFD               	movlw	-3
 19705  018C64  0060  F033  FFE3   	movff	btemp+11,plusw1
 19706                           
 19707                           ;stkvar	_x @ sp[(-6)+-4]
 19708  018C6A  0EF6               	movlw	-10
 19709  018C6C  006F FF8C  F009    	movff	plusw1,btemp+8
 19710  018C72  0EF7               	movlw	-9
 19711  018C74  006F FF8C  F00A    	movff	plusw1,btemp+9
 19712  018C7A  0EF8               	movlw	-8
 19713  018C7C  006F FF8C  F00B    	movff	plusw1,btemp+10
 19714  018C82  0EF9               	movlw	-7
 19715  018C84  006F FF8C  F00C    	movff	plusw1,btemp+11
 19716                           
 19717                           ;stkvar	_u @ sp[(-6)+0]
 19718  018C8A  0EFA               	movlw	-6
 19719  018C8C  0060  F027  FFE3   	movff	btemp+8,plusw1
 19720  018C92  0EFB               	movlw	-5
 19721  018C94  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19722  018C9A  0EFC               	movlw	-4
 19723  018C9C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19724  018CA2  0EFD               	movlw	-3
 19725  018CA4  0060  F033  FFE3   	movff	btemp+11,plusw1
 19726                           
 19727                           ;stkvar	_u @ sp[(-6)+0]
 19728  018CAA  0EFA               	movlw	-6
 19729  018CAC  006F FF8C  F009    	movff	plusw1,btemp+8
 19730  018CB2  0EFB               	movlw	-5
 19731  018CB4  006F FF8C  F00A    	movff	plusw1,btemp+9
 19732  018CBA  0EFC               	movlw	-4
 19733  018CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 19734  018CC2  0EFD               	movlw	-3
 19735  018CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 19736  018CCA  0E18               	movlw	24
 19737  018CCC  D005               	goto	u6110
 19738  018CCE                     u6115:
 19739  018CCE  90D8               	bcf	status,0,c
 19740  018CD0  320C               	rrcf	(btemp+11)^0,f,c
 19741  018CD2  320B               	rrcf	(btemp+10)^0,f,c
 19742  018CD4  320A               	rrcf	(btemp+9)^0,f,c
 19743  018CD6  3209               	rrcf	(btemp+8)^0,f,c
 19744  018CD8                     u6110:
 19745  018CD8  2EE8               	decfsz	wreg,f,c
 19746  018CDA  D7F9               	goto	u6115
 19747  018CDC  0060  F024  F007   	movff	btemp+8,btemp+6
 19748  018CE2  0060  F028  F008   	movff	btemp+9,btemp+7
 19749  018CE8  0EFF               	movlw	255
 19750  018CEA  1607               	andwf	(btemp+6)^0,f,c
 19751  018CEC  0E00               	movlw	0
 19752  018CEE  1608               	andwf	(btemp+7)^0,f,c
 19753                           
 19754                           ;stkvar	_e @ sp[(-6)+4]
 19755  018CF0  0EFE               	movlw	-2
 19756  018CF2  0060  F01F  FFE3   	movff	btemp+6,plusw1
 19757  018CF8  0EFF               	movlw	-1
 19758  018CFA  0060  F023  FFE3   	movff	btemp+7,plusw1
 19759                           
 19760                           ;stkvar	_e @ sp[(-6)+4]
 19761  018D00  0EFE               	movlw	-2
 19762  018D02  006F FF8C  F001    	movff	plusw1,btemp
 19763  018D08  0EFF               	movlw	-1
 19764  018D0A  50E3               	movf	plusw1,w,c
 19765  018D0C  1001               	iorwf	btemp^0,w,c
 19766  018D0E  A4D8               	btfss	status,2,c
 19767  018D10  D023               	goto	l8240
 19768                           
 19769                           ;stkvar	_u @ sp[(-6)+0]
 19770  018D12  0EFA               	movlw	-6
 19771  018D14  006F FF8C  F009    	movff	plusw1,btemp+8
 19772  018D1A  0EFB               	movlw	-5
 19773  018D1C  006F FF8C  F00A    	movff	plusw1,btemp+9
 19774  018D22  0EFC               	movlw	-4
 19775  018D24  006F FF8C  F00B    	movff	plusw1,btemp+10
 19776  018D2A  0EFD               	movlw	-3
 19777  018D2C  006F FF8C  F00C    	movff	plusw1,btemp+11
 19778  018D32  90D8               	bcf	status,0,c
 19779  018D34  3409               	rlcf	(btemp+8)^0,w,c
 19780  018D36  6E05               	movwf	(btemp+4)^0,c
 19781  018D38  340A               	rlcf	(btemp+9)^0,w,c
 19782  018D3A  6E06               	movwf	(btemp+5)^0,c
 19783  018D3C  340B               	rlcf	(btemp+10)^0,w,c
 19784  018D3E  6E07               	movwf	(btemp+6)^0,c
 19785  018D40  340C               	rlcf	(btemp+11)^0,w,c
 19786  018D42  6E08               	movwf	(btemp+7)^0,c
 19787  018D44  5005               	movf	(btemp+4)^0,w,c
 19788  018D46  1006               	iorwf	(btemp+5)^0,w,c
 19789  018D48  1007               	iorwf	(btemp+6)^0,w,c
 19790  018D4A  1008               	iorwf	(btemp+7)^0,w,c
 19791  018D4C  A4D8               	btfss	status,2,c
 19792  018D4E  D002               	goto	l8236
 19793  018D50  0E02               	movlw	2
 19794  018D52  D02E               	goto	L22
 19795  018D54                     l8236:
 19796  018D54  0E03               	movlw	3
 19797  018D56  D02C               	goto	L22
 19798  018D58                     l8240:
 19799                           
 19800                           ;stkvar	_e @ sp[(-6)+4]
 19801  018D58  0EFE               	movlw	-2
 19802  018D5A  28E3               	incf	plusw1,w,c
 19803  018D5C  E128               	bnz	l8246
 19804  018D5E  0EFF               	movlw	-1
 19805  018D60  50E3               	movf	plusw1,w,c
 19806  018D62  A4D8               	btfss	status,2,c
 19807  018D64  D024               	goto	l8246
 19808                           
 19809                           ;stkvar	_u @ sp[(-6)+0]
 19810  018D66  0EFA               	movlw	-6
 19811  018D68  006F FF8C  F009    	movff	plusw1,btemp+8
 19812  018D6E  0EFB               	movlw	-5
 19813  018D70  006F FF8C  F00A    	movff	plusw1,btemp+9
 19814  018D76  0EFC               	movlw	-4
 19815  018D78  006F FF8C  F00B    	movff	plusw1,btemp+10
 19816  018D7E  0EFD               	movlw	-3
 19817  018D80  006F FF8C  F00C    	movff	plusw1,btemp+11
 19818  018D86  0E09               	movlw	9
 19819  018D88                     u6155:
 19820  018D88  90D8               	bcf	status,0,c
 19821  018D8A  3609               	rlcf	(btemp+8)^0,f,c
 19822  018D8C  360A               	rlcf	(btemp+9)^0,f,c
 19823  018D8E  360B               	rlcf	(btemp+10)^0,f,c
 19824  018D90  360C               	rlcf	(btemp+11)^0,f,c
 19825  018D92  2EE8               	decfsz	wreg,f,c
 19826  018D94  D7F9               	goto	u6155
 19827  018D96  5009               	movf	(btemp+8)^0,w,c
 19828  018D98  100A               	iorwf	(btemp+9)^0,w,c
 19829  018D9A  100B               	iorwf	(btemp+10)^0,w,c
 19830  018D9C  100C               	iorwf	(btemp+11)^0,w,c
 19831  018D9E  A4D8               	btfss	status,2,c
 19832  018DA0  D002               	goto	u6160
 19833  018DA2  0E01               	movlw	1
 19834  018DA4  D001               	goto	u6170
 19835  018DA6                     u6160:
 19836  018DA6  0E00               	movlw	0
 19837  018DA8                     u6170:
 19838  018DA8  6E01               	movwf	btemp^0,c
 19839  018DAA  6A02               	clrf	(btemp+1)^0,c
 19840  018DAC  D004               	goto	l3184
 19841  018DAE                     l8246:
 19842  018DAE  0E04               	movlw	4
 19843  018DB0                     L22:
 19844  018DB0  6E01               	movwf	btemp^0,c
 19845  018DB2  0E00               	movlw	0
 19846  018DB4  6E02               	movwf	(btemp+1)^0,c
 19847  018DB6                     l3184:
 19848                           
 19849                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 19850  018DB6  0EF6               	movlw	246
 19851  018DB8  26E1               	addwf	fsr1l,f,c
 19852  018DBA  0EFF               	movlw	255
 19853  018DBC  22E2               	addwfc	fsr1h,f,c
 19854  018DBE  0012               	return		;funcret
 19855  018DC0                     __end_of___fpclassifyf:
 19856                           	opt callstack 0
 19857                           
 19858 ;; *************** function ___fltol *****************
 19859 ;; Defined at:
 19860 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 19861 ;; Parameters:    Size  Location     Type
 19862 ;;  f1              4  [STACK] int 
 19863 ;; Auto vars:     Size  Location     Type
 19864 ;;  exp1            1  [STACK] unsigned char 
 19865 ;;  sign1           1  [STACK] unsigned char 
 19866 ;; Return value:  Size  Location     Type
 19867 ;;                  4  [STACK] long 
 19868 ;; Registers used:
 19869 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 19870 ;; Tracked objects:
 19871 ;;		On entry : 0/0
 19872 ;;		On exit  : 0/0
 19873 ;;		Unchanged: 0/0
 19874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19879 ;;Total ram usage:        0 bytes
 19880 ;; Hardware stack levels used:    1
 19881 ;; Hardware stack levels required when called:   15
 19882 ;; This function calls:
 19883 ;;		Nothing
 19884 ;; This function is called by:
 19885 ;;		_main
 19886 ;;		_convert_dac_raw
 19887 ;;		_calc_bsoc
 19888 ;;		_init_bsoc
 19889 ;;		_efgtoa
 19890 ;; This function uses a reentrant model
 19891 ;;
 19892                           
 19893                           	psect	text68
 19894  0190C6                     __ptext68:
 19895                           	opt callstack 0
 19896  0190C6                     ___fltol:
 19897                           	opt callstack 0
 19898                           
 19899                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19900  0190C6  52E6               	movf	postinc1,f,c
 19901  0190C8  52E6               	movf	postinc1,f,c
 19902                           
 19903                           ;stkvar	_f1 @ sp[(-2)+-4]
 19904                           
 19905                           ;incstack = 0
 19906 ;; hardware stack exceeded
 19907  0190CA  0EFA               	movlw	-6
 19908  0190CC  006F FF8C  F009    	movff	plusw1,btemp+8
 19909  0190D2  0EFB               	movlw	-5
 19910  0190D4  006F FF8C  F00A    	movff	plusw1,btemp+9
 19911  0190DA  0EFC               	movlw	-4
 19912  0190DC  006F FF8C  F00B    	movff	plusw1,btemp+10
 19913  0190E2  0EFD               	movlw	-3
 19914  0190E4  006F FF8C  F00C    	movff	plusw1,btemp+11
 19915  0190EA  0E18               	movlw	24
 19916  0190EC  D005               	goto	u7320
 19917  0190EE                     u7325:
 19918  0190EE  90D8               	bcf	status,0,c
 19919  0190F0  320C               	rrcf	(btemp+11)^0,f,c
 19920  0190F2  320B               	rrcf	(btemp+10)^0,f,c
 19921  0190F4  320A               	rrcf	(btemp+9)^0,f,c
 19922  0190F6  3209               	rrcf	(btemp+8)^0,f,c
 19923  0190F8                     u7320:
 19924  0190F8  2EE8               	decfsz	wreg,f,c
 19925  0190FA  D7F9               	goto	u7325
 19926                           
 19927                           ;stkvar	_exp1 @ sp[(-2)+0]
 19928  0190FC  0EFE               	movlw	-2
 19929  0190FE  0060  F027  FFE3   	movff	btemp+8,plusw1
 19930  019104  0EFE               	movlw	-2
 19931  019106  50E3               	movf	plusw1,w,c
 19932  019108  A4D8               	btfss	status,2,c
 19933  01910A  D006               	goto	l8866
 19934  01910C                     u7330:
 19935  01910C  0E00               	movlw	0
 19936  01910E  6E01               	movwf	btemp^0,c
 19937  019110  6A02               	clrf	(btemp+1)^0,c
 19938  019112  6A03               	clrf	(btemp+2)^0,c
 19939  019114  6A04               	clrf	(btemp+3)^0,c
 19940  019116  D08B               	goto	l2800
 19941  019118                     l8866:
 19942                           
 19943                           ;stkvar	_f1 @ sp[(-2)+-4]
 19944  019118  0EFA               	movlw	-6
 19945  01911A  006F FF8C  F009    	movff	plusw1,btemp+8
 19946  019120  0EFB               	movlw	-5
 19947  019122  006F FF8C  F00A    	movff	plusw1,btemp+9
 19948  019128  0EFC               	movlw	-4
 19949  01912A  006F FF8C  F00B    	movff	plusw1,btemp+10
 19950  019130  0EFD               	movlw	-3
 19951  019132  006F FF8C  F00C    	movff	plusw1,btemp+11
 19952  019138  0E20               	movlw	32
 19953  01913A  D005               	goto	u7340
 19954  01913C                     u7345:
 19955  01913C  90D8               	bcf	status,0,c
 19956  01913E  320C               	rrcf	(btemp+11)^0,f,c
 19957  019140  320B               	rrcf	(btemp+10)^0,f,c
 19958  019142  320A               	rrcf	(btemp+9)^0,f,c
 19959  019144  3209               	rrcf	(btemp+8)^0,f,c
 19960  019146                     u7340:
 19961  019146  2EE8               	decfsz	wreg,f,c
 19962  019148  D7F9               	goto	u7345
 19963                           
 19964                           ;stkvar	_sign1 @ sp[(-2)+1]
 19965  01914A  0EFF               	movlw	-1
 19966  01914C  0060  F027  FFE3   	movff	btemp+8,plusw1
 19967                           
 19968                           ;stkvar	_f1 @ sp[(-2)+-4]
 19969  019152  0EFC               	movlw	-4
 19970  019154  8EE3               	bsf	plusw1,7,c
 19971                           
 19972                           ;stkvar	_f1 @ sp[(-2)+-4]
 19973  019156  50E1               	movf	fsr1l,w,c
 19974  019158  0FFA               	addlw	-6
 19975  01915A  6ED9               	movwf	fsr2l,c
 19976  01915C  50E2               	movf	fsr1h,w,c
 19977  01915E  6EDA               	movwf	fsr2h,c
 19978  019160  0EFF               	movlw	255
 19979  019162  22DA               	addwfc	fsr2h,f,c
 19980  019164  0EFF               	movlw	255
 19981  019166  16DE               	andwf	postinc2,f,c
 19982  019168  0EFF               	movlw	255
 19983  01916A  16DE               	andwf	postinc2,f,c
 19984  01916C  0EFF               	movlw	255
 19985  01916E  16DE               	andwf	postinc2,f,c
 19986  019170  0E00               	movlw	0
 19987  019172  16DE               	andwf	postinc2,f,c
 19988                           
 19989                           ;stkvar	_exp1 @ sp[(-2)+0]
 19990  019174  0EFE               	movlw	-2
 19991  019176  006F FF8C  F001    	movff	plusw1,btemp
 19992  01917C  0E96               	movlw	150
 19993  01917E  5E01               	subwf	btemp^0,f,c
 19994  019180  0EFE               	movlw	-2
 19995  019182  0060  F007  FFE3   	movff	btemp,plusw1
 19996                           
 19997                           ;stkvar	_exp1 @ sp[(-2)+0]
 19998  019188  0EFE               	movlw	-2
 19999  01918A  AEE3               	btfss	plusw1,7,c
 20000  01918C  D014               	goto	l8884
 20001                           
 20002                           ;stkvar	_exp1 @ sp[(-2)+0]
 20003  01918E  0EFE               	movlw	-2
 20004  019190  50E3               	movf	plusw1,w,c
 20005  019192  0A80               	xorlw	128
 20006  019194  0F97               	addlw	151
 20007  019196  A0D8               	btfss	status,0,c
 20008  019198  D7B9               	goto	u7330
 20009  01919A                     l8882:
 20010                           
 20011                           ;stkvar	_f1 @ sp[(-2)+-4]
 20012  01919A  90D8               	bcf	status,0,c
 20013  01919C  0EFD               	movlw	-3
 20014  01919E  32E3               	rrcf	plusw1,f,c
 20015  0191A0  0EFC               	movlw	-4
 20016  0191A2  32E3               	rrcf	plusw1,f,c
 20017  0191A4  0EFB               	movlw	-5
 20018  0191A6  32E3               	rrcf	plusw1,f,c
 20019  0191A8  0EFA               	movlw	-6
 20020  0191AA  32E3               	rrcf	plusw1,f,c
 20021                           
 20022                           ;stkvar	_exp1 @ sp[(-2)+0]
 20023  0191AC  0EFE               	movlw	-2
 20024  0191AE  2AE3               	incf	plusw1,f,c
 20025  0191B0  B4D8               	btfsc	status,2,c
 20026  0191B2  D018               	goto	u7390
 20027  0191B4  D7F2               	goto	l8882
 20028  0191B6                     l8884:
 20029                           
 20030                           ;stkvar	_exp1 @ sp[(-2)+0]
 20031  0191B6  0EFE               	movlw	-2
 20032  0191B8  006F FF8C  F001    	movff	plusw1,btemp
 20033  0191BE  0E1F               	movlw	31
 20034  0191C0  6401               	cpfsgt	btemp^0,c
 20035  0191C2  D00C               	goto	l8892
 20036  0191C4  D7A3               	goto	u7330
 20037  0191C6                     l8890:
 20038                           
 20039                           ;stkvar	_f1 @ sp[(-2)+-4]
 20040  0191C6  90D8               	bcf	status,0,c
 20041  0191C8  0EFA               	movlw	-6
 20042  0191CA  36E3               	rlcf	plusw1,f,c
 20043  0191CC  0EFB               	movlw	-5
 20044  0191CE  36E3               	rlcf	plusw1,f,c
 20045  0191D0  0EFC               	movlw	-4
 20046  0191D2  36E3               	rlcf	plusw1,f,c
 20047  0191D4  0EFD               	movlw	-3
 20048  0191D6  36E3               	rlcf	plusw1,f,c
 20049                           
 20050                           ;stkvar	_exp1 @ sp[(-2)+0]
 20051  0191D8  0EFE               	movlw	-2
 20052  0191DA  06E3               	decf	plusw1,f,c
 20053  0191DC                     l8892:
 20054                           
 20055                           ;stkvar	_exp1 @ sp[(-2)+0]
 20056  0191DC  0EFE               	movlw	-2
 20057  0191DE  50E3               	movf	plusw1,w,c
 20058  0191E0  A4D8               	btfss	status,2,c
 20059  0191E2  D7F1               	goto	l8890
 20060  0191E4                     u7390:
 20061                           
 20062                           ;stkvar	_sign1 @ sp[(-2)+1]
 20063  0191E4  0EFF               	movlw	-1
 20064  0191E6  50E3               	movf	plusw1,w,c
 20065  0191E8  B4D8               	btfsc	status,2,c
 20066  0191EA  D011               	goto	u7410
 20067                           
 20068                           ;stkvar	_f1 @ sp[(-2)+-4]
 20069                           ;stkvar	_f1 @ sp[(-2)+-4]
 20070  0191EC  0EFA               	movlw	-6
 20071  0191EE  6CE3               	negf	plusw1,c
 20072  0191F0  0EFB               	movlw	-5
 20073  0191F2  1EE3               	comf	plusw1,f,c
 20074  0191F4  0EFC               	movlw	-4
 20075  0191F6  1EE3               	comf	plusw1,f,c
 20076  0191F8  0EFD               	movlw	-3
 20077  0191FA  1EE3               	comf	plusw1,f,c
 20078  0191FC  E308               	bnc	u7410
 20079  0191FE  0EFB               	movlw	-5
 20080  019200  2AE3               	incf	plusw1,f,c
 20081  019202  E305               	bnc	u7410
 20082  019204  0EFC               	movlw	-4
 20083  019206  2AE3               	incf	plusw1,f,c
 20084  019208  E302               	bnc	u7410
 20085  01920A  0EFD               	movlw	-3
 20086  01920C  2AE3               	incf	plusw1,f,c
 20087  01920E                     u7410:
 20088                           
 20089                           ;stkvar	_f1 @ sp[(-2)+-4]
 20090  01920E  0EFA               	movlw	-6
 20091  019210  006F FF8C  F001    	movff	plusw1,btemp
 20092  019216  0EFB               	movlw	-5
 20093  019218  006F FF8C  F002    	movff	plusw1,btemp+1
 20094  01921E  0EFC               	movlw	-4
 20095  019220  006F FF8C  F003    	movff	plusw1,btemp+2
 20096  019226  0EFD               	movlw	-3
 20097  019228  006F FF8C  F004    	movff	plusw1,btemp+3
 20098  01922E                     l2800:
 20099                           
 20100                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 20101  01922E  0EFA               	movlw	250
 20102  019230  26E1               	addwf	fsr1l,f,c
 20103  019232  0EFF               	movlw	255
 20104  019234  22E2               	addwfc	fsr1h,f,c
 20105  019236  0012               	return		;funcret
 20106  019238                     __end_of___fltol:
 20107                           	opt callstack 0
 20108                           
 20109 ;; *************** function ___flneg *****************
 20110 ;; Defined at:
 20111 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 20112 ;; Parameters:    Size  Location     Type
 20113 ;;  f1              4  [STACK] long 
 20114 ;; Auto vars:     Size  Location     Type
 20115 ;;		None
 20116 ;; Return value:  Size  Location     Type
 20117 ;;                  4  [STACK] long 
 20118 ;; Registers used:
 20119 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 20120 ;; Tracked objects:
 20121 ;;		On entry : 0/0
 20122 ;;		On exit  : 0/0
 20123 ;;		Unchanged: 0/0
 20124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20129 ;;Total ram usage:        0 bytes
 20130 ;; Hardware stack levels used:    1
 20131 ;; Hardware stack levels required when called:   15
 20132 ;; This function calls:
 20133 ;;		Nothing
 20134 ;; This function is called by:
 20135 ;;		_calc_bsoc
 20136 ;;		_efgtoa
 20137 ;; This function uses a reentrant model
 20138 ;;
 20139                           
 20140                           	psect	text69
 20141  01B932                     __ptext69:
 20142                           	opt callstack 0
 20143  01B932                     ___flneg:
 20144                           	opt callstack 0
 20145                           
 20146                           ;stkvar	_f1 @ sp[(0)+-4]
 20147                           
 20148                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20149                           ;incstack = 0
 20150 ;; hardware stack exceeded
 20151  01B932  0EFC               	movlw	-4
 20152  01B934  50E3               	movf	plusw1,w,c
 20153  01B936  E10A               	bnz	u7310
 20154  01B938  0EFD               	movlw	-3
 20155  01B93A  50E3               	movf	plusw1,w,c
 20156  01B93C  E107               	bnz	u7310
 20157  01B93E  0EFE               	movlw	-2
 20158  01B940  50E3               	movf	plusw1,w,c
 20159  01B942  E104               	bnz	u7310
 20160  01B944  0EFF               	movlw	-1
 20161  01B946  50E3               	movf	plusw1,w,c
 20162  01B948  B4D8               	btfsc	status,2,c
 20163  01B94A  D002               	goto	l8856
 20164  01B94C                     u7310:
 20165                           
 20166                           ;stkvar	_f1 @ sp[(0)+-4]
 20167  01B94C  0EFF               	movlw	-1
 20168  01B94E  7EE3               	btg	plusw1,7,c
 20169  01B950                     l8856:
 20170                           
 20171                           ;stkvar	_f1 @ sp[(0)+-4]
 20172  01B950  0EFC               	movlw	-4
 20173  01B952  006F FF8C  F001    	movff	plusw1,btemp
 20174  01B958  0EFD               	movlw	-3
 20175  01B95A  006F FF8C  F002    	movff	plusw1,btemp+1
 20176  01B960  0EFE               	movlw	-2
 20177  01B962  006F FF8C  F003    	movff	plusw1,btemp+2
 20178  01B968  0EFF               	movlw	-1
 20179  01B96A  006F FF8C  F004    	movff	plusw1,btemp+3
 20180                           
 20181                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 20182  01B970  52E5               	movf	postdec1,f,c
 20183  01B972  52E5               	movf	postdec1,f,c
 20184  01B974  52E5               	movf	postdec1,f,c
 20185  01B976  52E5               	movf	postdec1,f,c
 20186  01B978  0012               	return		;funcret
 20187  01B97A                     __end_of___flneg:
 20188                           	opt callstack 0
 20189                           
 20190 ;; *************** function ___fleq *****************
 20191 ;; Defined at:
 20192 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 20193 ;; Parameters:    Size  Location     Type
 20194 ;;  ff1             4  [STACK] long 
 20195 ;;  ff2             4  [STACK] long 
 20196 ;; Auto vars:     Size  Location     Type
 20197 ;;		None
 20198 ;; Return value:  Size  Location     Type
 20199 ;;		None               void
 20200 ;; Registers used:
 20201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 20202 ;; Tracked objects:
 20203 ;;		On entry : 0/0
 20204 ;;		On exit  : 0/0
 20205 ;;		Unchanged: 0/0
 20206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20211 ;;Total ram usage:        0 bytes
 20212 ;; Hardware stack levels used:    1
 20213 ;; Hardware stack levels required when called:   15
 20214 ;; This function calls:
 20215 ;;		Nothing
 20216 ;; This function is called by:
 20217 ;;		_efgtoa
 20218 ;; This function uses a reentrant model
 20219 ;;
 20220                           
 20221                           	psect	text70
 20222  01A6FE                     __ptext70:
 20223                           	opt callstack 0
 20224  01A6FE                     ___fleq:
 20225                           	opt callstack 0
 20226                           
 20227                           ;stkvar	_ff1 @ sp[(0)+-4]
 20228                           
 20229                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20230                           ;incstack = 0
 20231 ;; hardware stack exceeded
 20232  01A6FE  50E1               	movf	fsr1l,w,c
 20233  01A700  0FFC               	addlw	-4
 20234  01A702  6ED9               	movwf	fsr2l,c
 20235  01A704  50E2               	movf	fsr1h,w,c
 20236  01A706  6EDA               	movwf	fsr2h,c
 20237  01A708  0EFF               	movlw	255
 20238  01A70A  22DA               	addwfc	fsr2h,f,c
 20239  01A70C  0E00               	movlw	0
 20240  01A70E  14DE               	andwf	postinc2,w,c
 20241  01A710  6E09               	movwf	(btemp+8)^0,c
 20242  01A712  0E00               	movlw	0
 20243  01A714  14DE               	andwf	postinc2,w,c
 20244  01A716  6E0A               	movwf	(btemp+9)^0,c
 20245  01A718  0E80               	movlw	128
 20246  01A71A  14DE               	andwf	postinc2,w,c
 20247  01A71C  6E0B               	movwf	(btemp+10)^0,c
 20248  01A71E  0E7F               	movlw	127
 20249  01A720  14DE               	andwf	postinc2,w,c
 20250  01A722  6E0C               	movwf	(btemp+11)^0,c
 20251  01A724  5009               	movf	(btemp+8)^0,w,c
 20252  01A726  100A               	iorwf	(btemp+9)^0,w,c
 20253  01A728  100B               	iorwf	(btemp+10)^0,w,c
 20254  01A72A  100C               	iorwf	(btemp+11)^0,w,c
 20255  01A72C  A4D8               	btfss	status,2,c
 20256  01A72E  D008               	goto	l8814
 20257                           
 20258                           ;stkvar	_ff1 @ sp[(0)+-4]
 20259  01A730  0EFC               	movlw	-4
 20260  01A732  6AE3               	clrf	plusw1,c
 20261  01A734  0EFD               	movlw	-3
 20262  01A736  6AE3               	clrf	plusw1,c
 20263  01A738  0EFE               	movlw	-2
 20264  01A73A  6AE3               	clrf	plusw1,c
 20265  01A73C  0EFF               	movlw	-1
 20266  01A73E  6AE3               	clrf	plusw1,c
 20267  01A740                     l8814:
 20268                           
 20269                           ;stkvar	_ff2 @ sp[(0)+-8]
 20270  01A740  50E1               	movf	fsr1l,w,c
 20271  01A742  0FF8               	addlw	-8
 20272  01A744  6ED9               	movwf	fsr2l,c
 20273  01A746  50E2               	movf	fsr1h,w,c
 20274  01A748  6EDA               	movwf	fsr2h,c
 20275  01A74A  0EFF               	movlw	255
 20276  01A74C  22DA               	addwfc	fsr2h,f,c
 20277  01A74E  0E00               	movlw	0
 20278  01A750  14DE               	andwf	postinc2,w,c
 20279  01A752  6E09               	movwf	(btemp+8)^0,c
 20280  01A754  0E00               	movlw	0
 20281  01A756  14DE               	andwf	postinc2,w,c
 20282  01A758  6E0A               	movwf	(btemp+9)^0,c
 20283  01A75A  0E80               	movlw	128
 20284  01A75C  14DE               	andwf	postinc2,w,c
 20285  01A75E  6E0B               	movwf	(btemp+10)^0,c
 20286  01A760  0E7F               	movlw	127
 20287  01A762  14DE               	andwf	postinc2,w,c
 20288  01A764  6E0C               	movwf	(btemp+11)^0,c
 20289  01A766  5009               	movf	(btemp+8)^0,w,c
 20290  01A768  100A               	iorwf	(btemp+9)^0,w,c
 20291  01A76A  100B               	iorwf	(btemp+10)^0,w,c
 20292  01A76C  100C               	iorwf	(btemp+11)^0,w,c
 20293  01A76E  A4D8               	btfss	status,2,c
 20294  01A770  D008               	goto	l8818
 20295                           
 20296                           ;stkvar	_ff2 @ sp[(0)+-8]
 20297  01A772  0EF8               	movlw	-8
 20298  01A774  6AE3               	clrf	plusw1,c
 20299  01A776  0EF9               	movlw	-7
 20300  01A778  6AE3               	clrf	plusw1,c
 20301  01A77A  0EFA               	movlw	-6
 20302  01A77C  6AE3               	clrf	plusw1,c
 20303  01A77E  0EFB               	movlw	-5
 20304  01A780  6AE3               	clrf	plusw1,c
 20305  01A782                     l8818:
 20306                           
 20307                           ;stkvar	_ff2 @ sp[(0)+-8]
 20308                           ;stkvar	_ff1 @ sp[(0)+-4]
 20309  01A782  50E1               	movf	fsr1l,w,c
 20310  01A784  0FFC               	addlw	-4
 20311  01A786  6ED9               	movwf	fsr2l,c
 20312  01A788  50E2               	movf	fsr1h,w,c
 20313  01A78A  6EDA               	movwf	fsr2h,c
 20314  01A78C  0EFF               	movlw	255
 20315  01A78E  22DA               	addwfc	fsr2h,f,c
 20316  01A790  0EF8               	movlw	-8
 20317  01A792  50E3               	movf	plusw1,w,c
 20318  01A794  18DE               	xorwf	postinc2,w,c
 20319  01A796  E10D               	bnz	u7250
 20320  01A798  0EF9               	movlw	-7
 20321  01A79A  50E3               	movf	plusw1,w,c
 20322  01A79C  18DE               	xorwf	postinc2,w,c
 20323  01A79E  E109               	bnz	u7250
 20324  01A7A0  0EFA               	movlw	-6
 20325  01A7A2  50E3               	movf	plusw1,w,c
 20326  01A7A4  18DE               	xorwf	postinc2,w,c
 20327  01A7A6  E105               	bnz	u7250
 20328  01A7A8  0EFB               	movlw	-5
 20329  01A7AA  50E3               	movf	plusw1,w,c
 20330  01A7AC  18DE               	xorwf	postinc2,w,c
 20331  01A7AE  B4D8               	btfsc	status,2,c
 20332  01A7B0  D002               	goto	l8822
 20333  01A7B2                     u7250:
 20334  01A7B2  9001               	bcf	btemp& (0+255),0,c
 20335  01A7B4  D001               	goto	l2762
 20336  01A7B6                     l8822:
 20337  01A7B6  8001               	bsf	btemp& (0+255),0,c
 20338  01A7B8                     l2762:
 20339                           
 20340                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 20341  01A7B8  0EF8               	movlw	248
 20342  01A7BA  26E1               	addwf	fsr1l,f,c
 20343  01A7BC  0EFF               	movlw	255
 20344  01A7BE  22E2               	addwfc	fsr1h,f,c
 20345  01A7C0  0012               	return		;funcret
 20346  01A7C2                     __end_of___fleq:
 20347                           	opt callstack 0
 20348                           
 20349 ;; *************** function ___awmod *****************
 20350 ;; Defined at:
 20351 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 20352 ;; Parameters:    Size  Location     Type
 20353 ;;  dividend        2  [STACK] int 
 20354 ;;  divisor         2  [STACK] int 
 20355 ;; Auto vars:     Size  Location     Type
 20356 ;;  sign            1  [STACK] unsigned char 
 20357 ;;  counter         1  [STACK] unsigned char 
 20358 ;; Return value:  Size  Location     Type
 20359 ;;                  2  [STACK] int 
 20360 ;; Registers used:
 20361 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 20362 ;; Tracked objects:
 20363 ;;		On entry : 0/0
 20364 ;;		On exit  : 0/0
 20365 ;;		Unchanged: 0/0
 20366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20371 ;;Total ram usage:        0 bytes
 20372 ;; Hardware stack levels used:    1
 20373 ;; Hardware stack levels required when called:   15
 20374 ;; This function calls:
 20375 ;;		Nothing
 20376 ;; This function is called by:
 20377 ;;		_efgtoa
 20378 ;; This function uses a reentrant model
 20379 ;;
 20380                           
 20381                           	psect	text71
 20382  019D70                     __ptext71:
 20383                           	opt callstack 0
 20384  019D70                     ___awmod:
 20385                           	opt callstack 0
 20386                           
 20387                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20388  019D70  52E6               	movf	postinc1,f,c
 20389  019D72  52E6               	movf	postinc1,f,c
 20390                           
 20391                           ;stkvar	_sign @ sp[(-2)+0]
 20392                           
 20393                           ;incstack = 0
 20394 ;; hardware stack exceeded
 20395  019D74  0EFE               	movlw	-2
 20396  019D76  6AE3               	clrf	plusw1,c
 20397                           
 20398                           ;stkvar	_dividend @ sp[(-2)+-2]
 20399  019D78  0EFD               	movlw	-3
 20400  019D7A  AEE3               	btfss	plusw1,7,c
 20401  019D7C  D009               	goto	l8780
 20402                           
 20403                           ;stkvar	_dividend @ sp[(-2)+-2]
 20404                           ;stkvar	_dividend @ sp[(-2)+-2]
 20405  019D7E  0EFC               	movlw	-4
 20406  019D80  6CE3               	negf	plusw1,c
 20407  019D82  0EFD               	movlw	-3
 20408  019D84  1EE3               	comf	plusw1,f,c
 20409  019D86  B0D8               	btfsc	status,0,c
 20410  019D88  2AE3               	incf	plusw1,f,c
 20411                           
 20412                           ;stkvar	_sign @ sp[(-2)+0]
 20413  019D8A  0EFE               	movlw	-2
 20414  019D8C  6AE3               	clrf	plusw1,c
 20415  019D8E  2AE3               	incf	plusw1,f,c
 20416  019D90                     l8780:
 20417                           
 20418                           ;stkvar	_divisor @ sp[(-2)+-4]
 20419  019D90  0EFB               	movlw	-5
 20420  019D92  AEE3               	btfss	plusw1,7,c
 20421  019D94  D006               	goto	l8784
 20422                           
 20423                           ;stkvar	_divisor @ sp[(-2)+-4]
 20424                           ;stkvar	_divisor @ sp[(-2)+-4]
 20425  019D96  0EFA               	movlw	-6
 20426  019D98  6CE3               	negf	plusw1,c
 20427  019D9A  0EFB               	movlw	-5
 20428  019D9C  1EE3               	comf	plusw1,f,c
 20429  019D9E  B0D8               	btfsc	status,0,c
 20430  019DA0  2AE3               	incf	plusw1,f,c
 20431  019DA2                     l8784:
 20432                           
 20433                           ;stkvar	_divisor @ sp[(-2)+-4]
 20434  019DA2  0EFA               	movlw	-6
 20435  019DA4  006F FF8C  F001    	movff	plusw1,btemp
 20436  019DAA  0EFB               	movlw	-5
 20437  019DAC  50E3               	movf	plusw1,w,c
 20438  019DAE  1001               	iorwf	btemp^0,w,c
 20439  019DB0  B4D8               	btfsc	status,2,c
 20440  019DB2  D053               	goto	u7210
 20441                           
 20442                           ;stkvar	_counter @ sp[(-2)+1]
 20443  019DB4  0EFF               	movlw	-1
 20444  019DB6  6AE3               	clrf	plusw1,c
 20445  019DB8  D012               	goto	L23
 20446  019DBA                     l8788:
 20447                           
 20448                           ;stkvar	_divisor @ sp[(-2)+-4]
 20449  019DBA  0EFA               	movlw	-6
 20450  019DBC  50E3               	movf	plusw1,w,c
 20451  019DBE  90D8               	bcf	status,0,c
 20452  019DC0  34E8               	rlcf	wreg,w,c
 20453  019DC2  6E01               	movwf	btemp^0,c
 20454  019DC4  0EFA               	movlw	-6
 20455  019DC6  0060  F007  FFE3   	movff	btemp,plusw1
 20456  019DCC  0EFB               	movlw	-5
 20457  019DCE  50E3               	movf	plusw1,w,c
 20458  019DD0  34E8               	rlcf	wreg,w,c
 20459  019DD2  6E01               	movwf	btemp^0,c
 20460  019DD4  0EFB               	movlw	-5
 20461  019DD6  0060  F007  FFE3   	movff	btemp,plusw1
 20462                           
 20463                           ;stkvar	_counter @ sp[(-2)+1]
 20464  019DDC  0EFF               	movlw	-1
 20465  019DDE                     L23:
 20466  019DDE  2AE3               	incf	plusw1,f,c
 20467                           
 20468                           ;stkvar	_divisor @ sp[(-2)+-4]
 20469  019DE0  0EFB               	movlw	-5
 20470  019DE2  AEE3               	btfss	plusw1,7,c
 20471  019DE4  D7EA               	goto	l8788
 20472  019DE6                     u7190:
 20473                           
 20474                           ;stkvar	_divisor @ sp[(-2)+-4]
 20475  019DE6  0EFA               	movlw	-6
 20476  019DE8  006F FF8C  F00B    	movff	plusw1,btemp+10
 20477  019DEE  0EFB               	movlw	-5
 20478  019DF0  006F FF8C  F00C    	movff	plusw1,btemp+11
 20479                           
 20480                           ;stkvar	_dividend @ sp[(-2)+-2]
 20481  019DF6  0EFC               	movlw	-4
 20482  019DF8  006F FF8C  F009    	movff	plusw1,btemp+8
 20483  019DFE  0EFD               	movlw	-3
 20484  019E00  006F FF8C  F00A    	movff	plusw1,btemp+9
 20485  019E06  500B               	movf	(btemp+10)^0,w,c
 20486  019E08  5C09               	subwf	(btemp+8)^0,w,c
 20487  019E0A  500C               	movf	(btemp+11)^0,w,c
 20488  019E0C  580A               	subwfb	(btemp+9)^0,w,c
 20489  019E0E  A0D8               	btfss	status,0,c
 20490  019E10  D014               	goto	l8798
 20491                           
 20492                           ;stkvar	_divisor @ sp[(-2)+-4]
 20493                           ;stkvar	_dividend @ sp[(-2)+-2]
 20494  019E12  0EFC               	movlw	-4
 20495  019E14  50E3               	movf	plusw1,w,c
 20496  019E16  6E01               	movwf	btemp^0,c
 20497  019E18  0EFA               	movlw	-6
 20498  019E1A  50E3               	movf	plusw1,w,c
 20499  019E1C  5E01               	subwf	btemp^0,f,c
 20500  019E1E  0EFC               	movlw	-4
 20501  019E20  0060  F007  FFE3   	movff	btemp,plusw1
 20502  019E26  0EFD               	movlw	-3
 20503  019E28  50E3               	movf	plusw1,w,c
 20504  019E2A  6E01               	movwf	btemp^0,c
 20505  019E2C  0EFB               	movlw	-5
 20506  019E2E  50E3               	movf	plusw1,w,c
 20507  019E30  5A01               	subwfb	btemp^0,f,c
 20508  019E32  0EFD               	movlw	-3
 20509  019E34  0060  F007  FFE3   	movff	btemp,plusw1
 20510  019E3A                     l8798:
 20511                           
 20512                           ;stkvar	_divisor @ sp[(-2)+-4]
 20513  019E3A  90D8               	bcf	status,0,c
 20514  019E3C  0EFB               	movlw	-5
 20515  019E3E  32E3               	rrcf	plusw1,f,c
 20516  019E40  0EFA               	movlw	-6
 20517  019E42  32E3               	rrcf	plusw1,f,c
 20518                           
 20519                           ;stkvar	_counter @ sp[(-2)+1]
 20520  019E44  0EFF               	movlw	-1
 20521  019E46  50E3               	movf	plusw1,w,c
 20522  019E48  6E01               	movwf	btemp^0,c
 20523  019E4A  0E01               	movlw	1
 20524  019E4C  5E01               	subwf	btemp^0,f,c
 20525  019E4E  0EFF               	movlw	-1
 20526  019E50  0060  F007  FFE3   	movff	btemp,plusw1
 20527  019E56  A4D8               	btfss	status,2,c
 20528  019E58  D7C6               	goto	u7190
 20529  019E5A                     u7210:
 20530                           
 20531                           ;stkvar	_sign @ sp[(-2)+0]
 20532  019E5A  0EFE               	movlw	-2
 20533  019E5C  50E3               	movf	plusw1,w,c
 20534  019E5E  B4D8               	btfsc	status,2,c
 20535  019E60  D006               	goto	l8806
 20536                           
 20537                           ;stkvar	_dividend @ sp[(-2)+-2]
 20538                           ;stkvar	_dividend @ sp[(-2)+-2]
 20539  019E62  0EFC               	movlw	-4
 20540  019E64  6CE3               	negf	plusw1,c
 20541  019E66  0EFD               	movlw	-3
 20542  019E68  1EE3               	comf	plusw1,f,c
 20543  019E6A  B0D8               	btfsc	status,0,c
 20544  019E6C  2AE3               	incf	plusw1,f,c
 20545  019E6E                     l8806:
 20546                           
 20547                           ;stkvar	_dividend @ sp[(-2)+-2]
 20548  019E6E  0EFC               	movlw	-4
 20549  019E70  006F FF8C  F001    	movff	plusw1,btemp
 20550  019E76  0EFD               	movlw	-3
 20551  019E78  006F FF8C  F002    	movff	plusw1,btemp+1
 20552                           
 20553                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 20554  019E7E  0EFA               	movlw	250
 20555  019E80  26E1               	addwf	fsr1l,f,c
 20556  019E82  0EFF               	movlw	255
 20557  019E84  22E2               	addwfc	fsr1h,f,c
 20558  019E86  0012               	return		;funcret
 20559  019E88                     __end_of___awmod:
 20560                           	opt callstack 0
 20561                           
 20562 ;; *************** function ___awdiv *****************
 20563 ;; Defined at:
 20564 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 20565 ;; Parameters:    Size  Location     Type
 20566 ;;  dividend        2  [STACK] int 
 20567 ;;  divisor         2  [STACK] int 
 20568 ;; Auto vars:     Size  Location     Type
 20569 ;;  quotient        2  [STACK] int 
 20570 ;;  sign            1  [STACK] unsigned char 
 20571 ;;  counter         1  [STACK] unsigned char 
 20572 ;; Return value:  Size  Location     Type
 20573 ;;                  2  [STACK] int 
 20574 ;; Registers used:
 20575 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 20576 ;; Tracked objects:
 20577 ;;		On entry : 0/0
 20578 ;;		On exit  : 0/0
 20579 ;;		Unchanged: 0/0
 20580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20585 ;;Total ram usage:        0 bytes
 20586 ;; Hardware stack levels used:    1
 20587 ;; Hardware stack levels required when called:   15
 20588 ;; This function calls:
 20589 ;;		Nothing
 20590 ;; This function is called by:
 20591 ;;		_efgtoa
 20592 ;; This function uses a reentrant model
 20593 ;;
 20594                           
 20595                           	psect	text72
 20596  0194FE                     __ptext72:
 20597                           	opt callstack 0
 20598  0194FE                     ___awdiv:
 20599                           	opt callstack 0
 20600                           
 20601                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20602  0194FE  52E6               	movf	postinc1,f,c
 20603  019500  52E6               	movf	postinc1,f,c
 20604  019502  52E6               	movf	postinc1,f,c
 20605  019504  52E6               	movf	postinc1,f,c
 20606                           
 20607                           ;stkvar	_sign @ sp[(-4)+2]
 20608                           
 20609                           ;incstack = 0
 20610 ;; hardware stack exceeded
 20611  019506  0EFE               	movlw	-2
 20612  019508  6AE3               	clrf	plusw1,c
 20613                           
 20614                           ;stkvar	_divisor @ sp[(-4)+-4]
 20615  01950A  0EF9               	movlw	-7
 20616  01950C  AEE3               	btfss	plusw1,7,c
 20617  01950E  D009               	goto	l8734
 20618                           
 20619                           ;stkvar	_divisor @ sp[(-4)+-4]
 20620                           ;stkvar	_divisor @ sp[(-4)+-4]
 20621  019510  0EF8               	movlw	-8
 20622  019512  6CE3               	negf	plusw1,c
 20623  019514  0EF9               	movlw	-7
 20624  019516  1EE3               	comf	plusw1,f,c
 20625  019518  B0D8               	btfsc	status,0,c
 20626  01951A  2AE3               	incf	plusw1,f,c
 20627                           
 20628                           ;stkvar	_sign @ sp[(-4)+2]
 20629  01951C  0EFE               	movlw	-2
 20630  01951E  6AE3               	clrf	plusw1,c
 20631  019520  2AE3               	incf	plusw1,f,c
 20632  019522                     l8734:
 20633                           
 20634                           ;stkvar	_dividend @ sp[(-4)+-2]
 20635  019522  0EFB               	movlw	-5
 20636  019524  AEE3               	btfss	plusw1,7,c
 20637  019526  D008               	goto	l8740
 20638                           
 20639                           ;stkvar	_dividend @ sp[(-4)+-2]
 20640                           ;stkvar	_dividend @ sp[(-4)+-2]
 20641  019528  0EFA               	movlw	-6
 20642  01952A  6CE3               	negf	plusw1,c
 20643  01952C  0EFB               	movlw	-5
 20644  01952E  1EE3               	comf	plusw1,f,c
 20645  019530  B0D8               	btfsc	status,0,c
 20646  019532  2AE3               	incf	plusw1,f,c
 20647                           
 20648                           ;stkvar	_sign @ sp[(-4)+2]
 20649  019534  0EFE               	movlw	-2
 20650  019536  70E3               	btg	plusw1,0,c
 20651  019538                     l8740:
 20652                           
 20653                           ;stkvar	_quotient @ sp[(-4)+0]
 20654  019538  0EFC               	movlw	-4
 20655  01953A  6AE3               	clrf	plusw1,c
 20656  01953C  0EFD               	movlw	-3
 20657  01953E  6AE3               	clrf	plusw1,c
 20658                           
 20659                           ;stkvar	_divisor @ sp[(-4)+-4]
 20660  019540  0EF8               	movlw	-8
 20661  019542  006F FF8C  F001    	movff	plusw1,btemp
 20662  019548  0EF9               	movlw	-7
 20663  01954A  50E3               	movf	plusw1,w,c
 20664  01954C  1001               	iorwf	btemp^0,w,c
 20665  01954E  B4D8               	btfsc	status,2,c
 20666  019550  D066               	goto	u7140
 20667                           
 20668                           ;stkvar	_counter @ sp[(-4)+3]
 20669  019552  0EFF               	movlw	-1
 20670  019554  6AE3               	clrf	plusw1,c
 20671  019556  D012               	goto	L24
 20672  019558                     l8746:
 20673                           
 20674                           ;stkvar	_divisor @ sp[(-4)+-4]
 20675  019558  0EF8               	movlw	-8
 20676  01955A  50E3               	movf	plusw1,w,c
 20677  01955C  90D8               	bcf	status,0,c
 20678  01955E  34E8               	rlcf	wreg,w,c
 20679  019560  6E01               	movwf	btemp^0,c
 20680  019562  0EF8               	movlw	-8
 20681  019564  0060  F007  FFE3   	movff	btemp,plusw1
 20682  01956A  0EF9               	movlw	-7
 20683  01956C  50E3               	movf	plusw1,w,c
 20684  01956E  34E8               	rlcf	wreg,w,c
 20685  019570  6E01               	movwf	btemp^0,c
 20686  019572  0EF9               	movlw	-7
 20687  019574  0060  F007  FFE3   	movff	btemp,plusw1
 20688                           
 20689                           ;stkvar	_counter @ sp[(-4)+3]
 20690  01957A  0EFF               	movlw	-1
 20691  01957C                     L24:
 20692  01957C  2AE3               	incf	plusw1,f,c
 20693                           
 20694                           ;stkvar	_divisor @ sp[(-4)+-4]
 20695  01957E  0EF9               	movlw	-7
 20696  019580  AEE3               	btfss	plusw1,7,c
 20697  019582  D7EA               	goto	l8746
 20698  019584                     u7120:
 20699                           
 20700                           ;stkvar	_quotient @ sp[(-4)+0]
 20701  019584  0EFC               	movlw	-4
 20702  019586  50E3               	movf	plusw1,w,c
 20703  019588  90D8               	bcf	status,0,c
 20704  01958A  34E8               	rlcf	wreg,w,c
 20705  01958C  6E01               	movwf	btemp^0,c
 20706  01958E  0EFC               	movlw	-4
 20707  019590  0060  F007  FFE3   	movff	btemp,plusw1
 20708  019596  0EFD               	movlw	-3
 20709  019598  50E3               	movf	plusw1,w,c
 20710  01959A  34E8               	rlcf	wreg,w,c
 20711  01959C  6E01               	movwf	btemp^0,c
 20712  01959E  0EFD               	movlw	-3
 20713  0195A0  0060  F007  FFE3   	movff	btemp,plusw1
 20714                           
 20715                           ;stkvar	_divisor @ sp[(-4)+-4]
 20716  0195A6  0EF8               	movlw	-8
 20717  0195A8  006F FF8C  F00B    	movff	plusw1,btemp+10
 20718  0195AE  0EF9               	movlw	-7
 20719  0195B0  006F FF8C  F00C    	movff	plusw1,btemp+11
 20720                           
 20721                           ;stkvar	_dividend @ sp[(-4)+-2]
 20722  0195B6  0EFA               	movlw	-6
 20723  0195B8  006F FF8C  F009    	movff	plusw1,btemp+8
 20724  0195BE  0EFB               	movlw	-5
 20725  0195C0  006F FF8C  F00A    	movff	plusw1,btemp+9
 20726  0195C6  500B               	movf	(btemp+10)^0,w,c
 20727  0195C8  5C09               	subwf	(btemp+8)^0,w,c
 20728  0195CA  500C               	movf	(btemp+11)^0,w,c
 20729  0195CC  580A               	subwfb	(btemp+9)^0,w,c
 20730  0195CE  A0D8               	btfss	status,0,c
 20731  0195D0  D016               	goto	l8760
 20732                           
 20733                           ;stkvar	_divisor @ sp[(-4)+-4]
 20734                           ;stkvar	_dividend @ sp[(-4)+-2]
 20735  0195D2  0EFA               	movlw	-6
 20736  0195D4  50E3               	movf	plusw1,w,c
 20737  0195D6  6E01               	movwf	btemp^0,c
 20738  0195D8  0EF8               	movlw	-8
 20739  0195DA  50E3               	movf	plusw1,w,c
 20740  0195DC  5E01               	subwf	btemp^0,f,c
 20741  0195DE  0EFA               	movlw	-6
 20742  0195E0  0060  F007  FFE3   	movff	btemp,plusw1
 20743  0195E6  0EFB               	movlw	-5
 20744  0195E8  50E3               	movf	plusw1,w,c
 20745  0195EA  6E01               	movwf	btemp^0,c
 20746  0195EC  0EF9               	movlw	-7
 20747  0195EE  50E3               	movf	plusw1,w,c
 20748  0195F0  5A01               	subwfb	btemp^0,f,c
 20749  0195F2  0EFB               	movlw	-5
 20750  0195F4  0060  F007  FFE3   	movff	btemp,plusw1
 20751                           
 20752                           ;stkvar	_quotient @ sp[(-4)+0]
 20753  0195FA  0EFC               	movlw	-4
 20754  0195FC  80E3               	bsf	plusw1,0,c
 20755  0195FE                     l8760:
 20756                           
 20757                           ;stkvar	_divisor @ sp[(-4)+-4]
 20758  0195FE  90D8               	bcf	status,0,c
 20759  019600  0EF9               	movlw	-7
 20760  019602  32E3               	rrcf	plusw1,f,c
 20761  019604  0EF8               	movlw	-8
 20762  019606  32E3               	rrcf	plusw1,f,c
 20763                           
 20764                           ;stkvar	_counter @ sp[(-4)+3]
 20765  019608  0EFF               	movlw	-1
 20766  01960A  50E3               	movf	plusw1,w,c
 20767  01960C  6E01               	movwf	btemp^0,c
 20768  01960E  0E01               	movlw	1
 20769  019610  5E01               	subwf	btemp^0,f,c
 20770  019612  0EFF               	movlw	-1
 20771  019614  0060  F007  FFE3   	movff	btemp,plusw1
 20772  01961A  A4D8               	btfss	status,2,c
 20773  01961C  D7B3               	goto	u7120
 20774  01961E                     u7140:
 20775                           
 20776                           ;stkvar	_sign @ sp[(-4)+2]
 20777  01961E  0EFE               	movlw	-2
 20778  019620  50E3               	movf	plusw1,w,c
 20779  019622  B4D8               	btfsc	status,2,c
 20780  019624  D006               	goto	l8768
 20781                           
 20782                           ;stkvar	_quotient @ sp[(-4)+0]
 20783                           ;stkvar	_quotient @ sp[(-4)+0]
 20784  019626  0EFC               	movlw	-4
 20785  019628  6CE3               	negf	plusw1,c
 20786  01962A  0EFD               	movlw	-3
 20787  01962C  1EE3               	comf	plusw1,f,c
 20788  01962E  B0D8               	btfsc	status,0,c
 20789  019630  2AE3               	incf	plusw1,f,c
 20790  019632                     l8768:
 20791                           
 20792                           ;stkvar	_quotient @ sp[(-4)+0]
 20793  019632  0EFC               	movlw	-4
 20794  019634  006F FF8C  F001    	movff	plusw1,btemp
 20795  01963A  0EFD               	movlw	-3
 20796  01963C  006F FF8C  F002    	movff	plusw1,btemp+1
 20797                           
 20798                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 20799  019642  0EF8               	movlw	248
 20800  019644  26E1               	addwf	fsr1l,f,c
 20801  019646  0EFF               	movlw	255
 20802  019648  22E2               	addwfc	fsr1h,f,c
 20803  01964A  0012               	return		;funcret
 20804  01964C                     __end_of___awdiv:
 20805                           	opt callstack 0
 20806                           
 20807 ;; *************** function _dtoa *****************
 20808 ;; Defined at:
 20809 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20810 ;; Parameters:    Size  Location     Type
 20811 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20812 ;;		 -> f(6), NULL(0), 
 20813 ;;  d               8  [STACK] long long 
 20814 ;; Auto vars:     Size  Location     Type
 20815 ;;  n               8  [STACK] long long 
 20816 ;;  i               2  [STACK] int 
 20817 ;;  s               2  [STACK] int 
 20818 ;;  w               2  [STACK] int 
 20819 ;;  p               2  [STACK] int 
 20820 ;; Return value:  Size  Location     Type
 20821 ;;                  2  [STACK] int 
 20822 ;; Registers used:
 20823 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 20824 ;; Tracked objects:
 20825 ;;		On entry : 0/0
 20826 ;;		On exit  : 0/0
 20827 ;;		Unchanged: 0/0
 20828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20833 ;;Total ram usage:        0 bytes
 20834 ;; Hardware stack levels used:    1
 20835 ;; Hardware stack levels required when called:   20
 20836 ;; This function calls:
 20837 ;;		___aodiv
 20838 ;;		___aomod
 20839 ;;		_abs
 20840 ;;		_pad
 20841 ;; This function is called by:
 20842 ;;		_vfpfcnvrt
 20843 ;; This function uses a reentrant model
 20844 ;;
 20845                           
 20846                           	psect	text73
 20847  015822                     __ptext73:
 20848                           	opt callstack 0
 20849  015822                     _dtoa:
 20850                           	opt callstack 0
 20851                           
 20852                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 20853  015822  0E12               	movlw	18
 20854  015824  26E1               	addwf	fsr1l,f,c
 20855  015826  0E00               	movlw	0
 20856  015828  22E2               	addwfc	fsr1h,f,c
 20857                           
 20858                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 20859                           ;stkvar	_d @ sp[(-18)+-10]
 20860                           
 20861                           ;incstack = 0
 20862 ;; hardware stack exceeded
 20863  01582A  0EE4               	movlw	228
 20864  01582C  24E1               	addwf	fsr1l,w,c
 20865  01582E  6ED9               	movwf	fsr2l,c
 20866  015830  0EFF               	movlw	255
 20867  015832  20E2               	addwfc	fsr1h,w,c
 20868  015834  6EDA               	movwf	fsr2h,c
 20869                           
 20870                           ;stkvar	_n @ sp[(-18)+2]
 20871  015836  0E08               	movlw	8
 20872  015838  6E01               	movwf	btemp^0,c
 20873  01583A  0EF0               	movlw	-16
 20874  01583C                     us1112999:
 20875  01583C  006F FF7B FFE3     	movff	postinc2,plusw1
 20876  015842  28E8               	incf	wreg,w,c
 20877  015844  2E01               	decfsz	btemp^0,f,c
 20878  015846  D7FA               	bra	us1112999
 20879                           
 20880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 20881                           ;stkvar	_n @ sp[(-18)+2]
 20882  015848  0EF7               	movlw	-9
 20883  01584A  AEE3               	btfss	plusw1,7,c
 20884  01584C  D002               	goto	u11130
 20885  01584E  0E01               	movlw	1
 20886  015850  D001               	goto	u11140
 20887  015852                     u11130:
 20888  015852  0E00               	movlw	0
 20889  015854                     u11140:
 20890  015854  6E0B               	movwf	(btemp+10)^0,c
 20891  015856  6A0C               	clrf	(btemp+11)^0,c
 20892                           
 20893                           ;stkvar	_s @ sp[(-18)+12]
 20894  015858  0EFA               	movlw	-6
 20895  01585A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20896  015860  0EFB               	movlw	-5
 20897  015862  0060  F033  FFE3   	movff	btemp+11,plusw1
 20898                           
 20899                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 20900                           ;stkvar	_s @ sp[(-18)+12]
 20901  015868  0EFA               	movlw	-6
 20902  01586A  006F FF8C  F001    	movff	plusw1,btemp
 20903  015870  0EFB               	movlw	-5
 20904  015872  50E3               	movf	plusw1,w,c
 20905  015874  1001               	iorwf	btemp^0,w,c
 20906  015876  B4D8               	btfsc	status,2,c
 20907  015878  D025               	goto	u11160
 20908                           
 20909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 20910                           ;stkvar	_n @ sp[(-18)+2]
 20911                           ;stkvar	_n @ sp[(-18)+2]
 20912  01587A  0EF0               	movlw	-16
 20913  01587C  6CE3               	negf	plusw1,c
 20914  01587E  0EF1               	movlw	-15
 20915  015880  1EE3               	comf	plusw1,f,c
 20916  015882  0EF2               	movlw	-14
 20917  015884  1EE3               	comf	plusw1,f,c
 20918  015886  0EF3               	movlw	-13
 20919  015888  1EE3               	comf	plusw1,f,c
 20920  01588A  0EF4               	movlw	-12
 20921  01588C  1EE3               	comf	plusw1,f,c
 20922  01588E  0EF5               	movlw	-11
 20923  015890  1EE3               	comf	plusw1,f,c
 20924  015892  0EF6               	movlw	-10
 20925  015894  1EE3               	comf	plusw1,f,c
 20926  015896  0EF7               	movlw	-9
 20927  015898  1EE3               	comf	plusw1,f,c
 20928  01589A  E314               	bnc	u11160
 20929  01589C  0EF1               	movlw	-15
 20930  01589E  2AE3               	incf	plusw1,f,c
 20931  0158A0  E311               	bnc	u11160
 20932  0158A2  0EF2               	movlw	-14
 20933  0158A4  2AE3               	incf	plusw1,f,c
 20934  0158A6  E30E               	bnc	u11160
 20935  0158A8  0EF3               	movlw	-13
 20936  0158AA  2AE3               	incf	plusw1,f,c
 20937  0158AC  E30B               	bnc	u11160
 20938  0158AE  0EF4               	movlw	-12
 20939  0158B0  2AE3               	incf	plusw1,f,c
 20940  0158B2  E308               	bnc	u11160
 20941  0158B4  0EF5               	movlw	-11
 20942  0158B6  2AE3               	incf	plusw1,f,c
 20943  0158B8  E305               	bnc	u11160
 20944  0158BA  0EF6               	movlw	-10
 20945  0158BC  2AE3               	incf	plusw1,f,c
 20946  0158BE  E302               	bnc	u11160
 20947  0158C0  0EF7               	movlw	-9
 20948  0158C2  2AE3               	incf	plusw1,f,c
 20949  0158C4                     u11160:
 20950                           
 20951                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 20952  0158C4  AE3D               	btfss	(_prec+1)^0,7,c
 20953                           
 20954                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 20955  0158C6  923E               	bcf	_flags^0,1,c
 20956                           
 20957                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 20958  0158C8  BE3D               	btfsc	(_prec+1)^0,7,c
 20959  0158CA  D005               	goto	u11180
 20960  0158CC  503D               	movf	(_prec+1)^0,w,c
 20961  0158CE  E110               	bnz	l12276
 20962  0158D0  043C               	decf	_prec^0,w,c
 20963  0158D2  B0D8               	btfsc	status,0,c
 20964  0158D4  D00D               	goto	l12276
 20965  0158D6                     u11180:
 20966  0158D6  0E01               	movlw	1
 20967  0158D8  6E0B               	movwf	(btemp+10)^0,c
 20968  0158DA  0E00               	movlw	0
 20969  0158DC  6E0C               	movwf	(btemp+11)^0,c
 20970                           
 20971                           ;stkvar	_p @ sp[(-18)+16]
 20972  0158DE  0EFE               	movlw	-2
 20973  0158E0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20974  0158E6  0EFF               	movlw	-1
 20975  0158E8  0060  F033  FFE3   	movff	btemp+11,plusw1
 20976  0158EE  D008               	goto	l2266
 20977  0158F0                     l12276:
 20978                           
 20979                           ;stkvar	_p @ sp[(-18)+16]
 20980  0158F0  0EFE               	movlw	-2
 20981  0158F2  0060  F0F3  FFE3   	movff	_prec,plusw1
 20982  0158F8  0EFF               	movlw	-1
 20983  0158FA  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 20984  015900                     l2266:
 20985                           
 20986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 20987                           ;stkvar	_w @ sp[(-18)+14]
 20988  015900  0EFC               	movlw	-4
 20989  015902  0060  F0EB  FFE3   	movff	_width,plusw1
 20990  015908  0EFD               	movlw	-3
 20991  01590A  0060  F0EF  FFE3   	movff	_width+1,plusw1
 20992                           
 20993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 20994                           ;stkvar	_s @ sp[(-18)+12]
 20995  015910  0EFA               	movlw	-6
 20996  015912  006F FF8C  F001    	movff	plusw1,btemp
 20997  015918  0EFB               	movlw	-5
 20998  01591A  50E3               	movf	plusw1,w,c
 20999  01591C  1001               	iorwf	btemp^0,w,c
 21000  01591E  A4D8               	btfss	status,2,c
 21001  015920  D002               	goto	u11200
 21002  015922  A43E               	btfss	_flags^0,2,c
 21003  015924  D00A               	goto	l12284
 21004  015926                     u11200:
 21005                           
 21006                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 21007                           ;stkvar	_w @ sp[(-18)+14]
 21008  015926  50E1               	movf	fsr1l,w,c
 21009  015928  0FFC               	addlw	-4
 21010  01592A  6ED9               	movwf	fsr2l,c
 21011  01592C  50E2               	movf	fsr1h,w,c
 21012  01592E  6EDA               	movwf	fsr2h,c
 21013  015930  0EFF               	movlw	255
 21014  015932  22DA               	addwfc	fsr2h,f,c
 21015  015934  06DE               	decf	postinc2,f,c
 21016  015936  0E00               	movlw	0
 21017  015938  5ADD               	subwfb	postdec2,f,c
 21018  01593A                     l12284:
 21019                           
 21020                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 21021  01593A  0E4F               	movlw	79
 21022  01593C  6E0B               	movwf	(btemp+10)^0,c
 21023  01593E  0E00               	movlw	0
 21024  015940  6E0C               	movwf	(btemp+11)^0,c
 21025                           
 21026                           ;stkvar	_i @ sp[(-18)+10]
 21027  015942  0EF8               	movlw	-8
 21028  015944  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21029  01594A  0EF9               	movlw	-7
 21030  01594C  0060  F033  FFE3   	movff	btemp+11,plusw1
 21031                           
 21032                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 21033  015952  0102               	movlb	2	; () banked
 21034  015954  6BE6               	clrf	(_dbuf+79)& (0+255),b
 21035                           
 21036                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 21037  015956  D109               	goto	l12298
 21038  015958                     l12288:
 21039                           
 21040                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 21041                           ;stkvar	_i @ sp[(-18)+10]
 21042  015958  50E1               	movf	fsr1l,w,c
 21043  01595A  0FF8               	addlw	-8
 21044  01595C  6ED9               	movwf	fsr2l,c
 21045  01595E  50E2               	movf	fsr1h,w,c
 21046  015960  6EDA               	movwf	fsr2h,c
 21047  015962  0EFF               	movlw	255
 21048  015964  22DA               	addwfc	fsr2h,f,c
 21049  015966  06DE               	decf	postinc2,f,c
 21050  015968  0E00               	movlw	0
 21051  01596A  5ADD               	subwfb	postdec2,f,c
 21052                           
 21053                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 21054  01596C  0E0A               	movlw	10
 21055  01596E  6EE6               	movwf	postinc1,c
 21056  015970  0E00               	movlw	0
 21057  015972  6EE6               	movwf	postinc1,c
 21058  015974  0E00               	movlw	0
 21059  015976  6EE6               	movwf	postinc1,c
 21060  015978  0E00               	movlw	0
 21061  01597A  6EE6               	movwf	postinc1,c
 21062  01597C  0E00               	movlw	0
 21063  01597E  6EE6               	movwf	postinc1,c
 21064  015980  0E00               	movlw	0
 21065  015982  6EE6               	movwf	postinc1,c
 21066  015984  0E00               	movlw	0
 21067  015986  6EE6               	movwf	postinc1,c
 21068  015988  0E00               	movlw	0
 21069  01598A  6EE6               	movwf	postinc1,c
 21070                           
 21071                           ;stkvar	_n @ sp[(-26)+2]
 21072  01598C  50E1               	movf	fsr1l,w,c
 21073  01598E  0FE8               	addlw	-24
 21074  015990  6ED9               	movwf	fsr2l,c
 21075  015992  50E2               	movf	fsr1h,w,c
 21076  015994  6EDA               	movwf	fsr2h,c
 21077  015996  0EFF               	movlw	255
 21078  015998  22DA               	addwfc	fsr2h,f,c
 21079  01599A  006F FF7B FFE6     	movff	postinc2,postinc1
 21080  0159A0  006F FF7B FFE6     	movff	postinc2,postinc1
 21081  0159A6  006F FF7B FFE6     	movff	postinc2,postinc1
 21082  0159AC  006F FF7B FFE6     	movff	postinc2,postinc1
 21083  0159B2  006F FF7B FFE6     	movff	postinc2,postinc1
 21084  0159B8  006F FF7B FFE6     	movff	postinc2,postinc1
 21085  0159BE  006F FF7B FFE6     	movff	postinc2,postinc1
 21086  0159C4  006F FF7B FFE6     	movff	postinc2,postinc1
 21087  0159CA  EC1E  F0BF         	call	___aomod	;wreg free
 21088  0159CE  52E5               	movf	postdec1,f,c
 21089  0159D0  006F FF9C  F018    	movff	indf1,btemp+23
 21090  0159D6  52E5               	movf	postdec1,f,c
 21091  0159D8  006F FF9C  F017    	movff	indf1,btemp+22
 21092  0159DE  52E5               	movf	postdec1,f,c
 21093  0159E0  006F FF9C  F016    	movff	indf1,btemp+21
 21094  0159E6  52E5               	movf	postdec1,f,c
 21095  0159E8  006F FF9C  F015    	movff	indf1,btemp+20
 21096  0159EE  52E5               	movf	postdec1,f,c
 21097  0159F0  006F FF9C  F014    	movff	indf1,btemp+19
 21098  0159F6  52E5               	movf	postdec1,f,c
 21099  0159F8  006F FF9C  F013    	movff	indf1,btemp+18
 21100  0159FE  52E5               	movf	postdec1,f,c
 21101  015A00  006F FF9C  F012    	movff	indf1,btemp+17
 21102  015A06  52E5               	movf	postdec1,f,c
 21103  015A08  006F FF9C  F011    	movff	indf1,btemp+16
 21104  015A0E  0EF8               	movlw	248
 21105  015A10  26E1               	addwf	fsr1l,f,c
 21106  015A12  0EFF               	movlw	255
 21107  015A14  22E2               	addwfc	fsr1h,f,c
 21108  015A16  0060  F044  F00B   	movff	btemp+16,btemp+10
 21109  015A1C  0060  F048  F00C   	movff	btemp+17,btemp+11
 21110  015A22  0060  F02F  FFE6   	movff	btemp+10,postinc1
 21111  015A28  0060  F033  FFE6   	movff	btemp+11,postinc1
 21112  015A2E  EC29  F0DD         	call	_abs	;wreg free
 21113  015A32  0E30               	movlw	48
 21114  015A34  2601               	addwf	btemp^0,f,c
 21115                           
 21116                           ;stkvar	_i @ sp[(-18)+10]
 21117  015A36  0EF8               	movlw	-8
 21118  015A38  006F FF8C  F00B    	movff	plusw1,btemp+10
 21119  015A3E  0EF9               	movlw	-7
 21120  015A40  006F FF8C  F00C    	movff	plusw1,btemp+11
 21121  015A46  0E97               	movlw	low _dbuf
 21122  015A48  240B               	addwf	(btemp+10)^0,w,c
 21123  015A4A  6ED9               	movwf	fsr2l,c
 21124  015A4C  0E02               	movlw	high _dbuf
 21125  015A4E  200C               	addwfc	(btemp+11)^0,w,c
 21126  015A50  6EDA               	movwf	fsr2h,c
 21127  015A52  0060  F007  FFDF   	movff	btemp,indf2
 21128                           
 21129                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 21130                           ;stkvar	_p @ sp[(-18)+16]
 21131  015A58  50E1               	movf	fsr1l,w,c
 21132  015A5A  0FFE               	addlw	-2
 21133  015A5C  6ED9               	movwf	fsr2l,c
 21134  015A5E  50E2               	movf	fsr1h,w,c
 21135  015A60  6EDA               	movwf	fsr2h,c
 21136  015A62  0EFF               	movlw	255
 21137  015A64  22DA               	addwfc	fsr2h,f,c
 21138  015A66  06DE               	decf	postinc2,f,c
 21139  015A68  0E00               	movlw	0
 21140  015A6A  5ADD               	subwfb	postdec2,f,c
 21141                           
 21142                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 21143                           ;stkvar	_w @ sp[(-18)+14]
 21144  015A6C  50E1               	movf	fsr1l,w,c
 21145  015A6E  0FFC               	addlw	-4
 21146  015A70  6ED9               	movwf	fsr2l,c
 21147  015A72  50E2               	movf	fsr1h,w,c
 21148  015A74  6EDA               	movwf	fsr2h,c
 21149  015A76  0EFF               	movlw	255
 21150  015A78  22DA               	addwfc	fsr2h,f,c
 21151  015A7A  06DE               	decf	postinc2,f,c
 21152  015A7C  0E00               	movlw	0
 21153  015A7E  5ADD               	subwfb	postdec2,f,c
 21154                           
 21155                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 21156  015A80  0E0A               	movlw	10
 21157  015A82  6EE6               	movwf	postinc1,c
 21158  015A84  0E00               	movlw	0
 21159  015A86  6EE6               	movwf	postinc1,c
 21160  015A88  0E00               	movlw	0
 21161  015A8A  6EE6               	movwf	postinc1,c
 21162  015A8C  0E00               	movlw	0
 21163  015A8E  6EE6               	movwf	postinc1,c
 21164  015A90  0E00               	movlw	0
 21165  015A92  6EE6               	movwf	postinc1,c
 21166  015A94  0E00               	movlw	0
 21167  015A96  6EE6               	movwf	postinc1,c
 21168  015A98  0E00               	movlw	0
 21169  015A9A  6EE6               	movwf	postinc1,c
 21170  015A9C  0E00               	movlw	0
 21171  015A9E  6EE6               	movwf	postinc1,c
 21172                           
 21173                           ;stkvar	_n @ sp[(-26)+2]
 21174  015AA0  50E1               	movf	fsr1l,w,c
 21175  015AA2  0FE8               	addlw	-24
 21176  015AA4  6ED9               	movwf	fsr2l,c
 21177  015AA6  50E2               	movf	fsr1h,w,c
 21178  015AA8  6EDA               	movwf	fsr2h,c
 21179  015AAA  0EFF               	movlw	255
 21180  015AAC  22DA               	addwfc	fsr2h,f,c
 21181  015AAE  006F FF7B FFE6     	movff	postinc2,postinc1
 21182  015AB4  006F FF7B FFE6     	movff	postinc2,postinc1
 21183  015ABA  006F FF7B FFE6     	movff	postinc2,postinc1
 21184  015AC0  006F FF7B FFE6     	movff	postinc2,postinc1
 21185  015AC6  006F FF7B FFE6     	movff	postinc2,postinc1
 21186  015ACC  006F FF7B FFE6     	movff	postinc2,postinc1
 21187  015AD2  006F FF7B FFE6     	movff	postinc2,postinc1
 21188  015AD8  006F FF7B FFE6     	movff	postinc2,postinc1
 21189  015ADE  EC81  F0BB         	call	___aodiv	;wreg free
 21190  015AE2  52E5               	movf	postdec1,f,c
 21191  015AE4  006F FF9C  F018    	movff	indf1,btemp+23
 21192  015AEA  52E5               	movf	postdec1,f,c
 21193  015AEC  006F FF9C  F017    	movff	indf1,btemp+22
 21194  015AF2  52E5               	movf	postdec1,f,c
 21195  015AF4  006F FF9C  F016    	movff	indf1,btemp+21
 21196  015AFA  52E5               	movf	postdec1,f,c
 21197  015AFC  006F FF9C  F015    	movff	indf1,btemp+20
 21198  015B02  52E5               	movf	postdec1,f,c
 21199  015B04  006F FF9C  F014    	movff	indf1,btemp+19
 21200  015B0A  52E5               	movf	postdec1,f,c
 21201  015B0C  006F FF9C  F013    	movff	indf1,btemp+18
 21202  015B12  52E5               	movf	postdec1,f,c
 21203  015B14  006F FF9C  F012    	movff	indf1,btemp+17
 21204  015B1A  52E5               	movf	postdec1,f,c
 21205  015B1C  006F FF9C  F011    	movff	indf1,btemp+16
 21206  015B22  0EF8               	movlw	248
 21207  015B24  26E1               	addwf	fsr1l,f,c
 21208  015B26  0EFF               	movlw	255
 21209  015B28  22E2               	addwfc	fsr1h,f,c
 21210                           
 21211                           ;stkvar	_n @ sp[(-18)+2]
 21212  015B2A  0EF0               	movlw	-16
 21213  015B2C  0060  F047  FFE3   	movff	btemp+16,plusw1
 21214  015B32  0EF1               	movlw	-15
 21215  015B34  0060  F04B  FFE3   	movff	btemp+17,plusw1
 21216  015B3A  0EF2               	movlw	-14
 21217  015B3C  0060  F04F  FFE3   	movff	btemp+18,plusw1
 21218  015B42  0EF3               	movlw	-13
 21219  015B44  0060  F053  FFE3   	movff	btemp+19,plusw1
 21220  015B4A  0EF4               	movlw	-12
 21221  015B4C  0060  F057  FFE3   	movff	btemp+20,plusw1
 21222  015B52  0EF5               	movlw	-11
 21223  015B54  0060  F05B  FFE3   	movff	btemp+21,plusw1
 21224  015B5A  0EF6               	movlw	-10
 21225  015B5C  0060  F05F  FFE3   	movff	btemp+22,plusw1
 21226  015B62  0EF7               	movlw	-9
 21227  015B64  0060  F063  FFE3   	movff	btemp+23,plusw1
 21228  015B6A                     l12298:
 21229                           
 21230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 21231                           ;stkvar	_i @ sp[(-18)+10]
 21232  015B6A  0EF9               	movlw	-7
 21233  015B6C  BEE3               	btfsc	plusw1,7,c
 21234  015B6E  D036               	goto	u11250
 21235  015B70  0EF9               	movlw	-7
 21236  015B72  50E3               	movf	plusw1,w,c
 21237  015B74  E104               	bnz	u11210
 21238  015B76  0EF8               	movlw	-8
 21239  015B78  04E3               	decf	plusw1,w,c
 21240  015B7A  A0D8               	btfss	status,0,c
 21241  015B7C  D02F               	goto	u11250
 21242  015B7E                     u11210:
 21243                           
 21244                           ;stkvar	_n @ sp[(-18)+2]
 21245  015B7E  0EF0               	movlw	-16
 21246  015B80  50E3               	movf	plusw1,w,c
 21247  015B82  E115               	bnz	u11221
 21248  015B84  0EF1               	movlw	-15
 21249  015B86  50E3               	movf	plusw1,w,c
 21250  015B88  E112               	bnz	u11221
 21251  015B8A  0EF2               	movlw	-14
 21252  015B8C  50E3               	movf	plusw1,w,c
 21253  015B8E  E10F               	bnz	u11221
 21254  015B90  0EF3               	movlw	-13
 21255  015B92  50E3               	movf	plusw1,w,c
 21256  015B94  E10C               	bnz	u11221
 21257  015B96  0EF4               	movlw	-12
 21258  015B98  50E3               	movf	plusw1,w,c
 21259  015B9A  E109               	bnz	u11221
 21260  015B9C  0EF5               	movlw	-11
 21261  015B9E  50E3               	movf	plusw1,w,c
 21262  015BA0  E106               	bnz	u11221
 21263  015BA2  0EF6               	movlw	-10
 21264  015BA4  50E3               	movf	plusw1,w,c
 21265  015BA6  E103               	bnz	u11221
 21266  015BA8  0EF7               	movlw	-9
 21267  015BAA  50E3               	movf	plusw1,w,c
 21268  015BAC  A4D8               	btfss	status,2,c
 21269  015BAE                     u11221:
 21270  015BAE  D6D4               	goto	l12288
 21271                           
 21272                           ;stkvar	_p @ sp[(-18)+16]
 21273  015BB0  0EFF               	movlw	-1
 21274  015BB2  BEE3               	btfsc	plusw1,7,c
 21275  015BB4  D007               	goto	u11230
 21276  015BB6  0EFF               	movlw	-1
 21277  015BB8  50E3               	movf	plusw1,w,c
 21278  015BBA  E103               	bnz	u11231
 21279  015BBC  0EFE               	movlw	-2
 21280  015BBE  04E3               	decf	plusw1,w,c
 21281  015BC0  B0D8               	btfsc	status,0,c
 21282  015BC2                     u11231:
 21283  015BC2  D6CA               	goto	l12288
 21284  015BC4                     u11230:
 21285                           
 21286                           ;stkvar	_w @ sp[(-18)+14]
 21287  015BC4  0EFD               	movlw	-3
 21288  015BC6  BEE3               	btfsc	plusw1,7,c
 21289  015BC8  D009               	goto	u11250
 21290  015BCA  0EFD               	movlw	-3
 21291  015BCC  50E3               	movf	plusw1,w,c
 21292  015BCE  E104               	bnz	u11240
 21293  015BD0  0EFC               	movlw	-4
 21294  015BD2  04E3               	decf	plusw1,w,c
 21295  015BD4  A0D8               	btfss	status,0,c
 21296  015BD6  D002               	goto	u11250
 21297  015BD8                     u11240:
 21298  015BD8  B23E               	btfsc	_flags^0,1,c
 21299  015BDA  D6BE               	goto	l12288
 21300  015BDC                     u11250:
 21301                           
 21302                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 21303                           ;stkvar	_s @ sp[(-18)+12]
 21304  015BDC  0EFA               	movlw	-6
 21305  015BDE  006F FF8C  F001    	movff	plusw1,btemp
 21306  015BE4  0EFB               	movlw	-5
 21307  015BE6  50E3               	movf	plusw1,w,c
 21308  015BE8  1001               	iorwf	btemp^0,w,c
 21309  015BEA  A4D8               	btfss	status,2,c
 21310  015BEC  D002               	goto	u11270
 21311  015BEE  A43E               	btfss	_flags^0,2,c
 21312  015BF0  D033               	goto	l12322
 21313  015BF2                     u11270:
 21314                           
 21315                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 21316                           ;stkvar	_i @ sp[(-18)+10]
 21317  015BF2  50E1               	movf	fsr1l,w,c
 21318  015BF4  0FF8               	addlw	-8
 21319  015BF6  6ED9               	movwf	fsr2l,c
 21320  015BF8  50E2               	movf	fsr1h,w,c
 21321  015BFA  6EDA               	movwf	fsr2h,c
 21322  015BFC  0EFF               	movlw	255
 21323  015BFE  22DA               	addwfc	fsr2h,f,c
 21324  015C00  06DE               	decf	postinc2,f,c
 21325  015C02  0E00               	movlw	0
 21326  015C04  5ADD               	subwfb	postdec2,f,c
 21327                           
 21328                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 21329                           ;stkvar	_s @ sp[(-18)+12]
 21330  015C06  0EFA               	movlw	-6
 21331  015C08  006F FF8C  F001    	movff	plusw1,btemp
 21332  015C0E  0EFB               	movlw	-5
 21333  015C10  50E3               	movf	plusw1,w,c
 21334  015C12  1001               	iorwf	btemp^0,w,c
 21335  015C14  A4D8               	btfss	status,2,c
 21336  015C16  D002               	goto	l12318
 21337  015C18  0E2B               	movlw	43
 21338  015C1A  D001               	goto	L25
 21339  015C1C                     l12318:
 21340  015C1C  0E2D               	movlw	45
 21341  015C1E                     L25:
 21342  015C1E  6E0B               	movwf	(btemp+10)^0,c
 21343  015C20  0E00               	movlw	0
 21344  015C22  6E0C               	movwf	(btemp+11)^0,c
 21345                           
 21346                           ;stkvar	_dtoa$5802 @ sp[(-18)+0]
 21347  015C24  0EEE               	movlw	-18
 21348  015C26  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21349  015C2C  0EEF               	movlw	-17
 21350  015C2E  0060  F033  FFE3   	movff	btemp+11,plusw1
 21351                           
 21352                           ;stkvar	_dtoa$5802 @ sp[(-18)+0]
 21353                           ;stkvar	_i @ sp[(-18)+10]
 21354  015C34  0EF8               	movlw	-8
 21355  015C36  006F FF8C  F00B    	movff	plusw1,btemp+10
 21356  015C3C  0EF9               	movlw	-7
 21357  015C3E  006F FF8C  F00C    	movff	plusw1,btemp+11
 21358  015C44  0E97               	movlw	low _dbuf
 21359  015C46  240B               	addwf	(btemp+10)^0,w,c
 21360  015C48  6ED9               	movwf	fsr2l,c
 21361  015C4A  0E02               	movlw	high _dbuf
 21362  015C4C  200C               	addwfc	(btemp+11)^0,w,c
 21363  015C4E  6EDA               	movwf	fsr2h,c
 21364  015C50  0EEE               	movlw	-18
 21365  015C52  006F FF8F FFDF     	movff	plusw1,indf2
 21366  015C58                     l12322:
 21367                           
 21368                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 21369                           ;stkvar	_w @ sp[(-18)+14]
 21370  015C58  0EFC               	movlw	-4
 21371  015C5A  006F FF8F FFE6     	movff	plusw1,postinc1
 21372  015C60  006F FF8F FFE6     	movff	plusw1,postinc1
 21373                           
 21374                           ;stkvar	_i @ sp[(-20)+10]
 21375  015C66  0E97               	movlw	low _dbuf
 21376  015C68  6E0B               	movwf	(btemp+10)^0,c
 21377  015C6A  0E02               	movlw	high _dbuf
 21378  015C6C  6E0C               	movwf	(btemp+11)^0,c
 21379  015C6E  0EF6               	movlw	-10
 21380  015C70  50E3               	movf	plusw1,w,c
 21381  015C72  260B               	addwf	(btemp+10)^0,f,c
 21382  015C74  0EF7               	movlw	-9
 21383  015C76  50E3               	movf	plusw1,w,c
 21384  015C78  220C               	addwfc	(btemp+11)^0,f,c
 21385  015C7A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 21386  015C80  0060  F033  FFE6   	movff	btemp+11,postinc1
 21387                           
 21388                           ;stkvar	_fp @ sp[(-22)+-2]
 21389  015C86  0EE8               	movlw	-24
 21390  015C88  006F FF8F FFE6     	movff	plusw1,postinc1
 21391  015C8E  006F FF8F FFE6     	movff	plusw1,postinc1
 21392  015C94  EC44  F0CF         	call	_pad	;wreg free
 21393                           
 21394                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 21395  015C98  0EE4               	movlw	228
 21396  015C9A  26E1               	addwf	fsr1l,f,c
 21397  015C9C  0EFF               	movlw	255
 21398  015C9E  22E2               	addwfc	fsr1h,f,c
 21399  015CA0  0012               	return		;funcret
 21400  015CA2                     __end_of_dtoa:
 21401                           	opt callstack 0
 21402                           
 21403 ;; *************** function _abs *****************
 21404 ;; Defined at:
 21405 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 21406 ;; Parameters:    Size  Location     Type
 21407 ;;  a               2  [STACK] int 
 21408 ;; Auto vars:     Size  Location     Type
 21409 ;;		None
 21410 ;; Return value:  Size  Location     Type
 21411 ;;                  2  [STACK] int 
 21412 ;; Registers used:
 21413 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 21414 ;; Tracked objects:
 21415 ;;		On entry : 0/2
 21416 ;;		On exit  : 0/0
 21417 ;;		Unchanged: 0/0
 21418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21423 ;;Total ram usage:        0 bytes
 21424 ;; Hardware stack levels used:    1
 21425 ;; Hardware stack levels required when called:   15
 21426 ;; This function calls:
 21427 ;;		Nothing
 21428 ;; This function is called by:
 21429 ;;		_dtoa
 21430 ;; This function uses a reentrant model
 21431 ;;
 21432                           
 21433                           	psect	text74
 21434  01BA52                     __ptext74:
 21435                           	opt callstack 0
 21436  01BA52                     _abs:
 21437                           	opt callstack 0
 21438                           
 21439                           ;stkvar	_a @ sp[(0)+-2]
 21440                           
 21441                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21442                           ;incstack = 0
 21443 ;; hardware stack exceeded
 21444  01BA52  0EFF               	movlw	-1
 21445  01BA54  BEE3               	btfsc	plusw1,7,c
 21446  01BA56  D007               	goto	u6100
 21447  01BA58  0EFF               	movlw	-1
 21448  01BA5A  50E3               	movf	plusw1,w,c
 21449  01BA5C  E112               	bnz	l8222
 21450  01BA5E  0EFE               	movlw	-2
 21451  01BA60  04E3               	decf	plusw1,w,c
 21452  01BA62  B0D8               	btfsc	status,0,c
 21453  01BA64  D00E               	goto	l8222
 21454  01BA66                     u6100:
 21455                           
 21456                           ;stkvar	_a @ sp[(0)+-2]
 21457  01BA66  0EFE               	movlw	-2
 21458  01BA68  006F FF8C  F001    	movff	plusw1,btemp
 21459  01BA6E  1E01               	comf	btemp^0,f,c
 21460  01BA70  0EFF               	movlw	-1
 21461  01BA72  006F FF8C  F002    	movff	plusw1,btemp+1
 21462  01BA78  1E02               	comf	(btemp+1)^0,f,c
 21463  01BA7A  2A01               	incf	btemp^0,f,c
 21464  01BA7C  B4D8               	btfsc	status,2,c
 21465  01BA7E  2A02               	incf	(btemp+1)^0,f,c
 21466  01BA80  D008               	goto	l3192
 21467  01BA82                     l8222:
 21468                           
 21469                           ;stkvar	_a @ sp[(0)+-2]
 21470  01BA82  0EFE               	movlw	-2
 21471  01BA84  006F FF8C  F001    	movff	plusw1,btemp
 21472  01BA8A  0EFF               	movlw	-1
 21473  01BA8C  006F FF8C  F002    	movff	plusw1,btemp+1
 21474  01BA92                     l3192:
 21475                           
 21476                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 21477  01BA92  52E5               	movf	postdec1,f,c
 21478  01BA94  52E5               	movf	postdec1,f,c
 21479  01BA96  0012               	return		;funcret
 21480  01BA98                     __end_of_abs:
 21481                           	opt callstack 0
 21482                           
 21483 ;; *************** function ___aomod *****************
 21484 ;; Defined at:
 21485 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 21486 ;; Parameters:    Size  Location     Type
 21487 ;;  dividend        8  [STACK] long long 
 21488 ;;  divisor         8  [STACK] long long 
 21489 ;; Auto vars:     Size  Location     Type
 21490 ;;  sign            1  [STACK] unsigned char 
 21491 ;;  counter         1  [STACK] unsigned char 
 21492 ;; Return value:  Size  Location     Type
 21493 ;;                  8  [STACK] long long 
 21494 ;; Registers used:
 21495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 21496 ;; Tracked objects:
 21497 ;;		On entry : 0/2
 21498 ;;		On exit  : 0/0
 21499 ;;		Unchanged: 0/0
 21500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21505 ;;Total ram usage:        0 bytes
 21506 ;; Hardware stack levels used:    1
 21507 ;; Hardware stack levels required when called:   15
 21508 ;; This function calls:
 21509 ;;		Nothing
 21510 ;; This function is called by:
 21511 ;;		_dtoa
 21512 ;; This function uses a reentrant model
 21513 ;;
 21514                           
 21515                           	psect	text75
 21516  017E3C                     __ptext75:
 21517                           	opt callstack 0
 21518  017E3C                     ___aomod:
 21519                           	opt callstack 0
 21520                           
 21521                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 21522  017E3C  52E6               	movf	postinc1,f,c
 21523  017E3E  52E6               	movf	postinc1,f,c
 21524                           
 21525                           ;stkvar	_sign @ sp[(-2)+0]
 21526                           
 21527                           ;incstack = 0
 21528 ;; hardware stack exceeded
 21529  017E40  0EFE               	movlw	-2
 21530  017E42  6AE3               	clrf	plusw1,c
 21531                           
 21532                           ;stkvar	_dividend @ sp[(-2)+-8]
 21533  017E44  0EFD               	movlw	-3
 21534  017E46  AEE3               	btfss	plusw1,7,c
 21535  017E48  D028               	goto	l8380
 21536                           
 21537                           ;stkvar	_dividend @ sp[(-2)+-8]
 21538                           ;stkvar	_dividend @ sp[(-2)+-8]
 21539  017E4A  0EF6               	movlw	-10
 21540  017E4C  6CE3               	negf	plusw1,c
 21541  017E4E  0EF7               	movlw	-9
 21542  017E50  1EE3               	comf	plusw1,f,c
 21543  017E52  0EF8               	movlw	-8
 21544  017E54  1EE3               	comf	plusw1,f,c
 21545  017E56  0EF9               	movlw	-7
 21546  017E58  1EE3               	comf	plusw1,f,c
 21547  017E5A  0EFA               	movlw	-6
 21548  017E5C  1EE3               	comf	plusw1,f,c
 21549  017E5E  0EFB               	movlw	-5
 21550  017E60  1EE3               	comf	plusw1,f,c
 21551  017E62  0EFC               	movlw	-4
 21552  017E64  1EE3               	comf	plusw1,f,c
 21553  017E66  0EFD               	movlw	-3
 21554  017E68  1EE3               	comf	plusw1,f,c
 21555  017E6A  E314               	bnc	u6530
 21556  017E6C  0EF7               	movlw	-9
 21557  017E6E  2AE3               	incf	plusw1,f,c
 21558  017E70  E311               	bnc	u6530
 21559  017E72  0EF8               	movlw	-8
 21560  017E74  2AE3               	incf	plusw1,f,c
 21561  017E76  E30E               	bnc	u6530
 21562  017E78  0EF9               	movlw	-7
 21563  017E7A  2AE3               	incf	plusw1,f,c
 21564  017E7C  E30B               	bnc	u6530
 21565  017E7E  0EFA               	movlw	-6
 21566  017E80  2AE3               	incf	plusw1,f,c
 21567  017E82  E308               	bnc	u6530
 21568  017E84  0EFB               	movlw	-5
 21569  017E86  2AE3               	incf	plusw1,f,c
 21570  017E88  E305               	bnc	u6530
 21571  017E8A  0EFC               	movlw	-4
 21572  017E8C  2AE3               	incf	plusw1,f,c
 21573  017E8E  E302               	bnc	u6530
 21574  017E90  0EFD               	movlw	-3
 21575  017E92  2AE3               	incf	plusw1,f,c
 21576  017E94                     u6530:
 21577                           
 21578                           ;stkvar	_sign @ sp[(-2)+0]
 21579  017E94  0EFE               	movlw	-2
 21580  017E96  6AE3               	clrf	plusw1,c
 21581  017E98  2AE3               	incf	plusw1,f,c
 21582  017E9A                     l8380:
 21583                           
 21584                           ;stkvar	_divisor @ sp[(-2)+-16]
 21585  017E9A  0EF5               	movlw	-11
 21586  017E9C  AEE3               	btfss	plusw1,7,c
 21587  017E9E  D025               	goto	u6550
 21588                           
 21589                           ;stkvar	_divisor @ sp[(-2)+-16]
 21590                           ;stkvar	_divisor @ sp[(-2)+-16]
 21591  017EA0  0EEE               	movlw	-18
 21592  017EA2  6CE3               	negf	plusw1,c
 21593  017EA4  0EEF               	movlw	-17
 21594  017EA6  1EE3               	comf	plusw1,f,c
 21595  017EA8  0EF0               	movlw	-16
 21596  017EAA  1EE3               	comf	plusw1,f,c
 21597  017EAC  0EF1               	movlw	-15
 21598  017EAE  1EE3               	comf	plusw1,f,c
 21599  017EB0  0EF2               	movlw	-14
 21600  017EB2  1EE3               	comf	plusw1,f,c
 21601  017EB4  0EF3               	movlw	-13
 21602  017EB6  1EE3               	comf	plusw1,f,c
 21603  017EB8  0EF4               	movlw	-12
 21604  017EBA  1EE3               	comf	plusw1,f,c
 21605  017EBC  0EF5               	movlw	-11
 21606  017EBE  1EE3               	comf	plusw1,f,c
 21607  017EC0  E314               	bnc	u6550
 21608  017EC2  0EEF               	movlw	-17
 21609  017EC4  2AE3               	incf	plusw1,f,c
 21610  017EC6  E311               	bnc	u6550
 21611  017EC8  0EF0               	movlw	-16
 21612  017ECA  2AE3               	incf	plusw1,f,c
 21613  017ECC  E30E               	bnc	u6550
 21614  017ECE  0EF1               	movlw	-15
 21615  017ED0  2AE3               	incf	plusw1,f,c
 21616  017ED2  E30B               	bnc	u6550
 21617  017ED4  0EF2               	movlw	-14
 21618  017ED6  2AE3               	incf	plusw1,f,c
 21619  017ED8  E308               	bnc	u6550
 21620  017EDA  0EF3               	movlw	-13
 21621  017EDC  2AE3               	incf	plusw1,f,c
 21622  017EDE  E305               	bnc	u6550
 21623  017EE0  0EF4               	movlw	-12
 21624  017EE2  2AE3               	incf	plusw1,f,c
 21625  017EE4  E302               	bnc	u6550
 21626  017EE6  0EF5               	movlw	-11
 21627  017EE8  2AE3               	incf	plusw1,f,c
 21628  017EEA                     u6550:
 21629                           
 21630                           ;stkvar	_divisor @ sp[(-2)+-16]
 21631  017EEA  0EEE               	movlw	-18
 21632  017EEC  50E3               	movf	plusw1,w,c
 21633  017EEE  E116               	bnz	u6560
 21634  017EF0  0EEF               	movlw	-17
 21635  017EF2  50E3               	movf	plusw1,w,c
 21636  017EF4  E113               	bnz	u6560
 21637  017EF6  0EF0               	movlw	-16
 21638  017EF8  50E3               	movf	plusw1,w,c
 21639  017EFA  E110               	bnz	u6560
 21640  017EFC  0EF1               	movlw	-15
 21641  017EFE  50E3               	movf	plusw1,w,c
 21642  017F00  E10D               	bnz	u6560
 21643  017F02  0EF2               	movlw	-14
 21644  017F04  50E3               	movf	plusw1,w,c
 21645  017F06  E10A               	bnz	u6560
 21646  017F08  0EF3               	movlw	-13
 21647  017F0A  50E3               	movf	plusw1,w,c
 21648  017F0C  E107               	bnz	u6560
 21649  017F0E  0EF4               	movlw	-12
 21650  017F10  50E3               	movf	plusw1,w,c
 21651  017F12  E104               	bnz	u6560
 21652  017F14  0EF5               	movlw	-11
 21653  017F16  50E3               	movf	plusw1,w,c
 21654  017F18  B4D8               	btfsc	status,2,c
 21655  017F1A  D075               	goto	u6590
 21656  017F1C                     u6560:
 21657                           
 21658                           ;stkvar	_counter @ sp[(-2)+1]
 21659  017F1C  0EFF               	movlw	-1
 21660  017F1E  6AE3               	clrf	plusw1,c
 21661  017F20  D012               	goto	L26
 21662  017F22                     l8388:
 21663                           
 21664                           ;stkvar	_divisor @ sp[(-2)+-16]
 21665  017F22  90D8               	bcf	status,0,c
 21666  017F24  0EEE               	movlw	-18
 21667  017F26  36E3               	rlcf	plusw1,f,c
 21668  017F28  0EEF               	movlw	-17
 21669  017F2A  36E3               	rlcf	plusw1,f,c
 21670  017F2C  0EF0               	movlw	-16
 21671  017F2E  36E3               	rlcf	plusw1,f,c
 21672  017F30  0EF1               	movlw	-15
 21673  017F32  36E3               	rlcf	plusw1,f,c
 21674  017F34  0EF2               	movlw	-14
 21675  017F36  36E3               	rlcf	plusw1,f,c
 21676  017F38  0EF3               	movlw	-13
 21677  017F3A  36E3               	rlcf	plusw1,f,c
 21678  017F3C  0EF4               	movlw	-12
 21679  017F3E  36E3               	rlcf	plusw1,f,c
 21680  017F40  0EF5               	movlw	-11
 21681  017F42  36E3               	rlcf	plusw1,f,c
 21682                           
 21683                           ;stkvar	_counter @ sp[(-2)+1]
 21684  017F44  0EFF               	movlw	-1
 21685  017F46                     L26:
 21686  017F46  2AE3               	incf	plusw1,f,c
 21687                           
 21688                           ;stkvar	_divisor @ sp[(-2)+-16]
 21689  017F48  0EF5               	movlw	-11
 21690  017F4A  AEE3               	btfss	plusw1,7,c
 21691  017F4C  D7EA               	goto	l8388
 21692  017F4E                     u6570:
 21693                           
 21694                           ;stkvar	_divisor @ sp[(-2)+-16]
 21695                           ;stkvar	_dividend @ sp[(-2)+-8]
 21696  017F4E  50E1               	movf	fsr1l,w,c
 21697  017F50  0FF6               	addlw	-10
 21698  017F52  6ED9               	movwf	fsr2l,c
 21699  017F54  50E2               	movf	fsr1h,w,c
 21700  017F56  6EDA               	movwf	fsr2h,c
 21701  017F58  0EFF               	movlw	255
 21702  017F5A  22DA               	addwfc	fsr2h,f,c
 21703  017F5C  0EEE               	movlw	-18
 21704  017F5E  50E3               	movf	plusw1,w,c
 21705  017F60  5CDE               	subwf	postinc2,w,c
 21706  017F62  0EEF               	movlw	-17
 21707  017F64  50E3               	movf	plusw1,w,c
 21708  017F66  58DE               	subwfb	postinc2,w,c
 21709  017F68  0EF0               	movlw	-16
 21710  017F6A  50E3               	movf	plusw1,w,c
 21711  017F6C  58DE               	subwfb	postinc2,w,c
 21712  017F6E  0EF1               	movlw	-15
 21713  017F70  50E3               	movf	plusw1,w,c
 21714  017F72  58DE               	subwfb	postinc2,w,c
 21715  017F74  0EF2               	movlw	-14
 21716  017F76  50E3               	movf	plusw1,w,c
 21717  017F78  58DE               	subwfb	postinc2,w,c
 21718  017F7A  0EF3               	movlw	-13
 21719  017F7C  50E3               	movf	plusw1,w,c
 21720  017F7E  58DE               	subwfb	postinc2,w,c
 21721  017F80  0EF4               	movlw	-12
 21722  017F82  50E3               	movf	plusw1,w,c
 21723  017F84  58DE               	subwfb	postinc2,w,c
 21724  017F86  0EF5               	movlw	-11
 21725  017F88  50E3               	movf	plusw1,w,c
 21726  017F8A  58DE               	subwfb	postinc2,w,c
 21727  017F8C  A0D8               	btfss	status,0,c
 21728  017F8E  D01F               	goto	l8396
 21729                           
 21730                           ;stkvar	_divisor @ sp[(-2)+-16]
 21731                           ;stkvar	_dividend @ sp[(-2)+-8]
 21732  017F90  50E1               	movf	fsr1l,w,c
 21733  017F92  0FF6               	addlw	-10
 21734  017F94  6ED9               	movwf	fsr2l,c
 21735  017F96  50E2               	movf	fsr1h,w,c
 21736  017F98  6EDA               	movwf	fsr2h,c
 21737  017F9A  0EFF               	movlw	255
 21738  017F9C  22DA               	addwfc	fsr2h,f,c
 21739  017F9E  0EEE               	movlw	-18
 21740  017FA0  50E3               	movf	plusw1,w,c
 21741  017FA2  5EDE               	subwf	postinc2,f,c
 21742  017FA4  0EEF               	movlw	-17
 21743  017FA6  50E3               	movf	plusw1,w,c
 21744  017FA8  5ADE               	subwfb	postinc2,f,c
 21745  017FAA  0EF0               	movlw	-16
 21746  017FAC  50E3               	movf	plusw1,w,c
 21747  017FAE  5ADE               	subwfb	postinc2,f,c
 21748  017FB0  0EF1               	movlw	-15
 21749  017FB2  50E3               	movf	plusw1,w,c
 21750  017FB4  5ADE               	subwfb	postinc2,f,c
 21751  017FB6  0EF2               	movlw	-14
 21752  017FB8  50E3               	movf	plusw1,w,c
 21753  017FBA  5ADE               	subwfb	postinc2,f,c
 21754  017FBC  0EF3               	movlw	-13
 21755  017FBE  50E3               	movf	plusw1,w,c
 21756  017FC0  5ADE               	subwfb	postinc2,f,c
 21757  017FC2  0EF4               	movlw	-12
 21758  017FC4  50E3               	movf	plusw1,w,c
 21759  017FC6  5ADE               	subwfb	postinc2,f,c
 21760  017FC8  0EF5               	movlw	-11
 21761  017FCA  50E3               	movf	plusw1,w,c
 21762  017FCC  5ADE               	subwfb	postinc2,f,c
 21763  017FCE                     l8396:
 21764                           
 21765                           ;stkvar	_divisor @ sp[(-2)+-16]
 21766  017FCE  90D8               	bcf	status,0,c
 21767  017FD0  0EF5               	movlw	-11
 21768  017FD2  32E3               	rrcf	plusw1,f,c
 21769  017FD4  0EF4               	movlw	-12
 21770  017FD6  32E3               	rrcf	plusw1,f,c
 21771  017FD8  0EF3               	movlw	-13
 21772  017FDA  32E3               	rrcf	plusw1,f,c
 21773  017FDC  0EF2               	movlw	-14
 21774  017FDE  32E3               	rrcf	plusw1,f,c
 21775  017FE0  0EF1               	movlw	-15
 21776  017FE2  32E3               	rrcf	plusw1,f,c
 21777  017FE4  0EF0               	movlw	-16
 21778  017FE6  32E3               	rrcf	plusw1,f,c
 21779  017FE8  0EEF               	movlw	-17
 21780  017FEA  32E3               	rrcf	plusw1,f,c
 21781  017FEC  0EEE               	movlw	-18
 21782  017FEE  32E3               	rrcf	plusw1,f,c
 21783                           
 21784                           ;stkvar	_counter @ sp[(-2)+1]
 21785  017FF0  0EFF               	movlw	-1
 21786  017FF2  50E3               	movf	plusw1,w,c
 21787  017FF4  6E01               	movwf	btemp^0,c
 21788  017FF6  0E01               	movlw	1
 21789  017FF8  5E01               	subwf	btemp^0,f,c
 21790  017FFA  0EFF               	movlw	-1
 21791  017FFC  0060  F007  FFE3   	movff	btemp,plusw1
 21792  018002  A4D8               	btfss	status,2,c
 21793  018004  D7A4               	goto	u6570
 21794  018006                     u6590:
 21795                           
 21796                           ;stkvar	_sign @ sp[(-2)+0]
 21797  018006  0EFE               	movlw	-2
 21798  018008  50E3               	movf	plusw1,w,c
 21799  01800A  B4D8               	btfsc	status,2,c
 21800  01800C  D025               	goto	u6610
 21801                           
 21802                           ;stkvar	_dividend @ sp[(-2)+-8]
 21803                           ;stkvar	_dividend @ sp[(-2)+-8]
 21804  01800E  0EF6               	movlw	-10
 21805  018010  6CE3               	negf	plusw1,c
 21806  018012  0EF7               	movlw	-9
 21807  018014  1EE3               	comf	plusw1,f,c
 21808  018016  0EF8               	movlw	-8
 21809  018018  1EE3               	comf	plusw1,f,c
 21810  01801A  0EF9               	movlw	-7
 21811  01801C  1EE3               	comf	plusw1,f,c
 21812  01801E  0EFA               	movlw	-6
 21813  018020  1EE3               	comf	plusw1,f,c
 21814  018022  0EFB               	movlw	-5
 21815  018024  1EE3               	comf	plusw1,f,c
 21816  018026  0EFC               	movlw	-4
 21817  018028  1EE3               	comf	plusw1,f,c
 21818  01802A  0EFD               	movlw	-3
 21819  01802C  1EE3               	comf	plusw1,f,c
 21820  01802E  E314               	bnc	u6610
 21821  018030  0EF7               	movlw	-9
 21822  018032  2AE3               	incf	plusw1,f,c
 21823  018034  E311               	bnc	u6610
 21824  018036  0EF8               	movlw	-8
 21825  018038  2AE3               	incf	plusw1,f,c
 21826  01803A  E30E               	bnc	u6610
 21827  01803C  0EF9               	movlw	-7
 21828  01803E  2AE3               	incf	plusw1,f,c
 21829  018040  E30B               	bnc	u6610
 21830  018042  0EFA               	movlw	-6
 21831  018044  2AE3               	incf	plusw1,f,c
 21832  018046  E308               	bnc	u6610
 21833  018048  0EFB               	movlw	-5
 21834  01804A  2AE3               	incf	plusw1,f,c
 21835  01804C  E305               	bnc	u6610
 21836  01804E  0EFC               	movlw	-4
 21837  018050  2AE3               	incf	plusw1,f,c
 21838  018052  E302               	bnc	u6610
 21839  018054  0EFD               	movlw	-3
 21840  018056  2AE3               	incf	plusw1,f,c
 21841  018058                     u6610:
 21842                           
 21843                           ;stkvar	_dividend @ sp[(-2)+-8]
 21844  018058  0EF6               	movlw	246
 21845  01805A  24E1               	addwf	fsr1l,w,c
 21846  01805C  6ED9               	movwf	fsr2l,c
 21847  01805E  0EFF               	movlw	255
 21848  018060  20E2               	addwfc	fsr1h,w,c
 21849  018062  6EDA               	movwf	fsr2h,c
 21850                           
 21851                           ;stkvar	?___aomod @ sp[(-2)+-8]
 21852  018064  0E08               	movlw	8
 21853  018066  6E01               	movwf	btemp^0,c
 21854  018068  0EF6               	movlw	-10
 21855  01806A                     us662999:
 21856  01806A  006F FF7B FFE3     	movff	postinc2,plusw1
 21857  018070  28E8               	incf	wreg,w,c
 21858  018072  2E01               	decfsz	btemp^0,f,c
 21859  018074  D7FA               	bra	us662999
 21860                           
 21861                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 21862  018076  52E5               	movf	postdec1,f,c
 21863  018078  52E5               	movf	postdec1,f,c
 21864  01807A  0012               	return		;funcret
 21865  01807C                     __end_of___aomod:
 21866                           	opt callstack 0
 21867                           
 21868 ;; *************** function ___aodiv *****************
 21869 ;; Defined at:
 21870 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 21871 ;; Parameters:    Size  Location     Type
 21872 ;;  dividend        8  [STACK] long long 
 21873 ;;  divisor         8  [STACK] long long 
 21874 ;; Auto vars:     Size  Location     Type
 21875 ;;  quotient        8  [STACK] long long 
 21876 ;;  sign            1  [STACK] unsigned char 
 21877 ;;  counter         1  [STACK] unsigned char 
 21878 ;; Return value:  Size  Location     Type
 21879 ;;                  8  [STACK] long long 
 21880 ;; Registers used:
 21881 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 21882 ;; Tracked objects:
 21883 ;;		On entry : 0/2
 21884 ;;		On exit  : 0/0
 21885 ;;		Unchanged: 0/0
 21886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21891 ;;Total ram usage:        0 bytes
 21892 ;; Hardware stack levels used:    1
 21893 ;; Hardware stack levels required when called:   15
 21894 ;; This function calls:
 21895 ;;		Nothing
 21896 ;; This function is called by:
 21897 ;;		_dtoa
 21898 ;; This function uses a reentrant model
 21899 ;;
 21900                           
 21901                           	psect	text76
 21902  017702                     __ptext76:
 21903                           	opt callstack 0
 21904  017702                     ___aodiv:
 21905                           	opt callstack 0
 21906                           
 21907                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 21908  017702  0E0A               	movlw	10
 21909  017704  26E1               	addwf	fsr1l,f,c
 21910  017706  0E00               	movlw	0
 21911  017708  22E2               	addwfc	fsr1h,f,c
 21912                           
 21913                           ;stkvar	_sign @ sp[(-10)+8]
 21914                           
 21915                           ;incstack = 0
 21916 ;; hardware stack exceeded
 21917  01770A  0EFE               	movlw	-2
 21918  01770C  6AE3               	clrf	plusw1,c
 21919                           
 21920                           ;stkvar	_divisor @ sp[(-10)+-16]
 21921  01770E  0EED               	movlw	-19
 21922  017710  AEE3               	btfss	plusw1,7,c
 21923  017712  D028               	goto	l8336
 21924                           
 21925                           ;stkvar	_divisor @ sp[(-10)+-16]
 21926                           ;stkvar	_divisor @ sp[(-10)+-16]
 21927  017714  0EE6               	movlw	-26
 21928  017716  6CE3               	negf	plusw1,c
 21929  017718  0EE7               	movlw	-25
 21930  01771A  1EE3               	comf	plusw1,f,c
 21931  01771C  0EE8               	movlw	-24
 21932  01771E  1EE3               	comf	plusw1,f,c
 21933  017720  0EE9               	movlw	-23
 21934  017722  1EE3               	comf	plusw1,f,c
 21935  017724  0EEA               	movlw	-22
 21936  017726  1EE3               	comf	plusw1,f,c
 21937  017728  0EEB               	movlw	-21
 21938  01772A  1EE3               	comf	plusw1,f,c
 21939  01772C  0EEC               	movlw	-20
 21940  01772E  1EE3               	comf	plusw1,f,c
 21941  017730  0EED               	movlw	-19
 21942  017732  1EE3               	comf	plusw1,f,c
 21943  017734  E314               	bnc	u6410
 21944  017736  0EE7               	movlw	-25
 21945  017738  2AE3               	incf	plusw1,f,c
 21946  01773A  E311               	bnc	u6410
 21947  01773C  0EE8               	movlw	-24
 21948  01773E  2AE3               	incf	plusw1,f,c
 21949  017740  E30E               	bnc	u6410
 21950  017742  0EE9               	movlw	-23
 21951  017744  2AE3               	incf	plusw1,f,c
 21952  017746  E30B               	bnc	u6410
 21953  017748  0EEA               	movlw	-22
 21954  01774A  2AE3               	incf	plusw1,f,c
 21955  01774C  E308               	bnc	u6410
 21956  01774E  0EEB               	movlw	-21
 21957  017750  2AE3               	incf	plusw1,f,c
 21958  017752  E305               	bnc	u6410
 21959  017754  0EEC               	movlw	-20
 21960  017756  2AE3               	incf	plusw1,f,c
 21961  017758  E302               	bnc	u6410
 21962  01775A  0EED               	movlw	-19
 21963  01775C  2AE3               	incf	plusw1,f,c
 21964  01775E                     u6410:
 21965                           
 21966                           ;stkvar	_sign @ sp[(-10)+8]
 21967  01775E  0EFE               	movlw	-2
 21968  017760  6AE3               	clrf	plusw1,c
 21969  017762  2AE3               	incf	plusw1,f,c
 21970  017764                     l8336:
 21971                           
 21972                           ;stkvar	_dividend @ sp[(-10)+-8]
 21973  017764  0EF5               	movlw	-11
 21974  017766  AEE3               	btfss	plusw1,7,c
 21975  017768  D027               	goto	l8342
 21976                           
 21977                           ;stkvar	_dividend @ sp[(-10)+-8]
 21978                           ;stkvar	_dividend @ sp[(-10)+-8]
 21979  01776A  0EEE               	movlw	-18
 21980  01776C  6CE3               	negf	plusw1,c
 21981  01776E  0EEF               	movlw	-17
 21982  017770  1EE3               	comf	plusw1,f,c
 21983  017772  0EF0               	movlw	-16
 21984  017774  1EE3               	comf	plusw1,f,c
 21985  017776  0EF1               	movlw	-15
 21986  017778  1EE3               	comf	plusw1,f,c
 21987  01777A  0EF2               	movlw	-14
 21988  01777C  1EE3               	comf	plusw1,f,c
 21989  01777E  0EF3               	movlw	-13
 21990  017780  1EE3               	comf	plusw1,f,c
 21991  017782  0EF4               	movlw	-12
 21992  017784  1EE3               	comf	plusw1,f,c
 21993  017786  0EF5               	movlw	-11
 21994  017788  1EE3               	comf	plusw1,f,c
 21995  01778A  E314               	bnc	u6430
 21996  01778C  0EEF               	movlw	-17
 21997  01778E  2AE3               	incf	plusw1,f,c
 21998  017790  E311               	bnc	u6430
 21999  017792  0EF0               	movlw	-16
 22000  017794  2AE3               	incf	plusw1,f,c
 22001  017796  E30E               	bnc	u6430
 22002  017798  0EF1               	movlw	-15
 22003  01779A  2AE3               	incf	plusw1,f,c
 22004  01779C  E30B               	bnc	u6430
 22005  01779E  0EF2               	movlw	-14
 22006  0177A0  2AE3               	incf	plusw1,f,c
 22007  0177A2  E308               	bnc	u6430
 22008  0177A4  0EF3               	movlw	-13
 22009  0177A6  2AE3               	incf	plusw1,f,c
 22010  0177A8  E305               	bnc	u6430
 22011  0177AA  0EF4               	movlw	-12
 22012  0177AC  2AE3               	incf	plusw1,f,c
 22013  0177AE  E302               	bnc	u6430
 22014  0177B0  0EF5               	movlw	-11
 22015  0177B2  2AE3               	incf	plusw1,f,c
 22016  0177B4                     u6430:
 22017                           
 22018                           ;stkvar	_sign @ sp[(-10)+8]
 22019  0177B4  0EFE               	movlw	-2
 22020  0177B6  70E3               	btg	plusw1,0,c
 22021  0177B8                     l8342:
 22022                           
 22023                           ;stkvar	_quotient @ sp[(-10)+0]
 22024  0177B8  0E07               	movlw	7
 22025  0177BA  6E01               	movwf	btemp^0,c
 22026  0177BC  0EF6               	movlw	-10
 22027  0177BE                     u6441:
 22028  0177BE  6AE3               	clrf	plusw1,c
 22029  0177C0  2AE8               	incf	wreg,f,c
 22030  0177C2  0601               	decf	btemp^0,f,c
 22031  0177C4  E2FC               	bc	u6441
 22032                           
 22033                           ;stkvar	_divisor @ sp[(-10)+-16]
 22034  0177C6  0EE6               	movlw	-26
 22035  0177C8  50E3               	movf	plusw1,w,c
 22036  0177CA  E116               	bnz	u6450
 22037  0177CC  0EE7               	movlw	-25
 22038  0177CE  50E3               	movf	plusw1,w,c
 22039  0177D0  E113               	bnz	u6450
 22040  0177D2  0EE8               	movlw	-24
 22041  0177D4  50E3               	movf	plusw1,w,c
 22042  0177D6  E110               	bnz	u6450
 22043  0177D8  0EE9               	movlw	-23
 22044  0177DA  50E3               	movf	plusw1,w,c
 22045  0177DC  E10D               	bnz	u6450
 22046  0177DE  0EEA               	movlw	-22
 22047  0177E0  50E3               	movf	plusw1,w,c
 22048  0177E2  E10A               	bnz	u6450
 22049  0177E4  0EEB               	movlw	-21
 22050  0177E6  50E3               	movf	plusw1,w,c
 22051  0177E8  E107               	bnz	u6450
 22052  0177EA  0EEC               	movlw	-20
 22053  0177EC  50E3               	movf	plusw1,w,c
 22054  0177EE  E104               	bnz	u6450
 22055  0177F0  0EED               	movlw	-19
 22056  0177F2  50E3               	movf	plusw1,w,c
 22057  0177F4  B4D8               	btfsc	status,2,c
 22058  0177F6  D088               	goto	u6480
 22059  0177F8                     u6450:
 22060                           
 22061                           ;stkvar	_counter @ sp[(-10)+9]
 22062  0177F8  0EFF               	movlw	-1
 22063  0177FA  6AE3               	clrf	plusw1,c
 22064  0177FC  D012               	goto	L27
 22065  0177FE                     l8348:
 22066                           
 22067                           ;stkvar	_divisor @ sp[(-10)+-16]
 22068  0177FE  90D8               	bcf	status,0,c
 22069  017800  0EE6               	movlw	-26
 22070  017802  36E3               	rlcf	plusw1,f,c
 22071  017804  0EE7               	movlw	-25
 22072  017806  36E3               	rlcf	plusw1,f,c
 22073  017808  0EE8               	movlw	-24
 22074  01780A  36E3               	rlcf	plusw1,f,c
 22075  01780C  0EE9               	movlw	-23
 22076  01780E  36E3               	rlcf	plusw1,f,c
 22077  017810  0EEA               	movlw	-22
 22078  017812  36E3               	rlcf	plusw1,f,c
 22079  017814  0EEB               	movlw	-21
 22080  017816  36E3               	rlcf	plusw1,f,c
 22081  017818  0EEC               	movlw	-20
 22082  01781A  36E3               	rlcf	plusw1,f,c
 22083  01781C  0EED               	movlw	-19
 22084  01781E  36E3               	rlcf	plusw1,f,c
 22085                           
 22086                           ;stkvar	_counter @ sp[(-10)+9]
 22087  017820  0EFF               	movlw	-1
 22088  017822                     L27:
 22089  017822  2AE3               	incf	plusw1,f,c
 22090                           
 22091                           ;stkvar	_divisor @ sp[(-10)+-16]
 22092  017824  0EED               	movlw	-19
 22093  017826  AEE3               	btfss	plusw1,7,c
 22094  017828  D7EA               	goto	l8348
 22095  01782A                     u6460:
 22096                           
 22097                           ;stkvar	_quotient @ sp[(-10)+0]
 22098  01782A  90D8               	bcf	status,0,c
 22099  01782C  0EF6               	movlw	-10
 22100  01782E  36E3               	rlcf	plusw1,f,c
 22101  017830  0EF7               	movlw	-9
 22102  017832  36E3               	rlcf	plusw1,f,c
 22103  017834  0EF8               	movlw	-8
 22104  017836  36E3               	rlcf	plusw1,f,c
 22105  017838  0EF9               	movlw	-7
 22106  01783A  36E3               	rlcf	plusw1,f,c
 22107  01783C  0EFA               	movlw	-6
 22108  01783E  36E3               	rlcf	plusw1,f,c
 22109  017840  0EFB               	movlw	-5
 22110  017842  36E3               	rlcf	plusw1,f,c
 22111  017844  0EFC               	movlw	-4
 22112  017846  36E3               	rlcf	plusw1,f,c
 22113  017848  0EFD               	movlw	-3
 22114  01784A  36E3               	rlcf	plusw1,f,c
 22115                           
 22116                           ;stkvar	_divisor @ sp[(-10)+-16]
 22117                           ;stkvar	_dividend @ sp[(-10)+-8]
 22118  01784C  50E1               	movf	fsr1l,w,c
 22119  01784E  0FEE               	addlw	-18
 22120  017850  6ED9               	movwf	fsr2l,c
 22121  017852  50E2               	movf	fsr1h,w,c
 22122  017854  6EDA               	movwf	fsr2h,c
 22123  017856  0EFF               	movlw	255
 22124  017858  22DA               	addwfc	fsr2h,f,c
 22125  01785A  0EE6               	movlw	-26
 22126  01785C  50E3               	movf	plusw1,w,c
 22127  01785E  5CDE               	subwf	postinc2,w,c
 22128  017860  0EE7               	movlw	-25
 22129  017862  50E3               	movf	plusw1,w,c
 22130  017864  58DE               	subwfb	postinc2,w,c
 22131  017866  0EE8               	movlw	-24
 22132  017868  50E3               	movf	plusw1,w,c
 22133  01786A  58DE               	subwfb	postinc2,w,c
 22134  01786C  0EE9               	movlw	-23
 22135  01786E  50E3               	movf	plusw1,w,c
 22136  017870  58DE               	subwfb	postinc2,w,c
 22137  017872  0EEA               	movlw	-22
 22138  017874  50E3               	movf	plusw1,w,c
 22139  017876  58DE               	subwfb	postinc2,w,c
 22140  017878  0EEB               	movlw	-21
 22141  01787A  50E3               	movf	plusw1,w,c
 22142  01787C  58DE               	subwfb	postinc2,w,c
 22143  01787E  0EEC               	movlw	-20
 22144  017880  50E3               	movf	plusw1,w,c
 22145  017882  58DE               	subwfb	postinc2,w,c
 22146  017884  0EED               	movlw	-19
 22147  017886  50E3               	movf	plusw1,w,c
 22148  017888  58DE               	subwfb	postinc2,w,c
 22149  01788A  A0D8               	btfss	status,0,c
 22150  01788C  D021               	goto	l8360
 22151                           
 22152                           ;stkvar	_divisor @ sp[(-10)+-16]
 22153                           ;stkvar	_dividend @ sp[(-10)+-8]
 22154  01788E  50E1               	movf	fsr1l,w,c
 22155  017890  0FEE               	addlw	-18
 22156  017892  6ED9               	movwf	fsr2l,c
 22157  017894  50E2               	movf	fsr1h,w,c
 22158  017896  6EDA               	movwf	fsr2h,c
 22159  017898  0EFF               	movlw	255
 22160  01789A  22DA               	addwfc	fsr2h,f,c
 22161  01789C  0EE6               	movlw	-26
 22162  01789E  50E3               	movf	plusw1,w,c
 22163  0178A0  5EDE               	subwf	postinc2,f,c
 22164  0178A2  0EE7               	movlw	-25
 22165  0178A4  50E3               	movf	plusw1,w,c
 22166  0178A6  5ADE               	subwfb	postinc2,f,c
 22167  0178A8  0EE8               	movlw	-24
 22168  0178AA  50E3               	movf	plusw1,w,c
 22169  0178AC  5ADE               	subwfb	postinc2,f,c
 22170  0178AE  0EE9               	movlw	-23
 22171  0178B0  50E3               	movf	plusw1,w,c
 22172  0178B2  5ADE               	subwfb	postinc2,f,c
 22173  0178B4  0EEA               	movlw	-22
 22174  0178B6  50E3               	movf	plusw1,w,c
 22175  0178B8  5ADE               	subwfb	postinc2,f,c
 22176  0178BA  0EEB               	movlw	-21
 22177  0178BC  50E3               	movf	plusw1,w,c
 22178  0178BE  5ADE               	subwfb	postinc2,f,c
 22179  0178C0  0EEC               	movlw	-20
 22180  0178C2  50E3               	movf	plusw1,w,c
 22181  0178C4  5ADE               	subwfb	postinc2,f,c
 22182  0178C6  0EED               	movlw	-19
 22183  0178C8  50E3               	movf	plusw1,w,c
 22184  0178CA  5ADE               	subwfb	postinc2,f,c
 22185                           
 22186                           ;stkvar	_quotient @ sp[(-10)+0]
 22187  0178CC  0EF6               	movlw	-10
 22188  0178CE  80E3               	bsf	plusw1,0,c
 22189  0178D0                     l8360:
 22190                           
 22191                           ;stkvar	_divisor @ sp[(-10)+-16]
 22192  0178D0  90D8               	bcf	status,0,c
 22193  0178D2  0EED               	movlw	-19
 22194  0178D4  32E3               	rrcf	plusw1,f,c
 22195  0178D6  0EEC               	movlw	-20
 22196  0178D8  32E3               	rrcf	plusw1,f,c
 22197  0178DA  0EEB               	movlw	-21
 22198  0178DC  32E3               	rrcf	plusw1,f,c
 22199  0178DE  0EEA               	movlw	-22
 22200  0178E0  32E3               	rrcf	plusw1,f,c
 22201  0178E2  0EE9               	movlw	-23
 22202  0178E4  32E3               	rrcf	plusw1,f,c
 22203  0178E6  0EE8               	movlw	-24
 22204  0178E8  32E3               	rrcf	plusw1,f,c
 22205  0178EA  0EE7               	movlw	-25
 22206  0178EC  32E3               	rrcf	plusw1,f,c
 22207  0178EE  0EE6               	movlw	-26
 22208  0178F0  32E3               	rrcf	plusw1,f,c
 22209                           
 22210                           ;stkvar	_counter @ sp[(-10)+9]
 22211  0178F2  0EFF               	movlw	-1
 22212  0178F4  50E3               	movf	plusw1,w,c
 22213  0178F6  6E01               	movwf	btemp^0,c
 22214  0178F8  0E01               	movlw	1
 22215  0178FA  5E01               	subwf	btemp^0,f,c
 22216  0178FC  0EFF               	movlw	-1
 22217  0178FE  0060  F007  FFE3   	movff	btemp,plusw1
 22218  017904  A4D8               	btfss	status,2,c
 22219  017906  D791               	goto	u6460
 22220  017908                     u6480:
 22221                           
 22222                           ;stkvar	_sign @ sp[(-10)+8]
 22223  017908  0EFE               	movlw	-2
 22224  01790A  50E3               	movf	plusw1,w,c
 22225  01790C  B4D8               	btfsc	status,2,c
 22226  01790E  D025               	goto	u6500
 22227                           
 22228                           ;stkvar	_quotient @ sp[(-10)+0]
 22229                           ;stkvar	_quotient @ sp[(-10)+0]
 22230  017910  0EF6               	movlw	-10
 22231  017912  6CE3               	negf	plusw1,c
 22232  017914  0EF7               	movlw	-9
 22233  017916  1EE3               	comf	plusw1,f,c
 22234  017918  0EF8               	movlw	-8
 22235  01791A  1EE3               	comf	plusw1,f,c
 22236  01791C  0EF9               	movlw	-7
 22237  01791E  1EE3               	comf	plusw1,f,c
 22238  017920  0EFA               	movlw	-6
 22239  017922  1EE3               	comf	plusw1,f,c
 22240  017924  0EFB               	movlw	-5
 22241  017926  1EE3               	comf	plusw1,f,c
 22242  017928  0EFC               	movlw	-4
 22243  01792A  1EE3               	comf	plusw1,f,c
 22244  01792C  0EFD               	movlw	-3
 22245  01792E  1EE3               	comf	plusw1,f,c
 22246  017930  E314               	bnc	u6500
 22247  017932  0EF7               	movlw	-9
 22248  017934  2AE3               	incf	plusw1,f,c
 22249  017936  E311               	bnc	u6500
 22250  017938  0EF8               	movlw	-8
 22251  01793A  2AE3               	incf	plusw1,f,c
 22252  01793C  E30E               	bnc	u6500
 22253  01793E  0EF9               	movlw	-7
 22254  017940  2AE3               	incf	plusw1,f,c
 22255  017942  E30B               	bnc	u6500
 22256  017944  0EFA               	movlw	-6
 22257  017946  2AE3               	incf	plusw1,f,c
 22258  017948  E308               	bnc	u6500
 22259  01794A  0EFB               	movlw	-5
 22260  01794C  2AE3               	incf	plusw1,f,c
 22261  01794E  E305               	bnc	u6500
 22262  017950  0EFC               	movlw	-4
 22263  017952  2AE3               	incf	plusw1,f,c
 22264  017954  E302               	bnc	u6500
 22265  017956  0EFD               	movlw	-3
 22266  017958  2AE3               	incf	plusw1,f,c
 22267  01795A                     u6500:
 22268                           
 22269                           ;stkvar	_quotient @ sp[(-10)+0]
 22270  01795A  0EF6               	movlw	246
 22271  01795C  24E1               	addwf	fsr1l,w,c
 22272  01795E  6ED9               	movwf	fsr2l,c
 22273  017960  0EFF               	movlw	255
 22274  017962  20E2               	addwfc	fsr1h,w,c
 22275  017964  6EDA               	movwf	fsr2h,c
 22276                           
 22277                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 22278  017966  0E08               	movlw	8
 22279  017968  6E01               	movwf	btemp^0,c
 22280  01796A  0EEE               	movlw	-18
 22281  01796C                     us651999:
 22282  01796C  006F FF7B FFE3     	movff	postinc2,plusw1
 22283  017972  28E8               	incf	wreg,w,c
 22284  017974  2E01               	decfsz	btemp^0,f,c
 22285  017976  D7FA               	bra	us651999
 22286                           
 22287                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 22288  017978  0EF6               	movlw	246
 22289  01797A  26E1               	addwf	fsr1l,f,c
 22290  01797C  0EFF               	movlw	255
 22291  01797E  22E2               	addwfc	fsr1h,f,c
 22292  017980  0012               	return		;funcret
 22293  017982                     __end_of___aodiv:
 22294                           	opt callstack 0
 22295                           
 22296 ;; *************** function _ctoa *****************
 22297 ;; Defined at:
 22298 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 22299 ;; Parameters:    Size  Location     Type
 22300 ;;  fp              2  [STACK] PTR struct _IO_FILE
 22301 ;;		 -> f(6), NULL(0), 
 22302 ;;  c               1  [STACK] unsigned char 
 22303 ;; Auto vars:     Size  Location     Type
 22304 ;;  w               2  [STACK] int 
 22305 ;;  l               2    0        int 
 22306 ;; Return value:  Size  Location     Type
 22307 ;;                  2  [STACK] int 
 22308 ;; Registers used:
 22309 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 22310 ;; Tracked objects:
 22311 ;;		On entry : 0/0
 22312 ;;		On exit  : 0/0
 22313 ;;		Unchanged: 0/0
 22314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22319 ;;Total ram usage:        0 bytes
 22320 ;; Hardware stack levels used:    1
 22321 ;; Hardware stack levels required when called:   20
 22322 ;; This function calls:
 22323 ;;		_pad
 22324 ;; This function is called by:
 22325 ;;		_vfpfcnvrt
 22326 ;; This function uses a reentrant model
 22327 ;;
 22328                           
 22329                           	psect	text77
 22330  01AF9A                     __ptext77:
 22331                           	opt callstack 0
 22332  01AF9A                     _ctoa:
 22333                           	opt callstack 0
 22334                           
 22335                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22336  01AF9A  52E6               	movf	postinc1,f,c
 22337  01AF9C  52E6               	movf	postinc1,f,c
 22338                           
 22339                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 22340                           
 22341                           ;incstack = 0
 22342 ;; hardware stack exceeded
 22343  01AF9E  503A               	movf	_width^0,w,c
 22344  01AFA0  103B               	iorwf	(_width+1)^0,w,c
 22345  01AFA2  A4D8               	btfss	status,2,c
 22346  01AFA4  D009               	goto	l12250
 22347                           
 22348                           ;stkvar	_w @ sp[(-2)+0]
 22349  01AFA6  0EFE               	movlw	-2
 22350  01AFA8  0060  F0EB  FFE3   	movff	_width,plusw1
 22351  01AFAE  0EFF               	movlw	-1
 22352  01AFB0  0060  F0EF  FFE3   	movff	_width+1,plusw1
 22353  01AFB6  D016               	goto	l12252
 22354  01AFB8                     l12250:
 22355  01AFB8  0EFF               	movlw	255
 22356  01AFBA  6E0B               	movwf	(btemp+10)^0,c
 22357  01AFBC  0EFF               	movlw	255
 22358  01AFBE  6E0C               	movwf	(btemp+11)^0,c
 22359  01AFC0  0060  F0E8  F009   	movff	_width,btemp+8
 22360  01AFC6  0060  F0EC  F00A   	movff	_width+1,btemp+9
 22361  01AFCC  500B               	movf	(btemp+10)^0,w,c
 22362  01AFCE  2609               	addwf	(btemp+8)^0,f,c
 22363  01AFD0  500C               	movf	(btemp+11)^0,w,c
 22364  01AFD2  220A               	addwfc	(btemp+9)^0,f,c
 22365                           
 22366                           ;stkvar	_w @ sp[(-2)+0]
 22367  01AFD4  0EFE               	movlw	-2
 22368  01AFD6  0060  F027  FFE3   	movff	btemp+8,plusw1
 22369  01AFDC  0EFF               	movlw	-1
 22370  01AFDE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22371  01AFE4                     l12252:
 22372                           
 22373                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 22374                           ;stkvar	_c @ sp[(-2)+-3]
 22375  01AFE4  0EFB               	movlw	-5
 22376  01AFE6  006F FF8C  F297    	movff	plusw1,_dbuf
 22377                           
 22378                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 22379  01AFEC  0102               	movlb	2	; () banked
 22380  01AFEE  6B98               	clrf	(_dbuf+1)& (0+255),b
 22381                           
 22382                           ; BSR set to: 2
 22383                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 22384                           ;stkvar	_w @ sp[(-2)+0]
 22385  01AFF0  0EFE               	movlw	-2
 22386  01AFF2  006F FF8F FFE6     	movff	plusw1,postinc1
 22387  01AFF8  006F FF8F FFE6     	movff	plusw1,postinc1
 22388  01AFFE  0E97               	movlw	low _dbuf
 22389  01B000  6EE6               	movwf	postinc1,c
 22390  01B002  0E02               	movlw	high _dbuf
 22391  01B004  6EE6               	movwf	postinc1,c
 22392                           
 22393                           ;stkvar	_fp @ sp[(-6)+-2]
 22394  01B006  0EF8               	movlw	-8
 22395  01B008  006F FF8F FFE6     	movff	plusw1,postinc1
 22396  01B00E  006F FF8F FFE6     	movff	plusw1,postinc1
 22397  01B014  EC44  F0CF         	call	_pad	;wreg free
 22398                           
 22399                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 22400  01B018  0EFB               	movlw	251
 22401  01B01A  26E1               	addwf	fsr1l,f,c
 22402  01B01C  0EFF               	movlw	255
 22403  01B01E  22E2               	addwfc	fsr1h,f,c
 22404  01B020  0012               	return		;funcret
 22405  01B022                     __end_of_ctoa:
 22406                           	opt callstack 0
 22407                           
 22408 ;; *************** function _pad *****************
 22409 ;; Defined at:
 22410 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 22411 ;; Parameters:    Size  Location     Type
 22412 ;;  fp              2  [STACK] PTR struct _IO_FILE
 22413 ;;		 -> f(6), NULL(0), 
 22414 ;;  buf             2  [STACK] PTR unsigned char 
 22415 ;;		 -> dbuf(80), 
 22416 ;;  p               2  [STACK] int 
 22417 ;; Auto vars:     Size  Location     Type
 22418 ;;  w               2  [STACK] int 
 22419 ;;  i               2  [STACK] int 
 22420 ;; Return value:  Size  Location     Type
 22421 ;;                  2  [STACK] int 
 22422 ;; Registers used:
 22423 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 22424 ;; Tracked objects:
 22425 ;;		On entry : 0/2
 22426 ;;		On exit  : 0/0
 22427 ;;		Unchanged: 0/0
 22428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22433 ;;Total ram usage:        0 bytes
 22434 ;; Hardware stack levels used:    1
 22435 ;; Hardware stack levels required when called:   19
 22436 ;; This function calls:
 22437 ;;		_fputc
 22438 ;;		_fputs
 22439 ;;		_strlen
 22440 ;; This function is called by:
 22441 ;;		_ctoa
 22442 ;;		_dtoa
 22443 ;;		_efgtoa
 22444 ;;		_utoa
 22445 ;;		_xtoa
 22446 ;; This function uses a reentrant model
 22447 ;;
 22448                           
 22449                           	psect	text78
 22450  019E88                     __ptext78:
 22451                           	opt callstack 0
 22452  019E88                     _pad:
 22453                           	opt callstack 0
 22454                           
 22455                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22456  019E88  52E6               	movf	postinc1,f,c
 22457  019E8A  52E6               	movf	postinc1,f,c
 22458  019E8C  52E6               	movf	postinc1,f,c
 22459  019E8E  52E6               	movf	postinc1,f,c
 22460                           
 22461                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 22462                           
 22463                           ;incstack = 0
 22464 ;; hardware stack exceeded
 22465  019E90  A03E               	btfss	_flags^0,0,c
 22466  019E92  D010               	goto	l12212
 22467                           
 22468                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 22469                           ;stkvar	_fp @ sp[(-4)+-2]
 22470  019E94  0EFA               	movlw	-6
 22471  019E96  006F FF8F FFE6     	movff	plusw1,postinc1
 22472  019E9C  006F FF8F FFE6     	movff	plusw1,postinc1
 22473                           
 22474                           ;stkvar	_buf @ sp[(-6)+-4]
 22475  019EA2  0EF6               	movlw	-10
 22476  019EA4  006F FF8F FFE6     	movff	plusw1,postinc1
 22477  019EAA  006F FF8F FFE6     	movff	plusw1,postinc1
 22478  019EB0  ECEF  F0D6         	call	_fputs	;wreg free
 22479  019EB4                     l12212:
 22480                           
 22481                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 22482                           ;stkvar	_p @ sp[(-4)+-6]
 22483  019EB4  0EF7               	movlw	-9
 22484  019EB6  BEE3               	btfsc	plusw1,7,c
 22485  019EB8  D011               	goto	l12216
 22486                           
 22487                           ;stkvar	_p @ sp[(-4)+-6]
 22488                           ;stkvar	_w @ sp[(-4)+0]
 22489  019EBA  0EF6               	movlw	-10
 22490  019EBC  006F FF8C  F001    	movff	plusw1,btemp
 22491  019EC2  0EFC               	movlw	-4
 22492  019EC4  0060  F007  FFE3   	movff	btemp,plusw1
 22493  019ECA  0EF7               	movlw	-9
 22494  019ECC  006F FF8C  F001    	movff	plusw1,btemp
 22495  019ED2  0EFD               	movlw	-3
 22496  019ED4  0060  F007  FFE3   	movff	btemp,plusw1
 22497  019EDA  D004               	goto	l2246
 22498  019EDC                     l12216:
 22499                           
 22500                           ;stkvar	_w @ sp[(-4)+0]
 22501  019EDC  0EFC               	movlw	-4
 22502  019EDE  6AE3               	clrf	plusw1,c
 22503  019EE0  0EFD               	movlw	-3
 22504  019EE2  6AE3               	clrf	plusw1,c
 22505  019EE4                     l2246:
 22506                           
 22507                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 22508                           ;stkvar	_i @ sp[(-4)+2]
 22509  019EE4  0EFE               	movlw	-2
 22510  019EE6  6AE3               	clrf	plusw1,c
 22511  019EE8  0EFF               	movlw	-1
 22512  019EEA  6AE3               	clrf	plusw1,c
 22513                           
 22514                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 22515  019EEC  D01E               	goto	l12222
 22516  019EEE                     l12218:
 22517                           
 22518                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 22519                           ;stkvar	_fp @ sp[(-4)+-2]
 22520  019EEE  0EFA               	movlw	-6
 22521  019EF0  006F FF8F FFE6     	movff	plusw1,postinc1
 22522  019EF6  006F FF8F FFE6     	movff	plusw1,postinc1
 22523  019EFC  0E20               	movlw	32
 22524  019EFE  6EE6               	movwf	postinc1,c
 22525  019F00  0E00               	movlw	0
 22526  019F02  6EE6               	movwf	postinc1,c
 22527  019F04  EC9A  F0CD         	call	_fputc	;wreg free
 22528                           
 22529                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 22530                           ;stkvar	_i @ sp[(-4)+2]
 22531  019F08  0EFE               	movlw	-2
 22532  019F0A  50E3               	movf	plusw1,w,c
 22533  019F0C  0F01               	addlw	1
 22534  019F0E  6E01               	movwf	btemp^0,c
 22535  019F10  0EFE               	movlw	-2
 22536  019F12  0060  F007  FFE3   	movff	btemp,plusw1
 22537  019F18  6A01               	clrf	btemp^0,c
 22538  019F1A  0EFF               	movlw	-1
 22539  019F1C  50E3               	movf	plusw1,w,c
 22540  019F1E  2001               	addwfc	btemp^0,w,c
 22541  019F20  6E01               	movwf	btemp^0,c
 22542  019F22  0EFF               	movlw	-1
 22543  019F24  0060  F007  FFE3   	movff	btemp,plusw1
 22544  019F2A                     l12222:
 22545                           
 22546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 22547                           ;stkvar	_w @ sp[(-4)+0]
 22548                           ;stkvar	_i @ sp[(-4)+2]
 22549  019F2A  50E1               	movf	fsr1l,w,c
 22550  019F2C  0FFE               	addlw	-2
 22551  019F2E  6ED9               	movwf	fsr2l,c
 22552  019F30  50E2               	movf	fsr1h,w,c
 22553  019F32  6EDA               	movwf	fsr2h,c
 22554  019F34  0EFF               	movlw	255
 22555  019F36  22DA               	addwfc	fsr2h,f,c
 22556  019F38  0EFC               	movlw	-4
 22557  019F3A  50E3               	movf	plusw1,w,c
 22558  019F3C  5CDE               	subwf	postinc2,w,c
 22559  019F3E  50DE               	movf	postinc2,w,c
 22560  019F40  0A80               	xorlw	128
 22561  019F42  6E01               	movwf	btemp^0,c
 22562  019F44  0EFD               	movlw	-3
 22563  019F46  50E3               	movf	plusw1,w,c
 22564  019F48  0A80               	xorlw	128
 22565  019F4A  5801               	subwfb	btemp^0,w,c
 22566  019F4C  A0D8               	btfss	status,0,c
 22567  019F4E  D7CF               	goto	l12218
 22568                           
 22569                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 22570  019F50  B03E               	btfsc	_flags^0,0,c
 22571  019F52  D010               	goto	l12226
 22572                           
 22573                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 22574                           ;stkvar	_fp @ sp[(-4)+-2]
 22575  019F54  0EFA               	movlw	-6
 22576  019F56  006F FF8F FFE6     	movff	plusw1,postinc1
 22577  019F5C  006F FF8F FFE6     	movff	plusw1,postinc1
 22578                           
 22579                           ;stkvar	_buf @ sp[(-6)+-4]
 22580  019F62  0EF6               	movlw	-10
 22581  019F64  006F FF8F FFE6     	movff	plusw1,postinc1
 22582  019F6A  006F FF8F FFE6     	movff	plusw1,postinc1
 22583  019F70  ECEF  F0D6         	call	_fputs	;wreg free
 22584  019F74                     l12226:
 22585                           
 22586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 22587                           ;stkvar	_w @ sp[(-4)+0]
 22588                           ;stkvar	_buf @ sp[(-4)+-4]
 22589  019F74  0EF8               	movlw	-8
 22590  019F76  006F FF8F FFE6     	movff	plusw1,postinc1
 22591  019F7C  006F FF8F FFE6     	movff	plusw1,postinc1
 22592  019F82  EC9E  F0D6         	call	_strlen	;wreg free
 22593  019F86  0EFC               	movlw	-4
 22594  019F88  50E3               	movf	plusw1,w,c
 22595  019F8A  2601               	addwf	btemp^0,f,c
 22596  019F8C  0EFD               	movlw	-3
 22597  019F8E  50E3               	movf	plusw1,w,c
 22598  019F90  2202               	addwfc	(btemp+1)^0,f,c
 22599                           
 22600                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 22601  019F92  0EF6               	movlw	246
 22602  019F94  26E1               	addwf	fsr1l,f,c
 22603  019F96  0EFF               	movlw	255
 22604  019F98  22E2               	addwfc	fsr1h,f,c
 22605  019F9A  0012               	return		;funcret
 22606  019F9C                     __end_of_pad:
 22607                           	opt callstack 0
 22608                           
 22609 ;; *************** function _strlen *****************
 22610 ;; Defined at:
 22611 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 22612 ;; Parameters:    Size  Location     Type
 22613 ;;  s               2  [STACK] PTR const unsigned char 
 22614 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 22615 ;;		 -> spin(120), STR_46(9), STR_45(12), D.lcd(480), 
 22616 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 22617 ;;		 -> V(191), 
 22618 ;; Auto vars:     Size  Location     Type
 22619 ;;  a               2  [STACK] PTR const unsigned char 
 22620 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 22621 ;;		 -> spin(120), STR_46(9), STR_45(12), D.lcd(480), 
 22622 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 22623 ;;		 -> V(191), 
 22624 ;; Return value:  Size  Location     Type
 22625 ;;                  2  [STACK] unsigned int 
 22626 ;; Registers used:
 22627 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 22628 ;; Tracked objects:
 22629 ;;		On entry : 0/0
 22630 ;;		On exit  : 0/0
 22631 ;;		Unchanged: 0/0
 22632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22637 ;;Total ram usage:        0 bytes
 22638 ;; Hardware stack levels used:    1
 22639 ;; Hardware stack levels required when called:   15
 22640 ;; This function calls:
 22641 ;;		Nothing
 22642 ;; This function is called by:
 22643 ;;		_eaDogM_WriteString
 22644 ;;		_spinners
 22645 ;;		_calc_bsoc
 22646 ;;		_pad
 22647 ;;		_stoa
 22648 ;; This function uses a reentrant model
 22649 ;;
 22650                           
 22651                           	psect	text79
 22652  01AD3C                     __ptext79:
 22653                           	opt callstack 0
 22654  01AD3C                     _strlen:
 22655                           	opt callstack 0
 22656                           
 22657                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22658  01AD3C  52E6               	movf	postinc1,f,c
 22659  01AD3E  52E6               	movf	postinc1,f,c
 22660                           
 22661                           ;stkvar	_s @ sp[(-2)+-2]
 22662                           
 22663                           ;incstack = 0
 22664 ;; hardware stack exceeded
 22665  01AD40  0EFC               	movlw	-4
 22666  01AD42  006F FF8C  F00B    	movff	plusw1,btemp+10
 22667  01AD48  0EFD               	movlw	-3
 22668  01AD4A  006F FF8C  F00C    	movff	plusw1,btemp+11
 22669                           
 22670                           ;stkvar	_a @ sp[(-2)+0]
 22671  01AD50  0EFF               	movlw	-1
 22672  01AD52  0060  F033  FFE3   	movff	btemp+11,plusw1
 22673  01AD58  0EFE               	movlw	-2
 22674  01AD5A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22675  01AD60  D011               	goto	l7912
 22676  01AD62                     l7910:
 22677                           
 22678                           ;stkvar	_s @ sp[(-2)+-2]
 22679  01AD62  0EFC               	movlw	-4
 22680  01AD64  50E3               	movf	plusw1,w,c
 22681  01AD66  0F01               	addlw	1
 22682  01AD68  6E01               	movwf	btemp^0,c
 22683  01AD6A  0EFC               	movlw	-4
 22684  01AD6C  0060  F007  FFE3   	movff	btemp,plusw1
 22685  01AD72  6A01               	clrf	btemp^0,c
 22686  01AD74  0EFD               	movlw	-3
 22687  01AD76  50E3               	movf	plusw1,w,c
 22688  01AD78  2001               	addwfc	btemp^0,w,c
 22689  01AD7A  6E01               	movwf	btemp^0,c
 22690  01AD7C  0EFD               	movlw	-3
 22691  01AD7E  0060  F007  FFE3   	movff	btemp,plusw1
 22692  01AD84                     l7912:
 22693                           
 22694                           ;stkvar	_s @ sp[(-2)+-2]
 22695  01AD84  0EFC               	movlw	-4
 22696  01AD86  006F FF8F FFF6     	movff	plusw1,tblptrl
 22697  01AD8C  0EFD               	movlw	-3
 22698  01AD8E  006F FF8F FFF7     	movff	plusw1,tblptrh
 22699  01AD94  0E00               	movlw	low (__mediumconst shr (0+16))
 22700  01AD96  6EF8               	movwf	tblptru,c
 22701  01AD98  0E1F               	movlw	(high __ramtop+-1)
 22702  01AD9A  64F7               	cpfsgt	tblptrh,c
 22703  01AD9C  D003               	bra	u5527
 22704  01AD9E  0008               	tblrd		*
 22705  01ADA0  50F5               	movf	tablat,w,c
 22706  01ADA2  D007               	bra	u5520
 22707  01ADA4                     u5527:
 22708  01ADA4  006F FFDB FFE9     	movff	tblptrl,fsr0l
 22709  01ADAA  006F FFDF FFEA     	movff	tblptrh,fsr0h
 22710  01ADB0  50EF               	movf	indf0,w,c
 22711  01ADB2                     u5520:
 22712  01ADB2  0900               	iorlw	0
 22713  01ADB4  A4D8               	btfss	status,2,c
 22714  01ADB6  D7D5               	goto	l7910
 22715                           
 22716                           ;stkvar	_a @ sp[(-2)+0]
 22717                           ;stkvar	_s @ sp[(-2)+-2]
 22718  01ADB8  0EFC               	movlw	-4
 22719  01ADBA  006F FF8C  F001    	movff	plusw1,btemp
 22720  01ADC0  0EFD               	movlw	-3
 22721  01ADC2  006F FF8C  F002    	movff	plusw1,btemp+1
 22722  01ADC8  0EFE               	movlw	-2
 22723  01ADCA  50E3               	movf	plusw1,w,c
 22724  01ADCC  5E01               	subwf	btemp^0,f,c
 22725  01ADCE  0EFF               	movlw	-1
 22726  01ADD0  50E3               	movf	plusw1,w,c
 22727  01ADD2  5A02               	subwfb	(btemp+1)^0,f,c
 22728                           
 22729                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 22730  01ADD4  52E5               	movf	postdec1,f,c
 22731  01ADD6  52E5               	movf	postdec1,f,c
 22732  01ADD8  52E5               	movf	postdec1,f,c
 22733  01ADDA  52E5               	movf	postdec1,f,c
 22734  01ADDC  0012               	return		;funcret
 22735  01ADDE                     __end_of_strlen:
 22736                           	opt callstack 0
 22737                           
 22738 ;; *************** function _fputs *****************
 22739 ;; Defined at:
 22740 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 22741 ;; Parameters:    Size  Location     Type
 22742 ;;  s               2  [STACK] PTR const unsigned char 
 22743 ;;		 -> dbuf(80), 
 22744 ;;  fp              2  [STACK] PTR struct _IO_FILE
 22745 ;;		 -> f(6), NULL(0), 
 22746 ;; Auto vars:     Size  Location     Type
 22747 ;;  i               2  [STACK] int 
 22748 ;;  c               1  [STACK] unsigned char 
 22749 ;; Return value:  Size  Location     Type
 22750 ;;                  2  [STACK] int 
 22751 ;; Registers used:
 22752 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 22753 ;; Tracked objects:
 22754 ;;		On entry : 0/2
 22755 ;;		On exit  : 0/0
 22756 ;;		Unchanged: 0/0
 22757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22762 ;;Total ram usage:        0 bytes
 22763 ;; Hardware stack levels used:    1
 22764 ;; Hardware stack levels required when called:   18
 22765 ;; This function calls:
 22766 ;;		_fputc
 22767 ;; This function is called by:
 22768 ;;		_pad
 22769 ;; This function uses a reentrant model
 22770 ;;
 22771                           
 22772                           	psect	text80
 22773  01ADDE                     __ptext80:
 22774                           	opt callstack 0
 22775  01ADDE                     _fputs:
 22776                           	opt callstack 0
 22777                           
 22778                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22779  01ADDE  52E6               	movf	postinc1,f,c
 22780  01ADE0  52E6               	movf	postinc1,f,c
 22781  01ADE2  52E6               	movf	postinc1,f,c
 22782                           
 22783                           ;stkvar	_i @ sp[(-3)+0]
 22784                           
 22785                           ;incstack = 0
 22786 ;; hardware stack exceeded
 22787  01ADE4  0EFD               	movlw	-3
 22788  01ADE6  6AE3               	clrf	plusw1,c
 22789  01ADE8  0EFE               	movlw	-2
 22790  01ADEA  6AE3               	clrf	plusw1,c
 22791  01ADEC  D01F               	goto	l12164
 22792  01ADEE                     l12160:
 22793                           
 22794                           ;stkvar	_fp @ sp[(-3)+-4]
 22795  01ADEE  0EF9               	movlw	-7
 22796  01ADF0  006F FF8F FFE6     	movff	plusw1,postinc1
 22797  01ADF6  006F FF8F FFE6     	movff	plusw1,postinc1
 22798                           
 22799                           ;stkvar	_c @ sp[(-5)+2]
 22800  01ADFC  0EFD               	movlw	-3
 22801  01ADFE  50E3               	movf	plusw1,w,c
 22802  01AE00  6EE6               	movwf	postinc1,c
 22803  01AE02  0E00               	movlw	0
 22804  01AE04  6EE6               	movwf	postinc1,c
 22805  01AE06  EC9A  F0CD         	call	_fputc	;wreg free
 22806                           
 22807                           ;stkvar	_i @ sp[(-3)+0]
 22808  01AE0A  0EFD               	movlw	-3
 22809  01AE0C  50E3               	movf	plusw1,w,c
 22810  01AE0E  0F01               	addlw	1
 22811  01AE10  6E01               	movwf	btemp^0,c
 22812  01AE12  0EFD               	movlw	-3
 22813  01AE14  0060  F007  FFE3   	movff	btemp,plusw1
 22814  01AE1A  6A01               	clrf	btemp^0,c
 22815  01AE1C  0EFE               	movlw	-2
 22816  01AE1E  50E3               	movf	plusw1,w,c
 22817  01AE20  2001               	addwfc	btemp^0,w,c
 22818  01AE22  6E01               	movwf	btemp^0,c
 22819  01AE24  0EFE               	movlw	-2
 22820  01AE26  0060  F007  FFE3   	movff	btemp,plusw1
 22821  01AE2C                     l12164:
 22822                           
 22823                           ;stkvar	_i @ sp[(-3)+0]
 22824  01AE2C  0EFD               	movlw	-3
 22825  01AE2E  006F FF8C  F00B    	movff	plusw1,btemp+10
 22826  01AE34  0EFE               	movlw	-2
 22827  01AE36  006F FF8C  F00C    	movff	plusw1,btemp+11
 22828                           
 22829                           ;stkvar	_s @ sp[(-3)+-2]
 22830  01AE3C  0EFB               	movlw	-5
 22831  01AE3E  006F FF8C  F009    	movff	plusw1,btemp+8
 22832  01AE44  0EFC               	movlw	-4
 22833  01AE46  006F FF8C  F00A    	movff	plusw1,btemp+9
 22834  01AE4C  500B               	movf	(btemp+10)^0,w,c
 22835  01AE4E  2409               	addwf	(btemp+8)^0,w,c
 22836  01AE50  6ED9               	movwf	fsr2l,c
 22837  01AE52  500C               	movf	(btemp+11)^0,w,c
 22838  01AE54  200A               	addwfc	(btemp+9)^0,w,c
 22839  01AE56  6EDA               	movwf	fsr2h,c
 22840  01AE58  50DF               	movf	indf2,w,c
 22841  01AE5A  6E0C               	movwf	(btemp+11)^0,c
 22842                           
 22843                           ;stkvar	_c @ sp[(-3)+2]
 22844  01AE5C  0EFF               	movlw	-1
 22845  01AE5E  0060  F033  FFE3   	movff	btemp+11,plusw1
 22846  01AE64  0EFF               	movlw	-1
 22847  01AE66  50E3               	movf	plusw1,w,c
 22848  01AE68  A4D8               	btfss	status,2,c
 22849  01AE6A  D7C1               	goto	l12160
 22850                           
 22851                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 22852  01AE6C  0EF9               	movlw	249
 22853  01AE6E  26E1               	addwf	fsr1l,f,c
 22854  01AE70  0EFF               	movlw	255
 22855  01AE72  22E2               	addwfc	fsr1h,f,c
 22856  01AE74  0012               	return		;funcret
 22857  01AE76                     __end_of_fputs:
 22858                           	opt callstack 0
 22859                           
 22860 ;; *************** function _fputc *****************
 22861 ;; Defined at:
 22862 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 22863 ;; Parameters:    Size  Location     Type
 22864 ;;  c               2  [STACK] int 
 22865 ;;  fp              2  [STACK] PTR struct _IO_FILE
 22866 ;;		 -> f(6), NULL(0), 
 22867 ;; Auto vars:     Size  Location     Type
 22868 ;;		None
 22869 ;; Return value:  Size  Location     Type
 22870 ;;                  2  [STACK] int 
 22871 ;; Registers used:
 22872 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 22873 ;; Tracked objects:
 22874 ;;		On entry : 0/0
 22875 ;;		On exit  : 0/0
 22876 ;;		Unchanged: 0/0
 22877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22882 ;;Total ram usage:        0 bytes
 22883 ;; Hardware stack levels used:    1
 22884 ;; Hardware stack levels required when called:   17
 22885 ;; This function calls:
 22886 ;;		_putch
 22887 ;; This function is called by:
 22888 ;;		_pad
 22889 ;;		_stoa
 22890 ;;		_vfpfcnvrt
 22891 ;;		_fputs
 22892 ;; This function uses a reentrant model
 22893 ;;
 22894                           
 22895                           	psect	text81
 22896  019B34                     __ptext81:
 22897                           	opt callstack 0
 22898  019B34                     _fputc:
 22899                           	opt callstack 0
 22900                           
 22901                           ;stkvar	_fp @ sp[(0)+-4]
 22902                           
 22903                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22904                           ;incstack = 0
 22905 ;; hardware stack exceeded
 22906  019B34  0EFC               	movlw	-4
 22907  019B36  006F FF8C  F001    	movff	plusw1,btemp
 22908  019B3C  0EFD               	movlw	-3
 22909  019B3E  50E3               	movf	plusw1,w,c
 22910  019B40  1001               	iorwf	btemp^0,w,c
 22911  019B42  B4D8               	btfsc	status,2,c
 22912  019B44  D009               	goto	u10950
 22913                           
 22914                           ;stkvar	_fp @ sp[(0)+-4]
 22915  019B46  0EFC               	movlw	-4
 22916  019B48  006F FF8C  F001    	movff	plusw1,btemp
 22917  019B4E  0EFD               	movlw	-3
 22918  019B50  50E3               	movf	plusw1,w,c
 22919  019B52  1001               	iorwf	btemp^0,w,c
 22920  019B54  A4D8               	btfss	status,2,c
 22921  019B56  D006               	goto	l12148
 22922  019B58                     u10950:
 22923                           
 22924                           ;stkvar	_c @ sp[(0)+-2]
 22925  019B58  0EFE               	movlw	-2
 22926  019B5A  50E3               	movf	plusw1,w,c
 22927  019B5C  6EE6               	movwf	postinc1,c
 22928  019B5E  EC6A  F0E2         	call	_putch	;wreg free
 22929  019B62  D075               	goto	l3292
 22930  019B64                     l12148:
 22931                           
 22932                           ;stkvar	_fp @ sp[(0)+-4]
 22933  019B64  0EFC               	movlw	-4
 22934  019B66  006F FF8C  F00B    	movff	plusw1,btemp+10
 22935  019B6C  0EFD               	movlw	-3
 22936  019B6E  006F FF8C  F00C    	movff	plusw1,btemp+11
 22937  019B74  0E04               	movlw	4
 22938  019B76  240B               	addwf	(btemp+10)^0,w,c
 22939  019B78  6ED9               	movwf	fsr2l,c
 22940  019B7A  0E00               	movlw	0
 22941  019B7C  200C               	addwfc	(btemp+11)^0,w,c
 22942  019B7E  6EDA               	movwf	fsr2h,c
 22943  019B80  50DE               	movf	postinc2,w,c
 22944  019B82  10DE               	iorwf	postinc2,w,c
 22945  019B84  B4D8               	btfsc	status,2,c
 22946  019B86  D026               	goto	u10970
 22947                           
 22948                           ;stkvar	_fp @ sp[(0)+-4]
 22949  019B88  0EFC               	movlw	-4
 22950  019B8A  006F FF8C  F00B    	movff	plusw1,btemp+10
 22951  019B90  0EFD               	movlw	-3
 22952  019B92  006F FF8C  F00C    	movff	plusw1,btemp+11
 22953  019B98  0E04               	movlw	4
 22954  019B9A  240B               	addwf	(btemp+10)^0,w,c
 22955  019B9C  6ED9               	movwf	fsr2l,c
 22956  019B9E  0E00               	movlw	0
 22957  019BA0  200C               	addwfc	(btemp+11)^0,w,c
 22958  019BA2  6EDA               	movwf	fsr2h,c
 22959                           
 22960                           ;stkvar	_fp @ sp[(0)+-4]
 22961  019BA4  0EFC               	movlw	-4
 22962  019BA6  006F FF8C  F00B    	movff	plusw1,btemp+10
 22963  019BAC  0EFD               	movlw	-3
 22964  019BAE  006F FF8C  F00C    	movff	plusw1,btemp+11
 22965  019BB4  0E02               	movlw	2
 22966  019BB6  240B               	addwf	(btemp+10)^0,w,c
 22967  019BB8  6EE9               	movwf	fsr0l,c
 22968  019BBA  0E00               	movlw	0
 22969  019BBC  200C               	addwfc	(btemp+11)^0,w,c
 22970  019BBE  6EEA               	movwf	fsr0h,c
 22971  019BC0  50DE               	movf	postinc2,w,c
 22972  019BC2  5CEE               	subwf	postinc0,w,c
 22973  019BC4  50EE               	movf	postinc0,w,c
 22974  019BC6  0A80               	xorlw	128
 22975  019BC8  6E01               	movwf	btemp^0,c
 22976  019BCA  50DE               	movf	postinc2,w,c
 22977  019BCC  0A80               	xorlw	128
 22978  019BCE  5801               	subwfb	btemp^0,w,c
 22979  019BD0  B0D8               	btfsc	status,0,c
 22980  019BD2  D03D               	goto	l3292
 22981  019BD4                     u10970:
 22982                           
 22983                           ;stkvar	_c @ sp[(0)+-2]
 22984                           ;stkvar	_fp @ sp[(0)+-4]
 22985  019BD4  0EFC               	movlw	-4
 22986  019BD6  006F FF8C  F00B    	movff	plusw1,btemp+10
 22987  019BDC  0EFD               	movlw	-3
 22988  019BDE  006F FF8C  F00C    	movff	plusw1,btemp+11
 22989  019BE4  0E02               	movlw	2
 22990  019BE6  240B               	addwf	(btemp+10)^0,w,c
 22991  019BE8  6ED9               	movwf	fsr2l,c
 22992  019BEA  0E00               	movlw	0
 22993  019BEC  200C               	addwfc	(btemp+11)^0,w,c
 22994  019BEE  6EDA               	movwf	fsr2h,c
 22995  019BF0  006F FF78  F00B    	movff	postinc2,btemp+10
 22996  019BF6  006F FF74  F00C    	movff	postdec2,btemp+11
 22997                           
 22998                           ;stkvar	_fp @ sp[(0)+-4]
 22999  019BFC  0EFC               	movlw	-4
 23000  019BFE  006F FF8F FFD9     	movff	plusw1,fsr2l
 23001  019C04  0EFD               	movlw	-3
 23002  019C06  006F FF8F FFDA     	movff	plusw1,fsr2h
 23003  019C0C  006F FF78  F009    	movff	postinc2,btemp+8
 23004  019C12  006F FF74  F00A    	movff	postdec2,btemp+9
 23005  019C18  500B               	movf	(btemp+10)^0,w,c
 23006  019C1A  2409               	addwf	(btemp+8)^0,w,c
 23007  019C1C  6ED9               	movwf	fsr2l,c
 23008  019C1E  500C               	movf	(btemp+11)^0,w,c
 23009  019C20  200A               	addwfc	(btemp+9)^0,w,c
 23010  019C22  6EDA               	movwf	fsr2h,c
 23011  019C24  0EFE               	movlw	-2
 23012  019C26  006F FF8F FFDF     	movff	plusw1,indf2
 23013                           
 23014                           ;stkvar	_fp @ sp[(0)+-4]
 23015  019C2C  0EFC               	movlw	-4
 23016  019C2E  006F FF8C  F00B    	movff	plusw1,btemp+10
 23017  019C34  0EFD               	movlw	-3
 23018  019C36  006F FF8C  F00C    	movff	plusw1,btemp+11
 23019  019C3C  0E02               	movlw	2
 23020  019C3E  240B               	addwf	(btemp+10)^0,w,c
 23021  019C40  6ED9               	movwf	fsr2l,c
 23022  019C42  0E00               	movlw	0
 23023  019C44  200C               	addwfc	(btemp+11)^0,w,c
 23024  019C46  6EDA               	movwf	fsr2h,c
 23025  019C48  2ADE               	incf	postinc2,f,c
 23026  019C4A  0E00               	movlw	0
 23027  019C4C  22DD               	addwfc	postdec2,f,c
 23028  019C4E                     l3292:
 23029                           
 23030                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 23031  019C4E  52E5               	movf	postdec1,f,c
 23032  019C50  52E5               	movf	postdec1,f,c
 23033  019C52  52E5               	movf	postdec1,f,c
 23034  019C54  52E5               	movf	postdec1,f,c
 23035  019C56  0012               	return		;funcret
 23036  019C58                     __end_of_fputc:
 23037                           	opt callstack 0
 23038                           
 23039 ;; *************** function _putch *****************
 23040 ;; Defined at:
 23041 ;;		line 421 in file "eadog.c"
 23042 ;; Parameters:    Size  Location     Type
 23043 ;;  c               1  [STACK] unsigned char 
 23044 ;; Auto vars:     Size  Location     Type
 23045 ;;		None
 23046 ;; Return value:  Size  Location     Type
 23047 ;;                  1  [STACK] void 
 23048 ;; Registers used:
 23049 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 23050 ;; Tracked objects:
 23051 ;;		On entry : 0/0
 23052 ;;		On exit  : 0/0
 23053 ;;		Unchanged: 0/0
 23054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23059 ;;Total ram usage:        0 bytes
 23060 ;; Hardware stack levels used:    1
 23061 ;; Hardware stack levels required when called:   16
 23062 ;; This function calls:
 23063 ;;		_ringBufS_put_dma
 23064 ;; This function is called by:
 23065 ;;		_fputc
 23066 ;; This function uses a reentrant model
 23067 ;;
 23068                           
 23069                           	psect	text82
 23070  01C4D4                     __ptext82:
 23071                           	opt callstack 0
 23072  01C4D4                     _putch:
 23073                           	opt callstack 0
 23074                           
 23075                           ;eadog.c: 421: void putch(char c);eadog.c: 422: {;eadog.c: 423:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 23076                           ;stkvar	_c @ sp[(0)+-1]
 23077                           
 23078                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23079                           ;incstack = 0
 23080 ;; hardware stack exceeded
 23081  01C4D4  0EFF               	movlw	-1
 23082  01C4D6  50E3               	movf	plusw1,w,c
 23083  01C4D8  6EE6               	movwf	postinc1,c
 23084  01C4DA  0060  F757  FFE6   	movff	_spi_link+6,postinc1
 23085  01C4E0  0060  F75B  FFE6   	movff	_spi_link+7,postinc1
 23086  01C4E6  ECA2  F0D5         	call	_ringBufS_put_dma	;wreg free
 23087                           
 23088                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 23089  01C4EA  52E5               	movf	postdec1,f,c
 23090  01C4EC  0012               	return		;funcret
 23091  01C4EE                     __end_of_putch:
 23092                           	opt callstack 0
 23093                           
 23094 ;; *************** function _ringBufS_put_dma *****************
 23095 ;; Defined at:
 23096 ;;		line 67 in file "ringbufs.c"
 23097 ;; Parameters:    Size  Location     Type
 23098 ;;  _this           2  [STACK] PTR struct ringBufS_t
 23099 ;;		 -> ring_buf1(67), 
 23100 ;;  c               1  [STACK] const unsigned char 
 23101 ;; Auto vars:     Size  Location     Type
 23102 ;;		None
 23103 ;; Return value:  Size  Location     Type
 23104 ;;                  1  [STACK] void 
 23105 ;; Registers used:
 23106 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 23107 ;; Tracked objects:
 23108 ;;		On entry : 0/0
 23109 ;;		On exit  : 0/0
 23110 ;;		Unchanged: 0/0
 23111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23116 ;;Total ram usage:        0 bytes
 23117 ;; Hardware stack levels used:    1
 23118 ;; Hardware stack levels required when called:   15
 23119 ;; This function calls:
 23120 ;;		Nothing
 23121 ;; This function is called by:
 23122 ;;		_putch
 23123 ;; This function uses a reentrant model
 23124 ;;
 23125                           
 23126                           	psect	text83
 23127  01AB44                     __ptext83:
 23128                           	opt callstack 0
 23129  01AB44                     _ringBufS_put_dma:
 23130                           	opt callstack 0
 23131                           
 23132                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 23133                           ;stkvar	__this @ sp[(0)+-2]
 23134                           
 23135                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23136                           ;incstack = 0
 23137 ;; hardware stack exceeded
 23138  01AB44  0EFE               	movlw	-2
 23139  01AB46  006F FF8C  F00B    	movff	plusw1,btemp+10
 23140  01AB4C  0EFF               	movlw	-1
 23141  01AB4E  006F FF8C  F00C    	movff	plusw1,btemp+11
 23142  01AB54  0E42               	movlw	66
 23143  01AB56  240B               	addwf	(btemp+10)^0,w,c
 23144  01AB58  6ED9               	movwf	fsr2l,c
 23145  01AB5A  0E00               	movlw	0
 23146  01AB5C  200C               	addwfc	(btemp+11)^0,w,c
 23147  01AB5E  6EDA               	movwf	fsr2h,c
 23148  01AB60  0E40               	movlw	64
 23149  01AB62  60DF               	cpfslt	indf2,c
 23150  01AB64  D040               	goto	l1597
 23151                           
 23152                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 23153                           ;stkvar	_c @ sp[(0)+-3]
 23154                           ;stkvar	__this @ sp[(0)+-2]
 23155  01AB66  0EFE               	movlw	-2
 23156  01AB68  006F FF8C  F00B    	movff	plusw1,btemp+10
 23157  01AB6E  0EFF               	movlw	-1
 23158  01AB70  006F FF8C  F00C    	movff	plusw1,btemp+11
 23159  01AB76  0E40               	movlw	64
 23160  01AB78  240B               	addwf	(btemp+10)^0,w,c
 23161  01AB7A  6ED9               	movwf	fsr2l,c
 23162  01AB7C  0E00               	movlw	0
 23163  01AB7E  200C               	addwfc	(btemp+11)^0,w,c
 23164  01AB80  6EDA               	movwf	fsr2h,c
 23165  01AB82  50DF               	movf	indf2,w,c
 23166  01AB84  6E0C               	movwf	(btemp+11)^0,c
 23167                           
 23168                           ;stkvar	__this @ sp[(0)+-2]
 23169  01AB86  0EFE               	movlw	-2
 23170  01AB88  006F FF8C  F009    	movff	plusw1,btemp+8
 23171  01AB8E  0EFF               	movlw	-1
 23172  01AB90  006F FF8C  F00A    	movff	plusw1,btemp+9
 23173  01AB96  500C               	movf	(btemp+11)^0,w,c
 23174  01AB98  2409               	addwf	(btemp+8)^0,w,c
 23175  01AB9A  6ED9               	movwf	fsr2l,c
 23176  01AB9C  0E00               	movlw	0
 23177  01AB9E  200A               	addwfc	(btemp+9)^0,w,c
 23178  01ABA0  6EDA               	movwf	fsr2h,c
 23179  01ABA2  0EFD               	movlw	-3
 23180  01ABA4  006F FF8F FFDF     	movff	plusw1,indf2
 23181                           
 23182                           ;ringbufs.c: 71:   ++_this->head;
 23183                           ;stkvar	__this @ sp[(0)+-2]
 23184  01ABAA  0EFE               	movlw	-2
 23185  01ABAC  006F FF8C  F00B    	movff	plusw1,btemp+10
 23186  01ABB2  0EFF               	movlw	-1
 23187  01ABB4  006F FF8C  F00C    	movff	plusw1,btemp+11
 23188  01ABBA  0E40               	movlw	64
 23189  01ABBC  240B               	addwf	(btemp+10)^0,w,c
 23190  01ABBE  6ED9               	movwf	fsr2l,c
 23191  01ABC0  0E00               	movlw	0
 23192  01ABC2  200C               	addwfc	(btemp+11)^0,w,c
 23193  01ABC4  6EDA               	movwf	fsr2h,c
 23194  01ABC6  2ADF               	incf	indf2,f,c
 23195                           
 23196                           ;ringbufs.c: 72:   ++_this->count;
 23197                           ;stkvar	__this @ sp[(0)+-2]
 23198  01ABC8  0EFE               	movlw	-2
 23199  01ABCA  006F FF8C  F00B    	movff	plusw1,btemp+10
 23200  01ABD0  0EFF               	movlw	-1
 23201  01ABD2  006F FF8C  F00C    	movff	plusw1,btemp+11
 23202  01ABD8  0E42               	movlw	66
 23203  01ABDA  240B               	addwf	(btemp+10)^0,w,c
 23204  01ABDC  6ED9               	movwf	fsr2l,c
 23205  01ABDE  0E00               	movlw	0
 23206  01ABE0  200C               	addwfc	(btemp+11)^0,w,c
 23207  01ABE2  6EDA               	movwf	fsr2h,c
 23208  01ABE4  2ADF               	incf	indf2,f,c
 23209  01ABE6                     l1597:
 23210                           
 23211                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 23212  01ABE6  52E5               	movf	postdec1,f,c
 23213  01ABE8  52E5               	movf	postdec1,f,c
 23214  01ABEA  52E5               	movf	postdec1,f,c
 23215  01ABEC  0012               	return		;funcret
 23216  01ABEE                     __end_of_ringBufS_put_dma:
 23217                           	opt callstack 0
 23218                           
 23219 ;; *************** function _atoi *****************
 23220 ;; Defined at:
 23221 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 23222 ;; Parameters:    Size  Location     Type
 23223 ;;  s               2  [STACK] PTR const unsigned char 
 23224 ;;		 -> STR_64(127), STR_62(3), STR_61(3), STR_60(19), 
 23225 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 23226 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 23227 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 23228 ;;		 -> STR_47(19), STR_44(3), STR_43(3), STR_42(22), 
 23229 ;;		 -> STR_41(22), STR_40(22), STR_39(23), STR_38(23), 
 23230 ;;		 -> STR_37(23), STR_36(29), STR_35(23), STR_34(23), 
 23231 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 23232 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 23233 ;;		 -> STR_25(22), STR_24(22), STR_23(22), STR_22(22), 
 23234 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 23235 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 23236 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 23237 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 23238 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 23239 ;; Auto vars:     Size  Location     Type
 23240 ;;  n               2  [STACK] int 
 23241 ;;  neg             2  [STACK] int 
 23242 ;; Return value:  Size  Location     Type
 23243 ;;                  2  [STACK] int 
 23244 ;; Registers used:
 23245 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 23246 ;; Tracked objects:
 23247 ;;		On entry : 0/0
 23248 ;;		On exit  : 0/0
 23249 ;;		Unchanged: 0/0
 23250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23255 ;;Total ram usage:        0 bytes
 23256 ;; Hardware stack levels used:    1
 23257 ;; Hardware stack levels required when called:   16
 23258 ;; This function calls:
 23259 ;;		_isdigit
 23260 ;;		_isspace
 23261 ;; This function is called by:
 23262 ;;		_vfpfcnvrt
 23263 ;; This function uses a reentrant model
 23264 ;;
 23265                           
 23266                           	psect	text84
 23267  017982                     __ptext84:
 23268                           	opt callstack 0
 23269  017982                     _atoi:
 23270                           	opt callstack 0
 23271                           
 23272                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23273  017982  0E09               	movlw	9
 23274  017984  26E1               	addwf	fsr1l,f,c
 23275  017986  0E00               	movlw	0
 23276  017988  22E2               	addwfc	fsr1h,f,c
 23277                           
 23278                           ;stkvar	_n @ sp[(-9)+5]
 23279                           
 23280                           ;incstack = 0
 23281 ;; hardware stack exceeded
 23282  01798A  0EFC               	movlw	-4
 23283  01798C  6AE3               	clrf	plusw1,c
 23284  01798E  0EFD               	movlw	-3
 23285  017990  6AE3               	clrf	plusw1,c
 23286                           
 23287                           ;stkvar	_neg @ sp[(-9)+7]
 23288  017992  0EFE               	movlw	-2
 23289  017994  6AE3               	clrf	plusw1,c
 23290  017996  0EFF               	movlw	-1
 23291  017998  6AE3               	clrf	plusw1,c
 23292  01799A  D011               	goto	l9536
 23293  01799C                     l9534:
 23294                           
 23295                           ;stkvar	_s @ sp[(-9)+-2]
 23296  01799C  0EF5               	movlw	-11
 23297  01799E  50E3               	movf	plusw1,w,c
 23298  0179A0  0F01               	addlw	1
 23299  0179A2  6E01               	movwf	btemp^0,c
 23300  0179A4  0EF5               	movlw	-11
 23301  0179A6  0060  F007  FFE3   	movff	btemp,plusw1
 23302  0179AC  6A01               	clrf	btemp^0,c
 23303  0179AE  0EF6               	movlw	-10
 23304  0179B0  50E3               	movf	plusw1,w,c
 23305  0179B2  2001               	addwfc	btemp^0,w,c
 23306  0179B4  6E01               	movwf	btemp^0,c
 23307  0179B6  0EF6               	movlw	-10
 23308  0179B8  0060  F007  FFE3   	movff	btemp,plusw1
 23309  0179BE                     l9536:
 23310                           
 23311                           ;stkvar	_atoi$6385 @ sp[(-9)+4]
 23312  0179BE  0EFB               	movlw	-5
 23313  0179C0  6AE3               	clrf	plusw1,c
 23314  0179C2  2AE3               	incf	plusw1,f,c
 23315                           
 23316                           ;stkvar	_s @ sp[(-9)+-2]
 23317  0179C4  50E1               	movf	fsr1l,w,c
 23318  0179C6  0FF5               	addlw	-11
 23319  0179C8  6ED9               	movwf	fsr2l,c
 23320  0179CA  50E2               	movf	fsr1h,w,c
 23321  0179CC  6EDA               	movwf	fsr2h,c
 23322  0179CE  0EFF               	movlw	255
 23323  0179D0  22DA               	addwfc	fsr2h,f,c
 23324  0179D2  006F FF7B FFF6     	movff	postinc2,tblptrl
 23325  0179D8  006F FF77 FFF7     	movff	postdec2,tblptrh
 23326  0179DE                     	if	0	;tblptru may be non-zero
 23327  0179DE                     	endif
 23328  0179DE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23329  0179DE  0E00               	movlw	low (__mediumconst shr (0+16))
 23330  0179E0  6EF8               	movwf	tblptru,c
 23331  0179E2                     	endif
 23332  0179E2  0008               	tblrd		*
 23333  0179E4  50F5               	movf	tablat,w,c
 23334  0179E6  0A20               	xorlw	32
 23335  0179E8  B4D8               	btfsc	status,2,c
 23336  0179EA  D023               	goto	l9544
 23337  0179EC  0EF7               	movlw	247
 23338  0179EE  6E0B               	movwf	(btemp+10)^0,c
 23339  0179F0  0EFF               	movlw	255
 23340  0179F2  6E0C               	movwf	(btemp+11)^0,c
 23341                           
 23342                           ;stkvar	_s @ sp[(-9)+-2]
 23343  0179F4  50E1               	movf	fsr1l,w,c
 23344  0179F6  0FF5               	addlw	-11
 23345  0179F8  6ED9               	movwf	fsr2l,c
 23346  0179FA  50E2               	movf	fsr1h,w,c
 23347  0179FC  6EDA               	movwf	fsr2h,c
 23348  0179FE  0EFF               	movlw	255
 23349  017A00  22DA               	addwfc	fsr2h,f,c
 23350  017A02  006F FF7B FFF6     	movff	postinc2,tblptrl
 23351  017A08  006F FF77 FFF7     	movff	postdec2,tblptrh
 23352  017A0E                     	if	0	;tblptru may be non-zero
 23353  017A0E                     	endif
 23354  017A0E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23355  017A0E  0E00               	movlw	low (__mediumconst shr (0+16))
 23356  017A10  6EF8               	movwf	tblptru,c
 23357  017A12                     	endif
 23358  017A12  0008               	tblrd		*
 23359  017A14  50F5               	movf	tablat,w,c
 23360  017A16  6E09               	movwf	(btemp+8)^0,c
 23361  017A18  6A0A               	clrf	(btemp+9)^0,c
 23362  017A1A  500B               	movf	(btemp+10)^0,w,c
 23363  017A1C  2609               	addwf	(btemp+8)^0,f,c
 23364  017A1E  500C               	movf	(btemp+11)^0,w,c
 23365  017A20  220A               	addwfc	(btemp+9)^0,f,c
 23366  017A22  500A               	movf	(btemp+9)^0,w,c
 23367  017A24  E104               	bnz	u8640
 23368  017A26  0E05               	movlw	5
 23369  017A28  5C09               	subwf	(btemp+8)^0,w,c
 23370  017A2A  A0D8               	btfss	status,0,c
 23371  017A2C  D002               	goto	l9544
 23372  017A2E                     u8640:
 23373                           
 23374                           ;stkvar	_atoi$6385 @ sp[(-9)+4]
 23375  017A2E  0EFB               	movlw	-5
 23376  017A30  6AE3               	clrf	plusw1,c
 23377  017A32                     l9544:
 23378                           
 23379                           ;stkvar	_atoi$6385 @ sp[(-9)+4]
 23380  017A32  0EFB               	movlw	-5
 23381  017A34  50E3               	movf	plusw1,w,c
 23382  017A36  6E0B               	movwf	(btemp+10)^0,c
 23383  017A38  6A0C               	clrf	(btemp+11)^0,c
 23384                           
 23385                           ;stkvar	_atoi$6384 @ sp[(-9)+2]
 23386  017A3A  0EF9               	movlw	-7
 23387  017A3C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23388  017A42  0EFA               	movlw	-6
 23389  017A44  0060  F033  FFE3   	movff	btemp+11,plusw1
 23390                           
 23391                           ;stkvar	_atoi$6384 @ sp[(-9)+2]
 23392  017A4A  0EF9               	movlw	-7
 23393  017A4C  006F FF8C  F001    	movff	plusw1,btemp
 23394  017A52  0EFA               	movlw	-6
 23395  017A54  50E3               	movf	plusw1,w,c
 23396  017A56  1001               	iorwf	btemp^0,w,c
 23397  017A58  B4D8               	btfsc	status,2,c
 23398  017A5A  D01F               	goto	l9554
 23399  017A5C  D79F               	goto	l9534
 23400  017A5E                     l9550:
 23401  017A5E  0E01               	movlw	1
 23402  017A60  6E0B               	movwf	(btemp+10)^0,c
 23403  017A62  0E00               	movlw	0
 23404  017A64  6E0C               	movwf	(btemp+11)^0,c
 23405                           
 23406                           ;stkvar	_neg @ sp[(-9)+7]
 23407  017A66  0EFE               	movlw	-2
 23408  017A68  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23409  017A6E  0EFF               	movlw	-1
 23410  017A70  0060  F033  FFE3   	movff	btemp+11,plusw1
 23411  017A76                     l9552:
 23412                           
 23413                           ;stkvar	_s @ sp[(-9)+-2]
 23414  017A76  0EF5               	movlw	-11
 23415  017A78  50E3               	movf	plusw1,w,c
 23416  017A7A  0F01               	addlw	1
 23417  017A7C  6E01               	movwf	btemp^0,c
 23418  017A7E  0EF5               	movlw	-11
 23419  017A80  0060  F007  FFE3   	movff	btemp,plusw1
 23420  017A86  6A01               	clrf	btemp^0,c
 23421  017A88  0EF6               	movlw	-10
 23422  017A8A  50E3               	movf	plusw1,w,c
 23423  017A8C  2001               	addwfc	btemp^0,w,c
 23424  017A8E  6E01               	movwf	btemp^0,c
 23425  017A90  0EF6               	movlw	-10
 23426  017A92  0060  F007  FFE3   	movff	btemp,plusw1
 23427  017A98  D053               	goto	l9560
 23428  017A9A                     l9554:
 23429                           
 23430                           ;stkvar	_s @ sp[(-9)+-2]
 23431  017A9A  50E1               	movf	fsr1l,w,c
 23432  017A9C  0FF5               	addlw	-11
 23433  017A9E  6ED9               	movwf	fsr2l,c
 23434  017AA0  50E2               	movf	fsr1h,w,c
 23435  017AA2  6EDA               	movwf	fsr2h,c
 23436  017AA4  0EFF               	movlw	255
 23437  017AA6  22DA               	addwfc	fsr2h,f,c
 23438  017AA8  006F FF7B FFF6     	movff	postinc2,tblptrl
 23439  017AAE  006F FF77 FFF7     	movff	postdec2,tblptrh
 23440  017AB4                     	if	0	;tblptru may be non-zero
 23441  017AB4                     	endif
 23442  017AB4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23443  017AB4  0E00               	movlw	low (__mediumconst shr (0+16))
 23444  017AB6  6EF8               	movwf	tblptru,c
 23445  017AB8                     	endif
 23446  017AB8  0008               	tblrd		*
 23447  017ABA  50F5               	movf	tablat,w,c
 23448  017ABC  6E0B               	movwf	(btemp+10)^0,c
 23449  017ABE  6A0C               	clrf	(btemp+11)^0,c
 23450                           
 23451                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23452                           ; Switch size 1, requested type "simple"
 23453                           ; Number of cases is 1, Range of values is 0 to 0
 23454                           ; switch strategies available:
 23455                           ; Name         Instructions Cycles
 23456                           ; simple_byte            4     3 (average)
 23457                           ;	Chosen strategy is simple_byte
 23458  017AC0  500C               	movf	(btemp+11)^0,w,c
 23459  017AC2  0A00               	xorlw	0	; case 0
 23460  017AC4  A4D8               	btfss	status,2,c
 23461  017AC6  D03C               	goto	l9560
 23462                           
 23463                           ; Switch size 1, requested type "simple"
 23464                           ; Number of cases is 2, Range of values is 43 to 45
 23465                           ; switch strategies available:
 23466                           ; Name         Instructions Cycles
 23467                           ; simple_byte            7     4 (average)
 23468                           ;	Chosen strategy is simple_byte
 23469  017AC8  500B               	movf	(btemp+10)^0,w,c
 23470  017ACA  0A2B               	xorlw	43	; case 43
 23471  017ACC  B4D8               	btfsc	status,2,c
 23472  017ACE  D7D3               	goto	l9552
 23473  017AD0  0A06               	xorlw	6	; case 45
 23474  017AD2  B4D8               	btfsc	status,2,c
 23475  017AD4  D7C4               	goto	l9550
 23476  017AD6  D034               	goto	l9560
 23477  017AD8                     l9556:
 23478                           
 23479                           ;stkvar	_n @ sp[(-9)+5]
 23480  017AD8  0EFC               	movlw	-4
 23481  017ADA  006F FF8C  F00B    	movff	plusw1,btemp+10
 23482  017AE0  0EFD               	movlw	-3
 23483  017AE2  006F FF8C  F00C    	movff	plusw1,btemp+11
 23484  017AE8  0E0A               	movlw	10
 23485  017AEA  020B               	mulwf	(btemp+10)^0,c
 23486  017AEC  006F FFCC  F009    	movff	prodl,btemp+8
 23487  017AF2  006F FFD0  F00A    	movff	prodh,btemp+9
 23488  017AF8  020C               	mulwf	(btemp+11)^0,c
 23489  017AFA  50F3               	movf	prodl,w,c
 23490  017AFC  260A               	addwf	(btemp+9)^0,f,c
 23491                           
 23492                           ;stkvar	_s @ sp[(-9)+-2]
 23493  017AFE  50E1               	movf	fsr1l,w,c
 23494  017B00  0FF5               	addlw	-11
 23495  017B02  6ED9               	movwf	fsr2l,c
 23496  017B04  50E2               	movf	fsr1h,w,c
 23497  017B06  6EDA               	movwf	fsr2h,c
 23498  017B08  0EFF               	movlw	255
 23499  017B0A  22DA               	addwfc	fsr2h,f,c
 23500  017B0C  006F FF7B FFF6     	movff	postinc2,tblptrl
 23501  017B12  006F FF77 FFF7     	movff	postdec2,tblptrh
 23502  017B18                     	if	0	;tblptru may be non-zero
 23503  017B18                     	endif
 23504  017B18                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23505  017B18  0E00               	movlw	low (__mediumconst shr (0+16))
 23506  017B1A  6EF8               	movwf	tblptru,c
 23507  017B1C                     	endif
 23508  017B1C  0008               	tblrd		*
 23509  017B1E  50F5               	movf	tablat,w,c
 23510  017B20  5E09               	subwf	(btemp+8)^0,f,c
 23511  017B22  0E00               	movlw	0
 23512  017B24  5A0A               	subwfb	(btemp+9)^0,f,c
 23513  017B26  0E30               	movlw	48
 23514  017B28  2609               	addwf	(btemp+8)^0,f,c
 23515  017B2A  0E00               	movlw	0
 23516  017B2C  220A               	addwfc	(btemp+9)^0,f,c
 23517                           
 23518                           ;stkvar	_n @ sp[(-9)+5]
 23519  017B2E  0EFC               	movlw	-4
 23520  017B30  0060  F027  FFE3   	movff	btemp+8,plusw1
 23521  017B36  0EFD               	movlw	-3
 23522  017B38  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23523  017B3E  D79B               	goto	l9552
 23524  017B40                     l9560:
 23525  017B40  0ED0               	movlw	208
 23526  017B42  6E0B               	movwf	(btemp+10)^0,c
 23527  017B44  0EFF               	movlw	255
 23528  017B46  6E0C               	movwf	(btemp+11)^0,c
 23529                           
 23530                           ;stkvar	_s @ sp[(-9)+-2]
 23531  017B48  50E1               	movf	fsr1l,w,c
 23532  017B4A  0FF5               	addlw	-11
 23533  017B4C  6ED9               	movwf	fsr2l,c
 23534  017B4E  50E2               	movf	fsr1h,w,c
 23535  017B50  6EDA               	movwf	fsr2h,c
 23536  017B52  0EFF               	movlw	255
 23537  017B54  22DA               	addwfc	fsr2h,f,c
 23538  017B56  006F FF7B FFF6     	movff	postinc2,tblptrl
 23539  017B5C  006F FF77 FFF7     	movff	postdec2,tblptrh
 23540  017B62                     	if	0	;tblptru may be non-zero
 23541  017B62                     	endif
 23542  017B62                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23543  017B62  0E00               	movlw	low (__mediumconst shr (0+16))
 23544  017B64  6EF8               	movwf	tblptru,c
 23545  017B66                     	endif
 23546  017B66  0008               	tblrd		*
 23547  017B68  50F5               	movf	tablat,w,c
 23548  017B6A  6E09               	movwf	(btemp+8)^0,c
 23549  017B6C  6A0A               	clrf	(btemp+9)^0,c
 23550  017B6E  500B               	movf	(btemp+10)^0,w,c
 23551  017B70  2609               	addwf	(btemp+8)^0,f,c
 23552  017B72  500C               	movf	(btemp+11)^0,w,c
 23553  017B74  220A               	addwfc	(btemp+9)^0,f,c
 23554  017B76  500A               	movf	(btemp+9)^0,w,c
 23555  017B78  E106               	bnz	u8660
 23556  017B7A  0E0A               	movlw	10
 23557  017B7C  5C09               	subwf	(btemp+8)^0,w,c
 23558  017B7E  B0D8               	btfsc	status,0,c
 23559  017B80  D002               	goto	u8660
 23560  017B82  0E01               	movlw	1
 23561  017B84  D001               	goto	u8670
 23562  017B86                     u8660:
 23563  017B86  0E00               	movlw	0
 23564  017B88                     u8670:
 23565  017B88  6E0B               	movwf	(btemp+10)^0,c
 23566  017B8A  6A0C               	clrf	(btemp+11)^0,c
 23567                           
 23568                           ;stkvar	_atoi$6386 @ sp[(-9)+0]
 23569  017B8C  0EF7               	movlw	-9
 23570  017B8E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23571  017B94  0EF8               	movlw	-8
 23572  017B96  0060  F033  FFE3   	movff	btemp+11,plusw1
 23573                           
 23574                           ;stkvar	_atoi$6386 @ sp[(-9)+0]
 23575  017B9C  0EF7               	movlw	-9
 23576  017B9E  006F FF8C  F001    	movff	plusw1,btemp
 23577  017BA4  0EF8               	movlw	-8
 23578  017BA6  50E3               	movf	plusw1,w,c
 23579  017BA8  1001               	iorwf	btemp^0,w,c
 23580  017BAA  A4D8               	btfss	status,2,c
 23581  017BAC  D795               	goto	l9556
 23582                           
 23583                           ;stkvar	_neg @ sp[(-9)+7]
 23584  017BAE  0EFE               	movlw	-2
 23585  017BB0  006F FF8C  F001    	movff	plusw1,btemp
 23586  017BB6  0EFF               	movlw	-1
 23587  017BB8  50E3               	movf	plusw1,w,c
 23588  017BBA  1001               	iorwf	btemp^0,w,c
 23589  017BBC  A4D8               	btfss	status,2,c
 23590  017BBE  D00E               	goto	l9570
 23591                           
 23592                           ;stkvar	_n @ sp[(-9)+5]
 23593  017BC0  0EFC               	movlw	-4
 23594  017BC2  006F FF8C  F001    	movff	plusw1,btemp
 23595  017BC8  1E01               	comf	btemp^0,f,c
 23596  017BCA  0EFD               	movlw	-3
 23597  017BCC  006F FF8C  F002    	movff	plusw1,btemp+1
 23598  017BD2  1E02               	comf	(btemp+1)^0,f,c
 23599  017BD4  2A01               	incf	btemp^0,f,c
 23600  017BD6  B4D8               	btfsc	status,2,c
 23601  017BD8  2A02               	incf	(btemp+1)^0,f,c
 23602  017BDA  D008               	goto	l3223
 23603  017BDC                     l9570:
 23604                           
 23605                           ;stkvar	_n @ sp[(-9)+5]
 23606  017BDC  0EFC               	movlw	-4
 23607  017BDE  006F FF8C  F001    	movff	plusw1,btemp
 23608  017BE4  0EFD               	movlw	-3
 23609  017BE6  006F FF8C  F002    	movff	plusw1,btemp+1
 23610  017BEC                     l3223:
 23611                           
 23612                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 23613  017BEC  0EF5               	movlw	245
 23614  017BEE  26E1               	addwf	fsr1l,f,c
 23615  017BF0  0EFF               	movlw	255
 23616  017BF2  22E2               	addwfc	fsr1h,f,c
 23617  017BF4  0012               	return		;funcret
 23618  017BF6                     __end_of_atoi:
 23619                           	opt callstack 0
 23620                           
 23621 ;; *************** function _isspace *****************
 23622 ;; Defined at:
 23623 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 23624 ;; Parameters:    Size  Location     Type
 23625 ;;  c               2  [STACK] int 
 23626 ;; Auto vars:     Size  Location     Type
 23627 ;;		None
 23628 ;; Return value:  Size  Location     Type
 23629 ;;                  2  [STACK] int 
 23630 ;; Registers used:
 23631 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 23632 ;; Tracked objects:
 23633 ;;		On entry : 0/0
 23634 ;;		On exit  : 0/0
 23635 ;;		Unchanged: 0/0
 23636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23641 ;;Total ram usage:        0 bytes
 23642 ;; Hardware stack levels used:    1
 23643 ;; Hardware stack levels required when called:   15
 23644 ;; This function calls:
 23645 ;;		Nothing
 23646 ;; This function is called by:
 23647 ;;		_atoi
 23648 ;; This function uses a reentrant model
 23649 ;;
 23650                           
 23651                           	psect	text85
 23652  01B7AC                     __ptext85:
 23653                           	opt callstack 0
 23654  01B7AC                     _isspace:
 23655                           	opt callstack 0
 23656                           
 23657                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23658  01B7AC  52E6               	movf	postinc1,f,c
 23659                           
 23660                           ;stkvar	_isspace$6435 @ sp[(-1)+0]
 23661                           
 23662                           ;incstack = 0
 23663 ;; hardware stack exceeded
 23664  01B7AE  0EFF               	movlw	-1
 23665  01B7B0  6AE3               	clrf	plusw1,c
 23666  01B7B2  2AE3               	incf	plusw1,f,c
 23667                           
 23668                           ;stkvar	_c @ sp[(-1)+-2]
 23669  01B7B4  0EFD               	movlw	-3
 23670  01B7B6  006F FF8C  F001    	movff	plusw1,btemp
 23671  01B7BC  0E20               	movlw	32
 23672  01B7BE  1801               	xorwf	btemp^0,w,c
 23673  01B7C0  E104               	bnz	u7530
 23674  01B7C2  0EFE               	movlw	-2
 23675  01B7C4  50E3               	movf	plusw1,w,c
 23676  01B7C6  B4D8               	btfsc	status,2,c
 23677  01B7C8  D012               	goto	l8954
 23678  01B7CA                     u7530:
 23679                           
 23680                           ;stkvar	_c @ sp[(-1)+-2]
 23681  01B7CA  0EFD               	movlw	-3
 23682  01B7CC  50E3               	movf	plusw1,w,c
 23683  01B7CE  0FF7               	addlw	247
 23684  01B7D0  6E0B               	movwf	(btemp+10)^0,c
 23685  01B7D2  0EFE               	movlw	-2
 23686  01B7D4  006F FF8C  F00C    	movff	plusw1,btemp+11
 23687  01B7DA  0EFF               	movlw	255
 23688  01B7DC  220C               	addwfc	(btemp+11)^0,f,c
 23689  01B7DE  500C               	movf	(btemp+11)^0,w,c
 23690  01B7E0  E104               	bnz	u7540
 23691  01B7E2  0E05               	movlw	5
 23692  01B7E4  5C0B               	subwf	(btemp+10)^0,w,c
 23693  01B7E6  A0D8               	btfss	status,0,c
 23694  01B7E8  D002               	goto	l8954
 23695  01B7EA                     u7540:
 23696                           
 23697                           ;stkvar	_isspace$6435 @ sp[(-1)+0]
 23698  01B7EA  0EFF               	movlw	-1
 23699  01B7EC  6AE3               	clrf	plusw1,c
 23700  01B7EE                     l8954:
 23701                           
 23702                           ;stkvar	_isspace$6435 @ sp[(-1)+0]
 23703  01B7EE  0EFF               	movlw	-1
 23704  01B7F0  50E3               	movf	plusw1,w,c
 23705  01B7F2  6E01               	movwf	btemp^0,c
 23706  01B7F4  6A02               	clrf	(btemp+1)^0,c
 23707                           
 23708                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 23709  01B7F6  52E5               	movf	postdec1,f,c
 23710  01B7F8  52E5               	movf	postdec1,f,c
 23711  01B7FA  52E5               	movf	postdec1,f,c
 23712  01B7FC  0012               	return		;funcret
 23713  01B7FE                     __end_of_isspace:
 23714                           	opt callstack 0
 23715                           
 23716 ;; *************** function _isdigit *****************
 23717 ;; Defined at:
 23718 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 23719 ;; Parameters:    Size  Location     Type
 23720 ;;  c               2  [STACK] int 
 23721 ;; Auto vars:     Size  Location     Type
 23722 ;;		None
 23723 ;; Return value:  Size  Location     Type
 23724 ;;                  2  [STACK] int 
 23725 ;; Registers used:
 23726 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 23727 ;; Tracked objects:
 23728 ;;		On entry : 0/0
 23729 ;;		On exit  : 0/0
 23730 ;;		Unchanged: 0/0
 23731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23736 ;;Total ram usage:        0 bytes
 23737 ;; Hardware stack levels used:    1
 23738 ;; Hardware stack levels required when called:   15
 23739 ;; This function calls:
 23740 ;;		Nothing
 23741 ;; This function is called by:
 23742 ;;		_vfpfcnvrt
 23743 ;;		_atoi
 23744 ;; This function uses a reentrant model
 23745 ;;
 23746                           
 23747                           	psect	text86
 23748  01BF58                     __ptext86:
 23749                           	opt callstack 0
 23750  01BF58                     _isdigit:
 23751                           	opt callstack 0
 23752                           
 23753                           ;stkvar	_c @ sp[(0)+-2]
 23754                           
 23755                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23756                           ;incstack = 0
 23757 ;; hardware stack exceeded
 23758  01BF58  0EFE               	movlw	-2
 23759  01BF5A  50E3               	movf	plusw1,w,c
 23760  01BF5C  0FD0               	addlw	208
 23761  01BF5E  6E0B               	movwf	(btemp+10)^0,c
 23762  01BF60  0EFF               	movlw	-1
 23763  01BF62  006F FF8C  F00C    	movff	plusw1,btemp+11
 23764  01BF68  0EFF               	movlw	255
 23765  01BF6A  220C               	addwfc	(btemp+11)^0,f,c
 23766  01BF6C  500C               	movf	(btemp+11)^0,w,c
 23767  01BF6E  E106               	bnz	u6380
 23768  01BF70  0E0A               	movlw	10
 23769  01BF72  5C0B               	subwf	(btemp+10)^0,w,c
 23770  01BF74  B0D8               	btfsc	status,0,c
 23771  01BF76  D002               	goto	u6380
 23772  01BF78  0E01               	movlw	1
 23773  01BF7A  D001               	goto	u6390
 23774  01BF7C                     u6380:
 23775  01BF7C  0E00               	movlw	0
 23776  01BF7E                     u6390:
 23777  01BF7E  6E01               	movwf	btemp^0,c
 23778  01BF80  6A02               	clrf	(btemp+1)^0,c
 23779                           
 23780                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 23781  01BF82  52E5               	movf	postdec1,f,c
 23782  01BF84  52E5               	movf	postdec1,f,c
 23783  01BF86  0012               	return		;funcret
 23784  01BF88                     __end_of_isdigit:
 23785                           	opt callstack 0
 23786                           
 23787 ;; *************** function _set_vterm *****************
 23788 ;; Defined at:
 23789 ;;		line 107 in file "mconfig.c"
 23790 ;; Parameters:    Size  Location     Type
 23791 ;;  vterm           1  [STACK] const unsigned char 
 23792 ;; Auto vars:     Size  Location     Type
 23793 ;;		None
 23794 ;; Return value:  Size  Location     Type
 23795 ;;                  1  [STACK] unsigned char 
 23796 ;; Registers used:
 23797 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 23798 ;; Tracked objects:
 23799 ;;		On entry : 0/1
 23800 ;;		On exit  : 0/0
 23801 ;;		Unchanged: 0/0
 23802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23807 ;;Total ram usage:        0 bytes
 23808 ;; Hardware stack levels used:    1
 23809 ;; Hardware stack levels required when called:   15
 23810 ;; This function calls:
 23811 ;;		Nothing
 23812 ;; This function is called by:
 23813 ;;		_main
 23814 ;;		_check_help
 23815 ;; This function uses a reentrant model
 23816 ;;
 23817                           
 23818                           	psect	text87
 23819  01C47A                     __ptext87:
 23820                           	opt callstack 0
 23821  01C47A                     _set_vterm:
 23822                           	opt callstack 15
 23823                           
 23824                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 23825                           ;stkvar	_vterm @ sp[(0)+-1]
 23826                           
 23827                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23828                           ;incstack = 0
 23829  01C47A  0EFF               	movlw	-1
 23830  01C47C  006F FF8C  F00C    	movff	plusw1,btemp+11
 23831  01C482  0E03               	movlw	3
 23832  01C484  160C               	andwf	(btemp+11)^0,f,c
 23833  01C486  EE22  F20A         	lfsr	2,_D+480
 23834  01C48A  50DF               	movf	223,w,c
 23835  01C48C  180C               	xorwf	(btemp+11)^0,w,c
 23836  01C48E  0BFE               	andlw	-2
 23837  01C490  180C               	xorwf	(btemp+11)^0,w,c
 23838  01C492  6EDF               	movwf	223,c
 23839                           
 23840                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 23841  01C494  52E5               	movf	postdec1,f,c
 23842  01C496  0012               	return		;funcret
 23843  01C498                     __end_of_set_vterm:
 23844                           	opt callstack 0
 23845                           
 23846 ;; *************** function _set_temp_display_help *****************
 23847 ;; Defined at:
 23848 ;;		line 211 in file "mconfig.c"
 23849 ;; Parameters:    Size  Location     Type
 23850 ;;  new_response    1  [STACK] const enum E16509
 23851 ;; Auto vars:     Size  Location     Type
 23852 ;;		None
 23853 ;; Return value:  Size  Location     Type
 23854 ;;                  1  [STACK] enum E16509
 23855 ;; Registers used:
 23856 ;;		wreg, fsr1l, fsr1h
 23857 ;; Tracked objects:
 23858 ;;		On entry : 0/1
 23859 ;;		On exit  : 3F/1
 23860 ;;		Unchanged: 0/0
 23861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23866 ;;Total ram usage:        0 bytes
 23867 ;; Hardware stack levels used:    1
 23868 ;; Hardware stack levels required when called:   15
 23869 ;; This function calls:
 23870 ;;		Nothing
 23871 ;; This function is called by:
 23872 ;;		_check_help
 23873 ;; This function uses a reentrant model
 23874 ;;
 23875                           
 23876                           	psect	text88
 23877  01C5C2                     __ptext88:
 23878                           	opt callstack 0
 23879  01C5C2                     _set_temp_display_help:
 23880                           	opt callstack 14
 23881                           
 23882                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 23883                           
 23884                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23885                           ;incstack = 0
 23886  01C5C2  0101               	movlb	1	; () banked
 23887  01C5C4  51AC               	movf	(_V+165)& (0+255),w,b	;volatile
 23888                           
 23889                           ; BSR set to: 1
 23890                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 23891                           ;stkvar	_new_response_info @ sp[(0)+-1]
 23892  01C5C6  0EFF               	movlw	-1
 23893  01C5C8  006F FF8C  F1AC    	movff	plusw1,_V+165	;volatile
 23894                           
 23895                           ; BSR set to: 1
 23896                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 23897  01C5CE  52E5               	movf	postdec1,f,c
 23898  01C5D0  0012               	return		;funcret
 23899  01C5D2                     __end_of_set_temp_display_help:
 23900                           	opt callstack 0
 23901                           
 23902 ;; *************** function _set_display_info *****************
 23903 ;; Defined at:
 23904 ;;		line 200 in file "mconfig.c"
 23905 ;; Parameters:    Size  Location     Type
 23906 ;;  new_response    1  [STACK] const enum E16509
 23907 ;; Auto vars:     Size  Location     Type
 23908 ;;		None
 23909 ;; Return value:  Size  Location     Type
 23910 ;;                  1  [STACK] enum E16994
 23911 ;; Registers used:
 23912 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 23913 ;; Tracked objects:
 23914 ;;		On entry : 0/1
 23915 ;;		On exit  : 0/0
 23916 ;;		Unchanged: 0/0
 23917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23922 ;;Total ram usage:        0 bytes
 23923 ;; Hardware stack levels used:    1
 23924 ;; Hardware stack levels required when called:   16
 23925 ;; This function calls:
 23926 ;;		_TimerDone
 23927 ;; This function is called by:
 23928 ;;		_main
 23929 ;;		_check_help
 23930 ;; This function uses a reentrant model
 23931 ;;
 23932                           
 23933                           	psect	text89
 23934  01C498                     __ptext89:
 23935                           	opt callstack 0
 23936  01C498                     _set_display_info:
 23937                           	opt callstack 14
 23938                           
 23939                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 23940                           
 23941                           ; BSR set to: 1
 23942                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23943                           ;incstack = 0
 23944  01C498  0E07               	movlw	7
 23945  01C49A  6EE6               	movwf	postinc1,c
 23946  01C49C  EC47  F0E0         	call	_TimerDone	;wreg free
 23947  01C4A0  5001               	movf	btemp^0,w,c
 23948  01C4A2  B4D8               	btfsc	status,2,c
 23949  01C4A4  D006               	goto	l1732
 23950                           
 23951                           ;mconfig.c: 205:   old_info = V.response.info;
 23952  01C4A6  0101               	movlb	1	; () banked
 23953  01C4A8  51AB               	movf	(_V+164)& (0+255),w,b	;volatile
 23954                           
 23955                           ; BSR set to: 1
 23956                           ;mconfig.c: 206:   V.response.info = new_response_info;
 23957                           ;stkvar	_new_response_info @ sp[(0)+-1]
 23958  01C4AA  0EFF               	movlw	-1
 23959  01C4AC  006F FF8C  F1AB    	movff	plusw1,_V+164	;volatile
 23960  01C4B2                     l1732:
 23961                           
 23962                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 23963  01C4B2  52E5               	movf	postdec1,f,c
 23964  01C4B4  0012               	return		;funcret
 23965  01C4B6                     __end_of_set_display_info:
 23966                           	opt callstack 0
 23967                           
 23968 ;; *************** function _mode_lamp_dim *****************
 23969 ;; Defined at:
 23970 ;;		line 13 in file "mconfig.c"
 23971 ;; Parameters:    Size  Location     Type
 23972 ;;  level           2  [STACK] const unsigned short 
 23973 ;; Auto vars:     Size  Location     Type
 23974 ;;		None
 23975 ;; Return value:  Size  Location     Type
 23976 ;;                  1  [STACK] void 
 23977 ;; Registers used:
 23978 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23979 ;; Tracked objects:
 23980 ;;		On entry : 0/1
 23981 ;;		On exit  : 0/0
 23982 ;;		Unchanged: 0/0
 23983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23988 ;;Total ram usage:        0 bytes
 23989 ;; Hardware stack levels used:    1
 23990 ;; Hardware stack levels required when called:   16
 23991 ;; This function calls:
 23992 ;;		_PWM8_LoadDutyValue
 23993 ;; This function is called by:
 23994 ;;		_main
 23995 ;;		_check_help
 23996 ;; This function uses a reentrant model
 23997 ;;
 23998                           
 23999                           	psect	text90
 24000  01C50A                     __ptext90:
 24001                           	opt callstack 0
 24002  01C50A                     _mode_lamp_dim:
 24003                           	opt callstack 14
 24004                           
 24005                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 24006                           ;stkvar	_level @ sp[(0)+-2]
 24007                           
 24008                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24009                           ;incstack = 0
 24010  01C50A  0EFE               	movlw	-2
 24011  01C50C  006F FF8F FFE6     	movff	plusw1,postinc1
 24012  01C512  006F FF8F FFE6     	movff	plusw1,postinc1
 24013  01C518  EC91  F0DD         	call	_PWM8_LoadDutyValue	;wreg free
 24014                           
 24015                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 24016  01C51C  52E5               	movf	postdec1,f,c
 24017  01C51E  52E5               	movf	postdec1,f,c
 24018  01C520  0012               	return		;funcret
 24019  01C522                     __end_of_mode_lamp_dim:
 24020                           	opt callstack 0
 24021                           
 24022 ;; *************** function _mode_lamp_bright *****************
 24023 ;; Defined at:
 24024 ;;		line 18 in file "mconfig.c"
 24025 ;; Parameters:    Size  Location     Type
 24026 ;;		None
 24027 ;; Auto vars:     Size  Location     Type
 24028 ;;		None
 24029 ;; Return value:  Size  Location     Type
 24030 ;;                  1  [STACK] void 
 24031 ;; Registers used:
 24032 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 24033 ;; Tracked objects:
 24034 ;;		On entry : 0/0
 24035 ;;		On exit  : 0/0
 24036 ;;		Unchanged: 0/0
 24037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24042 ;;Total ram usage:        0 bytes
 24043 ;; Hardware stack levels used:    1
 24044 ;; Hardware stack levels required when called:   16
 24045 ;; This function calls:
 24046 ;;		_PWM8_LoadDutyValue
 24047 ;; This function is called by:
 24048 ;;		_check_help
 24049 ;; This function uses a reentrant model
 24050 ;;
 24051                           
 24052                           	psect	text91
 24053  01C5F0                     __ptext91:
 24054                           	opt callstack 0
 24055  01C5F0                     _mode_lamp_bright:
 24056                           	opt callstack 13
 24057                           
 24058                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 24059                           
 24060                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24061                           ;incstack = 0
 24062  01C5F0  0E2C               	movlw	44
 24063  01C5F2  6EE6               	movwf	postinc1,c
 24064  01C5F4  0E01               	movlw	1
 24065  01C5F6  6EE6               	movwf	postinc1,c
 24066  01C5F8  EC91  F0DD         	call	_PWM8_LoadDutyValue	;wreg free
 24067                           
 24068                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 24069  01C5FC  0012               	return		;funcret
 24070  01C5FE                     __end_of_mode_lamp_bright:
 24071                           	opt callstack 0
 24072                           
 24073 ;; *************** function _PWM8_LoadDutyValue *****************
 24074 ;; Defined at:
 24075 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 24076 ;; Parameters:    Size  Location     Type
 24077 ;;  dutyValue       2  [STACK] unsigned short 
 24078 ;; Auto vars:     Size  Location     Type
 24079 ;;		None
 24080 ;; Return value:  Size  Location     Type
 24081 ;;                  1  [STACK] void 
 24082 ;; Registers used:
 24083 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 24084 ;; Tracked objects:
 24085 ;;		On entry : 0/1
 24086 ;;		On exit  : 0/0
 24087 ;;		Unchanged: 0/0
 24088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24093 ;;Total ram usage:        0 bytes
 24094 ;; Hardware stack levels used:    1
 24095 ;; Hardware stack levels required when called:   15
 24096 ;; This function calls:
 24097 ;;		Nothing
 24098 ;; This function is called by:
 24099 ;;		_mode_lamp_dim
 24100 ;;		_mode_lamp_bright
 24101 ;; This function uses a reentrant model
 24102 ;;
 24103                           
 24104                           	psect	text92
 24105  01BB22                     __ptext92:
 24106                           	opt callstack 0
 24107  01BB22                     _PWM8_LoadDutyValue:
 24108                           	opt callstack 14
 24109                           
 24110                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 24111                           ;stkvar	_dutyValue @ sp[(0)+-2]
 24112                           
 24113                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24114                           ;incstack = 0
 24115  01BB22  0EFE               	movlw	-2
 24116  01BB24  006F FF8C  F00B    	movff	plusw1,btemp+10
 24117  01BB2A  0EFF               	movlw	-1
 24118  01BB2C  006F FF8C  F00C    	movff	plusw1,btemp+11
 24119  01BB32  90D8               	bcf	status,0,c
 24120  01BB34  320C               	rrcf	(btemp+11)^0,f,c
 24121  01BB36  320B               	rrcf	(btemp+10)^0,f,c
 24122  01BB38  90D8               	bcf	status,0,c
 24123  01BB3A  320C               	rrcf	(btemp+11)^0,f,c
 24124  01BB3C  320B               	rrcf	(btemp+10)^0,f,c
 24125  01BB3E  500B               	movf	(btemp+10)^0,w,c
 24126  01BB40  6E61               	movwf	97,c	;volatile
 24127                           
 24128                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 24129                           ;stkvar	_dutyValue @ sp[(0)+-2]
 24130  01BB42  0EFE               	movlw	-2
 24131  01BB44  006F FF8C  F00C    	movff	plusw1,btemp+11
 24132  01BB4A  0E03               	movlw	3
 24133  01BB4C  160C               	andwf	(btemp+11)^0,f,c
 24134  01BB4E  0E06               	movlw	6
 24135  01BB50  6E01               	movwf	btemp^0,c
 24136  01BB52                     u9485:
 24137  01BB52  90D8               	bcf	status,0,c
 24138  01BB54  360C               	rlcf	(btemp+11)^0,f,c
 24139  01BB56  2E01               	decfsz	btemp^0,f,c
 24140  01BB58  D7FC               	goto	u9485
 24141  01BB5A  500C               	movf	(btemp+11)^0,w,c
 24142  01BB5C  6E60               	movwf	96,c	;volatile
 24143                           
 24144                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 24145  01BB5E  52E5               	movf	postdec1,f,c
 24146  01BB60  52E5               	movf	postdec1,f,c
 24147  01BB62  0012               	return		;funcret
 24148  01BB64                     __end_of_PWM8_LoadDutyValue:
 24149                           	opt callstack 0
 24150                           
 24151 ;; *************** function _help_button *****************
 24152 ;; Defined at:
 24153 ;;		line 26 in file "mconfig.c"
 24154 ;; Parameters:    Size  Location     Type
 24155 ;;		None
 24156 ;; Auto vars:     Size  Location     Type
 24157 ;;		None
 24158 ;; Return value:  Size  Location     Type
 24159 ;;                  1  [STACK] _Bool 
 24160 ;; Registers used:
 24161 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24162 ;; Tracked objects:
 24163 ;;		On entry : 0/1
 24164 ;;		On exit  : 0/0
 24165 ;;		Unchanged: 0/0
 24166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24171 ;;Total ram usage:        0 bytes
 24172 ;; Hardware stack levels used:    1
 24173 ;; Hardware stack levels required when called:   16
 24174 ;; This function calls:
 24175 ;;		_StartTimer
 24176 ;;		_TimerDone
 24177 ;; This function is called by:
 24178 ;;		_check_help
 24179 ;; This function uses a reentrant model
 24180 ;;
 24181                           
 24182                           	psect	text93
 24183  01BD1C                     __ptext93:
 24184                           	opt callstack 0
 24185  01BD1C                     _help_button:
 24186                           	opt callstack 13
 24187                           
 24188                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 24189                           
 24190                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24191                           ;incstack = 0
 24192  01BD1C  B0CB               	btfsc	203,0,c	;volatile
 24193  01BD1E  D00C               	goto	l1675
 24194                           
 24195                           ;mconfig.c: 29:   V.help = 1;
 24196  01BD20  0101               	movlb	1	; () banked
 24197  01BD22  85A2               	bsf	(_V+155)& (0+255),2,b	;volatile
 24198                           
 24199                           ; BSR set to: 1
 24200                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 24201  01BD24  0E08               	movlw	8
 24202  01BD26  6EE6               	movwf	postinc1,c
 24203  01BD28  EC47  F0E0         	call	_TimerDone	;wreg free
 24204  01BD2C  5001               	movf	btemp^0,w,c
 24205  01BD2E  B4D8               	btfsc	status,2,c
 24206  01BD30  D003               	goto	l1675
 24207                           
 24208                           ;mconfig.c: 31:    return 1;
 24209  01BD32  0E01               	movlw	1
 24210  01BD34  6E01               	movwf	btemp^0,c
 24211  01BD36  0012               	return	
 24212  01BD38                     l1675:
 24213                           
 24214                           ;mconfig.c: 34:  if (!V.help)
 24215  01BD38  0101               	movlb	1	; () banked
 24216  01BD3A  B5A2               	btfsc	(_V+155)& (0+255),2,b	;volatile
 24217  01BD3C  D008               	goto	l10682
 24218                           
 24219                           ; BSR set to: 1
 24220                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 24221  01BD3E  0E2C               	movlw	44
 24222  01BD40  6EE6               	movwf	postinc1,c
 24223  01BD42  0E01               	movlw	1
 24224  01BD44  6EE6               	movwf	postinc1,c
 24225  01BD46  0E08               	movlw	8
 24226  01BD48  6EE6               	movwf	postinc1,c
 24227  01BD4A  ECF2  F0DD         	call	_StartTimer	;wreg free
 24228  01BD4E                     l10682:
 24229                           
 24230                           ;mconfig.c: 37:  return 0;
 24231  01BD4E  0E00               	movlw	0
 24232  01BD50  6E01               	movwf	btemp^0,c
 24233                           
 24234                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 24235  01BD52  0012               	return		;funcret
 24236  01BD54                     __end_of_help_button:
 24237                           	opt callstack 0
 24238                           
 24239 ;; *************** function _TimerDone *****************
 24240 ;; Defined at:
 24241 ;;		line 20 in file "timers.c"
 24242 ;; Parameters:    Size  Location     Type
 24243 ;;  timer           1  [STACK] const unsigned char 
 24244 ;; Auto vars:     Size  Location     Type
 24245 ;;		None
 24246 ;; Return value:  Size  Location     Type
 24247 ;;                  1  [STACK] _Bool 
 24248 ;; Registers used:
 24249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 24250 ;; Tracked objects:
 24251 ;;		On entry : 0/1
 24252 ;;		On exit  : 0/0
 24253 ;;		Unchanged: 0/0
 24254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24259 ;;Total ram usage:        0 bytes
 24260 ;; Hardware stack levels used:    1
 24261 ;; Hardware stack levels required when called:   15
 24262 ;; This function calls:
 24263 ;;		Nothing
 24264 ;; This function is called by:
 24265 ;;		_main
 24266 ;;		_WaitMs
 24267 ;;		_help_button
 24268 ;;		_check_help
 24269 ;;		_set_display_info
 24270 ;;		_update_adc_result
 24271 ;;		_esr_check
 24272 ;; This function uses a reentrant model
 24273 ;;
 24274                           
 24275                           	psect	text94
 24276  01C08E                     __ptext94:
 24277                           	opt callstack 0
 24278  01C08E                     _TimerDone:
 24279                           	opt callstack 14
 24280                           
 24281                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24282                           ;incstack = 0
 24283  01C08E  0004               	clrwdt		;# 
 24284                           
 24285                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 24286                           ;stkvar	_timer @ sp[(0)+-1]
 24287  01C090  0EFF               	movlw	-1
 24288  01C092  50E3               	movf	plusw1,w,c
 24289  01C094  0D02               	mullw	2
 24290  01C096  0E7D               	movlw	low _tickCount
 24291  01C098  24F3               	addwf	243,w,c
 24292  01C09A  6ED9               	movwf	fsr2l,c
 24293  01C09C  0E02               	movlw	high _tickCount
 24294  01C09E  20F4               	addwfc	prodh,w,c
 24295  01C0A0  6EDA               	movwf	fsr2h,c
 24296  01C0A2  50DE               	movf	postinc2,w,c
 24297  01C0A4  10DE               	iorwf	postinc2,w,c
 24298  01C0A6  A4D8               	btfss	status,2,c
 24299  01C0A8  D002               	goto	l9968
 24300                           
 24301                           ;timers.c: 24:   return 1;
 24302  01C0AA  0E01               	movlw	1
 24303  01C0AC  D001               	goto	L28
 24304  01C0AE                     l9968:
 24305                           
 24306                           ;timers.c: 26:  return 0;
 24307  01C0AE  0E00               	movlw	0
 24308  01C0B0                     L28:
 24309  01C0B0  6E01               	movwf	btemp^0,c
 24310                           
 24311                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 24312  01C0B2  52E5               	movf	postdec1,f,c
 24313  01C0B4  0012               	return		;funcret
 24314  01C0B6                     __end_of_TimerDone:
 24315                           	opt callstack 0
 24316                           
 24317 ;; *************** function _StartTimer *****************
 24318 ;; Defined at:
 24319 ;;		line 12 in file "timers.c"
 24320 ;; Parameters:    Size  Location     Type
 24321 ;;  timer           1  [STACK] const unsigned char 
 24322 ;;  count           2  [STACK] const unsigned short 
 24323 ;; Auto vars:     Size  Location     Type
 24324 ;;		None
 24325 ;; Return value:  Size  Location     Type
 24326 ;;                  1  [STACK] void 
 24327 ;; Registers used:
 24328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24329 ;; Tracked objects:
 24330 ;;		On entry : 0/0
 24331 ;;		On exit  : 0/0
 24332 ;;		Unchanged: 0/0
 24333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24338 ;;Total ram usage:        0 bytes
 24339 ;; Hardware stack levels used:    1
 24340 ;; Hardware stack levels required when called:   15
 24341 ;; This function calls:
 24342 ;;		Nothing
 24343 ;; This function is called by:
 24344 ;;		_main
 24345 ;;		_WaitMs
 24346 ;;		_help_button
 24347 ;;		_check_help
 24348 ;;		_update_adc_result
 24349 ;;		_calc_bsoc
 24350 ;;		_esr_check
 24351 ;; This function uses a reentrant model
 24352 ;;
 24353                           
 24354                           	psect	text95
 24355  01BBE4                     __ptext95:
 24356                           	opt callstack 0
 24357  01BBE4                     _StartTimer:
 24358                           	opt callstack 0
 24359                           
 24360                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 24361                           ;stkvar	_count @ sp[(0)+-3]
 24362                           
 24363                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24364                           ;incstack = 0
 24365 ;; hardware stack exceeded
 24366  01BBE4  0EFD               	movlw	-3
 24367  01BBE6  006F FF8C  F00B    	movff	plusw1,btemp+10
 24368  01BBEC  0EFE               	movlw	-2
 24369  01BBEE  006F FF8C  F00C    	movff	plusw1,btemp+11
 24370  01BBF4  90D8               	bcf	status,0,c
 24371  01BBF6  340B               	rlcf	(btemp+10)^0,w,c
 24372  01BBF8  6E09               	movwf	(btemp+8)^0,c
 24373  01BBFA  340C               	rlcf	(btemp+11)^0,w,c
 24374  01BBFC  6E0A               	movwf	(btemp+9)^0,c
 24375                           
 24376                           ;stkvar	_timer @ sp[(0)+-1]
 24377  01BBFE  0EFF               	movlw	-1
 24378  01BC00  50E3               	movf	plusw1,w,c
 24379  01BC02  0D02               	mullw	2
 24380  01BC04  0E7D               	movlw	low _tickCount
 24381  01BC06  24F3               	addwf	243,w,c
 24382  01BC08  6ED9               	movwf	fsr2l,c
 24383  01BC0A  0E02               	movlw	high _tickCount
 24384  01BC0C  20F4               	addwfc	prodh,w,c
 24385  01BC0E  6EDA               	movwf	fsr2h,c
 24386  01BC10  0060  F027  FFDE   	movff	btemp+8,postinc2
 24387  01BC16  0060  F02B  FFDD   	movff	btemp+9,postdec2
 24388                           
 24389                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 24390  01BC1C  52E5               	movf	postdec1,f,c
 24391  01BC1E  52E5               	movf	postdec1,f,c
 24392  01BC20  52E5               	movf	postdec1,f,c
 24393  01BC22  0012               	return		;funcret
 24394  01BC24                     __end_of_StartTimer:
 24395                           	opt callstack 0
 24396                           
 24397 ;; *************** function _display_info *****************
 24398 ;; Defined at:
 24399 ;;		line 190 in file "mconfig.c"
 24400 ;; Parameters:    Size  Location     Type
 24401 ;;		None
 24402 ;; Auto vars:     Size  Location     Type
 24403 ;;		None
 24404 ;; Return value:  Size  Location     Type
 24405 ;;                  1  [STACK] enum E16509
 24406 ;; Registers used:
 24407 ;;		btemp
 24408 ;; Tracked objects:
 24409 ;;		On entry : 0/1
 24410 ;;		On exit  : 0/0
 24411 ;;		Unchanged: 0/0
 24412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24417 ;;Total ram usage:        0 bytes
 24418 ;; Hardware stack levels used:    1
 24419 ;; Hardware stack levels required when called:   15
 24420 ;; This function calls:
 24421 ;;		Nothing
 24422 ;; This function is called by:
 24423 ;;		_check_help
 24424 ;; This function uses a reentrant model
 24425 ;;
 24426                           
 24427                           	psect	text96
 24428  01C672                     __ptext96:
 24429                           	opt callstack 0
 24430  01C672                     _display_info:
 24431                           	opt callstack 14
 24432                           
 24433                           ;mconfig.c: 192:  return V.response.info;
 24434                           
 24435                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24436                           ;incstack = 0
 24437  01C672  0060  F6AC  F001   	movff	_V+164,btemp	;volatile
 24438                           
 24439                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 24440  01C678  0012               	return		;funcret
 24441  01C67A                     __end_of_display_info:
 24442                           	opt callstack 0
 24443                           
 24444 ;; *************** function _display_help *****************
 24445 ;; Defined at:
 24446 ;;		line 195 in file "mconfig.c"
 24447 ;; Parameters:    Size  Location     Type
 24448 ;;		None
 24449 ;; Auto vars:     Size  Location     Type
 24450 ;;		None
 24451 ;; Return value:  Size  Location     Type
 24452 ;;                  1  [STACK] enum E16509
 24453 ;; Registers used:
 24454 ;;		btemp
 24455 ;; Tracked objects:
 24456 ;;		On entry : 3F/1
 24457 ;;		On exit  : 0/0
 24458 ;;		Unchanged: 0/0
 24459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24464 ;;Total ram usage:        0 bytes
 24465 ;; Hardware stack levels used:    1
 24466 ;; Hardware stack levels required when called:   15
 24467 ;; This function calls:
 24468 ;;		Nothing
 24469 ;; This function is called by:
 24470 ;;		_check_help
 24471 ;; This function uses a reentrant model
 24472 ;;
 24473                           
 24474                           	psect	text97
 24475  01C67A                     __ptext97:
 24476                           	opt callstack 0
 24477  01C67A                     _display_help:
 24478                           	opt callstack 14
 24479                           
 24480                           ;mconfig.c: 197:  return V.response.help_temp;
 24481                           
 24482                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24483                           ;incstack = 0
 24484  01C67A  0060  F6B0  F001   	movff	_V+165,btemp	;volatile
 24485                           
 24486                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 24487  01C680  0012               	return		;funcret
 24488  01C682                     __end_of_display_help:
 24489                           	opt callstack 0
 24490                           
 24491 ;; *************** function _check_enter_button *****************
 24492 ;; Defined at:
 24493 ;;		line 49 in file "hid.c"
 24494 ;; Parameters:    Size  Location     Type
 24495 ;;  h               2  [STACK] PTR struct H_data
 24496 ;;		 -> H(9), 
 24497 ;; Auto vars:     Size  Location     Type
 24498 ;;		None
 24499 ;; Return value:  Size  Location     Type
 24500 ;;                  1  [STACK] _Bool 
 24501 ;; Registers used:
 24502 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 24503 ;; Tracked objects:
 24504 ;;		On entry : 0/0
 24505 ;;		On exit  : 0/0
 24506 ;;		Unchanged: 0/0
 24507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24512 ;;Total ram usage:        0 bytes
 24513 ;; Hardware stack levels used:    1
 24514 ;; Hardware stack levels required when called:   15
 24515 ;; This function calls:
 24516 ;;		Nothing
 24517 ;; This function is called by:
 24518 ;;		_main
 24519 ;; This function uses a reentrant model
 24520 ;;
 24521                           
 24522                           	psect	text98
 24523  01B29A                     __ptext98:
 24524                           	opt callstack 0
 24525  01B29A                     _check_enter_button:
 24526                           	opt callstack 15
 24527                           
 24528                           ;hid.c: 49: _Bool check_enter_button(H_data* h);hid.c: 50: {;hid.c: 51:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 24529                           ;stkvar	_h @ sp[(0)+-2]
 24530                           
 24531                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24532                           ;incstack = 0
 24533  01B29A  0EFE               	movlw	-2
 24534  01B29C  006F FF8C  F00B    	movff	plusw1,btemp+10
 24535  01B2A2  0EFF               	movlw	-1
 24536  01B2A4  006F FF8C  F00C    	movff	plusw1,btemp+11
 24537  01B2AA  0E04               	movlw	4
 24538  01B2AC  240B               	addwf	(btemp+10)^0,w,c
 24539  01B2AE  6ED9               	movwf	fsr2l,c
 24540  01B2B0  0E00               	movlw	0
 24541  01B2B2  200C               	addwfc	(btemp+11)^0,w,c
 24542  01B2B4  6EDA               	movwf	fsr2h,c
 24543  01B2B6  50DF               	movf	indf2,w,c
 24544  01B2B8  A4D8               	btfss	status,2,c
 24545  01B2BA  D023               	goto	l13358
 24546                           
 24547                           ;stkvar	_h @ sp[(0)+-2]
 24548  01B2BC  0EFE               	movlw	-2
 24549  01B2BE  006F FF8C  F00B    	movff	plusw1,btemp+10
 24550  01B2C4  0EFF               	movlw	-1
 24551  01B2C6  006F FF8C  F00C    	movff	plusw1,btemp+11
 24552  01B2CC  0E05               	movlw	5
 24553  01B2CE  240B               	addwf	(btemp+10)^0,w,c
 24554  01B2D0  6ED9               	movwf	fsr2l,c
 24555  01B2D2  0E00               	movlw	0
 24556  01B2D4  200C               	addwfc	(btemp+11)^0,w,c
 24557  01B2D6  6EDA               	movwf	fsr2h,c
 24558  01B2D8  50DF               	movf	indf2,w,c
 24559  01B2DA  A4D8               	btfss	status,2,c
 24560  01B2DC  D012               	goto	l13358
 24561                           
 24562                           ;hid.c: 52:   h->wait_enter = 1;
 24563                           ;stkvar	_h @ sp[(0)+-2]
 24564  01B2DE  0EFE               	movlw	-2
 24565  01B2E0  006F FF8C  F00B    	movff	plusw1,btemp+10
 24566  01B2E6  0EFF               	movlw	-1
 24567  01B2E8  006F FF8C  F00C    	movff	plusw1,btemp+11
 24568  01B2EE  0E04               	movlw	4
 24569  01B2F0  240B               	addwf	(btemp+10)^0,w,c
 24570  01B2F2  6ED9               	movwf	fsr2l,c
 24571  01B2F4  0E00               	movlw	0
 24572  01B2F6  200C               	addwfc	(btemp+11)^0,w,c
 24573  01B2F8  6EDA               	movwf	fsr2h,c
 24574  01B2FA  0E01               	movlw	1
 24575  01B2FC  6EDF               	movwf	indf2,c
 24576                           
 24577                           ;hid.c: 53:   return 1;
 24578  01B2FE  0E01               	movlw	1
 24579  01B300  D001               	goto	L29
 24580  01B302                     l13358:
 24581                           
 24582                           ;hid.c: 55:  return 0;
 24583  01B302  0E00               	movlw	0
 24584  01B304                     L29:
 24585  01B304  6E01               	movwf	btemp^0,c
 24586                           
 24587                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 24588  01B306  52E5               	movf	postdec1,f,c
 24589  01B308  52E5               	movf	postdec1,f,c
 24590  01B30A  0012               	return		;funcret
 24591  01B30C                     __end_of_check_enter_button:
 24592                           	opt callstack 0
 24593                           
 24594 ;; *************** function _calc_ror_data *****************
 24595 ;; Defined at:
 24596 ;;		line 102 in file "mbmc.c"
 24597 ;; Parameters:    Size  Location     Type
 24598 ;;		None
 24599 ;; Auto vars:     Size  Location     Type
 24600 ;;		None
 24601 ;; Return value:  Size  Location     Type
 24602 ;;                  1  [STACK] void 
 24603 ;; Registers used:
 24604 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24605 ;; Tracked objects:
 24606 ;;		On entry : 0/39
 24607 ;;		On exit  : 0/0
 24608 ;;		Unchanged: 0/0
 24609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24614 ;;Total ram usage:        0 bytes
 24615 ;; Hardware stack levels used:    1
 24616 ;; Hardware stack levels required when called:   18
 24617 ;; This function calls:
 24618 ;;		___flge
 24619 ;;		___flsub
 24620 ;;		_conv_raw_result
 24621 ;;		_fabsf
 24622 ;; This function is called by:
 24623 ;;		_main
 24624 ;; This function uses a reentrant model
 24625 ;;
 24626                           
 24627                           	psect	text99
 24628  018DC0                     __ptext99:
 24629                           	opt callstack 0
 24630  018DC0                     _calc_ror_data:
 24631                           	opt callstack 12
 24632                           
 24633                           ;mbmc.c: 104:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 106:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 24634                           
 24635                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24636                           ;incstack = 0
 24637  018DC0  0060  F1A3  FFE6   	movff	calc_ror_data@bcror,postinc1
 24638  018DC6  0060  F1A7  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 24639  018DCC  0060  F1AB  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 24640  018DD2  0060  F1AF  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 24641  018DD8  0E00               	movlw	0
 24642  018DDA  6EE6               	movwf	postinc1,c
 24643  018DDC  0E00               	movlw	0
 24644  018DDE  6EE6               	movwf	postinc1,c
 24645  018DE0  ECB3  F0A9         	call	_conv_raw_result	;wreg free
 24646  018DE4  0060  F007  FFE6   	movff	btemp,postinc1
 24647  018DEA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24648  018DF0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24649  018DF6  0060  F013  FFE6   	movff	btemp+3,postinc1
 24650  018DFC  EC4C  F0DD         	call	___flsub	;wreg free
 24651  018E00  0060  F007  FFE6   	movff	btemp,postinc1
 24652  018E06  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24653  018E0C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24654  018E12  0060  F013  FFE6   	movff	btemp+3,postinc1
 24655  018E18  ECF5  F0D4         	call	_fabsf	;wreg free
 24656  018E1C  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 24657  018E22  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 24658  018E28  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 24659  018E2E  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 24660                           
 24661                           ;mbmc.c: 107:  bcror = conv_raw_result(C_BATT, CONV);
 24662  018E34  0E00               	movlw	0
 24663  018E36  6EE6               	movwf	postinc1,c
 24664  018E38  0E00               	movlw	0
 24665  018E3A  6EE6               	movwf	postinc1,c
 24666  018E3C  ECB3  F0A9         	call	_conv_raw_result	;wreg free
 24667  018E40  0060  F004  F068   	movff	btemp,calc_ror_data@bcror
 24668  018E46  0060  F008  F069   	movff	btemp+1,calc_ror_data@bcror+1
 24669  018E4C  0060  F00C  F06A   	movff	btemp+2,calc_ror_data@bcror+2
 24670  018E52  0060  F010  F06B   	movff	btemp+3,calc_ror_data@bcror+3
 24671                           
 24672                           ;mbmc.c: 108:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 24673  018E58  0060  F1B3  FFE6   	movff	calc_ror_data@bvror,postinc1
 24674  018E5E  0060  F1B7  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 24675  018E64  0060  F1BB  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 24676  018E6A  0060  F1BF  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 24677  018E70  0E00               	movlw	0
 24678  018E72  6EE6               	movwf	postinc1,c
 24679  018E74  0E04               	movlw	4
 24680  018E76  6EE6               	movwf	postinc1,c
 24681  018E78  ECB3  F0A9         	call	_conv_raw_result	;wreg free
 24682  018E7C  0060  F007  FFE6   	movff	btemp,postinc1
 24683  018E82  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24684  018E88  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24685  018E8E  0060  F013  FFE6   	movff	btemp+3,postinc1
 24686  018E94  EC4C  F0DD         	call	___flsub	;wreg free
 24687  018E98  0060  F007  FFE6   	movff	btemp,postinc1
 24688  018E9E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24689  018EA4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24690  018EAA  0060  F013  FFE6   	movff	btemp+3,postinc1
 24691  018EB0  ECF5  F0D4         	call	_fabsf	;wreg free
 24692  018EB4  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 24693  018EBA  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 24694  018EC0  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 24695  018EC6  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 24696                           
 24697                           ;mbmc.c: 109:  if (C.bv_ror < 0.0051)
 24698  018ECC  0EE7               	movlw	231
 24699  018ECE  6EE6               	movwf	postinc1,c
 24700  018ED0  0E1D               	movlw	29
 24701  018ED2  6EE6               	movwf	postinc1,c
 24702  018ED4  0EA7               	movlw	167
 24703  018ED6  6EE6               	movwf	postinc1,c
 24704  018ED8  0E3B               	movlw	59
 24705  018EDA  6EE6               	movwf	postinc1,c
 24706  018EDC  EE21  F36B         	lfsr	2,_C+108	;volatile
 24707  018EE0  006F FF7B FFE6     	movff	postinc2,postinc1
 24708  018EE6  006F FF7B FFE6     	movff	postinc2,postinc1
 24709  018EEC  006F FF7B FFE6     	movff	postinc2,postinc1
 24710  018EF2  006F FF7B FFE6     	movff	postinc2,postinc1
 24711  018EF8  EC1C  F0C9         	call	___flge	;wreg free
 24712  018EFC  B001               	btfsc	btemp& (0+255),0,c
 24713  018EFE  D010               	goto	l11188
 24714                           
 24715                           ;mbmc.c: 110:   C.bv_ror = 0.0140 + 0.0001;
 24716  018F00  0EB0               	movlw	176
 24717  018F02  006F FFA0  F76B    	movff	wreg,_C+108	;volatile
 24718  018F08  0E03               	movlw	3
 24719  018F0A  006F FFA0  F76C    	movff	wreg,_C+109	;volatile
 24720  018F10  0E67               	movlw	103
 24721  018F12  006F FFA0  F76D    	movff	wreg,_C+110	;volatile
 24722  018F18  0E3C               	movlw	60
 24723  018F1A  006F FFA0  F76E    	movff	wreg,_C+111	;volatile
 24724  018F20                     l11188:
 24725                           
 24726                           ;mbmc.c: 111:  bvror = conv_raw_result(V_BAT, CONV);
 24727  018F20  0E00               	movlw	0
 24728  018F22  6EE6               	movwf	postinc1,c
 24729  018F24  0E04               	movlw	4
 24730  018F26  6EE6               	movwf	postinc1,c
 24731  018F28  ECB3  F0A9         	call	_conv_raw_result	;wreg free
 24732  018F2C  0060  F004  F06C   	movff	btemp,calc_ror_data@bvror
 24733  018F32  0060  F008  F06D   	movff	btemp+1,calc_ror_data@bvror+1
 24734  018F38  0060  F00C  F06E   	movff	btemp+2,calc_ror_data@bvror+2
 24735  018F3E  0060  F010  F06F   	movff	btemp+3,calc_ror_data@bvror+3
 24736                           
 24737                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 24738  018F44  0012               	return		;funcret
 24739  018F46                     __end_of_calc_ror_data:
 24740                           	opt callstack 0
 24741                           
 24742 ;; *************** function _fabsf *****************
 24743 ;; Defined at:
 24744 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 24745 ;; Parameters:    Size  Location     Type
 24746 ;;  x               4  [STACK] float 
 24747 ;; Auto vars:     Size  Location     Type
 24748 ;;  u               4  [STACK] struct .
 24749 ;; Return value:  Size  Location     Type
 24750 ;;                  4  [STACK] float 
 24751 ;; Registers used:
 24752 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 24753 ;; Tracked objects:
 24754 ;;		On entry : 0/0
 24755 ;;		On exit  : 0/0
 24756 ;;		Unchanged: 0/0
 24757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24762 ;;Total ram usage:        0 bytes
 24763 ;; Hardware stack levels used:    1
 24764 ;; Hardware stack levels required when called:   15
 24765 ;; This function calls:
 24766 ;;		Nothing
 24767 ;; This function is called by:
 24768 ;;		_main
 24769 ;;		_calc_ror_data
 24770 ;;		_calc_bsoc
 24771 ;;		_esr_check
 24772 ;; This function uses a reentrant model
 24773 ;;
 24774                           
 24775                           	psect	text100
 24776  01A9EA                     __ptext100:
 24777                           	opt callstack 0
 24778  01A9EA                     _fabsf:
 24779                           	opt callstack 0
 24780                           
 24781                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24782  01A9EA  52E6               	movf	postinc1,f,c
 24783  01A9EC  52E6               	movf	postinc1,f,c
 24784  01A9EE  52E6               	movf	postinc1,f,c
 24785  01A9F0  52E6               	movf	postinc1,f,c
 24786                           
 24787                           ;incstack = 0
 24788 ;; hardware stack exceeded
 24789  01A9F2  0060  F180  F009   	movff	fabsf@F463,btemp+8
 24790  01A9F8  0060  F184  F00A   	movff	fabsf@F463+1,btemp+9
 24791  01A9FE  0060  F188  F00B   	movff	fabsf@F463+2,btemp+10
 24792  01AA04  0060  F18C  F00C   	movff	fabsf@F463+3,btemp+11
 24793                           
 24794                           ;stkvar	_u @ sp[(-4)+0]
 24795  01AA0A  0EFC               	movlw	-4
 24796  01AA0C  0060  F027  FFE3   	movff	btemp+8,plusw1
 24797  01AA12  0EFD               	movlw	-3
 24798  01AA14  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24799  01AA1A  0EFE               	movlw	-2
 24800  01AA1C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24801  01AA22  0EFF               	movlw	-1
 24802  01AA24  0060  F033  FFE3   	movff	btemp+11,plusw1
 24803                           
 24804                           ;stkvar	_x @ sp[(-4)+-4]
 24805  01AA2A  0EF8               	movlw	-8
 24806  01AA2C  006F FF8C  F009    	movff	plusw1,btemp+8
 24807  01AA32  0EF9               	movlw	-7
 24808  01AA34  006F FF8C  F00A    	movff	plusw1,btemp+9
 24809  01AA3A  0EFA               	movlw	-6
 24810  01AA3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 24811  01AA42  0EFB               	movlw	-5
 24812  01AA44  006F FF8C  F00C    	movff	plusw1,btemp+11
 24813                           
 24814                           ;stkvar	_u @ sp[(-4)+0]
 24815  01AA4A  0EFC               	movlw	-4
 24816  01AA4C  0060  F027  FFE3   	movff	btemp+8,plusw1
 24817  01AA52  0EFD               	movlw	-3
 24818  01AA54  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24819  01AA5A  0EFE               	movlw	-2
 24820  01AA5C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24821  01AA62  0EFF               	movlw	-1
 24822  01AA64  0060  F033  FFE3   	movff	btemp+11,plusw1
 24823                           
 24824                           ;stkvar	_u @ sp[(-4)+0]
 24825  01AA6A  0EFF               	movlw	-1
 24826  01AA6C  9EE3               	bcf	plusw1,7,c
 24827                           
 24828                           ;stkvar	_u @ sp[(-4)+0]
 24829  01AA6E  0EFC               	movlw	-4
 24830  01AA70  006F FF8C  F001    	movff	plusw1,btemp
 24831  01AA76  0EFD               	movlw	-3
 24832  01AA78  006F FF8C  F002    	movff	plusw1,btemp+1
 24833  01AA7E  0EFE               	movlw	-2
 24834  01AA80  006F FF8C  F003    	movff	plusw1,btemp+2
 24835  01AA86  0EFF               	movlw	-1
 24836  01AA88  006F FF8C  F004    	movff	plusw1,btemp+3
 24837                           
 24838                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 24839  01AA8E  0EF8               	movlw	248
 24840  01AA90  26E1               	addwf	fsr1l,f,c
 24841  01AA92  0EFF               	movlw	255
 24842  01AA94  22E2               	addwfc	fsr1h,f,c
 24843  01AA96  0012               	return		;funcret
 24844  01AA98                     __end_of_fabsf:
 24845                           	opt callstack 0
 24846                           
 24847 ;; *************** function _conv_raw_result *****************
 24848 ;; Defined at:
 24849 ;;		line 123 in file "daq.c"
 24850 ;; Parameters:    Size  Location     Type
 24851 ;;  chan            1  [STACK] const enum E16590
 24852 ;;  to_what         1  [STACK] const enum E16652
 24853 ;; Auto vars:     Size  Location     Type
 24854 ;;		None
 24855 ;; Return value:  Size  Location     Type
 24856 ;;                  4  [STACK] float 
 24857 ;; Registers used:
 24858 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24859 ;; Tracked objects:
 24860 ;;		On entry : 0/39
 24861 ;;		On exit  : 0/0
 24862 ;;		Unchanged: 0/0
 24863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24868 ;;Total ram usage:        0 bytes
 24869 ;; Hardware stack levels used:    1
 24870 ;; Hardware stack levels required when called:   17
 24871 ;; This function calls:
 24872 ;;		___fldiv
 24873 ;;		___flmul
 24874 ;;		___flsub
 24875 ;;		___xxtofl
 24876 ;;		_get_raw_result
 24877 ;;		_nanf
 24878 ;; This function is called by:
 24879 ;;		_main
 24880 ;;		_convert_adc_data
 24881 ;;		_calc_ror_data
 24882 ;;		_check_day_time
 24883 ;;		_init_bsoc
 24884 ;;		_esr_check
 24885 ;; This function uses a reentrant model
 24886 ;;
 24887                           
 24888                           	psect	text101
 24889  015366                     __ptext101:
 24890                           	opt callstack 0
 24891  015366                     _conv_raw_result:
 24892                           	opt callstack 0
 24893                           
 24894                           ;daq.c: 123: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);
      +                          daq.c: 124: {;daq.c: 126:  switch (to_what) {
 24895                           
 24896                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24897                           ;incstack = 0
 24898 ;; hardware stack exceeded
 24899  015366  D24A               	goto	l9950
 24900  015368                     l9896:
 24901                           
 24902                           ;daq.c: 128:   if (!(0b0011110001110111 >> chan & 0x1))
 24903                           ;stkvar	_chan @ sp[(0)+-1]
 24904  015368  0EFF               	movlw	-1
 24905  01536A  006F FF8C  F00C    	movff	plusw1,btemp+11
 24906  015370  0E77               	movlw	119
 24907  015372  6E09               	movwf	(btemp+8)^0,c
 24908  015374  0E3C               	movlw	60
 24909  015376  6E0A               	movwf	(btemp+9)^0,c
 24910  015378  2A0C               	incf	(btemp+11)^0,f,c
 24911  01537A  D003               	goto	u9204
 24912  01537C                     u9205:
 24913  01537C  340A               	rlcf	(btemp+9)^0,w,c
 24914  01537E  320A               	rrcf	(btemp+9)^0,f,c
 24915  015380  3209               	rrcf	(btemp+8)^0,f,c
 24916  015382                     u9204:
 24917  015382  2E0C               	decfsz	(btemp+11)^0,f,c
 24918  015384  D7FB               	goto	u9205
 24919  015386  B009               	btfsc	(btemp+8)^0,0,c
 24920  015388  D007               	goto	l9902
 24921                           
 24922                           ;daq.c: 129:    return nanf("");
 24923  01538A  0E49               	movlw	low (STR_64+126)
 24924  01538C  6EE6               	movwf	postinc1,c
 24925  01538E  0EFC               	movlw	high (STR_64+126)
 24926  015390  6EE6               	movwf	postinc1,c
 24927  015392  ECEE  F0DA         	call	_nanf	;wreg free
 24928  015396  D242               	goto	l1816
 24929  015398                     l9902:
 24930                           
 24931                           ;daq.c: 131:   if (0b0000000000000011 >> chan & 0x1) {
 24932                           ;stkvar	_chan @ sp[(0)+-1]
 24933  015398  0EFF               	movlw	-1
 24934  01539A  006F FF8C  F00C    	movff	plusw1,btemp+11
 24935  0153A0  0E03               	movlw	3
 24936  0153A2  6E09               	movwf	(btemp+8)^0,c
 24937  0153A4  0E00               	movlw	0
 24938  0153A6  6E0A               	movwf	(btemp+9)^0,c
 24939  0153A8  2A0C               	incf	(btemp+11)^0,f,c
 24940  0153AA  D003               	goto	u9224
 24941  0153AC                     u9225:
 24942  0153AC  340A               	rlcf	(btemp+9)^0,w,c
 24943  0153AE  320A               	rrcf	(btemp+9)^0,f,c
 24944  0153B0  3209               	rrcf	(btemp+8)^0,f,c
 24945  0153B2                     u9224:
 24946  0153B2  2E0C               	decfsz	(btemp+11)^0,f,c
 24947  0153B4  D7FB               	goto	u9225
 24948  0153B6  A009               	btfss	(btemp+8)^0,0,c
 24949  0153B8  D0F3               	goto	l9916
 24950                           
 24951                           ;daq.c: 132:    if (0b0000000000000001 >> chan & 0x1) {
 24952                           ;stkvar	_chan @ sp[(0)+-1]
 24953  0153BA  0EFF               	movlw	-1
 24954  0153BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 24955  0153C2  0E01               	movlw	1
 24956  0153C4  6E09               	movwf	(btemp+8)^0,c
 24957  0153C6  0E00               	movlw	0
 24958  0153C8  6E0A               	movwf	(btemp+9)^0,c
 24959  0153CA  2A0C               	incf	(btemp+11)^0,f,c
 24960  0153CC  D003               	goto	u9244
 24961  0153CE                     u9245:
 24962  0153CE  340A               	rlcf	(btemp+9)^0,w,c
 24963  0153D0  320A               	rrcf	(btemp+9)^0,f,c
 24964  0153D2  3209               	rrcf	(btemp+8)^0,f,c
 24965  0153D4                     u9244:
 24966  0153D4  2E0C               	decfsz	(btemp+11)^0,f,c
 24967  0153D6  D7FB               	goto	u9245
 24968  0153D8  A009               	btfss	(btemp+8)^0,0,c
 24969  0153DA  D071               	goto	l9912
 24970                           
 24971                           ;daq.c: 133:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[0]) * R.n_
      +                          scalar[0];
 24972  0153DC  0060  F367  FFE6   	movff	_R+42,postinc1
 24973  0153E2  0060  F36B  FFE6   	movff	_R+43,postinc1
 24974  0153E8  0060  F36F  FFE6   	movff	_R+44,postinc1
 24975  0153EE  0060  F373  FFE6   	movff	_R+45,postinc1
 24976  0153F4  0060  F354  F009   	movff	_R+38,btemp+8	;volatile
 24977  0153FA  0060  F358  F00A   	movff	_R+39,btemp+9	;volatile
 24978  015400  0E00               	movlw	0
 24979  015402  BE0A               	btfsc	(btemp+9)^0,7,c
 24980  015404  0EFF               	movlw	255
 24981  015406  6E0B               	movwf	(btemp+10)^0,c
 24982  015408  6E0C               	movwf	(btemp+11)^0,c
 24983  01540A  0060  F027  FFE6   	movff	btemp+8,postinc1
 24984  015410  0060  F02B  FFE6   	movff	btemp+9,postinc1
 24985  015416  0060  F02F  FFE6   	movff	btemp+10,postinc1
 24986  01541C  0060  F033  FFE6   	movff	btemp+11,postinc1
 24987  015422  0E01               	movlw	1
 24988  015424  6EE6               	movwf	postinc1,c
 24989  015426  EC65  F0C3         	call	___xxtofl	;wreg free
 24990  01542A  0060  F007  FFE6   	movff	btemp,postinc1
 24991  015430  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24992  015436  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24993  01543C  0060  F013  FFE6   	movff	btemp+3,postinc1
 24994                           
 24995                           ;stkvar	_chan @ sp[(-8)+-1]
 24996  015442  0EF7               	movlw	-9
 24997  015444  50E3               	movf	plusw1,w,c
 24998  015446  6EE6               	movwf	postinc1,c
 24999  015448  EC5B  F0E2         	call	_get_raw_result	;wreg free
 25000  01544C  0060  F004  F00B   	movff	btemp,btemp+10
 25001  015452  0060  F008  F00C   	movff	btemp+1,btemp+11
 25002  015458  500B               	movf	(btemp+10)^0,w,c
 25003  01545A  6E05               	movwf	(btemp+4)^0,c
 25004  01545C  500C               	movf	(btemp+11)^0,w,c
 25005  01545E  6E06               	movwf	(btemp+5)^0,c
 25006  015460  6A07               	clrf	(btemp+6)^0,c
 25007  015462  6A08               	clrf	(btemp+7)^0,c
 25008  015464  0060  F017  FFE6   	movff	btemp+4,postinc1
 25009  01546A  0060  F01B  FFE6   	movff	btemp+5,postinc1
 25010  015470  0060  F01F  FFE6   	movff	btemp+6,postinc1
 25011  015476  0060  F023  FFE6   	movff	btemp+7,postinc1
 25012  01547C  0E00               	movlw	0
 25013  01547E  6EE6               	movwf	postinc1,c
 25014  015480  EC65  F0C3         	call	___xxtofl	;wreg free
 25015  015484  0060  F007  FFE6   	movff	btemp,postinc1
 25016  01548A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25017  015490  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25018  015496  0060  F013  FFE6   	movff	btemp+3,postinc1
 25019  01549C  EC4C  F0DD         	call	___flsub	;wreg free
 25020  0154A0  0060  F007  FFE6   	movff	btemp,postinc1
 25021  0154A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25022  0154AC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25023  0154B2  0060  F013  FFE6   	movff	btemp+3,postinc1
 25024  0154B8  EC03  F09F         	call	___flmul	;wreg free
 25025  0154BC  D1AF               	goto	l1816
 25026  0154BE                     l9912:
 25027                           
 25028                           ;daq.c: 135:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[1]) * R.n_
      +                          scalar[1];
 25029  0154BE  0060  F377  FFE6   	movff	_R+46,postinc1
 25030  0154C4  0060  F37B  FFE6   	movff	_R+47,postinc1
 25031  0154CA  0060  F37F  FFE6   	movff	_R+48,postinc1
 25032  0154D0  0060  F383  FFE6   	movff	_R+49,postinc1
 25033  0154D6  0060  F35C  F009   	movff	_R+40,btemp+8	;volatile
 25034  0154DC  0060  F360  F00A   	movff	_R+41,btemp+9	;volatile
 25035  0154E2  0E00               	movlw	0
 25036  0154E4  BE0A               	btfsc	(btemp+9)^0,7,c
 25037  0154E6  0EFF               	movlw	255
 25038  0154E8  6E0B               	movwf	(btemp+10)^0,c
 25039  0154EA  6E0C               	movwf	(btemp+11)^0,c
 25040  0154EC  0060  F027  FFE6   	movff	btemp+8,postinc1
 25041  0154F2  0060  F02B  FFE6   	movff	btemp+9,postinc1
 25042  0154F8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 25043  0154FE  0060  F033  FFE6   	movff	btemp+11,postinc1
 25044  015504  0E01               	movlw	1
 25045  015506  6EE6               	movwf	postinc1,c
 25046  015508  EC65  F0C3         	call	___xxtofl	;wreg free
 25047  01550C  0060  F007  FFE6   	movff	btemp,postinc1
 25048  015512  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25049  015518  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25050  01551E  0060  F013  FFE6   	movff	btemp+3,postinc1
 25051                           
 25052                           ;stkvar	_chan @ sp[(-8)+-1]
 25053  015524  0EF7               	movlw	-9
 25054  015526  50E3               	movf	plusw1,w,c
 25055  015528  6EE6               	movwf	postinc1,c
 25056  01552A  EC5B  F0E2         	call	_get_raw_result	;wreg free
 25057  01552E  0060  F004  F00B   	movff	btemp,btemp+10
 25058  015534  0060  F008  F00C   	movff	btemp+1,btemp+11
 25059  01553A  500B               	movf	(btemp+10)^0,w,c
 25060  01553C  6E05               	movwf	(btemp+4)^0,c
 25061  01553E  500C               	movf	(btemp+11)^0,w,c
 25062  015540  6E06               	movwf	(btemp+5)^0,c
 25063  015542  6A07               	clrf	(btemp+6)^0,c
 25064  015544  6A08               	clrf	(btemp+7)^0,c
 25065  015546  0060  F017  FFE6   	movff	btemp+4,postinc1
 25066  01554C  0060  F01B  FFE6   	movff	btemp+5,postinc1
 25067  015552  0060  F01F  FFE6   	movff	btemp+6,postinc1
 25068  015558  0060  F023  FFE6   	movff	btemp+7,postinc1
 25069  01555E  0E00               	movlw	0
 25070  015560  6EE6               	movwf	postinc1,c
 25071  015562  EC65  F0C3         	call	___xxtofl	;wreg free
 25072  015566  0060  F007  FFE6   	movff	btemp,postinc1
 25073  01556C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25074  015572  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25075  015578  0060  F013  FFE6   	movff	btemp+3,postinc1
 25076  01557E  EC4C  F0DD         	call	___flsub	;wreg free
 25077  015582  0060  F007  FFE6   	movff	btemp,postinc1
 25078  015588  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25079  01558E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25080  015594  0060  F013  FFE6   	movff	btemp+3,postinc1
 25081  01559A  EC03  F09F         	call	___flmul	;wreg free
 25082  01559E  D13E               	goto	l1816
 25083  0155A0                     l9916:
 25084                           
 25085                           ;daq.c: 138:    if (0b0000100000000000 >> chan & 0x1) {
 25086                           ;stkvar	_chan @ sp[(0)+-1]
 25087  0155A0  0EFF               	movlw	-1
 25088  0155A2  006F FF8C  F00C    	movff	plusw1,btemp+11
 25089  0155A8  0E00               	movlw	0
 25090  0155AA  6E09               	movwf	(btemp+8)^0,c
 25091  0155AC  0E08               	movlw	8
 25092  0155AE  6E0A               	movwf	(btemp+9)^0,c
 25093  0155B0  2A0C               	incf	(btemp+11)^0,f,c
 25094  0155B2  D003               	goto	u9264
 25095  0155B4                     u9265:
 25096  0155B4  340A               	rlcf	(btemp+9)^0,w,c
 25097  0155B6  320A               	rrcf	(btemp+9)^0,f,c
 25098  0155B8  3209               	rrcf	(btemp+8)^0,f,c
 25099  0155BA                     u9264:
 25100  0155BA  2E0C               	decfsz	(btemp+11)^0,f,c
 25101  0155BC  D7FB               	goto	u9265
 25102  0155BE  A009               	btfss	(btemp+8)^0,0,c
 25103  0155C0  D008               	goto	l9924
 25104                           
 25105                           ;daq.c: 139:     return 25.0;
 25106  0155C2  0E00               	movlw	0
 25107  0155C4  6E01               	movwf	btemp^0,c
 25108  0155C6  0E00               	movlw	0
 25109  0155C8  6E02               	movwf	(btemp+1)^0,c
 25110  0155CA  0EC8               	movlw	200
 25111  0155CC  6E03               	movwf	(btemp+2)^0,c
 25112  0155CE  0E41               	movlw	65
 25113  0155D0  D113               	goto	L30
 25114  0155D2                     l9924:
 25115                           
 25116                           ;daq.c: 141:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 25117  0155D2  0E00               	movlw	0
 25118  0155D4  6EE6               	movwf	postinc1,c
 25119  0155D6  0E00               	movlw	0
 25120  0155D8  6EE6               	movwf	postinc1,c
 25121  0155DA  0E7A               	movlw	122
 25122  0155DC  6EE6               	movwf	postinc1,c
 25123  0155DE  0E44               	movlw	68
 25124  0155E0  6EE6               	movwf	postinc1,c
 25125  0155E2  0E61               	movlw	97
 25126  0155E4  6EE6               	movwf	postinc1,c
 25127  0155E6  0E03               	movlw	3
 25128  0155E8  6EE6               	movwf	postinc1,c
 25129  0155EA  0E84               	movlw	132
 25130  0155EC  6EE6               	movwf	postinc1,c
 25131  0155EE  0E40               	movlw	64
 25132  0155F0  6EE6               	movwf	postinc1,c
 25133                           
 25134                           ;stkvar	_chan @ sp[(-8)+-1]
 25135  0155F2  0EF7               	movlw	-9
 25136  0155F4  50E3               	movf	plusw1,w,c
 25137  0155F6  6EE6               	movwf	postinc1,c
 25138  0155F8  EC5B  F0E2         	call	_get_raw_result	;wreg free
 25139  0155FC  0060  F004  F00B   	movff	btemp,btemp+10
 25140  015602  0060  F008  F00C   	movff	btemp+1,btemp+11
 25141  015608  500B               	movf	(btemp+10)^0,w,c
 25142  01560A  6E05               	movwf	(btemp+4)^0,c
 25143  01560C  500C               	movf	(btemp+11)^0,w,c
 25144  01560E  6E06               	movwf	(btemp+5)^0,c
 25145  015610  6A07               	clrf	(btemp+6)^0,c
 25146  015612  6A08               	clrf	(btemp+7)^0,c
 25147  015614  0060  F017  FFE6   	movff	btemp+4,postinc1
 25148  01561A  0060  F01B  FFE6   	movff	btemp+5,postinc1
 25149  015620  0060  F01F  FFE6   	movff	btemp+6,postinc1
 25150  015626  0060  F023  FFE6   	movff	btemp+7,postinc1
 25151  01562C  0E00               	movlw	0
 25152  01562E  6EE6               	movwf	postinc1,c
 25153  015630  EC65  F0C3         	call	___xxtofl	;wreg free
 25154  015634  0060  F007  FFE6   	movff	btemp,postinc1
 25155  01563A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25156  015640  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25157  015646  0060  F013  FFE6   	movff	btemp+3,postinc1
 25158  01564C  EC03  F09F         	call	___flmul	;wreg free
 25159  015650  0060  F007  FFE6   	movff	btemp,postinc1
 25160  015656  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25161  01565C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25162  015662  0060  F013  FFE6   	movff	btemp+3,postinc1
 25163  015668  ECF6  F0A6         	call	___fldiv	;wreg free
 25164  01566C  D0D7               	goto	l1816
 25165  01566E                     l9928:
 25166                           
 25167                           ;daq.c: 146:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 25168                           ;stkvar	_chan @ sp[(0)+-1]
 25169  01566E  0EFF               	movlw	-1
 25170  015670  006F FF8C  F00C    	movff	plusw1,btemp+11
 25171  015676  0E03               	movlw	3
 25172  015678  6E09               	movwf	(btemp+8)^0,c
 25173  01567A  0E00               	movlw	0
 25174  01567C  6E0A               	movwf	(btemp+9)^0,c
 25175  01567E  2A0C               	incf	(btemp+11)^0,f,c
 25176  015680  D003               	goto	u9284
 25177  015682                     u9285:
 25178  015682  340A               	rlcf	(btemp+9)^0,w,c
 25179  015684  320A               	rrcf	(btemp+9)^0,f,c
 25180  015686  3209               	rrcf	(btemp+8)^0,f,c
 25181  015688                     u9284:
 25182  015688  2E0C               	decfsz	(btemp+11)^0,f,c
 25183  01568A  D7FB               	goto	u9285
 25184  01568C  B009               	btfsc	(btemp+8)^0,0,c
 25185  01568E  D011               	goto	u9310
 25186                           
 25187                           ;stkvar	_chan @ sp[(0)+-1]
 25188  015690  0EFF               	movlw	-1
 25189  015692  006F FF8C  F00C    	movff	plusw1,btemp+11
 25190  015698  0E00               	movlw	0
 25191  01569A  6E09               	movwf	(btemp+8)^0,c
 25192  01569C  0E08               	movlw	8
 25193  01569E  6E0A               	movwf	(btemp+9)^0,c
 25194  0156A0  2A0C               	incf	(btemp+11)^0,f,c
 25195  0156A2  D003               	goto	u9304
 25196  0156A4                     u9305:
 25197  0156A4  340A               	rlcf	(btemp+9)^0,w,c
 25198  0156A6  320A               	rrcf	(btemp+9)^0,f,c
 25199  0156A8  3209               	rrcf	(btemp+8)^0,f,c
 25200  0156AA                     u9304:
 25201  0156AA  2E0C               	decfsz	(btemp+11)^0,f,c
 25202  0156AC  D7FB               	goto	u9305
 25203  0156AE  A009               	btfss	(btemp+8)^0,0,c
 25204  0156B0  D04E               	goto	l9936
 25205  0156B2                     u9310:
 25206                           
 25207                           ;daq.c: 147:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 25208  0156B2  0E00               	movlw	0
 25209  0156B4  6EE6               	movwf	postinc1,c
 25210  0156B6  0E00               	movlw	0
 25211  0156B8  6EE6               	movwf	postinc1,c
 25212  0156BA  0E7A               	movlw	122
 25213  0156BC  6EE6               	movwf	postinc1,c
 25214  0156BE  0E44               	movlw	68
 25215  0156C0  6EE6               	movwf	postinc1,c
 25216  0156C2  0E00               	movlw	0
 25217  0156C4  6EE6               	movwf	postinc1,c
 25218  0156C6  0E00               	movlw	0
 25219  0156C8  6EE6               	movwf	postinc1,c
 25220  0156CA  0E20               	movlw	32
 25221  0156CC  6EE6               	movwf	postinc1,c
 25222  0156CE  0E3F               	movlw	63
 25223  0156D0  6EE6               	movwf	postinc1,c
 25224                           
 25225                           ;stkvar	_chan @ sp[(-8)+-1]
 25226  0156D2  0EF7               	movlw	-9
 25227  0156D4  50E3               	movf	plusw1,w,c
 25228  0156D6  6EE6               	movwf	postinc1,c
 25229  0156D8  EC5B  F0E2         	call	_get_raw_result	;wreg free
 25230  0156DC  0060  F004  F00B   	movff	btemp,btemp+10
 25231  0156E2  0060  F008  F00C   	movff	btemp+1,btemp+11
 25232  0156E8  500B               	movf	(btemp+10)^0,w,c
 25233  0156EA  6E05               	movwf	(btemp+4)^0,c
 25234  0156EC  500C               	movf	(btemp+11)^0,w,c
 25235  0156EE  6E06               	movwf	(btemp+5)^0,c
 25236  0156F0  6A07               	clrf	(btemp+6)^0,c
 25237  0156F2  6A08               	clrf	(btemp+7)^0,c
 25238  0156F4  0060  F017  FFE6   	movff	btemp+4,postinc1
 25239  0156FA  0060  F01B  FFE6   	movff	btemp+5,postinc1
 25240  015700  0060  F01F  FFE6   	movff	btemp+6,postinc1
 25241  015706  0060  F023  FFE6   	movff	btemp+7,postinc1
 25242  01570C  0E00               	movlw	0
 25243  01570E  6EE6               	movwf	postinc1,c
 25244  015710  EC65  F0C3         	call	___xxtofl	;wreg free
 25245  015714  0060  F007  FFE6   	movff	btemp,postinc1
 25246  01571A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25247  015720  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25248  015726  0060  F013  FFE6   	movff	btemp+3,postinc1
 25249  01572C  EC03  F09F         	call	___flmul	;wreg free
 25250  015730  0060  F007  FFE6   	movff	btemp,postinc1
 25251  015736  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25252  01573C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25253  015742  0060  F013  FFE6   	movff	btemp+3,postinc1
 25254  015748  ECF6  F0A6         	call	___fldiv	;wreg free
 25255  01574C  D067               	goto	l1816
 25256  01574E                     l9936:
 25257                           
 25258                           ;daq.c: 149:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 25259  01574E  0E00               	movlw	0
 25260  015750  6EE6               	movwf	postinc1,c
 25261  015752  0E00               	movlw	0
 25262  015754  6EE6               	movwf	postinc1,c
 25263  015756  0E7A               	movlw	122
 25264  015758  6EE6               	movwf	postinc1,c
 25265  01575A  0E44               	movlw	68
 25266  01575C  6EE6               	movwf	postinc1,c
 25267  01575E  0E61               	movlw	97
 25268  015760  6EE6               	movwf	postinc1,c
 25269  015762  0E03               	movlw	3
 25270  015764  6EE6               	movwf	postinc1,c
 25271  015766  0E84               	movlw	132
 25272  015768  6EE6               	movwf	postinc1,c
 25273  01576A  0E40               	movlw	64
 25274  01576C  6EE6               	movwf	postinc1,c
 25275                           
 25276                           ;stkvar	_chan @ sp[(-8)+-1]
 25277  01576E  0EF7               	movlw	-9
 25278  015770  50E3               	movf	plusw1,w,c
 25279  015772  6EE6               	movwf	postinc1,c
 25280  015774  EC5B  F0E2         	call	_get_raw_result	;wreg free
 25281  015778  0060  F004  F00B   	movff	btemp,btemp+10
 25282  01577E  0060  F008  F00C   	movff	btemp+1,btemp+11
 25283  015784  500B               	movf	(btemp+10)^0,w,c
 25284  015786  6E05               	movwf	(btemp+4)^0,c
 25285  015788  500C               	movf	(btemp+11)^0,w,c
 25286  01578A  6E06               	movwf	(btemp+5)^0,c
 25287  01578C  6A07               	clrf	(btemp+6)^0,c
 25288  01578E  6A08               	clrf	(btemp+7)^0,c
 25289  015790  0060  F017  FFE6   	movff	btemp+4,postinc1
 25290  015796  0060  F01B  FFE6   	movff	btemp+5,postinc1
 25291  01579C  0060  F01F  FFE6   	movff	btemp+6,postinc1
 25292  0157A2  0060  F023  FFE6   	movff	btemp+7,postinc1
 25293  0157A8  0E00               	movlw	0
 25294  0157AA  6EE6               	movwf	postinc1,c
 25295  0157AC  EC65  F0C3         	call	___xxtofl	;wreg free
 25296  0157B0  0060  F007  FFE6   	movff	btemp,postinc1
 25297  0157B6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25298  0157BC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25299  0157C2  0060  F013  FFE6   	movff	btemp+3,postinc1
 25300  0157C8  EC03  F09F         	call	___flmul	;wreg free
 25301  0157CC  0060  F007  FFE6   	movff	btemp,postinc1
 25302  0157D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25303  0157D8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 25304  0157DE  0060  F013  FFE6   	movff	btemp+3,postinc1
 25305  0157E4  ECF6  F0A6         	call	___fldiv	;wreg free
 25306  0157E8  D019               	goto	l1816
 25307  0157EA                     l9942:
 25308                           
 25309                           ;daq.c: 152:   return 0.0;
 25310  0157EA  0E00               	movlw	0
 25311  0157EC  6E01               	movwf	btemp^0,c
 25312  0157EE  0E00               	movlw	0
 25313  0157F0  6E02               	movwf	(btemp+1)^0,c
 25314  0157F2  0E00               	movlw	0
 25315  0157F4  6E03               	movwf	(btemp+2)^0,c
 25316  0157F6  0E00               	movlw	0
 25317  0157F8                     L30:
 25318  0157F8  6E04               	movwf	(btemp+3)^0,c
 25319  0157FA  D010               	goto	l1816
 25320  0157FC                     l9950:
 25321                           
 25322                           ;stkvar	_to_what @ sp[(0)+-2]
 25323  0157FC  0EFE               	movlw	-2
 25324  0157FE  50E3               	movf	plusw1,w,c
 25325  015800  6E0B               	movwf	(btemp+10)^0,c
 25326  015802  6A0C               	clrf	(btemp+11)^0,c
 25327                           
 25328                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25329                           ; Switch size 1, requested type "simple"
 25330                           ; Number of cases is 1, Range of values is 0 to 0
 25331                           ; switch strategies available:
 25332                           ; Name         Instructions Cycles
 25333                           ; simple_byte            4     3 (average)
 25334                           ;	Chosen strategy is simple_byte
 25335  015804  500C               	movf	(btemp+11)^0,w,c
 25336  015806  0A00               	xorlw	0	; case 0
 25337  015808  A4D8               	btfss	status,2,c
 25338  01580A  D7EF               	goto	l9942
 25339                           
 25340                           ; Switch size 1, requested type "simple"
 25341                           ; Number of cases is 2, Range of values is 0 to 1
 25342                           ; switch strategies available:
 25343                           ; Name         Instructions Cycles
 25344                           ; simple_byte            7     4 (average)
 25345                           ;	Chosen strategy is simple_byte
 25346  01580C  500B               	movf	(btemp+10)^0,w,c
 25347  01580E  0A00               	xorlw	0	; case 0
 25348  015810  B4D8               	btfsc	status,2,c
 25349  015812  D5AA               	goto	l9896
 25350  015814  0A01               	xorlw	1	; case 1
 25351  015816  B4D8               	btfsc	status,2,c
 25352  015818  D72A               	goto	l9928
 25353  01581A  D7E7               	goto	l9942
 25354  01581C                     l1816:
 25355                           
 25356                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 25357  01581C  52E5               	movf	postdec1,f,c
 25358  01581E  52E5               	movf	postdec1,f,c
 25359  015820  0012               	return		;funcret
 25360  015822                     __end_of_conv_raw_result:
 25361                           	opt callstack 0
 25362                           
 25363 ;; *************** function _nanf *****************
 25364 ;; Defined at:
 25365 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 25366 ;; Parameters:    Size  Location     Type
 25367 ;;  s               2  [STACK] PTR const unsigned char 
 25368 ;;		 -> STR_101(1), STR_63(1), 
 25369 ;; Auto vars:     Size  Location     Type
 25370 ;;  u               4  [STACK] struct .
 25371 ;; Return value:  Size  Location     Type
 25372 ;;                  4  [STACK] float 
 25373 ;; Registers used:
 25374 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 25375 ;; Tracked objects:
 25376 ;;		On entry : 0/39
 25377 ;;		On exit  : 0/0
 25378 ;;		Unchanged: 0/0
 25379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25384 ;;Total ram usage:        0 bytes
 25385 ;; Hardware stack levels used:    1
 25386 ;; Hardware stack levels required when called:   15
 25387 ;; This function calls:
 25388 ;;		Nothing
 25389 ;; This function is called by:
 25390 ;;		_conv_raw_result
 25391 ;; This function uses a reentrant model
 25392 ;;
 25393                           
 25394                           	psect	text102
 25395  01B5DC                     __ptext102:
 25396                           	opt callstack 0
 25397  01B5DC                     _nanf:
 25398                           	opt callstack 0
 25399                           
 25400                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25401  01B5DC  52E6               	movf	postinc1,f,c
 25402  01B5DE  52E6               	movf	postinc1,f,c
 25403  01B5E0  52E6               	movf	postinc1,f,c
 25404  01B5E2  52E6               	movf	postinc1,f,c
 25405                           
 25406                           ;incstack = 0
 25407 ;; hardware stack exceeded
 25408  01B5E4  0EFF               	movlw	255
 25409  01B5E6  6E09               	movwf	(btemp+8)^0,c
 25410  01B5E8  0EFF               	movlw	255
 25411  01B5EA  6E0A               	movwf	(btemp+9)^0,c
 25412  01B5EC  0EFF               	movlw	255
 25413  01B5EE  6E0B               	movwf	(btemp+10)^0,c
 25414  01B5F0  0E7F               	movlw	127
 25415  01B5F2  6E0C               	movwf	(btemp+11)^0,c
 25416                           
 25417                           ;stkvar	_u @ sp[(-4)+0]
 25418  01B5F4  0EFC               	movlw	-4
 25419  01B5F6  0060  F027  FFE3   	movff	btemp+8,plusw1
 25420  01B5FC  0EFD               	movlw	-3
 25421  01B5FE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25422  01B604  0EFE               	movlw	-2
 25423  01B606  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25424  01B60C  0EFF               	movlw	-1
 25425  01B60E  0060  F033  FFE3   	movff	btemp+11,plusw1
 25426                           
 25427                           ;stkvar	_u @ sp[(-4)+0]
 25428  01B614  0EFC               	movlw	-4
 25429  01B616  006F FF8C  F001    	movff	plusw1,btemp
 25430  01B61C  0EFD               	movlw	-3
 25431  01B61E  006F FF8C  F002    	movff	plusw1,btemp+1
 25432  01B624  0EFE               	movlw	-2
 25433  01B626  006F FF8C  F003    	movff	plusw1,btemp+2
 25434  01B62C  0EFF               	movlw	-1
 25435  01B62E  006F FF8C  F004    	movff	plusw1,btemp+3
 25436                           
 25437                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 25438  01B634  0EFA               	movlw	250
 25439  01B636  26E1               	addwf	fsr1l,f,c
 25440  01B638  0EFF               	movlw	255
 25441  01B63A  22E2               	addwfc	fsr1h,f,c
 25442  01B63C  0012               	return		;funcret
 25443  01B63E                     __end_of_nanf:
 25444                           	opt callstack 0
 25445                           
 25446 ;; *************** function _get_raw_result *****************
 25447 ;; Defined at:
 25448 ;;		line 115 in file "daq.c"
 25449 ;; Parameters:    Size  Location     Type
 25450 ;;  index           1  [STACK] const enum E16590
 25451 ;; Auto vars:     Size  Location     Type
 25452 ;;		None
 25453 ;; Return value:  Size  Location     Type
 25454 ;;                  2  [STACK] unsigned short 
 25455 ;; Registers used:
 25456 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 25457 ;; Tracked objects:
 25458 ;;		On entry : 0/1
 25459 ;;		On exit  : 0/0
 25460 ;;		Unchanged: 0/0
 25461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25466 ;;Total ram usage:        0 bytes
 25467 ;; Hardware stack levels used:    1
 25468 ;; Hardware stack levels required when called:   15
 25469 ;; This function calls:
 25470 ;;		Nothing
 25471 ;; This function is called by:
 25472 ;;		_main
 25473 ;;		_conv_raw_result
 25474 ;; This function uses a reentrant model
 25475 ;;
 25476                           
 25477                           	psect	text103
 25478  01C4B6                     __ptext103:
 25479                           	opt callstack 0
 25480  01C4B6                     _get_raw_result:
 25481                           	opt callstack 0
 25482                           
 25483                           ;daq.c: 115: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 116: {;daq.c
      +                          : 117:  return R.raw_adc[index];
 25484                           ;stkvar	_index @ sp[(0)+-1]
 25485                           
 25486                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25487                           ;incstack = 0
 25488 ;; hardware stack exceeded
 25489  01C4B6  0EFF               	movlw	-1
 25490  01C4B8  50E3               	movf	plusw1,w,c
 25491  01C4BA  0D02               	mullw	2
 25492  01C4BC  50F3               	movf	243,w,c
 25493  01C4BE  0FAF               	addlw	low _R
 25494  01C4C0  6ED9               	movwf	fsr2l,c
 25495  01C4C2  6ADA               	clrf	fsr2h,c
 25496  01C4C4  006F FF78  F001    	movff	postinc2,btemp
 25497  01C4CA  006F FF74  F002    	movff	postdec2,btemp+1
 25498                           
 25499                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 25500  01C4D0  52E5               	movf	postdec1,f,c
 25501  01C4D2  0012               	return		;funcret
 25502  01C4D4                     __end_of_get_raw_result:
 25503                           	opt callstack 0
 25504                           
 25505 ;; *************** function ___xxtofl *****************
 25506 ;; Defined at:
 25507 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 25508 ;; Parameters:    Size  Location     Type
 25509 ;;  sign            1  [STACK] unsigned char 
 25510 ;;  val             4  [STACK] long 
 25511 ;; Auto vars:     Size  Location     Type
 25512 ;;  arg             4  [STACK] unsigned long 
 25513 ;;  exp             1  [STACK] unsigned char 
 25514 ;; Return value:  Size  Location     Type
 25515 ;;                  4  [STACK] unsigned char 
 25516 ;; Registers used:
 25517 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 25518 ;; Tracked objects:
 25519 ;;		On entry : 0/0
 25520 ;;		On exit  : 0/0
 25521 ;;		Unchanged: 0/0
 25522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25527 ;;Total ram usage:        0 bytes
 25528 ;; Hardware stack levels used:    1
 25529 ;; Hardware stack levels required when called:   15
 25530 ;; This function calls:
 25531 ;;		Nothing
 25532 ;; This function is called by:
 25533 ;;		_conv_raw_result
 25534 ;;		_init_bsoc
 25535 ;; This function uses a reentrant model
 25536 ;;
 25537                           
 25538                           	psect	text104
 25539  0186CA                     __ptext104:
 25540                           	opt callstack 0
 25541  0186CA                     ___xxtofl:
 25542                           	opt callstack 0
 25543                           
 25544                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25545  0186CA  0E05               	movlw	5
 25546  0186CC  26E1               	addwf	fsr1l,f,c
 25547  0186CE  0E00               	movlw	0
 25548  0186D0  22E2               	addwfc	fsr1h,f,c
 25549                           
 25550                           ;stkvar	_sign @ sp[(-5)+-1]
 25551                           
 25552                           ;incstack = 0
 25553 ;; hardware stack exceeded
 25554  0186D2  0EFA               	movlw	-6
 25555  0186D4  50E3               	movf	plusw1,w,c
 25556  0186D6  B4D8               	btfsc	status,2,c
 25557  0186D8  D01D               	goto	l9844
 25558                           
 25559                           ;stkvar	_val @ sp[(-5)+-5]
 25560  0186DA  0EF9               	movlw	-7
 25561  0186DC  AEE3               	btfss	plusw1,7,c
 25562  0186DE  D01A               	goto	l9844
 25563                           
 25564                           ;stkvar	_val @ sp[(-5)+-5]
 25565  0186E0  0EF6               	movlw	-10
 25566  0186E2  006F FF8C  F009    	movff	plusw1,btemp+8
 25567  0186E8  0EF7               	movlw	-9
 25568  0186EA  006F FF8C  F00A    	movff	plusw1,btemp+9
 25569  0186F0  0EF8               	movlw	-8
 25570  0186F2  006F FF8C  F00B    	movff	plusw1,btemp+10
 25571  0186F8  0EF9               	movlw	-7
 25572  0186FA  006F FF8C  F00C    	movff	plusw1,btemp+11
 25573  018700  1E09               	comf	(btemp+8)^0,f,c
 25574  018702  1E0A               	comf	(btemp+9)^0,f,c
 25575  018704  1E0B               	comf	(btemp+10)^0,f,c
 25576  018706  1E0C               	comf	(btemp+11)^0,f,c
 25577  018708  2A09               	incf	(btemp+8)^0,f,c
 25578  01870A  0E00               	movlw	0
 25579  01870C  220A               	addwfc	(btemp+9)^0,f,c
 25580  01870E  220B               	addwfc	(btemp+10)^0,f,c
 25581  018710  220C               	addwfc	(btemp+11)^0,f,c
 25582  018712  D010               	goto	L31
 25583  018714                     l9844:
 25584                           
 25585                           ;stkvar	_val @ sp[(-5)+-5]
 25586  018714  0EF6               	movlw	-10
 25587  018716  006F FF8C  F009    	movff	plusw1,btemp+8
 25588  01871C  0EF7               	movlw	-9
 25589  01871E  006F FF8C  F00A    	movff	plusw1,btemp+9
 25590  018724  0EF8               	movlw	-8
 25591  018726  006F FF8C  F00B    	movff	plusw1,btemp+10
 25592  01872C  0EF9               	movlw	-7
 25593  01872E  006F FF8C  F00C    	movff	plusw1,btemp+11
 25594  018734                     L31:
 25595                           
 25596                           ;stkvar	_arg @ sp[(-5)+0]
 25597  018734  0EFB               	movlw	-5
 25598  018736  0060  F027  FFE3   	movff	btemp+8,plusw1
 25599  01873C  0EFC               	movlw	-4
 25600  01873E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25601  018744  0EFD               	movlw	-3
 25602  018746  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25603  01874C  0EFE               	movlw	-2
 25604  01874E  0060  F033  FFE3   	movff	btemp+11,plusw1
 25605                           
 25606                           ;stkvar	_val @ sp[(-5)+-5]
 25607  018754  0EF6               	movlw	-10
 25608  018756  50E3               	movf	plusw1,w,c
 25609  018758  E113               	bnz	l9852
 25610  01875A  0EF7               	movlw	-9
 25611  01875C  50E3               	movf	plusw1,w,c
 25612  01875E  E110               	bnz	l9852
 25613  018760  0EF8               	movlw	-8
 25614  018762  50E3               	movf	plusw1,w,c
 25615  018764  E10D               	bnz	l9852
 25616  018766  0EF9               	movlw	-7
 25617  018768  50E3               	movf	plusw1,w,c
 25618  01876A  A4D8               	btfss	status,2,c
 25619  01876C  D009               	goto	l9852
 25620  01876E  0E00               	movlw	0
 25621  018770  6E01               	movwf	btemp^0,c
 25622  018772  0E00               	movlw	0
 25623  018774  6E02               	movwf	(btemp+1)^0,c
 25624  018776  0E00               	movlw	0
 25625  018778  6E03               	movwf	(btemp+2)^0,c
 25626  01877A  0E00               	movlw	0
 25627  01877C  6E04               	movwf	(btemp+3)^0,c
 25628  01877E  D0A2               	goto	l3161
 25629  018780                     l9852:
 25630  018780  0E96               	movlw	150
 25631  018782  6E0C               	movwf	(btemp+11)^0,c
 25632                           
 25633                           ;stkvar	_exp @ sp[(-5)+4]
 25634  018784  0EFF               	movlw	-1
 25635  018786  0060  F033  FFE3   	movff	btemp+11,plusw1
 25636  01878C  D00B               	goto	l9856
 25637  01878E                     l9854:
 25638                           
 25639                           ;stkvar	_exp @ sp[(-5)+4]
 25640  01878E  0EFF               	movlw	-1
 25641  018790  2AE3               	incf	plusw1,f,c
 25642                           
 25643                           ;stkvar	_arg @ sp[(-5)+0]
 25644  018792  90D8               	bcf	status,0,c
 25645  018794  0EFE               	movlw	-2
 25646  018796  32E3               	rrcf	plusw1,f,c
 25647  018798  0EFD               	movlw	-3
 25648  01879A  32E3               	rrcf	plusw1,f,c
 25649  01879C  0EFC               	movlw	-4
 25650  01879E  32E3               	rrcf	plusw1,f,c
 25651  0187A0  0EFB               	movlw	-5
 25652  0187A2  32E3               	rrcf	plusw1,f,c
 25653  0187A4                     l9856:
 25654                           
 25655                           ;stkvar	_arg @ sp[(-5)+0]
 25656  0187A4  50E1               	movf	fsr1l,w,c
 25657  0187A6  0FFB               	addlw	-5
 25658  0187A8  6ED9               	movwf	fsr2l,c
 25659  0187AA  50E2               	movf	fsr1h,w,c
 25660  0187AC  6EDA               	movwf	fsr2h,c
 25661  0187AE  0EFF               	movlw	255
 25662  0187B0  22DA               	addwfc	fsr2h,f,c
 25663  0187B2  52DE               	movf	postinc2,f,c
 25664  0187B4  52DE               	movf	postinc2,f,c
 25665  0187B6  52DE               	movf	postinc2,f,c
 25666  0187B8  0EFE               	movlw	254
 25667  0187BA  14DD               	andwf	postdec2,w,c
 25668  0187BC  B4D8               	btfsc	status,2,c
 25669  0187BE  D018               	goto	l9864
 25670  0187C0  D7E6               	goto	l9854
 25671  0187C2                     l9858:
 25672                           
 25673                           ;stkvar	_exp @ sp[(-5)+4]
 25674  0187C2  0EFF               	movlw	-1
 25675  0187C4  2AE3               	incf	plusw1,f,c
 25676                           
 25677                           ;stkvar	_arg @ sp[(-5)+0]
 25678  0187C6  50E1               	movf	fsr1l,w,c
 25679  0187C8  0FFB               	addlw	-5
 25680  0187CA  6ED9               	movwf	fsr2l,c
 25681  0187CC  50E2               	movf	fsr1h,w,c
 25682  0187CE  6EDA               	movwf	fsr2h,c
 25683  0187D0  0EFF               	movlw	255
 25684  0187D2  22DA               	addwfc	fsr2h,f,c
 25685  0187D4  2ADE               	incf	postinc2,f,c
 25686  0187D6  0E00               	movlw	0
 25687  0187D8  22DE               	addwfc	postinc2,f,c
 25688  0187DA  22DE               	addwfc	postinc2,f,c
 25689  0187DC  22DE               	addwfc	postinc2,f,c
 25690                           
 25691                           ;stkvar	_arg @ sp[(-5)+0]
 25692  0187DE  90D8               	bcf	status,0,c
 25693  0187E0  0EFE               	movlw	-2
 25694  0187E2  32E3               	rrcf	plusw1,f,c
 25695  0187E4  0EFD               	movlw	-3
 25696  0187E6  32E3               	rrcf	plusw1,f,c
 25697  0187E8  0EFC               	movlw	-4
 25698  0187EA  32E3               	rrcf	plusw1,f,c
 25699  0187EC  0EFB               	movlw	-5
 25700  0187EE  32E3               	rrcf	plusw1,f,c
 25701  0187F0                     l9864:
 25702                           
 25703                           ;stkvar	_arg @ sp[(-5)+0]
 25704  0187F0  50E1               	movf	fsr1l,w,c
 25705  0187F2  0FFB               	addlw	-5
 25706  0187F4  6ED9               	movwf	fsr2l,c
 25707  0187F6  50E2               	movf	fsr1h,w,c
 25708  0187F8  6EDA               	movwf	fsr2h,c
 25709  0187FA  0EFF               	movlw	255
 25710  0187FC  22DA               	addwfc	fsr2h,f,c
 25711  0187FE  52DE               	movf	postinc2,f,c
 25712  018800  52DE               	movf	postinc2,f,c
 25713  018802  52DE               	movf	postinc2,f,c
 25714  018804  0EFF               	movlw	255
 25715  018806  14DD               	andwf	postdec2,w,c
 25716  018808  B4D8               	btfsc	status,2,c
 25717  01880A  D00C               	goto	l9868
 25718  01880C  D7DA               	goto	l9858
 25719  01880E                     l9866:
 25720                           
 25721                           ;stkvar	_exp @ sp[(-5)+4]
 25722  01880E  0EFF               	movlw	-1
 25723  018810  06E3               	decf	plusw1,f,c
 25724                           
 25725                           ;stkvar	_arg @ sp[(-5)+0]
 25726  018812  90D8               	bcf	status,0,c
 25727  018814  0EFB               	movlw	-5
 25728  018816  36E3               	rlcf	plusw1,f,c
 25729  018818  0EFC               	movlw	-4
 25730  01881A  36E3               	rlcf	plusw1,f,c
 25731  01881C  0EFD               	movlw	-3
 25732  01881E  36E3               	rlcf	plusw1,f,c
 25733  018820  0EFE               	movlw	-2
 25734  018822  36E3               	rlcf	plusw1,f,c
 25735  018824                     l9868:
 25736                           
 25737                           ;stkvar	_arg @ sp[(-5)+0]
 25738  018824  0EFD               	movlw	-3
 25739  018826  BEE3               	btfsc	plusw1,7,c
 25740  018828  D007               	goto	u9160
 25741                           
 25742                           ;stkvar	_exp @ sp[(-5)+4]
 25743  01882A  0EFF               	movlw	-1
 25744  01882C  006F FF8C  F001    	movff	plusw1,btemp
 25745  018832  0E02               	movlw	2
 25746  018834  6001               	cpfslt	btemp^0,c
 25747  018836  D7EB               	goto	l9866
 25748  018838                     u9160:
 25749                           
 25750                           ;stkvar	_exp @ sp[(-5)+4]
 25751  018838  0EFF               	movlw	-1
 25752  01883A  B0E3               	btfsc	plusw1,0,c
 25753  01883C  D002               	goto	l9876
 25754                           
 25755                           ;stkvar	_arg @ sp[(-5)+0]
 25756  01883E  0EFD               	movlw	-3
 25757  018840  9EE3               	bcf	plusw1,7,c
 25758  018842                     l9876:
 25759                           
 25760                           ;stkvar	_exp @ sp[(-5)+4]
 25761  018842  50E1               	movf	fsr1l,w,c
 25762  018844  0FFF               	addlw	-1
 25763  018846  6ED9               	movwf	fsr2l,c
 25764  018848  50E2               	movf	fsr1h,w,c
 25765  01884A  6EDA               	movwf	fsr2h,c
 25766  01884C  0EFF               	movlw	255
 25767  01884E  22DA               	addwfc	fsr2h,f,c
 25768  018850  90D8               	bcf	status,0,c
 25769  018852  32DF               	rrcf	indf2,f,c
 25770                           
 25771                           ;stkvar	_exp @ sp[(-5)+4]
 25772  018854  0EFF               	movlw	-1
 25773  018856  006F FF8C  F00C    	movff	plusw1,btemp+11
 25774  01885C  0060  F030  F005   	movff	btemp+11,btemp+4
 25775  018862  6A06               	clrf	(btemp+5)^0,c
 25776  018864  6A07               	clrf	(btemp+6)^0,c
 25777  018866  6A08               	clrf	(btemp+7)^0,c
 25778  018868  0060  F014  F008   	movff	btemp+4,btemp+7
 25779  01886E  6A07               	clrf	(btemp+6)^0,c
 25780  018870  6A06               	clrf	(btemp+5)^0,c
 25781  018872  6A05               	clrf	(btemp+4)^0,c
 25782                           
 25783                           ;stkvar	_arg @ sp[(-5)+0]
 25784  018874  50E1               	movf	fsr1l,w,c
 25785  018876  0FFB               	addlw	-5
 25786  018878  6ED9               	movwf	fsr2l,c
 25787  01887A  50E2               	movf	fsr1h,w,c
 25788  01887C  6EDA               	movwf	fsr2h,c
 25789  01887E  0EFF               	movlw	255
 25790  018880  22DA               	addwfc	fsr2h,f,c
 25791  018882  5005               	movf	(btemp+4)^0,w,c
 25792  018884  12DE               	iorwf	postinc2,f,c
 25793  018886  5006               	movf	(btemp+5)^0,w,c
 25794  018888  12DE               	iorwf	postinc2,f,c
 25795  01888A  5007               	movf	(btemp+6)^0,w,c
 25796  01888C  12DE               	iorwf	postinc2,f,c
 25797  01888E  5008               	movf	(btemp+7)^0,w,c
 25798  018890  12DE               	iorwf	postinc2,f,c
 25799                           
 25800                           ;stkvar	_sign @ sp[(-5)+-1]
 25801  018892  0EFA               	movlw	-6
 25802  018894  50E3               	movf	plusw1,w,c
 25803  018896  B4D8               	btfsc	status,2,c
 25804  018898  D005               	goto	l9886
 25805                           
 25806                           ;stkvar	_val @ sp[(-5)+-5]
 25807  01889A  0EF9               	movlw	-7
 25808  01889C  AEE3               	btfss	plusw1,7,c
 25809  01889E  D002               	goto	l9886
 25810                           
 25811                           ;stkvar	_arg @ sp[(-5)+0]
 25812  0188A0  0EFE               	movlw	-2
 25813  0188A2  8EE3               	bsf	plusw1,7,c
 25814  0188A4                     l9886:
 25815                           
 25816                           ;stkvar	_arg @ sp[(-5)+0]
 25817  0188A4  0EFB               	movlw	-5
 25818  0188A6  006F FF8C  F001    	movff	plusw1,btemp
 25819  0188AC  0EFC               	movlw	-4
 25820  0188AE  006F FF8C  F002    	movff	plusw1,btemp+1
 25821  0188B4  0EFD               	movlw	-3
 25822  0188B6  006F FF8C  F003    	movff	plusw1,btemp+2
 25823  0188BC  0EFE               	movlw	-2
 25824  0188BE  006F FF8C  F004    	movff	plusw1,btemp+3
 25825  0188C4                     l3161:
 25826                           
 25827                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 25828  0188C4  0EF6               	movlw	246
 25829  0188C6  26E1               	addwf	fsr1l,f,c
 25830  0188C8  0EFF               	movlw	255
 25831  0188CA  22E2               	addwfc	fsr1h,f,c
 25832  0188CC  0012               	return		;funcret
 25833  0188CE                     __end_of___xxtofl:
 25834                           	opt callstack 0
 25835                           
 25836 ;; *************** function ___fldiv *****************
 25837 ;; Defined at:
 25838 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 25839 ;; Parameters:    Size  Location     Type
 25840 ;;  b               4  [STACK] unsigned char 
 25841 ;;  a               4  [STACK] unsigned char 
 25842 ;; Auto vars:     Size  Location     Type
 25843 ;;  grs             4  [STACK] unsigned long 
 25844 ;;  rem             4  [STACK] unsigned long 
 25845 ;;  new_exp         2  [STACK] short 
 25846 ;;  aexp            1  [STACK] unsigned char 
 25847 ;;  bexp            1  [STACK] unsigned char 
 25848 ;;  sign            1  [STACK] unsigned char 
 25849 ;; Return value:  Size  Location     Type
 25850 ;;                  4  [STACK] unsigned char 
 25851 ;; Registers used:
 25852 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 25853 ;; Tracked objects:
 25854 ;;		On entry : 0/0
 25855 ;;		On exit  : 0/0
 25856 ;;		Unchanged: 0/0
 25857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25862 ;;Total ram usage:        0 bytes
 25863 ;; Hardware stack levels used:    1
 25864 ;; Hardware stack levels required when called:   15
 25865 ;; This function calls:
 25866 ;;		Nothing
 25867 ;; This function is called by:
 25868 ;;		_conv_raw_result
 25869 ;;		_convert_dac_raw
 25870 ;;		_calc_bsoc
 25871 ;;		_init_bsoc
 25872 ;;		_esr_check
 25873 ;;		_efgtoa
 25874 ;; This function uses a reentrant model
 25875 ;;
 25876                           
 25877                           	psect	text105
 25878  014DEC                     __ptext105:
 25879                           	opt callstack 0
 25880  014DEC                     ___fldiv:
 25881                           	opt callstack 0
 25882                           
 25883                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 25884  014DEC  0E0D               	movlw	13
 25885  014DEE  26E1               	addwf	fsr1l,f,c
 25886  014DF0  0E00               	movlw	0
 25887  014DF2  22E2               	addwfc	fsr1h,f,c
 25888                           
 25889                           ;stkvar	_b @ sp[(-13)+-4]
 25890                           
 25891                           ;incstack = 0
 25892 ;; hardware stack exceeded
 25893  014DF4  0EF2               	movlw	242
 25894  014DF6  24E1               	addwf	fsr1l,w,c
 25895  014DF8  6ED9               	movwf	fsr2l,c
 25896  014DFA  0EFF               	movlw	255
 25897  014DFC  20E2               	addwfc	fsr1h,w,c
 25898  014DFE  6EDA               	movwf	fsr2h,c
 25899  014E00  50DF               	movf	indf2,w,c
 25900  014E02  6E0C               	movwf	(btemp+11)^0,c
 25901  014E04  0E80               	movlw	128
 25902  014E06  160C               	andwf	(btemp+11)^0,f,c
 25903                           
 25904                           ;stkvar	_sign @ sp[(-13)+12]
 25905  014E08  0EFF               	movlw	-1
 25906  014E0A  0060  F033  FFE3   	movff	btemp+11,plusw1
 25907                           
 25908                           ;stkvar	_b @ sp[(-13)+-4]
 25909  014E10  0EF2               	movlw	242
 25910  014E12  24E1               	addwf	fsr1l,w,c
 25911  014E14  6ED9               	movwf	fsr2l,c
 25912  014E16  0EFF               	movlw	255
 25913  014E18  20E2               	addwfc	fsr1h,w,c
 25914  014E1A  6EDA               	movwf	fsr2h,c
 25915  014E1C  50DF               	movf	indf2,w,c
 25916  014E1E  6E0C               	movwf	(btemp+11)^0,c
 25917  014E20  90D8               	bcf	status,0,c
 25918  014E22  340C               	rlcf	(btemp+11)^0,w,c
 25919  014E24  6E0B               	movwf	(btemp+10)^0,c
 25920                           
 25921                           ;stkvar	_bexp @ sp[(-13)+11]
 25922  014E26  0EFE               	movlw	-2
 25923  014E28  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25924                           
 25925                           ;stkvar	_b @ sp[(-13)+-4]
 25926  014E2E  0EF1               	movlw	241
 25927  014E30  24E1               	addwf	fsr1l,w,c
 25928  014E32  6ED9               	movwf	fsr2l,c
 25929  014E34  0EFF               	movlw	255
 25930  014E36  20E2               	addwfc	fsr1h,w,c
 25931  014E38  6EDA               	movwf	fsr2h,c
 25932  014E3A  AEDF               	btfss	indf2,7,c
 25933  014E3C  D002               	goto	l8416
 25934                           
 25935                           ;stkvar	_bexp @ sp[(-13)+11]
 25936  014E3E  0EFE               	movlw	-2
 25937  014E40  80E3               	bsf	plusw1,0,c
 25938  014E42                     l8416:
 25939                           
 25940                           ;stkvar	_bexp @ sp[(-13)+11]
 25941  014E42  0EFE               	movlw	-2
 25942  014E44  50E3               	movf	plusw1,w,c
 25943  014E46  B4D8               	btfsc	status,2,c
 25944  014E48  D027               	goto	l8426
 25945                           
 25946                           ;stkvar	_bexp @ sp[(-13)+11]
 25947  014E4A  0EFE               	movlw	-2
 25948  014E4C  28E3               	incf	plusw1,w,c
 25949  014E4E  A4D8               	btfss	status,2,c
 25950  014E50  D018               	goto	l8422
 25951  014E52  0E00               	movlw	0
 25952  014E54  6E09               	movwf	(btemp+8)^0,c
 25953  014E56  0E00               	movlw	0
 25954  014E58  6E0A               	movwf	(btemp+9)^0,c
 25955  014E5A  0E00               	movlw	0
 25956  014E5C  6E0B               	movwf	(btemp+10)^0,c
 25957  014E5E  0E00               	movlw	0
 25958  014E60  6E0C               	movwf	(btemp+11)^0,c
 25959                           
 25960                           ;stkvar	_b @ sp[(-13)+-4]
 25961  014E62  0EEF               	movlw	-17
 25962  014E64  0060  F027  FFE3   	movff	btemp+8,plusw1
 25963  014E6A  0EF0               	movlw	-16
 25964  014E6C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25965  014E72  0EF1               	movlw	-15
 25966  014E74  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25967  014E7A  0EF2               	movlw	-14
 25968  014E7C  0060  F033  FFE3   	movff	btemp+11,plusw1
 25969  014E82                     l8422:
 25970                           
 25971                           ;stkvar	_b @ sp[(-13)+-4]
 25972  014E82  0EF1               	movlw	-15
 25973  014E84  8EE3               	bsf	plusw1,7,c
 25974                           
 25975                           ;stkvar	_b @ sp[(-13)+-4]
 25976  014E86  0EF2               	movlw	242
 25977  014E88  24E1               	addwf	fsr1l,w,c
 25978  014E8A  6ED9               	movwf	fsr2l,c
 25979  014E8C  0EFF               	movlw	255
 25980  014E8E  20E2               	addwfc	fsr1h,w,c
 25981  014E90  6EDA               	movwf	fsr2h,c
 25982  014E92  0E00               	movlw	0
 25983  014E94  6EDF               	movwf	indf2,c
 25984  014E96  D018               	goto	l8428
 25985  014E98                     l8426:
 25986  014E98  0E00               	movlw	0
 25987  014E9A  6E09               	movwf	(btemp+8)^0,c
 25988  014E9C  0E00               	movlw	0
 25989  014E9E  6E0A               	movwf	(btemp+9)^0,c
 25990  014EA0  0E00               	movlw	0
 25991  014EA2  6E0B               	movwf	(btemp+10)^0,c
 25992  014EA4  0E00               	movlw	0
 25993  014EA6  6E0C               	movwf	(btemp+11)^0,c
 25994                           
 25995                           ;stkvar	_b @ sp[(-13)+-4]
 25996  014EA8  0EEF               	movlw	-17
 25997  014EAA  0060  F027  FFE3   	movff	btemp+8,plusw1
 25998  014EB0  0EF0               	movlw	-16
 25999  014EB2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26000  014EB8  0EF1               	movlw	-15
 26001  014EBA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26002  014EC0  0EF2               	movlw	-14
 26003  014EC2  0060  F033  FFE3   	movff	btemp+11,plusw1
 26004  014EC8                     l8428:
 26005                           
 26006                           ;stkvar	_a @ sp[(-13)+-8]
 26007  014EC8  0EEE               	movlw	238
 26008  014ECA  24E1               	addwf	fsr1l,w,c
 26009  014ECC  6ED9               	movwf	fsr2l,c
 26010  014ECE  0EFF               	movlw	255
 26011  014ED0  20E2               	addwfc	fsr1h,w,c
 26012  014ED2  6EDA               	movwf	fsr2h,c
 26013  014ED4  50DF               	movf	indf2,w,c
 26014  014ED6  6E0C               	movwf	(btemp+11)^0,c
 26015  014ED8  0E80               	movlw	128
 26016  014EDA  160C               	andwf	(btemp+11)^0,f,c
 26017                           
 26018                           ;stkvar	_sign @ sp[(-13)+12]
 26019  014EDC  50E1               	movf	fsr1l,w,c
 26020  014EDE  0FFF               	addlw	-1
 26021  014EE0  6ED9               	movwf	fsr2l,c
 26022  014EE2  50E2               	movf	fsr1h,w,c
 26023  014EE4  6EDA               	movwf	fsr2h,c
 26024  014EE6  0EFF               	movlw	255
 26025  014EE8  22DA               	addwfc	fsr2h,f,c
 26026  014EEA  500C               	movf	(btemp+11)^0,w,c
 26027  014EEC  1ADF               	xorwf	indf2,f,c
 26028                           
 26029                           ;stkvar	_a @ sp[(-13)+-8]
 26030  014EEE  0EEE               	movlw	238
 26031  014EF0  24E1               	addwf	fsr1l,w,c
 26032  014EF2  6ED9               	movwf	fsr2l,c
 26033  014EF4  0EFF               	movlw	255
 26034  014EF6  20E2               	addwfc	fsr1h,w,c
 26035  014EF8  6EDA               	movwf	fsr2h,c
 26036  014EFA  50DF               	movf	indf2,w,c
 26037  014EFC  6E0C               	movwf	(btemp+11)^0,c
 26038  014EFE  90D8               	bcf	status,0,c
 26039  014F00  340C               	rlcf	(btemp+11)^0,w,c
 26040  014F02  6E0B               	movwf	(btemp+10)^0,c
 26041                           
 26042                           ;stkvar	_aexp @ sp[(-13)+10]
 26043  014F04  0EFD               	movlw	-3
 26044  014F06  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26045                           
 26046                           ;stkvar	_a @ sp[(-13)+-8]
 26047  014F0C  0EED               	movlw	237
 26048  014F0E  24E1               	addwf	fsr1l,w,c
 26049  014F10  6ED9               	movwf	fsr2l,c
 26050  014F12  0EFF               	movlw	255
 26051  014F14  20E2               	addwfc	fsr1h,w,c
 26052  014F16  6EDA               	movwf	fsr2h,c
 26053  014F18  AEDF               	btfss	indf2,7,c
 26054  014F1A  D002               	goto	l8436
 26055                           
 26056                           ;stkvar	_aexp @ sp[(-13)+10]
 26057  014F1C  0EFD               	movlw	-3
 26058  014F1E  80E3               	bsf	plusw1,0,c
 26059  014F20                     l8436:
 26060                           
 26061                           ;stkvar	_aexp @ sp[(-13)+10]
 26062  014F20  0EFD               	movlw	-3
 26063  014F22  50E3               	movf	plusw1,w,c
 26064  014F24  B4D8               	btfsc	status,2,c
 26065  014F26  D027               	goto	l8446
 26066                           
 26067                           ;stkvar	_aexp @ sp[(-13)+10]
 26068  014F28  0EFD               	movlw	-3
 26069  014F2A  28E3               	incf	plusw1,w,c
 26070  014F2C  A4D8               	btfss	status,2,c
 26071  014F2E  D018               	goto	l8442
 26072  014F30  0E00               	movlw	0
 26073  014F32  6E09               	movwf	(btemp+8)^0,c
 26074  014F34  0E00               	movlw	0
 26075  014F36  6E0A               	movwf	(btemp+9)^0,c
 26076  014F38  0E00               	movlw	0
 26077  014F3A  6E0B               	movwf	(btemp+10)^0,c
 26078  014F3C  0E00               	movlw	0
 26079  014F3E  6E0C               	movwf	(btemp+11)^0,c
 26080                           
 26081                           ;stkvar	_a @ sp[(-13)+-8]
 26082  014F40  0EEB               	movlw	-21
 26083  014F42  0060  F027  FFE3   	movff	btemp+8,plusw1
 26084  014F48  0EEC               	movlw	-20
 26085  014F4A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26086  014F50  0EED               	movlw	-19
 26087  014F52  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26088  014F58  0EEE               	movlw	-18
 26089  014F5A  0060  F033  FFE3   	movff	btemp+11,plusw1
 26090  014F60                     l8442:
 26091                           
 26092                           ;stkvar	_a @ sp[(-13)+-8]
 26093  014F60  0EED               	movlw	-19
 26094  014F62  8EE3               	bsf	plusw1,7,c
 26095                           
 26096                           ;stkvar	_a @ sp[(-13)+-8]
 26097  014F64  0EEE               	movlw	238
 26098  014F66  24E1               	addwf	fsr1l,w,c
 26099  014F68  6ED9               	movwf	fsr2l,c
 26100  014F6A  0EFF               	movlw	255
 26101  014F6C  20E2               	addwfc	fsr1h,w,c
 26102  014F6E  6EDA               	movwf	fsr2h,c
 26103  014F70  0E00               	movlw	0
 26104  014F72  6EDF               	movwf	indf2,c
 26105  014F74  D018               	goto	l8448
 26106  014F76                     l8446:
 26107  014F76  0E00               	movlw	0
 26108  014F78  6E09               	movwf	(btemp+8)^0,c
 26109  014F7A  0E00               	movlw	0
 26110  014F7C  6E0A               	movwf	(btemp+9)^0,c
 26111  014F7E  0E00               	movlw	0
 26112  014F80  6E0B               	movwf	(btemp+10)^0,c
 26113  014F82  0E00               	movlw	0
 26114  014F84  6E0C               	movwf	(btemp+11)^0,c
 26115                           
 26116                           ;stkvar	_a @ sp[(-13)+-8]
 26117  014F86  0EEB               	movlw	-21
 26118  014F88  0060  F027  FFE3   	movff	btemp+8,plusw1
 26119  014F8E  0EEC               	movlw	-20
 26120  014F90  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26121  014F96  0EED               	movlw	-19
 26122  014F98  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26123  014F9E  0EEE               	movlw	-18
 26124  014FA0  0060  F033  FFE3   	movff	btemp+11,plusw1
 26125  014FA6                     l8448:
 26126                           
 26127                           ;stkvar	_a @ sp[(-13)+-8]
 26128  014FA6  0EEB               	movlw	-21
 26129  014FA8  50E3               	movf	plusw1,w,c
 26130  014FAA  E139               	bnz	l8460
 26131  014FAC  0EEC               	movlw	-20
 26132  014FAE  50E3               	movf	plusw1,w,c
 26133  014FB0  E136               	bnz	l8460
 26134  014FB2  0EED               	movlw	-19
 26135  014FB4  50E3               	movf	plusw1,w,c
 26136  014FB6  E133               	bnz	l8460
 26137  014FB8  0EEE               	movlw	-18
 26138  014FBA  50E3               	movf	plusw1,w,c
 26139  014FBC  A4D8               	btfss	status,2,c
 26140  014FBE  D02F               	goto	l8460
 26141                           
 26142                           ;stkvar	_b @ sp[(-13)+-4]
 26143  014FC0  0EEF               	movlw	-17
 26144  014FC2  6AE3               	clrf	plusw1,c
 26145  014FC4  0EF0               	movlw	-16
 26146  014FC6  6AE3               	clrf	plusw1,c
 26147  014FC8  0EF1               	movlw	-15
 26148  014FCA  6AE3               	clrf	plusw1,c
 26149  014FCC  0EF2               	movlw	-14
 26150  014FCE  6AE3               	clrf	plusw1,c
 26151                           
 26152                           ;stkvar	_b @ sp[(-13)+-4]
 26153  014FD0  0EF1               	movlw	241
 26154  014FD2  24E1               	addwf	fsr1l,w,c
 26155  014FD4  6ED9               	movwf	fsr2l,c
 26156  014FD6  0EFF               	movlw	255
 26157  014FD8  20E2               	addwfc	fsr1h,w,c
 26158  014FDA  6EDA               	movwf	fsr2h,c
 26159  014FDC  0E80               	movlw	128
 26160  014FDE  12DE               	iorwf	postinc2,f,c
 26161  014FE0  0E7F               	movlw	127
 26162  014FE2  12DD               	iorwf	postdec2,f,c
 26163  014FE4                     l8454:
 26164                           
 26165                           ;stkvar	_sign @ sp[(-13)+12]
 26166  014FE4  0EFF               	movlw	-1
 26167  014FE6  006F FF8C  F00C    	movff	plusw1,btemp+11
 26168                           
 26169                           ;stkvar	_b @ sp[(-13)+-4]
 26170  014FEC  0EF2               	movlw	242
 26171  014FEE  24E1               	addwf	fsr1l,w,c
 26172  014FF0  6ED9               	movwf	fsr2l,c
 26173  014FF2  0EFF               	movlw	255
 26174  014FF4  20E2               	addwfc	fsr1h,w,c
 26175  014FF6  6EDA               	movwf	fsr2h,c
 26176  014FF8  500C               	movf	(btemp+11)^0,w,c
 26177  014FFA  12DF               	iorwf	indf2,f,c
 26178                           
 26179                           ;stkvar	_b @ sp[(-13)+-4]
 26180  014FFC  0EEF               	movlw	-17
 26181  014FFE  006F FF8C  F001    	movff	plusw1,btemp
 26182  015004  0EF0               	movlw	-16
 26183  015006  006F FF8C  F002    	movff	plusw1,btemp+1
 26184  01500C  0EF1               	movlw	-15
 26185  01500E  006F FF8C  F003    	movff	plusw1,btemp+2
 26186  015014  0EF2               	movlw	-14
 26187  015016  006F FF8C  F004    	movff	plusw1,btemp+3
 26188  01501C  D19F               	goto	l3085
 26189  01501E                     l8460:
 26190                           
 26191                           ;stkvar	_bexp @ sp[(-13)+11]
 26192  01501E  0EFE               	movlw	-2
 26193  015020  50E3               	movf	plusw1,w,c
 26194  015022  A4D8               	btfss	status,2,c
 26195  015024  D009               	goto	l8468
 26196  015026  0E00               	movlw	0
 26197  015028  6E01               	movwf	btemp^0,c
 26198  01502A  0E00               	movlw	0
 26199  01502C  6E02               	movwf	(btemp+1)^0,c
 26200  01502E  0E00               	movlw	0
 26201  015030  6E03               	movwf	(btemp+2)^0,c
 26202  015032  0E00               	movlw	0
 26203  015034  6E04               	movwf	(btemp+3)^0,c
 26204  015036  D192               	goto	l3085
 26205  015038                     l8468:
 26206                           
 26207                           ;stkvar	_bexp @ sp[(-13)+11]
 26208  015038  0EFE               	movlw	-2
 26209  01503A  50E3               	movf	plusw1,w,c
 26210  01503C  6E0B               	movwf	(btemp+10)^0,c
 26211  01503E  6A0C               	clrf	(btemp+11)^0,c
 26212                           
 26213                           ;stkvar	_aexp @ sp[(-13)+10]
 26214  015040  0EFD               	movlw	-3
 26215  015042  50E3               	movf	plusw1,w,c
 26216  015044  5E0B               	subwf	(btemp+10)^0,f,c
 26217  015046  0E00               	movlw	0
 26218  015048  5A0C               	subwfb	(btemp+11)^0,f,c
 26219  01504A  0E7F               	movlw	127
 26220  01504C  260B               	addwf	(btemp+10)^0,f,c
 26221  01504E  0E00               	movlw	0
 26222  015050  220C               	addwfc	(btemp+11)^0,f,c
 26223                           
 26224                           ;stkvar	_new_exp @ sp[(-13)+8]
 26225  015052  0EFB               	movlw	-5
 26226  015054  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26227  01505A  0EFC               	movlw	-4
 26228  01505C  0060  F033  FFE3   	movff	btemp+11,plusw1
 26229                           
 26230                           ;stkvar	_b @ sp[(-13)+-4]
 26231  015062  0EEF               	movlw	-17
 26232  015064  006F FF8C  F009    	movff	plusw1,btemp+8
 26233  01506A  0EF0               	movlw	-16
 26234  01506C  006F FF8C  F00A    	movff	plusw1,btemp+9
 26235  015072  0EF1               	movlw	-15
 26236  015074  006F FF8C  F00B    	movff	plusw1,btemp+10
 26237  01507A  0EF2               	movlw	-14
 26238  01507C  006F FF8C  F00C    	movff	plusw1,btemp+11
 26239                           
 26240                           ;stkvar	_rem @ sp[(-13)+4]
 26241  015082  0EF7               	movlw	-9
 26242  015084  0060  F027  FFE3   	movff	btemp+8,plusw1
 26243  01508A  0EF8               	movlw	-8
 26244  01508C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26245  015092  0EF9               	movlw	-7
 26246  015094  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26247  01509A  0EFA               	movlw	-6
 26248  01509C  0060  F033  FFE3   	movff	btemp+11,plusw1
 26249                           
 26250                           ;stkvar	_b @ sp[(-13)+-4]
 26251  0150A2  0EEF               	movlw	-17
 26252  0150A4  6AE3               	clrf	plusw1,c
 26253  0150A6  0EF0               	movlw	-16
 26254  0150A8  6AE3               	clrf	plusw1,c
 26255  0150AA  0EF1               	movlw	-15
 26256  0150AC  6AE3               	clrf	plusw1,c
 26257  0150AE  0EF2               	movlw	-14
 26258  0150B0  6AE3               	clrf	plusw1,c
 26259                           
 26260                           ;stkvar	_grs @ sp[(-13)+0]
 26261  0150B2  0EF3               	movlw	-13
 26262  0150B4  6AE3               	clrf	plusw1,c
 26263  0150B6  0EF4               	movlw	-12
 26264  0150B8  6AE3               	clrf	plusw1,c
 26265  0150BA  0EF5               	movlw	-11
 26266  0150BC  6AE3               	clrf	plusw1,c
 26267  0150BE  0EF6               	movlw	-10
 26268  0150C0  6AE3               	clrf	plusw1,c
 26269                           
 26270                           ;stkvar	_aexp @ sp[(-13)+10]
 26271  0150C2  0EFD               	movlw	-3
 26272  0150C4  6AE3               	clrf	plusw1,c
 26273  0150C6  D050               	goto	l8496
 26274  0150C8                     l8478:
 26275                           
 26276                           ;stkvar	_aexp @ sp[(-13)+10]
 26277  0150C8  0EFD               	movlw	-3
 26278  0150CA  50E3               	movf	plusw1,w,c
 26279  0150CC  B4D8               	btfsc	status,2,c
 26280  0150CE  D020               	goto	l8488
 26281                           
 26282                           ;stkvar	_rem @ sp[(-13)+4]
 26283  0150D0  90D8               	bcf	status,0,c
 26284  0150D2  0EF7               	movlw	-9
 26285  0150D4  36E3               	rlcf	plusw1,f,c
 26286  0150D6  0EF8               	movlw	-8
 26287  0150D8  36E3               	rlcf	plusw1,f,c
 26288  0150DA  0EF9               	movlw	-7
 26289  0150DC  36E3               	rlcf	plusw1,f,c
 26290  0150DE  0EFA               	movlw	-6
 26291  0150E0  36E3               	rlcf	plusw1,f,c
 26292                           
 26293                           ;stkvar	_b @ sp[(-13)+-4]
 26294  0150E2  90D8               	bcf	status,0,c
 26295  0150E4  0EEF               	movlw	-17
 26296  0150E6  36E3               	rlcf	plusw1,f,c
 26297  0150E8  0EF0               	movlw	-16
 26298  0150EA  36E3               	rlcf	plusw1,f,c
 26299  0150EC  0EF1               	movlw	-15
 26300  0150EE  36E3               	rlcf	plusw1,f,c
 26301  0150F0  0EF2               	movlw	-14
 26302  0150F2  36E3               	rlcf	plusw1,f,c
 26303                           
 26304                           ;stkvar	_grs @ sp[(-13)+0]
 26305  0150F4  0EF6               	movlw	-10
 26306  0150F6  AEE3               	btfss	plusw1,7,c
 26307  0150F8  D002               	goto	l8486
 26308                           
 26309                           ;stkvar	_b @ sp[(-13)+-4]
 26310  0150FA  0EEF               	movlw	-17
 26311  0150FC  80E3               	bsf	plusw1,0,c
 26312  0150FE                     l8486:
 26313                           
 26314                           ;stkvar	_grs @ sp[(-13)+0]
 26315  0150FE  90D8               	bcf	status,0,c
 26316  015100  0EF3               	movlw	-13
 26317  015102  36E3               	rlcf	plusw1,f,c
 26318  015104  0EF4               	movlw	-12
 26319  015106  36E3               	rlcf	plusw1,f,c
 26320  015108  0EF5               	movlw	-11
 26321  01510A  36E3               	rlcf	plusw1,f,c
 26322  01510C  0EF6               	movlw	-10
 26323  01510E  36E3               	rlcf	plusw1,f,c
 26324  015110                     l8488:
 26325                           
 26326                           ;stkvar	_a @ sp[(-13)+-8]
 26327                           ;stkvar	_rem @ sp[(-13)+4]
 26328  015110  50E1               	movf	fsr1l,w,c
 26329  015112  0FF7               	addlw	-9
 26330  015114  6ED9               	movwf	fsr2l,c
 26331  015116  50E2               	movf	fsr1h,w,c
 26332  015118  6EDA               	movwf	fsr2h,c
 26333  01511A  0EFF               	movlw	255
 26334  01511C  22DA               	addwfc	fsr2h,f,c
 26335  01511E  0EEB               	movlw	-21
 26336  015120  50E3               	movf	plusw1,w,c
 26337  015122  5CDE               	subwf	postinc2,w,c
 26338  015124  0EEC               	movlw	-20
 26339  015126  50E3               	movf	plusw1,w,c
 26340  015128  58DE               	subwfb	postinc2,w,c
 26341  01512A  0EED               	movlw	-19
 26342  01512C  50E3               	movf	plusw1,w,c
 26343  01512E  58DE               	subwfb	postinc2,w,c
 26344  015130  0EEE               	movlw	-18
 26345  015132  50E3               	movf	plusw1,w,c
 26346  015134  58DE               	subwfb	postinc2,w,c
 26347  015136  A0D8               	btfss	status,0,c
 26348  015138  D015               	goto	l8494
 26349                           
 26350                           ;stkvar	_grs @ sp[(-13)+0]
 26351  01513A  0EF6               	movlw	-10
 26352  01513C  8CE3               	bsf	plusw1,6,c
 26353                           
 26354                           ;stkvar	_a @ sp[(-13)+-8]
 26355                           ;stkvar	_rem @ sp[(-13)+4]
 26356  01513E  50E1               	movf	fsr1l,w,c
 26357  015140  0FF7               	addlw	-9
 26358  015142  6ED9               	movwf	fsr2l,c
 26359  015144  50E2               	movf	fsr1h,w,c
 26360  015146  6EDA               	movwf	fsr2h,c
 26361  015148  0EFF               	movlw	255
 26362  01514A  22DA               	addwfc	fsr2h,f,c
 26363  01514C  0EEB               	movlw	-21
 26364  01514E  50E3               	movf	plusw1,w,c
 26365  015150  5EDE               	subwf	postinc2,f,c
 26366  015152  0EEC               	movlw	-20
 26367  015154  50E3               	movf	plusw1,w,c
 26368  015156  5ADE               	subwfb	postinc2,f,c
 26369  015158  0EED               	movlw	-19
 26370  01515A  50E3               	movf	plusw1,w,c
 26371  01515C  5ADE               	subwfb	postinc2,f,c
 26372  01515E  0EEE               	movlw	-18
 26373  015160  50E3               	movf	plusw1,w,c
 26374  015162  5ADE               	subwfb	postinc2,f,c
 26375  015164                     l8494:
 26376                           
 26377                           ;stkvar	_aexp @ sp[(-13)+10]
 26378  015164  0EFD               	movlw	-3
 26379  015166  2AE3               	incf	plusw1,f,c
 26380  015168                     l8496:
 26381                           
 26382                           ;stkvar	_aexp @ sp[(-13)+10]
 26383  015168  0EFD               	movlw	-3
 26384  01516A  006F FF8C  F001    	movff	plusw1,btemp
 26385  015170  0E19               	movlw	25
 26386  015172  6401               	cpfsgt	btemp^0,c
 26387  015174  D7A9               	goto	l8478
 26388                           
 26389                           ;stkvar	_rem @ sp[(-13)+4]
 26390  015176  0EF7               	movlw	-9
 26391  015178  50E3               	movf	plusw1,w,c
 26392  01517A  E10A               	bnz	u6750
 26393  01517C  0EF8               	movlw	-8
 26394  01517E  50E3               	movf	plusw1,w,c
 26395  015180  E107               	bnz	u6750
 26396  015182  0EF9               	movlw	-7
 26397  015184  50E3               	movf	plusw1,w,c
 26398  015186  E104               	bnz	u6750
 26399  015188  0EFA               	movlw	-6
 26400  01518A  50E3               	movf	plusw1,w,c
 26401  01518C  B4D8               	btfsc	status,2,c
 26402  01518E  D024               	goto	l8512
 26403  015190                     u6750:
 26404                           
 26405                           ;stkvar	_grs @ sp[(-13)+0]
 26406  015190  0EF3               	movlw	-13
 26407  015192  80E3               	bsf	plusw1,0,c
 26408  015194  D021               	goto	l8512
 26409  015196                     l8502:
 26410                           
 26411                           ;stkvar	_b @ sp[(-13)+-4]
 26412  015196  90D8               	bcf	status,0,c
 26413  015198  0EEF               	movlw	-17
 26414  01519A  36E3               	rlcf	plusw1,f,c
 26415  01519C  0EF0               	movlw	-16
 26416  01519E  36E3               	rlcf	plusw1,f,c
 26417  0151A0  0EF1               	movlw	-15
 26418  0151A2  36E3               	rlcf	plusw1,f,c
 26419  0151A4  0EF2               	movlw	-14
 26420  0151A6  36E3               	rlcf	plusw1,f,c
 26421                           
 26422                           ;stkvar	_grs @ sp[(-13)+0]
 26423  0151A8  0EF6               	movlw	-10
 26424  0151AA  AEE3               	btfss	plusw1,7,c
 26425  0151AC  D002               	goto	l8508
 26426                           
 26427                           ;stkvar	_b @ sp[(-13)+-4]
 26428  0151AE  0EEF               	movlw	-17
 26429  0151B0  80E3               	bsf	plusw1,0,c
 26430  0151B2                     l8508:
 26431                           
 26432                           ;stkvar	_grs @ sp[(-13)+0]
 26433  0151B2  90D8               	bcf	status,0,c
 26434  0151B4  0EF3               	movlw	-13
 26435  0151B6  36E3               	rlcf	plusw1,f,c
 26436  0151B8  0EF4               	movlw	-12
 26437  0151BA  36E3               	rlcf	plusw1,f,c
 26438  0151BC  0EF5               	movlw	-11
 26439  0151BE  36E3               	rlcf	plusw1,f,c
 26440  0151C0  0EF6               	movlw	-10
 26441  0151C2  36E3               	rlcf	plusw1,f,c
 26442                           
 26443                           ;stkvar	_new_exp @ sp[(-13)+8]
 26444  0151C4  50E1               	movf	fsr1l,w,c
 26445  0151C6  0FFB               	addlw	-5
 26446  0151C8  6ED9               	movwf	fsr2l,c
 26447  0151CA  50E2               	movf	fsr1h,w,c
 26448  0151CC  6EDA               	movwf	fsr2h,c
 26449  0151CE  0EFF               	movlw	255
 26450  0151D0  22DA               	addwfc	fsr2h,f,c
 26451  0151D2  06DE               	decf	postinc2,f,c
 26452  0151D4  0E00               	movlw	0
 26453  0151D6  5ADD               	subwfb	postdec2,f,c
 26454  0151D8                     l8512:
 26455                           
 26456                           ;stkvar	_b @ sp[(-13)+-4]
 26457  0151D8  0EF1               	movlw	-15
 26458  0151DA  AEE3               	btfss	plusw1,7,c
 26459  0151DC  D7DC               	goto	l8502
 26460                           
 26461                           ;stkvar	_aexp @ sp[(-13)+10]
 26462  0151DE  0EFD               	movlw	-3
 26463  0151E0  6AE3               	clrf	plusw1,c
 26464                           
 26465                           ;stkvar	_grs @ sp[(-13)+0]
 26466  0151E2  0EF6               	movlw	-10
 26467  0151E4  AEE3               	btfss	plusw1,7,c
 26468  0151E6  D020               	goto	l8526
 26469                           
 26470                           ;stkvar	_grs @ sp[(-13)+0]
 26471  0151E8  50E1               	movf	fsr1l,w,c
 26472  0151EA  0FF3               	addlw	-13
 26473  0151EC  6ED9               	movwf	fsr2l,c
 26474  0151EE  50E2               	movf	fsr1h,w,c
 26475  0151F0  6EDA               	movwf	fsr2h,c
 26476  0151F2  0EFF               	movlw	255
 26477  0151F4  22DA               	addwfc	fsr2h,f,c
 26478  0151F6  0EFF               	movlw	255
 26479  0151F8  14DE               	andwf	postinc2,w,c
 26480  0151FA  6E09               	movwf	(btemp+8)^0,c
 26481  0151FC  0EFF               	movlw	255
 26482  0151FE  14DE               	andwf	postinc2,w,c
 26483  015200  6E0A               	movwf	(btemp+9)^0,c
 26484  015202  0EFF               	movlw	255
 26485  015204  14DE               	andwf	postinc2,w,c
 26486  015206  6E0B               	movwf	(btemp+10)^0,c
 26487  015208  0E7F               	movlw	127
 26488  01520A  14DE               	andwf	postinc2,w,c
 26489  01520C  6E0C               	movwf	(btemp+11)^0,c
 26490  01520E  5009               	movf	(btemp+8)^0,w,c
 26491  015210  100A               	iorwf	(btemp+9)^0,w,c
 26492  015212  100B               	iorwf	(btemp+10)^0,w,c
 26493  015214  100C               	iorwf	(btemp+11)^0,w,c
 26494  015216  B4D8               	btfsc	status,2,c
 26495  015218  D004               	goto	l8522
 26496  01521A                     u6790:
 26497                           
 26498                           ;stkvar	_aexp @ sp[(-13)+10]
 26499  01521A  0EFD               	movlw	-3
 26500  01521C  6AE3               	clrf	plusw1,c
 26501  01521E  2AE3               	incf	plusw1,f,c
 26502  015220  D003               	goto	l8526
 26503  015222                     l8522:
 26504                           
 26505                           ;stkvar	_b @ sp[(-13)+-4]
 26506  015222  0EEF               	movlw	-17
 26507  015224  B0E3               	btfsc	plusw1,0,c
 26508  015226  D7F9               	goto	u6790
 26509  015228                     l8526:
 26510                           
 26511                           ;stkvar	_aexp @ sp[(-13)+10]
 26512  015228  0EFD               	movlw	-3
 26513  01522A  50E3               	movf	plusw1,w,c
 26514  01522C  B4D8               	btfsc	status,2,c
 26515  01522E  D036               	goto	l8536
 26516                           
 26517                           ;stkvar	_b @ sp[(-13)+-4]
 26518  015230  50E1               	movf	fsr1l,w,c
 26519  015232  0FEF               	addlw	-17
 26520  015234  6ED9               	movwf	fsr2l,c
 26521  015236  50E2               	movf	fsr1h,w,c
 26522  015238  6EDA               	movwf	fsr2h,c
 26523  01523A  0EFF               	movlw	255
 26524  01523C  22DA               	addwfc	fsr2h,f,c
 26525  01523E  2ADE               	incf	postinc2,f,c
 26526  015240  0E00               	movlw	0
 26527  015242  22DE               	addwfc	postinc2,f,c
 26528  015244  22DE               	addwfc	postinc2,f,c
 26529  015246  22DE               	addwfc	postinc2,f,c
 26530                           
 26531                           ;stkvar	_b @ sp[(-13)+-4]
 26532  015248  0EF2               	movlw	-14
 26533  01524A  A0E3               	btfss	plusw1,0,c
 26534  01524C  D027               	goto	l8536
 26535  01524E  0E01               	movlw	1
 26536  015250  6E0C               	movwf	(btemp+11)^0,c
 26537                           
 26538                           ;stkvar	_b @ sp[(-13)+-4]
 26539  015252  50E1               	movf	fsr1l,w,c
 26540  015254  0FEF               	addlw	-17
 26541  015256  6ED9               	movwf	fsr2l,c
 26542  015258  50E2               	movf	fsr1h,w,c
 26543  01525A  6EDA               	movwf	fsr2h,c
 26544  01525C  0EFF               	movlw	255
 26545  01525E  22DA               	addwfc	fsr2h,f,c
 26546  015260  280C               	incf	(btemp+11)^0,w,c
 26547  015262  52DE               	movf	postinc2,f,c
 26548  015264  D008               	goto	u6830
 26549  015266                     u6835:
 26550  015266  52DE               	movf	postinc2,f,c
 26551  015268  90D8               	bcf	status,0,c
 26552  01526A  BEDC               	btfsc	preinc2,7,c
 26553  01526C  80D8               	bsf	status,0,c
 26554  01526E  32DD               	rrcf	postdec2,f,c
 26555  015270  32DD               	rrcf	postdec2,f,c
 26556  015272  32DD               	rrcf	postdec2,f,c
 26557  015274  32DE               	rrcf	postinc2,f,c
 26558  015276                     u6830:
 26559  015276  2EE8               	decfsz	wreg,f,c
 26560  015278  D7F6               	goto	u6835
 26561                           
 26562                           ;stkvar	_new_exp @ sp[(-13)+8]
 26563  01527A  0EFB               	movlw	-5
 26564  01527C  50E3               	movf	plusw1,w,c
 26565  01527E  0F01               	addlw	1
 26566  015280  6E01               	movwf	btemp^0,c
 26567  015282  0EFB               	movlw	-5
 26568  015284  0060  F007  FFE3   	movff	btemp,plusw1
 26569  01528A  6A01               	clrf	btemp^0,c
 26570  01528C  0EFC               	movlw	-4
 26571  01528E  50E3               	movf	plusw1,w,c
 26572  015290  2001               	addwfc	btemp^0,w,c
 26573  015292  6E01               	movwf	btemp^0,c
 26574  015294  0EFC               	movlw	-4
 26575  015296  0060  F007  FFE3   	movff	btemp,plusw1
 26576  01529C                     l8536:
 26577                           
 26578                           ;stkvar	_new_exp @ sp[(-13)+8]
 26579  01529C  0EFC               	movlw	-4
 26580  01529E  BEE3               	btfsc	plusw1,7,c
 26581  0152A0  D01B               	goto	l8542
 26582  0152A2  0EFC               	movlw	-4
 26583  0152A4  50E3               	movf	plusw1,w,c
 26584  0152A6  E104               	bnz	u6840
 26585  0152A8  0EFB               	movlw	-5
 26586  0152AA  28E3               	incf	plusw1,w,c
 26587  0152AC  A0D8               	btfss	status,0,c
 26588  0152AE  D014               	goto	l8542
 26589  0152B0                     u6840:
 26590  0152B0  0EFF               	movlw	255
 26591  0152B2  6E0B               	movwf	(btemp+10)^0,c
 26592  0152B4  0E00               	movlw	0
 26593  0152B6  6E0C               	movwf	(btemp+11)^0,c
 26594                           
 26595                           ;stkvar	_new_exp @ sp[(-13)+8]
 26596  0152B8  0EFB               	movlw	-5
 26597  0152BA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26598  0152C0  0EFC               	movlw	-4
 26599  0152C2  0060  F033  FFE3   	movff	btemp+11,plusw1
 26600                           
 26601                           ;stkvar	_b @ sp[(-13)+-4]
 26602  0152C8  0EEF               	movlw	-17
 26603  0152CA  6AE3               	clrf	plusw1,c
 26604  0152CC  0EF0               	movlw	-16
 26605  0152CE  6AE3               	clrf	plusw1,c
 26606  0152D0  0EF1               	movlw	-15
 26607  0152D2  6AE3               	clrf	plusw1,c
 26608  0152D4  0EF2               	movlw	-14
 26609  0152D6  6AE3               	clrf	plusw1,c
 26610  0152D8                     l8542:
 26611                           
 26612                           ;stkvar	_new_exp @ sp[(-13)+8]
 26613  0152D8  0EFC               	movlw	-4
 26614  0152DA  BEE3               	btfsc	plusw1,7,c
 26615  0152DC  D007               	goto	u6850
 26616  0152DE  0EFC               	movlw	-4
 26617  0152E0  50E3               	movf	plusw1,w,c
 26618  0152E2  E112               	bnz	l8548
 26619  0152E4  0EFB               	movlw	-5
 26620  0152E6  04E3               	decf	plusw1,w,c
 26621  0152E8  B0D8               	btfsc	status,0,c
 26622  0152EA  D00E               	goto	l8548
 26623  0152EC                     u6850:
 26624                           
 26625                           ;stkvar	_new_exp @ sp[(-13)+8]
 26626  0152EC  0EFB               	movlw	-5
 26627  0152EE  6AE3               	clrf	plusw1,c
 26628  0152F0  0EFC               	movlw	-4
 26629  0152F2  6AE3               	clrf	plusw1,c
 26630                           
 26631                           ;stkvar	_b @ sp[(-13)+-4]
 26632  0152F4  0EEF               	movlw	-17
 26633  0152F6  6AE3               	clrf	plusw1,c
 26634  0152F8  0EF0               	movlw	-16
 26635  0152FA  6AE3               	clrf	plusw1,c
 26636  0152FC  0EF1               	movlw	-15
 26637  0152FE  6AE3               	clrf	plusw1,c
 26638  015300  0EF2               	movlw	-14
 26639  015302  6AE3               	clrf	plusw1,c
 26640                           
 26641                           ;stkvar	_sign @ sp[(-13)+12]
 26642  015304  0EFF               	movlw	-1
 26643  015306  6AE3               	clrf	plusw1,c
 26644  015308                     l8548:
 26645                           
 26646                           ;stkvar	_new_exp @ sp[(-13)+8]
 26647                           ;stkvar	_bexp @ sp[(-13)+11]
 26648  015308  0EFB               	movlw	-5
 26649  01530A  006F FF8C  F001    	movff	plusw1,btemp
 26650  015310  0EFE               	movlw	-2
 26651  015312  0060  F007  FFE3   	movff	btemp,plusw1
 26652                           
 26653                           ;stkvar	_bexp @ sp[(-13)+11]
 26654  015318  0EFE               	movlw	-2
 26655  01531A  A0E3               	btfss	plusw1,0,c
 26656  01531C  D009               	goto	l8554
 26657                           
 26658                           ;stkvar	_b @ sp[(-13)+-4]
 26659  01531E  0EF1               	movlw	241
 26660  015320  24E1               	addwf	fsr1l,w,c
 26661  015322  6ED9               	movwf	fsr2l,c
 26662  015324  0EFF               	movlw	255
 26663  015326  20E2               	addwfc	fsr1h,w,c
 26664  015328  6EDA               	movwf	fsr2h,c
 26665  01532A  0E00               	movlw	0
 26666  01532C  8EDB               	bsf	plusw2,7,c
 26667  01532E  D008               	goto	l8556
 26668  015330                     l8554:
 26669                           
 26670                           ;stkvar	_b @ sp[(-13)+-4]
 26671  015330  0EF1               	movlw	241
 26672  015332  24E1               	addwf	fsr1l,w,c
 26673  015334  6ED9               	movwf	fsr2l,c
 26674  015336  0EFF               	movlw	255
 26675  015338  20E2               	addwfc	fsr1h,w,c
 26676  01533A  6EDA               	movwf	fsr2h,c
 26677  01533C  0E7F               	movlw	127
 26678  01533E  16DF               	andwf	indf2,f,c
 26679  015340                     l8556:
 26680                           
 26681                           ;stkvar	_b @ sp[(-13)+-4]
 26682  015340  0EF2               	movlw	242
 26683  015342  24E1               	addwf	fsr1l,w,c
 26684  015344  6ED9               	movwf	fsr2l,c
 26685  015346  0EFF               	movlw	255
 26686  015348  20E2               	addwfc	fsr1h,w,c
 26687  01534A  6EDA               	movwf	fsr2h,c
 26688                           
 26689                           ;stkvar	_bexp @ sp[(-13)+11]
 26690  01534C  0EFE               	movlw	-2
 26691  01534E  006F FF8C  F00C    	movff	plusw1,btemp+11
 26692  015354  90D8               	bcf	status,0,c
 26693  015356  300C               	rrcf	(btemp+11)^0,w,c
 26694  015358  6EDF               	movwf	indf2,c
 26695  01535A  D644               	goto	l8454
 26696  01535C                     l3085:
 26697                           
 26698                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 26699  01535C  0EEB               	movlw	235
 26700  01535E  26E1               	addwf	fsr1l,f,c
 26701  015360  0EFF               	movlw	255
 26702  015362  22E2               	addwfc	fsr1h,f,c
 26703  015364  0012               	return		;funcret
 26704  015366                     __end_of___fldiv:
 26705                           	opt callstack 0
 26706                           
 26707 ;; *************** function ___flge *****************
 26708 ;; Defined at:
 26709 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 26710 ;; Parameters:    Size  Location     Type
 26711 ;;  ff1             4  [STACK] unsigned char 
 26712 ;;  ff2             4  [STACK] unsigned char 
 26713 ;; Auto vars:     Size  Location     Type
 26714 ;;		None
 26715 ;; Return value:  Size  Location     Type
 26716 ;;		None               void
 26717 ;; Registers used:
 26718 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 26719 ;; Tracked objects:
 26720 ;;		On entry : 0/0
 26721 ;;		On exit  : 0/0
 26722 ;;		Unchanged: 0/0
 26723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26728 ;;Total ram usage:        0 bytes
 26729 ;; Hardware stack levels used:    1
 26730 ;; Hardware stack levels required when called:   15
 26731 ;; This function calls:
 26732 ;;		Nothing
 26733 ;; This function is called by:
 26734 ;;		_main
 26735 ;;		_convert_dac_raw
 26736 ;;		_calc_ror_data
 26737 ;;		_check_day_time
 26738 ;;		_calc_bsoc
 26739 ;;		_efgtoa
 26740 ;; This function uses a reentrant model
 26741 ;;
 26742                           
 26743                           	psect	text106
 26744  019238                     __ptext106:
 26745                           	opt callstack 0
 26746  019238                     ___flge:
 26747                           	opt callstack 0
 26748                           
 26749                           ;stkvar	_ff1 @ sp[(0)+-4]
 26750                           
 26751                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26752                           ;incstack = 0
 26753 ;; hardware stack exceeded
 26754  019238  50E1               	movf	fsr1l,w,c
 26755  01923A  0FFC               	addlw	-4
 26756  01923C  6ED9               	movwf	fsr2l,c
 26757  01923E  50E2               	movf	fsr1h,w,c
 26758  019240  6EDA               	movwf	fsr2h,c
 26759  019242  0EFF               	movlw	255
 26760  019244  22DA               	addwfc	fsr2h,f,c
 26761  019246  0E00               	movlw	0
 26762  019248  14DE               	andwf	postinc2,w,c
 26763  01924A  6E09               	movwf	(btemp+8)^0,c
 26764  01924C  0E00               	movlw	0
 26765  01924E  14DE               	andwf	postinc2,w,c
 26766  019250  6E0A               	movwf	(btemp+9)^0,c
 26767  019252  0E80               	movlw	128
 26768  019254  14DE               	andwf	postinc2,w,c
 26769  019256  6E0B               	movwf	(btemp+10)^0,c
 26770  019258  0E7F               	movlw	127
 26771  01925A  14DE               	andwf	postinc2,w,c
 26772  01925C  6E0C               	movwf	(btemp+11)^0,c
 26773  01925E  5009               	movf	(btemp+8)^0,w,c
 26774  019260  100A               	iorwf	(btemp+9)^0,w,c
 26775  019262  100B               	iorwf	(btemp+10)^0,w,c
 26776  019264  100C               	iorwf	(btemp+11)^0,w,c
 26777  019266  A4D8               	btfss	status,2,c
 26778  019268  D008               	goto	l8830
 26779                           
 26780                           ;stkvar	_ff1 @ sp[(0)+-4]
 26781  01926A  0EFC               	movlw	-4
 26782  01926C  6AE3               	clrf	plusw1,c
 26783  01926E  0EFD               	movlw	-3
 26784  019270  6AE3               	clrf	plusw1,c
 26785  019272  0EFE               	movlw	-2
 26786  019274  6AE3               	clrf	plusw1,c
 26787  019276  0EFF               	movlw	-1
 26788  019278  6AE3               	clrf	plusw1,c
 26789  01927A                     l8830:
 26790                           
 26791                           ;stkvar	_ff2 @ sp[(0)+-8]
 26792  01927A  50E1               	movf	fsr1l,w,c
 26793  01927C  0FF8               	addlw	-8
 26794  01927E  6ED9               	movwf	fsr2l,c
 26795  019280  50E2               	movf	fsr1h,w,c
 26796  019282  6EDA               	movwf	fsr2h,c
 26797  019284  0EFF               	movlw	255
 26798  019286  22DA               	addwfc	fsr2h,f,c
 26799  019288  0E00               	movlw	0
 26800  01928A  14DE               	andwf	postinc2,w,c
 26801  01928C  6E09               	movwf	(btemp+8)^0,c
 26802  01928E  0E00               	movlw	0
 26803  019290  14DE               	andwf	postinc2,w,c
 26804  019292  6E0A               	movwf	(btemp+9)^0,c
 26805  019294  0E80               	movlw	128
 26806  019296  14DE               	andwf	postinc2,w,c
 26807  019298  6E0B               	movwf	(btemp+10)^0,c
 26808  01929A  0E7F               	movlw	127
 26809  01929C  14DE               	andwf	postinc2,w,c
 26810  01929E  6E0C               	movwf	(btemp+11)^0,c
 26811  0192A0  5009               	movf	(btemp+8)^0,w,c
 26812  0192A2  100A               	iorwf	(btemp+9)^0,w,c
 26813  0192A4  100B               	iorwf	(btemp+10)^0,w,c
 26814  0192A6  100C               	iorwf	(btemp+11)^0,w,c
 26815  0192A8  A4D8               	btfss	status,2,c
 26816  0192AA  D008               	goto	l2766
 26817                           
 26818                           ;stkvar	_ff2 @ sp[(0)+-8]
 26819  0192AC  0EF8               	movlw	-8
 26820  0192AE  6AE3               	clrf	plusw1,c
 26821  0192B0  0EF9               	movlw	-7
 26822  0192B2  6AE3               	clrf	plusw1,c
 26823  0192B4  0EFA               	movlw	-6
 26824  0192B6  6AE3               	clrf	plusw1,c
 26825  0192B8  0EFB               	movlw	-5
 26826  0192BA  6AE3               	clrf	plusw1,c
 26827  0192BC                     l2766:
 26828                           
 26829                           ;stkvar	_ff1 @ sp[(0)+-4]
 26830  0192BC  0EFF               	movlw	-1
 26831  0192BE  AEE3               	btfss	plusw1,7,c
 26832  0192C0  D024               	goto	l8836
 26833                           
 26834                           ;stkvar	_ff1 @ sp[(0)+-4]
 26835  0192C2  0E00               	movlw	0
 26836  0192C4  6E09               	movwf	(btemp+8)^0,c
 26837  0192C6  0E00               	movlw	0
 26838  0192C8  6E0A               	movwf	(btemp+9)^0,c
 26839  0192CA  0E00               	movlw	0
 26840  0192CC  6E0B               	movwf	(btemp+10)^0,c
 26841  0192CE  0E80               	movlw	128
 26842  0192D0  6E0C               	movwf	(btemp+11)^0,c
 26843  0192D2  0EFC               	movlw	-4
 26844  0192D4  50E3               	movf	plusw1,w,c
 26845  0192D6  5E09               	subwf	(btemp+8)^0,f,c
 26846  0192D8  0EFD               	movlw	-3
 26847  0192DA  50E3               	movf	plusw1,w,c
 26848  0192DC  5A0A               	subwfb	(btemp+9)^0,f,c
 26849  0192DE  0EFE               	movlw	-2
 26850  0192E0  50E3               	movf	plusw1,w,c
 26851  0192E2  5A0B               	subwfb	(btemp+10)^0,f,c
 26852  0192E4  0EFF               	movlw	-1
 26853  0192E6  50E3               	movf	plusw1,w,c
 26854  0192E8  5A0C               	subwfb	(btemp+11)^0,f,c
 26855                           
 26856                           ;stkvar	_ff1 @ sp[(0)+-4]
 26857  0192EA  0EFC               	movlw	-4
 26858  0192EC  0060  F027  FFE3   	movff	btemp+8,plusw1
 26859  0192F2  0EFD               	movlw	-3
 26860  0192F4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26861  0192FA  0EFE               	movlw	-2
 26862  0192FC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26863  019302  0EFF               	movlw	-1
 26864  019304  0060  F033  FFE3   	movff	btemp+11,plusw1
 26865  01930A                     l8836:
 26866                           
 26867                           ;stkvar	_ff2 @ sp[(0)+-8]
 26868  01930A  0EFB               	movlw	-5
 26869  01930C  AEE3               	btfss	plusw1,7,c
 26870  01930E  D024               	goto	l8840
 26871                           
 26872                           ;stkvar	_ff2 @ sp[(0)+-8]
 26873  019310  0E00               	movlw	0
 26874  019312  6E09               	movwf	(btemp+8)^0,c
 26875  019314  0E00               	movlw	0
 26876  019316  6E0A               	movwf	(btemp+9)^0,c
 26877  019318  0E00               	movlw	0
 26878  01931A  6E0B               	movwf	(btemp+10)^0,c
 26879  01931C  0E80               	movlw	128
 26880  01931E  6E0C               	movwf	(btemp+11)^0,c
 26881  019320  0EF8               	movlw	-8
 26882  019322  50E3               	movf	plusw1,w,c
 26883  019324  5E09               	subwf	(btemp+8)^0,f,c
 26884  019326  0EF9               	movlw	-7
 26885  019328  50E3               	movf	plusw1,w,c
 26886  01932A  5A0A               	subwfb	(btemp+9)^0,f,c
 26887  01932C  0EFA               	movlw	-6
 26888  01932E  50E3               	movf	plusw1,w,c
 26889  019330  5A0B               	subwfb	(btemp+10)^0,f,c
 26890  019332  0EFB               	movlw	-5
 26891  019334  50E3               	movf	plusw1,w,c
 26892  019336  5A0C               	subwfb	(btemp+11)^0,f,c
 26893                           
 26894                           ;stkvar	_ff2 @ sp[(0)+-8]
 26895  019338  0EF8               	movlw	-8
 26896  01933A  0060  F027  FFE3   	movff	btemp+8,plusw1
 26897  019340  0EF9               	movlw	-7
 26898  019342  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26899  019348  0EFA               	movlw	-6
 26900  01934A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26901  019350  0EFB               	movlw	-5
 26902  019352  0060  F033  FFE3   	movff	btemp+11,plusw1
 26903  019358                     l8840:
 26904                           
 26905                           ;stkvar	_ff1 @ sp[(0)+-4]
 26906  019358  0EFF               	movlw	-1
 26907  01935A  7EE3               	btg	plusw1,7,c
 26908                           
 26909                           ;stkvar	_ff2 @ sp[(0)+-8]
 26910  01935C  0EFB               	movlw	-5
 26911  01935E  7EE3               	btg	plusw1,7,c
 26912                           
 26913                           ;stkvar	_ff2 @ sp[(0)+-8]
 26914                           ;stkvar	_ff1 @ sp[(0)+-4]
 26915  019360  50E1               	movf	fsr1l,w,c
 26916  019362  0FFC               	addlw	-4
 26917  019364  6ED9               	movwf	fsr2l,c
 26918  019366  50E2               	movf	fsr1h,w,c
 26919  019368  6EDA               	movwf	fsr2h,c
 26920  01936A  0EFF               	movlw	255
 26921  01936C  22DA               	addwfc	fsr2h,f,c
 26922  01936E  0EF8               	movlw	-8
 26923  019370  50E3               	movf	plusw1,w,c
 26924  019372  5CDE               	subwf	postinc2,w,c
 26925  019374  0EF9               	movlw	-7
 26926  019376  50E3               	movf	plusw1,w,c
 26927  019378  58DE               	subwfb	postinc2,w,c
 26928  01937A  0EFA               	movlw	-6
 26929  01937C  50E3               	movf	plusw1,w,c
 26930  01937E  58DE               	subwfb	postinc2,w,c
 26931  019380  0EFB               	movlw	-5
 26932  019382  50E3               	movf	plusw1,w,c
 26933  019384  58DE               	subwfb	postinc2,w,c
 26934  019386  B0D8               	btfsc	status,0,c
 26935  019388  D002               	goto	l8848
 26936  01938A  9001               	bcf	btemp& (0+255),0,c
 26937  01938C  D001               	goto	l2773
 26938  01938E                     l8848:
 26939  01938E  8001               	bsf	btemp& (0+255),0,c
 26940  019390                     l2773:
 26941                           
 26942                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 26943  019390  0EF8               	movlw	248
 26944  019392  26E1               	addwf	fsr1l,f,c
 26945  019394  0EFF               	movlw	255
 26946  019396  22E2               	addwfc	fsr1h,f,c
 26947  019398  0012               	return		;funcret
 26948  01939A                     __end_of___flge:
 26949                           	opt callstack 0
 26950                           
 26951 ;; *************** function _calc_model_data *****************
 26952 ;; Defined at:
 26953 ;;		line 67 in file "mbmc.c"
 26954 ;; Parameters:    Size  Location     Type
 26955 ;;		None
 26956 ;; Auto vars:     Size  Location     Type
 26957 ;;		None
 26958 ;; Return value:  Size  Location     Type
 26959 ;;                  1  [STACK] void 
 26960 ;; Registers used:
 26961 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 26962 ;; Tracked objects:
 26963 ;;		On entry : 0/1
 26964 ;;		On exit  : 3F/39
 26965 ;;		Unchanged: 0/0
 26966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26971 ;;Total ram usage:        0 bytes
 26972 ;; Hardware stack levels used:    1
 26973 ;; Hardware stack levels required when called:   18
 26974 ;; This function calls:
 26975 ;;		___fladd
 26976 ;;		___flmul
 26977 ;;		___flsub
 26978 ;;		_lp_filter
 26979 ;;		_start_bsoc
 26980 ;;		_stop_bsoc
 26981 ;; This function is called by:
 26982 ;;		_main
 26983 ;; This function uses a reentrant model
 26984 ;;
 26985                           
 26986                           	psect	text107
 26987  015CA2                     __ptext107:
 26988                           	opt callstack 0
 26989  015CA2                     _calc_model_data:
 26990                           	opt callstack 12
 26991                           
 26992                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 26993                           
 26994                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26995                           ;incstack = 0
 26996  015CA2  EC4E  F0E3         	call	_stop_bsoc	;wreg free
 26997                           
 26998                           ; BSR set to: 57
 26999                           ;mbmc.c: 72:  if (!V.calib) {
 27000  015CA6  0101               	movlb	1	; () banked
 27001  015CA8  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 27002  015CAA  A4D8               	btfss	status,2,c
 27003  015CAC  D219               	goto	l11354
 27004                           
 27005                           ; BSR set to: 1
 27006                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 27007  015CAE  EE21  F2FF         	lfsr	2,_C
 27008  015CB2  006F FF78  F743    	movff	postinc2,_C+68	;volatile
 27009  015CB8  006F FF78  F744    	movff	postinc2,_C+69	;volatile
 27010  015CBE  006F FF78  F745    	movff	postinc2,_C+70	;volatile
 27011  015CC4  006F FF74  F746    	movff	postdec2,_C+71	;volatile
 27012                           
 27013                           ; BSR set to: 1
 27014                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 27015  015CCA  0060  F1C3  FFE6   	movff	calc_model_data@bcror,postinc1
 27016  015CD0  0060  F1C7  FFE6   	movff	calc_model_data@bcror+1,postinc1
 27017  015CD6  0060  F1CB  FFE6   	movff	calc_model_data@bcror+2,postinc1
 27018  015CDC  0060  F1CF  FFE6   	movff	calc_model_data@bcror+3,postinc1
 27019  015CE2  EE21  F343         	lfsr	2,_C+68	;volatile
 27020  015CE6  006F FF7B FFE6     	movff	postinc2,postinc1
 27021  015CEC  006F FF7B FFE6     	movff	postinc2,postinc1
 27022  015CF2  006F FF7B FFE6     	movff	postinc2,postinc1
 27023  015CF8  006F FF7B FFE6     	movff	postinc2,postinc1
 27024  015CFE  EC4C  F0DD         	call	___flsub	;wreg free
 27025  015D02  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 27026  015D08  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 27027  015D0E  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 27028  015D14  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 27029                           
 27030                           ;mbmc.c: 75:   bcror = C.c_bat;
 27031  015D1A  C743  F070         	movff	_C+68,calc_model_data@bcror	;volatile
 27032  015D1E  C744  F071         	movff	_C+69,calc_model_data@bcror+1	;volatile
 27033  015D22  C745  F072         	movff	_C+70,calc_model_data@bcror+2	;volatile
 27034  015D26  C746  F073         	movff	_C+71,calc_model_data@bcror+3	;volatile
 27035                           
 27036                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 27037  015D2A  EE21  F303         	lfsr	2,_C+4	;volatile
 27038  015D2E  006F FF78  F747    	movff	postinc2,_C+72	;volatile
 27039  015D34  006F FF78  F748    	movff	postinc2,_C+73	;volatile
 27040  015D3A  006F FF78  F749    	movff	postinc2,_C+74	;volatile
 27041  015D40  006F FF74  F74A    	movff	postdec2,_C+75	;volatile
 27042                           
 27043                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 27044  015D46  EE21  F30F         	lfsr	2,_C+16	;volatile
 27045  015D4A  006F FF78  F753    	movff	postinc2,_C+84	;volatile
 27046  015D50  006F FF78  F754    	movff	postinc2,_C+85	;volatile
 27047  015D56  006F FF78  F755    	movff	postinc2,_C+86	;volatile
 27048  015D5C  006F FF74  F756    	movff	postdec2,_C+87	;volatile
 27049                           
 27050                           ;mbmc.c: 78:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 27051  015D62  EE21  F333         	lfsr	2,_C+52	;volatile
 27052  015D66  006F FF78  F767    	movff	postinc2,_C+104	;volatile
 27053  015D6C  006F FF78  F768    	movff	postinc2,_C+105	;volatile
 27054  015D72  006F FF78  F769    	movff	postinc2,_C+106	;volatile
 27055  015D78  006F FF74  F76A    	movff	postdec2,_C+107	;volatile
 27056                           
 27057                           ;mbmc.c: 79:   C.bv_ror = C.v_bat - bvror;
 27058  015D7E  0060  F1D3  FFE6   	movff	calc_model_data@bvror,postinc1
 27059  015D84  0060  F1D7  FFE6   	movff	calc_model_data@bvror+1,postinc1
 27060  015D8A  0060  F1DB  FFE6   	movff	calc_model_data@bvror+2,postinc1
 27061  015D90  0060  F1DF  FFE6   	movff	calc_model_data@bvror+3,postinc1
 27062  015D96  EE21  F353         	lfsr	2,_C+84	;volatile
 27063  015D9A  006F FF7B FFE6     	movff	postinc2,postinc1
 27064  015DA0  006F FF7B FFE6     	movff	postinc2,postinc1
 27065  015DA6  006F FF7B FFE6     	movff	postinc2,postinc1
 27066  015DAC  006F FF7B FFE6     	movff	postinc2,postinc1
 27067  015DB2  EC4C  F0DD         	call	___flsub	;wreg free
 27068  015DB6  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 27069  015DBC  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 27070  015DC2  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 27071  015DC8  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 27072                           
 27073                           ;mbmc.c: 80:   bvror = C.v_bat;
 27074  015DCE  C753  F074         	movff	_C+84,calc_model_data@bvror	;volatile
 27075  015DD2  C754  F075         	movff	_C+85,calc_model_data@bvror+1	;volatile
 27076  015DD6  C755  F076         	movff	_C+86,calc_model_data@bvror+2	;volatile
 27077  015DDA  C756  F077         	movff	_C+87,calc_model_data@bvror+3	;volatile
 27078                           
 27079                           ;mbmc.c: 81:   C.v_pv = C.calc[V_PV];
 27080  015DDE  EE21  F313         	lfsr	2,_C+20	;volatile
 27081  015DE2  006F FF78  F74F    	movff	postinc2,_C+80	;volatile
 27082  015DE8  006F FF78  F750    	movff	postinc2,_C+81	;volatile
 27083  015DEE  006F FF78  F751    	movff	postinc2,_C+82	;volatile
 27084  015DF4  006F FF74  F752    	movff	postdec2,_C+83	;volatile
 27085                           
 27086                           ;mbmc.c: 82:   C.v_cc = C.calc[V_CC];
 27087  015DFA  EE21  F307         	lfsr	2,_C+8	;volatile
 27088  015DFE  006F FF78  F74B    	movff	postinc2,_C+76	;volatile
 27089  015E04  006F FF78  F74C    	movff	postinc2,_C+77	;volatile
 27090  015E0A  006F FF78  F74D    	movff	postinc2,_C+78	;volatile
 27091  015E10  006F FF74  F74E    	movff	postdec2,_C+79	;volatile
 27092                           
 27093                           ;mbmc.c: 83:   C.v_inverter = C.calc[V_INVERTER];
 27094  015E16  EE21  F32F         	lfsr	2,_C+48	;volatile
 27095  015E1A  006F FF78  F763    	movff	postinc2,_C+100	;volatile
 27096  015E20  006F FF78  F764    	movff	postinc2,_C+101	;volatile
 27097  015E26  006F FF78  F765    	movff	postinc2,_C+102	;volatile
 27098  015E2C  006F FF74  F766    	movff	postdec2,_C+103	;volatile
 27099                           
 27100                           ;mbmc.c: 84:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 27101  015E32  0E01               	movlw	1
 27102  015E34  6EE6               	movwf	postinc1,c
 27103  015E36  0E10               	movlw	16
 27104  015E38  6EE6               	movwf	postinc1,c
 27105  015E3A  EE21  F2FF         	lfsr	2,_C
 27106  015E3E  006F FF7B FFE6     	movff	postinc2,postinc1
 27107  015E44  006F FF7B FFE6     	movff	postinc2,postinc1
 27108  015E4A  006F FF7B FFE6     	movff	postinc2,postinc1
 27109  015E50  006F FF7B FFE6     	movff	postinc2,postinc1
 27110  015E56  EE21  F303         	lfsr	2,_C+4	;volatile
 27111  015E5A  006F FF7B FFE6     	movff	postinc2,postinc1
 27112  015E60  006F FF7B FFE6     	movff	postinc2,postinc1
 27113  015E66  006F FF7B FFE6     	movff	postinc2,postinc1
 27114  015E6C  006F FF7B FFE6     	movff	postinc2,postinc1
 27115  015E72  EC4C  F0DD         	call	___flsub	;wreg free
 27116  015E76  0060  F007  FFE6   	movff	btemp,postinc1
 27117  015E7C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27118  015E82  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27119  015E88  0060  F013  FFE6   	movff	btemp+3,postinc1
 27120  015E8E  EC67  F0C4         	call	_lp_filter	;wreg free
 27121  015E92  0060  F004  F73F   	movff	btemp,_C+64	;volatile
 27122  015E98  0060  F008  F740   	movff	btemp+1,_C+65	;volatile
 27123  015E9E  0060  F00C  F741   	movff	btemp+2,_C+66	;volatile
 27124  015EA4  0060  F010  F742   	movff	btemp+3,_C+67	;volatile
 27125                           
 27126                           ;mbmc.c: 85:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 27127  015EAA  0E01               	movlw	1
 27128  015EAC  6EE6               	movwf	postinc1,c
 27129  015EAE  0E11               	movlw	17
 27130  015EB0  6EE6               	movwf	postinc1,c
 27131  015EB2  EE21  F353         	lfsr	2,_C+84	;volatile
 27132  015EB6  006F FF7B FFE6     	movff	postinc2,postinc1
 27133  015EBC  006F FF7B FFE6     	movff	postinc2,postinc1
 27134  015EC2  006F FF7B FFE6     	movff	postinc2,postinc1
 27135  015EC8  006F FF7B FFE6     	movff	postinc2,postinc1
 27136  015ECE  EE21  F33F         	lfsr	2,_C+64	;volatile
 27137  015ED2  006F FF7B FFE6     	movff	postinc2,postinc1
 27138  015ED8  006F FF7B FFE6     	movff	postinc2,postinc1
 27139  015EDE  006F FF7B FFE6     	movff	postinc2,postinc1
 27140  015EE4  006F FF7B FFE6     	movff	postinc2,postinc1
 27141  015EEA  EC03  F09F         	call	___flmul	;wreg free
 27142  015EEE  0060  F007  FFE6   	movff	btemp,postinc1
 27143  015EF4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27144  015EFA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27145  015F00  0060  F013  FFE6   	movff	btemp+3,postinc1
 27146  015F06  EC67  F0C4         	call	_lp_filter	;wreg free
 27147  015F0A  0060  F004  F773   	movff	btemp,_C+116	;volatile
 27148  015F10  0060  F008  F774   	movff	btemp+1,_C+117	;volatile
 27149  015F16  0060  F00C  F775   	movff	btemp+2,_C+118	;volatile
 27150  015F1C  0060  F010  F776   	movff	btemp+3,_C+119	;volatile
 27151                           
 27152                           ;mbmc.c: 86:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 27153  015F22  0E01               	movlw	1
 27154  015F24  6EE6               	movwf	postinc1,c
 27155  015F26  0E12               	movlw	18
 27156  015F28  6EE6               	movwf	postinc1,c
 27157  015F2A  EE21  F34F         	lfsr	2,_C+80	;volatile
 27158  015F2E  006F FF7B FFE6     	movff	postinc2,postinc1
 27159  015F34  006F FF7B FFE6     	movff	postinc2,postinc1
 27160  015F3A  006F FF7B FFE6     	movff	postinc2,postinc1
 27161  015F40  006F FF7B FFE6     	movff	postinc2,postinc1
 27162  015F46  EE21  F347         	lfsr	2,_C+72	;volatile
 27163  015F4A  006F FF7B FFE6     	movff	postinc2,postinc1
 27164  015F50  006F FF7B FFE6     	movff	postinc2,postinc1
 27165  015F56  006F FF7B FFE6     	movff	postinc2,postinc1
 27166  015F5C  006F FF7B FFE6     	movff	postinc2,postinc1
 27167  015F62  EC03  F09F         	call	___flmul	;wreg free
 27168  015F66  0060  F007  FFE6   	movff	btemp,postinc1
 27169  015F6C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27170  015F72  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27171  015F78  0060  F013  FFE6   	movff	btemp+3,postinc1
 27172  015F7E  EC67  F0C4         	call	_lp_filter	;wreg free
 27173  015F82  0060  F004  F77B   	movff	btemp,_C+124	;volatile
 27174  015F88  0060  F008  F77C   	movff	btemp+1,_C+125	;volatile
 27175  015F8E  0060  F00C  F77D   	movff	btemp+2,_C+126	;volatile
 27176  015F94  0060  F010  F77E   	movff	btemp+3,_C+127	;volatile
 27177                           
 27178                           ;mbmc.c: 87:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 27179  015F9A  0E01               	movlw	1
 27180  015F9C  6EE6               	movwf	postinc1,c
 27181  015F9E  0E13               	movlw	19
 27182  015FA0  6EE6               	movwf	postinc1,c
 27183  015FA2  0E00               	movlw	0
 27184  015FA4  6EE6               	movwf	postinc1,c
 27185  015FA6  0E00               	movlw	0
 27186  015FA8  6EE6               	movwf	postinc1,c
 27187  015FAA  0E60               	movlw	96
 27188  015FAC  6EE6               	movwf	postinc1,c
 27189  015FAE  0EC1               	movlw	193
 27190  015FB0  6EE6               	movwf	postinc1,c
 27191  015FB2  EE21  F363         	lfsr	2,_C+100	;volatile
 27192  015FB6  006F FF7B FFE6     	movff	postinc2,postinc1
 27193  015FBC  006F FF7B FFE6     	movff	postinc2,postinc1
 27194  015FC2  006F FF7B FFE6     	movff	postinc2,postinc1
 27195  015FC8  006F FF7B FFE6     	movff	postinc2,postinc1
 27196  015FCE  EE21  F33F         	lfsr	2,_C+64	;volatile
 27197  015FD2  006F FF7B FFE6     	movff	postinc2,postinc1
 27198  015FD8  006F FF7B FFE6     	movff	postinc2,postinc1
 27199  015FDE  006F FF7B FFE6     	movff	postinc2,postinc1
 27200  015FE4  006F FF7B FFE6     	movff	postinc2,postinc1
 27201  015FEA  EC03  F09F         	call	___flmul	;wreg free
 27202  015FEE  0060  F007  FFE6   	movff	btemp,postinc1
 27203  015FF4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27204  015FFA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27205  016000  0060  F013  FFE6   	movff	btemp+3,postinc1
 27206  016006  EC18  F0A3         	call	___fladd	;wreg free
 27207  01600A  0060  F007  FFE6   	movff	btemp,postinc1
 27208  016010  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27209  016016  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27210  01601C  0060  F013  FFE6   	movff	btemp+3,postinc1
 27211  016022  EC67  F0C4         	call	_lp_filter	;wreg free
 27212  016026  0060  F004  F777   	movff	btemp,_C+120	;volatile
 27213  01602C  0060  F008  F778   	movff	btemp+1,_C+121	;volatile
 27214  016032  0060  F00C  F779   	movff	btemp+2,_C+122	;volatile
 27215  016038  0060  F010  F77A   	movff	btemp+3,_C+123	;volatile
 27216                           
 27217                           ;mbmc.c: 88:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 27218  01603E  0E01               	movlw	1
 27219  016040  6EE6               	movwf	postinc1,c
 27220  016042  0E14               	movlw	20
 27221  016044  6EE6               	movwf	postinc1,c
 27222  016046  EE21  F353         	lfsr	2,_C+84	;volatile
 27223  01604A  006F FF7B FFE6     	movff	postinc2,postinc1
 27224  016050  006F FF7B FFE6     	movff	postinc2,postinc1
 27225  016056  006F FF7B FFE6     	movff	postinc2,postinc1
 27226  01605C  006F FF7B FFE6     	movff	postinc2,postinc1
 27227  016062  EE21  F343         	lfsr	2,_C+68	;volatile
 27228  016066  006F FF7B FFE6     	movff	postinc2,postinc1
 27229  01606C  006F FF7B FFE6     	movff	postinc2,postinc1
 27230  016072  006F FF7B FFE6     	movff	postinc2,postinc1
 27231  016078  006F FF7B FFE6     	movff	postinc2,postinc1
 27232  01607E  EC03  F09F         	call	___flmul	;wreg free
 27233  016082  0060  F007  FFE6   	movff	btemp,postinc1
 27234  016088  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27235  01608E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27236  016094  0060  F013  FFE6   	movff	btemp+3,postinc1
 27237  01609A  EC67  F0C4         	call	_lp_filter	;wreg free
 27238  01609E  0060  F004  F77F   	movff	btemp,_C+128	;volatile
 27239  0160A4  0060  F008  F780   	movff	btemp+1,_C+129	;volatile
 27240  0160AA  0060  F00C  F781   	movff	btemp+2,_C+130	;volatile
 27241  0160B0  0060  F010  F782   	movff	btemp+3,_C+131	;volatile
 27242                           
 27243                           ;mbmc.c: 92:   if (C.p_inverter < 0.0)
 27244  0160B6  EE21  F377         	lfsr	2,_C+120	;volatile
 27245  0160BA  0E03               	movlw	3
 27246  0160BC  AEDB               	btfss	plusw2,7,c
 27247  0160BE  D010               	goto	l11354
 27248                           
 27249                           ;mbmc.c: 93:    C.p_inverter = 0.0001;
 27250  0160C0  0E17               	movlw	23
 27251  0160C2  006F FFA0  F777    	movff	wreg,_C+120	;volatile
 27252  0160C8  0EB7               	movlw	183
 27253  0160CA  006F FFA0  F778    	movff	wreg,_C+121	;volatile
 27254  0160D0  0ED1               	movlw	209
 27255  0160D2  006F FFA0  F779    	movff	wreg,_C+122	;volatile
 27256  0160D8  0E38               	movlw	56
 27257  0160DA  006F FFA0  F77A    	movff	wreg,_C+123	;volatile
 27258  0160E0                     l11354:
 27259                           
 27260                           ;mbmc.c: 95:  start_bsoc();
 27261  0160E0  ECDD  F0E1         	call	_start_bsoc	;wreg free
 27262                           
 27263                           ; BSR set to: 57
 27264                           ;mbmc.c: 96:  C.update = 1;
 27265  0160E4  0E01               	movlw	1
 27266  0160E6  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 27267                           
 27268                           ; BSR set to: 57
 27269                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27270  0160EC  0012               	return		;funcret
 27271  0160EE                     __end_of_calc_model_data:
 27272                           	opt callstack 0
 27273                           
 27274 ;; *************** function _stop_bsoc *****************
 27275 ;; Defined at:
 27276 ;;		line 130 in file "bsoc.c"
 27277 ;; Parameters:    Size  Location     Type
 27278 ;;		None
 27279 ;; Auto vars:     Size  Location     Type
 27280 ;;		None
 27281 ;; Return value:  Size  Location     Type
 27282 ;;                  1  [STACK] void 
 27283 ;; Registers used:
 27284 ;;		None
 27285 ;; Tracked objects:
 27286 ;;		On entry : 0/1
 27287 ;;		On exit  : 3F/39
 27288 ;;		Unchanged: 0/0
 27289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27294 ;;Total ram usage:        0 bytes
 27295 ;; Hardware stack levels used:    1
 27296 ;; Hardware stack levels required when called:   15
 27297 ;; This function calls:
 27298 ;;		Nothing
 27299 ;; This function is called by:
 27300 ;;		_calc_model_data
 27301 ;; This function uses a reentrant model
 27302 ;;
 27303                           
 27304                           	psect	text108
 27305  01C69C                     __ptext108:
 27306                           	opt callstack 0
 27307  01C69C                     _stop_bsoc:
 27308                           	opt callstack 14
 27309                           
 27310                           ;bsoc.c: 133:  PIE6bits.TMR3IE = 0;
 27311                           
 27312                           ; BSR set to: 57
 27313                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27314                           ;incstack = 0
 27315  01C69C  0139               	movlb	57	; () banked
 27316  01C69E  9D96               	bcf	150,6,b	;volatile
 27317                           
 27318                           ; BSR set to: 57
 27319                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 27320  01C6A0  0012               	return		;funcret
 27321  01C6A2                     __end_of_stop_bsoc:
 27322                           	opt callstack 0
 27323                           
 27324 ;; *************** function _start_bsoc *****************
 27325 ;; Defined at:
 27326 ;;		line 121 in file "bsoc.c"
 27327 ;; Parameters:    Size  Location     Type
 27328 ;;		None
 27329 ;; Auto vars:     Size  Location     Type
 27330 ;;		None
 27331 ;; Return value:  Size  Location     Type
 27332 ;;                  1  [STACK] void 
 27333 ;; Registers used:
 27334 ;;		wreg, status,2, status,0, btemp+11
 27335 ;; Tracked objects:
 27336 ;;		On entry : 0/1
 27337 ;;		On exit  : 3F/39
 27338 ;;		Unchanged: 0/0
 27339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27344 ;;Total ram usage:        0 bytes
 27345 ;; Hardware stack levels used:    1
 27346 ;; Hardware stack levels required when called:   15
 27347 ;; This function calls:
 27348 ;;		Nothing
 27349 ;; This function is called by:
 27350 ;;		_calc_model_data
 27351 ;; This function uses a reentrant model
 27352 ;;
 27353                           
 27354                           	psect	text109
 27355  01C3BA                     __ptext109:
 27356                           	opt callstack 0
 27357  01C3BA                     _start_bsoc:
 27358                           	opt callstack 14
 27359                           
 27360                           ;bsoc.c: 124:  PIE6bits.TMR3IE = 1;
 27361                           
 27362                           ; BSR set to: 57
 27363                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27364                           ;incstack = 0
 27365  01C3BA  0139               	movlb	57	; () banked
 27366  01C3BC  8D96               	bsf	150,6,b	;volatile
 27367                           
 27368                           ; BSR set to: 57
 27369  01C3BE  A4BE               	btfss	190,2,c	;volatile
 27370  01C3C0  D002               	goto	u9800
 27371  01C3C2  0E01               	movlw	1
 27372  01C3C4  D001               	goto	u9806
 27373  01C3C6                     u9800:
 27374  01C3C6  0E00               	movlw	0
 27375  01C3C8                     u9806:
 27376  01C3C8  0AFF               	xorlw	255
 27377  01C3CA  6E0C               	movwf	(btemp+11)^0,c
 27378  01C3CC  460C               	rlncf	(btemp+11)^0,f,c
 27379  01C3CE  460C               	rlncf	(btemp+11)^0,f,c
 27380  01C3D0  50BE               	movf	190,w,c	;volatile
 27381  01C3D2  180C               	xorwf	(btemp+11)^0,w,c
 27382  01C3D4  0BFB               	andlw	-5
 27383  01C3D6  180C               	xorwf	(btemp+11)^0,w,c
 27384  01C3D8  6EBE               	movwf	190,c	;volatile
 27385                           
 27386                           ; BSR set to: 57
 27387                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 27388  01C3DA  0012               	return		;funcret
 27389  01C3DC                     __end_of_start_bsoc:
 27390                           	opt callstack 0
 27391                           
 27392 ;; *************** function _lp_filter *****************
 27393 ;; Defined at:
 27394 ;;		line 29 in file "mbmc.c"
 27395 ;; Parameters:    Size  Location     Type
 27396 ;;  new             4  [STACK] const float 
 27397 ;;  bn              1  [STACK] const unsigned char 
 27398 ;;  slow            1  [STACK] const char 
 27399 ;; Auto vars:     Size  Location     Type
 27400 ;;  lp_speed        4  [STACK] float 
 27401 ;; Return value:  Size  Location     Type
 27402 ;;                  4  [STACK] float 
 27403 ;; Registers used:
 27404 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27405 ;; Tracked objects:
 27406 ;;		On entry : 0/1
 27407 ;;		On exit  : 0/0
 27408 ;;		Unchanged: 0/0
 27409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27414 ;;Total ram usage:        0 bytes
 27415 ;; Hardware stack levels used:    1
 27416 ;; Hardware stack levels required when called:   17
 27417 ;; This function calls:
 27418 ;;		___fladd
 27419 ;;		___flmul
 27420 ;;		___flsub
 27421 ;; This function is called by:
 27422 ;;		_main
 27423 ;;		_convert_adc_data
 27424 ;;		_calc_model_data
 27425 ;; This function uses a reentrant model
 27426 ;;
 27427                           
 27428                           	psect	text110
 27429  0188CE                     __ptext110:
 27430                           	opt callstack 0
 27431  0188CE                     _lp_filter:
 27432                           	opt callstack 0
 27433                           
 27434                           ; BSR set to: 57
 27435                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27436  0188CE  52E6               	movf	postinc1,f,c
 27437  0188D0  52E6               	movf	postinc1,f,c
 27438  0188D2  52E6               	movf	postinc1,f,c
 27439  0188D4  52E6               	movf	postinc1,f,c
 27440                           
 27441                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 27442                           ;stkvar	_bn @ sp[(-4)+-5]
 27443                           
 27444                           ;incstack = 0
 27445  0188D6  0EF7               	movlw	-9
 27446  0188D8  006F FF8C  F001    	movff	plusw1,btemp
 27447  0188DE  0E14               	movlw	20
 27448  0188E0  6401               	cpfsgt	btemp^0,c
 27449  0188E2  D011               	goto	l10632
 27450  0188E4                     u9660:
 27451                           
 27452                           ;mbmc.c: 35:   return new;
 27453                           ;stkvar	_new @ sp[(-4)+-4]
 27454  0188E4  0EF8               	movlw	-8
 27455  0188E6  006F FF8C  F001    	movff	plusw1,btemp
 27456  0188EC  0EF9               	movlw	-7
 27457  0188EE  006F FF8C  F002    	movff	plusw1,btemp+1
 27458  0188F4  0EFA               	movlw	-6
 27459  0188F6  006F FF8C  F003    	movff	plusw1,btemp+2
 27460  0188FC  0EFB               	movlw	-5
 27461  0188FE  006F FF8C  F004    	movff	plusw1,btemp+3
 27462  018904  D0BD               	goto	l1932
 27463  018906                     l10632:
 27464                           
 27465                           ;mbmc.c: 37:  if (slow == (-1)) {
 27466                           ;stkvar	_slow @ sp[(-4)+-6]
 27467  018906  0EF6               	movlw	-10
 27468  018908  28E3               	incf	plusw1,w,c
 27469  01890A  A4D8               	btfss	status,2,c
 27470  01890C  D012               	goto	l10640
 27471                           
 27472                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 27473                           ;stkvar	_bn @ sp[(-4)+-5]
 27474  01890E  0EF7               	movlw	-9
 27475  018910  50E3               	movf	plusw1,w,c
 27476  018912  0D04               	mullw	4
 27477  018914  0E00               	movlw	low lp_filter@smooth
 27478  018916  24F3               	addwf	243,w,c
 27479  018918  6ED9               	movwf	fsr2l,c
 27480  01891A  0E02               	movlw	high lp_filter@smooth
 27481  01891C  20F4               	addwfc	prodh,w,c
 27482  01891E  6EDA               	movwf	fsr2h,c
 27483  018920  0E00               	movlw	0
 27484  018922  6EDE               	movwf	postinc2,c
 27485  018924  0E00               	movlw	0
 27486  018926  6EDE               	movwf	postinc2,c
 27487  018928  0E00               	movlw	0
 27488  01892A  6EDE               	movwf	postinc2,c
 27489  01892C  0E00               	movlw	0
 27490  01892E  6EDD               	movwf	postdec2,c
 27491  018930  D7D9               	goto	u9660
 27492  018932                     l10640:
 27493                           
 27494                           ;mbmc.c: 42:  if (slow) {
 27495                           ;stkvar	_slow @ sp[(-4)+-6]
 27496  018932  0EF6               	movlw	-10
 27497  018934  50E3               	movf	plusw1,w,c
 27498  018936  B4D8               	btfsc	status,2,c
 27499  018938  D006               	goto	l10644
 27500                           
 27501                           ;mbmc.c: 43:   lp_speed = 0.033;
 27502  01893A  0E02               	movlw	2
 27503  01893C  6E09               	movwf	(btemp+8)^0,c
 27504  01893E  0E2B               	movlw	43
 27505  018940  6E0A               	movwf	(btemp+9)^0,c
 27506  018942  0E07               	movlw	7
 27507  018944  D005               	goto	L32
 27508  018946                     l10644:
 27509                           
 27510                           ;mbmc.c: 45:   lp_speed = 0.066;
 27511  018946  0E02               	movlw	2
 27512  018948  6E09               	movwf	(btemp+8)^0,c
 27513  01894A  0E2B               	movlw	43
 27514  01894C  6E0A               	movwf	(btemp+9)^0,c
 27515  01894E  0E87               	movlw	135
 27516  018950                     L32:
 27517  018950  6E0B               	movwf	(btemp+10)^0,c
 27518  018952  0E3D               	movlw	61
 27519  018954  6E0C               	movwf	(btemp+11)^0,c
 27520                           
 27521                           ;stkvar	_lp_speed @ sp[(-4)+0]
 27522  018956  0EFC               	movlw	-4
 27523  018958  0060  F027  FFE3   	movff	btemp+8,plusw1
 27524  01895E  0EFD               	movlw	-3
 27525  018960  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27526  018966  0EFE               	movlw	-2
 27527  018968  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27528  01896E  0EFF               	movlw	-1
 27529  018970  0060  F033  FFE3   	movff	btemp+11,plusw1
 27530                           
 27531                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 27532                           ;stkvar	_bn @ sp[(-4)+-5]
 27533  018976  0EF7               	movlw	-9
 27534  018978  50E3               	movf	plusw1,w,c
 27535  01897A  0D04               	mullw	4
 27536  01897C  0E00               	movlw	low lp_filter@smooth
 27537  01897E  24F3               	addwf	243,w,c
 27538  018980  6ED9               	movwf	fsr2l,c
 27539  018982  0E02               	movlw	high lp_filter@smooth
 27540  018984  20F4               	addwfc	prodh,w,c
 27541  018986  6EDA               	movwf	fsr2h,c
 27542  018988  006F FF7B FFE6     	movff	postinc2,postinc1
 27543  01898E  006F FF7B FFE6     	movff	postinc2,postinc1
 27544  018994  006F FF7B FFE6     	movff	postinc2,postinc1
 27545  01899A  006F FF7B FFE6     	movff	postinc2,postinc1
 27546                           
 27547                           ;stkvar	_lp_speed @ sp[(-8)+0]
 27548  0189A0  0EF8               	movlw	-8
 27549  0189A2  006F FF8F FFE6     	movff	plusw1,postinc1
 27550  0189A8  006F FF8F FFE6     	movff	plusw1,postinc1
 27551  0189AE  006F FF8F FFE6     	movff	plusw1,postinc1
 27552  0189B4  006F FF8F FFE6     	movff	plusw1,postinc1
 27553                           
 27554                           ;stkvar	_bn @ sp[(-12)+-5]
 27555  0189BA  0EEF               	movlw	-17
 27556  0189BC  50E3               	movf	plusw1,w,c
 27557  0189BE  0D04               	mullw	4
 27558  0189C0  0E00               	movlw	low lp_filter@smooth
 27559  0189C2  24F3               	addwf	243,w,c
 27560  0189C4  6ED9               	movwf	fsr2l,c
 27561  0189C6  0E02               	movlw	high lp_filter@smooth
 27562  0189C8  20F4               	addwfc	prodh,w,c
 27563  0189CA  6EDA               	movwf	fsr2h,c
 27564  0189CC  006F FF7B FFE6     	movff	postinc2,postinc1
 27565  0189D2  006F FF7B FFE6     	movff	postinc2,postinc1
 27566  0189D8  006F FF7B FFE6     	movff	postinc2,postinc1
 27567  0189DE  006F FF7B FFE6     	movff	postinc2,postinc1
 27568                           
 27569                           ;stkvar	_new @ sp[(-16)+-4]
 27570  0189E4  0EEC               	movlw	-20
 27571  0189E6  006F FF8F FFE6     	movff	plusw1,postinc1
 27572  0189EC  006F FF8F FFE6     	movff	plusw1,postinc1
 27573  0189F2  006F FF8F FFE6     	movff	plusw1,postinc1
 27574  0189F8  006F FF8F FFE6     	movff	plusw1,postinc1
 27575  0189FE  EC4C  F0DD         	call	___flsub	;wreg free
 27576  018A02  0060  F007  FFE6   	movff	btemp,postinc1
 27577  018A08  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27578  018A0E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27579  018A14  0060  F013  FFE6   	movff	btemp+3,postinc1
 27580  018A1A  EC03  F09F         	call	___flmul	;wreg free
 27581  018A1E  0060  F007  FFE6   	movff	btemp,postinc1
 27582  018A24  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27583  018A2A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27584  018A30  0060  F013  FFE6   	movff	btemp+3,postinc1
 27585  018A36  EC18  F0A3         	call	___fladd	;wreg free
 27586                           
 27587                           ;stkvar	_bn @ sp[(-4)+-5]
 27588  018A3A  0EF7               	movlw	-9
 27589  018A3C  50E3               	movf	plusw1,w,c
 27590  018A3E  0D04               	mullw	4
 27591  018A40  0E00               	movlw	low lp_filter@smooth
 27592  018A42  24F3               	addwf	243,w,c
 27593  018A44  6ED9               	movwf	fsr2l,c
 27594  018A46  0E02               	movlw	high lp_filter@smooth
 27595  018A48  20F4               	addwfc	prodh,w,c
 27596  018A4A  6EDA               	movwf	fsr2h,c
 27597  018A4C  0060  F007  FFDE   	movff	btemp,postinc2
 27598  018A52  0060  F00B  FFDE   	movff	btemp+1,postinc2
 27599  018A58  0060  F00F  FFDE   	movff	btemp+2,postinc2
 27600  018A5E  0060  F013  FFDD   	movff	btemp+3,postdec2
 27601  018A64  52DD               	movf	postdec2,f,c
 27602  018A66  52DD               	movf	postdec2,f,c
 27603  018A68  006F FF78  F001    	movff	postinc2,btemp
 27604  018A6E  006F FF78  F002    	movff	postinc2,btemp+1
 27605  018A74  006F FF78  F003    	movff	postinc2,btemp+2
 27606  018A7A  006F FF78  F004    	movff	postinc2,btemp+3
 27607  018A80                     l1932:
 27608                           
 27609                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 27610  018A80  0EF6               	movlw	246
 27611  018A82  26E1               	addwf	fsr1l,f,c
 27612  018A84  0EFF               	movlw	255
 27613  018A86  22E2               	addwfc	fsr1h,f,c
 27614  018A88  0012               	return		;funcret
 27615  018A8A                     __end_of_lp_filter:
 27616                           	opt callstack 0
 27617                           
 27618 ;; *************** function ___flsub *****************
 27619 ;; Defined at:
 27620 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 27621 ;; Parameters:    Size  Location     Type
 27622 ;;  b               4  [STACK] float 
 27623 ;;  a               4  [STACK] float 
 27624 ;; Auto vars:     Size  Location     Type
 27625 ;;		None
 27626 ;; Return value:  Size  Location     Type
 27627 ;;                  4  [STACK] float 
 27628 ;; Registers used:
 27629 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 27630 ;; Tracked objects:
 27631 ;;		On entry : 0/0
 27632 ;;		On exit  : 0/0
 27633 ;;		Unchanged: 0/0
 27634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27639 ;;Total ram usage:        0 bytes
 27640 ;; Hardware stack levels used:    1
 27641 ;; Hardware stack levels required when called:   16
 27642 ;; This function calls:
 27643 ;;		___fladd
 27644 ;; This function is called by:
 27645 ;;		_conv_raw_result
 27646 ;;		_lp_filter
 27647 ;;		_calc_model_data
 27648 ;;		_calc_ror_data
 27649 ;;		_esr_check
 27650 ;;		_efgtoa
 27651 ;; This function uses a reentrant model
 27652 ;;
 27653                           
 27654                           	psect	text111
 27655  01BA98                     __ptext111:
 27656                           	opt callstack 0
 27657  01BA98                     ___flsub:
 27658                           	opt callstack 0
 27659                           
 27660                           ;stkvar	_a @ sp[(0)+-8]
 27661                           
 27662                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27663                           ;incstack = 0
 27664 ;; hardware stack exceeded
 27665  01BA98  0EFB               	movlw	-5
 27666  01BA9A  7EE3               	btg	plusw1,7,c
 27667                           
 27668                           ;stkvar	_a @ sp[(0)+-8]
 27669  01BA9C  0EF8               	movlw	-8
 27670  01BA9E  006F FF8F FFE6     	movff	plusw1,postinc1
 27671  01BAA4  006F FF8F FFE6     	movff	plusw1,postinc1
 27672  01BAAA  006F FF8F FFE6     	movff	plusw1,postinc1
 27673  01BAB0  006F FF8F FFE6     	movff	plusw1,postinc1
 27674                           
 27675                           ;stkvar	_b @ sp[(-4)+-4]
 27676  01BAB6  0EF8               	movlw	-8
 27677  01BAB8  006F FF8F FFE6     	movff	plusw1,postinc1
 27678  01BABE  006F FF8F FFE6     	movff	plusw1,postinc1
 27679  01BAC4  006F FF8F FFE6     	movff	plusw1,postinc1
 27680  01BACA  006F FF8F FFE6     	movff	plusw1,postinc1
 27681  01BAD0  EC18  F0A3         	call	___fladd	;wreg free
 27682                           
 27683                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 27684  01BAD4  0EF8               	movlw	248
 27685  01BAD6  26E1               	addwf	fsr1l,f,c
 27686  01BAD8  0EFF               	movlw	255
 27687  01BADA  22E2               	addwfc	fsr1h,f,c
 27688  01BADC  0012               	return		;funcret
 27689  01BADE                     __end_of___flsub:
 27690                           	opt callstack 0
 27691                           
 27692 ;; *************** function ___fladd *****************
 27693 ;; Defined at:
 27694 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 27695 ;; Parameters:    Size  Location     Type
 27696 ;;  b               4  [STACK] float 
 27697 ;;  a               4  [STACK] float 
 27698 ;; Auto vars:     Size  Location     Type
 27699 ;;  grs             1  [STACK] unsigned char 
 27700 ;;  bexp            1  [STACK] unsigned char 
 27701 ;;  aexp            1  [STACK] unsigned char 
 27702 ;;  signs           1  [STACK] unsigned char 
 27703 ;; Return value:  Size  Location     Type
 27704 ;;                  4  [STACK] unsigned char 
 27705 ;; Registers used:
 27706 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 27707 ;; Tracked objects:
 27708 ;;		On entry : 0/0
 27709 ;;		On exit  : 0/0
 27710 ;;		Unchanged: 0/0
 27711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27716 ;;Total ram usage:        0 bytes
 27717 ;; Hardware stack levels used:    1
 27718 ;; Hardware stack levels required when called:   15
 27719 ;; This function calls:
 27720 ;;		Nothing
 27721 ;; This function is called by:
 27722 ;;		_main
 27723 ;;		_lp_filter
 27724 ;;		_calc_model_data
 27725 ;;		_efgtoa
 27726 ;;		___asfladd
 27727 ;;		___flsub
 27728 ;; This function uses a reentrant model
 27729 ;;
 27730                           
 27731                           	psect	text112
 27732  014630                     __ptext112:
 27733                           	opt callstack 0
 27734  014630                     ___fladd:
 27735                           	opt callstack 0
 27736                           
 27737                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27738  014630  52E6               	movf	postinc1,f,c
 27739  014632  52E6               	movf	postinc1,f,c
 27740  014634  52E6               	movf	postinc1,f,c
 27741  014636  52E6               	movf	postinc1,f,c
 27742                           
 27743                           ;stkvar	_b @ sp[(-4)+-4]
 27744                           
 27745                           ;incstack = 0
 27746 ;; hardware stack exceeded
 27747  014638  0EFB               	movlw	251
 27748  01463A  24E1               	addwf	fsr1l,w,c
 27749  01463C  6ED9               	movwf	fsr2l,c
 27750  01463E  0EFF               	movlw	255
 27751  014640  20E2               	addwfc	fsr1h,w,c
 27752  014642  6EDA               	movwf	fsr2h,c
 27753  014644  50DF               	movf	indf2,w,c
 27754  014646  6E0C               	movwf	(btemp+11)^0,c
 27755  014648  0E80               	movlw	128
 27756  01464A  160C               	andwf	(btemp+11)^0,f,c
 27757                           
 27758                           ;stkvar	_signs @ sp[(-4)+3]
 27759  01464C  0EFF               	movlw	-1
 27760  01464E  0060  F033  FFE3   	movff	btemp+11,plusw1
 27761                           
 27762                           ;stkvar	_b @ sp[(-4)+-4]
 27763  014654  0EFB               	movlw	251
 27764  014656  24E1               	addwf	fsr1l,w,c
 27765  014658  6ED9               	movwf	fsr2l,c
 27766  01465A  0EFF               	movlw	255
 27767  01465C  20E2               	addwfc	fsr1h,w,c
 27768  01465E  6EDA               	movwf	fsr2h,c
 27769  014660  50DF               	movf	indf2,w,c
 27770  014662  6E0C               	movwf	(btemp+11)^0,c
 27771  014664  90D8               	bcf	status,0,c
 27772  014666  340C               	rlcf	(btemp+11)^0,w,c
 27773  014668  6E0B               	movwf	(btemp+10)^0,c
 27774                           
 27775                           ;stkvar	_bexp @ sp[(-4)+1]
 27776  01466A  0EFD               	movlw	-3
 27777  01466C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27778                           
 27779                           ;stkvar	_b @ sp[(-4)+-4]
 27780  014672  0EFA               	movlw	250
 27781  014674  24E1               	addwf	fsr1l,w,c
 27782  014676  6ED9               	movwf	fsr2l,c
 27783  014678  0EFF               	movlw	255
 27784  01467A  20E2               	addwfc	fsr1h,w,c
 27785  01467C  6EDA               	movwf	fsr2h,c
 27786  01467E  AEDF               	btfss	indf2,7,c
 27787  014680  D002               	goto	l7938
 27788                           
 27789                           ;stkvar	_bexp @ sp[(-4)+1]
 27790  014682  0EFD               	movlw	-3
 27791  014684  80E3               	bsf	plusw1,0,c
 27792  014686                     l7938:
 27793                           
 27794                           ;stkvar	_bexp @ sp[(-4)+1]
 27795  014686  0EFD               	movlw	-3
 27796  014688  50E3               	movf	plusw1,w,c
 27797  01468A  B4D8               	btfsc	status,2,c
 27798  01468C  D027               	goto	l7948
 27799                           
 27800                           ;stkvar	_bexp @ sp[(-4)+1]
 27801  01468E  0EFD               	movlw	-3
 27802  014690  28E3               	incf	plusw1,w,c
 27803  014692  A4D8               	btfss	status,2,c
 27804  014694  D018               	goto	l7944
 27805  014696  0E00               	movlw	0
 27806  014698  6E09               	movwf	(btemp+8)^0,c
 27807  01469A  0E00               	movlw	0
 27808  01469C  6E0A               	movwf	(btemp+9)^0,c
 27809  01469E  0E00               	movlw	0
 27810  0146A0  6E0B               	movwf	(btemp+10)^0,c
 27811  0146A2  0E00               	movlw	0
 27812  0146A4  6E0C               	movwf	(btemp+11)^0,c
 27813                           
 27814                           ;stkvar	_b @ sp[(-4)+-4]
 27815  0146A6  0EF8               	movlw	-8
 27816  0146A8  0060  F027  FFE3   	movff	btemp+8,plusw1
 27817  0146AE  0EF9               	movlw	-7
 27818  0146B0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27819  0146B6  0EFA               	movlw	-6
 27820  0146B8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27821  0146BE  0EFB               	movlw	-5
 27822  0146C0  0060  F033  FFE3   	movff	btemp+11,plusw1
 27823  0146C6                     l7944:
 27824                           
 27825                           ;stkvar	_b @ sp[(-4)+-4]
 27826  0146C6  0EFA               	movlw	-6
 27827  0146C8  8EE3               	bsf	plusw1,7,c
 27828                           
 27829                           ;stkvar	_b @ sp[(-4)+-4]
 27830  0146CA  0EFB               	movlw	251
 27831  0146CC  24E1               	addwf	fsr1l,w,c
 27832  0146CE  6ED9               	movwf	fsr2l,c
 27833  0146D0  0EFF               	movlw	255
 27834  0146D2  20E2               	addwfc	fsr1h,w,c
 27835  0146D4  6EDA               	movwf	fsr2h,c
 27836  0146D6  0E00               	movlw	0
 27837  0146D8  6EDF               	movwf	indf2,c
 27838  0146DA  D018               	goto	l7950
 27839  0146DC                     l7948:
 27840  0146DC  0E00               	movlw	0
 27841  0146DE  6E09               	movwf	(btemp+8)^0,c
 27842  0146E0  0E00               	movlw	0
 27843  0146E2  6E0A               	movwf	(btemp+9)^0,c
 27844  0146E4  0E00               	movlw	0
 27845  0146E6  6E0B               	movwf	(btemp+10)^0,c
 27846  0146E8  0E00               	movlw	0
 27847  0146EA  6E0C               	movwf	(btemp+11)^0,c
 27848                           
 27849                           ;stkvar	_b @ sp[(-4)+-4]
 27850  0146EC  0EF8               	movlw	-8
 27851  0146EE  0060  F027  FFE3   	movff	btemp+8,plusw1
 27852  0146F4  0EF9               	movlw	-7
 27853  0146F6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27854  0146FC  0EFA               	movlw	-6
 27855  0146FE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27856  014704  0EFB               	movlw	-5
 27857  014706  0060  F033  FFE3   	movff	btemp+11,plusw1
 27858  01470C                     l7950:
 27859                           
 27860                           ;stkvar	_a @ sp[(-4)+-8]
 27861  01470C  0EF7               	movlw	247
 27862  01470E  24E1               	addwf	fsr1l,w,c
 27863  014710  6ED9               	movwf	fsr2l,c
 27864  014712  0EFF               	movlw	255
 27865  014714  20E2               	addwfc	fsr1h,w,c
 27866  014716  6EDA               	movwf	fsr2h,c
 27867  014718  50DF               	movf	indf2,w,c
 27868  01471A  6E0C               	movwf	(btemp+11)^0,c
 27869  01471C  0E80               	movlw	128
 27870  01471E  160C               	andwf	(btemp+11)^0,f,c
 27871                           
 27872                           ;stkvar	_aexp @ sp[(-4)+2]
 27873  014720  0EFE               	movlw	-2
 27874  014722  0060  F033  FFE3   	movff	btemp+11,plusw1
 27875                           
 27876                           ;stkvar	_signs @ sp[(-4)+3]
 27877                           ;stkvar	_aexp @ sp[(-4)+2]
 27878  014728  50E1               	movf	fsr1l,w,c
 27879  01472A  0FFE               	addlw	-2
 27880  01472C  6ED9               	movwf	fsr2l,c
 27881  01472E  50E2               	movf	fsr1h,w,c
 27882  014730  6EDA               	movwf	fsr2h,c
 27883  014732  0EFF               	movlw	255
 27884  014734  22DA               	addwfc	fsr2h,f,c
 27885  014736  0EFF               	movlw	-1
 27886  014738  50E3               	movf	plusw1,w,c
 27887  01473A  18DE               	xorwf	postinc2,w,c
 27888  01473C  B4D8               	btfsc	status,2,c
 27889  01473E  D002               	goto	l7956
 27890                           
 27891                           ;stkvar	_signs @ sp[(-4)+3]
 27892  014740  0EFF               	movlw	-1
 27893  014742  8CE3               	bsf	plusw1,6,c
 27894  014744                     l7956:
 27895                           
 27896                           ;stkvar	_a @ sp[(-4)+-8]
 27897  014744  0EF7               	movlw	247
 27898  014746  24E1               	addwf	fsr1l,w,c
 27899  014748  6ED9               	movwf	fsr2l,c
 27900  01474A  0EFF               	movlw	255
 27901  01474C  20E2               	addwfc	fsr1h,w,c
 27902  01474E  6EDA               	movwf	fsr2h,c
 27903  014750  50DF               	movf	indf2,w,c
 27904  014752  6E0C               	movwf	(btemp+11)^0,c
 27905  014754  90D8               	bcf	status,0,c
 27906  014756  340C               	rlcf	(btemp+11)^0,w,c
 27907  014758  6E0B               	movwf	(btemp+10)^0,c
 27908                           
 27909                           ;stkvar	_aexp @ sp[(-4)+2]
 27910  01475A  0EFE               	movlw	-2
 27911  01475C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27912                           
 27913                           ;stkvar	_a @ sp[(-4)+-8]
 27914  014762  0EF6               	movlw	246
 27915  014764  24E1               	addwf	fsr1l,w,c
 27916  014766  6ED9               	movwf	fsr2l,c
 27917  014768  0EFF               	movlw	255
 27918  01476A  20E2               	addwfc	fsr1h,w,c
 27919  01476C  6EDA               	movwf	fsr2h,c
 27920  01476E  AEDF               	btfss	indf2,7,c
 27921  014770  D002               	goto	l7962
 27922                           
 27923                           ;stkvar	_aexp @ sp[(-4)+2]
 27924  014772  0EFE               	movlw	-2
 27925  014774  80E3               	bsf	plusw1,0,c
 27926  014776                     l7962:
 27927                           
 27928                           ;stkvar	_aexp @ sp[(-4)+2]
 27929  014776  0EFE               	movlw	-2
 27930  014778  50E3               	movf	plusw1,w,c
 27931  01477A  B4D8               	btfsc	status,2,c
 27932  01477C  D027               	goto	l7972
 27933                           
 27934                           ;stkvar	_aexp @ sp[(-4)+2]
 27935  01477E  0EFE               	movlw	-2
 27936  014780  28E3               	incf	plusw1,w,c
 27937  014782  A4D8               	btfss	status,2,c
 27938  014784  D018               	goto	l7968
 27939  014786  0E00               	movlw	0
 27940  014788  6E09               	movwf	(btemp+8)^0,c
 27941  01478A  0E00               	movlw	0
 27942  01478C  6E0A               	movwf	(btemp+9)^0,c
 27943  01478E  0E00               	movlw	0
 27944  014790  6E0B               	movwf	(btemp+10)^0,c
 27945  014792  0E00               	movlw	0
 27946  014794  6E0C               	movwf	(btemp+11)^0,c
 27947                           
 27948                           ;stkvar	_a @ sp[(-4)+-8]
 27949  014796  0EF4               	movlw	-12
 27950  014798  0060  F027  FFE3   	movff	btemp+8,plusw1
 27951  01479E  0EF5               	movlw	-11
 27952  0147A0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27953  0147A6  0EF6               	movlw	-10
 27954  0147A8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27955  0147AE  0EF7               	movlw	-9
 27956  0147B0  0060  F033  FFE3   	movff	btemp+11,plusw1
 27957  0147B6                     l7968:
 27958                           
 27959                           ;stkvar	_a @ sp[(-4)+-8]
 27960  0147B6  0EF6               	movlw	-10
 27961  0147B8  8EE3               	bsf	plusw1,7,c
 27962                           
 27963                           ;stkvar	_a @ sp[(-4)+-8]
 27964  0147BA  0EF7               	movlw	247
 27965  0147BC  24E1               	addwf	fsr1l,w,c
 27966  0147BE  6ED9               	movwf	fsr2l,c
 27967  0147C0  0EFF               	movlw	255
 27968  0147C2  20E2               	addwfc	fsr1h,w,c
 27969  0147C4  6EDA               	movwf	fsr2h,c
 27970  0147C6  0E00               	movlw	0
 27971  0147C8  6EDF               	movwf	indf2,c
 27972  0147CA  D018               	goto	l7974
 27973  0147CC                     l7972:
 27974  0147CC  0E00               	movlw	0
 27975  0147CE  6E09               	movwf	(btemp+8)^0,c
 27976  0147D0  0E00               	movlw	0
 27977  0147D2  6E0A               	movwf	(btemp+9)^0,c
 27978  0147D4  0E00               	movlw	0
 27979  0147D6  6E0B               	movwf	(btemp+10)^0,c
 27980  0147D8  0E00               	movlw	0
 27981  0147DA  6E0C               	movwf	(btemp+11)^0,c
 27982                           
 27983                           ;stkvar	_a @ sp[(-4)+-8]
 27984  0147DC  0EF4               	movlw	-12
 27985  0147DE  0060  F027  FFE3   	movff	btemp+8,plusw1
 27986  0147E4  0EF5               	movlw	-11
 27987  0147E6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27988  0147EC  0EF6               	movlw	-10
 27989  0147EE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27990  0147F4  0EF7               	movlw	-9
 27991  0147F6  0060  F033  FFE3   	movff	btemp+11,plusw1
 27992  0147FC                     l7974:
 27993                           
 27994                           ;stkvar	_bexp @ sp[(-4)+1]
 27995                           ;stkvar	_aexp @ sp[(-4)+2]
 27996  0147FC  50E1               	movf	fsr1l,w,c
 27997  0147FE  0FFE               	addlw	-2
 27998  014800  6ED9               	movwf	fsr2l,c
 27999  014802  50E2               	movf	fsr1h,w,c
 28000  014804  6EDA               	movwf	fsr2h,c
 28001  014806  0EFF               	movlw	255
 28002  014808  22DA               	addwfc	fsr2h,f,c
 28003  01480A  0EFD               	movlw	-3
 28004  01480C  50E3               	movf	plusw1,w,c
 28005  01480E  5CDE               	subwf	postinc2,w,c
 28006  014810  B0D8               	btfsc	status,0,c
 28007  014812  D0A4               	goto	l8010
 28008                           
 28009                           ;stkvar	_signs @ sp[(-4)+3]
 28010  014814  0EFF               	movlw	-1
 28011  014816  ACE3               	btfss	plusw1,6,c
 28012  014818  D002               	goto	l7980
 28013                           
 28014                           ;stkvar	_signs @ sp[(-4)+3]
 28015  01481A  0EFF               	movlw	-1
 28016  01481C  7EE3               	btg	plusw1,7,c
 28017  01481E                     l7980:
 28018                           
 28019                           ;stkvar	_bexp @ sp[(-4)+1]
 28020                           ;stkvar	_grs @ sp[(-4)+0]
 28021  01481E  0EFD               	movlw	-3
 28022  014820  006F FF8C  F001    	movff	plusw1,btemp
 28023  014826  0EFC               	movlw	-4
 28024  014828  0060  F007  FFE3   	movff	btemp,plusw1
 28025                           
 28026                           ;stkvar	_aexp @ sp[(-4)+2]
 28027                           ;stkvar	_bexp @ sp[(-4)+1]
 28028  01482E  0EFE               	movlw	-2
 28029  014830  006F FF8C  F001    	movff	plusw1,btemp
 28030  014836  0EFD               	movlw	-3
 28031  014838  0060  F007  FFE3   	movff	btemp,plusw1
 28032                           
 28033                           ;stkvar	_grs @ sp[(-4)+0]
 28034                           ;stkvar	_aexp @ sp[(-4)+2]
 28035  01483E  0EFC               	movlw	-4
 28036  014840  006F FF8C  F001    	movff	plusw1,btemp
 28037  014846  0EFE               	movlw	-2
 28038  014848  0060  F007  FFE3   	movff	btemp,plusw1
 28039                           
 28040                           ;stkvar	_b @ sp[(-4)+-4]
 28041                           ;stkvar	_grs @ sp[(-4)+0]
 28042  01484E  0EF8               	movlw	-8
 28043  014850  006F FF8C  F001    	movff	plusw1,btemp
 28044  014856  0EFC               	movlw	-4
 28045  014858  0060  F007  FFE3   	movff	btemp,plusw1
 28046                           
 28047                           ;stkvar	_a @ sp[(-4)+-8]
 28048                           ;stkvar	_b @ sp[(-4)+-4]
 28049  01485E  0EF4               	movlw	-12
 28050  014860  006F FF8C  F001    	movff	plusw1,btemp
 28051  014866  0EF8               	movlw	-8
 28052  014868  0060  F007  FFE3   	movff	btemp,plusw1
 28053                           
 28054                           ;stkvar	_grs @ sp[(-4)+0]
 28055                           ;stkvar	_a @ sp[(-4)+-8]
 28056  01486E  0EFC               	movlw	-4
 28057  014870  006F FF8C  F001    	movff	plusw1,btemp
 28058  014876  0EF4               	movlw	-12
 28059  014878  0060  F007  FFE3   	movff	btemp,plusw1
 28060                           
 28061                           ;stkvar	_b @ sp[(-4)+-4]
 28062  01487E  0EF9               	movlw	249
 28063  014880  24E1               	addwf	fsr1l,w,c
 28064  014882  6ED9               	movwf	fsr2l,c
 28065  014884  0EFF               	movlw	255
 28066  014886  20E2               	addwfc	fsr1h,w,c
 28067  014888  6EDA               	movwf	fsr2h,c
 28068  01488A  50DF               	movf	indf2,w,c
 28069  01488C  6E0C               	movwf	(btemp+11)^0,c
 28070                           
 28071                           ;stkvar	_grs @ sp[(-4)+0]
 28072  01488E  0EFC               	movlw	-4
 28073  014890  0060  F033  FFE3   	movff	btemp+11,plusw1
 28074                           
 28075                           ;stkvar	_a @ sp[(-4)+-8]
 28076  014896  0EF5               	movlw	245
 28077  014898  24E1               	addwf	fsr1l,w,c
 28078  01489A  6ED9               	movwf	fsr2l,c
 28079  01489C  0EFF               	movlw	255
 28080  01489E  20E2               	addwfc	fsr1h,w,c
 28081  0148A0  6EDA               	movwf	fsr2h,c
 28082                           
 28083                           ;stkvar	_b @ sp[(-4)+-4]
 28084  0148A2  0EF9               	movlw	249
 28085  0148A4  24E1               	addwf	fsr1l,w,c
 28086  0148A6  6EE9               	movwf	fsr0l,c
 28087  0148A8  0EFF               	movlw	255
 28088  0148AA  20E2               	addwfc	fsr1h,w,c
 28089  0148AC  6EEA               	movwf	fsr0h,c
 28090  0148AE  006F FF7F FFEF     	movff	indf2,indf0
 28091                           
 28092                           ;stkvar	_grs @ sp[(-4)+0]
 28093                           ;stkvar	_a @ sp[(-4)+-8]
 28094  0148B4  0EF5               	movlw	245
 28095  0148B6  24E1               	addwf	fsr1l,w,c
 28096  0148B8  6ED9               	movwf	fsr2l,c
 28097  0148BA  0EFF               	movlw	255
 28098  0148BC  20E2               	addwfc	fsr1h,w,c
 28099  0148BE  6EDA               	movwf	fsr2h,c
 28100  0148C0  0EFC               	movlw	-4
 28101  0148C2  006F FF8F FFDF     	movff	plusw1,indf2
 28102                           
 28103                           ;stkvar	_b @ sp[(-4)+-4]
 28104  0148C8  0EFA               	movlw	250
 28105  0148CA  24E1               	addwf	fsr1l,w,c
 28106  0148CC  6ED9               	movwf	fsr2l,c
 28107  0148CE  0EFF               	movlw	255
 28108  0148D0  20E2               	addwfc	fsr1h,w,c
 28109  0148D2  6EDA               	movwf	fsr2h,c
 28110  0148D4  50DF               	movf	indf2,w,c
 28111  0148D6  6E0C               	movwf	(btemp+11)^0,c
 28112                           
 28113                           ;stkvar	_grs @ sp[(-4)+0]
 28114  0148D8  0EFC               	movlw	-4
 28115  0148DA  0060  F033  FFE3   	movff	btemp+11,plusw1
 28116                           
 28117                           ;stkvar	_a @ sp[(-4)+-8]
 28118  0148E0  0EF6               	movlw	246
 28119  0148E2  24E1               	addwf	fsr1l,w,c
 28120  0148E4  6ED9               	movwf	fsr2l,c
 28121  0148E6  0EFF               	movlw	255
 28122  0148E8  20E2               	addwfc	fsr1h,w,c
 28123  0148EA  6EDA               	movwf	fsr2h,c
 28124                           
 28125                           ;stkvar	_b @ sp[(-4)+-4]
 28126  0148EC  0EFA               	movlw	250
 28127  0148EE  24E1               	addwf	fsr1l,w,c
 28128  0148F0  6EE9               	movwf	fsr0l,c
 28129  0148F2  0EFF               	movlw	255
 28130  0148F4  20E2               	addwfc	fsr1h,w,c
 28131  0148F6  6EEA               	movwf	fsr0h,c
 28132  0148F8  006F FF7F FFEF     	movff	indf2,indf0
 28133                           
 28134                           ;stkvar	_grs @ sp[(-4)+0]
 28135                           ;stkvar	_a @ sp[(-4)+-8]
 28136  0148FE  0EF6               	movlw	246
 28137  014900  24E1               	addwf	fsr1l,w,c
 28138  014902  6ED9               	movwf	fsr2l,c
 28139  014904  0EFF               	movlw	255
 28140  014906  20E2               	addwfc	fsr1h,w,c
 28141  014908  6EDA               	movwf	fsr2h,c
 28142  01490A  0EFC               	movlw	-4
 28143  01490C  006F FF8F FFDF     	movff	plusw1,indf2
 28144                           
 28145                           ;stkvar	_b @ sp[(-4)+-4]
 28146  014912  0EFB               	movlw	251
 28147  014914  24E1               	addwf	fsr1l,w,c
 28148  014916  6ED9               	movwf	fsr2l,c
 28149  014918  0EFF               	movlw	255
 28150  01491A  20E2               	addwfc	fsr1h,w,c
 28151  01491C  6EDA               	movwf	fsr2h,c
 28152  01491E  50DF               	movf	indf2,w,c
 28153  014920  6E0C               	movwf	(btemp+11)^0,c
 28154                           
 28155                           ;stkvar	_grs @ sp[(-4)+0]
 28156  014922  0EFC               	movlw	-4
 28157  014924  0060  F033  FFE3   	movff	btemp+11,plusw1
 28158                           
 28159                           ;stkvar	_a @ sp[(-4)+-8]
 28160  01492A  0EF7               	movlw	247
 28161  01492C  24E1               	addwf	fsr1l,w,c
 28162  01492E  6ED9               	movwf	fsr2l,c
 28163  014930  0EFF               	movlw	255
 28164  014932  20E2               	addwfc	fsr1h,w,c
 28165  014934  6EDA               	movwf	fsr2h,c
 28166                           
 28167                           ;stkvar	_b @ sp[(-4)+-4]
 28168  014936  0EFB               	movlw	251
 28169  014938  24E1               	addwf	fsr1l,w,c
 28170  01493A  6EE9               	movwf	fsr0l,c
 28171  01493C  0EFF               	movlw	255
 28172  01493E  20E2               	addwfc	fsr1h,w,c
 28173  014940  6EEA               	movwf	fsr0h,c
 28174  014942  006F FF7F FFEF     	movff	indf2,indf0
 28175                           
 28176                           ;stkvar	_grs @ sp[(-4)+0]
 28177                           ;stkvar	_a @ sp[(-4)+-8]
 28178  014948  0EF7               	movlw	247
 28179  01494A  24E1               	addwf	fsr1l,w,c
 28180  01494C  6ED9               	movwf	fsr2l,c
 28181  01494E  0EFF               	movlw	255
 28182  014950  20E2               	addwfc	fsr1h,w,c
 28183  014952  6EDA               	movwf	fsr2h,c
 28184  014954  0EFC               	movlw	-4
 28185  014956  006F FF8F FFDF     	movff	plusw1,indf2
 28186  01495C                     l8010:
 28187                           
 28188                           ;stkvar	_grs @ sp[(-4)+0]
 28189  01495C  0EFC               	movlw	-4
 28190  01495E  6AE3               	clrf	plusw1,c
 28191                           
 28192                           ;stkvar	_aexp @ sp[(-4)+2]
 28193  014960  0EFE               	movlw	-2
 28194  014962  50E3               	movf	plusw1,w,c
 28195  014964  6E0B               	movwf	(btemp+10)^0,c
 28196  014966  6A0C               	clrf	(btemp+11)^0,c
 28197                           
 28198                           ;stkvar	_bexp @ sp[(-4)+1]
 28199  014968  0EFD               	movlw	-3
 28200  01496A  50E3               	movf	plusw1,w,c
 28201  01496C  5E0B               	subwf	(btemp+10)^0,f,c
 28202  01496E  0E00               	movlw	0
 28203  014970  5A0C               	subwfb	(btemp+11)^0,f,c
 28204  014972  BE0C               	btfsc	(btemp+11)^0,7,c
 28205  014974  D062               	goto	l8034
 28206  014976  500C               	movf	(btemp+11)^0,w,c
 28207  014978  E104               	bnz	u5660
 28208  01497A  0E1A               	movlw	26
 28209  01497C  5C0B               	subwf	(btemp+10)^0,w,c
 28210  01497E  A0D8               	btfss	status,0,c
 28211  014980  D05C               	goto	l8034
 28212  014982                     u5660:
 28213                           
 28214                           ;stkvar	_b @ sp[(-4)+-4]
 28215  014982  0EF8               	movlw	-8
 28216  014984  50E3               	movf	plusw1,w,c
 28217  014986  E10A               	bnz	u5671
 28218  014988  0EF9               	movlw	-7
 28219  01498A  50E3               	movf	plusw1,w,c
 28220  01498C  E107               	bnz	u5671
 28221  01498E  0EFA               	movlw	-6
 28222  014990  50E3               	movf	plusw1,w,c
 28223  014992  E104               	bnz	u5671
 28224  014994  0EFB               	movlw	-5
 28225  014996  50E3               	movf	plusw1,w,c
 28226  014998  B4D8               	btfsc	status,2,c
 28227  01499A  D003               	goto	u5670
 28228  01499C                     u5671:
 28229  01499C  6A0C               	clrf	(btemp+11)^0,c
 28230  01499E  2A0C               	incf	(btemp+11)^0,f,c
 28231  0149A0  D001               	goto	u5688
 28232  0149A2                     u5670:
 28233  0149A2  6A0C               	clrf	(btemp+11)^0,c
 28234  0149A4                     u5688:
 28235                           
 28236                           ;stkvar	_grs @ sp[(-4)+0]
 28237  0149A4  0EFC               	movlw	-4
 28238  0149A6  0060  F033  FFE3   	movff	btemp+11,plusw1
 28239                           
 28240                           ;stkvar	_b @ sp[(-4)+-4]
 28241  0149AC  0EF8               	movlw	-8
 28242  0149AE  6AE3               	clrf	plusw1,c
 28243  0149B0  0EF9               	movlw	-7
 28244  0149B2  6AE3               	clrf	plusw1,c
 28245  0149B4  0EFA               	movlw	-6
 28246  0149B6  6AE3               	clrf	plusw1,c
 28247  0149B8  0EFB               	movlw	-5
 28248  0149BA  6AE3               	clrf	plusw1,c
 28249                           
 28250                           ;stkvar	_aexp @ sp[(-4)+2]
 28251                           ;stkvar	_bexp @ sp[(-4)+1]
 28252  0149BC  0EFE               	movlw	-2
 28253  0149BE  006F FF8C  F001    	movff	plusw1,btemp
 28254  0149C4  0EFD               	movlw	-3
 28255  0149C6  0060  F007  FFE3   	movff	btemp,plusw1
 28256  0149CC  D042               	goto	u5720
 28257  0149CE                     l8020:
 28258                           
 28259                           ;stkvar	_grs @ sp[(-4)+0]
 28260  0149CE  0EFC               	movlw	-4
 28261  0149D0  A0E3               	btfss	plusw1,0,c
 28262  0149D2  D00D               	goto	l8024
 28263                           
 28264                           ;stkvar	_grs @ sp[(-4)+0]
 28265  0149D4  0EFC               	movlw	-4
 28266  0149D6  006F FF8C  F00C    	movff	plusw1,btemp+11
 28267  0149DC  90D8               	bcf	status,0,c
 28268  0149DE  320C               	rrcf	(btemp+11)^0,f,c
 28269  0149E0  0E01               	movlw	1
 28270  0149E2  120C               	iorwf	(btemp+11)^0,f,c
 28271                           
 28272                           ;stkvar	_grs @ sp[(-4)+0]
 28273  0149E4  0EFC               	movlw	-4
 28274  0149E6  0060  F033  FFE3   	movff	btemp+11,plusw1
 28275  0149EC  D009               	goto	l8026
 28276  0149EE                     l8024:
 28277                           
 28278                           ;stkvar	_grs @ sp[(-4)+0]
 28279  0149EE  50E1               	movf	fsr1l,w,c
 28280  0149F0  0FFC               	addlw	-4
 28281  0149F2  6ED9               	movwf	fsr2l,c
 28282  0149F4  50E2               	movf	fsr1h,w,c
 28283  0149F6  6EDA               	movwf	fsr2h,c
 28284  0149F8  0EFF               	movlw	255
 28285  0149FA  22DA               	addwfc	fsr2h,f,c
 28286  0149FC  90D8               	bcf	status,0,c
 28287  0149FE  32DF               	rrcf	indf2,f,c
 28288  014A00                     l8026:
 28289                           
 28290                           ;stkvar	_b @ sp[(-4)+-4]
 28291  014A00  0EF8               	movlw	-8
 28292  014A02  A0E3               	btfss	plusw1,0,c
 28293  014A04  D002               	goto	l8030
 28294                           
 28295                           ;stkvar	_grs @ sp[(-4)+0]
 28296  014A06  0EFC               	movlw	-4
 28297  014A08  8EE3               	bsf	plusw1,7,c
 28298  014A0A                     l8030:
 28299  014A0A  0E01               	movlw	1
 28300  014A0C  6E0C               	movwf	(btemp+11)^0,c
 28301                           
 28302                           ;stkvar	_b @ sp[(-4)+-4]
 28303  014A0E  50E1               	movf	fsr1l,w,c
 28304  014A10  0FF8               	addlw	-8
 28305  014A12  6ED9               	movwf	fsr2l,c
 28306  014A14  50E2               	movf	fsr1h,w,c
 28307  014A16  6EDA               	movwf	fsr2h,c
 28308  014A18  0EFF               	movlw	255
 28309  014A1A  22DA               	addwfc	fsr2h,f,c
 28310  014A1C  280C               	incf	(btemp+11)^0,w,c
 28311  014A1E  52DE               	movf	postinc2,f,c
 28312  014A20  D008               	goto	u5710
 28313  014A22                     u5715:
 28314  014A22  52DE               	movf	postinc2,f,c
 28315  014A24  90D8               	bcf	status,0,c
 28316  014A26  BEDC               	btfsc	preinc2,7,c
 28317  014A28  80D8               	bsf	status,0,c
 28318  014A2A  32DD               	rrcf	postdec2,f,c
 28319  014A2C  32DD               	rrcf	postdec2,f,c
 28320  014A2E  32DD               	rrcf	postdec2,f,c
 28321  014A30  32DE               	rrcf	postinc2,f,c
 28322  014A32                     u5710:
 28323  014A32  2EE8               	decfsz	wreg,f,c
 28324  014A34  D7F6               	goto	u5715
 28325                           
 28326                           ;stkvar	_bexp @ sp[(-4)+1]
 28327  014A36  0EFD               	movlw	-3
 28328  014A38  2AE3               	incf	plusw1,f,c
 28329  014A3A                     l8034:
 28330                           
 28331                           ;stkvar	_aexp @ sp[(-4)+2]
 28332                           ;stkvar	_bexp @ sp[(-4)+1]
 28333  014A3A  50E1               	movf	fsr1l,w,c
 28334  014A3C  0FFD               	addlw	-3
 28335  014A3E  6ED9               	movwf	fsr2l,c
 28336  014A40  50E2               	movf	fsr1h,w,c
 28337  014A42  6EDA               	movwf	fsr2h,c
 28338  014A44  0EFF               	movlw	255
 28339  014A46  22DA               	addwfc	fsr2h,f,c
 28340  014A48  0EFE               	movlw	-2
 28341  014A4A  50E3               	movf	plusw1,w,c
 28342  014A4C  5CDE               	subwf	postinc2,w,c
 28343  014A4E  A0D8               	btfss	status,0,c
 28344  014A50  D7BE               	goto	l8020
 28345  014A52                     u5720:
 28346                           
 28347                           ;stkvar	_signs @ sp[(-4)+3]
 28348  014A52  0EFF               	movlw	-1
 28349  014A54  BCE3               	btfsc	plusw1,6,c
 28350  014A56  D066               	goto	l8062
 28351                           
 28352                           ;stkvar	_bexp @ sp[(-4)+1]
 28353  014A58  0EFD               	movlw	-3
 28354  014A5A  50E3               	movf	plusw1,w,c
 28355  014A5C  B4D8               	btfsc	status,2,c
 28356  014A5E  D0F2               	goto	u5820
 28357                           
 28358                           ;stkvar	_a @ sp[(-4)+-8]
 28359                           ;stkvar	_b @ sp[(-4)+-4]
 28360  014A60  0EF8               	movlw	-8
 28361  014A62  50E3               	movf	plusw1,w,c
 28362  014A64  6E01               	movwf	btemp^0,c
 28363  014A66  0EF4               	movlw	-12
 28364  014A68  50E3               	movf	plusw1,w,c
 28365  014A6A  2601               	addwf	btemp^0,f,c
 28366  014A6C  0EF8               	movlw	-8
 28367  014A6E  0060  F007  FFE3   	movff	btemp,plusw1
 28368  014A74  0EF9               	movlw	-7
 28369  014A76  50E3               	movf	plusw1,w,c
 28370  014A78  6E01               	movwf	btemp^0,c
 28371  014A7A  0EF5               	movlw	-11
 28372  014A7C  50E3               	movf	plusw1,w,c
 28373  014A7E  2201               	addwfc	btemp^0,f,c
 28374  014A80  0EF9               	movlw	-7
 28375  014A82  0060  F007  FFE3   	movff	btemp,plusw1
 28376  014A88  0EFA               	movlw	-6
 28377  014A8A  50E3               	movf	plusw1,w,c
 28378  014A8C  6E01               	movwf	btemp^0,c
 28379  014A8E  0EF6               	movlw	-10
 28380  014A90  50E3               	movf	plusw1,w,c
 28381  014A92  2201               	addwfc	btemp^0,f,c
 28382  014A94  0EFA               	movlw	-6
 28383  014A96  0060  F007  FFE3   	movff	btemp,plusw1
 28384  014A9C  0EFB               	movlw	-5
 28385  014A9E  50E3               	movf	plusw1,w,c
 28386  014AA0  6E01               	movwf	btemp^0,c
 28387  014AA2  0EF7               	movlw	-9
 28388  014AA4  50E3               	movf	plusw1,w,c
 28389  014AA6  2201               	addwfc	btemp^0,f,c
 28390  014AA8  0EFB               	movlw	-5
 28391  014AAA  0060  F007  FFE3   	movff	btemp,plusw1
 28392                           
 28393                           ;stkvar	_b @ sp[(-4)+-4]
 28394  014AB0  0EFB               	movlw	-5
 28395  014AB2  A0E3               	btfss	plusw1,0,c
 28396  014AB4  D101               	goto	u5860
 28397                           
 28398                           ;stkvar	_grs @ sp[(-4)+0]
 28399  014AB6  0EFC               	movlw	-4
 28400  014AB8  A0E3               	btfss	plusw1,0,c
 28401  014ABA  D00D               	goto	l8052
 28402                           
 28403                           ;stkvar	_grs @ sp[(-4)+0]
 28404  014ABC  0EFC               	movlw	-4
 28405  014ABE  006F FF8C  F00C    	movff	plusw1,btemp+11
 28406  014AC4  90D8               	bcf	status,0,c
 28407  014AC6  320C               	rrcf	(btemp+11)^0,f,c
 28408  014AC8  0E01               	movlw	1
 28409  014ACA  120C               	iorwf	(btemp+11)^0,f,c
 28410                           
 28411                           ;stkvar	_grs @ sp[(-4)+0]
 28412  014ACC  0EFC               	movlw	-4
 28413  014ACE  0060  F033  FFE3   	movff	btemp+11,plusw1
 28414  014AD4  D009               	goto	l8054
 28415  014AD6                     l8052:
 28416                           
 28417                           ;stkvar	_grs @ sp[(-4)+0]
 28418  014AD6  50E1               	movf	fsr1l,w,c
 28419  014AD8  0FFC               	addlw	-4
 28420  014ADA  6ED9               	movwf	fsr2l,c
 28421  014ADC  50E2               	movf	fsr1h,w,c
 28422  014ADE  6EDA               	movwf	fsr2h,c
 28423  014AE0  0EFF               	movlw	255
 28424  014AE2  22DA               	addwfc	fsr2h,f,c
 28425  014AE4  90D8               	bcf	status,0,c
 28426  014AE6  32DF               	rrcf	indf2,f,c
 28427  014AE8                     l8054:
 28428                           
 28429                           ;stkvar	_b @ sp[(-4)+-4]
 28430  014AE8  0EF8               	movlw	-8
 28431  014AEA  A0E3               	btfss	plusw1,0,c
 28432  014AEC  D002               	goto	l8058
 28433                           
 28434                           ;stkvar	_grs @ sp[(-4)+0]
 28435  014AEE  0EFC               	movlw	-4
 28436  014AF0  8EE3               	bsf	plusw1,7,c
 28437  014AF2                     l8058:
 28438  014AF2  0E01               	movlw	1
 28439  014AF4  6E0C               	movwf	(btemp+11)^0,c
 28440                           
 28441                           ;stkvar	_b @ sp[(-4)+-4]
 28442  014AF6  50E1               	movf	fsr1l,w,c
 28443  014AF8  0FF8               	addlw	-8
 28444  014AFA  6ED9               	movwf	fsr2l,c
 28445  014AFC  50E2               	movf	fsr1h,w,c
 28446  014AFE  6EDA               	movwf	fsr2h,c
 28447  014B00  0EFF               	movlw	255
 28448  014B02  22DA               	addwfc	fsr2h,f,c
 28449  014B04  280C               	incf	(btemp+11)^0,w,c
 28450  014B06  52DE               	movf	postinc2,f,c
 28451  014B08  D008               	goto	u5780
 28452  014B0A                     u5785:
 28453  014B0A  52DE               	movf	postinc2,f,c
 28454  014B0C  90D8               	bcf	status,0,c
 28455  014B0E  BEDC               	btfsc	preinc2,7,c
 28456  014B10  80D8               	bsf	status,0,c
 28457  014B12  32DD               	rrcf	postdec2,f,c
 28458  014B14  32DD               	rrcf	postdec2,f,c
 28459  014B16  32DD               	rrcf	postdec2,f,c
 28460  014B18  32DE               	rrcf	postinc2,f,c
 28461  014B1A                     u5780:
 28462  014B1A  2EE8               	decfsz	wreg,f,c
 28463  014B1C  D7F6               	goto	u5785
 28464                           
 28465                           ;stkvar	_bexp @ sp[(-4)+1]
 28466  014B1E  0EFD               	movlw	-3
 28467  014B20  2AE3               	incf	plusw1,f,c
 28468  014B22  D0CA               	goto	u5860
 28469  014B24                     l8062:
 28470                           
 28471                           ;stkvar	_a @ sp[(-4)+-8]
 28472                           ;stkvar	_b @ sp[(-4)+-4]
 28473  014B24  50E1               	movf	fsr1l,w,c
 28474  014B26  0FF8               	addlw	-8
 28475  014B28  6ED9               	movwf	fsr2l,c
 28476  014B2A  50E2               	movf	fsr1h,w,c
 28477  014B2C  6EDA               	movwf	fsr2h,c
 28478  014B2E  0EFF               	movlw	255
 28479  014B30  22DA               	addwfc	fsr2h,f,c
 28480  014B32  0EF4               	movlw	-12
 28481  014B34  50E3               	movf	plusw1,w,c
 28482  014B36  5CDE               	subwf	postinc2,w,c
 28483  014B38  0EF5               	movlw	-11
 28484  014B3A  50E3               	movf	plusw1,w,c
 28485  014B3C  58DE               	subwfb	postinc2,w,c
 28486  014B3E  0EF6               	movlw	-10
 28487  014B40  50E3               	movf	plusw1,w,c
 28488  014B42  58DE               	subwfb	postinc2,w,c
 28489  014B44  50DE               	movf	postinc2,w,c
 28490  014B46  0A80               	xorlw	128
 28491  014B48  6E01               	movwf	btemp^0,c
 28492  014B4A  0EF7               	movlw	-9
 28493  014B4C  50E3               	movf	plusw1,w,c
 28494  014B4E  0A80               	xorlw	128
 28495  014B50  5801               	subwfb	btemp^0,w,c
 28496  014B52  B0D8               	btfsc	status,0,c
 28497  014B54  D053               	goto	l8074
 28498                           
 28499                           ;stkvar	_b @ sp[(-4)+-4]
 28500                           ;stkvar	_a @ sp[(-4)+-8]
 28501  014B56  0EF4               	movlw	-12
 28502  014B58  006F FF8C  F009    	movff	plusw1,btemp+8
 28503  014B5E  0EF5               	movlw	-11
 28504  014B60  006F FF8C  F00A    	movff	plusw1,btemp+9
 28505  014B66  0EF6               	movlw	-10
 28506  014B68  006F FF8C  F00B    	movff	plusw1,btemp+10
 28507  014B6E  0EF7               	movlw	-9
 28508  014B70  006F FF8C  F00C    	movff	plusw1,btemp+11
 28509  014B76  0EF8               	movlw	-8
 28510  014B78  50E3               	movf	plusw1,w,c
 28511  014B7A  5E09               	subwf	(btemp+8)^0,f,c
 28512  014B7C  0EF9               	movlw	-7
 28513  014B7E  50E3               	movf	plusw1,w,c
 28514  014B80  5A0A               	subwfb	(btemp+9)^0,f,c
 28515  014B82  0EFA               	movlw	-6
 28516  014B84  50E3               	movf	plusw1,w,c
 28517  014B86  5A0B               	subwfb	(btemp+10)^0,f,c
 28518  014B88  0EFB               	movlw	-5
 28519  014B8A  50E3               	movf	plusw1,w,c
 28520  014B8C  5A0C               	subwfb	(btemp+11)^0,f,c
 28521  014B8E  0EFF               	movlw	255
 28522  014B90  2409               	addwf	(btemp+8)^0,w,c
 28523  014B92  6E05               	movwf	(btemp+4)^0,c
 28524  014B94  0EFF               	movlw	255
 28525  014B96  200A               	addwfc	(btemp+9)^0,w,c
 28526  014B98  6E06               	movwf	(btemp+5)^0,c
 28527  014B9A  0EFF               	movlw	255
 28528  014B9C  200B               	addwfc	(btemp+10)^0,w,c
 28529  014B9E  6E07               	movwf	(btemp+6)^0,c
 28530  014BA0  0EFF               	movlw	255
 28531  014BA2  200C               	addwfc	(btemp+11)^0,w,c
 28532  014BA4  6E08               	movwf	(btemp+7)^0,c
 28533                           
 28534                           ;stkvar	_b @ sp[(-4)+-4]
 28535  014BA6  0EF8               	movlw	-8
 28536  014BA8  0060  F017  FFE3   	movff	btemp+4,plusw1
 28537  014BAE  0EF9               	movlw	-7
 28538  014BB0  0060  F01B  FFE3   	movff	btemp+5,plusw1
 28539  014BB6  0EFA               	movlw	-6
 28540  014BB8  0060  F01F  FFE3   	movff	btemp+6,plusw1
 28541  014BBE  0EFB               	movlw	-5
 28542  014BC0  0060  F023  FFE3   	movff	btemp+7,plusw1
 28543                           
 28544                           ;stkvar	_signs @ sp[(-4)+3]
 28545  014BC6  0EFF               	movlw	-1
 28546  014BC8  7EE3               	btg	plusw1,7,c
 28547                           
 28548                           ;stkvar	_grs @ sp[(-4)+0]
 28549  014BCA  0EFC               	movlw	-4
 28550  014BCC  50E3               	movf	plusw1,w,c
 28551  014BCE  0800               	sublw	0
 28552  014BD0  6E0C               	movwf	(btemp+11)^0,c
 28553                           
 28554                           ;stkvar	_grs @ sp[(-4)+0]
 28555  014BD2  0EFC               	movlw	-4
 28556  014BD4  0060  F033  FFE3   	movff	btemp+11,plusw1
 28557                           
 28558                           ;stkvar	_grs @ sp[(-4)+0]
 28559  014BDA  0EFC               	movlw	-4
 28560  014BDC  50E3               	movf	plusw1,w,c
 28561  014BDE  A4D8               	btfss	status,2,c
 28562  014BE0  D020               	goto	l8076
 28563                           
 28564                           ;stkvar	_b @ sp[(-4)+-4]
 28565  014BE2  50E1               	movf	fsr1l,w,c
 28566  014BE4  0FF8               	addlw	-8
 28567  014BE6  6ED9               	movwf	fsr2l,c
 28568  014BE8  50E2               	movf	fsr1h,w,c
 28569  014BEA  6EDA               	movwf	fsr2h,c
 28570  014BEC  0EFF               	movlw	255
 28571  014BEE  22DA               	addwfc	fsr2h,f,c
 28572  014BF0  2ADE               	incf	postinc2,f,c
 28573  014BF2  0E00               	movlw	0
 28574  014BF4  22DE               	addwfc	postinc2,f,c
 28575  014BF6  22DE               	addwfc	postinc2,f,c
 28576  014BF8  22DE               	addwfc	postinc2,f,c
 28577  014BFA  D013               	goto	l8076
 28578  014BFC                     l8074:
 28579                           
 28580                           ;stkvar	_a @ sp[(-4)+-8]
 28581                           ;stkvar	_b @ sp[(-4)+-4]
 28582  014BFC  50E1               	movf	fsr1l,w,c
 28583  014BFE  0FF8               	addlw	-8
 28584  014C00  6ED9               	movwf	fsr2l,c
 28585  014C02  50E2               	movf	fsr1h,w,c
 28586  014C04  6EDA               	movwf	fsr2h,c
 28587  014C06  0EFF               	movlw	255
 28588  014C08  22DA               	addwfc	fsr2h,f,c
 28589  014C0A  0EF4               	movlw	-12
 28590  014C0C  50E3               	movf	plusw1,w,c
 28591  014C0E  5EDE               	subwf	postinc2,f,c
 28592  014C10  0EF5               	movlw	-11
 28593  014C12  50E3               	movf	plusw1,w,c
 28594  014C14  5ADE               	subwfb	postinc2,f,c
 28595  014C16  0EF6               	movlw	-10
 28596  014C18  50E3               	movf	plusw1,w,c
 28597  014C1A  5ADE               	subwfb	postinc2,f,c
 28598  014C1C  0EF7               	movlw	-9
 28599  014C1E  50E3               	movf	plusw1,w,c
 28600  014C20  5ADE               	subwfb	postinc2,f,c
 28601  014C22                     l8076:
 28602                           
 28603                           ;stkvar	_b @ sp[(-4)+-4]
 28604  014C22  0EF8               	movlw	-8
 28605  014C24  50E3               	movf	plusw1,w,c
 28606  014C26  E145               	bnz	l8098
 28607  014C28  0EF9               	movlw	-7
 28608  014C2A  50E3               	movf	plusw1,w,c
 28609  014C2C  E142               	bnz	l8098
 28610  014C2E  0EFA               	movlw	-6
 28611  014C30  50E3               	movf	plusw1,w,c
 28612  014C32  E13F               	bnz	l8098
 28613  014C34  0EFB               	movlw	-5
 28614  014C36  50E3               	movf	plusw1,w,c
 28615  014C38  A4D8               	btfss	status,2,c
 28616  014C3A  D03B               	goto	l8098
 28617                           
 28618                           ;stkvar	_grs @ sp[(-4)+0]
 28619  014C3C  0EFC               	movlw	-4
 28620  014C3E  50E3               	movf	plusw1,w,c
 28621  014C40  A4D8               	btfss	status,2,c
 28622  014C42  D037               	goto	l8098
 28623  014C44                     u5820:
 28624  014C44  0E00               	movlw	0
 28625  014C46  6E01               	movwf	btemp^0,c
 28626  014C48  0E00               	movlw	0
 28627  014C4A  6E02               	movwf	(btemp+1)^0,c
 28628  014C4C  0E00               	movlw	0
 28629  014C4E  6E03               	movwf	(btemp+2)^0,c
 28630  014C50  0E00               	movlw	0
 28631  014C52  6E04               	movwf	(btemp+3)^0,c
 28632  014C54  D0C6               	goto	l3040
 28633  014C56                     l8084:
 28634                           
 28635                           ;stkvar	_b @ sp[(-4)+-4]
 28636  014C56  90D8               	bcf	status,0,c
 28637  014C58  0EF8               	movlw	-8
 28638  014C5A  36E3               	rlcf	plusw1,f,c
 28639  014C5C  0EF9               	movlw	-7
 28640  014C5E  36E3               	rlcf	plusw1,f,c
 28641  014C60  0EFA               	movlw	-6
 28642  014C62  36E3               	rlcf	plusw1,f,c
 28643  014C64  0EFB               	movlw	-5
 28644  014C66  36E3               	rlcf	plusw1,f,c
 28645                           
 28646                           ;stkvar	_grs @ sp[(-4)+0]
 28647  014C68  0EFC               	movlw	-4
 28648  014C6A  AEE3               	btfss	plusw1,7,c
 28649  014C6C  D002               	goto	l3052
 28650                           
 28651                           ;stkvar	_b @ sp[(-4)+-4]
 28652  014C6E  0EF8               	movlw	-8
 28653  014C70  80E3               	bsf	plusw1,0,c
 28654  014C72                     l3052:
 28655                           
 28656                           ;stkvar	_grs @ sp[(-4)+0]
 28657  014C72  0EFC               	movlw	-4
 28658  014C74  A0E3               	btfss	plusw1,0,c
 28659  014C76  D00E               	goto	l8092
 28660                           
 28661                           ;stkvar	_grs @ sp[(-4)+0]
 28662  014C78  0EFC               	movlw	-4
 28663  014C7A  006F FF8C  F00C    	movff	plusw1,btemp+11
 28664  014C80  90D8               	bcf	status,0,c
 28665  014C82  340C               	rlcf	(btemp+11)^0,w,c
 28666  014C84  6E0B               	movwf	(btemp+10)^0,c
 28667  014C86  0E01               	movlw	1
 28668  014C88  120B               	iorwf	(btemp+10)^0,f,c
 28669                           
 28670                           ;stkvar	_grs @ sp[(-4)+0]
 28671  014C8A  0EFC               	movlw	-4
 28672  014C8C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28673  014C92  D009               	goto	l8094
 28674  014C94                     l8092:
 28675                           
 28676                           ;stkvar	_grs @ sp[(-4)+0]
 28677  014C94  50E1               	movf	fsr1l,w,c
 28678  014C96  0FFC               	addlw	-4
 28679  014C98  6ED9               	movwf	fsr2l,c
 28680  014C9A  50E2               	movf	fsr1h,w,c
 28681  014C9C  6EDA               	movwf	fsr2h,c
 28682  014C9E  0EFF               	movlw	255
 28683  014CA0  22DA               	addwfc	fsr2h,f,c
 28684  014CA2  90D8               	bcf	status,0,c
 28685  014CA4  36DF               	rlcf	indf2,f,c
 28686  014CA6                     l8094:
 28687                           
 28688                           ;stkvar	_bexp @ sp[(-4)+1]
 28689  014CA6  0EFD               	movlw	-3
 28690  014CA8  50E3               	movf	plusw1,w,c
 28691  014CAA  B4D8               	btfsc	status,2,c
 28692  014CAC  D002               	goto	l8098
 28693                           
 28694                           ;stkvar	_bexp @ sp[(-4)+1]
 28695  014CAE  0EFD               	movlw	-3
 28696  014CB0  06E3               	decf	plusw1,f,c
 28697  014CB2                     l8098:
 28698                           
 28699                           ;stkvar	_b @ sp[(-4)+-4]
 28700  014CB2  0EFA               	movlw	-6
 28701  014CB4  AEE3               	btfss	plusw1,7,c
 28702  014CB6  D7CF               	goto	l8084
 28703  014CB8                     u5860:
 28704                           
 28705                           ;stkvar	_aexp @ sp[(-4)+2]
 28706  014CB8  0EFE               	movlw	-2
 28707  014CBA  6AE3               	clrf	plusw1,c
 28708                           
 28709                           ;stkvar	_grs @ sp[(-4)+0]
 28710  014CBC  0EFC               	movlw	-4
 28711  014CBE  AEE3               	btfss	plusw1,7,c
 28712  014CC0  D00F               	goto	l8112
 28713                           
 28714                           ;stkvar	_grs @ sp[(-4)+0]
 28715  014CC2  0EFC               	movlw	-4
 28716  014CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 28717  014CCA  0E7F               	movlw	127
 28718  014CCC  160C               	andwf	(btemp+11)^0,f,c
 28719  014CCE  B4D8               	btfsc	status,2,c
 28720  014CD0  D004               	goto	l8108
 28721  014CD2                     u5880:
 28722                           
 28723                           ;stkvar	_aexp @ sp[(-4)+2]
 28724  014CD2  0EFE               	movlw	-2
 28725  014CD4  6AE3               	clrf	plusw1,c
 28726  014CD6  2AE3               	incf	plusw1,f,c
 28727  014CD8  D003               	goto	l8112
 28728  014CDA                     l8108:
 28729                           
 28730                           ;stkvar	_b @ sp[(-4)+-4]
 28731  014CDA  0EF8               	movlw	-8
 28732  014CDC  B0E3               	btfsc	plusw1,0,c
 28733  014CDE  D7F9               	goto	u5880
 28734  014CE0                     l8112:
 28735                           
 28736                           ;stkvar	_aexp @ sp[(-4)+2]
 28737  014CE0  0EFE               	movlw	-2
 28738  014CE2  50E3               	movf	plusw1,w,c
 28739  014CE4  B4D8               	btfsc	status,2,c
 28740  014CE6  D02B               	goto	l8124
 28741                           
 28742                           ;stkvar	_b @ sp[(-4)+-4]
 28743  014CE8  50E1               	movf	fsr1l,w,c
 28744  014CEA  0FF8               	addlw	-8
 28745  014CEC  6ED9               	movwf	fsr2l,c
 28746  014CEE  50E2               	movf	fsr1h,w,c
 28747  014CF0  6EDA               	movwf	fsr2h,c
 28748  014CF2  0EFF               	movlw	255
 28749  014CF4  22DA               	addwfc	fsr2h,f,c
 28750  014CF6  2ADE               	incf	postinc2,f,c
 28751  014CF8  0E00               	movlw	0
 28752  014CFA  22DE               	addwfc	postinc2,f,c
 28753  014CFC  22DE               	addwfc	postinc2,f,c
 28754  014CFE  22DE               	addwfc	postinc2,f,c
 28755                           
 28756                           ;stkvar	_b @ sp[(-4)+-4]
 28757  014D00  0EFB               	movlw	-5
 28758  014D02  A0E3               	btfss	plusw1,0,c
 28759  014D04  D01C               	goto	l8124
 28760  014D06  0E01               	movlw	1
 28761  014D08  6E0C               	movwf	(btemp+11)^0,c
 28762                           
 28763                           ;stkvar	_b @ sp[(-4)+-4]
 28764  014D0A  50E1               	movf	fsr1l,w,c
 28765  014D0C  0FF8               	addlw	-8
 28766  014D0E  6ED9               	movwf	fsr2l,c
 28767  014D10  50E2               	movf	fsr1h,w,c
 28768  014D12  6EDA               	movwf	fsr2h,c
 28769  014D14  0EFF               	movlw	255
 28770  014D16  22DA               	addwfc	fsr2h,f,c
 28771  014D18  280C               	incf	(btemp+11)^0,w,c
 28772  014D1A  52DE               	movf	postinc2,f,c
 28773  014D1C  D008               	goto	u5920
 28774  014D1E                     u5925:
 28775  014D1E  52DE               	movf	postinc2,f,c
 28776  014D20  90D8               	bcf	status,0,c
 28777  014D22  BEDC               	btfsc	preinc2,7,c
 28778  014D24  80D8               	bsf	status,0,c
 28779  014D26  32DD               	rrcf	postdec2,f,c
 28780  014D28  32DD               	rrcf	postdec2,f,c
 28781  014D2A  32DD               	rrcf	postdec2,f,c
 28782  014D2C  32DE               	rrcf	postinc2,f,c
 28783  014D2E                     u5920:
 28784  014D2E  2EE8               	decfsz	wreg,f,c
 28785  014D30  D7F6               	goto	u5925
 28786                           
 28787                           ;stkvar	_bexp @ sp[(-4)+1]
 28788  014D32  0EFD               	movlw	-3
 28789  014D34  28E3               	incf	plusw1,w,c
 28790  014D36  B4D8               	btfsc	status,2,c
 28791  014D38  D002               	goto	l8124
 28792                           
 28793                           ;stkvar	_bexp @ sp[(-4)+1]
 28794  014D3A  0EFD               	movlw	-3
 28795  014D3C  2AE3               	incf	plusw1,f,c
 28796  014D3E                     l8124:
 28797                           
 28798                           ;stkvar	_bexp @ sp[(-4)+1]
 28799  014D3E  0EFD               	movlw	-3
 28800  014D40  28E3               	incf	plusw1,w,c
 28801  014D42  B4D8               	btfsc	status,2,c
 28802  014D44  D004               	goto	u5950
 28803                           
 28804                           ;stkvar	_bexp @ sp[(-4)+1]
 28805  014D46  0EFD               	movlw	-3
 28806  014D48  50E3               	movf	plusw1,w,c
 28807  014D4A  A4D8               	btfss	status,2,c
 28808  014D4C  D00E               	goto	l8134
 28809  014D4E                     u5950:
 28810                           
 28811                           ;stkvar	_b @ sp[(-4)+-4]
 28812  014D4E  0EF8               	movlw	-8
 28813  014D50  6AE3               	clrf	plusw1,c
 28814  014D52  0EF9               	movlw	-7
 28815  014D54  6AE3               	clrf	plusw1,c
 28816  014D56  0EFA               	movlw	-6
 28817  014D58  6AE3               	clrf	plusw1,c
 28818  014D5A  0EFB               	movlw	-5
 28819  014D5C  6AE3               	clrf	plusw1,c
 28820                           
 28821                           ;stkvar	_bexp @ sp[(-4)+1]
 28822  014D5E  0EFD               	movlw	-3
 28823  014D60  50E3               	movf	plusw1,w,c
 28824  014D62  A4D8               	btfss	status,2,c
 28825  014D64  D002               	goto	l8134
 28826                           
 28827                           ;stkvar	_signs @ sp[(-4)+3]
 28828  014D66  0EFF               	movlw	-1
 28829  014D68  6AE3               	clrf	plusw1,c
 28830  014D6A                     l8134:
 28831                           
 28832                           ;stkvar	_bexp @ sp[(-4)+1]
 28833  014D6A  0EFD               	movlw	-3
 28834  014D6C  A0E3               	btfss	plusw1,0,c
 28835  014D6E  D009               	goto	l8138
 28836                           
 28837                           ;stkvar	_b @ sp[(-4)+-4]
 28838  014D70  0EFA               	movlw	250
 28839  014D72  24E1               	addwf	fsr1l,w,c
 28840  014D74  6ED9               	movwf	fsr2l,c
 28841  014D76  0EFF               	movlw	255
 28842  014D78  20E2               	addwfc	fsr1h,w,c
 28843  014D7A  6EDA               	movwf	fsr2h,c
 28844  014D7C  0E00               	movlw	0
 28845  014D7E  8EDB               	bsf	plusw2,7,c
 28846  014D80  D008               	goto	l8140
 28847  014D82                     l8138:
 28848                           
 28849                           ;stkvar	_b @ sp[(-4)+-4]
 28850  014D82  0EFA               	movlw	250
 28851  014D84  24E1               	addwf	fsr1l,w,c
 28852  014D86  6ED9               	movwf	fsr2l,c
 28853  014D88  0EFF               	movlw	255
 28854  014D8A  20E2               	addwfc	fsr1h,w,c
 28855  014D8C  6EDA               	movwf	fsr2h,c
 28856  014D8E  0E7F               	movlw	127
 28857  014D90  16DF               	andwf	indf2,f,c
 28858  014D92                     l8140:
 28859                           
 28860                           ;stkvar	_b @ sp[(-4)+-4]
 28861  014D92  0EFB               	movlw	251
 28862  014D94  24E1               	addwf	fsr1l,w,c
 28863  014D96  6ED9               	movwf	fsr2l,c
 28864  014D98  0EFF               	movlw	255
 28865  014D9A  20E2               	addwfc	fsr1h,w,c
 28866  014D9C  6EDA               	movwf	fsr2h,c
 28867                           
 28868                           ;stkvar	_bexp @ sp[(-4)+1]
 28869  014D9E  0EFD               	movlw	-3
 28870  014DA0  006F FF8C  F00C    	movff	plusw1,btemp+11
 28871  014DA6  90D8               	bcf	status,0,c
 28872  014DA8  300C               	rrcf	(btemp+11)^0,w,c
 28873  014DAA  6EDF               	movwf	indf2,c
 28874                           
 28875                           ;stkvar	_signs @ sp[(-4)+3]
 28876  014DAC  0EFF               	movlw	-1
 28877  014DAE  AEE3               	btfss	plusw1,7,c
 28878  014DB0  D008               	goto	l8146
 28879                           
 28880                           ;stkvar	_b @ sp[(-4)+-4]
 28881  014DB2  0EFB               	movlw	251
 28882  014DB4  24E1               	addwf	fsr1l,w,c
 28883  014DB6  6ED9               	movwf	fsr2l,c
 28884  014DB8  0EFF               	movlw	255
 28885  014DBA  20E2               	addwfc	fsr1h,w,c
 28886  014DBC  6EDA               	movwf	fsr2h,c
 28887  014DBE  0E00               	movlw	0
 28888  014DC0  8EDB               	bsf	plusw2,7,c
 28889  014DC2                     l8146:
 28890                           
 28891                           ;stkvar	_b @ sp[(-4)+-4]
 28892  014DC2  0EF8               	movlw	-8
 28893  014DC4  006F FF8C  F001    	movff	plusw1,btemp
 28894  014DCA  0EF9               	movlw	-7
 28895  014DCC  006F FF8C  F002    	movff	plusw1,btemp+1
 28896  014DD2  0EFA               	movlw	-6
 28897  014DD4  006F FF8C  F003    	movff	plusw1,btemp+2
 28898  014DDA  0EFB               	movlw	-5
 28899  014DDC  006F FF8C  F004    	movff	plusw1,btemp+3
 28900  014DE2                     l3040:
 28901                           
 28902                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 28903  014DE2  0EF4               	movlw	244
 28904  014DE4  26E1               	addwf	fsr1l,f,c
 28905  014DE6  0EFF               	movlw	255
 28906  014DE8  22E2               	addwfc	fsr1h,f,c
 28907  014DEA  0012               	return		;funcret
 28908  014DEC                     __end_of___fladd:
 28909                           	opt callstack 0
 28910                           
 28911 ;; *************** function ___flmul *****************
 28912 ;; Defined at:
 28913 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 28914 ;; Parameters:    Size  Location     Type
 28915 ;;  b               4  [STACK] unsigned char 
 28916 ;;  a               4  [STACK] unsigned char 
 28917 ;; Auto vars:     Size  Location     Type
 28918 ;;  prod            4  [STACK] struct .
 28919 ;;  grs             4  [STACK] unsigned long 
 28920 ;;  temp            2  [STACK] struct .
 28921 ;;  bexp            1  [STACK] unsigned char 
 28922 ;;  aexp            1  [STACK] unsigned char 
 28923 ;;  sign            1  [STACK] unsigned char 
 28924 ;; Return value:  Size  Location     Type
 28925 ;;                  4  [STACK] unsigned char 
 28926 ;; Registers used:
 28927 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 28928 ;; Tracked objects:
 28929 ;;		On entry : 0/0
 28930 ;;		On exit  : 0/0
 28931 ;;		Unchanged: 0/0
 28932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28937 ;;Total ram usage:        0 bytes
 28938 ;; Hardware stack levels used:    1
 28939 ;; Hardware stack levels required when called:   15
 28940 ;; This function calls:
 28941 ;;		Nothing
 28942 ;; This function is called by:
 28943 ;;		_conv_raw_result
 28944 ;;		_lp_filter
 28945 ;;		_calc_model_data
 28946 ;;		_calc_bsoc
 28947 ;;		_init_bsoc
 28948 ;;		_efgtoa
 28949 ;; This function uses a reentrant model
 28950 ;;
 28951                           
 28952                           	psect	text113
 28953  013E06                     __ptext113:
 28954                           	opt callstack 0
 28955  013E06                     ___flmul:
 28956                           	opt callstack 0
 28957                           
 28958                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 28959  013E06  0E0D               	movlw	13
 28960  013E08  26E1               	addwf	fsr1l,f,c
 28961  013E0A  0E00               	movlw	0
 28962  013E0C  22E2               	addwfc	fsr1h,f,c
 28963                           
 28964                           ;stkvar	_b @ sp[(-13)+-4]
 28965                           
 28966                           ;incstack = 0
 28967 ;; hardware stack exceeded
 28968  013E0E  0EF2               	movlw	242
 28969  013E10  24E1               	addwf	fsr1l,w,c
 28970  013E12  6ED9               	movwf	fsr2l,c
 28971  013E14  0EFF               	movlw	255
 28972  013E16  20E2               	addwfc	fsr1h,w,c
 28973  013E18  6EDA               	movwf	fsr2h,c
 28974  013E1A  50DF               	movf	indf2,w,c
 28975  013E1C  6E0C               	movwf	(btemp+11)^0,c
 28976  013E1E  0E80               	movlw	128
 28977  013E20  160C               	andwf	(btemp+11)^0,f,c
 28978                           
 28979                           ;stkvar	_sign @ sp[(-13)+12]
 28980  013E22  0EFF               	movlw	-1
 28981  013E24  0060  F033  FFE3   	movff	btemp+11,plusw1
 28982                           
 28983                           ;stkvar	_b @ sp[(-13)+-4]
 28984  013E2A  0EF2               	movlw	242
 28985  013E2C  24E1               	addwf	fsr1l,w,c
 28986  013E2E  6ED9               	movwf	fsr2l,c
 28987  013E30  0EFF               	movlw	255
 28988  013E32  20E2               	addwfc	fsr1h,w,c
 28989  013E34  6EDA               	movwf	fsr2h,c
 28990  013E36  50DF               	movf	indf2,w,c
 28991  013E38  6E0C               	movwf	(btemp+11)^0,c
 28992  013E3A  90D8               	bcf	status,0,c
 28993  013E3C  340C               	rlcf	(btemp+11)^0,w,c
 28994  013E3E  6E0B               	movwf	(btemp+10)^0,c
 28995                           
 28996                           ;stkvar	_bexp @ sp[(-13)+10]
 28997  013E40  0EFD               	movlw	-3
 28998  013E42  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28999                           
 29000                           ;stkvar	_b @ sp[(-13)+-4]
 29001  013E48  0EF1               	movlw	241
 29002  013E4A  24E1               	addwf	fsr1l,w,c
 29003  013E4C  6ED9               	movwf	fsr2l,c
 29004  013E4E  0EFF               	movlw	255
 29005  013E50  20E2               	addwfc	fsr1h,w,c
 29006  013E52  6EDA               	movwf	fsr2h,c
 29007  013E54  AEDF               	btfss	indf2,7,c
 29008  013E56  D002               	goto	l8572
 29009                           
 29010                           ;stkvar	_bexp @ sp[(-13)+10]
 29011  013E58  0EFD               	movlw	-3
 29012  013E5A  80E3               	bsf	plusw1,0,c
 29013  013E5C                     l8572:
 29014                           
 29015                           ;stkvar	_bexp @ sp[(-13)+10]
 29016  013E5C  0EFD               	movlw	-3
 29017  013E5E  50E3               	movf	plusw1,w,c
 29018  013E60  B4D8               	btfsc	status,2,c
 29019  013E62  D01F               	goto	l8580
 29020                           
 29021                           ;stkvar	_bexp @ sp[(-13)+10]
 29022  013E64  0EFD               	movlw	-3
 29023  013E66  28E3               	incf	plusw1,w,c
 29024  013E68  A4D8               	btfss	status,2,c
 29025  013E6A  D018               	goto	l8578
 29026  013E6C  0E00               	movlw	0
 29027  013E6E  6E09               	movwf	(btemp+8)^0,c
 29028  013E70  0E00               	movlw	0
 29029  013E72  6E0A               	movwf	(btemp+9)^0,c
 29030  013E74  0E00               	movlw	0
 29031  013E76  6E0B               	movwf	(btemp+10)^0,c
 29032  013E78  0E00               	movlw	0
 29033  013E7A  6E0C               	movwf	(btemp+11)^0,c
 29034                           
 29035                           ;stkvar	_b @ sp[(-13)+-4]
 29036  013E7C  0EEF               	movlw	-17
 29037  013E7E  0060  F027  FFE3   	movff	btemp+8,plusw1
 29038  013E84  0EF0               	movlw	-16
 29039  013E86  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29040  013E8C  0EF1               	movlw	-15
 29041  013E8E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29042  013E94  0EF2               	movlw	-14
 29043  013E96  0060  F033  FFE3   	movff	btemp+11,plusw1
 29044  013E9C                     l8578:
 29045                           
 29046                           ;stkvar	_b @ sp[(-13)+-4]
 29047  013E9C  0EF1               	movlw	-15
 29048  013E9E  8EE3               	bsf	plusw1,7,c
 29049  013EA0  D018               	goto	l8582
 29050  013EA2                     l8580:
 29051  013EA2  0E00               	movlw	0
 29052  013EA4  6E09               	movwf	(btemp+8)^0,c
 29053  013EA6  0E00               	movlw	0
 29054  013EA8  6E0A               	movwf	(btemp+9)^0,c
 29055  013EAA  0E00               	movlw	0
 29056  013EAC  6E0B               	movwf	(btemp+10)^0,c
 29057  013EAE  0E00               	movlw	0
 29058  013EB0  6E0C               	movwf	(btemp+11)^0,c
 29059                           
 29060                           ;stkvar	_b @ sp[(-13)+-4]
 29061  013EB2  0EEF               	movlw	-17
 29062  013EB4  0060  F027  FFE3   	movff	btemp+8,plusw1
 29063  013EBA  0EF0               	movlw	-16
 29064  013EBC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29065  013EC2  0EF1               	movlw	-15
 29066  013EC4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29067  013ECA  0EF2               	movlw	-14
 29068  013ECC  0060  F033  FFE3   	movff	btemp+11,plusw1
 29069  013ED2                     l8582:
 29070                           
 29071                           ;stkvar	_a @ sp[(-13)+-8]
 29072  013ED2  0EEE               	movlw	238
 29073  013ED4  24E1               	addwf	fsr1l,w,c
 29074  013ED6  6ED9               	movwf	fsr2l,c
 29075  013ED8  0EFF               	movlw	255
 29076  013EDA  20E2               	addwfc	fsr1h,w,c
 29077  013EDC  6EDA               	movwf	fsr2h,c
 29078  013EDE  50DF               	movf	indf2,w,c
 29079  013EE0  6E0C               	movwf	(btemp+11)^0,c
 29080  013EE2  0E80               	movlw	128
 29081  013EE4  160C               	andwf	(btemp+11)^0,f,c
 29082                           
 29083                           ;stkvar	_sign @ sp[(-13)+12]
 29084  013EE6  50E1               	movf	fsr1l,w,c
 29085  013EE8  0FFF               	addlw	-1
 29086  013EEA  6ED9               	movwf	fsr2l,c
 29087  013EEC  50E2               	movf	fsr1h,w,c
 29088  013EEE  6EDA               	movwf	fsr2h,c
 29089  013EF0  0EFF               	movlw	255
 29090  013EF2  22DA               	addwfc	fsr2h,f,c
 29091  013EF4  500C               	movf	(btemp+11)^0,w,c
 29092  013EF6  1ADF               	xorwf	indf2,f,c
 29093                           
 29094                           ;stkvar	_a @ sp[(-13)+-8]
 29095  013EF8  0EEE               	movlw	238
 29096  013EFA  24E1               	addwf	fsr1l,w,c
 29097  013EFC  6ED9               	movwf	fsr2l,c
 29098  013EFE  0EFF               	movlw	255
 29099  013F00  20E2               	addwfc	fsr1h,w,c
 29100  013F02  6EDA               	movwf	fsr2h,c
 29101  013F04  50DF               	movf	indf2,w,c
 29102  013F06  6E0C               	movwf	(btemp+11)^0,c
 29103  013F08  90D8               	bcf	status,0,c
 29104  013F0A  340C               	rlcf	(btemp+11)^0,w,c
 29105  013F0C  6E0B               	movwf	(btemp+10)^0,c
 29106                           
 29107                           ;stkvar	_aexp @ sp[(-13)+11]
 29108  013F0E  0EFE               	movlw	-2
 29109  013F10  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29110                           
 29111                           ;stkvar	_a @ sp[(-13)+-8]
 29112  013F16  0EED               	movlw	237
 29113  013F18  24E1               	addwf	fsr1l,w,c
 29114  013F1A  6ED9               	movwf	fsr2l,c
 29115  013F1C  0EFF               	movlw	255
 29116  013F1E  20E2               	addwfc	fsr1h,w,c
 29117  013F20  6EDA               	movwf	fsr2h,c
 29118  013F22  AEDF               	btfss	indf2,7,c
 29119  013F24  D002               	goto	l8590
 29120                           
 29121                           ;stkvar	_aexp @ sp[(-13)+11]
 29122  013F26  0EFE               	movlw	-2
 29123  013F28  80E3               	bsf	plusw1,0,c
 29124  013F2A                     l8590:
 29125                           
 29126                           ;stkvar	_aexp @ sp[(-13)+11]
 29127  013F2A  0EFE               	movlw	-2
 29128  013F2C  50E3               	movf	plusw1,w,c
 29129  013F2E  B4D8               	btfsc	status,2,c
 29130  013F30  D01F               	goto	l8598
 29131                           
 29132                           ;stkvar	_aexp @ sp[(-13)+11]
 29133  013F32  0EFE               	movlw	-2
 29134  013F34  28E3               	incf	plusw1,w,c
 29135  013F36  A4D8               	btfss	status,2,c
 29136  013F38  D018               	goto	l8596
 29137  013F3A  0E00               	movlw	0
 29138  013F3C  6E09               	movwf	(btemp+8)^0,c
 29139  013F3E  0E00               	movlw	0
 29140  013F40  6E0A               	movwf	(btemp+9)^0,c
 29141  013F42  0E00               	movlw	0
 29142  013F44  6E0B               	movwf	(btemp+10)^0,c
 29143  013F46  0E00               	movlw	0
 29144  013F48  6E0C               	movwf	(btemp+11)^0,c
 29145                           
 29146                           ;stkvar	_a @ sp[(-13)+-8]
 29147  013F4A  0EEB               	movlw	-21
 29148  013F4C  0060  F027  FFE3   	movff	btemp+8,plusw1
 29149  013F52  0EEC               	movlw	-20
 29150  013F54  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29151  013F5A  0EED               	movlw	-19
 29152  013F5C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29153  013F62  0EEE               	movlw	-18
 29154  013F64  0060  F033  FFE3   	movff	btemp+11,plusw1
 29155  013F6A                     l8596:
 29156                           
 29157                           ;stkvar	_a @ sp[(-13)+-8]
 29158  013F6A  0EED               	movlw	-19
 29159  013F6C  8EE3               	bsf	plusw1,7,c
 29160  013F6E  D018               	goto	l8600
 29161  013F70                     l8598:
 29162  013F70  0E00               	movlw	0
 29163  013F72  6E09               	movwf	(btemp+8)^0,c
 29164  013F74  0E00               	movlw	0
 29165  013F76  6E0A               	movwf	(btemp+9)^0,c
 29166  013F78  0E00               	movlw	0
 29167  013F7A  6E0B               	movwf	(btemp+10)^0,c
 29168  013F7C  0E00               	movlw	0
 29169  013F7E  6E0C               	movwf	(btemp+11)^0,c
 29170                           
 29171                           ;stkvar	_a @ sp[(-13)+-8]
 29172  013F80  0EEB               	movlw	-21
 29173  013F82  0060  F027  FFE3   	movff	btemp+8,plusw1
 29174  013F88  0EEC               	movlw	-20
 29175  013F8A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29176  013F90  0EED               	movlw	-19
 29177  013F92  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29178  013F98  0EEE               	movlw	-18
 29179  013F9A  0060  F033  FFE3   	movff	btemp+11,plusw1
 29180  013FA0                     l8600:
 29181                           
 29182                           ;stkvar	_aexp @ sp[(-13)+11]
 29183  013FA0  0EFE               	movlw	-2
 29184  013FA2  50E3               	movf	plusw1,w,c
 29185  013FA4  B4D8               	btfsc	status,2,c
 29186  013FA6  D004               	goto	u6940
 29187                           
 29188                           ;stkvar	_bexp @ sp[(-13)+10]
 29189  013FA8  0EFD               	movlw	-3
 29190  013FAA  50E3               	movf	plusw1,w,c
 29191  013FAC  A4D8               	btfss	status,2,c
 29192  013FAE  D009               	goto	l8608
 29193  013FB0                     u6940:
 29194  013FB0  0E00               	movlw	0
 29195  013FB2  6E01               	movwf	btemp^0,c
 29196  013FB4  0E00               	movlw	0
 29197  013FB6  6E02               	movwf	(btemp+1)^0,c
 29198  013FB8  0E00               	movlw	0
 29199  013FBA  6E03               	movwf	(btemp+2)^0,c
 29200  013FBC  0E00               	movlw	0
 29201  013FBE  6E04               	movwf	(btemp+3)^0,c
 29202  013FC0  D332               	goto	l3121
 29203  013FC2                     l8608:
 29204                           
 29205                           ;stkvar	_b @ sp[(-13)+-4]
 29206  013FC2  0EEF               	movlw	-17
 29207  013FC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 29208                           
 29209                           ;stkvar	_a @ sp[(-13)+-8]
 29210  013FCA  0EED               	movlw	237
 29211  013FCC  24E1               	addwf	fsr1l,w,c
 29212  013FCE  6ED9               	movwf	fsr2l,c
 29213  013FD0  0EFF               	movlw	255
 29214  013FD2  20E2               	addwfc	fsr1h,w,c
 29215  013FD4  6EDA               	movwf	fsr2h,c
 29216  013FD6  50DF               	movf	indf2,w,c
 29217  013FD8  020C               	mulwf	(btemp+11)^0,c
 29218                           
 29219                           ;stkvar	_temp @ sp[(-13)+8]
 29220  013FDA  0EFB               	movlw	-5
 29221  013FDC  006F FFCF FFE3     	movff	prodl,plusw1
 29222  013FE2  0EFC               	movlw	-4
 29223  013FE4  006F FFD3 FFE3     	movff	prodh,plusw1
 29224                           
 29225                           ;stkvar	_temp @ sp[(-13)+8]
 29226  013FEA  0EFB               	movlw	-5
 29227  013FEC  006F FF8C  F00C    	movff	plusw1,btemp+11
 29228  013FF2  0060  F030  F005   	movff	btemp+11,btemp+4
 29229  013FF8  6A06               	clrf	(btemp+5)^0,c
 29230  013FFA  6A07               	clrf	(btemp+6)^0,c
 29231  013FFC  6A08               	clrf	(btemp+7)^0,c
 29232                           
 29233                           ;stkvar	_grs @ sp[(-13)+4]
 29234  013FFE  0EF7               	movlw	-9
 29235  014000  0060  F017  FFE3   	movff	btemp+4,plusw1
 29236  014006  0EF8               	movlw	-8
 29237  014008  0060  F01B  FFE3   	movff	btemp+5,plusw1
 29238  01400E  0EF9               	movlw	-7
 29239  014010  0060  F01F  FFE3   	movff	btemp+6,plusw1
 29240  014016  0EFA               	movlw	-6
 29241  014018  0060  F023  FFE3   	movff	btemp+7,plusw1
 29242                           
 29243                           ;stkvar	_temp @ sp[(-13)+8]
 29244  01401E  0EFC               	movlw	252
 29245  014020  24E1               	addwf	fsr1l,w,c
 29246  014022  6ED9               	movwf	fsr2l,c
 29247  014024  0EFF               	movlw	255
 29248  014026  20E2               	addwfc	fsr1h,w,c
 29249  014028  6EDA               	movwf	fsr2h,c
 29250  01402A  50DF               	movf	indf2,w,c
 29251  01402C  6E0C               	movwf	(btemp+11)^0,c
 29252  01402E  0060  F030  F005   	movff	btemp+11,btemp+4
 29253  014034  6A06               	clrf	(btemp+5)^0,c
 29254  014036  6A07               	clrf	(btemp+6)^0,c
 29255  014038  6A08               	clrf	(btemp+7)^0,c
 29256                           
 29257                           ;stkvar	_prod @ sp[(-13)+0]
 29258  01403A  0EF3               	movlw	-13
 29259  01403C  0060  F017  FFE3   	movff	btemp+4,plusw1
 29260  014042  0EF4               	movlw	-12
 29261  014044  0060  F01B  FFE3   	movff	btemp+5,plusw1
 29262  01404A  0EF5               	movlw	-11
 29263  01404C  0060  F01F  FFE3   	movff	btemp+6,plusw1
 29264  014052  0EF6               	movlw	-10
 29265  014054  0060  F023  FFE3   	movff	btemp+7,plusw1
 29266                           
 29267                           ;stkvar	_b @ sp[(-13)+-4]
 29268  01405A  0EF0               	movlw	240
 29269  01405C  24E1               	addwf	fsr1l,w,c
 29270  01405E  6ED9               	movwf	fsr2l,c
 29271  014060  0EFF               	movlw	255
 29272  014062  20E2               	addwfc	fsr1h,w,c
 29273  014064  6EDA               	movwf	fsr2h,c
 29274  014066  50DF               	movf	indf2,w,c
 29275  014068  6E0C               	movwf	(btemp+11)^0,c
 29276                           
 29277                           ;stkvar	_a @ sp[(-13)+-8]
 29278  01406A  0EEC               	movlw	236
 29279  01406C  24E1               	addwf	fsr1l,w,c
 29280  01406E  6ED9               	movwf	fsr2l,c
 29281  014070  0EFF               	movlw	255
 29282  014072  20E2               	addwfc	fsr1h,w,c
 29283  014074  6EDA               	movwf	fsr2h,c
 29284  014076  50DF               	movf	indf2,w,c
 29285  014078  020C               	mulwf	(btemp+11)^0,c
 29286                           
 29287                           ;stkvar	_temp @ sp[(-13)+8]
 29288  01407A  0EFB               	movlw	-5
 29289  01407C  006F FFCF FFE3     	movff	prodl,plusw1
 29290  014082  0EFC               	movlw	-4
 29291  014084  006F FFD3 FFE3     	movff	prodh,plusw1
 29292                           
 29293                           ;stkvar	_grs @ sp[(-13)+4]
 29294  01408A  50E1               	movf	fsr1l,w,c
 29295  01408C  0FF7               	addlw	-9
 29296  01408E  6ED9               	movwf	fsr2l,c
 29297  014090  50E2               	movf	fsr1h,w,c
 29298  014092  6EDA               	movwf	fsr2h,c
 29299  014094  0EFF               	movlw	255
 29300  014096  22DA               	addwfc	fsr2h,f,c
 29301                           
 29302                           ;stkvar	_temp @ sp[(-13)+8]
 29303  014098  0EFB               	movlw	-5
 29304  01409A  50E3               	movf	plusw1,w,c
 29305  01409C  26DE               	addwf	postinc2,f,c
 29306  01409E  0E00               	movlw	0
 29307  0140A0  22DE               	addwfc	postinc2,f,c
 29308  0140A2  22DE               	addwfc	postinc2,f,c
 29309  0140A4  22DE               	addwfc	postinc2,f,c
 29310                           
 29311                           ;stkvar	_prod @ sp[(-13)+0]
 29312  0140A6  50E1               	movf	fsr1l,w,c
 29313  0140A8  0FF3               	addlw	-13
 29314  0140AA  6ED9               	movwf	fsr2l,c
 29315  0140AC  50E2               	movf	fsr1h,w,c
 29316  0140AE  6EDA               	movwf	fsr2h,c
 29317  0140B0  0EFF               	movlw	255
 29318  0140B2  22DA               	addwfc	fsr2h,f,c
 29319                           
 29320                           ;stkvar	_temp @ sp[(-13)+8]
 29321  0140B4  0EFC               	movlw	252
 29322  0140B6  24E1               	addwf	fsr1l,w,c
 29323  0140B8  6EE9               	movwf	fsr0l,c
 29324  0140BA  0EFF               	movlw	255
 29325  0140BC  20E2               	addwfc	fsr1h,w,c
 29326  0140BE  6EEA               	movwf	fsr0h,c
 29327  0140C0  50EF               	movf	indf0,w,c
 29328  0140C2  26DE               	addwf	postinc2,f,c
 29329  0140C4  0E00               	movlw	0
 29330  0140C6  22DE               	addwfc	postinc2,f,c
 29331  0140C8  22DE               	addwfc	postinc2,f,c
 29332  0140CA  22DE               	addwfc	postinc2,f,c
 29333                           
 29334                           ;stkvar	_b @ sp[(-13)+-4]
 29335  0140CC  0EF1               	movlw	241
 29336  0140CE  24E1               	addwf	fsr1l,w,c
 29337  0140D0  6ED9               	movwf	fsr2l,c
 29338  0140D2  0EFF               	movlw	255
 29339  0140D4  20E2               	addwfc	fsr1h,w,c
 29340  0140D6  6EDA               	movwf	fsr2h,c
 29341  0140D8  50DF               	movf	indf2,w,c
 29342  0140DA  6E0C               	movwf	(btemp+11)^0,c
 29343                           
 29344                           ;stkvar	_a @ sp[(-13)+-8]
 29345  0140DC  0EEB               	movlw	-21
 29346  0140DE  50E3               	movf	plusw1,w,c
 29347  0140E0  020C               	mulwf	(btemp+11)^0,c
 29348                           
 29349                           ;stkvar	_temp @ sp[(-13)+8]
 29350  0140E2  0EFB               	movlw	-5
 29351  0140E4  006F FFCF FFE3     	movff	prodl,plusw1
 29352  0140EA  0EFC               	movlw	-4
 29353  0140EC  006F FFD3 FFE3     	movff	prodh,plusw1
 29354                           
 29355                           ;stkvar	_grs @ sp[(-13)+4]
 29356  0140F2  50E1               	movf	fsr1l,w,c
 29357  0140F4  0FF7               	addlw	-9
 29358  0140F6  6ED9               	movwf	fsr2l,c
 29359  0140F8  50E2               	movf	fsr1h,w,c
 29360  0140FA  6EDA               	movwf	fsr2h,c
 29361  0140FC  0EFF               	movlw	255
 29362  0140FE  22DA               	addwfc	fsr2h,f,c
 29363                           
 29364                           ;stkvar	_temp @ sp[(-13)+8]
 29365  014100  0EFB               	movlw	-5
 29366  014102  50E3               	movf	plusw1,w,c
 29367  014104  26DE               	addwf	postinc2,f,c
 29368  014106  0E00               	movlw	0
 29369  014108  22DE               	addwfc	postinc2,f,c
 29370  01410A  22DE               	addwfc	postinc2,f,c
 29371  01410C  22DE               	addwfc	postinc2,f,c
 29372                           
 29373                           ;stkvar	_prod @ sp[(-13)+0]
 29374  01410E  50E1               	movf	fsr1l,w,c
 29375  014110  0FF3               	addlw	-13
 29376  014112  6ED9               	movwf	fsr2l,c
 29377  014114  50E2               	movf	fsr1h,w,c
 29378  014116  6EDA               	movwf	fsr2h,c
 29379  014118  0EFF               	movlw	255
 29380  01411A  22DA               	addwfc	fsr2h,f,c
 29381                           
 29382                           ;stkvar	_temp @ sp[(-13)+8]
 29383  01411C  0EFC               	movlw	252
 29384  01411E  24E1               	addwf	fsr1l,w,c
 29385  014120  6EE9               	movwf	fsr0l,c
 29386  014122  0EFF               	movlw	255
 29387  014124  20E2               	addwfc	fsr1h,w,c
 29388  014126  6EEA               	movwf	fsr0h,c
 29389  014128  50EF               	movf	indf0,w,c
 29390  01412A  26DE               	addwf	postinc2,f,c
 29391  01412C  0E00               	movlw	0
 29392  01412E  22DE               	addwfc	postinc2,f,c
 29393  014130  22DE               	addwfc	postinc2,f,c
 29394  014132  22DE               	addwfc	postinc2,f,c
 29395                           
 29396                           ;stkvar	_grs @ sp[(-13)+4]
 29397  014134  50E1               	movf	fsr1l,w,c
 29398  014136  0FF7               	addlw	-9
 29399  014138  6ED9               	movwf	fsr2l,c
 29400  01413A  50E2               	movf	fsr1h,w,c
 29401  01413C  6EDA               	movwf	fsr2h,c
 29402  01413E  0EFF               	movlw	255
 29403  014140  22DA               	addwfc	fsr2h,f,c
 29404  014142  0E08               	movlw	8
 29405  014144                     u6955:
 29406  014144  90D8               	bcf	status,0,c
 29407  014146  36DE               	rlcf	postinc2,f,c
 29408  014148  36DE               	rlcf	postinc2,f,c
 29409  01414A  36DE               	rlcf	postinc2,f,c
 29410  01414C  36DD               	rlcf	postdec2,f,c
 29411  01414E  52DD               	movf	postdec2,f,c
 29412  014150  52DD               	movf	postdec2,f,c
 29413  014152  2EE8               	decfsz	wreg,f,c
 29414  014154  D7F7               	goto	u6955
 29415                           
 29416                           ;stkvar	_b @ sp[(-13)+-4]
 29417  014156  0EF0               	movlw	240
 29418  014158  24E1               	addwf	fsr1l,w,c
 29419  01415A  6ED9               	movwf	fsr2l,c
 29420  01415C  0EFF               	movlw	255
 29421  01415E  20E2               	addwfc	fsr1h,w,c
 29422  014160  6EDA               	movwf	fsr2h,c
 29423  014162  50DF               	movf	indf2,w,c
 29424  014164  6E0C               	movwf	(btemp+11)^0,c
 29425                           
 29426                           ;stkvar	_a @ sp[(-13)+-8]
 29427  014166  0EEB               	movlw	-21
 29428  014168  50E3               	movf	plusw1,w,c
 29429  01416A  020C               	mulwf	(btemp+11)^0,c
 29430                           
 29431                           ;stkvar	_temp @ sp[(-13)+8]
 29432  01416C  0EFB               	movlw	-5
 29433  01416E  006F FFCF FFE3     	movff	prodl,plusw1
 29434  014174  0EFC               	movlw	-4
 29435  014176  006F FFD3 FFE3     	movff	prodh,plusw1
 29436                           
 29437                           ;stkvar	_temp @ sp[(-13)+8]
 29438  01417C  0EFB               	movlw	-5
 29439  01417E  006F FF8C  F00B    	movff	plusw1,btemp+10
 29440  014184  0EFC               	movlw	-4
 29441  014186  006F FF8C  F00C    	movff	plusw1,btemp+11
 29442                           
 29443                           ;stkvar	_grs @ sp[(-13)+4]
 29444  01418C  50E1               	movf	fsr1l,w,c
 29445  01418E  0FF7               	addlw	-9
 29446  014190  6ED9               	movwf	fsr2l,c
 29447  014192  50E2               	movf	fsr1h,w,c
 29448  014194  6EDA               	movwf	fsr2h,c
 29449  014196  0EFF               	movlw	255
 29450  014198  22DA               	addwfc	fsr2h,f,c
 29451  01419A  500B               	movf	(btemp+10)^0,w,c
 29452  01419C  26DE               	addwf	postinc2,f,c
 29453  01419E  500C               	movf	(btemp+11)^0,w,c
 29454  0141A0  22DE               	addwfc	postinc2,f,c
 29455  0141A2  0E00               	movlw	0
 29456  0141A4  22DE               	addwfc	postinc2,f,c
 29457  0141A6  22DE               	addwfc	postinc2,f,c
 29458                           
 29459                           ;stkvar	_b @ sp[(-13)+-4]
 29460  0141A8  0EEF               	movlw	-17
 29461  0141AA  006F FF8C  F00C    	movff	plusw1,btemp+11
 29462                           
 29463                           ;stkvar	_a @ sp[(-13)+-8]
 29464  0141B0  0EEC               	movlw	236
 29465  0141B2  24E1               	addwf	fsr1l,w,c
 29466  0141B4  6ED9               	movwf	fsr2l,c
 29467  0141B6  0EFF               	movlw	255
 29468  0141B8  20E2               	addwfc	fsr1h,w,c
 29469  0141BA  6EDA               	movwf	fsr2h,c
 29470  0141BC  50DF               	movf	indf2,w,c
 29471  0141BE  020C               	mulwf	(btemp+11)^0,c
 29472                           
 29473                           ;stkvar	_temp @ sp[(-13)+8]
 29474  0141C0  0EFB               	movlw	-5
 29475  0141C2  006F FFCF FFE3     	movff	prodl,plusw1
 29476  0141C8  0EFC               	movlw	-4
 29477  0141CA  006F FFD3 FFE3     	movff	prodh,plusw1
 29478                           
 29479                           ;stkvar	_temp @ sp[(-13)+8]
 29480  0141D0  0EFB               	movlw	-5
 29481  0141D2  006F FF8C  F00B    	movff	plusw1,btemp+10
 29482  0141D8  0EFC               	movlw	-4
 29483  0141DA  006F FF8C  F00C    	movff	plusw1,btemp+11
 29484                           
 29485                           ;stkvar	_grs @ sp[(-13)+4]
 29486  0141E0  50E1               	movf	fsr1l,w,c
 29487  0141E2  0FF7               	addlw	-9
 29488  0141E4  6ED9               	movwf	fsr2l,c
 29489  0141E6  50E2               	movf	fsr1h,w,c
 29490  0141E8  6EDA               	movwf	fsr2h,c
 29491  0141EA  0EFF               	movlw	255
 29492  0141EC  22DA               	addwfc	fsr2h,f,c
 29493  0141EE  500B               	movf	(btemp+10)^0,w,c
 29494  0141F0  26DE               	addwf	postinc2,f,c
 29495  0141F2  500C               	movf	(btemp+11)^0,w,c
 29496  0141F4  22DE               	addwfc	postinc2,f,c
 29497  0141F6  0E00               	movlw	0
 29498  0141F8  22DE               	addwfc	postinc2,f,c
 29499  0141FA  22DE               	addwfc	postinc2,f,c
 29500                           
 29501                           ;stkvar	_grs @ sp[(-13)+4]
 29502  0141FC  50E1               	movf	fsr1l,w,c
 29503  0141FE  0FF7               	addlw	-9
 29504  014200  6ED9               	movwf	fsr2l,c
 29505  014202  50E2               	movf	fsr1h,w,c
 29506  014204  6EDA               	movwf	fsr2h,c
 29507  014206  0EFF               	movlw	255
 29508  014208  22DA               	addwfc	fsr2h,f,c
 29509  01420A  0E08               	movlw	8
 29510  01420C                     u6965:
 29511  01420C  90D8               	bcf	status,0,c
 29512  01420E  36DE               	rlcf	postinc2,f,c
 29513  014210  36DE               	rlcf	postinc2,f,c
 29514  014212  36DE               	rlcf	postinc2,f,c
 29515  014214  36DD               	rlcf	postdec2,f,c
 29516  014216  52DD               	movf	postdec2,f,c
 29517  014218  52DD               	movf	postdec2,f,c
 29518  01421A  2EE8               	decfsz	wreg,f,c
 29519  01421C  D7F7               	goto	u6965
 29520                           
 29521                           ;stkvar	_b @ sp[(-13)+-4]
 29522  01421E  0EEF               	movlw	-17
 29523  014220  006F FF8C  F00C    	movff	plusw1,btemp+11
 29524                           
 29525                           ;stkvar	_a @ sp[(-13)+-8]
 29526  014226  0EEB               	movlw	-21
 29527  014228  50E3               	movf	plusw1,w,c
 29528  01422A  020C               	mulwf	(btemp+11)^0,c
 29529                           
 29530                           ;stkvar	_temp @ sp[(-13)+8]
 29531  01422C  0EFB               	movlw	-5
 29532  01422E  006F FFCF FFE3     	movff	prodl,plusw1
 29533  014234  0EFC               	movlw	-4
 29534  014236  006F FFD3 FFE3     	movff	prodh,plusw1
 29535                           
 29536                           ;stkvar	_temp @ sp[(-13)+8]
 29537  01423C  0EFB               	movlw	-5
 29538  01423E  006F FF8C  F00B    	movff	plusw1,btemp+10
 29539  014244  0EFC               	movlw	-4
 29540  014246  006F FF8C  F00C    	movff	plusw1,btemp+11
 29541                           
 29542                           ;stkvar	_grs @ sp[(-13)+4]
 29543  01424C  50E1               	movf	fsr1l,w,c
 29544  01424E  0FF7               	addlw	-9
 29545  014250  6ED9               	movwf	fsr2l,c
 29546  014252  50E2               	movf	fsr1h,w,c
 29547  014254  6EDA               	movwf	fsr2h,c
 29548  014256  0EFF               	movlw	255
 29549  014258  22DA               	addwfc	fsr2h,f,c
 29550  01425A  500B               	movf	(btemp+10)^0,w,c
 29551  01425C  26DE               	addwf	postinc2,f,c
 29552  01425E  500C               	movf	(btemp+11)^0,w,c
 29553  014260  22DE               	addwfc	postinc2,f,c
 29554  014262  0E00               	movlw	0
 29555  014264  22DE               	addwfc	postinc2,f,c
 29556  014266  22DE               	addwfc	postinc2,f,c
 29557                           
 29558                           ;stkvar	_b @ sp[(-13)+-4]
 29559  014268  0EF0               	movlw	240
 29560  01426A  24E1               	addwf	fsr1l,w,c
 29561  01426C  6ED9               	movwf	fsr2l,c
 29562  01426E  0EFF               	movlw	255
 29563  014270  20E2               	addwfc	fsr1h,w,c
 29564  014272  6EDA               	movwf	fsr2h,c
 29565  014274  50DF               	movf	indf2,w,c
 29566  014276  6E0C               	movwf	(btemp+11)^0,c
 29567                           
 29568                           ;stkvar	_a @ sp[(-13)+-8]
 29569  014278  0EED               	movlw	237
 29570  01427A  24E1               	addwf	fsr1l,w,c
 29571  01427C  6ED9               	movwf	fsr2l,c
 29572  01427E  0EFF               	movlw	255
 29573  014280  20E2               	addwfc	fsr1h,w,c
 29574  014282  6EDA               	movwf	fsr2h,c
 29575  014284  50DF               	movf	indf2,w,c
 29576  014286  020C               	mulwf	(btemp+11)^0,c
 29577                           
 29578                           ;stkvar	_temp @ sp[(-13)+8]
 29579  014288  0EFB               	movlw	-5
 29580  01428A  006F FFCF FFE3     	movff	prodl,plusw1
 29581  014290  0EFC               	movlw	-4
 29582  014292  006F FFD3 FFE3     	movff	prodh,plusw1
 29583                           
 29584                           ;stkvar	_temp @ sp[(-13)+8]
 29585  014298  0EFB               	movlw	-5
 29586  01429A  006F FF8C  F00B    	movff	plusw1,btemp+10
 29587  0142A0  0EFC               	movlw	-4
 29588  0142A2  006F FF8C  F00C    	movff	plusw1,btemp+11
 29589                           
 29590                           ;stkvar	_prod @ sp[(-13)+0]
 29591  0142A8  50E1               	movf	fsr1l,w,c
 29592  0142AA  0FF3               	addlw	-13
 29593  0142AC  6ED9               	movwf	fsr2l,c
 29594  0142AE  50E2               	movf	fsr1h,w,c
 29595  0142B0  6EDA               	movwf	fsr2h,c
 29596  0142B2  0EFF               	movlw	255
 29597  0142B4  22DA               	addwfc	fsr2h,f,c
 29598  0142B6  500B               	movf	(btemp+10)^0,w,c
 29599  0142B8  26DE               	addwf	postinc2,f,c
 29600  0142BA  500C               	movf	(btemp+11)^0,w,c
 29601  0142BC  22DE               	addwfc	postinc2,f,c
 29602  0142BE  0E00               	movlw	0
 29603  0142C0  22DE               	addwfc	postinc2,f,c
 29604  0142C2  22DE               	addwfc	postinc2,f,c
 29605                           
 29606                           ;stkvar	_b @ sp[(-13)+-4]
 29607  0142C4  0EF1               	movlw	241
 29608  0142C6  24E1               	addwf	fsr1l,w,c
 29609  0142C8  6ED9               	movwf	fsr2l,c
 29610  0142CA  0EFF               	movlw	255
 29611  0142CC  20E2               	addwfc	fsr1h,w,c
 29612  0142CE  6EDA               	movwf	fsr2h,c
 29613  0142D0  50DF               	movf	indf2,w,c
 29614  0142D2  6E0C               	movwf	(btemp+11)^0,c
 29615                           
 29616                           ;stkvar	_a @ sp[(-13)+-8]
 29617  0142D4  0EEC               	movlw	236
 29618  0142D6  24E1               	addwf	fsr1l,w,c
 29619  0142D8  6ED9               	movwf	fsr2l,c
 29620  0142DA  0EFF               	movlw	255
 29621  0142DC  20E2               	addwfc	fsr1h,w,c
 29622  0142DE  6EDA               	movwf	fsr2h,c
 29623  0142E0  50DF               	movf	indf2,w,c
 29624  0142E2  020C               	mulwf	(btemp+11)^0,c
 29625                           
 29626                           ;stkvar	_temp @ sp[(-13)+8]
 29627  0142E4  0EFB               	movlw	-5
 29628  0142E6  006F FFCF FFE3     	movff	prodl,plusw1
 29629  0142EC  0EFC               	movlw	-4
 29630  0142EE  006F FFD3 FFE3     	movff	prodh,plusw1
 29631                           
 29632                           ;stkvar	_temp @ sp[(-13)+8]
 29633  0142F4  0EFB               	movlw	-5
 29634  0142F6  006F FF8C  F00B    	movff	plusw1,btemp+10
 29635  0142FC  0EFC               	movlw	-4
 29636  0142FE  006F FF8C  F00C    	movff	plusw1,btemp+11
 29637                           
 29638                           ;stkvar	_prod @ sp[(-13)+0]
 29639  014304  50E1               	movf	fsr1l,w,c
 29640  014306  0FF3               	addlw	-13
 29641  014308  6ED9               	movwf	fsr2l,c
 29642  01430A  50E2               	movf	fsr1h,w,c
 29643  01430C  6EDA               	movwf	fsr2h,c
 29644  01430E  0EFF               	movlw	255
 29645  014310  22DA               	addwfc	fsr2h,f,c
 29646  014312  500B               	movf	(btemp+10)^0,w,c
 29647  014314  26DE               	addwf	postinc2,f,c
 29648  014316  500C               	movf	(btemp+11)^0,w,c
 29649  014318  22DE               	addwfc	postinc2,f,c
 29650  01431A  0E00               	movlw	0
 29651  01431C  22DE               	addwfc	postinc2,f,c
 29652  01431E  22DE               	addwfc	postinc2,f,c
 29653                           
 29654                           ;stkvar	_b @ sp[(-13)+-4]
 29655  014320  0EF1               	movlw	241
 29656  014322  24E1               	addwf	fsr1l,w,c
 29657  014324  6ED9               	movwf	fsr2l,c
 29658  014326  0EFF               	movlw	255
 29659  014328  20E2               	addwfc	fsr1h,w,c
 29660  01432A  6EDA               	movwf	fsr2h,c
 29661  01432C  50DF               	movf	indf2,w,c
 29662  01432E  6E0C               	movwf	(btemp+11)^0,c
 29663                           
 29664                           ;stkvar	_a @ sp[(-13)+-8]
 29665  014330  0EED               	movlw	237
 29666  014332  24E1               	addwf	fsr1l,w,c
 29667  014334  6ED9               	movwf	fsr2l,c
 29668  014336  0EFF               	movlw	255
 29669  014338  20E2               	addwfc	fsr1h,w,c
 29670  01433A  6EDA               	movwf	fsr2h,c
 29671  01433C  50DF               	movf	indf2,w,c
 29672  01433E  020C               	mulwf	(btemp+11)^0,c
 29673                           
 29674                           ;stkvar	_temp @ sp[(-13)+8]
 29675  014340  0EFB               	movlw	-5
 29676  014342  006F FFCF FFE3     	movff	prodl,plusw1
 29677  014348  0EFC               	movlw	-4
 29678  01434A  006F FFD3 FFE3     	movff	prodh,plusw1
 29679                           
 29680                           ;stkvar	_temp @ sp[(-13)+8]
 29681  014350  0EFB               	movlw	-5
 29682  014352  006F FF8C  F00B    	movff	plusw1,btemp+10
 29683  014358  0EFC               	movlw	-4
 29684  01435A  006F FF8C  F00C    	movff	plusw1,btemp+11
 29685  014360  500B               	movf	(btemp+10)^0,w,c
 29686  014362  6E05               	movwf	(btemp+4)^0,c
 29687  014364  500C               	movf	(btemp+11)^0,w,c
 29688  014366  6E06               	movwf	(btemp+5)^0,c
 29689  014368  6A07               	clrf	(btemp+6)^0,c
 29690  01436A  6A08               	clrf	(btemp+7)^0,c
 29691  01436C  0060  F01C  F008   	movff	btemp+6,btemp+7
 29692  014372  0060  F018  F007   	movff	btemp+5,btemp+6
 29693  014378  0060  F014  F006   	movff	btemp+4,btemp+5
 29694  01437E  6A05               	clrf	(btemp+4)^0,c
 29695                           
 29696                           ;stkvar	_prod @ sp[(-13)+0]
 29697  014380  50E1               	movf	fsr1l,w,c
 29698  014382  0FF3               	addlw	-13
 29699  014384  6ED9               	movwf	fsr2l,c
 29700  014386  50E2               	movf	fsr1h,w,c
 29701  014388  6EDA               	movwf	fsr2h,c
 29702  01438A  0EFF               	movlw	255
 29703  01438C  22DA               	addwfc	fsr2h,f,c
 29704  01438E  5005               	movf	(btemp+4)^0,w,c
 29705  014390  26DE               	addwf	postinc2,f,c
 29706  014392  5006               	movf	(btemp+5)^0,w,c
 29707  014394  22DE               	addwfc	postinc2,f,c
 29708  014396  5007               	movf	(btemp+6)^0,w,c
 29709  014398  22DE               	addwfc	postinc2,f,c
 29710  01439A  5008               	movf	(btemp+7)^0,w,c
 29711  01439C  22DE               	addwfc	postinc2,f,c
 29712                           
 29713                           ;stkvar	_prod @ sp[(-13)+0]
 29714  01439E  50E1               	movf	fsr1l,w,c
 29715  0143A0  0FF3               	addlw	-13
 29716  0143A2  6ED9               	movwf	fsr2l,c
 29717  0143A4  50E2               	movf	fsr1h,w,c
 29718  0143A6  6EDA               	movwf	fsr2h,c
 29719  0143A8  0EFF               	movlw	255
 29720  0143AA  22DA               	addwfc	fsr2h,f,c
 29721                           
 29722                           ;stkvar	_grs @ sp[(-13)+4]
 29723  0143AC  0EFA               	movlw	250
 29724  0143AE  24E1               	addwf	fsr1l,w,c
 29725  0143B0  6EE9               	movwf	fsr0l,c
 29726  0143B2  0EFF               	movlw	255
 29727  0143B4  20E2               	addwfc	fsr1h,w,c
 29728  0143B6  6EEA               	movwf	fsr0h,c
 29729  0143B8  50EF               	movf	indf0,w,c
 29730  0143BA  26DE               	addwf	postinc2,f,c
 29731  0143BC  0E00               	movlw	0
 29732  0143BE  22DE               	addwfc	postinc2,f,c
 29733  0143C0  22DE               	addwfc	postinc2,f,c
 29734  0143C2  22DE               	addwfc	postinc2,f,c
 29735                           
 29736                           ;stkvar	_grs @ sp[(-13)+4]
 29737  0143C4  50E1               	movf	fsr1l,w,c
 29738  0143C6  0FF7               	addlw	-9
 29739  0143C8  6ED9               	movwf	fsr2l,c
 29740  0143CA  50E2               	movf	fsr1h,w,c
 29741  0143CC  6EDA               	movwf	fsr2h,c
 29742  0143CE  0EFF               	movlw	255
 29743  0143D0  22DA               	addwfc	fsr2h,f,c
 29744  0143D2  0E08               	movlw	8
 29745  0143D4                     u6975:
 29746  0143D4  90D8               	bcf	status,0,c
 29747  0143D6  36DE               	rlcf	postinc2,f,c
 29748  0143D8  36DE               	rlcf	postinc2,f,c
 29749  0143DA  36DE               	rlcf	postinc2,f,c
 29750  0143DC  36DD               	rlcf	postdec2,f,c
 29751  0143DE  52DD               	movf	postdec2,f,c
 29752  0143E0  52DD               	movf	postdec2,f,c
 29753  0143E2  2EE8               	decfsz	wreg,f,c
 29754  0143E4  D7F7               	goto	u6975
 29755  0143E6  0E82               	movlw	130
 29756  0143E8  6E0B               	movwf	(btemp+10)^0,c
 29757  0143EA  0EFF               	movlw	255
 29758  0143EC  6E0C               	movwf	(btemp+11)^0,c
 29759                           
 29760                           ;stkvar	_bexp @ sp[(-13)+10]
 29761  0143EE  0EFD               	movlw	-3
 29762  0143F0  50E3               	movf	plusw1,w,c
 29763  0143F2  6E09               	movwf	(btemp+8)^0,c
 29764  0143F4  6A0A               	clrf	(btemp+9)^0,c
 29765                           
 29766                           ;stkvar	_aexp @ sp[(-13)+11]
 29767  0143F6  0EFE               	movlw	-2
 29768  0143F8  50E3               	movf	plusw1,w,c
 29769  0143FA  2609               	addwf	(btemp+8)^0,f,c
 29770  0143FC  0E00               	movlw	0
 29771  0143FE  220A               	addwfc	(btemp+9)^0,f,c
 29772  014400  500B               	movf	(btemp+10)^0,w,c
 29773  014402  2609               	addwf	(btemp+8)^0,f,c
 29774  014404  500C               	movf	(btemp+11)^0,w,c
 29775  014406  220A               	addwfc	(btemp+9)^0,f,c
 29776                           
 29777                           ;stkvar	_temp @ sp[(-13)+8]
 29778  014408  0EFB               	movlw	-5
 29779  01440A  0060  F027  FFE3   	movff	btemp+8,plusw1
 29780  014410  0EFC               	movlw	-4
 29781  014412  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29782  014418  D021               	goto	l8670
 29783  01441A                     l8660:
 29784                           
 29785                           ;stkvar	_prod @ sp[(-13)+0]
 29786  01441A  90D8               	bcf	status,0,c
 29787  01441C  0EF3               	movlw	-13
 29788  01441E  36E3               	rlcf	plusw1,f,c
 29789  014420  0EF4               	movlw	-12
 29790  014422  36E3               	rlcf	plusw1,f,c
 29791  014424  0EF5               	movlw	-11
 29792  014426  36E3               	rlcf	plusw1,f,c
 29793  014428  0EF6               	movlw	-10
 29794  01442A  36E3               	rlcf	plusw1,f,c
 29795                           
 29796                           ;stkvar	_grs @ sp[(-13)+4]
 29797  01442C  0EFA               	movlw	-6
 29798  01442E  AEE3               	btfss	plusw1,7,c
 29799  014430  D002               	goto	l8666
 29800                           
 29801                           ;stkvar	_prod @ sp[(-13)+0]
 29802  014432  0EF3               	movlw	-13
 29803  014434  80E3               	bsf	plusw1,0,c
 29804  014436                     l8666:
 29805                           
 29806                           ;stkvar	_grs @ sp[(-13)+4]
 29807  014436  90D8               	bcf	status,0,c
 29808  014438  0EF7               	movlw	-9
 29809  01443A  36E3               	rlcf	plusw1,f,c
 29810  01443C  0EF8               	movlw	-8
 29811  01443E  36E3               	rlcf	plusw1,f,c
 29812  014440  0EF9               	movlw	-7
 29813  014442  36E3               	rlcf	plusw1,f,c
 29814  014444  0EFA               	movlw	-6
 29815  014446  36E3               	rlcf	plusw1,f,c
 29816                           
 29817                           ;stkvar	_temp @ sp[(-13)+8]
 29818  014448  50E1               	movf	fsr1l,w,c
 29819  01444A  0FFB               	addlw	-5
 29820  01444C  6ED9               	movwf	fsr2l,c
 29821  01444E  50E2               	movf	fsr1h,w,c
 29822  014450  6EDA               	movwf	fsr2h,c
 29823  014452  0EFF               	movlw	255
 29824  014454  22DA               	addwfc	fsr2h,f,c
 29825  014456  06DE               	decf	postinc2,f,c
 29826  014458  0E00               	movlw	0
 29827  01445A  5ADD               	subwfb	postdec2,f,c
 29828  01445C                     l8670:
 29829                           
 29830                           ;stkvar	_prod @ sp[(-13)+0]
 29831  01445C  0EF5               	movlw	-11
 29832  01445E  AEE3               	btfss	plusw1,7,c
 29833  014460  D7DC               	goto	l8660
 29834                           
 29835                           ;stkvar	_aexp @ sp[(-13)+11]
 29836  014462  0EFE               	movlw	-2
 29837  014464  6AE3               	clrf	plusw1,c
 29838                           
 29839                           ;stkvar	_grs @ sp[(-13)+4]
 29840  014466  0EFA               	movlw	-6
 29841  014468  AEE3               	btfss	plusw1,7,c
 29842  01446A  D020               	goto	l8684
 29843                           
 29844                           ;stkvar	_grs @ sp[(-13)+4]
 29845  01446C  50E1               	movf	fsr1l,w,c
 29846  01446E  0FF7               	addlw	-9
 29847  014470  6ED9               	movwf	fsr2l,c
 29848  014472  50E2               	movf	fsr1h,w,c
 29849  014474  6EDA               	movwf	fsr2h,c
 29850  014476  0EFF               	movlw	255
 29851  014478  22DA               	addwfc	fsr2h,f,c
 29852  01447A  0EFF               	movlw	255
 29853  01447C  14DE               	andwf	postinc2,w,c
 29854  01447E  6E09               	movwf	(btemp+8)^0,c
 29855  014480  0EFF               	movlw	255
 29856  014482  14DE               	andwf	postinc2,w,c
 29857  014484  6E0A               	movwf	(btemp+9)^0,c
 29858  014486  0EFF               	movlw	255
 29859  014488  14DE               	andwf	postinc2,w,c
 29860  01448A  6E0B               	movwf	(btemp+10)^0,c
 29861  01448C  0E7F               	movlw	127
 29862  01448E  14DE               	andwf	postinc2,w,c
 29863  014490  6E0C               	movwf	(btemp+11)^0,c
 29864  014492  5009               	movf	(btemp+8)^0,w,c
 29865  014494  100A               	iorwf	(btemp+9)^0,w,c
 29866  014496  100B               	iorwf	(btemp+10)^0,w,c
 29867  014498  100C               	iorwf	(btemp+11)^0,w,c
 29868  01449A  B4D8               	btfsc	status,2,c
 29869  01449C  D004               	goto	l8680
 29870  01449E                     u7010:
 29871                           
 29872                           ;stkvar	_aexp @ sp[(-13)+11]
 29873  01449E  0EFE               	movlw	-2
 29874  0144A0  6AE3               	clrf	plusw1,c
 29875  0144A2  2AE3               	incf	plusw1,f,c
 29876  0144A4  D003               	goto	l8684
 29877  0144A6                     l8680:
 29878                           
 29879                           ;stkvar	_prod @ sp[(-13)+0]
 29880  0144A6  0EF3               	movlw	-13
 29881  0144A8  B0E3               	btfsc	plusw1,0,c
 29882  0144AA  D7F9               	goto	u7010
 29883  0144AC                     l8684:
 29884                           
 29885                           ;stkvar	_aexp @ sp[(-13)+11]
 29886  0144AC  0EFE               	movlw	-2
 29887  0144AE  50E3               	movf	plusw1,w,c
 29888  0144B0  B4D8               	btfsc	status,2,c
 29889  0144B2  D036               	goto	l8694
 29890                           
 29891                           ;stkvar	_prod @ sp[(-13)+0]
 29892  0144B4  50E1               	movf	fsr1l,w,c
 29893  0144B6  0FF3               	addlw	-13
 29894  0144B8  6ED9               	movwf	fsr2l,c
 29895  0144BA  50E2               	movf	fsr1h,w,c
 29896  0144BC  6EDA               	movwf	fsr2h,c
 29897  0144BE  0EFF               	movlw	255
 29898  0144C0  22DA               	addwfc	fsr2h,f,c
 29899  0144C2  2ADE               	incf	postinc2,f,c
 29900  0144C4  0E00               	movlw	0
 29901  0144C6  22DE               	addwfc	postinc2,f,c
 29902  0144C8  22DE               	addwfc	postinc2,f,c
 29903  0144CA  22DE               	addwfc	postinc2,f,c
 29904                           
 29905                           ;stkvar	_prod @ sp[(-13)+0]
 29906  0144CC  0EF6               	movlw	-10
 29907  0144CE  A0E3               	btfss	plusw1,0,c
 29908  0144D0  D027               	goto	l8694
 29909  0144D2  0E01               	movlw	1
 29910  0144D4  6E0C               	movwf	(btemp+11)^0,c
 29911                           
 29912                           ;stkvar	_prod @ sp[(-13)+0]
 29913  0144D6  50E1               	movf	fsr1l,w,c
 29914  0144D8  0FF3               	addlw	-13
 29915  0144DA  6ED9               	movwf	fsr2l,c
 29916  0144DC  50E2               	movf	fsr1h,w,c
 29917  0144DE  6EDA               	movwf	fsr2h,c
 29918  0144E0  0EFF               	movlw	255
 29919  0144E2  22DA               	addwfc	fsr2h,f,c
 29920  0144E4  280C               	incf	(btemp+11)^0,w,c
 29921  0144E6  52DE               	movf	postinc2,f,c
 29922  0144E8  D008               	goto	u7050
 29923  0144EA                     u7055:
 29924  0144EA  52DE               	movf	postinc2,f,c
 29925  0144EC  90D8               	bcf	status,0,c
 29926  0144EE  BEDC               	btfsc	preinc2,7,c
 29927  0144F0  80D8               	bsf	status,0,c
 29928  0144F2  32DD               	rrcf	postdec2,f,c
 29929  0144F4  32DD               	rrcf	postdec2,f,c
 29930  0144F6  32DD               	rrcf	postdec2,f,c
 29931  0144F8  32DE               	rrcf	postinc2,f,c
 29932  0144FA                     u7050:
 29933  0144FA  2EE8               	decfsz	wreg,f,c
 29934  0144FC  D7F6               	goto	u7055
 29935                           
 29936                           ;stkvar	_temp @ sp[(-13)+8]
 29937  0144FE  0EFB               	movlw	-5
 29938  014500  50E3               	movf	plusw1,w,c
 29939  014502  0F01               	addlw	1
 29940  014504  6E01               	movwf	btemp^0,c
 29941  014506  0EFB               	movlw	-5
 29942  014508  0060  F007  FFE3   	movff	btemp,plusw1
 29943  01450E  6A01               	clrf	btemp^0,c
 29944  014510  0EFC               	movlw	-4
 29945  014512  50E3               	movf	plusw1,w,c
 29946  014514  2001               	addwfc	btemp^0,w,c
 29947  014516  6E01               	movwf	btemp^0,c
 29948  014518  0EFC               	movlw	-4
 29949  01451A  0060  F007  FFE3   	movff	btemp,plusw1
 29950  014520                     l8694:
 29951                           
 29952                           ;stkvar	_temp @ sp[(-13)+8]
 29953  014520  0EFC               	movlw	-4
 29954  014522  BEE3               	btfsc	plusw1,7,c
 29955  014524  D020               	goto	l8698
 29956  014526  0EFC               	movlw	-4
 29957  014528  50E3               	movf	plusw1,w,c
 29958  01452A  E104               	bnz	u7060
 29959  01452C  0EFB               	movlw	-5
 29960  01452E  28E3               	incf	plusw1,w,c
 29961  014530  A0D8               	btfss	status,0,c
 29962  014532  D019               	goto	l8698
 29963  014534                     u7060:
 29964  014534  0E00               	movlw	0
 29965  014536  6E09               	movwf	(btemp+8)^0,c
 29966  014538  0E00               	movlw	0
 29967  01453A  6E0A               	movwf	(btemp+9)^0,c
 29968  01453C  0E80               	movlw	128
 29969  01453E  6E0B               	movwf	(btemp+10)^0,c
 29970  014540  0E7F               	movlw	127
 29971  014542  6E0C               	movwf	(btemp+11)^0,c
 29972                           
 29973                           ;stkvar	_prod @ sp[(-13)+0]
 29974  014544  0EF3               	movlw	-13
 29975  014546  0060  F027  FFE3   	movff	btemp+8,plusw1
 29976  01454C  0EF4               	movlw	-12
 29977  01454E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29978  014554  0EF5               	movlw	-11
 29979  014556  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29980  01455C  0EF6               	movlw	-10
 29981  01455E  0060  F033  FFE3   	movff	btemp+11,plusw1
 29982  014564  D044               	goto	l8714
 29983  014566                     l8698:
 29984                           
 29985                           ;stkvar	_temp @ sp[(-13)+8]
 29986  014566  0EFC               	movlw	-4
 29987  014568  BEE3               	btfsc	plusw1,7,c
 29988  01456A  D007               	goto	u7070
 29989  01456C  0EFC               	movlw	-4
 29990  01456E  50E3               	movf	plusw1,w,c
 29991  014570  E10F               	bnz	l8704
 29992  014572  0EFB               	movlw	-5
 29993  014574  04E3               	decf	plusw1,w,c
 29994  014576  B0D8               	btfsc	status,0,c
 29995  014578  D00B               	goto	l8704
 29996  01457A                     u7070:
 29997                           
 29998                           ;stkvar	_prod @ sp[(-13)+0]
 29999  01457A  0EF3               	movlw	-13
 30000  01457C  6AE3               	clrf	plusw1,c
 30001  01457E  0EF4               	movlw	-12
 30002  014580  6AE3               	clrf	plusw1,c
 30003  014582  0EF5               	movlw	-11
 30004  014584  6AE3               	clrf	plusw1,c
 30005  014586  0EF6               	movlw	-10
 30006  014588  6AE3               	clrf	plusw1,c
 30007                           
 30008                           ;stkvar	_sign @ sp[(-13)+12]
 30009  01458A  0EFF               	movlw	-1
 30010  01458C  6AE3               	clrf	plusw1,c
 30011  01458E  D02F               	goto	l8714
 30012  014590                     l8704:
 30013                           
 30014                           ;stkvar	_temp @ sp[(-13)+8]
 30015                           ;stkvar	_bexp @ sp[(-13)+10]
 30016  014590  0EFB               	movlw	-5
 30017  014592  006F FF8C  F001    	movff	plusw1,btemp
 30018  014598  0EFD               	movlw	-3
 30019  01459A  0060  F007  FFE3   	movff	btemp,plusw1
 30020                           
 30021                           ;stkvar	_prod @ sp[(-13)+0]
 30022  0145A0  50E1               	movf	fsr1l,w,c
 30023  0145A2  0FF3               	addlw	-13
 30024  0145A4  6ED9               	movwf	fsr2l,c
 30025  0145A6  50E2               	movf	fsr1h,w,c
 30026  0145A8  6EDA               	movwf	fsr2h,c
 30027  0145AA  0EFF               	movlw	255
 30028  0145AC  22DA               	addwfc	fsr2h,f,c
 30029  0145AE  0EFF               	movlw	255
 30030  0145B0  16DE               	andwf	postinc2,f,c
 30031  0145B2  0EFF               	movlw	255
 30032  0145B4  16DE               	andwf	postinc2,f,c
 30033  0145B6  0E7F               	movlw	127
 30034  0145B8  16DE               	andwf	postinc2,f,c
 30035  0145BA  0E00               	movlw	0
 30036  0145BC  16DE               	andwf	postinc2,f,c
 30037                           
 30038                           ;stkvar	_bexp @ sp[(-13)+10]
 30039  0145BE  0EFD               	movlw	-3
 30040  0145C0  A0E3               	btfss	plusw1,0,c
 30041  0145C2  D008               	goto	l8712
 30042                           
 30043                           ;stkvar	_prod @ sp[(-13)+0]
 30044  0145C4  0EF5               	movlw	245
 30045  0145C6  24E1               	addwf	fsr1l,w,c
 30046  0145C8  6ED9               	movwf	fsr2l,c
 30047  0145CA  0EFF               	movlw	255
 30048  0145CC  20E2               	addwfc	fsr1h,w,c
 30049  0145CE  6EDA               	movwf	fsr2h,c
 30050  0145D0  0E00               	movlw	0
 30051  0145D2  8EDB               	bsf	plusw2,7,c
 30052  0145D4                     l8712:
 30053                           
 30054                           ;stkvar	_prod @ sp[(-13)+0]
 30055  0145D4  0EF6               	movlw	246
 30056  0145D6  24E1               	addwf	fsr1l,w,c
 30057  0145D8  6ED9               	movwf	fsr2l,c
 30058  0145DA  0EFF               	movlw	255
 30059  0145DC  20E2               	addwfc	fsr1h,w,c
 30060  0145DE  6EDA               	movwf	fsr2h,c
 30061                           
 30062                           ;stkvar	_bexp @ sp[(-13)+10]
 30063  0145E0  0EFD               	movlw	-3
 30064  0145E2  006F FF8C  F00C    	movff	plusw1,btemp+11
 30065  0145E8  90D8               	bcf	status,0,c
 30066  0145EA  300C               	rrcf	(btemp+11)^0,w,c
 30067  0145EC  6EDF               	movwf	indf2,c
 30068  0145EE                     l8714:
 30069                           
 30070                           ;stkvar	_sign @ sp[(-13)+12]
 30071  0145EE  0EFF               	movlw	-1
 30072  0145F0  006F FF8C  F00C    	movff	plusw1,btemp+11
 30073                           
 30074                           ;stkvar	_prod @ sp[(-13)+0]
 30075  0145F6  0EF6               	movlw	246
 30076  0145F8  24E1               	addwf	fsr1l,w,c
 30077  0145FA  6ED9               	movwf	fsr2l,c
 30078  0145FC  0EFF               	movlw	255
 30079  0145FE  20E2               	addwfc	fsr1h,w,c
 30080  014600  6EDA               	movwf	fsr2h,c
 30081  014602  500C               	movf	(btemp+11)^0,w,c
 30082  014604  12DF               	iorwf	indf2,f,c
 30083                           
 30084                           ;stkvar	_prod @ sp[(-13)+0]
 30085  014606  0EF3               	movlw	-13
 30086  014608  006F FF8C  F001    	movff	plusw1,btemp
 30087  01460E  0EF4               	movlw	-12
 30088  014610  006F FF8C  F002    	movff	plusw1,btemp+1
 30089  014616  0EF5               	movlw	-11
 30090  014618  006F FF8C  F003    	movff	plusw1,btemp+2
 30091  01461E  0EF6               	movlw	-10
 30092  014620  006F FF8C  F004    	movff	plusw1,btemp+3
 30093  014626                     l3121:
 30094                           
 30095                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 30096  014626  0EEB               	movlw	235
 30097  014628  26E1               	addwf	fsr1l,f,c
 30098  01462A  0EFF               	movlw	255
 30099  01462C  22E2               	addwfc	fsr1h,f,c
 30100  01462E  0012               	return		;funcret
 30101  014630                     __end_of___flmul:
 30102                           	opt callstack 0
 30103                           
 30104 ;; *************** function _SYSTEM_Initialize *****************
 30105 ;; Defined at:
 30106 ;;		line 50 in file "mcc_generated_files/mcc.c"
 30107 ;; Parameters:    Size  Location     Type
 30108 ;;		None
 30109 ;; Auto vars:     Size  Location     Type
 30110 ;;		None
 30111 ;; Return value:  Size  Location     Type
 30112 ;;                  1  [STACK] void 
 30113 ;; Registers used:
 30114 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 30115 ;; Tracked objects:
 30116 ;;		On entry : 0/0
 30117 ;;		On exit  : 3F/3C
 30118 ;;		Unchanged: 0/0
 30119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30124 ;;Total ram usage:        0 bytes
 30125 ;; Hardware stack levels used:    1
 30126 ;; Hardware stack levels required when called:   17
 30127 ;; This function calls:
 30128 ;;		_ADCC_Initialize
 30129 ;;		_CLKREF_Initialize
 30130 ;;		_DMA1_Initialize
 30131 ;;		_DMA2_Initialize
 30132 ;;		_EXT_INT_Initialize
 30133 ;;		_FVR_Initialize
 30134 ;;		_INTERRUPT_Initialize
 30135 ;;		_OSCILLATOR_Initialize
 30136 ;;		_PIN_MANAGER_Initialize
 30137 ;;		_PMD_Initialize
 30138 ;;		_PWM8_Initialize
 30139 ;;		_SPI1_Initialize
 30140 ;;		_TMR2_Initialize
 30141 ;;		_TMR3_Initialize
 30142 ;;		_TMR5_Initialize
 30143 ;;		_TMR6_Initialize
 30144 ;;		_UART1_Initialize
 30145 ;;		_UART2_Initialize
 30146 ;; This function is called by:
 30147 ;;		_main
 30148 ;; This function uses a reentrant model
 30149 ;;
 30150                           
 30151                           	psect	text114
 30152  01B8E8                     __ptext114:
 30153                           	opt callstack 0
 30154  01B8E8                     _SYSTEM_Initialize:
 30155                           	opt callstack 13
 30156                           
 30157                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 30158                           
 30159                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30160                           ;incstack = 0
 30161  01B8E8  EC58  F0DA         	call	_INTERRUPT_Initialize	;wreg free
 30162                           
 30163                           ; BSR set to: 57
 30164                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 30165  01B8EC  ECBE  F0E2         	call	_PMD_Initialize	;wreg free
 30166                           
 30167                           ; BSR set to: 57
 30168                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 30169  01B8F0  EC84  F0D7         	call	_PIN_MANAGER_Initialize	;wreg free
 30170                           
 30171                           ; BSR set to: 58
 30172                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 30173  01B8F4  ECB3  F0E2         	call	_OSCILLATOR_Initialize	;wreg free
 30174                           
 30175                           ; BSR set to: 57
 30176                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 30177  01B8F8  EC41  F0E3         	call	_FVR_Initialize	;wreg free
 30178                           
 30179                           ; BSR set to: 62
 30180                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 30181  01B8FC  ECBB  F0D9         	call	_ADCC_Initialize	;wreg free
 30182                           
 30183                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 30184  01B900  ECA8  F0E2         	call	_PWM8_Initialize	;wreg free
 30185                           
 30186                           ; BSR set to: 63
 30187                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 30188  01B904  EC91  F0E2         	call	_TMR2_Initialize	;wreg free
 30189                           
 30190                           ; BSR set to: 57
 30191                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 30192  01B908  EC4A  F0DF         	call	_EXT_INT_Initialize	;wreg free
 30193                           
 30194                           ; BSR set to: 57
 30195                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 30196  01B90C  EC1E  F0E0         	call	_TMR6_Initialize	;wreg free
 30197                           
 30198                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 30199  01B910  EC05  F0DD         	call	_TMR3_Initialize	;wreg free
 30200                           
 30201                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 30202  01B914  ECE1  F0DC         	call	_TMR5_Initialize	;wreg free
 30203                           
 30204                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 30205  01B918  ECBD  F0DC         	call	_UART1_Initialize	;wreg free
 30206                           
 30207                           ; BSR set to: 57
 30208                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 30209  01B91C  EC1F  F0DB         	call	_UART2_Initialize	;wreg free
 30210                           
 30211                           ; BSR set to: 57
 30212                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 30213  01B920  EC9D  F0E2         	call	_SPI1_Initialize	;wreg free
 30214                           
 30215                           ; BSR set to: 61
 30216                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 30217  01B924  ECA9  F0DB         	call	_DMA2_Initialize	;wreg free
 30218                           
 30219                           ; BSR set to: 59
 30220                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 30221  01B928  EC86  F0D9         	call	_DMA1_Initialize	;wreg free
 30222                           
 30223                           ; BSR set to: 59
 30224                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 30225  01B92C  EC15  F0E3         	call	_CLKREF_Initialize	;wreg free
 30226                           
 30227                           ; BSR set to: 60
 30228                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 30229  01B930  0012               	return		;funcret
 30230  01B932                     __end_of_SYSTEM_Initialize:
 30231                           	opt callstack 0
 30232                           
 30233 ;; *************** function _UART2_Initialize *****************
 30234 ;; Defined at:
 30235 ;;		line 78 in file "mcc_generated_files/uart2.c"
 30236 ;; Parameters:    Size  Location     Type
 30237 ;;		None
 30238 ;; Auto vars:     Size  Location     Type
 30239 ;;		None
 30240 ;; Return value:  Size  Location     Type
 30241 ;;                  1  [STACK] void 
 30242 ;; Registers used:
 30243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 30244 ;; Tracked objects:
 30245 ;;		On entry : 3F/39
 30246 ;;		On exit  : 3F/39
 30247 ;;		Unchanged: 0/0
 30248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30253 ;;Total ram usage:        0 bytes
 30254 ;; Hardware stack levels used:    1
 30255 ;; Hardware stack levels required when called:   16
 30256 ;; This function calls:
 30257 ;;		_UART2_SetRxInterruptHandler
 30258 ;;		_UART2_SetTxInterruptHandler
 30259 ;; This function is called by:
 30260 ;;		_SYSTEM_Initialize
 30261 ;; This function uses a reentrant model
 30262 ;;
 30263                           
 30264                           	psect	text115
 30265  01B63E                     __ptext115:
 30266                           	opt callstack 0
 30267  01B63E                     _UART2_Initialize:
 30268                           	opt callstack 13
 30269                           
 30270                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 30271                           
 30272                           ; BSR set to: 60
 30273                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30274                           ;incstack = 0
 30275  01B63E  0139               	movlb	57	; () banked
 30276  01B640  9596               	bcf	150,2,b	;volatile
 30277                           
 30278                           ; BSR set to: 57
 30279                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 30280  01B642  0E1E               	movlw	low _UART2_Receive_ISR
 30281  01B644  6EE6               	movwf	postinc1,c
 30282  01B646  0EC4               	movlw	high _UART2_Receive_ISR
 30283  01B648  6EE6               	movwf	postinc1,c
 30284  01B64A  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 30285  01B64C  6EE6               	movwf	postinc1,c
 30286  01B64E  EC6F  F0E0         	call	_UART2_SetRxInterruptHandler	;wreg free
 30287                           
 30288                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 30289  01B652  0139               	movlb	57	; () banked
 30290  01B654  9796               	bcf	150,3,b	;volatile
 30291                           
 30292                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 30293  01B656  0E10               	movlw	low _UART2_Transmit_ISR
 30294  01B658  6EE6               	movwf	postinc1,c
 30295  01B65A  0EC0               	movlw	high _UART2_Transmit_ISR
 30296  01B65C  6EE6               	movwf	postinc1,c
 30297  01B65E  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 30298  01B660  6EE6               	movwf	postinc1,c
 30299  01B662  EC5B  F0E0         	call	_UART2_SetTxInterruptHandler	;wreg free
 30300                           
 30301                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 30302  01B666  013D               	movlb	61	; () banked
 30303  01B668  6BD4               	clrf	212,b	;volatile
 30304                           
 30305                           ; BSR set to: 61
 30306                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 30307  01B66A  6BD6               	clrf	214,b	;volatile
 30308                           
 30309                           ; BSR set to: 61
 30310                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 30311  01B66C  6BD8               	clrf	216,b	;volatile
 30312                           
 30313                           ; BSR set to: 61
 30314                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 30315  01B66E  0EB0               	movlw	176
 30316  01B670  6FDA               	movwf	218,b	;volatile
 30317                           
 30318                           ; BSR set to: 61
 30319                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 30320  01B672  0E80               	movlw	128
 30321  01B674  6FDB               	movwf	219,b	;volatile
 30322                           
 30323                           ; BSR set to: 61
 30324                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 30325  01B676  6BDC               	clrf	220,b	;volatile
 30326                           
 30327                           ; BSR set to: 61
 30328                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 30329  01B678  0E82               	movlw	130
 30330  01B67A  6FDD               	movwf	221,b	;volatile
 30331                           
 30332                           ; BSR set to: 61
 30333                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 30334  01B67C  0E06               	movlw	6
 30335  01B67E  6FDE               	movwf	222,b	;volatile
 30336                           
 30337                           ; BSR set to: 61
 30338                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 30339  01B680  6BDF               	clrf	223,b	;volatile
 30340                           
 30341                           ; BSR set to: 61
 30342                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 30343  01B682  6BE0               	clrf	224,b	;volatile
 30344                           
 30345                           ; BSR set to: 61
 30346                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 30347  01B684  6BE1               	clrf	225,b	;volatile
 30348                           
 30349                           ; BSR set to: 61
 30350                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 30351  01B686  6BE2               	clrf	226,b	;volatile
 30352                           
 30353                           ; BSR set to: 61
 30354                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 30355  01B688  0100               	movlb	0	; () banked
 30356  01B68A  6BAC               	clrf	_uart2TxHead& (0+255),b	;volatile
 30357                           
 30358                           ; BSR set to: 0
 30359                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 30360  01B68C  6A46               	clrf	_uart2TxTail^0,c	;volatile
 30361                           
 30362                           ; BSR set to: 0
 30363                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 30364  01B68E  0E40               	movlw	64
 30365  01B690  6E45               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 30366                           
 30367                           ; BSR set to: 0
 30368                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 30369  01B692  6A44               	clrf	_uart2RxHead^0,c	;volatile
 30370                           
 30371                           ; BSR set to: 0
 30372                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 30373  01B694  6BAB               	clrf	_uart2RxTail& (0+255),b	;volatile
 30374                           
 30375                           ; BSR set to: 0
 30376                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 30377  01B696  6BAA               	clrf	_uart2RxCount& (0+255),b	;volatile
 30378                           
 30379                           ; BSR set to: 0
 30380                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 30381  01B698  0139               	movlb	57	; () banked
 30382  01B69A  8596               	bsf	150,2,b	;volatile
 30383                           
 30384                           ; BSR set to: 57
 30385                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 30386  01B69C  0012               	return		;funcret
 30387  01B69E                     __end_of_UART2_Initialize:
 30388                           	opt callstack 0
 30389                           
 30390 ;; *************** function _UART2_SetTxInterruptHandler *****************
 30391 ;; Defined at:
 30392 ;;		line 252 in file "mcc_generated_files/uart2.c"
 30393 ;; Parameters:    Size  Location     Type
 30394 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30395 ;;		 -> UART2_Transmit_ISR(1), 
 30396 ;; Auto vars:     Size  Location     Type
 30397 ;;		None
 30398 ;; Return value:  Size  Location     Type
 30399 ;;                  1  [STACK] void 
 30400 ;; Registers used:
 30401 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30402 ;; Tracked objects:
 30403 ;;		On entry : 3F/39
 30404 ;;		On exit  : 0/0
 30405 ;;		Unchanged: 0/0
 30406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30411 ;;Total ram usage:        0 bytes
 30412 ;; Hardware stack levels used:    1
 30413 ;; Hardware stack levels required when called:   15
 30414 ;; This function calls:
 30415 ;;		Nothing
 30416 ;; This function is called by:
 30417 ;;		_UART2_Initialize
 30418 ;; This function uses a reentrant model
 30419 ;;
 30420                           
 30421                           	psect	text116
 30422  01C0B6                     __ptext116:
 30423                           	opt callstack 0
 30424  01C0B6                     _UART2_SetTxInterruptHandler:
 30425                           	opt callstack 13
 30426                           
 30427                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 30428                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30429                           
 30430                           ; BSR set to: 57
 30431                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30432                           ;incstack = 0
 30433  01C0B6  50E1               	movf	fsr1l,w,c
 30434  01C0B8  0FFD               	addlw	-3
 30435  01C0BA  6ED9               	movwf	fsr2l,c
 30436  01C0BC  50E2               	movf	fsr1h,w,c
 30437  01C0BE  6EDA               	movwf	fsr2h,c
 30438  01C0C0  0EFF               	movlw	255
 30439  01C0C2  22DA               	addwfc	fsr2h,f,c
 30440  01C0C4  006F FF78  F08E    	movff	postinc2,_UART2_TxInterruptHandler
 30441  01C0CA  006F FF78  F08F    	movff	postinc2,_UART2_TxInterruptHandler+1
 30442  01C0D0  006F FF74  F090    	movff	postdec2,_UART2_TxInterruptHandler+2
 30443                           
 30444                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 30445  01C0D6  52E5               	movf	postdec1,f,c
 30446  01C0D8  52E5               	movf	postdec1,f,c
 30447  01C0DA  52E5               	movf	postdec1,f,c
 30448  01C0DC  0012               	return		;funcret
 30449  01C0DE                     __end_of_UART2_SetTxInterruptHandler:
 30450                           	opt callstack 0
 30451                           
 30452 ;; *************** function _UART2_SetRxInterruptHandler *****************
 30453 ;; Defined at:
 30454 ;;		line 248 in file "mcc_generated_files/uart2.c"
 30455 ;; Parameters:    Size  Location     Type
 30456 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30457 ;;		 -> UART2_Receive_ISR(1), 
 30458 ;; Auto vars:     Size  Location     Type
 30459 ;;		None
 30460 ;; Return value:  Size  Location     Type
 30461 ;;                  1  [STACK] void 
 30462 ;; Registers used:
 30463 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30464 ;; Tracked objects:
 30465 ;;		On entry : 3F/39
 30466 ;;		On exit  : 0/0
 30467 ;;		Unchanged: 0/0
 30468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30473 ;;Total ram usage:        0 bytes
 30474 ;; Hardware stack levels used:    1
 30475 ;; Hardware stack levels required when called:   15
 30476 ;; This function calls:
 30477 ;;		Nothing
 30478 ;; This function is called by:
 30479 ;;		_UART2_Initialize
 30480 ;; This function uses a reentrant model
 30481 ;;
 30482                           
 30483                           	psect	text117
 30484  01C0DE                     __ptext117:
 30485                           	opt callstack 0
 30486  01C0DE                     _UART2_SetRxInterruptHandler:
 30487                           	opt callstack 13
 30488                           
 30489                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 30490                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30491                           
 30492                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30493                           ;incstack = 0
 30494  01C0DE  50E1               	movf	fsr1l,w,c
 30495  01C0E0  0FFD               	addlw	-3
 30496  01C0E2  6ED9               	movwf	fsr2l,c
 30497  01C0E4  50E2               	movf	fsr1h,w,c
 30498  01C0E6  6EDA               	movwf	fsr2h,c
 30499  01C0E8  0EFF               	movlw	255
 30500  01C0EA  22DA               	addwfc	fsr2h,f,c
 30501  01C0EC  006F FF78  F091    	movff	postinc2,_UART2_RxInterruptHandler
 30502  01C0F2  006F FF78  F092    	movff	postinc2,_UART2_RxInterruptHandler+1
 30503  01C0F8  006F FF74  F093    	movff	postdec2,_UART2_RxInterruptHandler+2
 30504                           
 30505                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 30506  01C0FE  52E5               	movf	postdec1,f,c
 30507  01C100  52E5               	movf	postdec1,f,c
 30508  01C102  52E5               	movf	postdec1,f,c
 30509  01C104  0012               	return		;funcret
 30510  01C106                     __end_of_UART2_SetRxInterruptHandler:
 30511                           	opt callstack 0
 30512                           
 30513 ;; *************** function _UART1_Initialize *****************
 30514 ;; Defined at:
 30515 ;;		line 75 in file "mcc_generated_files/uart1.c"
 30516 ;; Parameters:    Size  Location     Type
 30517 ;;		None
 30518 ;; Auto vars:     Size  Location     Type
 30519 ;;		None
 30520 ;; Return value:  Size  Location     Type
 30521 ;;                  1  [STACK] void 
 30522 ;; Registers used:
 30523 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 30524 ;; Tracked objects:
 30525 ;;		On entry : 0/39
 30526 ;;		On exit  : 3F/39
 30527 ;;		Unchanged: 0/0
 30528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30533 ;;Total ram usage:        0 bytes
 30534 ;; Hardware stack levels used:    1
 30535 ;; Hardware stack levels required when called:   16
 30536 ;; This function calls:
 30537 ;;		_UART1_SetRxInterruptHandler
 30538 ;; This function is called by:
 30539 ;;		_SYSTEM_Initialize
 30540 ;; This function uses a reentrant model
 30541 ;;
 30542                           
 30543                           	psect	text118
 30544  01B97A                     __ptext118:
 30545                           	opt callstack 0
 30546  01B97A                     _UART1_Initialize:
 30547                           	opt callstack 13
 30548                           
 30549                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 30550                           
 30551                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30552                           ;incstack = 0
 30553  01B97A  0139               	movlb	57	; () banked
 30554  01B97C  9793               	bcf	147,3,b	;volatile
 30555                           
 30556                           ; BSR set to: 57
 30557                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 30558  01B97E  0EDC               	movlw	low _UART1_Receive_ISR
 30559  01B980  6EE6               	movwf	postinc1,c
 30560  01B982  0EC3               	movlw	high _UART1_Receive_ISR
 30561  01B984  6EE6               	movwf	postinc1,c
 30562  01B986  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 30563  01B988  6EE6               	movwf	postinc1,c
 30564  01B98A  EC83  F0E0         	call	_UART1_SetRxInterruptHandler	;wreg free
 30565                           
 30566                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 30567  01B98E  013D               	movlb	61	; () banked
 30568  01B990  6BEC               	clrf	236,b	;volatile
 30569                           
 30570                           ; BSR set to: 61
 30571                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 30572  01B992  6BED               	clrf	237,b	;volatile
 30573                           
 30574                           ; BSR set to: 61
 30575                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 30576  01B994  6BEE               	clrf	238,b	;volatile
 30577                           
 30578                           ; BSR set to: 61
 30579                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 30580  01B996  6BEF               	clrf	239,b	;volatile
 30581                           
 30582                           ; BSR set to: 61
 30583                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 30584  01B998  6BF0               	clrf	240,b	;volatile
 30585                           
 30586                           ; BSR set to: 61
 30587                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 30588  01B99A  6BF1               	clrf	241,b	;volatile
 30589                           
 30590                           ; BSR set to: 61
 30591                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 30592  01B99C  0EB0               	movlw	176
 30593  01B99E  6FF2               	movwf	242,b	;volatile
 30594                           
 30595                           ; BSR set to: 61
 30596                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 30597  01B9A0  0E80               	movlw	128
 30598  01B9A2  6FF3               	movwf	243,b	;volatile
 30599                           
 30600                           ; BSR set to: 61
 30601                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 30602  01B9A4  6BF4               	clrf	244,b	;volatile
 30603                           
 30604                           ; BSR set to: 61
 30605                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 30606  01B9A6  0E8A               	movlw	138
 30607  01B9A8  6FF5               	movwf	245,b	;volatile
 30608                           
 30609                           ; BSR set to: 61
 30610                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 30611  01B9AA  6BF6               	clrf	246,b	;volatile
 30612                           
 30613                           ; BSR set to: 61
 30614                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 30615  01B9AC  6BF7               	clrf	247,b	;volatile
 30616                           
 30617                           ; BSR set to: 61
 30618                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 30619  01B9AE  6BF8               	clrf	248,b	;volatile
 30620                           
 30621                           ; BSR set to: 61
 30622                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 30623  01B9B0  6BF9               	clrf	249,b	;volatile
 30624                           
 30625                           ; BSR set to: 61
 30626                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 30627  01B9B2  6BFA               	clrf	250,b	;volatile
 30628                           
 30629                           ; BSR set to: 61
 30630                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 30631  01B9B4  6A47               	clrf	_uart1RxHead^0,c	;volatile
 30632                           
 30633                           ; BSR set to: 61
 30634                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 30635  01B9B6  0100               	movlb	0	; () banked
 30636  01B9B8  6BAE               	clrf	_uart1RxTail& (0+255),b	;volatile
 30637                           
 30638                           ; BSR set to: 0
 30639                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 30640  01B9BA  6BAD               	clrf	_uart1RxCount& (0+255),b	;volatile
 30641                           
 30642                           ; BSR set to: 0
 30643                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 30644  01B9BC  0139               	movlb	57	; () banked
 30645  01B9BE  8793               	bsf	147,3,b	;volatile
 30646                           
 30647                           ; BSR set to: 57
 30648                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 30649  01B9C0  0012               	return		;funcret
 30650  01B9C2                     __end_of_UART1_Initialize:
 30651                           	opt callstack 0
 30652                           
 30653 ;; *************** function _UART1_SetRxInterruptHandler *****************
 30654 ;; Defined at:
 30655 ;;		line 207 in file "mcc_generated_files/uart1.c"
 30656 ;; Parameters:    Size  Location     Type
 30657 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30658 ;;		 -> UART1_Receive_ISR(1), 
 30659 ;; Auto vars:     Size  Location     Type
 30660 ;;		None
 30661 ;; Return value:  Size  Location     Type
 30662 ;;                  1  [STACK] void 
 30663 ;; Registers used:
 30664 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30665 ;; Tracked objects:
 30666 ;;		On entry : 3F/39
 30667 ;;		On exit  : 0/0
 30668 ;;		Unchanged: 0/0
 30669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30674 ;;Total ram usage:        0 bytes
 30675 ;; Hardware stack levels used:    1
 30676 ;; Hardware stack levels required when called:   15
 30677 ;; This function calls:
 30678 ;;		Nothing
 30679 ;; This function is called by:
 30680 ;;		_UART1_Initialize
 30681 ;; This function uses a reentrant model
 30682 ;;
 30683                           
 30684                           	psect	text119
 30685  01C106                     __ptext119:
 30686                           	opt callstack 0
 30687  01C106                     _UART1_SetRxInterruptHandler:
 30688                           	opt callstack 13
 30689                           
 30690                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 30691                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30692                           
 30693                           ; BSR set to: 57
 30694                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30695                           ;incstack = 0
 30696  01C106  50E1               	movf	fsr1l,w,c
 30697  01C108  0FFD               	addlw	-3
 30698  01C10A  6ED9               	movwf	fsr2l,c
 30699  01C10C  50E2               	movf	fsr1h,w,c
 30700  01C10E  6EDA               	movwf	fsr2h,c
 30701  01C110  0EFF               	movlw	255
 30702  01C112  22DA               	addwfc	fsr2h,f,c
 30703  01C114  006F FF78  F08B    	movff	postinc2,_UART1_RxInterruptHandler
 30704  01C11A  006F FF78  F08C    	movff	postinc2,_UART1_RxInterruptHandler+1
 30705  01C120  006F FF74  F08D    	movff	postdec2,_UART1_RxInterruptHandler+2
 30706                           
 30707                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 30708  01C126  52E5               	movf	postdec1,f,c
 30709  01C128  52E5               	movf	postdec1,f,c
 30710  01C12A  52E5               	movf	postdec1,f,c
 30711  01C12C  0012               	return		;funcret
 30712  01C12E                     __end_of_UART1_SetRxInterruptHandler:
 30713                           	opt callstack 0
 30714                           
 30715 ;; *************** function _TMR6_Initialize *****************
 30716 ;; Defined at:
 30717 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 30718 ;; Parameters:    Size  Location     Type
 30719 ;;		None
 30720 ;; Auto vars:     Size  Location     Type
 30721 ;;		None
 30722 ;; Return value:  Size  Location     Type
 30723 ;;                  1  [STACK] void 
 30724 ;; Registers used:
 30725 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 30726 ;; Tracked objects:
 30727 ;;		On entry : 3F/39
 30728 ;;		On exit  : 0/0
 30729 ;;		Unchanged: 0/0
 30730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30735 ;;Total ram usage:        0 bytes
 30736 ;; Hardware stack levels used:    1
 30737 ;; Hardware stack levels required when called:   16
 30738 ;; This function calls:
 30739 ;;		_TMR6_SetInterruptHandler
 30740 ;; This function is called by:
 30741 ;;		_SYSTEM_Initialize
 30742 ;; This function uses a reentrant model
 30743 ;;
 30744                           
 30745                           	psect	text120
 30746  01C03C                     __ptext120:
 30747                           	opt callstack 0
 30748  01C03C                     _TMR6_Initialize:
 30749                           	opt callstack 13
 30750                           
 30751                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 30752                           
 30753                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30754                           ;incstack = 0
 30755  01C03C  0E01               	movlw	1
 30756  01C03E  6E96               	movwf	150,c	;volatile
 30757                           
 30758                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 30759  01C040  6A95               	clrf	149,c	;volatile
 30760                           
 30761                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 30762  01C042  6A97               	clrf	151,c	;volatile
 30763                           
 30764                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 30765  01C044  0E7C               	movlw	124
 30766  01C046  6E93               	movwf	147,c	;volatile
 30767                           
 30768                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 30769  01C048  6A92               	clrf	146,c	;volatile
 30770                           
 30771                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 30772  01C04A  0139               	movlb	57	; () banked
 30773  01C04C  91A9               	bcf	169,0,b	;volatile
 30774                           
 30775                           ; BSR set to: 57
 30776                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 30777  01C04E  8199               	bsf	153,0,b	;volatile
 30778                           
 30779                           ; BSR set to: 57
 30780                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 30781  01C050  0E50               	movlw	low _TMR6_DefaultInterruptHandler
 30782  01C052  6EE6               	movwf	postinc1,c
 30783  01C054  0EB8               	movlw	high _TMR6_DefaultInterruptHandler
 30784  01C056  6EE6               	movwf	postinc1,c
 30785  01C058  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 30786  01C05A  6EE6               	movwf	postinc1,c
 30787  01C05C  EC97  F0E0         	call	_TMR6_SetInterruptHandler	;wreg free
 30788                           
 30789                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 30790  01C060  0EE0               	movlw	224
 30791  01C062  6E94               	movwf	148,c	;volatile
 30792                           
 30793                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30794  01C064  0012               	return		;funcret
 30795  01C066                     __end_of_TMR6_Initialize:
 30796                           	opt callstack 0
 30797                           
 30798 ;; *************** function _TMR6_SetInterruptHandler *****************
 30799 ;; Defined at:
 30800 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 30801 ;; Parameters:    Size  Location     Type
 30802 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30803 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 30804 ;; Auto vars:     Size  Location     Type
 30805 ;;		None
 30806 ;; Return value:  Size  Location     Type
 30807 ;;                  1  [STACK] void 
 30808 ;; Registers used:
 30809 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30810 ;; Tracked objects:
 30811 ;;		On entry : 3F/39
 30812 ;;		On exit  : 0/0
 30813 ;;		Unchanged: 0/0
 30814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30819 ;;Total ram usage:        0 bytes
 30820 ;; Hardware stack levels used:    1
 30821 ;; Hardware stack levels required when called:   15
 30822 ;; This function calls:
 30823 ;;		Nothing
 30824 ;; This function is called by:
 30825 ;;		_TMR6_Initialize
 30826 ;; This function uses a reentrant model
 30827 ;;
 30828                           
 30829                           	psect	text121
 30830  01C12E                     __ptext121:
 30831                           	opt callstack 0
 30832  01C12E                     _TMR6_SetInterruptHandler:
 30833                           	opt callstack 13
 30834                           
 30835                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 30836                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30837                           
 30838                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30839                           ;incstack = 0
 30840  01C12E  50E1               	movf	fsr1l,w,c
 30841  01C130  0FFD               	addlw	-3
 30842  01C132  6ED9               	movwf	fsr2l,c
 30843  01C134  50E2               	movf	fsr1h,w,c
 30844  01C136  6EDA               	movwf	fsr2h,c
 30845  01C138  0EFF               	movlw	255
 30846  01C13A  22DA               	addwfc	fsr2h,f,c
 30847  01C13C  006F FF78  F082    	movff	postinc2,_TMR6_InterruptHandler
 30848  01C142  006F FF78  F083    	movff	postinc2,_TMR6_InterruptHandler+1
 30849  01C148  006F FF74  F084    	movff	postdec2,_TMR6_InterruptHandler+2
 30850                           
 30851                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30852  01C14E  52E5               	movf	postdec1,f,c
 30853  01C150  52E5               	movf	postdec1,f,c
 30854  01C152  52E5               	movf	postdec1,f,c
 30855  01C154  0012               	return		;funcret
 30856  01C156                     __end_of_TMR6_SetInterruptHandler:
 30857                           	opt callstack 0
 30858                           
 30859 ;; *************** function _TMR5_Initialize *****************
 30860 ;; Defined at:
 30861 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 30862 ;; Parameters:    Size  Location     Type
 30863 ;;		None
 30864 ;; Auto vars:     Size  Location     Type
 30865 ;;		None
 30866 ;; Return value:  Size  Location     Type
 30867 ;;                  1  [STACK] void 
 30868 ;; Registers used:
 30869 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 30870 ;; Tracked objects:
 30871 ;;		On entry : 0/39
 30872 ;;		On exit  : 0/0
 30873 ;;		Unchanged: 0/0
 30874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30879 ;;Total ram usage:        0 bytes
 30880 ;; Hardware stack levels used:    1
 30881 ;; Hardware stack levels required when called:   16
 30882 ;; This function calls:
 30883 ;;		_TMR5_SetInterruptHandler
 30884 ;; This function is called by:
 30885 ;;		_SYSTEM_Initialize
 30886 ;; This function uses a reentrant model
 30887 ;;
 30888                           
 30889                           	psect	text122
 30890  01B9C2                     __ptext122:
 30891                           	opt callstack 0
 30892  01B9C2                     _TMR5_Initialize:
 30893                           	opt callstack 13
 30894                           
 30895                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 30896                           
 30897                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30898                           ;incstack = 0
 30899  01B9C2  6A9B               	clrf	155,c	;volatile
 30900                           
 30901                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 30902  01B9C4  6A9C               	clrf	156,c	;volatile
 30903                           
 30904                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 30905  01B9C6  0E01               	movlw	1
 30906  01B9C8  6E9D               	movwf	157,c	;volatile
 30907                           
 30908                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 30909  01B9CA  0E63               	movlw	99
 30910  01B9CC  6E99               	movwf	153,c	;volatile
 30911                           
 30912                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 30913  01B9CE  0EC0               	movlw	192
 30914  01B9D0  6E98               	movwf	152,c	;volatile
 30915                           
 30916                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 30917  01B9D2  5098               	movf	152,w,c	;volatile
 30918  01B9D4  006F FE64  F001    	movff	16281,btemp	;volatile
 30919  01B9DA  6A02               	clrf	(btemp+1)^0,c
 30920  01B9DC  0060  F004  F002   	movff	btemp,btemp+1
 30921  01B9E2  6A01               	clrf	btemp^0,c
 30922  01B9E4  1001               	iorwf	btemp^0,w,c
 30923  01B9E6  0100               	movlb	0	; () banked
 30924  01B9E8  6FA2               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 30925  01B9EA  5002               	movf	(btemp+1)^0,w,c
 30926  01B9EC  6FA3               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 30927                           
 30928                           ; BSR set to: 0
 30929                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 30930  01B9EE  0139               	movlb	57	; () banked
 30931  01B9F0  9DA8               	bcf	168,6,b	;volatile
 30932                           
 30933                           ; BSR set to: 57
 30934                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 30935  01B9F2  8D98               	bsf	152,6,b	;volatile
 30936                           
 30937                           ; BSR set to: 57
 30938                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 30939  01B9F4  0E54               	movlw	low _TMR5_DefaultInterruptHandler
 30940  01B9F6  6EE6               	movwf	postinc1,c
 30941  01B9F8  0EBD               	movlw	high _TMR5_DefaultInterruptHandler
 30942  01B9FA  6EE6               	movwf	postinc1,c
 30943  01B9FC  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 30944  01B9FE  6EE6               	movwf	postinc1,c
 30945  01BA00  ECAB  F0E0         	call	_TMR5_SetInterruptHandler	;wreg free
 30946                           
 30947                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 30948  01BA04  0E31               	movlw	49
 30949  01BA06  6E9A               	movwf	154,c	;volatile
 30950                           
 30951                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30952  01BA08  0012               	return		;funcret
 30953  01BA0A                     __end_of_TMR5_Initialize:
 30954                           	opt callstack 0
 30955                           
 30956 ;; *************** function _TMR5_SetInterruptHandler *****************
 30957 ;; Defined at:
 30958 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 30959 ;; Parameters:    Size  Location     Type
 30960 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30961 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 30962 ;; Auto vars:     Size  Location     Type
 30963 ;;		None
 30964 ;; Return value:  Size  Location     Type
 30965 ;;                  1  [STACK] void 
 30966 ;; Registers used:
 30967 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30968 ;; Tracked objects:
 30969 ;;		On entry : 3F/39
 30970 ;;		On exit  : 0/0
 30971 ;;		Unchanged: 0/0
 30972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30977 ;;Total ram usage:        0 bytes
 30978 ;; Hardware stack levels used:    1
 30979 ;; Hardware stack levels required when called:   15
 30980 ;; This function calls:
 30981 ;;		Nothing
 30982 ;; This function is called by:
 30983 ;;		_TMR5_Initialize
 30984 ;; This function uses a reentrant model
 30985 ;;
 30986                           
 30987                           	psect	text123
 30988  01C156                     __ptext123:
 30989                           	opt callstack 0
 30990  01C156                     _TMR5_SetInterruptHandler:
 30991                           	opt callstack 13
 30992                           
 30993                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 30994                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30995                           
 30996                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30997                           ;incstack = 0
 30998  01C156  50E1               	movf	fsr1l,w,c
 30999  01C158  0FFD               	addlw	-3
 31000  01C15A  6ED9               	movwf	fsr2l,c
 31001  01C15C  50E2               	movf	fsr1h,w,c
 31002  01C15E  6EDA               	movwf	fsr2h,c
 31003  01C160  0EFF               	movlw	255
 31004  01C162  22DA               	addwfc	fsr2h,f,c
 31005  01C164  006F FF78  F07F    	movff	postinc2,_TMR5_InterruptHandler
 31006  01C16A  006F FF78  F080    	movff	postinc2,_TMR5_InterruptHandler+1
 31007  01C170  006F FF74  F081    	movff	postdec2,_TMR5_InterruptHandler+2
 31008                           
 31009                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 31010  01C176  52E5               	movf	postdec1,f,c
 31011  01C178  52E5               	movf	postdec1,f,c
 31012  01C17A  52E5               	movf	postdec1,f,c
 31013  01C17C  0012               	return		;funcret
 31014  01C17E                     __end_of_TMR5_SetInterruptHandler:
 31015                           	opt callstack 0
 31016                           
 31017 ;; *************** function _TMR3_Initialize *****************
 31018 ;; Defined at:
 31019 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 31020 ;; Parameters:    Size  Location     Type
 31021 ;;		None
 31022 ;; Auto vars:     Size  Location     Type
 31023 ;;		None
 31024 ;; Return value:  Size  Location     Type
 31025 ;;                  1  [STACK] void 
 31026 ;; Registers used:
 31027 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 31028 ;; Tracked objects:
 31029 ;;		On entry : 0/39
 31030 ;;		On exit  : 0/0
 31031 ;;		Unchanged: 0/0
 31032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31037 ;;Total ram usage:        0 bytes
 31038 ;; Hardware stack levels used:    1
 31039 ;; Hardware stack levels required when called:   16
 31040 ;; This function calls:
 31041 ;;		_TMR3_SetInterruptHandler
 31042 ;; This function is called by:
 31043 ;;		_SYSTEM_Initialize
 31044 ;; This function uses a reentrant model
 31045 ;;
 31046                           
 31047                           	psect	text124
 31048  01BA0A                     __ptext124:
 31049                           	opt callstack 0
 31050  01BA0A                     _TMR3_Initialize:
 31051                           	opt callstack 13
 31052                           
 31053                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 31054                           
 31055                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31056                           ;incstack = 0
 31057  01BA0A  6AA7               	clrf	167,c	;volatile
 31058                           
 31059                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 31060  01BA0C  6AA8               	clrf	168,c	;volatile
 31061                           
 31062                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 31063  01BA0E  0E01               	movlw	1
 31064  01BA10  6EA9               	movwf	169,c	;volatile
 31065                           
 31066                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 31067  01BA12  0E3C               	movlw	60
 31068  01BA14  6EA5               	movwf	165,c	;volatile
 31069                           
 31070                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 31071  01BA16  0EB0               	movlw	176
 31072  01BA18  6EA4               	movwf	164,c	;volatile
 31073                           
 31074                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 31075  01BA1A  50A4               	movf	164,w,c	;volatile
 31076  01BA1C  006F FE94  F001    	movff	16293,btemp	;volatile
 31077  01BA22  6A02               	clrf	(btemp+1)^0,c
 31078  01BA24  0060  F004  F002   	movff	btemp,btemp+1
 31079  01BA2A  6A01               	clrf	btemp^0,c
 31080  01BA2C  1001               	iorwf	btemp^0,w,c
 31081  01BA2E  0100               	movlb	0	; () banked
 31082  01BA30  6F9E               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 31083  01BA32  5002               	movf	(btemp+1)^0,w,c
 31084  01BA34  6F9F               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 31085                           
 31086                           ; BSR set to: 0
 31087                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 31088  01BA36  0139               	movlb	57	; () banked
 31089  01BA38  9DA6               	bcf	166,6,b	;volatile
 31090                           
 31091                           ; BSR set to: 57
 31092                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 31093  01BA3A  8D96               	bsf	150,6,b	;volatile
 31094                           
 31095                           ; BSR set to: 57
 31096                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 31097  01BA3C  0EAC               	movlw	low _TMR3_DefaultInterruptHandler
 31098  01BA3E  6EE6               	movwf	postinc1,c
 31099  01BA40  0EC6               	movlw	high _TMR3_DefaultInterruptHandler
 31100  01BA42  6EE6               	movwf	postinc1,c
 31101  01BA44  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 31102  01BA46  6EE6               	movwf	postinc1,c
 31103  01BA48  ECBF  F0E0         	call	_TMR3_SetInterruptHandler	;wreg free
 31104                           
 31105                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 31106  01BA4C  0E31               	movlw	49
 31107  01BA4E  6EA6               	movwf	166,c	;volatile
 31108                           
 31109                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31110  01BA50  0012               	return		;funcret
 31111  01BA52                     __end_of_TMR3_Initialize:
 31112                           	opt callstack 0
 31113                           
 31114 ;; *************** function _TMR3_SetInterruptHandler *****************
 31115 ;; Defined at:
 31116 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 31117 ;; Parameters:    Size  Location     Type
 31118 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31119 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 31120 ;; Auto vars:     Size  Location     Type
 31121 ;;		None
 31122 ;; Return value:  Size  Location     Type
 31123 ;;                  1  [STACK] void 
 31124 ;; Registers used:
 31125 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31126 ;; Tracked objects:
 31127 ;;		On entry : 0/0
 31128 ;;		On exit  : 0/0
 31129 ;;		Unchanged: 0/0
 31130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31135 ;;Total ram usage:        0 bytes
 31136 ;; Hardware stack levels used:    1
 31137 ;; Hardware stack levels required when called:   15
 31138 ;; This function calls:
 31139 ;;		Nothing
 31140 ;; This function is called by:
 31141 ;;		_TMR3_Initialize
 31142 ;;		_init_bsoc
 31143 ;; This function uses a reentrant model
 31144 ;;
 31145                           
 31146                           	psect	text125
 31147  01C17E                     __ptext125:
 31148                           	opt callstack 0
 31149  01C17E                     _TMR3_SetInterruptHandler:
 31150                           	opt callstack 14
 31151                           
 31152                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 31153                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31154                           
 31155                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31156                           ;incstack = 0
 31157  01C17E  50E1               	movf	fsr1l,w,c
 31158  01C180  0FFD               	addlw	-3
 31159  01C182  6ED9               	movwf	fsr2l,c
 31160  01C184  50E2               	movf	fsr1h,w,c
 31161  01C186  6EDA               	movwf	fsr2h,c
 31162  01C188  0EFF               	movlw	255
 31163  01C18A  22DA               	addwfc	fsr2h,f,c
 31164  01C18C  006F FF78  F07C    	movff	postinc2,_TMR3_InterruptHandler
 31165  01C192  006F FF78  F07D    	movff	postinc2,_TMR3_InterruptHandler+1
 31166  01C198  006F FF74  F07E    	movff	postdec2,_TMR3_InterruptHandler+2
 31167                           
 31168                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 31169  01C19E  52E5               	movf	postdec1,f,c
 31170  01C1A0  52E5               	movf	postdec1,f,c
 31171  01C1A2  52E5               	movf	postdec1,f,c
 31172  01C1A4  0012               	return		;funcret
 31173  01C1A6                     __end_of_TMR3_SetInterruptHandler:
 31174                           	opt callstack 0
 31175                           
 31176 ;; *************** function _TMR2_Initialize *****************
 31177 ;; Defined at:
 31178 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 31179 ;; Parameters:    Size  Location     Type
 31180 ;;		None
 31181 ;; Auto vars:     Size  Location     Type
 31182 ;;		None
 31183 ;; Return value:  Size  Location     Type
 31184 ;;                  1  [STACK] void 
 31185 ;; Registers used:
 31186 ;;		wreg, status,2
 31187 ;; Tracked objects:
 31188 ;;		On entry : 3F/3F
 31189 ;;		On exit  : 3F/39
 31190 ;;		Unchanged: 0/0
 31191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31196 ;;Total ram usage:        0 bytes
 31197 ;; Hardware stack levels used:    1
 31198 ;; Hardware stack levels required when called:   15
 31199 ;; This function calls:
 31200 ;;		Nothing
 31201 ;; This function is called by:
 31202 ;;		_SYSTEM_Initialize
 31203 ;; This function uses a reentrant model
 31204 ;;
 31205                           
 31206                           	psect	text126
 31207  01C522                     __ptext126:
 31208                           	opt callstack 0
 31209  01C522                     _TMR2_Initialize:
 31210                           	opt callstack 14
 31211                           
 31212                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 31213                           
 31214                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31215                           ;incstack = 0
 31216  01C522  0E01               	movlw	1
 31217  01C524  6EAE               	movwf	174,c	;volatile
 31218                           
 31219                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 31220  01C526  6AAD               	clrf	173,c	;volatile
 31221                           
 31222                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 31223  01C528  6AAF               	clrf	175,c	;volatile
 31224                           
 31225                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 31226  01C52A  0E63               	movlw	99
 31227  01C52C  6EAB               	movwf	171,c	;volatile
 31228                           
 31229                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 31230  01C52E  6AAA               	clrf	170,c	;volatile
 31231                           
 31232                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 31233  01C530  0139               	movlb	57	; () banked
 31234  01C532  95A4               	bcf	164,2,b	;volatile
 31235                           
 31236                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 31237  01C534  0EC0               	movlw	192
 31238  01C536  6EAC               	movwf	172,c	;volatile
 31239                           
 31240                           ; BSR set to: 57
 31241                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31242  01C538  0012               	return		;funcret
 31243  01C53A                     __end_of_TMR2_Initialize:
 31244                           	opt callstack 0
 31245                           
 31246 ;; *************** function _SPI1_Initialize *****************
 31247 ;; Defined at:
 31248 ;;		line 64 in file "mcc_generated_files/spi1.c"
 31249 ;; Parameters:    Size  Location     Type
 31250 ;;		None
 31251 ;; Auto vars:     Size  Location     Type
 31252 ;;		None
 31253 ;; Return value:  Size  Location     Type
 31254 ;;                  1  [STACK] void 
 31255 ;; Registers used:
 31256 ;;		wreg, status,2
 31257 ;; Tracked objects:
 31258 ;;		On entry : 3F/39
 31259 ;;		On exit  : 3F/3D
 31260 ;;		Unchanged: 0/0
 31261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31266 ;;Total ram usage:        0 bytes
 31267 ;; Hardware stack levels used:    1
 31268 ;; Hardware stack levels required when called:   15
 31269 ;; This function calls:
 31270 ;;		Nothing
 31271 ;; This function is called by:
 31272 ;;		_SYSTEM_Initialize
 31273 ;; This function uses a reentrant model
 31274 ;;
 31275                           
 31276                           	psect	text127
 31277  01C53A                     __ptext127:
 31278                           	opt callstack 0
 31279  01C53A                     _SPI1_Initialize:
 31280                           	opt callstack 14
 31281                           
 31282                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 31283                           
 31284                           ; BSR set to: 57
 31285                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31286                           ;incstack = 0
 31287  01C53A  0E40               	movlw	64
 31288  01C53C  013D               	movlb	61	; () banked
 31289  01C53E  6F15               	movwf	21,b	;volatile
 31290                           
 31291                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 31292  01C540  0E03               	movlw	3
 31293  01C542  6F16               	movwf	22,b	;volatile
 31294                           
 31295                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 31296  01C544  0E4F               	movlw	79
 31297  01C546  6F19               	movwf	25,b	;volatile
 31298                           
 31299                           ; BSR set to: 61
 31300                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 31301  01C548  6B1C               	clrf	28,b	;volatile
 31302                           
 31303                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 31304  01C54A  0E83               	movlw	131
 31305  01C54C  6F14               	movwf	20,b	;volatile
 31306                           
 31307                           ; BSR set to: 61
 31308                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31309  01C54E  0012               	return		;funcret
 31310  01C550                     __end_of_SPI1_Initialize:
 31311                           	opt callstack 0
 31312                           
 31313 ;; *************** function _PWM8_Initialize *****************
 31314 ;; Defined at:
 31315 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 31316 ;; Parameters:    Size  Location     Type
 31317 ;;		None
 31318 ;; Auto vars:     Size  Location     Type
 31319 ;;		None
 31320 ;; Return value:  Size  Location     Type
 31321 ;;                  1  [STACK] void 
 31322 ;; Registers used:
 31323 ;;		wreg, status,2
 31324 ;; Tracked objects:
 31325 ;;		On entry : 0/3E
 31326 ;;		On exit  : 3F/3F
 31327 ;;		Unchanged: 0/0
 31328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31333 ;;Total ram usage:        0 bytes
 31334 ;; Hardware stack levels used:    1
 31335 ;; Hardware stack levels required when called:   15
 31336 ;; This function calls:
 31337 ;;		Nothing
 31338 ;; This function is called by:
 31339 ;;		_SYSTEM_Initialize
 31340 ;; This function uses a reentrant model
 31341 ;;
 31342                           
 31343                           	psect	text128
 31344  01C550                     __ptext128:
 31345                           	opt callstack 0
 31346  01C550                     _PWM8_Initialize:
 31347                           	opt callstack 14
 31348                           
 31349                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 31350                           
 31351                           ; BSR set to: 61
 31352                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31353                           ;incstack = 0
 31354  01C550  0E80               	movlw	128
 31355  01C552  6E62               	movwf	98,c	;volatile
 31356                           
 31357                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 31358  01C554  6A61               	clrf	97,c	;volatile
 31359                           
 31360                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 31361  01C556  0E40               	movlw	64
 31362  01C558  6E60               	movwf	96,c	;volatile
 31363                           
 31364                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 31365  01C55A  013F               	movlb	63	; () banked
 31366  01C55C  515F               	movf	95,w,b	;volatile
 31367  01C55E  0B3F               	andlw	-193
 31368  01C560  0940               	iorlw	64
 31369  01C562  6F5F               	movwf	95,b	;volatile
 31370                           
 31371                           ; BSR set to: 63
 31372                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31373  01C564  0012               	return		;funcret
 31374  01C566                     __end_of_PWM8_Initialize:
 31375                           	opt callstack 0
 31376                           
 31377 ;; *************** function _PMD_Initialize *****************
 31378 ;; Defined at:
 31379 ;;		line 90 in file "mcc_generated_files/mcc.c"
 31380 ;; Parameters:    Size  Location     Type
 31381 ;;		None
 31382 ;; Auto vars:     Size  Location     Type
 31383 ;;		None
 31384 ;; Return value:  Size  Location     Type
 31385 ;;                  1  [STACK] void 
 31386 ;; Registers used:
 31387 ;;		None
 31388 ;; Tracked objects:
 31389 ;;		On entry : 3F/39
 31390 ;;		On exit  : 3F/39
 31391 ;;		Unchanged: 0/0
 31392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31397 ;;Total ram usage:        0 bytes
 31398 ;; Hardware stack levels used:    1
 31399 ;; Hardware stack levels required when called:   15
 31400 ;; This function calls:
 31401 ;;		Nothing
 31402 ;; This function is called by:
 31403 ;;		_SYSTEM_Initialize
 31404 ;; This function uses a reentrant model
 31405 ;;
 31406                           
 31407                           	psect	text129
 31408  01C57C                     __ptext129:
 31409                           	opt callstack 0
 31410  01C57C                     _PMD_Initialize:
 31411                           	opt callstack 14
 31412                           
 31413                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 31414                           
 31415                           ; BSR set to: 63
 31416                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31417                           ;incstack = 0
 31418  01C57C  0139               	movlb	57	; () banked
 31419  01C57E  6BC0               	clrf	192,b	;volatile
 31420                           
 31421                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 31422  01C580  6BC1               	clrf	193,b	;volatile
 31423                           
 31424                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 31425  01C582  6BC2               	clrf	194,b	;volatile
 31426                           
 31427                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 31428  01C584  6BC3               	clrf	195,b	;volatile
 31429                           
 31430                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 31431  01C586  6BC4               	clrf	196,b	;volatile
 31432                           
 31433                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 31434  01C588  6BC5               	clrf	197,b	;volatile
 31435                           
 31436                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 31437  01C58A  6BC6               	clrf	198,b	;volatile
 31438                           
 31439                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 31440  01C58C  6BC7               	clrf	199,b	;volatile
 31441                           
 31442                           ; BSR set to: 57
 31443                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 31444  01C58E  0012               	return		;funcret
 31445  01C590                     __end_of_PMD_Initialize:
 31446                           	opt callstack 0
 31447                           
 31448 ;; *************** function _PIN_MANAGER_Initialize *****************
 31449 ;; Defined at:
 31450 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 31451 ;; Parameters:    Size  Location     Type
 31452 ;;		None
 31453 ;; Auto vars:     Size  Location     Type
 31454 ;;		None
 31455 ;; Return value:  Size  Location     Type
 31456 ;;                  1  [STACK] void 
 31457 ;; Registers used:
 31458 ;;		wreg, status,2
 31459 ;; Tracked objects:
 31460 ;;		On entry : 3F/39
 31461 ;;		On exit  : 3F/3A
 31462 ;;		Unchanged: 0/0
 31463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31468 ;;Total ram usage:        0 bytes
 31469 ;; Hardware stack levels used:    1
 31470 ;; Hardware stack levels required when called:   15
 31471 ;; This function calls:
 31472 ;;		Nothing
 31473 ;; This function is called by:
 31474 ;;		_SYSTEM_Initialize
 31475 ;; This function uses a reentrant model
 31476 ;;
 31477                           
 31478                           	psect	text130
 31479  01AF08                     __ptext130:
 31480                           	opt callstack 0
 31481  01AF08                     _PIN_MANAGER_Initialize:
 31482                           	opt callstack 14
 31483                           
 31484                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 31485                           
 31486                           ; BSR set to: 57
 31487                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31488                           ;incstack = 0
 31489  01AF08  0E07               	movlw	7
 31490  01AF0A  6EBE               	movwf	190,c	;volatile
 31491                           
 31492                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 31493  01AF0C  6ABD               	clrf	189,c	;volatile
 31494                           
 31495                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 31496  01AF0E  6ABA               	clrf	186,c	;volatile
 31497                           
 31498                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x23;
 31499  01AF10  0E23               	movlw	35
 31500  01AF12  6EBF               	movwf	191,c	;volatile
 31501                           
 31502                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 31503  01AF14  6ABB               	clrf	187,c	;volatile
 31504                           
 31505                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 31506  01AF16  0E07               	movlw	7
 31507  01AF18  6EBC               	movwf	188,c	;volatile
 31508                           
 31509                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 31510  01AF1A  6AC6               	clrf	198,c	;volatile
 31511                           
 31512                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0C;
 31513  01AF1C  0E0C               	movlw	12
 31514  01AF1E  6EC7               	movwf	199,c	;volatile
 31515                           
 31516                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 31517  01AF20  68C2               	setf	194,c	;volatile
 31518                           
 31519                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 31520  01AF22  0EBF               	movlw	191
 31521  01AF24  6EC3               	movwf	195,c	;volatile
 31522                           
 31523                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 31524  01AF26  0E90               	movlw	144
 31525  01AF28  6EC4               	movwf	196,c	;volatile
 31526                           
 31527                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 31528  01AF2A  0E0C               	movlw	12
 31529  01AF2C  6EC5               	movwf	197,c	;volatile
 31530                           
 31531                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 31532  01AF2E  013A               	movlb	58	; () banked
 31533  01AF30  6B70               	clrf	112,b	;volatile
 31534                           
 31535                           ; BSR set to: 58
 31536                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 31537  01AF32  6B60               	clrf	96,b	;volatile
 31538                           
 31539                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 31540  01AF34  0E3C               	movlw	60
 31541  01AF36  6F50               	movwf	80,b	;volatile
 31542                           
 31543                           ; BSR set to: 58
 31544                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 31545  01AF38  6B80               	clrf	128,b	;volatile
 31546                           
 31547                           ; BSR set to: 58
 31548                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 31549  01AF3A  6B90               	clrf	144,b	;volatile
 31550                           
 31551                           ; BSR set to: 58
 31552                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 31553  01AF3C  6940               	setf	64,b	;volatile
 31554                           
 31555                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 31556  01AF3E  0E0C               	movlw	12
 31557  01AF40  6F71               	movwf	113,b	;volatile
 31558                           
 31559                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0C;
 31560  01AF42  0E0C               	movlw	12
 31561  01AF44  6F91               	movwf	145,b	;volatile
 31562                           
 31563                           ; BSR set to: 58
 31564                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 31565  01AF46  6B81               	clrf	129,b	;volatile
 31566                           
 31567                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 31568  01AF48  0E83               	movlw	131
 31569  01AF4A  6F51               	movwf	81,b	;volatile
 31570                           
 31571                           ; BSR set to: 58
 31572                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 31573  01AF4C  6B41               	clrf	65,b	;volatile
 31574                           
 31575                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 31576  01AF4E  0E97               	movlw	151
 31577  01AF50  6F61               	movwf	97,b	;volatile
 31578                           
 31579                           ; BSR set to: 58
 31580                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 31581  01AF52  6B82               	clrf	130,b	;volatile
 31582                           
 31583                           ; BSR set to: 58
 31584                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 31585  01AF54  6B92               	clrf	146,b	;volatile
 31586                           
 31587                           ; BSR set to: 58
 31588                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 31589  01AF56  6B42               	clrf	66,b	;volatile
 31590                           
 31591                           ; BSR set to: 58
 31592                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 31593  01AF58  6B52               	clrf	82,b	;volatile
 31594                           
 31595                           ; BSR set to: 58
 31596                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 31597  01AF5A  6B62               	clrf	98,b	;volatile
 31598                           
 31599                           ; BSR set to: 58
 31600                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 31601  01AF5C  6B72               	clrf	114,b	;volatile
 31602                           
 31603                           ; BSR set to: 58
 31604                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 31605  01AF5E  6943               	setf	67,b	;volatile
 31606                           
 31607                           ; BSR set to: 58
 31608                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 31609  01AF60  6953               	setf	83,b	;volatile
 31610                           
 31611                           ; BSR set to: 58
 31612                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 31613  01AF62  6963               	setf	99,b	;volatile
 31614                           
 31615                           ; BSR set to: 58
 31616                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 31617  01AF64  6973               	setf	115,b	;volatile
 31618                           
 31619                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 31620  01AF66  0E07               	movlw	7
 31621  01AF68  6F83               	movwf	131,b	;volatile
 31622                           
 31623                           ; BSR set to: 58
 31624                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 31625  01AF6A  6993               	setf	147,b	;volatile
 31626                           
 31627                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 31628  01AF6C  0E0F               	movlw	15
 31629  01AF6E  6FE8               	movwf	232,b	;volatile
 31630                           
 31631                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 31632  01AF70  0E13               	movlw	19
 31633  01AF72  6FDE               	movwf	222,b	;volatile
 31634                           
 31635                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 31636  01AF74  0E16               	movlw	22
 31637  01AF76  6F0E               	movwf	14,b	;volatile
 31638                           
 31639                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 31640  01AF78  0E1E               	movlw	30
 31641  01AF7A  6F13               	movwf	19,b	;volatile
 31642                           
 31643                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 31644  01AF7C  0E08               	movlw	8
 31645  01AF7E  6FC0               	movwf	192,b	;volatile
 31646                           
 31647                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 31648  01AF80  0E10               	movlw	16
 31649  01AF82  6F19               	movwf	25,b	;volatile
 31650                           
 31651                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 31652  01AF84  0E09               	movlw	9
 31653  01AF86  6FC1               	movwf	193,b	;volatile
 31654                           
 31655                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 31656  01AF88  0E1F               	movlw	31
 31657  01AF8A  6F15               	movwf	21,b	;volatile
 31658                           
 31659                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 31660  01AF8C  0E13               	movlw	19
 31661  01AF8E  6F16               	movwf	22,b	;volatile
 31662                           
 31663                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 31664  01AF90  0E17               	movlw	23
 31665  01AF92  6FE5               	movwf	229,b	;volatile
 31666                           
 31667                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 31668  01AF94  0E14               	movlw	20
 31669  01AF96  6FDF               	movwf	223,b	;volatile
 31670                           
 31671                           ; BSR set to: 58
 31672                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 31673  01AF98  0012               	return		;funcret
 31674  01AF9A                     __end_of_PIN_MANAGER_Initialize:
 31675                           	opt callstack 0
 31676                           
 31677 ;; *************** function _OSCILLATOR_Initialize *****************
 31678 ;; Defined at:
 31679 ;;		line 72 in file "mcc_generated_files/mcc.c"
 31680 ;; Parameters:    Size  Location     Type
 31681 ;;		None
 31682 ;; Auto vars:     Size  Location     Type
 31683 ;;		None
 31684 ;; Return value:  Size  Location     Type
 31685 ;;                  1  [STACK] void 
 31686 ;; Registers used:
 31687 ;;		wreg, status,2
 31688 ;; Tracked objects:
 31689 ;;		On entry : 3F/3A
 31690 ;;		On exit  : 3F/39
 31691 ;;		Unchanged: 0/0
 31692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31697 ;;Total ram usage:        0 bytes
 31698 ;; Hardware stack levels used:    1
 31699 ;; Hardware stack levels required when called:   15
 31700 ;; This function calls:
 31701 ;;		Nothing
 31702 ;; This function is called by:
 31703 ;;		_SYSTEM_Initialize
 31704 ;; This function uses a reentrant model
 31705 ;;
 31706                           
 31707                           	psect	text131
 31708  01C566                     __ptext131:
 31709                           	opt callstack 0
 31710  01C566                     _OSCILLATOR_Initialize:
 31711                           	opt callstack 14
 31712                           
 31713                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 31714                           
 31715                           ; BSR set to: 58
 31716                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31717                           ;incstack = 0
 31718  01C566  0E20               	movlw	32
 31719  01C568  0139               	movlb	57	; () banked
 31720  01C56A  6FD9               	movwf	217,b	;volatile
 31721                           
 31722                           ; BSR set to: 57
 31723                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 31724  01C56C  6BDB               	clrf	219,b	;volatile
 31725                           
 31726                           ; BSR set to: 57
 31727                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 31728  01C56E  6BDD               	clrf	221,b	;volatile
 31729                           
 31730                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 31731  01C570  0E02               	movlw	2
 31732  01C572  6FDF               	movwf	223,b	;volatile
 31733                           
 31734                           ; BSR set to: 57
 31735                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 31736  01C574  6BDE               	clrf	222,b	;volatile
 31737  01C576                     l169:
 31738                           
 31739                           ; BSR set to: 57
 31740                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 31741  01C576  B1DC               	btfsc	220,0,b	;volatile
 31742  01C578  0012               	return	
 31743  01C57A  D7FD               	goto	l169
 31744  01C57C                     __end_of_OSCILLATOR_Initialize:
 31745                           	opt callstack 0
 31746                           
 31747 ;; *************** function _INTERRUPT_Initialize *****************
 31748 ;; Defined at:
 31749 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 31750 ;; Parameters:    Size  Location     Type
 31751 ;;		None
 31752 ;; Auto vars:     Size  Location     Type
 31753 ;;  state           1  [STACK] _Bool 
 31754 ;; Return value:  Size  Location     Type
 31755 ;;                  1  [STACK] void 
 31756 ;; Registers used:
 31757 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 31758 ;; Tracked objects:
 31759 ;;		On entry : 0/0
 31760 ;;		On exit  : 3F/39
 31761 ;;		Unchanged: 0/0
 31762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31767 ;;Total ram usage:        0 bytes
 31768 ;; Hardware stack levels used:    1
 31769 ;; Hardware stack levels required when called:   15
 31770 ;; This function calls:
 31771 ;;		Nothing
 31772 ;; This function is called by:
 31773 ;;		_SYSTEM_Initialize
 31774 ;; This function uses a reentrant model
 31775 ;;
 31776                           
 31777                           	psect	text132
 31778  01B4B0                     __ptext132:
 31779                           	opt callstack 0
 31780  01B4B0                     _INTERRUPT_Initialize:
 31781                           	opt callstack 0
 31782                           
 31783                           ; BSR set to: 57
 31784                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31785  01B4B0  52E6               	movf	postinc1,f,c
 31786                           
 31787                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 31788                           
 31789                           ;incstack = 0
 31790  01B4B2  8AD2               	bsf	210,5,c	;volatile
 31791                           
 31792                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 31793  01B4B4  AED2               	btfss	16338,7,c	;volatile
 31794  01B4B6  D003               	goto	u9540
 31795  01B4B8  6A0C               	clrf	(btemp+11)^0,c
 31796  01B4BA  2A0C               	incf	(btemp+11)^0,f,c
 31797  01B4BC  D001               	goto	u9558
 31798  01B4BE                     u9540:
 31799  01B4BE  6A0C               	clrf	(btemp+11)^0,c
 31800  01B4C0                     u9558:
 31801                           
 31802                           ;stkvar	_state @ sp[(-1)+0]
 31803  01B4C0  0EFF               	movlw	-1
 31804  01B4C2  0060  F033  FFE3   	movff	btemp+11,plusw1
 31805                           
 31806                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 31807  01B4C8  9ED2               	bcf	16338,7,c	;volatile
 31808                           
 31809                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 31810  01B4CA  0E55               	movlw	85
 31811  01B4CC  6ED4               	movwf	212,c	;volatile
 31812                           
 31813                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 31814  01B4CE  0EAA               	movlw	170
 31815  01B4D0  6ED4               	movwf	212,c	;volatile
 31816                           
 31817                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 31818  01B4D2  90D4               	bcf	212,0,c	;volatile
 31819                           
 31820                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 31821  01B4D4  0138               	movlb	56	; () banked
 31822  01B4D6  6B9F               	clrf	159,b	;volatile
 31823                           
 31824                           ; BSR set to: 56
 31825                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 31826  01B4D8  6B9E               	clrf	158,b	;volatile
 31827                           
 31828                           ; BSR set to: 56
 31829                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 31830  01B4DA  0E08               	movlw	8
 31831  01B4DC  6F9D               	movwf	157,b	;volatile
 31832                           
 31833                           ; BSR set to: 56
 31834                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 31835  01B4DE  0E55               	movlw	85
 31836  01B4E0  6ED4               	movwf	212,c	;volatile
 31837                           
 31838                           ; BSR set to: 56
 31839                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 31840  01B4E2  0EAA               	movlw	170
 31841  01B4E4  6ED4               	movwf	212,c	;volatile
 31842                           
 31843                           ; BSR set to: 56
 31844                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 31845  01B4E6  80D4               	bsf	212,0,c	;volatile
 31846                           
 31847                           ; BSR set to: 56
 31848                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 31849                           ;stkvar	_state @ sp[(-1)+0]
 31850  01B4E8  0EFF               	movlw	-1
 31851  01B4EA  B0E3               	btfsc	plusw1,0,c
 31852  01B4EC  D002               	bra	u9565
 31853  01B4EE  9ED2               	bcf	16338,7,c	;volatile
 31854  01B4F0  D001               	bra	u9566
 31855  01B4F2                     u9565:
 31856  01B4F2  8ED2               	bsf	16338,7,c	;volatile
 31857  01B4F4                     u9566:
 31858                           
 31859                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 31860  01B4F4  0139               	movlb	57	; () banked
 31861  01B4F6  8782               	bsf	130,3,b	;volatile
 31862                           
 31863                           ; BSR set to: 57
 31864                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 31865  01B4F8  8382               	bsf	130,1,b	;volatile
 31866                           
 31867                           ; BSR set to: 57
 31868                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 31869  01B4FA  8182               	bsf	130,0,b	;volatile
 31870                           
 31871                           ; BSR set to: 57
 31872                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 31873  01B4FC  8582               	bsf	130,2,b	;volatile
 31874                           
 31875                           ; BSR set to: 57
 31876                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 31877  01B4FE  8786               	bsf	134,3,b	;volatile
 31878                           
 31879                           ; BSR set to: 57
 31880                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 31881  01B500  8586               	bsf	134,2,b	;volatile
 31882                           
 31883                           ; BSR set to: 57
 31884                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 31885  01B502  8783               	bsf	131,3,b	;volatile
 31886                           
 31887                           ; BSR set to: 57
 31888                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 31889  01B504  8181               	bsf	129,0,b	;volatile
 31890                           
 31891                           ; BSR set to: 57
 31892                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 31893  01B506  9185               	bcf	133,0,b	;volatile
 31894                           
 31895                           ; BSR set to: 57
 31896                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 31897  01B508  8189               	bsf	137,0,b	;volatile
 31898                           
 31899                           ; BSR set to: 57
 31900                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 31901  01B50A  9D88               	bcf	136,6,b	;volatile
 31902                           
 31903                           ; BSR set to: 57
 31904                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 31905  01B50C  9D86               	bcf	134,6,b	;volatile
 31906                           
 31907                           ; BSR set to: 57
 31908                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 31909  01B50E  8581               	bsf	129,2,b	;volatile
 31910                           
 31911                           ; BSR set to: 57
 31912                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 31913  01B510  8781               	bsf	129,3,b	;volatile
 31914                           
 31915                           ; BSR set to: 57
 31916                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 31917  01B512  52E5               	movf	postdec1,f,c
 31918  01B514  0012               	return		;funcret
 31919  01B516                     __end_of_INTERRUPT_Initialize:
 31920                           	opt callstack 0
 31921                           
 31922 ;; *************** function _FVR_Initialize *****************
 31923 ;; Defined at:
 31924 ;;		line 58 in file "mcc_generated_files/fvr.c"
 31925 ;; Parameters:    Size  Location     Type
 31926 ;;		None
 31927 ;; Auto vars:     Size  Location     Type
 31928 ;;		None
 31929 ;; Return value:  Size  Location     Type
 31930 ;;                  1  [STACK] void 
 31931 ;; Registers used:
 31932 ;;		wreg, status,2
 31933 ;; Tracked objects:
 31934 ;;		On entry : 3F/39
 31935 ;;		On exit  : 3F/3E
 31936 ;;		Unchanged: 0/0
 31937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31942 ;;Total ram usage:        0 bytes
 31943 ;; Hardware stack levels used:    1
 31944 ;; Hardware stack levels required when called:   15
 31945 ;; This function calls:
 31946 ;;		Nothing
 31947 ;; This function is called by:
 31948 ;;		_SYSTEM_Initialize
 31949 ;; This function uses a reentrant model
 31950 ;;
 31951                           
 31952                           	psect	text133
 31953  01C682                     __ptext133:
 31954                           	opt callstack 0
 31955  01C682                     _FVR_Initialize:
 31956                           	opt callstack 14
 31957                           
 31958                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 31959                           
 31960                           ; BSR set to: 57
 31961                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31962                           ;incstack = 0
 31963  01C682  0EAF               	movlw	175
 31964  01C684  013E               	movlb	62	; () banked
 31965  01C686  6FC1               	movwf	193,b	;volatile
 31966                           
 31967                           ; BSR set to: 62
 31968                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 31969  01C688  0012               	return		;funcret
 31970  01C68A                     __end_of_FVR_Initialize:
 31971                           	opt callstack 0
 31972                           
 31973 ;; *************** function _EXT_INT_Initialize *****************
 31974 ;; Defined at:
 31975 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 31976 ;; Parameters:    Size  Location     Type
 31977 ;;		None
 31978 ;; Auto vars:     Size  Location     Type
 31979 ;;		None
 31980 ;; Return value:  Size  Location     Type
 31981 ;;                  1  [STACK] void 
 31982 ;; Registers used:
 31983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31984 ;; Tracked objects:
 31985 ;;		On entry : 3F/39
 31986 ;;		On exit  : 3F/39
 31987 ;;		Unchanged: 0/0
 31988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31993 ;;Total ram usage:        0 bytes
 31994 ;; Hardware stack levels used:    1
 31995 ;; Hardware stack levels required when called:   16
 31996 ;; This function calls:
 31997 ;;		_INT0_SetInterruptHandler
 31998 ;;		_INT1_SetInterruptHandler
 31999 ;; This function is called by:
 32000 ;;		_SYSTEM_Initialize
 32001 ;; This function uses a reentrant model
 32002 ;;
 32003                           
 32004                           	psect	text134
 32005  01BE94                     __ptext134:
 32006                           	opt callstack 0
 32007  01BE94                     _EXT_INT_Initialize:
 32008                           	opt callstack 13
 32009                           
 32010                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 32011                           
 32012                           ; BSR set to: 62
 32013                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32014                           ;incstack = 0
 32015  01BE94  0139               	movlb	57	; () banked
 32016  01BE96  91A1               	bcf	161,0,b	;volatile
 32017                           
 32018                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 32019  01BE98  90D2               	bcf	210,0,c	;volatile
 32020                           
 32021                           ; BSR set to: 57
 32022                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 32023  01BE9A  0EAE               	movlw	low _INT0_DefaultInterruptHandler
 32024  01BE9C  6EE6               	movwf	postinc1,c
 32025  01BE9E  0EC6               	movlw	high _INT0_DefaultInterruptHandler
 32026  01BEA0  6EE6               	movwf	postinc1,c
 32027  01BEA2  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 32028  01BEA4  6EE6               	movwf	postinc1,c
 32029  01BEA6  ECE7  F0E0         	call	_INT0_SetInterruptHandler	;wreg free
 32030                           
 32031                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 32032  01BEAA  0139               	movlb	57	; () banked
 32033  01BEAC  8191               	bsf	145,0,b	;volatile
 32034                           
 32035                           ; BSR set to: 57
 32036                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 32037  01BEAE  91A5               	bcf	165,0,b	;volatile
 32038                           
 32039                           ; BSR set to: 57
 32040                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 32041  01BEB0  92D2               	bcf	210,1,c	;volatile
 32042                           
 32043                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 32044  01BEB2  0EAA               	movlw	low _INT1_DefaultInterruptHandler
 32045  01BEB4  6EE6               	movwf	postinc1,c
 32046  01BEB6  0EC6               	movlw	high _INT1_DefaultInterruptHandler
 32047  01BEB8  6EE6               	movwf	postinc1,c
 32048  01BEBA  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 32049  01BEBC  6EE6               	movwf	postinc1,c
 32050  01BEBE  ECD3  F0E0         	call	_INT1_SetInterruptHandler	;wreg free
 32051                           
 32052                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 32053  01BEC2  0139               	movlb	57	; () banked
 32054  01BEC4  8195               	bsf	149,0,b	;volatile
 32055                           
 32056                           ; BSR set to: 57
 32057                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 32058  01BEC6  0012               	return		;funcret
 32059  01BEC8                     __end_of_EXT_INT_Initialize:
 32060                           	opt callstack 0
 32061                           
 32062 ;; *************** function _INT1_SetInterruptHandler *****************
 32063 ;; Defined at:
 32064 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 32065 ;; Parameters:    Size  Location     Type
 32066 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32067 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 32068 ;; Auto vars:     Size  Location     Type
 32069 ;;		None
 32070 ;; Return value:  Size  Location     Type
 32071 ;;                  1  [STACK] void 
 32072 ;; Registers used:
 32073 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32074 ;; Tracked objects:
 32075 ;;		On entry : 3F/39
 32076 ;;		On exit  : 0/0
 32077 ;;		Unchanged: 0/0
 32078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32083 ;;Total ram usage:        0 bytes
 32084 ;; Hardware stack levels used:    1
 32085 ;; Hardware stack levels required when called:   15
 32086 ;; This function calls:
 32087 ;;		Nothing
 32088 ;; This function is called by:
 32089 ;;		_EXT_INT_Initialize
 32090 ;;		_start_switch_handler
 32091 ;; This function uses a reentrant model
 32092 ;;
 32093                           
 32094                           	psect	text135
 32095  01C1A6                     __ptext135:
 32096                           	opt callstack 0
 32097  01C1A6                     _INT1_SetInterruptHandler:
 32098                           	opt callstack 14
 32099                           
 32100                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 32101                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32102                           
 32103                           ; BSR set to: 57
 32104                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32105                           ;incstack = 0
 32106  01C1A6  50E1               	movf	fsr1l,w,c
 32107  01C1A8  0FFD               	addlw	-3
 32108  01C1AA  6ED9               	movwf	fsr2l,c
 32109  01C1AC  50E2               	movf	fsr1h,w,c
 32110  01C1AE  6EDA               	movwf	fsr2h,c
 32111  01C1B0  0EFF               	movlw	255
 32112  01C1B2  22DA               	addwfc	fsr2h,f,c
 32113  01C1B4  006F FF78  F094    	movff	postinc2,_INT1_InterruptHandler
 32114  01C1BA  006F FF78  F095    	movff	postinc2,_INT1_InterruptHandler+1
 32115  01C1C0  006F FF74  F096    	movff	postdec2,_INT1_InterruptHandler+2
 32116                           
 32117                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 32118  01C1C6  52E5               	movf	postdec1,f,c
 32119  01C1C8  52E5               	movf	postdec1,f,c
 32120  01C1CA  52E5               	movf	postdec1,f,c
 32121  01C1CC  0012               	return		;funcret
 32122  01C1CE                     __end_of_INT1_SetInterruptHandler:
 32123                           	opt callstack 0
 32124                           
 32125 ;; *************** function _INT0_SetInterruptHandler *****************
 32126 ;; Defined at:
 32127 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 32128 ;; Parameters:    Size  Location     Type
 32129 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32130 ;;		 -> INT0_DefaultInterruptHandler(1), 
 32131 ;; Auto vars:     Size  Location     Type
 32132 ;;		None
 32133 ;; Return value:  Size  Location     Type
 32134 ;;                  1  [STACK] void 
 32135 ;; Registers used:
 32136 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32137 ;; Tracked objects:
 32138 ;;		On entry : 3F/39
 32139 ;;		On exit  : 0/0
 32140 ;;		Unchanged: 0/0
 32141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32146 ;;Total ram usage:        0 bytes
 32147 ;; Hardware stack levels used:    1
 32148 ;; Hardware stack levels required when called:   15
 32149 ;; This function calls:
 32150 ;;		Nothing
 32151 ;; This function is called by:
 32152 ;;		_EXT_INT_Initialize
 32153 ;; This function uses a reentrant model
 32154 ;;
 32155                           
 32156                           	psect	text136
 32157  01C1CE                     __ptext136:
 32158                           	opt callstack 0
 32159  01C1CE                     _INT0_SetInterruptHandler:
 32160                           	opt callstack 13
 32161                           
 32162                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 32163                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32164                           
 32165                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32166                           ;incstack = 0
 32167  01C1CE  50E1               	movf	fsr1l,w,c
 32168  01C1D0  0FFD               	addlw	-3
 32169  01C1D2  6ED9               	movwf	fsr2l,c
 32170  01C1D4  50E2               	movf	fsr1h,w,c
 32171  01C1D6  6EDA               	movwf	fsr2h,c
 32172  01C1D8  0EFF               	movlw	255
 32173  01C1DA  22DA               	addwfc	fsr2h,f,c
 32174  01C1DC  006F FF78  F097    	movff	postinc2,_INT0_InterruptHandler
 32175  01C1E2  006F FF78  F098    	movff	postinc2,_INT0_InterruptHandler+1
 32176  01C1E8  006F FF74  F099    	movff	postdec2,_INT0_InterruptHandler+2
 32177                           
 32178                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 32179  01C1EE  52E5               	movf	postdec1,f,c
 32180  01C1F0  52E5               	movf	postdec1,f,c
 32181  01C1F2  52E5               	movf	postdec1,f,c
 32182  01C1F4  0012               	return		;funcret
 32183  01C1F6                     __end_of_INT0_SetInterruptHandler:
 32184                           	opt callstack 0
 32185                           
 32186 ;; *************** function _DMA2_Initialize *****************
 32187 ;; Defined at:
 32188 ;;		line 61 in file "mcc_generated_files/dma2.c"
 32189 ;; Parameters:    Size  Location     Type
 32190 ;;		None
 32191 ;; Auto vars:     Size  Location     Type
 32192 ;;		None
 32193 ;; Return value:  Size  Location     Type
 32194 ;;                  1  [STACK] void 
 32195 ;; Registers used:
 32196 ;;		wreg, status,2
 32197 ;; Tracked objects:
 32198 ;;		On entry : 3F/3D
 32199 ;;		On exit  : 3F/3B
 32200 ;;		Unchanged: 0/0
 32201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32206 ;;Total ram usage:        0 bytes
 32207 ;; Hardware stack levels used:    1
 32208 ;; Hardware stack levels required when called:   15
 32209 ;; This function calls:
 32210 ;;		Nothing
 32211 ;; This function is called by:
 32212 ;;		_SYSTEM_Initialize
 32213 ;; This function uses a reentrant model
 32214 ;;
 32215                           
 32216                           	psect	text137
 32217  01B752                     __ptext137:
 32218                           	opt callstack 0
 32219  01B752                     _DMA2_Initialize:
 32220                           	opt callstack 14
 32221                           
 32222                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 32223                           
 32224                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32225                           ;incstack = 0
 32226  01B752  0E00               	movlw	0
 32227  01B754  013B               	movlb	59	; () banked
 32228  01B756  6FD9               	movwf	217,b	;volatile
 32229  01B758  0E10               	movlw	16
 32230  01B75A  6FDA               	movwf	218,b	;volatile
 32231  01B75C  0E00               	movlw	0
 32232  01B75E  6FDB               	movwf	219,b	;volatile
 32233                           
 32234                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 32235  01B760  0E3F               	movlw	63
 32236  01B762  6FD1               	movwf	209,b	;volatile
 32237  01B764  0EBB               	movlw	187
 32238  01B766  6FD0               	movwf	208,b	;volatile
 32239                           
 32240                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 32241  01B768  0E03               	movlw	3
 32242  01B76A  6FDD               	movwf	221,b	;volatile
 32243                           
 32244                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 32245  01B76C  0E00               	movlw	0
 32246  01B76E  6FD8               	movwf	216,b	;volatile
 32247  01B770  0E01               	movlw	1
 32248  01B772  6FD7               	movwf	215,b	;volatile
 32249                           
 32250                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 32251  01B774  0E00               	movlw	0
 32252  01B776  6FCF               	movwf	207,b	;volatile
 32253  01B778  0E01               	movlw	1
 32254  01B77A  6FCE               	movwf	206,b	;volatile
 32255                           
 32256                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 32257  01B77C  0E1C               	movlw	28
 32258  01B77E  6FDF               	movwf	223,b	;volatile
 32259                           
 32260                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 32261  01B780  0E3D               	movlw	61
 32262  01B782  6FDE               	movwf	222,b	;volatile
 32263                           
 32264                           ; BSR set to: 59
 32265                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 32266  01B784  0139               	movlb	57	; () banked
 32267  01B786  97A5               	bcf	165,3,b	;volatile
 32268                           
 32269                           ; BSR set to: 57
 32270                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 32271  01B788  95A5               	bcf	165,2,b	;volatile
 32272                           
 32273                           ; BSR set to: 57
 32274                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 32275  01B78A  9BA5               	bcf	165,5,b	;volatile
 32276                           
 32277                           ; BSR set to: 57
 32278                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 32279  01B78C  99A5               	bcf	165,4,b	;volatile
 32280                           
 32281                           ; BSR set to: 57
 32282                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 32283  01B78E  9795               	bcf	149,3,b	;volatile
 32284                           
 32285                           ; BSR set to: 57
 32286                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 32287  01B790  9595               	bcf	149,2,b	;volatile
 32288                           
 32289                           ; BSR set to: 57
 32290                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 32291  01B792  9B95               	bcf	149,5,b	;volatile
 32292                           
 32293                           ; BSR set to: 57
 32294                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 32295  01B794  9995               	bcf	149,4,b	;volatile
 32296  01B796  9ED2               	bcf	16338,7,c	;# 
 32297  01B798  0139               	banksel	14831	;# 
 32298  01B79A  0E55               	movlw	85	;# 
 32299  01B79C  6FEF               	movwf	14831,b	;# 
 32300  01B79E  0EAA               	movlw	170	;# 
 32301  01B7A0  6FEF               	movwf	14831,b	;# 
 32302  01B7A2  81EF               	bsf	14831,0,b	;# 
 32303  01B7A4  8ED2               	bsf	16338,7,c	;# 
 32304                           
 32305                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 32306  01B7A6  013B               	movlb	59	; () banked
 32307  01B7A8  6BDC               	clrf	220,b	;volatile
 32308                           
 32309                           ; BSR set to: 59
 32310                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32311  01B7AA  0012               	return		;funcret
 32312  01B7AC                     __end_of_DMA2_Initialize:
 32313                           	opt callstack 0
 32314                           
 32315 ;; *************** function _DMA1_Initialize *****************
 32316 ;; Defined at:
 32317 ;;		line 86 in file "mcc_generated_files/dma1.c"
 32318 ;; Parameters:    Size  Location     Type
 32319 ;;		None
 32320 ;; Auto vars:     Size  Location     Type
 32321 ;;		None
 32322 ;; Return value:  Size  Location     Type
 32323 ;;                  1  [STACK] void 
 32324 ;; Registers used:
 32325 ;;		wreg, status,2
 32326 ;; Tracked objects:
 32327 ;;		On entry : 3F/3B
 32328 ;;		On exit  : 3F/3B
 32329 ;;		Unchanged: 0/0
 32330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32335 ;;Total ram usage:        0 bytes
 32336 ;; Hardware stack levels used:    1
 32337 ;; Hardware stack levels required when called:   15
 32338 ;; This function calls:
 32339 ;;		Nothing
 32340 ;; This function is called by:
 32341 ;;		_SYSTEM_Initialize
 32342 ;; This function uses a reentrant model
 32343 ;;
 32344                           
 32345                           	psect	text138
 32346  01B30C                     __ptext138:
 32347                           	opt callstack 0
 32348  01B30C                     _DMA1_Initialize:
 32349                           	opt callstack 14
 32350                           
 32351                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 32352                           
 32353                           ; BSR set to: 59
 32354                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32355                           ;incstack = 0
 32356  01B30C  0E00               	movlw	0
 32357  01B30E  013B               	movlb	59	; () banked
 32358  01B310  6FF9               	movwf	249,b	;volatile
 32359  01B312  0E10               	movlw	16
 32360  01B314  6FFA               	movwf	250,b	;volatile
 32361  01B316  0E00               	movlw	0
 32362  01B318  6FFB               	movwf	251,b	;volatile
 32363                           
 32364                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 32365  01B31A  0E3D               	movlw	61
 32366  01B31C  6FF1               	movwf	241,b	;volatile
 32367  01B31E  0E11               	movlw	17
 32368  01B320  6FF0               	movwf	240,b	;volatile
 32369                           
 32370                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 32371  01B322  0E03               	movlw	3
 32372  01B324  6FFD               	movwf	253,b	;volatile
 32373                           
 32374                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 32375  01B326  0E00               	movlw	0
 32376  01B328  6FF8               	movwf	248,b	;volatile
 32377  01B32A  0E01               	movlw	1
 32378  01B32C  6FF7               	movwf	247,b	;volatile
 32379                           
 32380                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 32381  01B32E  0E00               	movlw	0
 32382  01B330  6FEF               	movwf	239,b	;volatile
 32383  01B332  0E01               	movlw	1
 32384  01B334  6FEE               	movwf	238,b	;volatile
 32385                           
 32386                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 32387  01B336  0E15               	movlw	21
 32388  01B338  6FFF               	movwf	255,b	;volatile
 32389                           
 32390                           ; BSR set to: 59
 32391                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 32392  01B33A  6BFE               	clrf	254,b	;volatile
 32393                           
 32394                           ; BSR set to: 59
 32395                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 32396  01B33C  0139               	movlb	57	; () banked
 32397  01B33E  93A2               	bcf	162,1,b	;volatile
 32398                           
 32399                           ; BSR set to: 57
 32400                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 32401  01B340  91A2               	bcf	162,0,b	;volatile
 32402                           
 32403                           ; BSR set to: 57
 32404                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 32405  01B342  97A2               	bcf	162,3,b	;volatile
 32406                           
 32407                           ; BSR set to: 57
 32408                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 32409  01B344  95A2               	bcf	162,2,b	;volatile
 32410                           
 32411                           ; BSR set to: 57
 32412                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 32413  01B346  8392               	bsf	146,1,b	;volatile
 32414                           
 32415                           ; BSR set to: 57
 32416                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 32417  01B348  8192               	bsf	146,0,b	;volatile
 32418                           
 32419                           ; BSR set to: 57
 32420                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 32421  01B34A  8792               	bsf	146,3,b	;volatile
 32422                           
 32423                           ; BSR set to: 57
 32424                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 32425  01B34C  8592               	bsf	146,2,b	;volatile
 32426                           
 32427                           ; BSR set to: 57
 32428                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 32429  01B34E  6BF1               	clrf	241,b	;volatile
 32430                           
 32431                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 32432  01B350  0E01               	movlw	1
 32433  01B352  6FF2               	movwf	242,b	;volatile
 32434                           
 32435                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 32436  01B354  0E04               	movlw	4
 32437  01B356  6FF3               	movwf	243,b	;volatile
 32438                           
 32439                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 32440  01B358  0E02               	movlw	2
 32441  01B35A  6FF4               	movwf	244,b	;volatile
 32442                           
 32443                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 32444  01B35C  0E03               	movlw	3
 32445  01B35E  6FF7               	movwf	247,b	;volatile
 32446  01B360  9ED2               	bcf	16338,7,c	;# 
 32447  01B362  0139               	banksel	14831	;# 
 32448  01B364  0E55               	movlw	85	;# 
 32449  01B366  6FEF               	movwf	14831,b	;# 
 32450  01B368  0EAA               	movlw	170	;# 
 32451  01B36A  6FEF               	movwf	14831,b	;# 
 32452  01B36C  81EF               	bsf	14831,0,b	;# 
 32453  01B36E  8ED2               	bsf	16338,7,c	;# 
 32454                           
 32455                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 32456  01B370  013B               	movlb	59	; () banked
 32457  01B372  6BFC               	clrf	252,b	;volatile
 32458                           
 32459                           ; BSR set to: 59
 32460                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32461  01B374  0012               	return		;funcret
 32462  01B376                     __end_of_DMA1_Initialize:
 32463                           	opt callstack 0
 32464                           
 32465 ;; *************** function _CLKREF_Initialize *****************
 32466 ;; Defined at:
 32467 ;;		line 58 in file "mcc_generated_files/clkref.c"
 32468 ;; Parameters:    Size  Location     Type
 32469 ;;		None
 32470 ;; Auto vars:     Size  Location     Type
 32471 ;;		None
 32472 ;; Return value:  Size  Location     Type
 32473 ;;                  1  [STACK] void 
 32474 ;; Registers used:
 32475 ;;		wreg, status,2
 32476 ;; Tracked objects:
 32477 ;;		On entry : 3F/3B
 32478 ;;		On exit  : 3F/3C
 32479 ;;		Unchanged: 0/0
 32480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32485 ;;Total ram usage:        0 bytes
 32486 ;; Hardware stack levels used:    1
 32487 ;; Hardware stack levels required when called:   15
 32488 ;; This function calls:
 32489 ;;		Nothing
 32490 ;; This function is called by:
 32491 ;;		_SYSTEM_Initialize
 32492 ;; This function uses a reentrant model
 32493 ;;
 32494                           
 32495                           	psect	text139
 32496  01C62A                     __ptext139:
 32497                           	opt callstack 0
 32498  01C62A                     _CLKREF_Initialize:
 32499                           	opt callstack 14
 32500                           
 32501                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 32502                           
 32503                           ; BSR set to: 59
 32504                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32505                           ;incstack = 0
 32506  01C62A  013C               	movlb	60	; () banked
 32507  01C62C  6BE6               	clrf	230,b	;volatile
 32508                           
 32509                           ; BSR set to: 60
 32510                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 32511  01C62E  0E94               	movlw	148
 32512  01C630  6FE5               	movwf	229,b	;volatile
 32513                           
 32514                           ; BSR set to: 60
 32515                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 32516  01C632  0012               	return		;funcret
 32517  01C634                     __end_of_CLKREF_Initialize:
 32518                           	opt callstack 0
 32519                           
 32520 ;; *************** function _ADCC_Initialize *****************
 32521 ;; Defined at:
 32522 ;;		line 65 in file "mcc_generated_files/adcc.c"
 32523 ;; Parameters:    Size  Location     Type
 32524 ;;		None
 32525 ;; Auto vars:     Size  Location     Type
 32526 ;;		None
 32527 ;; Return value:  Size  Location     Type
 32528 ;;                  1  [STACK] void 
 32529 ;; Registers used:
 32530 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 32531 ;; Tracked objects:
 32532 ;;		On entry : 3F/3E
 32533 ;;		On exit  : 0/0
 32534 ;;		Unchanged: 0/0
 32535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32540 ;;Total ram usage:        0 bytes
 32541 ;; Hardware stack levels used:    1
 32542 ;; Hardware stack levels required when called:   16
 32543 ;; This function calls:
 32544 ;;		_ADCC_SetADIInterruptHandler
 32545 ;;		_ADCC_SetADTIInterruptHandler
 32546 ;; This function is called by:
 32547 ;;		_SYSTEM_Initialize
 32548 ;; This function uses a reentrant model
 32549 ;;
 32550                           
 32551                           	psect	text140
 32552  01B376                     __ptext140:
 32553                           	opt callstack 0
 32554  01B376                     _ADCC_Initialize:
 32555                           	opt callstack 13
 32556                           
 32557                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 32558                           
 32559                           ; BSR set to: 60
 32560                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32561                           ;incstack = 0
 32562  01B376  013E               	movlb	62	; () banked
 32563  01B378  6BDE               	clrf	222,b	;volatile
 32564                           
 32565                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 32566  01B37A  6BDF               	clrf	223,b	;volatile
 32567                           
 32568                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 32569  01B37C  6BE0               	clrf	224,b	;volatile
 32570                           
 32571                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 32572  01B37E  6BE1               	clrf	225,b	;volatile
 32573                           
 32574                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 32575  01B380  6BE4               	clrf	228,b	;volatile
 32576                           
 32577                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 32578  01B382  6BE5               	clrf	229,b	;volatile
 32579                           
 32580                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 32581  01B384  6BEA               	clrf	234,b	;volatile
 32582                           
 32583                           ; BSR set to: 62
 32584                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 32585  01B386  0E40               	movlw	64
 32586  01B388  6FEC               	movwf	236,b	;volatile
 32587                           
 32588                           ; BSR set to: 62
 32589                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 32590  01B38A  6BF1               	clrf	241,b	;volatile
 32591                           
 32592                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 32593  01B38C  0E20               	movlw	32
 32594  01B38E  6FF3               	movwf	243,b	;volatile
 32595                           
 32596                           ; BSR set to: 62
 32597                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 32598  01B390  6BF4               	clrf	244,b	;volatile
 32599                           
 32600                           ; BSR set to: 62
 32601                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 32602  01B392  6BF5               	clrf	245,b	;volatile
 32603                           
 32604                           ; BSR set to: 62
 32605                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 32606  01B394  6BF6               	clrf	246,b	;volatile
 32607                           
 32608                           ; BSR set to: 62
 32609                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 32610  01B396  6BF7               	clrf	247,b	;volatile
 32611                           
 32612                           ; BSR set to: 62
 32613                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 32614  01B398  6BF9               	clrf	249,b	;volatile
 32615                           
 32616                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 32617  01B39A  0E5B               	movlw	91
 32618  01B39C  6FFA               	movwf	250,b	;volatile
 32619                           
 32620                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 32621  01B39E  0E27               	movlw	39
 32622  01B3A0  6FFB               	movwf	251,b	;volatile
 32623                           
 32624                           ; BSR set to: 62
 32625                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 32626  01B3A2  6BFC               	clrf	252,b	;volatile
 32627                           
 32628                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 32629  01B3A4  0E02               	movlw	2
 32630  01B3A6  6FFD               	movwf	253,b	;volatile
 32631                           
 32632                           ; BSR set to: 62
 32633                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 32634  01B3A8  6BFE               	clrf	254,b	;volatile
 32635                           
 32636                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 32637  01B3AA  0E07               	movlw	7
 32638  01B3AC  6FFF               	movwf	255,b	;volatile
 32639                           
 32640                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 32641  01B3AE  0E84               	movlw	132
 32642  01B3B0  6FF8               	movwf	248,b	;volatile
 32643                           
 32644                           ; BSR set to: 62
 32645                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 32646  01B3B2  0139               	movlb	57	; () banked
 32647  01B3B4  95A1               	bcf	161,2,b	;volatile
 32648                           
 32649                           ; BSR set to: 57
 32650                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 32651  01B3B6  8591               	bsf	145,2,b	;volatile
 32652                           
 32653                           ; BSR set to: 57
 32654                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 32655  01B3B8  0EB0               	movlw	low _ADCC_DefaultInterruptHandler
 32656  01B3BA  6EE6               	movwf	postinc1,c
 32657  01B3BC  0EC6               	movlw	high _ADCC_DefaultInterruptHandler
 32658  01B3BE  6EE6               	movwf	postinc1,c
 32659  01B3C0  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 32660  01B3C2  6EE6               	movwf	postinc1,c
 32661  01B3C4  EC0F  F0E1         	call	_ADCC_SetADIInterruptHandler	;wreg free
 32662                           
 32663                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 32664  01B3C8  0139               	movlb	57	; () banked
 32665  01B3CA  97A1               	bcf	161,3,b	;volatile
 32666                           
 32667                           ; BSR set to: 57
 32668                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 32669  01B3CC  8791               	bsf	145,3,b	;volatile
 32670                           
 32671                           ; BSR set to: 57
 32672                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 32673  01B3CE  0EB0               	movlw	low _ADCC_DefaultInterruptHandler
 32674  01B3D0  6EE6               	movwf	postinc1,c
 32675  01B3D2  0EC6               	movlw	high _ADCC_DefaultInterruptHandler
 32676  01B3D4  6EE6               	movwf	postinc1,c
 32677  01B3D6  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 32678  01B3D8  6EE6               	movwf	postinc1,c
 32679  01B3DA  ECFB  F0E0         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 32680                           
 32681                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32682  01B3DE  0012               	return		;funcret
 32683  01B3E0                     __end_of_ADCC_Initialize:
 32684                           	opt callstack 0
 32685                           
 32686 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 32687 ;; Defined at:
 32688 ;;		line 336 in file "mcc_generated_files/adcc.c"
 32689 ;; Parameters:    Size  Location     Type
 32690 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32691 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 32692 ;; Auto vars:     Size  Location     Type
 32693 ;;		None
 32694 ;; Return value:  Size  Location     Type
 32695 ;;                  1  [STACK] void 
 32696 ;; Registers used:
 32697 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32698 ;; Tracked objects:
 32699 ;;		On entry : 0/0
 32700 ;;		On exit  : 0/0
 32701 ;;		Unchanged: 0/0
 32702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32707 ;;Total ram usage:        0 bytes
 32708 ;; Hardware stack levels used:    1
 32709 ;; Hardware stack levels required when called:   15
 32710 ;; This function calls:
 32711 ;;		Nothing
 32712 ;; This function is called by:
 32713 ;;		_ADCC_Initialize
 32714 ;;		_start_adc_scan
 32715 ;; This function uses a reentrant model
 32716 ;;
 32717                           
 32718                           	psect	text141
 32719  01C1F6                     __ptext141:
 32720                           	opt callstack 0
 32721  01C1F6                     _ADCC_SetADTIInterruptHandler:
 32722                           	opt callstack 14
 32723                           
 32724                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 32725                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32726                           
 32727                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32728                           ;incstack = 0
 32729  01C1F6  50E1               	movf	fsr1l,w,c
 32730  01C1F8  0FFD               	addlw	-3
 32731  01C1FA  6ED9               	movwf	fsr2l,c
 32732  01C1FC  50E2               	movf	fsr1h,w,c
 32733  01C1FE  6EDA               	movwf	fsr2h,c
 32734  01C200  0EFF               	movlw	255
 32735  01C202  22DA               	addwfc	fsr2h,f,c
 32736  01C204  006F FF78  F085    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 32737  01C20A  006F FF78  F086    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 32738  01C210  006F FF74  F087    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 32739                           
 32740                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 32741  01C216  52E5               	movf	postdec1,f,c
 32742  01C218  52E5               	movf	postdec1,f,c
 32743  01C21A  52E5               	movf	postdec1,f,c
 32744  01C21C  0012               	return		;funcret
 32745  01C21E                     __end_of_ADCC_SetADTIInterruptHandler:
 32746                           	opt callstack 0
 32747                           
 32748 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 32749 ;; Defined at:
 32750 ;;		line 323 in file "mcc_generated_files/adcc.c"
 32751 ;; Parameters:    Size  Location     Type
 32752 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32753 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 32754 ;; Auto vars:     Size  Location     Type
 32755 ;;		None
 32756 ;; Return value:  Size  Location     Type
 32757 ;;                  1  [STACK] void 
 32758 ;; Registers used:
 32759 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32760 ;; Tracked objects:
 32761 ;;		On entry : 6/0
 32762 ;;		On exit  : 0/0
 32763 ;;		Unchanged: 0/0
 32764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32769 ;;Total ram usage:        0 bytes
 32770 ;; Hardware stack levels used:    1
 32771 ;; Hardware stack levels required when called:   15
 32772 ;; This function calls:
 32773 ;;		Nothing
 32774 ;; This function is called by:
 32775 ;;		_ADCC_Initialize
 32776 ;;		_start_adc_scan
 32777 ;; This function uses a reentrant model
 32778 ;;
 32779                           
 32780                           	psect	text142
 32781  01C21E                     __ptext142:
 32782                           	opt callstack 0
 32783  01C21E                     _ADCC_SetADIInterruptHandler:
 32784                           	opt callstack 14
 32785                           
 32786                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 32787                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32788                           
 32789                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32790                           ;incstack = 0
 32791  01C21E  50E1               	movf	fsr1l,w,c
 32792  01C220  0FFD               	addlw	-3
 32793  01C222  6ED9               	movwf	fsr2l,c
 32794  01C224  50E2               	movf	fsr1h,w,c
 32795  01C226  6EDA               	movwf	fsr2h,c
 32796  01C228  0EFF               	movlw	255
 32797  01C22A  22DA               	addwfc	fsr2h,f,c
 32798  01C22C  006F FF78  F088    	movff	postinc2,_ADCC_ADI_InterruptHandler
 32799  01C232  006F FF78  F089    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 32800  01C238  006F FF74  F08A    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 32801                           
 32802                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 32803  01C23E  52E5               	movf	postdec1,f,c
 32804  01C240  52E5               	movf	postdec1,f,c
 32805  01C242  52E5               	movf	postdec1,f,c
 32806  01C244  0012               	return		;funcret
 32807  01C246                     __end_of_ADCC_SetADIInterruptHandler:
 32808                           	opt callstack 0
 32809                           
 32810 ;; *************** function _INT1_ISR *****************
 32811 ;; Defined at:
 32812 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 32813 ;; Parameters:    Size  Location     Type
 32814 ;;		None
 32815 ;; Auto vars:     Size  Location     Type
 32816 ;;		None
 32817 ;; Return value:  Size  Location     Type
 32818 ;;                  1    wreg      void 
 32819 ;; Registers used:
 32820 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 32821 ;; Tracked objects:
 32822 ;;		On entry : 0/0
 32823 ;;		On exit  : 0/0
 32824 ;;		Unchanged: 0/0
 32825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32828 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32829 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32830 ;;Total ram usage:        4 bytes
 32831 ;; Hardware stack levels used:    1
 32832 ;; Hardware stack levels required when called:    5
 32833 ;; This function calls:
 32834 ;;		_INT1_CallBack
 32835 ;; This function is called by:
 32836 ;;		Interrupt level 1
 32837 ;; This function uses a non-reentrant model
 32838 ;;
 32839                           
 32840                           	psect	text143
 32841  01BCA4                     __ptext143:
 32842                           	opt callstack 0
 32843  01BCA4                     _INT1_ISR:
 32844                           	opt callstack 11
 32845                           
 32846                           ;incstack = 0
 32847  01BCA4  006F FF60  F027    	movff	status,??_INT1_ISR
 32848  01BCAA  0060  F004  F028   	movff	btemp,??_INT1_ISR+1
 32849  01BCB0  0060  F02C  F029   	movff	btemp+10,??_INT1_ISR+2
 32850  01BCB6  0060  F030  F02A   	movff	btemp+11,??_INT1_ISR+3
 32851  01BCBC  EE16  F0AF         	lfsr	1,___intlo_sp
 32852                           
 32853                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 32854  01BCC0  0139               	movlb	57	; () banked
 32855  01BCC2  91A5               	bcf	165,0,b	;volatile
 32856                           
 32857                           ; BSR set to: 57
 32858                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 32859  01BCC4  EC72  F0E1         	call	_INT1_CallBack	;wreg free
 32860  01BCC8  0060  F0A8  F00C   	movff	??_INT1_ISR+3,btemp+11
 32861  01BCCE  0060  F0A4  F00B   	movff	??_INT1_ISR+2,btemp+10
 32862  01BCD4  0060  F0A0  F001   	movff	??_INT1_ISR+1,btemp
 32863  01BCDA  0060  F09F  FFD8   	movff	??_INT1_ISR,status
 32864  01BCE0  0011               	retfie		f
 32865  01BCE2                     __end_of_INT1_ISR:
 32866                           	opt callstack 0
 32867                           
 32868 ;; *************** function _INT1_CallBack *****************
 32869 ;; Defined at:
 32870 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 32871 ;; Parameters:    Size  Location     Type
 32872 ;;		None
 32873 ;; Auto vars:     Size  Location     Type
 32874 ;;		None
 32875 ;; Return value:  Size  Location     Type
 32876 ;;                  1  [STACK] void 
 32877 ;; Registers used:
 32878 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 32879 ;; Tracked objects:
 32880 ;;		On entry : 3F/39
 32881 ;;		On exit  : 0/0
 32882 ;;		Unchanged: 0/0
 32883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32888 ;;Total ram usage:        0 bytes
 32889 ;; Hardware stack levels used:    1
 32890 ;; Hardware stack levels required when called:    4
 32891 ;; This function calls:
 32892 ;;		Absolute function
 32893 ;;		_INT1_DefaultInterruptHandler
 32894 ;;		_switch_handler
 32895 ;; This function is called by:
 32896 ;;		_INT1_ISR
 32897 ;; This function uses a reentrant model
 32898 ;;
 32899                           
 32900                           	psect	text144
 32901  01C2E4                     __ptext144:
 32902                           	opt callstack 0
 32903  01C2E4                     _INT1_CallBack:
 32904                           	opt callstack 11
 32905                           
 32906                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 32907                           
 32908                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32909                           ;incstack = 0
 32910  01C2E4  0100               	movlb	0	; () banked
 32911  01C2E6  5194               	movf	_INT1_InterruptHandler& (0+255),w,b
 32912  01C2E8  1195               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 32913  01C2EA  1196               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 32914  01C2EC  B4D8               	btfsc	status,2,c
 32915  01C2EE  0012               	return	
 32916                           
 32917                           ; BSR set to: 0
 32918                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 32919  01C2F0  D801               	call	u1017_28
 32920  01C2F2  0012               	return	
 32921  01C2F4                     u1017_28:
 32922  01C2F4  0005               	push	
 32923  01C2F6  6EFA               	movwf	pclath,c
 32924  01C2F8  5194               	movf	_INT1_InterruptHandler& (0+255),w,b
 32925  01C2FA  6EFD               	movwf	tosl,c
 32926  01C2FC  5195               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 32927  01C2FE  6EFE               	movwf	tosh,c
 32928  01C300  5196               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 32929  01C302  6EFF               	movwf	tosu,c
 32930  01C304  50FA               	movf	pclath,w,c
 32931  01C306  0012               	return		;indir
 32932  01C308                     __end_of_INT1_CallBack:
 32933                           	opt callstack 0
 32934                           
 32935 ;; *************** function _INT1_DefaultInterruptHandler *****************
 32936 ;; Defined at:
 32937 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 32938 ;; Parameters:    Size  Location     Type
 32939 ;;		None
 32940 ;; Auto vars:     Size  Location     Type
 32941 ;;		None
 32942 ;; Return value:  Size  Location     Type
 32943 ;;                  1  [STACK] void 
 32944 ;; Registers used:
 32945 ;;		None
 32946 ;; Tracked objects:
 32947 ;;		On entry : 3F/0
 32948 ;;		On exit  : 0/0
 32949 ;;		Unchanged: 0/0
 32950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32955 ;;Total ram usage:        0 bytes
 32956 ;; Hardware stack levels used:    1
 32957 ;; Hardware stack levels required when called:    3
 32958 ;; This function calls:
 32959 ;;		Nothing
 32960 ;; This function is called by:
 32961 ;;		_EXT_INT_Initialize
 32962 ;;		_INT1_CallBack
 32963 ;; This function uses a reentrant model
 32964 ;;
 32965                           
 32966                           	psect	text145
 32967  01C6AA                     __ptext145:
 32968                           	opt callstack 0
 32969  01C6AA                     _INT1_DefaultInterruptHandler:
 32970                           	opt callstack 11
 32971                           
 32972                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32973                           
 32974                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32975                           ;incstack = 0
 32976  01C6AA  0012               	return		;funcret
 32977  01C6AC                     __end_of_INT1_DefaultInterruptHandler:
 32978                           	opt callstack 0
 32979                           
 32980 ;; *************** function _switch_handler *****************
 32981 ;; Defined at:
 32982 ;;		line 58 in file "dio.c"
 32983 ;; Parameters:    Size  Location     Type
 32984 ;;		None
 32985 ;; Auto vars:     Size  Location     Type
 32986 ;;  i               1  [STACK] unsigned char 
 32987 ;;  sw_value        1  [STACK] unsigned char 
 32988 ;; Return value:  Size  Location     Type
 32989 ;;                  1  [STACK] void 
 32990 ;; Registers used:
 32991 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 32992 ;; Tracked objects:
 32993 ;;		On entry : 3F/0
 32994 ;;		On exit  : 0/0
 32995 ;;		Unchanged: 0/0
 32996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33001 ;;Total ram usage:        0 bytes
 33002 ;; Hardware stack levels used:    1
 33003 ;; Hardware stack levels required when called:    3
 33004 ;; This function calls:
 33005 ;;		Nothing
 33006 ;; This function is called by:
 33007 ;;		_start_switch_handler
 33008 ;;		_INT1_CallBack
 33009 ;; This function uses a reentrant model
 33010 ;;
 33011                           
 33012                           	psect	text146
 33013  01964C                     __ptext146:
 33014                           	opt callstack 0
 33015  01964C                     _switch_handler:
 33016                           	opt callstack 0
 33017                           
 33018                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33019  01964C  52E6               	movf	postinc1,f,c
 33020  01964E  52E6               	movf	postinc1,f,c
 33021                           
 33022                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 33023                           ;stkvar	_i @ sp[(-2)+0]
 33024                           
 33025                           ;incstack = 0
 33026  019650  0EFE               	movlw	-2
 33027  019652  6AE3               	clrf	plusw1,c
 33028  019654  9ABF               	bcf	191,5,c	;volatile
 33029                           
 33030                           ;dio.c: 72:  __nop();
 33031  019656  F000               	nop	
 33032                           
 33033                           ;dio.c: 73:  __nop();
 33034  019658  F000               	nop	
 33035                           
 33036                           ;dio.c: 74:  __nop();
 33037  01965A  F000               	nop	
 33038                           
 33039                           ;dio.c: 75:  __nop();
 33040  01965C  F000               	nop	
 33041                           
 33042                           ;dio.c: 76:  __nop();
 33043  01965E  F000               	nop	
 33044                           
 33045                           ;dio.c: 77:  __nop();
 33046  019660  F000               	nop	
 33047  019662  D016               	goto	l10812
 33048  019664                     l10798:
 33049                           
 33050                           ;dio.c: 82:    sw_value = PORTFbits.RF3;
 33051  019664  A6CF               	btfss	207,3,c	;volatile
 33052  019666  D00E               	goto	u983_20
 33053  019668  D00A               	goto	u983_21
 33054  01966A                     u981_28:
 33055                           
 33056                           ;stkvar	_sw_value @ sp[(-2)+1]
 33057  01966A  0EFF               	movlw	-1
 33058  01966C  0060  F033  FFE3   	movff	btemp+11,plusw1
 33059                           
 33060                           ;dio.c: 83:    break;
 33061  019672  D027               	goto	l10814
 33062  019674                     l10800:
 33063                           
 33064                           ;dio.c: 85:    sw_value = PORTFbits.RF2;
 33065  019674  A4CF               	btfss	207,2,c	;volatile
 33066  019676  D006               	goto	u983_20
 33067  019678  D002               	goto	u983_21
 33068  01967A                     l10802:
 33069                           
 33070                           ;dio.c: 88:    sw_value = PORTDbits.RD3;
 33071  01967A  A6CD               	btfss	205,3,c	;volatile
 33072  01967C  D003               	goto	u983_20
 33073  01967E                     u983_21:
 33074  01967E  6A0C               	clrf	(btemp+11)^0,c
 33075  019680  2A0C               	incf	(btemp+11)^0,f,c
 33076  019682  D7F3               	goto	u981_28
 33077  019684                     u983_20:
 33078  019684  6A0C               	clrf	(btemp+11)^0,c
 33079  019686  D7F1               	goto	u981_28
 33080  019688                     l10804:
 33081                           
 33082                           ;dio.c: 91:    sw_value = 1;
 33083                           ;stkvar	_sw_value @ sp[(-2)+1]
 33084  019688  0EFF               	movlw	-1
 33085  01968A  6AE3               	clrf	plusw1,c
 33086  01968C  2AE3               	incf	plusw1,f,c
 33087                           
 33088                           ;dio.c: 92:    break;
 33089  01968E  D019               	goto	l10814
 33090  019690                     l10812:
 33091                           
 33092                           ;stkvar	_i @ sp[(-2)+0]
 33093  019690  0EFE               	movlw	-2
 33094  019692  50E3               	movf	plusw1,w,c
 33095  019694  6E0B               	movwf	(btemp+10)^0,c
 33096  019696  6A0C               	clrf	(btemp+11)^0,c
 33097                           
 33098                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 33099                           ; Switch size 1, requested type "simple"
 33100                           ; Number of cases is 1, Range of values is 0 to 0
 33101                           ; switch strategies available:
 33102                           ; Name         Instructions Cycles
 33103                           ; simple_byte            4     3 (average)
 33104                           ;	Chosen strategy is simple_byte
 33105  019698  500C               	movf	(btemp+11)^0,w,c
 33106  01969A  0A00               	xorlw	0	; case 0
 33107  01969C  A4D8               	btfss	status,2,c
 33108  01969E  D7F4               	goto	l10804
 33109                           
 33110                           ; Switch size 1, requested type "simple"
 33111                           ; Number of cases is 5, Range of values is 0 to 4
 33112                           ; switch strategies available:
 33113                           ; Name         Instructions Cycles
 33114                           ; simple_byte           16     9 (average)
 33115                           ;	Chosen strategy is simple_byte
 33116  0196A0  500B               	movf	(btemp+10)^0,w,c
 33117  0196A2  0A00               	xorlw	0	; case 0
 33118  0196A4  B4D8               	btfsc	status,2,c
 33119  0196A6  D7F0               	goto	l10804
 33120  0196A8  0A01               	xorlw	1	; case 1
 33121  0196AA  B4D8               	btfsc	status,2,c
 33122  0196AC  D7ED               	goto	l10804
 33123  0196AE  0A03               	xorlw	3	; case 2
 33124  0196B0  B4D8               	btfsc	status,2,c
 33125  0196B2  D7E0               	goto	l10800
 33126  0196B4  0A01               	xorlw	1	; case 3
 33127  0196B6  B4D8               	btfsc	status,2,c
 33128  0196B8  D7D5               	goto	l10798
 33129  0196BA  0A07               	xorlw	7	; case 4
 33130  0196BC  B4D8               	btfsc	status,2,c
 33131  0196BE  D7DD               	goto	l10802
 33132  0196C0  D7E3               	goto	l10804
 33133  0196C2                     l10814:
 33134                           
 33135                           ;dio.c: 102:   if (sw_value) {
 33136                           ;stkvar	_sw_value @ sp[(-2)+1]
 33137  0196C2  0EFF               	movlw	-1
 33138  0196C4  50E3               	movf	plusw1,w,c
 33139  0196C6  B4D8               	btfsc	status,2,c
 33140  0196C8  D018               	goto	l10820
 33141                           
 33142                           ;dio.c: 103:    if (S.button[i].sw == SW_ON) {
 33143                           ;stkvar	_i @ sp[(-2)+0]
 33144  0196CA  0EFE               	movlw	-2
 33145  0196CC  50E3               	movf	plusw1,w,c
 33146  0196CE  0D05               	mullw	5
 33147  0196D0  0E54               	movlw	low _S
 33148  0196D2  24F3               	addwf	243,w,c
 33149  0196D4  6ED9               	movwf	fsr2l,c
 33150  0196D6  0E02               	movlw	high _S
 33151  0196D8  20F4               	addwfc	prodh,w,c
 33152  0196DA  6EDA               	movwf	fsr2h,c
 33153  0196DC  04DE               	decf	postinc2,w,c
 33154  0196DE  A4D8               	btfss	status,2,c
 33155  0196E0  D049               	goto	l10828
 33156                           
 33157                           ;dio.c: 104:     S.button[i].sw = SW_OFF;
 33158                           ;stkvar	_i @ sp[(-2)+0]
 33159  0196E2  0EFE               	movlw	-2
 33160  0196E4  50E3               	movf	plusw1,w,c
 33161  0196E6  0D05               	mullw	5
 33162  0196E8  0E54               	movlw	low _S
 33163  0196EA  24F3               	addwf	243,w,c
 33164  0196EC  6ED9               	movwf	fsr2l,c
 33165  0196EE  0E02               	movlw	high _S
 33166  0196F0  20F4               	addwfc	prodh,w,c
 33167  0196F2  6EDA               	movwf	fsr2h,c
 33168  0196F4  0E00               	movlw	0
 33169  0196F6  6EDF               	movwf	indf2,c
 33170  0196F8  D03D               	goto	l10828
 33171  0196FA                     l10820:
 33172                           
 33173                           ;dio.c: 107:    if (S.button[i].sw == SW_OFF) {
 33174                           ;stkvar	_i @ sp[(-2)+0]
 33175  0196FA  0EFE               	movlw	-2
 33176  0196FC  50E3               	movf	plusw1,w,c
 33177  0196FE  0D05               	mullw	5
 33178  019700  0E54               	movlw	low _S
 33179  019702  24F3               	addwf	243,w,c
 33180  019704  6ED9               	movwf	fsr2l,c
 33181  019706  0E02               	movlw	high _S
 33182  019708  20F4               	addwfc	prodh,w,c
 33183  01970A  6EDA               	movwf	fsr2h,c
 33184  01970C  50DF               	movf	indf2,w,c
 33185  01970E  A4D8               	btfss	status,2,c
 33186  019710  D031               	goto	l10828
 33187                           
 33188                           ;dio.c: 108:     S.button[i].sw = SW_ON;
 33189                           ;stkvar	_i @ sp[(-2)+0]
 33190  019712  0EFE               	movlw	-2
 33191  019714  50E3               	movf	plusw1,w,c
 33192  019716  0D05               	mullw	5
 33193  019718  0E54               	movlw	low _S
 33194  01971A  24F3               	addwf	243,w,c
 33195  01971C  6ED9               	movwf	fsr2l,c
 33196  01971E  0E02               	movlw	high _S
 33197  019720  20F4               	addwfc	prodh,w,c
 33198  019722  6EDA               	movwf	fsr2h,c
 33199  019724  0E01               	movlw	1
 33200  019726  6EDF               	movwf	indf2,c
 33201                           
 33202                           ;dio.c: 109:     S.button[i].count = V.timerint_count;
 33203  019728  EE20  F1C2         	lfsr	2,_V+187	;volatile
 33204                           
 33205                           ;stkvar	_i @ sp[(-2)+0]
 33206  01972C  0EFE               	movlw	-2
 33207  01972E  50E3               	movf	plusw1,w,c
 33208  019730  0D05               	mullw	5
 33209  019732  0E55               	movlw	low (_S+1)
 33210  019734  24F3               	addwf	243,w,c
 33211  019736  6EE9               	movwf	fsr0l,c
 33212  019738  0E02               	movlw	high (_S+1)
 33213  01973A  20F4               	addwfc	prodh,w,c
 33214  01973C  6EEA               	movwf	fsr0h,c
 33215  01973E  006F FF7B FFEE     	movff	postinc2,postinc0
 33216  019744  006F FF7B FFEE     	movff	postinc2,postinc0
 33217  01974A  006F FF7B FFEE     	movff	postinc2,postinc0
 33218  019750  006F FF7B FFEE     	movff	postinc2,postinc0
 33219                           
 33220                           ;dio.c: 110:     S.sw_bitmap |= 1 << i;
 33221                           ;stkvar	_i @ sp[(-2)+0]
 33222  019756  0EFE               	movlw	-2
 33223  019758  006F FF8C  F00C    	movff	plusw1,btemp+11
 33224  01975E  0E01               	movlw	1
 33225  019760  6E0B               	movwf	(btemp+10)^0,c
 33226  019762  2A0C               	incf	(btemp+11)^0,f,c
 33227  019764  D002               	goto	u987_24
 33228  019766                     u987_25:
 33229  019766  90D8               	bcf	status,0,c
 33230  019768  360B               	rlcf	(btemp+10)^0,f,c
 33231  01976A                     u987_24:
 33232  01976A  2E0C               	decfsz	(btemp+11)^0,f,c
 33233  01976C  D7FC               	goto	u987_25
 33234  01976E  500B               	movf	(btemp+10)^0,w,c
 33235  019770  0102               	movlb	2	; () banked
 33236  019772  137C               	iorwf	(_S+40)& (0+255),f,b	;volatile
 33237  019774                     l10828:
 33238                           
 33239                           ;dio.c: 113:  } while (++i < 4);
 33240                           ;stkvar	_i @ sp[(-2)+0]
 33241  019774  0EFE               	movlw	-2
 33242  019776  2AE3               	incf	plusw1,f,c
 33243  019778  0EFE               	movlw	-2
 33244  01977A  006F FF8C  F001    	movff	plusw1,btemp
 33245  019780  0E03               	movlw	3
 33246  019782  6401               	cpfsgt	btemp^0,c
 33247  019784  D785               	goto	l10812
 33248                           
 33249                           ;dio.c: 122:  do { LATFbits.LATF5 = 1; } while(0);
 33250  019786  8ABF               	bsf	191,5,c	;volatile
 33251                           
 33252                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 33253  019788  52E5               	movf	postdec1,f,c
 33254  01978A  52E5               	movf	postdec1,f,c
 33255  01978C  0012               	return		;funcret
 33256  01978E                     __end_of_switch_handler:
 33257                           	opt callstack 0
 33258                           
 33259 ;; *************** function _TMR5_ISR *****************
 33260 ;; Defined at:
 33261 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 33262 ;; Parameters:    Size  Location     Type
 33263 ;;		None
 33264 ;; Auto vars:     Size  Location     Type
 33265 ;;		None
 33266 ;; Return value:  Size  Location     Type
 33267 ;;                  1    wreg      void 
 33268 ;; Registers used:
 33269 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 33270 ;; Tracked objects:
 33271 ;;		On entry : 0/0
 33272 ;;		On exit  : 3F/0
 33273 ;;		Unchanged: 0/0
 33274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33277 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33278 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33279 ;;Total ram usage:       15 bytes
 33280 ;; Hardware stack levels used:    1
 33281 ;; Hardware stack levels required when called:    9
 33282 ;; This function calls:
 33283 ;;		_TMR5_CallBack
 33284 ;;		_TMR5_WriteTimer
 33285 ;; This function is called by:
 33286 ;;		Interrupt level 1
 33287 ;; This function uses a non-reentrant model
 33288 ;;
 33289                           
 33290                           	psect	text147
 33291  01A398                     __ptext147:
 33292                           	opt callstack 0
 33293  01A398                     _TMR5_ISR:
 33294                           	opt callstack 7
 33295                           
 33296                           ;incstack = 0
 33297  01A398  006F FF60  F02D    	movff	status,??_TMR5_ISR+2
 33298  01A39E  0060  F004  F02E   	movff	btemp,??_TMR5_ISR+3
 33299  01A3A4  0060  F008  F02F   	movff	btemp+1,??_TMR5_ISR+4
 33300  01A3AA  0060  F00C  F030   	movff	btemp+2,??_TMR5_ISR+5
 33301  01A3B0  0060  F010  F031   	movff	btemp+3,??_TMR5_ISR+6
 33302  01A3B6  0060  F014  F032   	movff	btemp+4,??_TMR5_ISR+7
 33303  01A3BC  0060  F018  F033   	movff	btemp+5,??_TMR5_ISR+8
 33304  01A3C2  0060  F01C  F034   	movff	btemp+6,??_TMR5_ISR+9
 33305  01A3C8  0060  F020  F035   	movff	btemp+7,??_TMR5_ISR+10
 33306  01A3CE  0060  F024  F036   	movff	btemp+8,??_TMR5_ISR+11
 33307  01A3D4  0060  F028  F037   	movff	btemp+9,??_TMR5_ISR+12
 33308  01A3DA  0060  F02C  F038   	movff	btemp+10,??_TMR5_ISR+13
 33309  01A3E0  0060  F030  F039   	movff	btemp+11,??_TMR5_ISR+14
 33310  01A3E6  EE16  F0AF         	lfsr	1,___intlo_sp
 33311                           
 33312                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 33313  01A3EA  0139               	movlb	57	; () banked
 33314  01A3EC  9DA8               	bcf	168,6,b	;volatile
 33315                           
 33316                           ; BSR set to: 57
 33317                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 33318  01A3EE  0060  F28B  FFE6   	movff	_timer5ReloadVal,postinc1
 33319  01A3F4  0060  F28F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 33320  01A3FA  EC12  F0DE         	call	_TMR5_WriteTimer	;wreg free
 33321                           
 33322                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 33323  01A3FE  0101               	movlb	1	; () banked
 33324  01A400  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
 33325  01A402  6E2B               	movwf	??_TMR5_ISR^0,c
 33326  01A404  6A2C               	clrf	(??_TMR5_ISR+1)^0,c
 33327  01A406  0E05               	movlw	5
 33328  01A408  262B               	addwf	??_TMR5_ISR^0,f,c
 33329  01A40A  0E00               	movlw	0
 33330  01A40C  222C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 33331  01A40E  0100               	movlb	0	; () banked
 33332  01A410  4BA0               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 33333  01A412  2BA1               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 33334  01A414  502B               	movf	??_TMR5_ISR^0,w,c
 33335  01A416  5DA0               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 33336  01A418  502C               	movf	(??_TMR5_ISR+1)^0,w,c
 33337  01A41A  59A1               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 33338  01A41C  A0D8               	btfss	status,0,c
 33339  01A41E  D005               	goto	i1l1019
 33340                           
 33341                           ; BSR set to: 0
 33342                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 33343  01A420  EC84  F0E1         	call	_TMR5_CallBack	;wreg free
 33344                           
 33345                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 33346  01A424  0100               	movlb	0	; () banked
 33347  01A426  6BA0               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 33348  01A428  6BA1               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 33349  01A42A                     i1l1019:
 33350                           
 33351                           ; BSR set to: 0
 33352  01A42A  0060  F0E4  F00C   	movff	??_TMR5_ISR+14,btemp+11
 33353  01A430  0060  F0E0  F00B   	movff	??_TMR5_ISR+13,btemp+10
 33354  01A436  0060  F0DC  F00A   	movff	??_TMR5_ISR+12,btemp+9
 33355  01A43C  0060  F0D8  F009   	movff	??_TMR5_ISR+11,btemp+8
 33356  01A442  0060  F0D4  F008   	movff	??_TMR5_ISR+10,btemp+7
 33357  01A448  0060  F0D0  F007   	movff	??_TMR5_ISR+9,btemp+6
 33358  01A44E  0060  F0CC  F006   	movff	??_TMR5_ISR+8,btemp+5
 33359  01A454  0060  F0C8  F005   	movff	??_TMR5_ISR+7,btemp+4
 33360  01A45A  0060  F0C4  F004   	movff	??_TMR5_ISR+6,btemp+3
 33361  01A460  0060  F0C0  F003   	movff	??_TMR5_ISR+5,btemp+2
 33362  01A466  0060  F0BC  F002   	movff	??_TMR5_ISR+4,btemp+1
 33363  01A46C  0060  F0B8  F001   	movff	??_TMR5_ISR+3,btemp
 33364  01A472  0060  F0B7  FFD8   	movff	??_TMR5_ISR+2,status
 33365  01A478  0011               	retfie		f
 33366  01A47A                     __end_of_TMR5_ISR:
 33367                           	opt callstack 0
 33368                           
 33369 ;; *************** function _TMR5_WriteTimer *****************
 33370 ;; Defined at:
 33371 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 33372 ;; Parameters:    Size  Location     Type
 33373 ;;  timerVal        2  [STACK] unsigned short 
 33374 ;; Auto vars:     Size  Location     Type
 33375 ;;		None
 33376 ;; Return value:  Size  Location     Type
 33377 ;;                  1  [STACK] void 
 33378 ;; Registers used:
 33379 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 33380 ;; Tracked objects:
 33381 ;;		On entry : 3F/39
 33382 ;;		On exit  : 0/0
 33383 ;;		Unchanged: 0/0
 33384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33389 ;;Total ram usage:        0 bytes
 33390 ;; Hardware stack levels used:    1
 33391 ;; Hardware stack levels required when called:    3
 33392 ;; This function calls:
 33393 ;;		Nothing
 33394 ;; This function is called by:
 33395 ;;		_TMR5_ISR
 33396 ;; This function uses a reentrant model
 33397 ;;
 33398                           
 33399                           	psect	text148
 33400  01BC24                     __ptext148:
 33401                           	opt callstack 0
 33402  01BC24                     _TMR5_WriteTimer:
 33403                           	opt callstack 12
 33404                           
 33405                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 33406                           
 33407                           ; BSR set to: 0
 33408                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33409                           ;incstack = 0
 33410  01BC24  A49A               	btfss	154,2,c	;volatile
 33411  01BC26  D00F               	goto	l11038
 33412                           
 33413                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 33414  01BC28  909A               	bcf	154,0,c	;volatile
 33415                           
 33416                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 33417                           ;stkvar	_timerVal @ sp[(0)+-2]
 33418  01BC2A  0EFF               	movlw	255
 33419  01BC2C  24E1               	addwf	fsr1l,w,c
 33420  01BC2E  6ED9               	movwf	fsr2l,c
 33421  01BC30  0EFF               	movlw	255
 33422  01BC32  20E2               	addwfc	fsr1h,w,c
 33423  01BC34  6EDA               	movwf	fsr2h,c
 33424  01BC36  50DF               	movf	indf2,w,c
 33425  01BC38  6E99               	movwf	153,c	;volatile
 33426                           
 33427                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 33428                           ;stkvar	_timerVal @ sp[(0)+-2]
 33429  01BC3A  0EFE               	movlw	-2
 33430  01BC3C  006F FF8F FF98     	movff	plusw1,16280	;volatile
 33431                           
 33432                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 33433  01BC42  809A               	bsf	154,0,c	;volatile
 33434                           
 33435                           ;mcc_generated_files/tmr5.c: 144:  } else {
 33436  01BC44  D00C               	goto	l1002
 33437  01BC46                     l11038:
 33438                           
 33439                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 33440                           ;stkvar	_timerVal @ sp[(0)+-2]
 33441  01BC46  0EFF               	movlw	255
 33442  01BC48  24E1               	addwf	fsr1l,w,c
 33443  01BC4A  6ED9               	movwf	fsr2l,c
 33444  01BC4C  0EFF               	movlw	255
 33445  01BC4E  20E2               	addwfc	fsr1h,w,c
 33446  01BC50  6EDA               	movwf	fsr2h,c
 33447  01BC52  50DF               	movf	indf2,w,c
 33448  01BC54  6E99               	movwf	153,c	;volatile
 33449                           
 33450                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 33451                           ;stkvar	_timerVal @ sp[(0)+-2]
 33452  01BC56  0EFE               	movlw	-2
 33453  01BC58  006F FF8F FF98     	movff	plusw1,16280	;volatile
 33454  01BC5E                     l1002:
 33455                           
 33456                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 33457  01BC5E  52E5               	movf	postdec1,f,c
 33458  01BC60  52E5               	movf	postdec1,f,c
 33459  01BC62  0012               	return		;funcret
 33460  01BC64                     __end_of_TMR5_WriteTimer:
 33461                           	opt callstack 0
 33462                           
 33463 ;; *************** function _TMR5_CallBack *****************
 33464 ;; Defined at:
 33465 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 33466 ;; Parameters:    Size  Location     Type
 33467 ;;		None
 33468 ;; Auto vars:     Size  Location     Type
 33469 ;;		None
 33470 ;; Return value:  Size  Location     Type
 33471 ;;                  1  [STACK] void 
 33472 ;; Registers used:
 33473 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 33474 ;; Tracked objects:
 33475 ;;		On entry : 3F/0
 33476 ;;		On exit  : 0/0
 33477 ;;		Unchanged: 0/0
 33478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33483 ;;Total ram usage:        0 bytes
 33484 ;; Hardware stack levels used:    1
 33485 ;; Hardware stack levels required when called:    8
 33486 ;; This function calls:
 33487 ;;		Absolute function
 33488 ;;		_TMR5_DefaultInterruptHandler
 33489 ;; This function is called by:
 33490 ;;		_TMR5_ISR
 33491 ;; This function uses a reentrant model
 33492 ;;
 33493                           
 33494                           	psect	text149
 33495  01C308                     __ptext149:
 33496                           	opt callstack 0
 33497  01C308                     _TMR5_CallBack:
 33498                           	opt callstack 7
 33499                           
 33500                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 33501                           
 33502                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33503                           ;incstack = 0
 33504  01C308  0100               	movlb	0	; () banked
 33505  01C30A  517F               	movf	_TMR5_InterruptHandler& (0+255),w,b
 33506  01C30C  1180               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 33507  01C30E  1181               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 33508  01C310  B4D8               	btfsc	status,2,c
 33509  01C312  0012               	return	
 33510                           
 33511                           ; BSR set to: 0
 33512                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 33513  01C314  D801               	call	u1026_28
 33514  01C316  0012               	return	
 33515  01C318                     u1026_28:
 33516  01C318  0005               	push	
 33517  01C31A  6EFA               	movwf	pclath,c
 33518  01C31C  517F               	movf	_TMR5_InterruptHandler& (0+255),w,b
 33519  01C31E  6EFD               	movwf	tosl,c
 33520  01C320  5180               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 33521  01C322  6EFE               	movwf	tosh,c
 33522  01C324  5181               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 33523  01C326  6EFF               	movwf	tosu,c
 33524  01C328  50FA               	movf	pclath,w,c
 33525  01C32A  0012               	return		;indir
 33526  01C32C                     __end_of_TMR5_CallBack:
 33527                           	opt callstack 0
 33528                           
 33529 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 33530 ;; Defined at:
 33531 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 33532 ;; Parameters:    Size  Location     Type
 33533 ;;		None
 33534 ;; Auto vars:     Size  Location     Type
 33535 ;;		None
 33536 ;; Return value:  Size  Location     Type
 33537 ;;                  1  [STACK] void 
 33538 ;; Registers used:
 33539 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 33540 ;; Tracked objects:
 33541 ;;		On entry : 3F/0
 33542 ;;		On exit  : 0/0
 33543 ;;		Unchanged: 0/0
 33544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33549 ;;Total ram usage:        0 bytes
 33550 ;; Hardware stack levels used:    1
 33551 ;; Hardware stack levels required when called:    7
 33552 ;; This function calls:
 33553 ;;		_check_day_time
 33554 ;; This function is called by:
 33555 ;;		_TMR5_Initialize
 33556 ;;		_TMR5_CallBack
 33557 ;; This function uses a reentrant model
 33558 ;;
 33559                           
 33560                           	psect	text150
 33561  01BD54                     __ptext150:
 33562                           	opt callstack 0
 33563  01BD54                     _TMR5_DefaultInterruptHandler:
 33564                           	opt callstack 7
 33565                           
 33566                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 33567                           
 33568                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33569                           ;incstack = 0
 33570  01BD54  A0BE               	btfss	190,0,c	;volatile
 33571  01BD56  D002               	goto	u960_20
 33572  01BD58  0E01               	movlw	1
 33573  01BD5A  D001               	goto	u960_26
 33574  01BD5C                     u960_20:
 33575  01BD5C  0E00               	movlw	0
 33576  01BD5E                     u960_26:
 33577  01BD5E  0AFF               	xorlw	255
 33578  01BD60  6E0C               	movwf	(btemp+11)^0,c
 33579  01BD62  50BE               	movf	190,w,c	;volatile
 33580  01BD64  180C               	xorwf	(btemp+11)^0,w,c
 33581  01BD66  0BFE               	andlw	-2
 33582  01BD68  180C               	xorwf	(btemp+11)^0,w,c
 33583  01BD6A  6EBE               	movwf	190,c	;volatile
 33584                           
 33585                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 33586  01BD6C  0E01               	movlw	1
 33587  01BD6E  0101               	movlb	1	; () banked
 33588  01BD70  27C2               	addwf	(_V+187)& (0+255),f,b	;volatile
 33589  01BD72  0E00               	movlw	0
 33590  01BD74  23C3               	addwfc	(_V+188)& (0+255),f,b	;volatile
 33591  01BD76  23C4               	addwfc	(_V+189)& (0+255),f,b	;volatile
 33592  01BD78  23C5               	addwfc	(_V+190)& (0+255),f,b	;volatile
 33593                           
 33594                           ; BSR set to: 1
 33595                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 33596  01BD7A  0E01               	movlw	1
 33597  01BD7C  2788               	addwf	(_V+129)& (0+255),f,b	;volatile
 33598  01BD7E  0E00               	movlw	0
 33599  01BD80  2389               	addwfc	(_V+130)& (0+255),f,b	;volatile
 33600  01BD82  238A               	addwfc	(_V+131)& (0+255),f,b	;volatile
 33601  01BD84  238B               	addwfc	(_V+132)& (0+255),f,b	;volatile
 33602                           
 33603                           ; BSR set to: 1
 33604                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 33605  01BD86  EC45  F0C5         	call	_check_day_time	;wreg free
 33606                           
 33607                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33608  01BD8A  0012               	return		;funcret
 33609  01BD8C                     __end_of_TMR5_DefaultInterruptHandler:
 33610                           	opt callstack 0
 33611                           
 33612 ;; *************** function _check_day_time *****************
 33613 ;; Defined at:
 33614 ;;		line 165 in file "mbmc.c"
 33615 ;; Parameters:    Size  Location     Type
 33616 ;;		None
 33617 ;; Auto vars:     Size  Location     Type
 33618 ;;  light           4  [STACK] float 
 33619 ;; Return value:  Size  Location     Type
 33620 ;;                  1  [STACK] _Bool 
 33621 ;; Registers used:
 33622 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 33623 ;; Tracked objects:
 33624 ;;		On entry : 3F/1
 33625 ;;		On exit  : 0/0
 33626 ;;		Unchanged: 0/0
 33627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33632 ;;Total ram usage:        0 bytes
 33633 ;; Hardware stack levels used:    1
 33634 ;; Hardware stack levels required when called:    6
 33635 ;; This function calls:
 33636 ;;		___flge
 33637 ;;		_conv_raw_result
 33638 ;;		_get_ac_charger_relay
 33639 ;;		_set_ac_charger_relay
 33640 ;; This function is called by:
 33641 ;;		_TMR5_DefaultInterruptHandler
 33642 ;; This function uses a reentrant model
 33643 ;;
 33644                           
 33645                           	psect	text151
 33646  018A8A                     __ptext151:
 33647                           	opt callstack 0
 33648  018A8A                     _check_day_time:
 33649                           	opt callstack 0
 33650                           
 33651                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33652  018A8A  52E6               	movf	postinc1,f,c
 33653  018A8C  52E6               	movf	postinc1,f,c
 33654  018A8E  52E6               	movf	postinc1,f,c
 33655  018A90  52E6               	movf	postinc1,f,c
 33656                           
 33657                           ;mbmc.c: 167:  static uint8_t day_delay = 0;;mbmc.c: 168:  float light;;mbmc.c: 170:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 33658                           
 33659                           ;incstack = 0
 33660  018A92  0E00               	movlw	0
 33661  018A94  6EE6               	movwf	postinc1,c
 33662  018A96  0E0D               	movlw	13
 33663  018A98  6EE6               	movwf	postinc1,c
 33664  018A9A  ECB3  F0A9         	call	_conv_raw_result	;wreg free
 33665                           
 33666                           ;stkvar	_light @ sp[(-4)+0]
 33667  018A9E  0EFC               	movlw	-4
 33668  018AA0  0060  F007  FFE3   	movff	btemp,plusw1
 33669  018AA6  0EFD               	movlw	-3
 33670  018AA8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 33671  018AAE  0EFE               	movlw	-2
 33672  018AB0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 33673  018AB6  0EFF               	movlw	-1
 33674  018AB8  0060  F013  FFE3   	movff	btemp+3,plusw1
 33675                           
 33676                           ;mbmc.c: 172:  if (!day_delay++ && V.system_stable) {
 33677  018ABE  2A41               	incf	check_day_time@day_delay^0,f,c
 33678  018AC0  0441               	decf	check_day_time@day_delay^0,w,c
 33679  018AC2  A4D8               	btfss	status,2,c
 33680  018AC4  D0A9               	goto	l1996
 33681  018AC6  0101               	movlb	1	; () banked
 33682  018AC8  51B5               	movf	(_V+174)& (0+255),w,b	;volatile
 33683  018ACA  B4D8               	btfsc	status,2,c
 33684  018ACC  D0A5               	goto	l1996
 33685                           
 33686                           ; BSR set to: 1
 33687                           ;mbmc.c: 173:   if (C.soc > 3) {
 33688  018ACE  EE21  F3B5         	lfsr	2,_C+182	;volatile
 33689  018AD2  0E01               	movlw	1
 33690  018AD4  50DB               	movf	plusw2,w,c
 33691  018AD6  E104               	bnz	u939_20
 33692  018AD8  0E04               	movlw	4
 33693  018ADA  5CDE               	subwf	postinc2,w,c
 33694  018ADC  A0D8               	btfss	status,0,c
 33695  018ADE  D073               	goto	l10068
 33696  018AE0                     u939_20:
 33697                           
 33698                           ; BSR set to: 1
 33699                           ;mbmc.c: 174:    if (!C.day) {
 33700  018AE0  EE22  F021         	lfsr	2,_C+290	;volatile
 33701  018AE4  50DF               	movf	indf2,w,c
 33702  018AE6  A4D8               	btfss	status,2,c
 33703  018AE8  D035               	goto	l10056
 33704                           
 33705                           ; BSR set to: 1
 33706                           ;mbmc.c: 175:     if (light > 22.0) {
 33707                           ;stkvar	_light @ sp[(-4)+0]
 33708  018AEA  0EFC               	movlw	-4
 33709  018AEC  006F FF8F FFE6     	movff	plusw1,postinc1
 33710  018AF2  006F FF8F FFE6     	movff	plusw1,postinc1
 33711  018AF8  006F FF8F FFE6     	movff	plusw1,postinc1
 33712  018AFE  006F FF8F FFE6     	movff	plusw1,postinc1
 33713  018B04  0E00               	movlw	0
 33714  018B06  6EE6               	movwf	postinc1,c
 33715  018B08  0E00               	movlw	0
 33716  018B0A  6EE6               	movwf	postinc1,c
 33717  018B0C  0EB0               	movlw	176
 33718  018B0E  6EE6               	movwf	postinc1,c
 33719  018B10  0E41               	movlw	65
 33720  018B12  6EE6               	movwf	postinc1,c
 33721  018B14  EC1C  F0C9         	call	___flge	;wreg free
 33722  018B18  B001               	btfsc	btemp& (0+255),0,c
 33723  018B1A  D07E               	goto	l1996
 33724                           
 33725                           ;mbmc.c: 176:      C.day = 1;
 33726  018B1C  0E01               	movlw	1
 33727  018B1E  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 33728                           
 33729                           ;mbmc.c: 177:      C.day_start = V.ticks;
 33730  018B24  EE20  F188         	lfsr	2,_V+129	;volatile
 33731  018B28  006F FF78  F822    	movff	postinc2,_C+291	;volatile
 33732  018B2E  006F FF78  F823    	movff	postinc2,_C+292	;volatile
 33733  018B34  006F FF78  F824    	movff	postinc2,_C+293	;volatile
 33734  018B3A  006F FF74  F825    	movff	postdec2,_C+294	;volatile
 33735                           
 33736                           ;mbmc.c: 178:      if (get_ac_charger_relay()) {
 33737  018B40  ECFF  F0E2         	call	_get_ac_charger_relay	;wreg free
 33738  018B44  5001               	movf	btemp^0,w,c
 33739  018B46  B4D8               	btfsc	status,2,c
 33740  018B48  D06B               	goto	l1992
 33741                           
 33742                           ;mbmc.c: 179:       set_ac_charger_relay(0);
 33743  018B4A  0E00               	movlw	0
 33744  018B4C  6EE6               	movwf	postinc1,c
 33745  018B4E  ECE9  F0E2         	call	_set_ac_charger_relay	;wreg free
 33746  018B52  D066               	goto	l1992
 33747  018B54                     l10056:
 33748                           
 33749                           ; BSR set to: 1
 33750                           ;mbmc.c: 184:     if (light < 12.0) {
 33751  018B54  0E00               	movlw	0
 33752  018B56  6EE6               	movwf	postinc1,c
 33753  018B58  0E00               	movlw	0
 33754  018B5A  6EE6               	movwf	postinc1,c
 33755  018B5C  0E40               	movlw	64
 33756  018B5E  6EE6               	movwf	postinc1,c
 33757  018B60  0E41               	movlw	65
 33758  018B62  6EE6               	movwf	postinc1,c
 33759                           
 33760                           ;stkvar	_light @ sp[(-8)+0]
 33761  018B64  0EF8               	movlw	-8
 33762  018B66  006F FF8F FFE6     	movff	plusw1,postinc1
 33763  018B6C  006F FF8F FFE6     	movff	plusw1,postinc1
 33764  018B72  006F FF8F FFE6     	movff	plusw1,postinc1
 33765  018B78  006F FF8F FFE6     	movff	plusw1,postinc1
 33766  018B7E  EC1C  F0C9         	call	___flge	;wreg free
 33767  018B82  B001               	btfsc	btemp& (0+255),0,c
 33768  018B84  D049               	goto	l1996
 33769                           
 33770                           ;mbmc.c: 185:      C.day = 0;
 33771  018B86  0E00               	movlw	0
 33772  018B88  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 33773                           
 33774                           ;mbmc.c: 186:      C.day_end = V.ticks;
 33775  018B8E  EE20  F188         	lfsr	2,_V+129	;volatile
 33776  018B92  006F FF78  F826    	movff	postinc2,_C+295	;volatile
 33777  018B98  006F FF78  F827    	movff	postinc2,_C+296	;volatile
 33778  018B9E  006F FF78  F828    	movff	postinc2,_C+297	;volatile
 33779  018BA4  006F FF74  F829    	movff	postdec2,_C+298	;volatile
 33780                           
 33781                           ;mbmc.c: 190:      if ((C.soc < 20)) {
 33782  018BAA  EE21  F3B5         	lfsr	2,_C+182	;volatile
 33783  018BAE  0E01               	movlw	1
 33784  018BB0  50DB               	movf	plusw2,w,c
 33785  018BB2  E136               	bnz	l1992
 33786  018BB4  0E14               	movlw	20
 33787  018BB6  5CDE               	subwf	postinc2,w,c
 33788  018BB8  B0D8               	btfsc	status,0,c
 33789  018BBA  D032               	goto	l1992
 33790                           
 33791                           ;mbmc.c: 191:       set_ac_charger_relay(1);
 33792  018BBC  0E01               	movlw	1
 33793  018BBE  6EE6               	movwf	postinc1,c
 33794  018BC0  ECE9  F0E2         	call	_set_ac_charger_relay	;wreg free
 33795  018BC4  D02D               	goto	l1992
 33796  018BC6                     l10068:
 33797                           
 33798                           ; BSR set to: 1
 33799                           ;mbmc.c: 197:    if (C.p_pv < C.p_inverter) {
 33800  018BC6  EE21  F377         	lfsr	2,_C+120	;volatile
 33801  018BCA  006F FF7B FFE6     	movff	postinc2,postinc1
 33802  018BD0  006F FF7B FFE6     	movff	postinc2,postinc1
 33803  018BD6  006F FF7B FFE6     	movff	postinc2,postinc1
 33804  018BDC  006F FF7B FFE6     	movff	postinc2,postinc1
 33805  018BE2  EE21  F37B         	lfsr	2,_C+124	;volatile
 33806  018BE6  006F FF7B FFE6     	movff	postinc2,postinc1
 33807  018BEC  006F FF7B FFE6     	movff	postinc2,postinc1
 33808  018BF2  006F FF7B FFE6     	movff	postinc2,postinc1
 33809  018BF8  006F FF7B FFE6     	movff	postinc2,postinc1
 33810  018BFE  EC1C  F0C9         	call	___flge	;wreg free
 33811  018C02  B001               	btfsc	btemp& (0+255),0,c
 33812  018C04  D009               	goto	l1996
 33813                           
 33814                           ;mbmc.c: 198:     if (!get_ac_charger_relay()) {
 33815  018C06  ECFF  F0E2         	call	_get_ac_charger_relay	;wreg free
 33816  018C0A  5001               	movf	btemp^0,w,c
 33817  018C0C  A4D8               	btfss	status,2,c
 33818  018C0E  D004               	goto	l1996
 33819                           
 33820                           ;mbmc.c: 199:      set_ac_charger_relay(1);
 33821  018C10  0E01               	movlw	1
 33822  018C12  6EE6               	movwf	postinc1,c
 33823  018C14  ECE9  F0E2         	call	_set_ac_charger_relay	;wreg free
 33824  018C18                     l1996:
 33825                           
 33826                           ;mbmc.c: 204:  if (day_delay >= 240)
 33827  018C18  0EEF               	movlw	239
 33828  018C1A  6441               	cpfsgt	check_day_time@day_delay^0,c
 33829  018C1C  D001               	goto	l1992
 33830                           
 33831                           ;mbmc.c: 205:   day_delay = 0;
 33832  018C1E  6A41               	clrf	check_day_time@day_delay^0,c
 33833  018C20                     l1992:
 33834                           
 33835                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 33836  018C20  52E5               	movf	postdec1,f,c
 33837  018C22  52E5               	movf	postdec1,f,c
 33838  018C24  52E5               	movf	postdec1,f,c
 33839  018C26  52E5               	movf	postdec1,f,c
 33840  018C28  0012               	return		;funcret
 33841  018C2A                     __end_of_check_day_time:
 33842                           	opt callstack 0
 33843                           
 33844 ;; *************** function _set_ac_charger_relay *****************
 33845 ;; Defined at:
 33846 ;;		line 135 in file "mbmc.c"
 33847 ;; Parameters:    Size  Location     Type
 33848 ;;  mode            1  [STACK] const _Bool 
 33849 ;; Auto vars:     Size  Location     Type
 33850 ;;		None
 33851 ;; Return value:  Size  Location     Type
 33852 ;;                  1  [STACK] void 
 33853 ;; Registers used:
 33854 ;;		wreg, fsr1l, fsr1h
 33855 ;; Tracked objects:
 33856 ;;		On entry : 0/1
 33857 ;;		On exit  : 0/0
 33858 ;;		Unchanged: 0/0
 33859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33864 ;;Total ram usage:        0 bytes
 33865 ;; Hardware stack levels used:    1
 33866 ;; Hardware stack levels required when called:    3
 33867 ;; This function calls:
 33868 ;;		Nothing
 33869 ;; This function is called by:
 33870 ;;		_check_day_time
 33871 ;; This function uses a reentrant model
 33872 ;;
 33873                           
 33874                           	psect	text152
 33875  01C5D2                     __ptext152:
 33876                           	opt callstack 0
 33877  01C5D2                     _set_ac_charger_relay:
 33878                           	opt callstack 9
 33879                           
 33880                           ;mbmc.c: 135: void set_ac_charger_relay(const _Bool mode);mbmc.c: 136: {;mbmc.c: 137:  L
      +                          ATDbits.LATD6 = mode;
 33881                           ;stkvar	_mode @ sp[(0)+-1]
 33882                           
 33883                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33884                           ;incstack = 0
 33885  01C5D2  0EFF               	movlw	-1
 33886  01C5D4  B0E3               	btfsc	plusw1,0,c
 33887  01C5D6  D002               	bra	u934_25
 33888  01C5D8  9CBD               	bcf	189,6,c	;volatile
 33889  01C5DA  D001               	bra	u934_26
 33890  01C5DC                     u934_25:
 33891  01C5DC  8CBD               	bsf	189,6,c	;volatile
 33892  01C5DE                     u934_26:
 33893                           
 33894                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 33895  01C5DE  52E5               	movf	postdec1,f,c
 33896  01C5E0  0012               	return		;funcret
 33897  01C5E2                     __end_of_set_ac_charger_relay:
 33898                           	opt callstack 0
 33899                           
 33900 ;; *************** function _get_ac_charger_relay *****************
 33901 ;; Defined at:
 33902 ;;		line 140 in file "mbmc.c"
 33903 ;; Parameters:    Size  Location     Type
 33904 ;;		None
 33905 ;; Auto vars:     Size  Location     Type
 33906 ;;		None
 33907 ;; Return value:  Size  Location     Type
 33908 ;;                  1  [STACK] _Bool 
 33909 ;; Registers used:
 33910 ;;		btemp
 33911 ;; Tracked objects:
 33912 ;;		On entry : 0/1
 33913 ;;		On exit  : 0/0
 33914 ;;		Unchanged: 0/0
 33915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33920 ;;Total ram usage:        0 bytes
 33921 ;; Hardware stack levels used:    1
 33922 ;; Hardware stack levels required when called:    3
 33923 ;; This function calls:
 33924 ;;		Nothing
 33925 ;; This function is called by:
 33926 ;;		_check_day_time
 33927 ;;		_calc_bsoc
 33928 ;; This function uses a reentrant model
 33929 ;;
 33930                           
 33931                           	psect	text153
 33932  01C5FE                     __ptext153:
 33933                           	opt callstack 0
 33934  01C5FE                     _get_ac_charger_relay:
 33935                           	opt callstack 10
 33936                           
 33937                           ;mbmc.c: 142:  return LATDbits.LATD6;
 33938                           
 33939                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33940                           ;incstack = 0
 33941  01C5FE  ACBD               	btfss	189,6,c	;volatile
 33942  01C600  D003               	goto	u953_20
 33943  01C602  6A01               	clrf	btemp^0,c
 33944  01C604  2A01               	incf	btemp^0,f,c
 33945  01C606  0012               	return	
 33946  01C608                     u953_20:
 33947  01C608  6A01               	clrf	btemp^0,c
 33948                           
 33949                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 33950  01C60A  0012               	return		;funcret
 33951  01C60C                     __end_of_get_ac_charger_relay:
 33952                           	opt callstack 0
 33953                           
 33954 ;; *************** function _TMR3_ISR *****************
 33955 ;; Defined at:
 33956 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 33957 ;; Parameters:    Size  Location     Type
 33958 ;;		None
 33959 ;; Auto vars:     Size  Location     Type
 33960 ;;		None
 33961 ;; Return value:  Size  Location     Type
 33962 ;;                  1    wreg      void 
 33963 ;; Registers used:
 33964 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 33965 ;; Tracked objects:
 33966 ;;		On entry : 0/0
 33967 ;;		On exit  : 3F/0
 33968 ;;		Unchanged: 0/0
 33969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33972 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33973 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33974 ;;Total ram usage:       25 bytes
 33975 ;; Hardware stack levels used:    1
 33976 ;; Hardware stack levels required when called:   14
 33977 ;; This function calls:
 33978 ;;		_TMR3_CallBack
 33979 ;;		_TMR3_WriteTimer
 33980 ;; This function is called by:
 33981 ;;		Interrupt level 1
 33982 ;; This function uses a non-reentrant model
 33983 ;;
 33984                           
 33985                           	psect	text154
 33986  01939C                     __ptext154:
 33987                           	opt callstack 0
 33988  01939C                     _TMR3_ISR:
 33989                           	opt callstack 2
 33990                           
 33991                           ;incstack = 0
 33992  01939C  006F FF60  F0E5    	movff	status,??_TMR3_ISR
 33993  0193A2  006F FFD8  F0E6    	movff	tblptrl,??_TMR3_ISR+1
 33994  0193A8  006F FFDC  F0E7    	movff	tblptrh,??_TMR3_ISR+2
 33995  0193AE  006F FFE0  F0E8    	movff	tblptru,??_TMR3_ISR+3
 33996  0193B4  006F FFD4  F0E9    	movff	tablat,??_TMR3_ISR+4
 33997  0193BA  0060  F004  F0EA   	movff	btemp,??_TMR3_ISR+5
 33998  0193C0  0060  F008  F0EB   	movff	btemp+1,??_TMR3_ISR+6
 33999  0193C6  0060  F00C  F0EC   	movff	btemp+2,??_TMR3_ISR+7
 34000  0193CC  0060  F010  F0ED   	movff	btemp+3,??_TMR3_ISR+8
 34001  0193D2  0060  F014  F0EE   	movff	btemp+4,??_TMR3_ISR+9
 34002  0193D8  0060  F018  F0EF   	movff	btemp+5,??_TMR3_ISR+10
 34003  0193DE  0060  F01C  F0F0   	movff	btemp+6,??_TMR3_ISR+11
 34004  0193E4  0060  F020  F0F1   	movff	btemp+7,??_TMR3_ISR+12
 34005  0193EA  0060  F024  F0F2   	movff	btemp+8,??_TMR3_ISR+13
 34006  0193F0  0060  F028  F0F3   	movff	btemp+9,??_TMR3_ISR+14
 34007  0193F6  0060  F02C  F0F4   	movff	btemp+10,??_TMR3_ISR+15
 34008  0193FC  0060  F030  F0F5   	movff	btemp+11,??_TMR3_ISR+16
 34009  019402  0060  F044  F0F6   	movff	btemp+16,??_TMR3_ISR+17
 34010  019408  0060  F048  F0F7   	movff	btemp+17,??_TMR3_ISR+18
 34011  01940E  0060  F04C  F0F8   	movff	btemp+18,??_TMR3_ISR+19
 34012  019414  0060  F050  F0F9   	movff	btemp+19,??_TMR3_ISR+20
 34013  01941A  0060  F054  F0FA   	movff	btemp+20,??_TMR3_ISR+21
 34014  019420  0060  F058  F0FB   	movff	btemp+21,??_TMR3_ISR+22
 34015  019426  0060  F05C  F0FC   	movff	btemp+22,??_TMR3_ISR+23
 34016  01942C  0060  F060  F0FD   	movff	btemp+23,??_TMR3_ISR+24
 34017  019432  EE16  F0AF         	lfsr	1,___intlo_sp
 34018                           
 34019                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 34020  019436  0139               	movlb	57	; () banked
 34021  019438  9DA6               	bcf	166,6,b	;volatile
 34022                           
 34023                           ; BSR set to: 57
 34024                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 34025  01943A  0060  F27B  FFE6   	movff	_timer3ReloadVal,postinc1
 34026  019440  0060  F27F  FFE6   	movff	_timer3ReloadVal+1,postinc1
 34027  019446  EC32  F0DE         	call	_TMR3_WriteTimer	;wreg free
 34028                           
 34029                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 34030  01944A  0100               	movlb	0	; () banked
 34031  01944C  4B9C               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 34032  01944E  2B9D               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 34033  019450  519D               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 34034  019452  E104               	bnz	i1u1289_20
 34035  019454  0E28               	movlw	40
 34036  019456  5D9C               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 34037  019458  A0D8               	btfss	status,0,c
 34038  01945A  D005               	goto	i1l1207
 34039  01945C                     i1u1289_20:
 34040                           
 34041                           ; BSR set to: 0
 34042                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 34043  01945C  EC96  F0E1         	call	_TMR3_CallBack	;wreg free
 34044                           
 34045                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 34046  019460  0100               	movlb	0	; () banked
 34047  019462  6B9C               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 34048  019464  6B9D               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 34049  019466                     i1l1207:
 34050                           
 34051                           ; BSR set to: 0
 34052  019466  0060  F3F4  F018   	movff	??_TMR3_ISR+24,btemp+23
 34053  01946C  0060  F3F0  F017   	movff	??_TMR3_ISR+23,btemp+22
 34054  019472  0060  F3EC  F016   	movff	??_TMR3_ISR+22,btemp+21
 34055  019478  0060  F3E8  F015   	movff	??_TMR3_ISR+21,btemp+20
 34056  01947E  0060  F3E4  F014   	movff	??_TMR3_ISR+20,btemp+19
 34057  019484  0060  F3E0  F013   	movff	??_TMR3_ISR+19,btemp+18
 34058  01948A  0060  F3DC  F012   	movff	??_TMR3_ISR+18,btemp+17
 34059  019490  0060  F3D8  F011   	movff	??_TMR3_ISR+17,btemp+16
 34060  019496  0060  F3D4  F00C   	movff	??_TMR3_ISR+16,btemp+11
 34061  01949C  0060  F3D0  F00B   	movff	??_TMR3_ISR+15,btemp+10
 34062  0194A2  0060  F3CC  F00A   	movff	??_TMR3_ISR+14,btemp+9
 34063  0194A8  0060  F3C8  F009   	movff	??_TMR3_ISR+13,btemp+8
 34064  0194AE  0060  F3C4  F008   	movff	??_TMR3_ISR+12,btemp+7
 34065  0194B4  0060  F3C0  F007   	movff	??_TMR3_ISR+11,btemp+6
 34066  0194BA  0060  F3BC  F006   	movff	??_TMR3_ISR+10,btemp+5
 34067  0194C0  0060  F3B8  F005   	movff	??_TMR3_ISR+9,btemp+4
 34068  0194C6  0060  F3B4  F004   	movff	??_TMR3_ISR+8,btemp+3
 34069  0194CC  0060  F3B0  F003   	movff	??_TMR3_ISR+7,btemp+2
 34070  0194D2  0060  F3AC  F002   	movff	??_TMR3_ISR+6,btemp+1
 34071  0194D8  0060  F3A8  F001   	movff	??_TMR3_ISR+5,btemp
 34072  0194DE  0060  F3A7  FFF5   	movff	??_TMR3_ISR+4,tablat
 34073  0194E4  0060  F3A3  FFF8   	movff	??_TMR3_ISR+3,tblptru
 34074  0194EA  0060  F39F  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 34075  0194F0  0060  F39B  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 34076  0194F6  0060  F397  FFD8   	movff	??_TMR3_ISR,status
 34077  0194FC  0011               	retfie		f
 34078  0194FE                     __end_of_TMR3_ISR:
 34079                           	opt callstack 0
 34080                           
 34081 ;; *************** function _TMR3_WriteTimer *****************
 34082 ;; Defined at:
 34083 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 34084 ;; Parameters:    Size  Location     Type
 34085 ;;  timerVal        2  [STACK] unsigned short 
 34086 ;; Auto vars:     Size  Location     Type
 34087 ;;		None
 34088 ;; Return value:  Size  Location     Type
 34089 ;;                  1  [STACK] void 
 34090 ;; Registers used:
 34091 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 34092 ;; Tracked objects:
 34093 ;;		On entry : 3F/39
 34094 ;;		On exit  : 0/0
 34095 ;;		Unchanged: 0/0
 34096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34101 ;;Total ram usage:        0 bytes
 34102 ;; Hardware stack levels used:    1
 34103 ;; Hardware stack levels required when called:    3
 34104 ;; This function calls:
 34105 ;;		Nothing
 34106 ;; This function is called by:
 34107 ;;		_TMR3_ISR
 34108 ;; This function uses a reentrant model
 34109 ;;
 34110                           
 34111                           	psect	text155
 34112  01BC64                     __ptext155:
 34113                           	opt callstack 0
 34114  01BC64                     _TMR3_WriteTimer:
 34115                           	opt callstack 12
 34116                           
 34117                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 34118                           
 34119                           ; BSR set to: 0
 34120                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34121                           ;incstack = 0
 34122  01BC64  A4A6               	btfss	166,2,c	;volatile
 34123  01BC66  D00F               	goto	l11056
 34124                           
 34125                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 34126  01BC68  90A6               	bcf	166,0,c	;volatile
 34127                           
 34128                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 34129                           ;stkvar	_timerVal @ sp[(0)+-2]
 34130  01BC6A  0EFF               	movlw	255
 34131  01BC6C  24E1               	addwf	fsr1l,w,c
 34132  01BC6E  6ED9               	movwf	fsr2l,c
 34133  01BC70  0EFF               	movlw	255
 34134  01BC72  20E2               	addwfc	fsr1h,w,c
 34135  01BC74  6EDA               	movwf	fsr2h,c
 34136  01BC76  50DF               	movf	indf2,w,c
 34137  01BC78  6EA5               	movwf	165,c	;volatile
 34138                           
 34139                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 34140                           ;stkvar	_timerVal @ sp[(0)+-2]
 34141  01BC7A  0EFE               	movlw	-2
 34142  01BC7C  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 34143                           
 34144                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 34145  01BC82  80A6               	bsf	166,0,c	;volatile
 34146                           
 34147                           ;mcc_generated_files/tmr3.c: 141:     }
 34148  01BC84  D00C               	goto	l1190
 34149  01BC86                     l11056:
 34150                           
 34151                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 34152                           ;stkvar	_timerVal @ sp[(0)+-2]
 34153  01BC86  0EFF               	movlw	255
 34154  01BC88  24E1               	addwf	fsr1l,w,c
 34155  01BC8A  6ED9               	movwf	fsr2l,c
 34156  01BC8C  0EFF               	movlw	255
 34157  01BC8E  20E2               	addwfc	fsr1h,w,c
 34158  01BC90  6EDA               	movwf	fsr2h,c
 34159  01BC92  50DF               	movf	indf2,w,c
 34160  01BC94  6EA5               	movwf	165,c	;volatile
 34161                           
 34162                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 34163                           ;stkvar	_timerVal @ sp[(0)+-2]
 34164  01BC96  0EFE               	movlw	-2
 34165  01BC98  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 34166  01BC9E                     l1190:
 34167                           
 34168                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 34169  01BC9E  52E5               	movf	postdec1,f,c
 34170  01BCA0  52E5               	movf	postdec1,f,c
 34171  01BCA2  0012               	return		;funcret
 34172  01BCA4                     __end_of_TMR3_WriteTimer:
 34173                           	opt callstack 0
 34174                           
 34175 ;; *************** function _TMR3_CallBack *****************
 34176 ;; Defined at:
 34177 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 34178 ;; Parameters:    Size  Location     Type
 34179 ;;		None
 34180 ;; Auto vars:     Size  Location     Type
 34181 ;;		None
 34182 ;; Return value:  Size  Location     Type
 34183 ;;                  1  [STACK] void 
 34184 ;; Registers used:
 34185 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 34186 ;; Tracked objects:
 34187 ;;		On entry : 3F/0
 34188 ;;		On exit  : 0/0
 34189 ;;		Unchanged: 0/0
 34190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34195 ;;Total ram usage:        0 bytes
 34196 ;; Hardware stack levels used:    1
 34197 ;; Hardware stack levels required when called:   13
 34198 ;; This function calls:
 34199 ;;		Absolute function
 34200 ;;		_TMR3_DefaultInterruptHandler
 34201 ;;		_calc_bsoc
 34202 ;; This function is called by:
 34203 ;;		_TMR3_ISR
 34204 ;; This function uses a reentrant model
 34205 ;;
 34206                           
 34207                           	psect	text156
 34208  01C32C                     __ptext156:
 34209                           	opt callstack 0
 34210  01C32C                     _TMR3_CallBack:
 34211                           	opt callstack 2
 34212                           
 34213                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 34214                           
 34215                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34216                           ;incstack = 0
 34217  01C32C  0100               	movlb	0	; () banked
 34218  01C32E  517C               	movf	_TMR3_InterruptHandler& (0+255),w,b
 34219  01C330  117D               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 34220  01C332  117E               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 34221  01C334  B4D8               	btfsc	status,2,c
 34222  01C336  0012               	return	
 34223                           
 34224                           ; BSR set to: 0
 34225                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 34226  01C338  D801               	call	u1276_28
 34227  01C33A  0012               	return	
 34228  01C33C                     u1276_28:
 34229  01C33C  0005               	push	
 34230  01C33E  6EFA               	movwf	pclath,c
 34231  01C340  517C               	movf	_TMR3_InterruptHandler& (0+255),w,b
 34232  01C342  6EFD               	movwf	tosl,c
 34233  01C344  517D               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 34234  01C346  6EFE               	movwf	tosh,c
 34235  01C348  517E               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 34236  01C34A  6EFF               	movwf	tosu,c
 34237  01C34C  50FA               	movf	pclath,w,c
 34238  01C34E  0012               	return		;indir
 34239  01C350                     __end_of_TMR3_CallBack:
 34240                           	opt callstack 0
 34241                           
 34242 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 34243 ;; Defined at:
 34244 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 34245 ;; Parameters:    Size  Location     Type
 34246 ;;		None
 34247 ;; Auto vars:     Size  Location     Type
 34248 ;;		None
 34249 ;; Return value:  Size  Location     Type
 34250 ;;                  1  [STACK] void 
 34251 ;; Registers used:
 34252 ;;		None
 34253 ;; Tracked objects:
 34254 ;;		On entry : 3F/0
 34255 ;;		On exit  : 0/0
 34256 ;;		Unchanged: 0/0
 34257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34262 ;;Total ram usage:        0 bytes
 34263 ;; Hardware stack levels used:    1
 34264 ;; Hardware stack levels required when called:    3
 34265 ;; This function calls:
 34266 ;;		Nothing
 34267 ;; This function is called by:
 34268 ;;		_TMR3_Initialize
 34269 ;;		_TMR3_CallBack
 34270 ;; This function uses a reentrant model
 34271 ;;
 34272                           
 34273                           	psect	text157
 34274  01C6AC                     __ptext157:
 34275                           	opt callstack 0
 34276  01C6AC                     _TMR3_DefaultInterruptHandler:
 34277                           	opt callstack 11
 34278                           
 34279                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34280                           
 34281                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34282                           ;incstack = 0
 34283  01C6AC  0012               	return		;funcret
 34284  01C6AE                     __end_of_TMR3_DefaultInterruptHandler:
 34285                           	opt callstack 0
 34286                           
 34287 ;; *************** function _calc_bsoc *****************
 34288 ;; Defined at:
 34289 ;;		line 39 in file "bsoc.c"
 34290 ;; Parameters:    Size  Location     Type
 34291 ;;		None
 34292 ;; Auto vars:     Size  Location     Type
 34293 ;;  adj             4  [STACK] float 
 34294 ;;  log_ptr         2  [STACK] PTR unsigned char 
 34295 ;;		 -> port_data(512), 
 34296 ;; Return value:  Size  Location     Type
 34297 ;;                  1  [STACK] void 
 34298 ;; Registers used:
 34299 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 34300 ;; Tracked objects:
 34301 ;;		On entry : 3F/0
 34302 ;;		On exit  : 5/1
 34303 ;;		Unchanged: 0/0
 34304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34309 ;;Total ram usage:        0 bytes
 34310 ;; Hardware stack levels used:    1
 34311 ;; Hardware stack levels required when called:   12
 34312 ;; This function calls:
 34313 ;;		_StartTimer
 34314 ;;		___asfladd
 34315 ;;		___fldiv
 34316 ;;		___flge
 34317 ;;		___flmul
 34318 ;;		___flneg
 34319 ;;		___fltol
 34320 ;;		_fabsf
 34321 ;;		_get_ac_charger_relay
 34322 ;;		_port_data_dma_ptr
 34323 ;;		_send_port_data_dma
 34324 ;;		_sprintf
 34325 ;;		_strlen
 34326 ;; This function is called by:
 34327 ;;		_init_bsoc
 34328 ;;		_TMR3_CallBack
 34329 ;; This function uses a reentrant model
 34330 ;;
 34331                           
 34332                           	psect	text158
 34333  013398                     __ptext158:
 34334                           	opt callstack 0
 34335  013398                     _calc_bsoc:
 34336                           	opt callstack 0
 34337                           
 34338                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34339  013398  0E06               	movlw	6
 34340  01339A  26E1               	addwf	fsr1l,f,c
 34341  01339C  0E00               	movlw	0
 34342  01339E  22E2               	addwfc	fsr1h,f,c
 34343                           
 34344                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 34345                           
 34346                           ;incstack = 0
 34347  0133A0  0E00               	movlw	0
 34348  0133A2  6E09               	movwf	(btemp+8)^0,c
 34349  0133A4  0E00               	movlw	0
 34350  0133A6  6E0A               	movwf	(btemp+9)^0,c
 34351  0133A8  0E80               	movlw	128
 34352  0133AA  6E0B               	movwf	(btemp+10)^0,c
 34353  0133AC  0E3F               	movlw	63
 34354  0133AE  6E0C               	movwf	(btemp+11)^0,c
 34355                           
 34356                           ;stkvar	_adj @ sp[(-6)+0]
 34357  0133B0  0EFA               	movlw	-6
 34358  0133B2  0060  F027  FFE3   	movff	btemp+8,plusw1
 34359  0133B8  0EFB               	movlw	-5
 34360  0133BA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 34361  0133C0  0EFC               	movlw	-4
 34362  0133C2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 34363  0133C8  0EFD               	movlw	-3
 34364  0133CA  0060  F033  FFE3   	movff	btemp+11,plusw1
 34365  0133D0  82BE               	bsf	190,1,c	;volatile
 34366                           
 34367                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 34368  0133D2  0E00               	movlw	0
 34369  0133D4  6EE6               	movwf	postinc1,c
 34370  0133D6  0E00               	movlw	0
 34371  0133D8  6EE6               	movwf	postinc1,c
 34372  0133DA  0E61               	movlw	97
 34373  0133DC  6EE6               	movwf	postinc1,c
 34374  0133DE  0E45               	movlw	69
 34375  0133E0  6EE6               	movwf	postinc1,c
 34376  0133E2  EE21  F343         	lfsr	2,_C+68	;volatile
 34377  0133E6  006F FF7B FFE6     	movff	postinc2,postinc1
 34378  0133EC  006F FF7B FFE6     	movff	postinc2,postinc1
 34379  0133F2  006F FF7B FFE6     	movff	postinc2,postinc1
 34380  0133F8  006F FF7B FFE6     	movff	postinc2,postinc1
 34381  0133FE  ECF6  F0A6         	call	___fldiv	;wreg free
 34382  013402  0060  F007  FFE6   	movff	btemp,postinc1
 34383  013408  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34384  01340E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34385  013414  0060  F013  FFE6   	movff	btemp+3,postinc1
 34386  01341A  0E8F               	movlw	low (_C+144)
 34387  01341C  6EE6               	movwf	postinc1,c
 34388  01341E  0E07               	movlw	high (_C+144)
 34389  013420  6EE6               	movwf	postinc1,c
 34390  013422  EC11  F0D9         	call	___asfladd	;wreg free
 34391                           
 34392                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 34393  013426  EE21  F38F         	lfsr	2,_C+144	;volatile
 34394  01342A  006F FF7B FFE6     	movff	postinc2,postinc1
 34395  013430  006F FF7B FFE6     	movff	postinc2,postinc1
 34396  013436  006F FF7B FFE6     	movff	postinc2,postinc1
 34397  01343C  006F FF7B FFE6     	movff	postinc2,postinc1
 34398  013442  EE21  F38B         	lfsr	2,_C+140	;volatile
 34399  013446  006F FF7B FFE6     	movff	postinc2,postinc1
 34400  01344C  006F FF7B FFE6     	movff	postinc2,postinc1
 34401  013452  006F FF7B FFE6     	movff	postinc2,postinc1
 34402  013458  006F FF7B FFE6     	movff	postinc2,postinc1
 34403  01345E  EC1C  F0C9         	call	___flge	;wreg free
 34404  013462  B001               	btfsc	btemp& (0+255),0,c
 34405  013464  D00E               	goto	l13172
 34406                           
 34407                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 34408  013466  EE21  F38B         	lfsr	2,_C+140	;volatile
 34409  01346A  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
 34410  013470  006F FF78  F790    	movff	postinc2,_C+145	;volatile
 34411  013476  006F FF78  F791    	movff	postinc2,_C+146	;volatile
 34412  01347C  006F FF74  F792    	movff	postdec2,_C+147	;volatile
 34413  013482                     l13172:
 34414                           
 34415                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 34416  013482  0ECD               	movlw	205
 34417  013484  6EE6               	movwf	postinc1,c
 34418  013486  0ECC               	movlw	204
 34419  013488  6EE6               	movwf	postinc1,c
 34420  01348A  0ECC               	movlw	204
 34421  01348C  6EE6               	movwf	postinc1,c
 34422  01348E  0E3D               	movlw	61
 34423  013490  6EE6               	movwf	postinc1,c
 34424  013492  EE21  F38F         	lfsr	2,_C+144	;volatile
 34425  013496  006F FF7B FFE6     	movff	postinc2,postinc1
 34426  01349C  006F FF7B FFE6     	movff	postinc2,postinc1
 34427  0134A2  006F FF7B FFE6     	movff	postinc2,postinc1
 34428  0134A8  006F FF7B FFE6     	movff	postinc2,postinc1
 34429  0134AE  EC1C  F0C9         	call	___flge	;wreg free
 34430  0134B2  B001               	btfsc	btemp& (0+255),0,c
 34431  0134B4  D010               	goto	l13176
 34432                           
 34433                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 34434  0134B6  0ECD               	movlw	205
 34435  0134B8  006F FFA0  F78F    	movff	wreg,_C+144	;volatile
 34436  0134BE  0ECC               	movlw	204
 34437  0134C0  006F FFA0  F790    	movff	wreg,_C+145	;volatile
 34438  0134C6  0ECC               	movlw	204
 34439  0134C8  006F FFA0  F791    	movff	wreg,_C+146	;volatile
 34440  0134CE  0E3D               	movlw	61
 34441  0134D0  006F FFA0  F792    	movff	wreg,_C+147	;volatile
 34442  0134D6                     l13176:
 34443                           
 34444                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 34445  0134D6  EE21  F343         	lfsr	2,_C+68	;volatile
 34446  0134DA  006F FF7B FFE6     	movff	postinc2,postinc1
 34447  0134E0  006F FF7B FFE6     	movff	postinc2,postinc1
 34448  0134E6  006F FF7B FFE6     	movff	postinc2,postinc1
 34449  0134EC  006F FF7B FFE6     	movff	postinc2,postinc1
 34450  0134F2  0E0A               	movlw	10
 34451  0134F4  6EE6               	movwf	postinc1,c
 34452  0134F6  0ED7               	movlw	215
 34453  0134F8  6EE6               	movwf	postinc1,c
 34454  0134FA  0E23               	movlw	35
 34455  0134FC  6EE6               	movwf	postinc1,c
 34456  0134FE  0E3C               	movlw	60
 34457  013500  6EE6               	movwf	postinc1,c
 34458  013502  EC1C  F0C9         	call	___flge	;wreg free
 34459  013506  B001               	btfsc	btemp& (0+255),0,c
 34460  013508  D01C               	goto	l13180
 34461                           
 34462                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 34463  01350A  0061  FEF4  F009   	movff	_C+190,btemp+8	;volatile
 34464  013510  0061  FEF8  F00A   	movff	_C+191,btemp+9	;volatile
 34465  013516  0061  FEFC  F00B   	movff	_C+192,btemp+10	;volatile
 34466  01351C  0061  FF00  F00C   	movff	_C+193,btemp+11	;volatile
 34467                           
 34468                           ;stkvar	_adj @ sp[(-6)+0]
 34469  013522  0EFA               	movlw	-6
 34470  013524  0060  F027  FFE3   	movff	btemp+8,plusw1
 34471  01352A  0EFB               	movlw	-5
 34472  01352C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 34473  013532  0EFC               	movlw	-4
 34474  013534  0060  F02F  FFE3   	movff	btemp+10,plusw1
 34475  01353A  0EFD               	movlw	-3
 34476  01353C  0060  F033  FFE3   	movff	btemp+11,plusw1
 34477  013542                     l13180:
 34478                           
 34479                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 34480  013542  0E0A               	movlw	10
 34481  013544  6EE6               	movwf	postinc1,c
 34482  013546  0ED7               	movlw	215
 34483  013548  6EE6               	movwf	postinc1,c
 34484  01354A  0E23               	movlw	35
 34485  01354C  6EE6               	movwf	postinc1,c
 34486  01354E  0E3C               	movlw	60
 34487  013550  6EE6               	movwf	postinc1,c
 34488  013552  EE21  F343         	lfsr	2,_C+68	;volatile
 34489  013556  006F FF7B FFE6     	movff	postinc2,postinc1
 34490  01355C  006F FF7B FFE6     	movff	postinc2,postinc1
 34491  013562  006F FF7B FFE6     	movff	postinc2,postinc1
 34492  013568  006F FF7B FFE6     	movff	postinc2,postinc1
 34493  01356E  EC1C  F0C9         	call	___flge	;wreg free
 34494  013572  B001               	btfsc	btemp& (0+255),0,c
 34495  013574  D01C               	goto	l13184
 34496                           
 34497                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 34498  013576  0061  FEE4  F009   	movff	_C+186,btemp+8	;volatile
 34499  01357C  0061  FEE8  F00A   	movff	_C+187,btemp+9	;volatile
 34500  013582  0061  FEEC  F00B   	movff	_C+188,btemp+10	;volatile
 34501  013588  0061  FEF0  F00C   	movff	_C+189,btemp+11	;volatile
 34502                           
 34503                           ;stkvar	_adj @ sp[(-6)+0]
 34504  01358E  0EFA               	movlw	-6
 34505  013590  0060  F027  FFE3   	movff	btemp+8,plusw1
 34506  013596  0EFB               	movlw	-5
 34507  013598  0060  F02B  FFE3   	movff	btemp+9,plusw1
 34508  01359E  0EFC               	movlw	-4
 34509  0135A0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 34510  0135A6  0EFD               	movlw	-3
 34511  0135A8  0060  F033  FFE3   	movff	btemp+11,plusw1
 34512  0135AE                     l13184:
 34513                           
 34514                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 34515  0135AE  0E00               	movlw	0
 34516  0135B0  6EE6               	movwf	postinc1,c
 34517  0135B2  0E00               	movlw	0
 34518  0135B4  6EE6               	movwf	postinc1,c
 34519  0135B6  0E61               	movlw	97
 34520  0135B8  6EE6               	movwf	postinc1,c
 34521  0135BA  0E45               	movlw	69
 34522  0135BC  6EE6               	movwf	postinc1,c
 34523                           
 34524                           ;stkvar	_adj @ sp[(-10)+0]
 34525  0135BE  0EF6               	movlw	-10
 34526  0135C0  006F FF8F FFE6     	movff	plusw1,postinc1
 34527  0135C6  006F FF8F FFE6     	movff	plusw1,postinc1
 34528  0135CC  006F FF8F FFE6     	movff	plusw1,postinc1
 34529  0135D2  006F FF8F FFE6     	movff	plusw1,postinc1
 34530  0135D8  EE21  F343         	lfsr	2,_C+68	;volatile
 34531  0135DC  006F FF7B FFE6     	movff	postinc2,postinc1
 34532  0135E2  006F FF7B FFE6     	movff	postinc2,postinc1
 34533  0135E8  006F FF7B FFE6     	movff	postinc2,postinc1
 34534  0135EE  006F FF7B FFE6     	movff	postinc2,postinc1
 34535  0135F4  EC03  F09F         	call	___flmul	;wreg free
 34536  0135F8  0060  F007  FFE6   	movff	btemp,postinc1
 34537  0135FE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34538  013604  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34539  01360A  0060  F013  FFE6   	movff	btemp+3,postinc1
 34540  013610  ECF6  F0A6         	call	___fldiv	;wreg free
 34541  013614  0060  F007  FFE6   	movff	btemp,postinc1
 34542  01361A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34543  013620  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34544  013626  0060  F013  FFE6   	movff	btemp+3,postinc1
 34545  01362C  0E8F               	movlw	low (_C+144)
 34546  01362E  6EE6               	movwf	postinc1,c
 34547  013630  0E07               	movlw	high (_C+144)
 34548  013632  6EE6               	movwf	postinc1,c
 34549  013634  EC11  F0D9         	call	___asfladd	;wreg free
 34550                           
 34551                           ;bsoc.c: 59:  C.dynamic_ah_adj = C.dynamic_ah;
 34552  013638  EE21  F38F         	lfsr	2,_C+144	;volatile
 34553  01363C  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
 34554  013642  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
 34555  013648  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
 34556  01364E  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
 34557                           
 34558                           ;bsoc.c: 60:  if (C.dynamic_ah_adj > (C.bank_ah))
 34559  013654  EE21  F39B         	lfsr	2,_C+156	;volatile
 34560  013658  006F FF7B FFE6     	movff	postinc2,postinc1
 34561  01365E  006F FF7B FFE6     	movff	postinc2,postinc1
 34562  013664  006F FF7B FFE6     	movff	postinc2,postinc1
 34563  01366A  006F FF7B FFE6     	movff	postinc2,postinc1
 34564  013670  EE21  F38B         	lfsr	2,_C+140	;volatile
 34565  013674  006F FF7B FFE6     	movff	postinc2,postinc1
 34566  01367A  006F FF7B FFE6     	movff	postinc2,postinc1
 34567  013680  006F FF7B FFE6     	movff	postinc2,postinc1
 34568  013686  006F FF7B FFE6     	movff	postinc2,postinc1
 34569  01368C  EC1C  F0C9         	call	___flge	;wreg free
 34570  013690  B001               	btfsc	btemp& (0+255),0,c
 34571  013692  D00E               	goto	l13192
 34572                           
 34573                           ;bsoc.c: 61:   C.dynamic_ah_adj = C.bank_ah;
 34574  013694  EE21  F38B         	lfsr	2,_C+140	;volatile
 34575  013698  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
 34576  01369E  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
 34577  0136A4  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
 34578  0136AA  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
 34579  0136B0                     l13192:
 34580                           
 34581                           ;bsoc.c: 62:  if (C.dynamic_ah_adj < 0.1)
 34582  0136B0  0ECD               	movlw	205
 34583  0136B2  6EE6               	movwf	postinc1,c
 34584  0136B4  0ECC               	movlw	204
 34585  0136B6  6EE6               	movwf	postinc1,c
 34586  0136B8  0ECC               	movlw	204
 34587  0136BA  6EE6               	movwf	postinc1,c
 34588  0136BC  0E3D               	movlw	61
 34589  0136BE  6EE6               	movwf	postinc1,c
 34590  0136C0  EE21  F39B         	lfsr	2,_C+156	;volatile
 34591  0136C4  006F FF7B FFE6     	movff	postinc2,postinc1
 34592  0136CA  006F FF7B FFE6     	movff	postinc2,postinc1
 34593  0136D0  006F FF7B FFE6     	movff	postinc2,postinc1
 34594  0136D6  006F FF7B FFE6     	movff	postinc2,postinc1
 34595  0136DC  EC1C  F0C9         	call	___flge	;wreg free
 34596  0136E0  B001               	btfsc	btemp& (0+255),0,c
 34597  0136E2  D010               	goto	l13196
 34598                           
 34599                           ;bsoc.c: 63:   C.dynamic_ah_adj = 0.1;
 34600  0136E4  0ECD               	movlw	205
 34601  0136E6  006F FFA0  F79B    	movff	wreg,_C+156	;volatile
 34602  0136EC  0ECC               	movlw	204
 34603  0136EE  006F FFA0  F79C    	movff	wreg,_C+157	;volatile
 34604  0136F4  0ECC               	movlw	204
 34605  0136F6  006F FFA0  F79D    	movff	wreg,_C+158	;volatile
 34606  0136FC  0E3D               	movlw	61
 34607  0136FE  006F FFA0  F79E    	movff	wreg,_C+159	;volatile
 34608  013704                     l13196:
 34609                           
 34610                           ;bsoc.c: 66:  C.pv_ah += (C.c_pv / 3600.0);
 34611  013704  0E00               	movlw	0
 34612  013706  6EE6               	movwf	postinc1,c
 34613  013708  0E00               	movlw	0
 34614  01370A  6EE6               	movwf	postinc1,c
 34615  01370C  0E61               	movlw	97
 34616  01370E  6EE6               	movwf	postinc1,c
 34617  013710  0E45               	movlw	69
 34618  013712  6EE6               	movwf	postinc1,c
 34619  013714  EE21  F347         	lfsr	2,_C+72	;volatile
 34620  013718  006F FF7B FFE6     	movff	postinc2,postinc1
 34621  01371E  006F FF7B FFE6     	movff	postinc2,postinc1
 34622  013724  006F FF7B FFE6     	movff	postinc2,postinc1
 34623  01372A  006F FF7B FFE6     	movff	postinc2,postinc1
 34624  013730  ECF6  F0A6         	call	___fldiv	;wreg free
 34625  013734  0060  F007  FFE6   	movff	btemp,postinc1
 34626  01373A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34627  013740  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34628  013746  0060  F013  FFE6   	movff	btemp+3,postinc1
 34629  01374C  0E93               	movlw	low (_C+148)
 34630  01374E  6EE6               	movwf	postinc1,c
 34631  013750  0E07               	movlw	high (_C+148)
 34632  013752  6EE6               	movwf	postinc1,c
 34633  013754  EC11  F0D9         	call	___asfladd	;wreg free
 34634                           
 34635                           ;bsoc.c: 67:  C.pvkw += (C.p_pv / 3600.0);
 34636  013758  0E00               	movlw	0
 34637  01375A  6EE6               	movwf	postinc1,c
 34638  01375C  0E00               	movlw	0
 34639  01375E  6EE6               	movwf	postinc1,c
 34640  013760  0E61               	movlw	97
 34641  013762  6EE6               	movwf	postinc1,c
 34642  013764  0E45               	movlw	69
 34643  013766  6EE6               	movwf	postinc1,c
 34644  013768  EE21  F37B         	lfsr	2,_C+124	;volatile
 34645  01376C  006F FF7B FFE6     	movff	postinc2,postinc1
 34646  013772  006F FF7B FFE6     	movff	postinc2,postinc1
 34647  013778  006F FF7B FFE6     	movff	postinc2,postinc1
 34648  01377E  006F FF7B FFE6     	movff	postinc2,postinc1
 34649  013784  ECF6  F0A6         	call	___fldiv	;wreg free
 34650  013788  0060  F007  FFE6   	movff	btemp,postinc1
 34651  01378E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34652  013794  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34653  01379A  0060  F013  FFE6   	movff	btemp+3,postinc1
 34654  0137A0  0EA7               	movlw	low (_C+168)
 34655  0137A2  6EE6               	movwf	postinc1,c
 34656  0137A4  0E07               	movlw	high (_C+168)
 34657  0137A6  6EE6               	movwf	postinc1,c
 34658  0137A8  EC11  F0D9         	call	___asfladd	;wreg free
 34659                           
 34660                           ;bsoc.c: 68:  C.invkw += (C.p_inverter / 3600.0);
 34661  0137AC  0E00               	movlw	0
 34662  0137AE  6EE6               	movwf	postinc1,c
 34663  0137B0  0E00               	movlw	0
 34664  0137B2  6EE6               	movwf	postinc1,c
 34665  0137B4  0E61               	movlw	97
 34666  0137B6  6EE6               	movwf	postinc1,c
 34667  0137B8  0E45               	movlw	69
 34668  0137BA  6EE6               	movwf	postinc1,c
 34669  0137BC  EE21  F377         	lfsr	2,_C+120	;volatile
 34670  0137C0  006F FF7B FFE6     	movff	postinc2,postinc1
 34671  0137C6  006F FF7B FFE6     	movff	postinc2,postinc1
 34672  0137CC  006F FF7B FFE6     	movff	postinc2,postinc1
 34673  0137D2  006F FF7B FFE6     	movff	postinc2,postinc1
 34674  0137D8  ECF6  F0A6         	call	___fldiv	;wreg free
 34675  0137DC  0060  F007  FFE6   	movff	btemp,postinc1
 34676  0137E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34677  0137E8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34678  0137EE  0060  F013  FFE6   	movff	btemp+3,postinc1
 34679  0137F4  0EAB               	movlw	low (_C+172)
 34680  0137F6  6EE6               	movwf	postinc1,c
 34681  0137F8  0E07               	movlw	high (_C+172)
 34682  0137FA  6EE6               	movwf	postinc1,c
 34683  0137FC  EC11  F0D9         	call	___asfladd	;wreg free
 34684                           
 34685                           ;bsoc.c: 69:  C.loadkw += (C.p_load / 3600.0);
 34686  013800  0E00               	movlw	0
 34687  013802  6EE6               	movwf	postinc1,c
 34688  013804  0E00               	movlw	0
 34689  013806  6EE6               	movwf	postinc1,c
 34690  013808  0E61               	movlw	97
 34691  01380A  6EE6               	movwf	postinc1,c
 34692  01380C  0E45               	movlw	69
 34693  01380E  6EE6               	movwf	postinc1,c
 34694  013810  EE21  F373         	lfsr	2,_C+116	;volatile
 34695  013814  006F FF7B FFE6     	movff	postinc2,postinc1
 34696  01381A  006F FF7B FFE6     	movff	postinc2,postinc1
 34697  013820  006F FF7B FFE6     	movff	postinc2,postinc1
 34698  013826  006F FF7B FFE6     	movff	postinc2,postinc1
 34699  01382C  ECF6  F0A6         	call	___fldiv	;wreg free
 34700  013830  0060  F007  FFE6   	movff	btemp,postinc1
 34701  013836  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34702  01383C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34703  013842  0060  F013  FFE6   	movff	btemp+3,postinc1
 34704  013848  0EAF               	movlw	low (_C+176)
 34705  01384A  6EE6               	movwf	postinc1,c
 34706  01384C  0E07               	movlw	high (_C+176)
 34707  01384E  6EE6               	movwf	postinc1,c
 34708  013850  EC11  F0D9         	call	___asfladd	;wreg free
 34709                           
 34710                           ;bsoc.c: 70:  if (C.p_bat > 0.0)
 34711  013854  EE21  F37F         	lfsr	2,_C+128	;volatile
 34712  013858  006F FF7B FFE6     	movff	postinc2,postinc1
 34713  01385E  006F FF7B FFE6     	movff	postinc2,postinc1
 34714  013864  006F FF7B FFE6     	movff	postinc2,postinc1
 34715  01386A  006F FF7B FFE6     	movff	postinc2,postinc1
 34716  013870  0E00               	movlw	0
 34717  013872  6EE6               	movwf	postinc1,c
 34718  013874  0E00               	movlw	0
 34719  013876  6EE6               	movwf	postinc1,c
 34720  013878  0E00               	movlw	0
 34721  01387A  6EE6               	movwf	postinc1,c
 34722  01387C  0E00               	movlw	0
 34723  01387E  6EE6               	movwf	postinc1,c
 34724  013880  EC1C  F0C9         	call	___flge	;wreg free
 34725  013884  B001               	btfsc	btemp& (0+255),0,c
 34726  013886  D02A               	goto	l13202
 34727                           
 34728                           ;bsoc.c: 71:   C.bkwi += (C.p_bat / 3600.0);
 34729  013888  0E00               	movlw	0
 34730  01388A  6EE6               	movwf	postinc1,c
 34731  01388C  0E00               	movlw	0
 34732  01388E  6EE6               	movwf	postinc1,c
 34733  013890  0E61               	movlw	97
 34734  013892  6EE6               	movwf	postinc1,c
 34735  013894  0E45               	movlw	69
 34736  013896  6EE6               	movwf	postinc1,c
 34737  013898  EE21  F37F         	lfsr	2,_C+128	;volatile
 34738  01389C  006F FF7B FFE6     	movff	postinc2,postinc1
 34739  0138A2  006F FF7B FFE6     	movff	postinc2,postinc1
 34740  0138A8  006F FF7B FFE6     	movff	postinc2,postinc1
 34741  0138AE  006F FF7B FFE6     	movff	postinc2,postinc1
 34742  0138B4  ECF6  F0A6         	call	___fldiv	;wreg free
 34743  0138B8  0060  F007  FFE6   	movff	btemp,postinc1
 34744  0138BE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34745  0138C4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34746  0138CA  0060  F013  FFE6   	movff	btemp+3,postinc1
 34747  0138D0  0E9F               	movlw	low (_C+160)
 34748  0138D2  6EE6               	movwf	postinc1,c
 34749  0138D4  0E07               	movlw	high (_C+160)
 34750  0138D6  6EE6               	movwf	postinc1,c
 34751  0138D8  EC11  F0D9         	call	___asfladd	;wreg free
 34752  0138DC                     l13202:
 34753                           
 34754                           ;bsoc.c: 72:  if (C.p_bat < 0.0)
 34755  0138DC  EE21  F37F         	lfsr	2,_C+128	;volatile
 34756  0138E0  0E03               	movlw	3
 34757  0138E2  AEDB               	btfss	plusw2,7,c
 34758  0138E4  D038               	goto	l13206
 34759                           
 34760                           ;bsoc.c: 73:   C.bkwo += fabsf(C.p_bat / 3600.0);
 34761  0138E6  0E00               	movlw	0
 34762  0138E8  6EE6               	movwf	postinc1,c
 34763  0138EA  0E00               	movlw	0
 34764  0138EC  6EE6               	movwf	postinc1,c
 34765  0138EE  0E61               	movlw	97
 34766  0138F0  6EE6               	movwf	postinc1,c
 34767  0138F2  0E45               	movlw	69
 34768  0138F4  6EE6               	movwf	postinc1,c
 34769  0138F6  EE21  F37F         	lfsr	2,_C+128	;volatile
 34770  0138FA  006F FF7B FFE6     	movff	postinc2,postinc1
 34771  013900  006F FF7B FFE6     	movff	postinc2,postinc1
 34772  013906  006F FF7B FFE6     	movff	postinc2,postinc1
 34773  01390C  006F FF7B FFE6     	movff	postinc2,postinc1
 34774  013912  ECF6  F0A6         	call	___fldiv	;wreg free
 34775  013916  0060  F007  FFE6   	movff	btemp,postinc1
 34776  01391C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34777  013922  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34778  013928  0060  F013  FFE6   	movff	btemp+3,postinc1
 34779  01392E  ECF5  F0D4         	call	_fabsf	;wreg free
 34780  013932  0060  F007  FFE6   	movff	btemp,postinc1
 34781  013938  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34782  01393E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34783  013944  0060  F013  FFE6   	movff	btemp+3,postinc1
 34784  01394A  0EA3               	movlw	low (_C+164)
 34785  01394C  6EE6               	movwf	postinc1,c
 34786  01394E  0E07               	movlw	high (_C+164)
 34787  013950  6EE6               	movwf	postinc1,c
 34788  013952  EC11  F0D9         	call	___asfladd	;wreg free
 34789  013956                     l13206:
 34790                           
 34791                           ;bsoc.c: 75:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 34792  013956  0E00               	movlw	0
 34793  013958  6EE6               	movwf	postinc1,c
 34794  01395A  0E00               	movlw	0
 34795  01395C  6EE6               	movwf	postinc1,c
 34796  01395E  0EC8               	movlw	200
 34797  013960  6EE6               	movwf	postinc1,c
 34798  013962  0E42               	movlw	66
 34799  013964  6EE6               	movwf	postinc1,c
 34800  013966  EE21  F38B         	lfsr	2,_C+140	;volatile
 34801  01396A  006F FF7B FFE6     	movff	postinc2,postinc1
 34802  013970  006F FF7B FFE6     	movff	postinc2,postinc1
 34803  013976  006F FF7B FFE6     	movff	postinc2,postinc1
 34804  01397C  006F FF7B FFE6     	movff	postinc2,postinc1
 34805  013982  EE21  F39B         	lfsr	2,_C+156	;volatile
 34806  013986  006F FF7B FFE6     	movff	postinc2,postinc1
 34807  01398C  006F FF7B FFE6     	movff	postinc2,postinc1
 34808  013992  006F FF7B FFE6     	movff	postinc2,postinc1
 34809  013998  006F FF7B FFE6     	movff	postinc2,postinc1
 34810  01399E  ECF6  F0A6         	call	___fldiv	;wreg free
 34811  0139A2  0060  F007  FFE6   	movff	btemp,postinc1
 34812  0139A8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34813  0139AE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34814  0139B4  0060  F013  FFE6   	movff	btemp+3,postinc1
 34815  0139BA  EC03  F09F         	call	___flmul	;wreg free
 34816  0139BE  0060  F007  FFE6   	movff	btemp,postinc1
 34817  0139C4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34818  0139CA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34819  0139D0  0060  F013  FFE6   	movff	btemp+3,postinc1
 34820  0139D6  EC63  F0C8         	call	___fltol	;wreg free
 34821  0139DA  0060  F004  F00B   	movff	btemp,btemp+10
 34822  0139E0  0060  F008  F00C   	movff	btemp+1,btemp+11
 34823  0139E6  0E01               	movlw	1
 34824  0139E8  260B               	addwf	(btemp+10)^0,f,c
 34825  0139EA  0E00               	movlw	0
 34826  0139EC  220C               	addwfc	(btemp+11)^0,f,c
 34827  0139EE  0060  F02C  F7B5   	movff	btemp+10,_C+182	;volatile
 34828  0139F4  0060  F030  F7B6   	movff	btemp+11,_C+183	;volatile
 34829                           
 34830                           ;bsoc.c: 76:  if (C.soc > 100)
 34831  0139FA  EE21  F3B5         	lfsr	2,_C+182	;volatile
 34832  0139FE  0E01               	movlw	1
 34833  013A00  50DB               	movf	plusw2,w,c
 34834  013A02  E104               	bnz	u1269_20
 34835  013A04  0E65               	movlw	101
 34836  013A06  5CDE               	subwf	postinc2,w,c
 34837  013A08  A0D8               	btfss	status,0,c
 34838  013A0A  D008               	goto	l13212
 34839  013A0C                     u1269_20:
 34840                           
 34841                           ;bsoc.c: 77:   C.soc = 100;
 34842  013A0C  0E64               	movlw	100
 34843  013A0E  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
 34844  013A14  0E00               	movlw	0
 34845  013A16  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
 34846  013A1C                     l13212:
 34847                           
 34848                           ;bsoc.c: 79:  if (C.c_bat < 0.0) {
 34849  013A1C  EE21  F343         	lfsr	2,_C+68	;volatile
 34850  013A20  0E03               	movlw	3
 34851  013A22  AEDB               	btfss	plusw2,7,c
 34852  013A24  D047               	goto	l2141
 34853                           
 34854                           ;bsoc.c: 80:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 34855  013A26  EE21  F343         	lfsr	2,_C+68	;volatile
 34856  013A2A  006F FF7B FFE6     	movff	postinc2,postinc1
 34857  013A30  006F FF7B FFE6     	movff	postinc2,postinc1
 34858  013A36  006F FF7B FFE6     	movff	postinc2,postinc1
 34859  013A3C  006F FF7B FFE6     	movff	postinc2,postinc1
 34860  013A42  EE21  F39B         	lfsr	2,_C+156	;volatile
 34861  013A46  006F FF7B FFE6     	movff	postinc2,postinc1
 34862  013A4C  006F FF7B FFE6     	movff	postinc2,postinc1
 34863  013A52  006F FF7B FFE6     	movff	postinc2,postinc1
 34864  013A58  006F FF7B FFE6     	movff	postinc2,postinc1
 34865  013A5E  ECF6  F0A6         	call	___fldiv	;wreg free
 34866  013A62  0060  F007  FFE6   	movff	btemp,postinc1
 34867  013A68  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34868  013A6E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34869  013A74  0060  F013  FFE6   	movff	btemp+3,postinc1
 34870  013A7A  EC99  F0DC         	call	___flneg	;wreg free
 34871  013A7E  0060  F007  FFE6   	movff	btemp,postinc1
 34872  013A84  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34873  013A8A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 34874  013A90  0060  F013  FFE6   	movff	btemp+3,postinc1
 34875  013A96  EC63  F0C8         	call	___fltol	;wreg free
 34876  013A9A  0060  F004  F00B   	movff	btemp,btemp+10
 34877  013AA0  0060  F008  F00C   	movff	btemp+1,btemp+11
 34878  013AA6  0060  F02C  F7B3   	movff	btemp+10,_C+180	;volatile
 34879  013AAC  0060  F030  F7B4   	movff	btemp+11,_C+181	;volatile
 34880                           
 34881                           ;bsoc.c: 81:  } else {
 34882  013AB2  D008               	goto	l13216
 34883  013AB4                     l2141:
 34884                           
 34885                           ;bsoc.c: 82:   C.runtime = 99;
 34886  013AB4  0E63               	movlw	99
 34887  013AB6  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 34888  013ABC  0E00               	movlw	0
 34889  013ABE  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 34890  013AC4                     l13216:
 34891                           
 34892                           ;bsoc.c: 84:  if (C.runtime > 99)
 34893  013AC4  EE21  F3B3         	lfsr	2,_C+180	;volatile
 34894  013AC8  0E01               	movlw	1
 34895  013ACA  50DB               	movf	plusw2,w,c
 34896  013ACC  E104               	bnz	u1271_20
 34897  013ACE  0E64               	movlw	100
 34898  013AD0  5CDE               	subwf	postinc2,w,c
 34899  013AD2  A0D8               	btfss	status,0,c
 34900  013AD4  D008               	goto	l13220
 34901  013AD6                     u1271_20:
 34902                           
 34903                           ;bsoc.c: 85:   C.runtime = 99;
 34904  013AD6  0E63               	movlw	99
 34905  013AD8  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 34906  013ADE  0E00               	movlw	0
 34907  013AE0  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 34908  013AE6                     l13220:
 34909                           
 34910                           ;bsoc.c: 87:  V.lowint_count++;
 34911  013AE6  0E01               	movlw	1
 34912  013AE8  0101               	movlb	1	; () banked
 34913  013AEA  27BA               	addwf	(_V+179)& (0+255),f,b	;volatile
 34914  013AEC  0E00               	movlw	0
 34915  013AEE  23BB               	addwfc	(_V+180)& (0+255),f,b	;volatile
 34916  013AF0  23BC               	addwfc	(_V+181)& (0+255),f,b	;volatile
 34917  013AF2  23BD               	addwfc	(_V+182)& (0+255),f,b	;volatile
 34918                           
 34919                           ;bsoc.c: 89:  if (!log_update_wait++ && V.system_stable) {
 34920  013AF4  2A40               	incf	calc_bsoc@log_update_wait^0,f,c
 34921  013AF6  0440               	decf	calc_bsoc@log_update_wait^0,w,c
 34922  013AF8  A4D8               	btfss	status,2,c
 34923  013AFA  D177               	goto	l13232
 34924                           
 34925                           ; BSR set to: 1
 34926  013AFC  51B5               	movf	(_V+174)& (0+255),w,b	;volatile
 34927  013AFE  B4D8               	btfsc	status,2,c
 34928  013B00  D174               	goto	l13232
 34929                           
 34930                           ; BSR set to: 1
 34931                           ;bsoc.c: 90:   log_ptr = port_data_dma_ptr();
 34932  013B02  EC1A  F0E3         	call	_port_data_dma_ptr	;wreg free
 34933                           
 34934                           ;stkvar	_log_ptr @ sp[(-6)+4]
 34935  013B06  0EFF               	movlw	-1
 34936  013B08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 34937  013B0E  0EFE               	movlw	-2
 34938  013B10  0060  F007  FFE3   	movff	btemp,plusw1
 34939                           
 34940                           ;bsoc.c: 91:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 34941  013B16  EE21  F3B9         	lfsr	2,_C+186	;volatile
 34942  013B1A  006F FF7B FFE6     	movff	postinc2,postinc1
 34943  013B20  006F FF7B FFE6     	movff	postinc2,postinc1
 34944  013B26  006F FF7B FFE6     	movff	postinc2,postinc1
 34945  013B2C  006F FF7B FFE6     	movff	postinc2,postinc1
 34946  013B32  EE21  F3BD         	lfsr	2,_C+190	;volatile
 34947  013B36  006F FF7B FFE6     	movff	postinc2,postinc1
 34948  013B3C  006F FF7B FFE6     	movff	postinc2,postinc1
 34949  013B42  006F FF7B FFE6     	movff	postinc2,postinc1
 34950  013B48  006F FF7B FFE6     	movff	postinc2,postinc1
 34951  013B4E  EE21  F39B         	lfsr	2,_C+156	;volatile
 34952  013B52  006F FF7B FFE6     	movff	postinc2,postinc1
 34953  013B58  006F FF7B FFE6     	movff	postinc2,postinc1
 34954  013B5E  006F FF7B FFE6     	movff	postinc2,postinc1
 34955  013B64  006F FF7B FFE6     	movff	postinc2,postinc1
 34956  013B6A  EE22  F026         	lfsr	2,_C+295	;volatile
 34957  013B6E  006F FF7B FFE6     	movff	postinc2,postinc1
 34958  013B74  006F FF7B FFE6     	movff	postinc2,postinc1
 34959  013B7A  006F FF7B FFE6     	movff	postinc2,postinc1
 34960  013B80  006F FF7B FFE6     	movff	postinc2,postinc1
 34961  013B86  EE22  F022         	lfsr	2,_C+291	;volatile
 34962  013B8A  006F FF7B FFE6     	movff	postinc2,postinc1
 34963  013B90  006F FF7B FFE6     	movff	postinc2,postinc1
 34964  013B96  006F FF7B FFE6     	movff	postinc2,postinc1
 34965  013B9C  006F FF7B FFE6     	movff	postinc2,postinc1
 34966  013BA2  EE22  F021         	lfsr	2,_C+290	;volatile
 34967  013BA6  50DF               	movf	indf2,w,c
 34968  013BA8  6EE6               	movwf	postinc1,c
 34969  013BAA  0E00               	movlw	0
 34970  013BAC  6EE6               	movwf	postinc1,c
 34971  013BAE  ECFF  F0E2         	call	_get_ac_charger_relay	;wreg free
 34972  013BB2  5001               	movf	btemp^0,w,c
 34973  013BB4  6EE6               	movwf	postinc1,c
 34974  013BB6  0E00               	movlw	0
 34975  013BB8  6EE6               	movwf	postinc1,c
 34976  013BBA  EE21  F367         	lfsr	2,_C+104	;volatile
 34977  013BBE  006F FF7B FFE6     	movff	postinc2,postinc1
 34978  013BC4  006F FF7B FFE6     	movff	postinc2,postinc1
 34979  013BCA  006F FF7B FFE6     	movff	postinc2,postinc1
 34980  013BD0  006F FF7B FFE6     	movff	postinc2,postinc1
 34981  013BD6  EE21  F387         	lfsr	2,_C+136	;volatile
 34982  013BDA  006F FF7B FFE6     	movff	postinc2,postinc1
 34983  013BE0  006F FF7B FFE6     	movff	postinc2,postinc1
 34984  013BE6  006F FF7B FFE6     	movff	postinc2,postinc1
 34985  013BEC  006F FF7B FFE6     	movff	postinc2,postinc1
 34986  013BF2  EE21  F3B3         	lfsr	2,_C+180	;volatile
 34987  013BF6  006F FF78  F00B    	movff	postinc2,btemp+10
 34988  013BFC  006F FF74  F00C    	movff	postdec2,btemp+11
 34989  013C02  0060  F02F  FFE6   	movff	btemp+10,postinc1
 34990  013C08  0060  F033  FFE6   	movff	btemp+11,postinc1
 34991  013C0E  EE21  F3B5         	lfsr	2,_C+182	;volatile
 34992  013C12  006F FF78  F00B    	movff	postinc2,btemp+10
 34993  013C18  006F FF74  F00C    	movff	postdec2,btemp+11
 34994  013C1E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 34995  013C24  0060  F033  FFE6   	movff	btemp+11,postinc1
 34996  013C2A  EE21  F393         	lfsr	2,_C+148	;volatile
 34997  013C2E  006F FF7B FFE6     	movff	postinc2,postinc1
 34998  013C34  006F FF7B FFE6     	movff	postinc2,postinc1
 34999  013C3A  006F FF7B FFE6     	movff	postinc2,postinc1
 35000  013C40  006F FF7B FFE6     	movff	postinc2,postinc1
 35001  013C46  EE21  F38F         	lfsr	2,_C+144	;volatile
 35002  013C4A  006F FF7B FFE6     	movff	postinc2,postinc1
 35003  013C50  006F FF7B FFE6     	movff	postinc2,postinc1
 35004  013C56  006F FF7B FFE6     	movff	postinc2,postinc1
 35005  013C5C  006F FF7B FFE6     	movff	postinc2,postinc1
 35006  013C62  EE21  F377         	lfsr	2,_C+120	;volatile
 35007  013C66  006F FF7B FFE6     	movff	postinc2,postinc1
 35008  013C6C  006F FF7B FFE6     	movff	postinc2,postinc1
 35009  013C72  006F FF7B FFE6     	movff	postinc2,postinc1
 35010  013C78  006F FF7B FFE6     	movff	postinc2,postinc1
 35011  013C7E  EE21  F373         	lfsr	2,_C+116	;volatile
 35012  013C82  006F FF7B FFE6     	movff	postinc2,postinc1
 35013  013C88  006F FF7B FFE6     	movff	postinc2,postinc1
 35014  013C8E  006F FF7B FFE6     	movff	postinc2,postinc1
 35015  013C94  006F FF7B FFE6     	movff	postinc2,postinc1
 35016  013C9A  EE21  F37B         	lfsr	2,_C+124	;volatile
 35017  013C9E  006F FF7B FFE6     	movff	postinc2,postinc1
 35018  013CA4  006F FF7B FFE6     	movff	postinc2,postinc1
 35019  013CAA  006F FF7B FFE6     	movff	postinc2,postinc1
 35020  013CB0  006F FF7B FFE6     	movff	postinc2,postinc1
 35021  013CB6  EE21  F37F         	lfsr	2,_C+128	;volatile
 35022  013CBA  006F FF7B FFE6     	movff	postinc2,postinc1
 35023  013CC0  006F FF7B FFE6     	movff	postinc2,postinc1
 35024  013CC6  006F FF7B FFE6     	movff	postinc2,postinc1
 35025  013CCC  006F FF7B FFE6     	movff	postinc2,postinc1
 35026  013CD2  EE21  F347         	lfsr	2,_C+72	;volatile
 35027  013CD6  006F FF7B FFE6     	movff	postinc2,postinc1
 35028  013CDC  006F FF7B FFE6     	movff	postinc2,postinc1
 35029  013CE2  006F FF7B FFE6     	movff	postinc2,postinc1
 35030  013CE8  006F FF7B FFE6     	movff	postinc2,postinc1
 35031  013CEE  EE21  F343         	lfsr	2,_C+68	;volatile
 35032  013CF2  006F FF7B FFE6     	movff	postinc2,postinc1
 35033  013CF8  006F FF7B FFE6     	movff	postinc2,postinc1
 35034  013CFE  006F FF7B FFE6     	movff	postinc2,postinc1
 35035  013D04  006F FF7B FFE6     	movff	postinc2,postinc1
 35036  013D0A  EE21  F363         	lfsr	2,_C+100	;volatile
 35037  013D0E  006F FF7B FFE6     	movff	postinc2,postinc1
 35038  013D14  006F FF7B FFE6     	movff	postinc2,postinc1
 35039  013D1A  006F FF7B FFE6     	movff	postinc2,postinc1
 35040  013D20  006F FF7B FFE6     	movff	postinc2,postinc1
 35041  013D26  EE21  F34B         	lfsr	2,_C+76	;volatile
 35042  013D2A  006F FF7B FFE6     	movff	postinc2,postinc1
 35043  013D30  006F FF7B FFE6     	movff	postinc2,postinc1
 35044  013D36  006F FF7B FFE6     	movff	postinc2,postinc1
 35045  013D3C  006F FF7B FFE6     	movff	postinc2,postinc1
 35046  013D42  EE21  F34F         	lfsr	2,_C+80	;volatile
 35047  013D46  006F FF7B FFE6     	movff	postinc2,postinc1
 35048  013D4C  006F FF7B FFE6     	movff	postinc2,postinc1
 35049  013D52  006F FF7B FFE6     	movff	postinc2,postinc1
 35050  013D58  006F FF7B FFE6     	movff	postinc2,postinc1
 35051  013D5E  EE21  F353         	lfsr	2,_C+84	;volatile
 35052  013D62  006F FF7B FFE6     	movff	postinc2,postinc1
 35053  013D68  006F FF7B FFE6     	movff	postinc2,postinc1
 35054  013D6E  006F FF7B FFE6     	movff	postinc2,postinc1
 35055  013D74  006F FF7B FFE6     	movff	postinc2,postinc1
 35056  013D7A  0060  F623  FFE6   	movff	_V+129,postinc1
 35057  013D80  0060  F627  FFE6   	movff	_V+130,postinc1
 35058  013D86  0060  F62B  FFE6   	movff	_V+131,postinc1
 35059  013D8C  0060  F62F  FFE6   	movff	_V+132,postinc1
 35060  013D92  0E32               	movlw	50
 35061  013D94  6EE6               	movwf	postinc1,c
 35062  013D96  0E00               	movlw	0
 35063  013D98  6EE6               	movwf	postinc1,c
 35064  013D9A  0ECB               	movlw	low STR_64
 35065  013D9C  6EE6               	movwf	postinc1,c
 35066  013D9E  0EFB               	movlw	high STR_64
 35067  013DA0  6EE6               	movwf	postinc1,c
 35068                           
 35069                           ;stkvar	_log_ptr @ sp[(-98)+4]
 35070  013DA2  0EA2               	movlw	-94
 35071  013DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 35072  013DAA  006F FF8F FFE6     	movff	plusw1,postinc1
 35073  013DB0  0E5E               	movlw	94
 35074  013DB2  6EE6               	movwf	postinc1,c
 35075  013DB4  EC56  F0D0         	call	_sprintf	;wreg free
 35076                           
 35077                           ; BSR set to: 0
 35078                           ;bsoc.c: 98:   StartTimer(TMR_DISPLAY, 125);
 35079  013DB8  0E7D               	movlw	125
 35080  013DBA  6EE6               	movwf	postinc1,c
 35081  013DBC  0E00               	movlw	0
 35082  013DBE  6EE6               	movwf	postinc1,c
 35083  013DC0  0E0A               	movlw	10
 35084  013DC2  6EE6               	movwf	postinc1,c
 35085  013DC4  ECF2  F0DD         	call	_StartTimer	;wreg free
 35086                           
 35087                           ;bsoc.c: 99:   send_port_data_dma(strlen((char*) log_ptr));
 35088                           ;stkvar	_log_ptr @ sp[(-6)+4]
 35089  013DC8  0EFE               	movlw	-2
 35090  013DCA  006F FF8F FFE6     	movff	plusw1,postinc1
 35091  013DD0  006F FF8F FFE6     	movff	plusw1,postinc1
 35092  013DD6  EC9E  F0D6         	call	_strlen	;wreg free
 35093  013DDA  0060  F007  FFE6   	movff	btemp,postinc1
 35094  013DE0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 35095  013DE6  ECFF  F0DB         	call	_send_port_data_dma	;wreg free
 35096  013DEA                     l13232:
 35097                           
 35098                           ;bsoc.c: 101:  if (log_update_wait >= 10)
 35099  013DEA  0E09               	movlw	9
 35100  013DEC  6440               	cpfsgt	calc_bsoc@log_update_wait^0,c
 35101  013DEE  D001               	goto	l2145
 35102                           
 35103                           ;bsoc.c: 102:   log_update_wait = 0;
 35104  013DF0  6A40               	clrf	calc_bsoc@log_update_wait^0,c
 35105  013DF2                     l2145:
 35106                           
 35107                           ;bsoc.c: 104:  C.update = 0;
 35108  013DF2  0E00               	movlw	0
 35109  013DF4  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 35110                           
 35111                           ;bsoc.c: 106:  do { LATEbits.LATE1 = 0; } while(0);
 35112  013DFA  92BE               	bcf	190,1,c	;volatile
 35113                           
 35114                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 35115  013DFC  0EFA               	movlw	250
 35116  013DFE  26E1               	addwf	fsr1l,f,c
 35117  013E00  0EFF               	movlw	255
 35118  013E02  22E2               	addwfc	fsr1h,f,c
 35119  013E04  0012               	return		;funcret
 35120  013E06                     __end_of_calc_bsoc:
 35121                           	opt callstack 0
 35122                           
 35123 ;; *************** function _send_port_data_dma *****************
 35124 ;; Defined at:
 35125 ;;		line 398 in file "eadog.c"
 35126 ;; Parameters:    Size  Location     Type
 35127 ;;  dsize           2  [STACK] unsigned short 
 35128 ;; Auto vars:     Size  Location     Type
 35129 ;;		None
 35130 ;; Return value:  Size  Location     Type
 35131 ;;                  1  [STACK] void 
 35132 ;; Registers used:
 35133 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 35134 ;; Tracked objects:
 35135 ;;		On entry : 0/0
 35136 ;;		On exit  : 3F/3B
 35137 ;;		Unchanged: 0/0
 35138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35143 ;;Total ram usage:        0 bytes
 35144 ;; Hardware stack levels used:    1
 35145 ;; Hardware stack levels required when called:    3
 35146 ;; This function calls:
 35147 ;;		Nothing
 35148 ;; This function is called by:
 35149 ;;		_calc_bsoc
 35150 ;; This function uses a reentrant model
 35151 ;;
 35152                           
 35153                           	psect	text159
 35154  01B7FE                     __ptext159:
 35155                           	opt callstack 0
 35156  01B7FE                     _send_port_data_dma:
 35157                           	opt callstack 10
 35158                           
 35159                           ;eadog.c: 398: void send_port_data_dma(uint16_t dsize);eadog.c: 399: {;eadog.c: 400:  if
      +                           (dsize > 512)
 35160                           ;stkvar	_dsize @ sp[(0)+-2]
 35161                           
 35162                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35163                           ;incstack = 0
 35164  01B7FE  0EFE               	movlw	-2
 35165  01B800  04E3               	decf	plusw1,w,c
 35166  01B802  0EFF               	movlw	-1
 35167  01B804  006F FF8C  F001    	movff	plusw1,btemp
 35168  01B80A  0E02               	movlw	2
 35169  01B80C  5A01               	subwfb	btemp^0,f,c
 35170  01B80E  A0D8               	btfss	status,0,c
 35171  01B810  D00C               	goto	l10178
 35172                           
 35173                           ;eadog.c: 401:   dsize = 512;
 35174  01B812  0E00               	movlw	0
 35175  01B814  6E0B               	movwf	(btemp+10)^0,c
 35176  01B816  0E02               	movlw	2
 35177  01B818  6E0C               	movwf	(btemp+11)^0,c
 35178                           
 35179                           ;stkvar	_dsize @ sp[(0)+-2]
 35180  01B81A  0EFE               	movlw	-2
 35181  01B81C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 35182  01B822  0EFF               	movlw	-1
 35183  01B824  0060  F033  FFE3   	movff	btemp+11,plusw1
 35184  01B82A                     l10178:
 35185                           
 35186                           ;eadog.c: 403:  DMA2CON0bits.EN = 0;
 35187  01B82A  013B               	movlb	59	; () banked
 35188  01B82C  9FDC               	bcf	220,7,b	;volatile
 35189                           
 35190                           ; BSR set to: 59
 35191                           ;eadog.c: 404:  DMA2SSZ = dsize;
 35192                           ;stkvar	_dsize @ sp[(0)+-2]
 35193  01B82E  0EFE               	movlw	-2
 35194  01B830  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 35195  01B836  0EFF               	movlw	-1
 35196  01B838  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 35197                           
 35198                           ; BSR set to: 59
 35199                           ;eadog.c: 405:  DMA2DSZ = 1;
 35200  01B83E  0E00               	movlw	0
 35201  01B840  6FCF               	movwf	207,b	;volatile
 35202  01B842  0E01               	movlw	1
 35203  01B844  6FCE               	movwf	206,b	;volatile
 35204                           
 35205                           ; BSR set to: 59
 35206                           ;eadog.c: 406:  DMA2CON0bits.EN = 1;
 35207  01B846  8FDC               	bsf	220,7,b	;volatile
 35208                           
 35209                           ; BSR set to: 59
 35210                           ;eadog.c: 407:  DMA2CON0bits.DMA2SIRQEN = 1;
 35211  01B848  8DDC               	bsf	220,6,b	;volatile
 35212                           
 35213                           ; BSR set to: 59
 35214                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 35215  01B84A  52E5               	movf	postdec1,f,c
 35216  01B84C  52E5               	movf	postdec1,f,c
 35217  01B84E  0012               	return		;funcret
 35218  01B850                     __end_of_send_port_data_dma:
 35219                           	opt callstack 0
 35220                           
 35221 ;; *************** function _port_data_dma_ptr *****************
 35222 ;; Defined at:
 35223 ;;		line 413 in file "eadog.c"
 35224 ;; Parameters:    Size  Location     Type
 35225 ;;		None
 35226 ;; Auto vars:     Size  Location     Type
 35227 ;;		None
 35228 ;; Return value:  Size  Location     Type
 35229 ;;                  2  [STACK] PTR unsigned char 
 35230 ;; Registers used:
 35231 ;;		wreg, status,2, status,0, btemp, btemp+1
 35232 ;; Tracked objects:
 35233 ;;		On entry : 3F/1
 35234 ;;		On exit  : 0/0
 35235 ;;		Unchanged: 0/0
 35236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35241 ;;Total ram usage:        0 bytes
 35242 ;; Hardware stack levels used:    1
 35243 ;; Hardware stack levels required when called:    3
 35244 ;; This function calls:
 35245 ;;		Nothing
 35246 ;; This function is called by:
 35247 ;;		_calc_bsoc
 35248 ;; This function uses a reentrant model
 35249 ;;
 35250                           
 35251                           	psect	text160
 35252  01C634                     __ptext160:
 35253                           	opt callstack 0
 35254  01C634                     _port_data_dma_ptr:
 35255                           	opt callstack 10
 35256                           
 35257                           ;eadog.c: 415:  return port_data;
 35258                           
 35259                           ; BSR set to: 59
 35260                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35261                           ;incstack = 0
 35262  01C634  0EFF               	movlw	low _port_data
 35263  01C636  6E01               	movwf	btemp^0,c
 35264  01C638  0E04               	movlw	high _port_data
 35265  01C63A  6E02               	movwf	(btemp+1)^0,c
 35266                           
 35267                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35268  01C63C  0012               	return		;funcret
 35269  01C63E                     __end_of_port_data_dma_ptr:
 35270                           	opt callstack 0
 35271                           
 35272 ;; *************** function ___asfladd *****************
 35273 ;; Defined at:
 35274 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 35275 ;; Parameters:    Size  Location     Type
 35276 ;;  f1p             2  [STACK] PTR 
 35277 ;;		 -> C(299), 
 35278 ;;  f2              4  [STACK] PTR 
 35279 ;; Auto vars:     Size  Location     Type
 35280 ;;		None
 35281 ;; Return value:  Size  Location     Type
 35282 ;;                  4  [STACK] PTR 
 35283 ;; Registers used:
 35284 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 35285 ;; Tracked objects:
 35286 ;;		On entry : 0/0
 35287 ;;		On exit  : 0/0
 35288 ;;		Unchanged: 0/0
 35289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35294 ;;Total ram usage:        0 bytes
 35295 ;; Hardware stack levels used:    1
 35296 ;; Hardware stack levels required when called:    4
 35297 ;; This function calls:
 35298 ;;		___fladd
 35299 ;; This function is called by:
 35300 ;;		_calc_bsoc
 35301 ;; This function uses a reentrant model
 35302 ;;
 35303                           
 35304                           	psect	text161
 35305  01B222                     __ptext161:
 35306                           	opt callstack 0
 35307  01B222                     ___asfladd:
 35308                           	opt callstack 9
 35309                           
 35310                           ;	Return value of ___asfladd is never used
 35311                           ;stkvar	_f2 @ sp[(0)+-6]
 35312                           
 35313                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35314                           ;incstack = 0
 35315  01B222  0EFA               	movlw	-6
 35316  01B224  006F FF8F FFE6     	movff	plusw1,postinc1
 35317  01B22A  006F FF8F FFE6     	movff	plusw1,postinc1
 35318  01B230  006F FF8F FFE6     	movff	plusw1,postinc1
 35319  01B236  006F FF8F FFE6     	movff	plusw1,postinc1
 35320                           
 35321                           ;stkvar	_f1p @ sp[(-4)+-2]
 35322  01B23C  0EFA               	movlw	-6
 35323  01B23E  006F FF8F FFD9     	movff	plusw1,fsr2l
 35324  01B244  0EFB               	movlw	-5
 35325  01B246  006F FF8F FFDA     	movff	plusw1,fsr2h
 35326  01B24C  006F FF7B FFE6     	movff	postinc2,postinc1
 35327  01B252  006F FF7B FFE6     	movff	postinc2,postinc1
 35328  01B258  006F FF7B FFE6     	movff	postinc2,postinc1
 35329  01B25E  006F FF7B FFE6     	movff	postinc2,postinc1
 35330  01B264  EC18  F0A3         	call	___fladd	;wreg free
 35331                           
 35332                           ;stkvar	_f1p @ sp[(0)+-2]
 35333  01B268  0EFE               	movlw	-2
 35334  01B26A  006F FF8F FFD9     	movff	plusw1,fsr2l
 35335  01B270  0EFF               	movlw	-1
 35336  01B272  006F FF8F FFDA     	movff	plusw1,fsr2h
 35337  01B278  0060  F007  FFDE   	movff	btemp,postinc2
 35338  01B27E  0060  F00B  FFDE   	movff	btemp+1,postinc2
 35339  01B284  0060  F00F  FFDE   	movff	btemp+2,postinc2
 35340  01B28A  0060  F013  FFDE   	movff	btemp+3,postinc2
 35341                           
 35342                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 35343  01B290  0EFA               	movlw	250
 35344  01B292  26E1               	addwf	fsr1l,f,c
 35345  01B294  0EFF               	movlw	255
 35346  01B296  22E2               	addwfc	fsr1h,f,c
 35347  01B298  0012               	return		;funcret
 35348  01B29A                     __end_of___asfladd:
 35349                           	opt callstack 0
 35350                           
 35351 ;; *************** function _INT0_ISR *****************
 35352 ;; Defined at:
 35353 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 35354 ;; Parameters:    Size  Location     Type
 35355 ;;		None
 35356 ;; Auto vars:     Size  Location     Type
 35357 ;;		None
 35358 ;; Return value:  Size  Location     Type
 35359 ;;                  1    wreg      void 
 35360 ;; Registers used:
 35361 ;;		wreg, status,2, status,0, pclath, tosl
 35362 ;; Tracked objects:
 35363 ;;		On entry : 0/0
 35364 ;;		On exit  : 0/0
 35365 ;;		Unchanged: 0/0
 35366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35371 ;;Total ram usage:        0 bytes
 35372 ;; Hardware stack levels used:    1
 35373 ;; Hardware stack levels required when called:    2
 35374 ;; This function calls:
 35375 ;;		_INT0_CallBack
 35376 ;; This function is called by:
 35377 ;;		Interrupt level 2
 35378 ;; This function uses a non-reentrant model
 35379 ;;
 35380                           
 35381                           	psect	text162
 35382  01C60C                     __ptext162:
 35383                           	opt callstack 0
 35384  01C60C                     _INT0_ISR:
 35385                           	opt callstack 2
 35386                           
 35387                           ;incstack = 0
 35388  01C60C  EE14  F15E         	lfsr	1,___inthi_sp
 35389                           
 35390                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 35391  01C610  0139               	movlb	57	; () banked
 35392  01C612  91A1               	bcf	161,0,b	;volatile
 35393                           
 35394                           ; BSR set to: 57
 35395                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 35396  01C614  ECA8  F0E1         	call	_INT0_CallBack	;wreg free
 35397  01C618  0011               	retfie		f
 35398  01C61A                     __end_of_INT0_ISR:
 35399                           	opt callstack 0
 35400                           
 35401 ;; *************** function _INT0_CallBack *****************
 35402 ;; Defined at:
 35403 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 35404 ;; Parameters:    Size  Location     Type
 35405 ;;		None
 35406 ;; Auto vars:     Size  Location     Type
 35407 ;;		None
 35408 ;; Return value:  Size  Location     Type
 35409 ;;                  1  [STACK] void 
 35410 ;; Registers used:
 35411 ;;		wreg, status,2, status,0, pclath, tosl
 35412 ;; Tracked objects:
 35413 ;;		On entry : 3F/39
 35414 ;;		On exit  : 0/0
 35415 ;;		Unchanged: 0/0
 35416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35421 ;;Total ram usage:        0 bytes
 35422 ;; Hardware stack levels used:    1
 35423 ;; Hardware stack levels required when called:    1
 35424 ;; This function calls:
 35425 ;;		Absolute function
 35426 ;;		_INT0_DefaultInterruptHandler
 35427 ;; This function is called by:
 35428 ;;		_INT0_ISR
 35429 ;; This function uses a reentrant model
 35430 ;;
 35431                           
 35432                           	psect	text163
 35433  01C350                     __ptext163:
 35434                           	opt callstack 0
 35435  01C350                     _INT0_CallBack:
 35436                           	opt callstack 2
 35437                           
 35438                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 35439                           
 35440                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35441                           ;incstack = 0
 35442  01C350  0100               	movlb	0	; () banked
 35443  01C352  5197               	movf	_INT0_InterruptHandler& (0+255),w,b
 35444  01C354  1198               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 35445  01C356  1199               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 35446  01C358  B4D8               	btfsc	status,2,c
 35447  01C35A  0012               	return	
 35448                           
 35449                           ; BSR set to: 0
 35450                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 35451  01C35C  D801               	call	u1015_48
 35452  01C35E  0012               	return	
 35453  01C360                     u1015_48:
 35454  01C360  0005               	push	
 35455  01C362  6EFA               	movwf	pclath,c
 35456  01C364  5197               	movf	_INT0_InterruptHandler& (0+255),w,b
 35457  01C366  6EFD               	movwf	tosl,c
 35458  01C368  5198               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 35459  01C36A  6EFE               	movwf	tosh,c
 35460  01C36C  5199               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 35461  01C36E  6EFF               	movwf	tosu,c
 35462  01C370  50FA               	movf	pclath,w,c
 35463  01C372  0012               	return		;indir
 35464  01C374                     __end_of_INT0_CallBack:
 35465                           	opt callstack 0
 35466                           
 35467 ;; *************** function _INT0_DefaultInterruptHandler *****************
 35468 ;; Defined at:
 35469 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 35470 ;; Parameters:    Size  Location     Type
 35471 ;;		None
 35472 ;; Auto vars:     Size  Location     Type
 35473 ;;		None
 35474 ;; Return value:  Size  Location     Type
 35475 ;;                  1  [STACK] void 
 35476 ;; Registers used:
 35477 ;;		None
 35478 ;; Tracked objects:
 35479 ;;		On entry : 3F/0
 35480 ;;		On exit  : 0/0
 35481 ;;		Unchanged: 0/0
 35482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35487 ;;Total ram usage:        0 bytes
 35488 ;; Hardware stack levels used:    1
 35489 ;; This function calls:
 35490 ;;		Nothing
 35491 ;; This function is called by:
 35492 ;;		_EXT_INT_Initialize
 35493 ;;		_INT0_CallBack
 35494 ;; This function uses a reentrant model
 35495 ;;
 35496                           
 35497                           	psect	text164
 35498  01C6AE                     __ptext164:
 35499                           	opt callstack 0
 35500  01C6AE                     _INT0_DefaultInterruptHandler:
 35501                           	opt callstack 2
 35502                           
 35503                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 35504                           
 35505                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35506                           ;incstack = 0
 35507  01C6AE  0012               	return		;funcret
 35508  01C6B0                     __end_of_INT0_DefaultInterruptHandler:
 35509                           	opt callstack 0
 35510                           
 35511 ;; *************** function _Default_ISR *****************
 35512 ;; Defined at:
 35513 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 35514 ;; Parameters:    Size  Location     Type
 35515 ;;		None
 35516 ;; Auto vars:     Size  Location     Type
 35517 ;;		None
 35518 ;; Return value:  Size  Location     Type
 35519 ;;                  1    wreg      void 
 35520 ;; Registers used:
 35521 ;;		None
 35522 ;; Tracked objects:
 35523 ;;		On entry : 0/0
 35524 ;;		On exit  : 0/0
 35525 ;;		Unchanged: 0/0
 35526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35531 ;;Total ram usage:        0 bytes
 35532 ;; Hardware stack levels used:    1
 35533 ;; This function calls:
 35534 ;;		Nothing
 35535 ;; This function is called by:
 35536 ;;		Interrupt level 2
 35537 ;; This function uses a non-reentrant model
 35538 ;;
 35539                           
 35540                           	psect	text165
 35541  01C6A4                     __ptext165:
 35542                           	opt callstack 0
 35543  01C6A4                     _Default_ISR:
 35544                           	opt callstack 4
 35545                           
 35546                           ;incstack = 0
 35547  01C6A4  EE14  F15E         	lfsr	1,___inthi_sp
 35548  01C6A8  0011               	retfie		f
 35549  01C6AA                     __end_of_Default_ISR:
 35550                           	opt callstack 0
 35551                           
 35552 ;; *************** function _ADCC_ISR *****************
 35553 ;; Defined at:
 35554 ;;		line 314 in file "mcc_generated_files/adcc.c"
 35555 ;; Parameters:    Size  Location     Type
 35556 ;;		None
 35557 ;; Auto vars:     Size  Location     Type
 35558 ;;		None
 35559 ;; Return value:  Size  Location     Type
 35560 ;;                  1    wreg      void 
 35561 ;; Registers used:
 35562 ;;		wreg, status,2, status,0, pclath, tosl
 35563 ;; Tracked objects:
 35564 ;;		On entry : 0/0
 35565 ;;		On exit  : 0/0
 35566 ;;		Unchanged: 0/0
 35567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35572 ;;Total ram usage:        0 bytes
 35573 ;; Hardware stack levels used:    1
 35574 ;; Hardware stack levels required when called:    1
 35575 ;; This function calls:
 35576 ;;		Absolute function
 35577 ;;		_ADCC_DefaultInterruptHandler
 35578 ;;		_adc_int_handler
 35579 ;; This function is called by:
 35580 ;;		Interrupt level 2
 35581 ;; This function uses a non-reentrant model
 35582 ;;
 35583                           
 35584                           	psect	text166
 35585  01BFE4                     __ptext166:
 35586                           	opt callstack 0
 35587  01BFE4                     _ADCC_ISR:
 35588                           	opt callstack 3
 35589                           
 35590                           ;incstack = 0
 35591  01BFE4  EE14  F15E         	lfsr	1,___inthi_sp
 35592                           
 35593                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 35594  01BFE8  0139               	movlb	57	; () banked
 35595  01BFEA  95A1               	bcf	161,2,b	;volatile
 35596                           
 35597                           ; BSR set to: 57
 35598                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 35599  01BFEC  0100               	movlb	0	; () banked
 35600  01BFEE  5188               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 35601  01BFF0  1189               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 35602  01BFF2  118A               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 35603  01BFF4  B4D8               	btfsc	status,2,c
 35604  01BFF6  0011               	retfie		f
 35605                           
 35606                           ; BSR set to: 0
 35607                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 35608  01BFF8  D801               	call	i2u1060_48
 35609  01BFFA  0011               	retfie		f
 35610  01BFFC                     i2u1060_48:
 35611  01BFFC  0005               	push	
 35612  01BFFE  6EFA               	movwf	pclath,c
 35613  01C000  5188               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 35614  01C002  6EFD               	movwf	tosl,c
 35615  01C004  5189               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 35616  01C006  6EFE               	movwf	tosh,c
 35617  01C008  518A               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 35618  01C00A  6EFF               	movwf	tosu,c
 35619  01C00C  50FA               	movf	pclath,w,c
 35620  01C00E  0012               	return		;indir
 35621  01C010                     __end_of_ADCC_ISR:
 35622                           	opt callstack 0
 35623                           
 35624 ;; *************** function _adc_int_t_handler *****************
 35625 ;; Defined at:
 35626 ;;		line 171 in file "daq.c"
 35627 ;; Parameters:    Size  Location     Type
 35628 ;;		None
 35629 ;; Auto vars:     Size  Location     Type
 35630 ;;		None
 35631 ;; Return value:  Size  Location     Type
 35632 ;;                  1  [STACK] void 
 35633 ;; Registers used:
 35634 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 35635 ;; Tracked objects:
 35636 ;;		On entry : 3F/0
 35637 ;;		On exit  : 1/0
 35638 ;;		Unchanged: 0/0
 35639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35644 ;;Total ram usage:        0 bytes
 35645 ;; Hardware stack levels used:    1
 35646 ;; Hardware stack levels required when called:    1
 35647 ;; This function calls:
 35648 ;;		_ADCC_DischargeSampleCapacitor
 35649 ;;		_ADCC_StartConversion
 35650 ;; This function is called by:
 35651 ;;		_start_adc_scan
 35652 ;;		_ADCC_ThresholdISR
 35653 ;; This function uses a reentrant model
 35654 ;;
 35655                           
 35656                           	psect	text167
 35657  01B12A                     __ptext167:
 35658                           	opt callstack 0
 35659  01B12A                     _adc_int_t_handler:
 35660                           	opt callstack 2
 35661                           
 35662                           ;daq.c: 176:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 35663                           
 35664                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35665                           ;incstack = 0
 35666  01B12A  013E               	movlb	62	; () banked
 35667  01B12C  51E6               	movf	230,w,b	;volatile
 35668  01B12E  006F FB9C  F001    	movff	16103,btemp	;volatile
 35669  01B134  6A02               	clrf	(btemp+1)^0,c
 35670  01B136  0060  F004  F002   	movff	btemp,btemp+1
 35671  01B13C  6A01               	clrf	btemp^0,c
 35672  01B13E  2601               	addwf	btemp^0,f,c
 35673  01B140  0E00               	movlw	0
 35674  01B142  2202               	addwfc	(btemp+1)^0,f,c
 35675  01B144  0100               	movlb	0	; () banked
 35676  01B146  51E1               	movf	(_R+50)& (0+255),w,b	;volatile
 35677  01B148  0D02               	mullw	2
 35678  01B14A  50F3               	movf	243,w,c
 35679  01B14C  0FAF               	addlw	low _R
 35680  01B14E  6ED9               	movwf	fsr2l,c
 35681  01B150  6ADA               	clrf	fsr2h,c
 35682  01B152  0060  F007  FFDE   	movff	btemp,postinc2
 35683  01B158  0060  F00B  FFDD   	movff	btemp+1,postdec2
 35684  01B15E                     l11476:
 35685                           
 35686                           ;daq.c: 178:   if (++R.scan_index > 0XD) {
 35687  01B15E  0100               	movlb	0	; () banked
 35688  01B160  2BE1               	incf	(_R+50)& (0+255),f,b	;volatile
 35689  01B162  0E0D               	movlw	13
 35690  01B164  65E1               	cpfsgt	(_R+50)& (0+255),b	;volatile
 35691  01B166  D003               	goto	l11482
 35692                           
 35693                           ; BSR set to: 0
 35694                           ;daq.c: 179:    R.done = 1;
 35695  01B168  0E01               	movlw	1
 35696  01B16A  6FE4               	movwf	(_R+53)& (0+255),b	;volatile
 35697  01B16C  0012               	return	
 35698  01B16E                     l11482:
 35699                           
 35700                           ; BSR set to: 0
 35701                           ;daq.c: 185:  } while (!((R.scan_select >> R.scan_index) &0x1));
 35702  01B16E  0060  F384  F00C   	movff	_R+50,btemp+11	;volatile
 35703  01B174  EE20  F0E2         	lfsr	2,_R+51	;volatile
 35704  01B178  006F FF78  F009    	movff	postinc2,btemp+8
 35705  01B17E  006F FF74  F00A    	movff	postdec2,btemp+9
 35706  01B184  2A0C               	incf	(btemp+11)^0,f,c
 35707  01B186  D003               	goto	u1057_44
 35708  01B188                     u1057_45:
 35709  01B188  90D8               	bcf	status,0,c
 35710  01B18A  320A               	rrcf	(btemp+9)^0,f,c
 35711  01B18C  3209               	rrcf	(btemp+8)^0,f,c
 35712  01B18E                     u1057_44:
 35713  01B18E  2E0C               	decfsz	(btemp+11)^0,f,c
 35714  01B190  D7FB               	goto	u1057_45
 35715  01B192  A009               	btfss	(btemp+8)^0,0,c
 35716  01B194  D7E4               	goto	l11476
 35717                           
 35718                           ;daq.c: 186:  ADCC_DischargeSampleCapacitor();
 35719  01B196  EC31  F0E3         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 35720                           
 35721                           ; BSR set to: 62
 35722                           ;daq.c: 187:  ADCC_StartConversion(R.scan_index & 0xf);
 35723  01B19A  0100               	movlb	0	; () banked
 35724  01B19C  51E1               	movf	(_R+50)& (0+255),w,b	;volatile
 35725  01B19E  0B0F               	andlw	15
 35726  01B1A0  6EE6               	movwf	postinc1,c
 35727  01B1A2  ECC8  F0E2         	call	_ADCC_StartConversion	;wreg free
 35728                           
 35729                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35730  01B1A6  0012               	return		;funcret
 35731  01B1A8                     __end_of_adc_int_t_handler:
 35732                           	opt callstack 0
 35733                           
 35734 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 35735 ;; Defined at:
 35736 ;;		line 339 in file "mcc_generated_files/adcc.c"
 35737 ;; Parameters:    Size  Location     Type
 35738 ;;		None
 35739 ;; Auto vars:     Size  Location     Type
 35740 ;;		None
 35741 ;; Return value:  Size  Location     Type
 35742 ;;                  1  [STACK] void 
 35743 ;; Registers used:
 35744 ;;		None
 35745 ;; Tracked objects:
 35746 ;;		On entry : 3F/0
 35747 ;;		On exit  : 0/0
 35748 ;;		Unchanged: 0/0
 35749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35754 ;;Total ram usage:        0 bytes
 35755 ;; Hardware stack levels used:    1
 35756 ;; This function calls:
 35757 ;;		Nothing
 35758 ;; This function is called by:
 35759 ;;		_ADCC_Initialize
 35760 ;;		_ADCC_ISR
 35761 ;;		_ADCC_ThresholdISR
 35762 ;; This function uses a reentrant model
 35763 ;;
 35764                           
 35765                           	psect	text168
 35766  01C6B0                     __ptext168:
 35767                           	opt callstack 0
 35768  01C6B0                     _ADCC_DefaultInterruptHandler:
 35769                           	opt callstack 3
 35770                           
 35771                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 35772                           
 35773                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35774                           ;incstack = 0
 35775  01C6B0  0012               	return		;funcret
 35776  01C6B2                     __end_of_ADCC_DefaultInterruptHandler:
 35777                           	opt callstack 0
 35778                           
 35779 ;; *************** function _adc_int_handler *****************
 35780 ;; Defined at:
 35781 ;;		line 161 in file "daq.c"
 35782 ;; Parameters:    Size  Location     Type
 35783 ;;		None
 35784 ;; Auto vars:     Size  Location     Type
 35785 ;;		None
 35786 ;; Return value:  Size  Location     Type
 35787 ;;                  1  [STACK] void 
 35788 ;; Registers used:
 35789 ;;		None
 35790 ;; Tracked objects:
 35791 ;;		On entry : 3F/0
 35792 ;;		On exit  : 0/0
 35793 ;;		Unchanged: 0/0
 35794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35799 ;;Total ram usage:        0 bytes
 35800 ;; Hardware stack levels used:    1
 35801 ;; This function calls:
 35802 ;;		Nothing
 35803 ;; This function is called by:
 35804 ;;		_start_adc_scan
 35805 ;;		_ADCC_ISR
 35806 ;; This function uses a reentrant model
 35807 ;;
 35808                           
 35809                           	psect	text169
 35810  01C6B2                     __ptext169:
 35811                           	opt callstack 0
 35812  01C6B2                     _adc_int_handler:
 35813                           	opt callstack 3
 35814                           
 35815                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 35816                           
 35817                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35818                           ;incstack = 0
 35819  01C6B2  0012               	return		;funcret
 35820  01C6B4                     __end_of_adc_int_handler:
 35821                           	opt callstack 0
 35822                           
 35823 ;; *************** function _ADCC_ThresholdISR *****************
 35824 ;; Defined at:
 35825 ;;		line 327 in file "mcc_generated_files/adcc.c"
 35826 ;; Parameters:    Size  Location     Type
 35827 ;;		None
 35828 ;; Auto vars:     Size  Location     Type
 35829 ;;		None
 35830 ;; Return value:  Size  Location     Type
 35831 ;;                  1    wreg      void 
 35832 ;; Registers used:
 35833 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 35834 ;; Tracked objects:
 35835 ;;		On entry : 0/0
 35836 ;;		On exit  : 0/0
 35837 ;;		Unchanged: 0/0
 35838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35841 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35842 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35843 ;;Total ram usage:        5 bytes
 35844 ;; Hardware stack levels used:    1
 35845 ;; Hardware stack levels required when called:    2
 35846 ;; This function calls:
 35847 ;;		Absolute function
 35848 ;;		_ADCC_DefaultInterruptHandler
 35849 ;;		_adc_int_t_handler
 35850 ;; This function is called by:
 35851 ;;		Interrupt level 2
 35852 ;; This function uses a non-reentrant model
 35853 ;;
 35854                           
 35855                           	psect	text170
 35856  01B3E0                     __ptext170:
 35857                           	opt callstack 0
 35858  01B3E0                     _ADCC_ThresholdISR:
 35859                           	opt callstack 2
 35860                           
 35861                           ;incstack = 0
 35862  01B3E0  0060  F004  F021   	movff	btemp,??_ADCC_ThresholdISR
 35863  01B3E6  0060  F008  F022   	movff	btemp+1,??_ADCC_ThresholdISR+1
 35864  01B3EC  0060  F024  F023   	movff	btemp+8,??_ADCC_ThresholdISR+2
 35865  01B3F2  0060  F028  F024   	movff	btemp+9,??_ADCC_ThresholdISR+3
 35866  01B3F8  0060  F030  F025   	movff	btemp+11,??_ADCC_ThresholdISR+4
 35867  01B3FE  EE14  F15E         	lfsr	1,___inthi_sp
 35868                           
 35869                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 35870  01B402  0139               	movlb	57	; () banked
 35871  01B404  97A1               	bcf	161,3,b	;volatile
 35872                           
 35873                           ; BSR set to: 57
 35874                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 35875  01B406  0100               	movlb	0	; () banked
 35876  01B408  5185               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 35877  01B40A  1186               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 35878  01B40C  1187               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 35879  01B40E  B4D8               	btfsc	status,2,c
 35880  01B410  D00C               	goto	i2u1062_49
 35881                           
 35882                           ; BSR set to: 0
 35883                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 35884  01B412  D801               	call	i2u1062_48
 35885  01B414  D00A               	goto	i2u1062_49
 35886  01B416                     i2u1062_48:
 35887  01B416  0005               	push	
 35888  01B418  6EFA               	movwf	pclath,c
 35889  01B41A  5185               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 35890  01B41C  6EFD               	movwf	tosl,c
 35891  01B41E  5186               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 35892  01B420  6EFE               	movwf	tosh,c
 35893  01B422  5187               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 35894  01B424  6EFF               	movwf	tosu,c
 35895  01B426  50FA               	movf	pclath,w,c
 35896  01B428  0012               	return		;indir
 35897  01B42A                     i2u1062_49:
 35898  01B42A  0060  F094  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 35899  01B430  0060  F090  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 35900  01B436  0060  F08C  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 35901  01B43C  0060  F088  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 35902  01B442  0060  F084  F001   	movff	??_ADCC_ThresholdISR,btemp
 35903  01B448  0011               	retfie		f
 35904  01B44A                     __end_of_ADCC_ThresholdISR:
 35905                           	opt callstack 0
 35906                           
 35907 ;; *************** function _UART1_rx_vect_isr *****************
 35908 ;; Defined at:
 35909 ;;		line 181 in file "mcc_generated_files/uart1.c"
 35910 ;; Parameters:    Size  Location     Type
 35911 ;;		None
 35912 ;; Auto vars:     Size  Location     Type
 35913 ;;		None
 35914 ;; Return value:  Size  Location     Type
 35915 ;;                  1    wreg      void 
 35916 ;; Registers used:
 35917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 35918 ;; Tracked objects:
 35919 ;;		On entry : 0/0
 35920 ;;		On exit  : 0/0
 35921 ;;		Unchanged: 0/0
 35922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35927 ;;Total ram usage:        0 bytes
 35928 ;; Hardware stack levels used:    1
 35929 ;; Hardware stack levels required when called:    1
 35930 ;; This function calls:
 35931 ;;		Absolute function
 35932 ;;		_UART1_Receive_ISR
 35933 ;; This function is called by:
 35934 ;;		Interrupt level 2
 35935 ;; This function uses a non-reentrant model
 35936 ;;
 35937                           
 35938                           	psect	text171
 35939  01C248                     __ptext171:
 35940                           	opt callstack 0
 35941  01C248                     _UART1_rx_vect_isr:
 35942                           	opt callstack 3
 35943                           
 35944                           ;incstack = 0
 35945  01C248  EE14  F15E         	lfsr	1,___inthi_sp
 35946                           
 35947                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 35948  01C24C  0100               	movlb	0	; () banked
 35949  01C24E  518B               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 35950  01C250  118C               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 35951  01C252  118D               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 35952  01C254  B4D8               	btfsc	status,2,c
 35953  01C256  0011               	retfie		f
 35954                           
 35955                           ; BSR set to: 0
 35956                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 35957  01C258  D801               	call	i2u1064_48
 35958  01C25A  0011               	retfie		f
 35959  01C25C                     i2u1064_48:
 35960  01C25C  0005               	push	
 35961  01C25E  6EFA               	movwf	pclath,c
 35962  01C260  518B               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 35963  01C262  6EFD               	movwf	tosl,c
 35964  01C264  518C               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 35965  01C266  6EFE               	movwf	tosh,c
 35966  01C268  518D               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 35967  01C26A  6EFF               	movwf	tosu,c
 35968  01C26C  50FA               	movf	pclath,w,c
 35969  01C26E  0012               	return		;indir
 35970  01C270                     __end_of_UART1_rx_vect_isr:
 35971                           	opt callstack 0
 35972                           
 35973 ;; *************** function _UART1_Receive_ISR *****************
 35974 ;; Defined at:
 35975 ;;		line 192 in file "mcc_generated_files/uart1.c"
 35976 ;; Parameters:    Size  Location     Type
 35977 ;;		None
 35978 ;; Auto vars:     Size  Location     Type
 35979 ;;		None
 35980 ;; Return value:  Size  Location     Type
 35981 ;;                  1  [STACK] void 
 35982 ;; Registers used:
 35983 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35984 ;; Tracked objects:
 35985 ;;		On entry : 3F/0
 35986 ;;		On exit  : 3F/0
 35987 ;;		Unchanged: 0/0
 35988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35993 ;;Total ram usage:        0 bytes
 35994 ;; Hardware stack levels used:    1
 35995 ;; This function calls:
 35996 ;;		Nothing
 35997 ;; This function is called by:
 35998 ;;		_UART1_Initialize
 35999 ;;		_UART1_rx_vect_isr
 36000 ;; This function uses a reentrant model
 36001 ;;
 36002                           
 36003                           	psect	text172
 36004  01C3DC                     __ptext172:
 36005                           	opt callstack 0
 36006  01C3DC                     _UART1_Receive_ISR:
 36007                           	opt callstack 3
 36008                           
 36009                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 36010                           
 36011                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36012                           ;incstack = 0
 36013  01C3DC  0EDB               	movlw	low _uart1RxBuffer
 36014  01C3DE  2447               	addwf	_uart1RxHead^0,w,c	;volatile
 36015  01C3E0  6ED9               	movwf	fsr2l,c
 36016  01C3E2  6ADA               	clrf	fsr2h,c
 36017  01C3E4  0E01               	movlw	high _uart1RxBuffer
 36018  01C3E6  22DA               	addwfc	fsr2h,f,c
 36019  01C3E8  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 36020  01C3EE  2A47               	incf	_uart1RxHead^0,f,c	;volatile
 36021                           
 36022                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 36023  01C3F0  0E07               	movlw	7
 36024  01C3F2  6447               	cpfsgt	_uart1RxHead^0,c
 36025  01C3F4  D001               	goto	l11000
 36026                           
 36027                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 36028  01C3F6  6A47               	clrf	_uart1RxHead^0,c	;volatile
 36029  01C3F8                     l11000:
 36030                           
 36031                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 36032  01C3F8  0100               	movlb	0	; () banked
 36033  01C3FA  2BAD               	incf	_uart1RxCount& (0+255),f,b	;volatile
 36034                           
 36035                           ; BSR set to: 0
 36036                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 36037  01C3FC  0012               	return		;funcret
 36038  01C3FE                     __end_of_UART1_Receive_ISR:
 36039                           	opt callstack 0
 36040                           
 36041 ;; *************** function _UART2_tx_vect_isr *****************
 36042 ;; Defined at:
 36043 ;;		line 195 in file "mcc_generated_files/uart2.c"
 36044 ;; Parameters:    Size  Location     Type
 36045 ;;		None
 36046 ;; Auto vars:     Size  Location     Type
 36047 ;;		None
 36048 ;; Return value:  Size  Location     Type
 36049 ;;                  1    wreg      void 
 36050 ;; Registers used:
 36051 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 36052 ;; Tracked objects:
 36053 ;;		On entry : 0/0
 36054 ;;		On exit  : 0/0
 36055 ;;		Unchanged: 0/0
 36056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36061 ;;Total ram usage:        0 bytes
 36062 ;; Hardware stack levels used:    1
 36063 ;; Hardware stack levels required when called:    1
 36064 ;; This function calls:
 36065 ;;		Absolute function
 36066 ;;		_UART2_Transmit_ISR
 36067 ;; This function is called by:
 36068 ;;		Interrupt level 2
 36069 ;; This function uses a non-reentrant model
 36070 ;;
 36071                           
 36072                           	psect	text173
 36073  01C270                     __ptext173:
 36074                           	opt callstack 0
 36075  01C270                     _UART2_tx_vect_isr:
 36076                           	opt callstack 3
 36077                           
 36078                           ; BSR set to: 0
 36079                           ;incstack = 0
 36080  01C270  EE14  F15E         	lfsr	1,___inthi_sp
 36081                           
 36082                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 36083  01C274  0100               	movlb	0	; () banked
 36084  01C276  518E               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 36085  01C278  118F               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 36086  01C27A  1190               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 36087  01C27C  B4D8               	btfsc	status,2,c
 36088  01C27E  0011               	retfie		f
 36089                           
 36090                           ; BSR set to: 0
 36091                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 36092  01C280  D801               	call	i2u1066_48
 36093  01C282  0011               	retfie		f
 36094  01C284                     i2u1066_48:
 36095  01C284  0005               	push	
 36096  01C286  6EFA               	movwf	pclath,c
 36097  01C288  518E               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 36098  01C28A  6EFD               	movwf	tosl,c
 36099  01C28C  518F               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 36100  01C28E  6EFE               	movwf	tosh,c
 36101  01C290  5190               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 36102  01C292  6EFF               	movwf	tosu,c
 36103  01C294  50FA               	movf	pclath,w,c
 36104  01C296  0012               	return		;indir
 36105  01C298                     __end_of_UART2_tx_vect_isr:
 36106                           	opt callstack 0
 36107                           
 36108 ;; *************** function _UART2_Transmit_ISR *****************
 36109 ;; Defined at:
 36110 ;;		line 213 in file "mcc_generated_files/uart2.c"
 36111 ;; Parameters:    Size  Location     Type
 36112 ;;		None
 36113 ;; Auto vars:     Size  Location     Type
 36114 ;;		None
 36115 ;; Return value:  Size  Location     Type
 36116 ;;                  1  [STACK] void 
 36117 ;; Registers used:
 36118 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36119 ;; Tracked objects:
 36120 ;;		On entry : 3F/0
 36121 ;;		On exit  : 3B/39
 36122 ;;		Unchanged: 0/0
 36123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36128 ;;Total ram usage:        0 bytes
 36129 ;; Hardware stack levels used:    1
 36130 ;; This function calls:
 36131 ;;		Nothing
 36132 ;; This function is called by:
 36133 ;;		_UART2_Initialize
 36134 ;;		_UART2_tx_vect_isr
 36135 ;; This function uses a reentrant model
 36136 ;;
 36137                           
 36138                           	psect	text174
 36139  01C010                     __ptext174:
 36140                           	opt callstack 0
 36141  01C010                     _UART2_Transmit_ISR:
 36142                           	opt callstack 3
 36143                           
 36144                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 36145                           
 36146                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36147                           ;incstack = 0
 36148  01C010  0E40               	movlw	64
 36149  01C012  6045               	cpfslt	_uart2TxBufferRemaining^0,c
 36150  01C014  D010               	goto	l673
 36151                           
 36152                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 36153  01C016  0E00               	movlw	low _uart2TxBuffer
 36154  01C018  2446               	addwf	_uart2TxTail^0,w,c	;volatile
 36155  01C01A  6ED9               	movwf	fsr2l,c
 36156  01C01C  6ADA               	clrf	fsr2h,c
 36157  01C01E  0E03               	movlw	high _uart2TxBuffer
 36158  01C020  22DA               	addwfc	fsr2h,f,c
 36159  01C022  50DF               	movf	indf2,w,c
 36160  01C024  013D               	movlb	61	; () banked
 36161  01C026  6FD2               	movwf	210,b	;volatile
 36162                           
 36163                           ; BSR set to: 61
 36164  01C028  2A46               	incf	_uart2TxTail^0,f,c	;volatile
 36165                           
 36166                           ; BSR set to: 61
 36167                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 36168  01C02A  0E3F               	movlw	63
 36169  01C02C  6446               	cpfsgt	_uart2TxTail^0,c
 36170  01C02E  D001               	goto	l11012
 36171                           
 36172                           ; BSR set to: 61
 36173                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 36174  01C030  6A46               	clrf	_uart2TxTail^0,c	;volatile
 36175  01C032                     l11012:
 36176                           
 36177                           ; BSR set to: 61
 36178                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 36179  01C032  2A45               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 36180                           
 36181                           ;mcc_generated_files/uart2.c: 224:     }
 36182  01C034  0012               	return	
 36183  01C036                     l673:
 36184                           
 36185                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 36186  01C036  0139               	movlb	57	; () banked
 36187  01C038  9796               	bcf	150,3,b	;volatile
 36188                           
 36189                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 36190  01C03A  0012               	return		;funcret
 36191  01C03C                     __end_of_UART2_Transmit_ISR:
 36192                           	opt callstack 0
 36193                           
 36194 ;; *************** function _UART2_rx_vect_isr *****************
 36195 ;; Defined at:
 36196 ;;		line 203 in file "mcc_generated_files/uart2.c"
 36197 ;; Parameters:    Size  Location     Type
 36198 ;;		None
 36199 ;; Auto vars:     Size  Location     Type
 36200 ;;		None
 36201 ;; Return value:  Size  Location     Type
 36202 ;;                  1    wreg      void 
 36203 ;; Registers used:
 36204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 36205 ;; Tracked objects:
 36206 ;;		On entry : 0/0
 36207 ;;		On exit  : 0/0
 36208 ;;		Unchanged: 0/0
 36209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36214 ;;Total ram usage:        0 bytes
 36215 ;; Hardware stack levels used:    1
 36216 ;; Hardware stack levels required when called:    1
 36217 ;; This function calls:
 36218 ;;		Absolute function
 36219 ;;		_UART2_Receive_ISR
 36220 ;; This function is called by:
 36221 ;;		Interrupt level 2
 36222 ;; This function uses a non-reentrant model
 36223 ;;
 36224                           
 36225                           	psect	text175
 36226  01C298                     __ptext175:
 36227                           	opt callstack 0
 36228  01C298                     _UART2_rx_vect_isr:
 36229                           	opt callstack 3
 36230                           
 36231                           ;incstack = 0
 36232  01C298  EE14  F15E         	lfsr	1,___inthi_sp
 36233                           
 36234                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 36235  01C29C  0100               	movlb	0	; () banked
 36236  01C29E  5191               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 36237  01C2A0  1192               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 36238  01C2A2  1193               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 36239  01C2A4  B4D8               	btfsc	status,2,c
 36240  01C2A6  0011               	retfie		f
 36241                           
 36242                           ; BSR set to: 0
 36243                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 36244  01C2A8  D801               	call	i2u1068_48
 36245  01C2AA  0011               	retfie		f
 36246  01C2AC                     i2u1068_48:
 36247  01C2AC  0005               	push	
 36248  01C2AE  6EFA               	movwf	pclath,c
 36249  01C2B0  5191               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 36250  01C2B2  6EFD               	movwf	tosl,c
 36251  01C2B4  5192               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 36252  01C2B6  6EFE               	movwf	tosh,c
 36253  01C2B8  5193               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 36254  01C2BA  6EFF               	movwf	tosu,c
 36255  01C2BC  50FA               	movf	pclath,w,c
 36256  01C2BE  0012               	return		;indir
 36257  01C2C0                     __end_of_UART2_rx_vect_isr:
 36258                           	opt callstack 0
 36259                           
 36260 ;; *************** function _UART2_Receive_ISR *****************
 36261 ;; Defined at:
 36262 ;;		line 233 in file "mcc_generated_files/uart2.c"
 36263 ;; Parameters:    Size  Location     Type
 36264 ;;		None
 36265 ;; Auto vars:     Size  Location     Type
 36266 ;;		None
 36267 ;; Return value:  Size  Location     Type
 36268 ;;                  1  [STACK] void 
 36269 ;; Registers used:
 36270 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36271 ;; Tracked objects:
 36272 ;;		On entry : 3F/0
 36273 ;;		On exit  : 3F/0
 36274 ;;		Unchanged: 0/0
 36275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36280 ;;Total ram usage:        0 bytes
 36281 ;; Hardware stack levels used:    1
 36282 ;; This function calls:
 36283 ;;		Nothing
 36284 ;; This function is called by:
 36285 ;;		_UART2_Initialize
 36286 ;;		_UART2_rx_vect_isr
 36287 ;; This function uses a reentrant model
 36288 ;;
 36289                           
 36290                           	psect	text176
 36291  01C41E                     __ptext176:
 36292                           	opt callstack 0
 36293  01C41E                     _UART2_Receive_ISR:
 36294                           	opt callstack 3
 36295                           
 36296                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 36297                           
 36298                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36299                           ;incstack = 0
 36300  01C41E  0E00               	movlw	low _uart2RxBuffer
 36301  01C420  2444               	addwf	_uart2RxHead^0,w,c	;volatile
 36302  01C422  6ED9               	movwf	fsr2l,c
 36303  01C424  6ADA               	clrf	fsr2h,c
 36304  01C426  0E04               	movlw	high _uart2RxBuffer
 36305  01C428  22DA               	addwfc	fsr2h,f,c
 36306  01C42A  006F F743 FFDF     	movff	15824,indf2	;volatile
 36307  01C430  2A44               	incf	_uart2RxHead^0,f,c	;volatile
 36308                           
 36309                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 36310  01C432  2844               	incf	_uart2RxHead^0,w,c
 36311  01C434  B4D8               	btfsc	status,2,c
 36312                           
 36313                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 36314  01C436  6A44               	clrf	_uart2RxHead^0,c	;volatile
 36315                           
 36316                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 36317  01C438  0100               	movlb	0	; () banked
 36318  01C43A  2BAA               	incf	_uart2RxCount& (0+255),f,b	;volatile
 36319                           
 36320                           ; BSR set to: 0
 36321                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 36322  01C43C  0012               	return		;funcret
 36323  01C43E                     __end_of_UART2_Receive_ISR:
 36324                           	opt callstack 0
 36325                           
 36326 ;; *************** function _TMR6_ISR *****************
 36327 ;; Defined at:
 36328 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 36329 ;; Parameters:    Size  Location     Type
 36330 ;;		None
 36331 ;; Auto vars:     Size  Location     Type
 36332 ;;		None
 36333 ;; Return value:  Size  Location     Type
 36334 ;;                  1    wreg      void 
 36335 ;; Registers used:
 36336 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 36337 ;; Tracked objects:
 36338 ;;		On entry : 0/0
 36339 ;;		On exit  : 0/0
 36340 ;;		Unchanged: 0/0
 36341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36344 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36345 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36346 ;;Total ram usage:        1 bytes
 36347 ;; Hardware stack levels used:    1
 36348 ;; Hardware stack levels required when called:    2
 36349 ;; This function calls:
 36350 ;;		_TMR6_CallBack
 36351 ;; This function is called by:
 36352 ;;		Interrupt level 2
 36353 ;; This function uses a non-reentrant model
 36354 ;;
 36355                           
 36356                           	psect	text177
 36357  01C4F0                     __ptext177:
 36358                           	opt callstack 0
 36359  01C4F0                     _TMR6_ISR:
 36360                           	opt callstack 2
 36361                           
 36362                           ; BSR set to: 0
 36363                           ;incstack = 0
 36364  01C4F0  0060  F004  F026   	movff	btemp,??_TMR6_ISR
 36365  01C4F6  EE14  F15E         	lfsr	1,___inthi_sp
 36366                           
 36367                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 36368  01C4FA  0139               	movlb	57	; () banked
 36369  01C4FC  91A9               	bcf	169,0,b	;volatile
 36370                           
 36371                           ; BSR set to: 57
 36372                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 36373  01C4FE  ECBA  F0E1         	call	_TMR6_CallBack	;wreg free
 36374  01C502  0060  F098  F001   	movff	??_TMR6_ISR,btemp
 36375  01C508  0011               	retfie		f
 36376  01C50A                     __end_of_TMR6_ISR:
 36377                           	opt callstack 0
 36378                           
 36379 ;; *************** function _TMR6_CallBack *****************
 36380 ;; Defined at:
 36381 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 36382 ;; Parameters:    Size  Location     Type
 36383 ;;		None
 36384 ;; Auto vars:     Size  Location     Type
 36385 ;;		None
 36386 ;; Return value:  Size  Location     Type
 36387 ;;                  1  [STACK] void 
 36388 ;; Registers used:
 36389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 36390 ;; Tracked objects:
 36391 ;;		On entry : 3F/39
 36392 ;;		On exit  : 0/0
 36393 ;;		Unchanged: 0/0
 36394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36399 ;;Total ram usage:        0 bytes
 36400 ;; Hardware stack levels used:    1
 36401 ;; Hardware stack levels required when called:    1
 36402 ;; This function calls:
 36403 ;;		Absolute function
 36404 ;;		_TMR6_DefaultInterruptHandler
 36405 ;; This function is called by:
 36406 ;;		_TMR6_ISR
 36407 ;; This function uses a reentrant model
 36408 ;;
 36409                           
 36410                           	psect	text178
 36411  01C374                     __ptext178:
 36412                           	opt callstack 0
 36413  01C374                     _TMR6_CallBack:
 36414                           	opt callstack 2
 36415                           
 36416                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 36417                           
 36418                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36419                           ;incstack = 0
 36420  01C374  0100               	movlb	0	; () banked
 36421  01C376  5182               	movf	_TMR6_InterruptHandler& (0+255),w,b
 36422  01C378  1183               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 36423  01C37A  1184               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 36424  01C37C  B4D8               	btfsc	status,2,c
 36425  01C37E  0012               	return	
 36426                           
 36427                           ; BSR set to: 0
 36428                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 36429  01C380  D801               	call	u1023_48
 36430  01C382  0012               	return	
 36431  01C384                     u1023_48:
 36432  01C384  0005               	push	
 36433  01C386  6EFA               	movwf	pclath,c
 36434  01C388  5182               	movf	_TMR6_InterruptHandler& (0+255),w,b
 36435  01C38A  6EFD               	movwf	tosl,c
 36436  01C38C  5183               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 36437  01C38E  6EFE               	movwf	tosh,c
 36438  01C390  5184               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 36439  01C392  6EFF               	movwf	tosu,c
 36440  01C394  50FA               	movf	pclath,w,c
 36441  01C396  0012               	return		;indir
 36442  01C398                     __end_of_TMR6_CallBack:
 36443                           	opt callstack 0
 36444                           
 36445 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 36446 ;; Defined at:
 36447 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 36448 ;; Parameters:    Size  Location     Type
 36449 ;;		None
 36450 ;; Auto vars:     Size  Location     Type
 36451 ;;  i               1  [STACK] unsigned char 
 36452 ;; Return value:  Size  Location     Type
 36453 ;;                  1  [STACK] void 
 36454 ;; Registers used:
 36455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 36456 ;; Tracked objects:
 36457 ;;		On entry : 3F/0
 36458 ;;		On exit  : 0/0
 36459 ;;		Unchanged: 0/0
 36460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36465 ;;Total ram usage:        0 bytes
 36466 ;; Hardware stack levels used:    1
 36467 ;; This function calls:
 36468 ;;		Nothing
 36469 ;; This function is called by:
 36470 ;;		_TMR6_Initialize
 36471 ;;		_TMR6_CallBack
 36472 ;; This function uses a reentrant model
 36473 ;;
 36474                           
 36475                           	psect	text179
 36476  01B850                     __ptext179:
 36477                           	opt callstack 0
 36478  01B850                     _TMR6_DefaultInterruptHandler:
 36479                           	opt callstack 0
 36480                           
 36481                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36482  01B850  52E6               	movf	postinc1,f,c
 36483                           
 36484                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 36485                           ;stkvar	_i @ sp[(-1)+0]
 36486                           
 36487                           ;incstack = 0
 36488  01B852  0EFF               	movlw	-1
 36489  01B854  6AE3               	clrf	plusw1,c
 36490  01B856                     l10568:
 36491                           
 36492                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 36493                           ;stkvar	_i @ sp[(-1)+0]
 36494  01B856  0EFF               	movlw	-1
 36495  01B858  50E3               	movf	plusw1,w,c
 36496  01B85A  0D02               	mullw	2
 36497  01B85C  0E7D               	movlw	low _tickCount
 36498  01B85E  24F3               	addwf	243,w,c
 36499  01B860  6ED9               	movwf	fsr2l,c
 36500  01B862  0E02               	movlw	high _tickCount
 36501  01B864  20F4               	addwfc	prodh,w,c
 36502  01B866  6EDA               	movwf	fsr2h,c
 36503  01B868  50DE               	movf	postinc2,w,c
 36504  01B86A  10DE               	iorwf	postinc2,w,c
 36505  01B86C  B4D8               	btfsc	status,2,c
 36506  01B86E  D00C               	goto	l10572
 36507                           
 36508                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 36509                           ;stkvar	_i @ sp[(-1)+0]
 36510  01B870  0EFF               	movlw	-1
 36511  01B872  50E3               	movf	plusw1,w,c
 36512  01B874  0D02               	mullw	2
 36513  01B876  0E7D               	movlw	low _tickCount
 36514  01B878  24F3               	addwf	243,w,c
 36515  01B87A  6ED9               	movwf	fsr2l,c
 36516  01B87C  0E02               	movlw	high _tickCount
 36517  01B87E  20F4               	addwfc	prodh,w,c
 36518  01B880  6EDA               	movwf	fsr2h,c
 36519  01B882  06DE               	decf	postinc2,f,c
 36520  01B884  0E00               	movlw	0
 36521  01B886  5ADD               	subwfb	postdec2,f,c
 36522  01B888                     l10572:
 36523                           
 36524                           ;mcc_generated_files/tmr6.c: 207:  }
 36525                           ;stkvar	_i @ sp[(-1)+0]
 36526  01B888  0EFF               	movlw	-1
 36527  01B88A  2AE3               	incf	plusw1,f,c
 36528                           
 36529                           ;stkvar	_i @ sp[(-1)+0]
 36530  01B88C  0EFF               	movlw	-1
 36531  01B88E  006F FF8C  F001    	movff	plusw1,btemp
 36532  01B894  0E0C               	movlw	12
 36533  01B896  6401               	cpfsgt	btemp^0,c
 36534  01B898  D7DE               	goto	l10568
 36535                           
 36536                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 36537  01B89A  52E5               	movf	postdec1,f,c
 36538  01B89C  0012               	return		;funcret
 36539  01B89E                     __end_of_TMR6_DefaultInterruptHandler:
 36540                           	opt callstack 0
 36541                           
 36542 ;; *************** function _DMA1_DMASCNT_ISR *****************
 36543 ;; Defined at:
 36544 ;;		line 126 in file "mcc_generated_files/dma1.c"
 36545 ;; Parameters:    Size  Location     Type
 36546 ;;		None
 36547 ;; Auto vars:     Size  Location     Type
 36548 ;;		None
 36549 ;; Return value:  Size  Location     Type
 36550 ;;                  1    wreg      void 
 36551 ;; Registers used:
 36552 ;;		None
 36553 ;; Tracked objects:
 36554 ;;		On entry : 0/0
 36555 ;;		On exit  : 3F/1
 36556 ;;		Unchanged: 0/0
 36557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36562 ;;Total ram usage:        0 bytes
 36563 ;; Hardware stack levels used:    1
 36564 ;; This function calls:
 36565 ;;		Nothing
 36566 ;; This function is called by:
 36567 ;;		Interrupt level 2
 36568 ;; This function uses a non-reentrant model
 36569 ;;
 36570                           
 36571                           	psect	text180
 36572  01C61C                     __ptext180:
 36573                           	opt callstack 0
 36574  01C61C                     _DMA1_DMASCNT_ISR:
 36575                           	opt callstack 4
 36576                           
 36577                           ;incstack = 0
 36578  01C61C  EE14  F15E         	lfsr	1,___inthi_sp
 36579                           
 36580                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 36581  01C620  0139               	movlb	57	; () banked
 36582  01C622  91A2               	bcf	162,0,b	;volatile
 36583                           
 36584                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 36585  01C624  0101               	movlb	1	; () banked
 36586  01C626  97CF               	bcf	_spi_link& (0+255),3,b	;volatile
 36587                           
 36588                           ; BSR set to: 1
 36589  01C628  0011               	retfie		f
 36590  01C62A                     __end_of_DMA1_DMASCNT_ISR:
 36591                           	opt callstack 0
 36592                           
 36593 ;; *************** function _DMA1_DMADCNT_ISR *****************
 36594 ;; Defined at:
 36595 ;;		line 133 in file "mcc_generated_files/dma1.c"
 36596 ;; Parameters:    Size  Location     Type
 36597 ;;		None
 36598 ;; Auto vars:     Size  Location     Type
 36599 ;;		None
 36600 ;; Return value:  Size  Location     Type
 36601 ;;                  1    wreg      void 
 36602 ;; Registers used:
 36603 ;;		None
 36604 ;; Tracked objects:
 36605 ;;		On entry : 0/0
 36606 ;;		On exit  : 3F/39
 36607 ;;		Unchanged: 0/0
 36608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36613 ;;Total ram usage:        0 bytes
 36614 ;; Hardware stack levels used:    1
 36615 ;; This function calls:
 36616 ;;		Nothing
 36617 ;; This function is called by:
 36618 ;;		Interrupt level 2
 36619 ;; This function uses a non-reentrant model
 36620 ;;
 36621                           
 36622                           	psect	text181
 36623  01C640                     __ptext181:
 36624                           	opt callstack 0
 36625  01C640                     _DMA1_DMADCNT_ISR:
 36626                           	opt callstack 4
 36627                           
 36628                           ; BSR set to: 1
 36629                           ;incstack = 0
 36630  01C640  EE14  F15E         	lfsr	1,___inthi_sp
 36631                           
 36632                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 36633  01C644  0139               	movlb	57	; () banked
 36634  01C646  93A2               	bcf	162,1,b	;volatile
 36635                           
 36636                           ; BSR set to: 57
 36637  01C648  0011               	retfie		f
 36638  01C64A                     __end_of_DMA1_DMADCNT_ISR:
 36639                           	opt callstack 0
 36640                           
 36641 ;; *************** function _DMA1_DMAA_ISR *****************
 36642 ;; Defined at:
 36643 ;;		line 143 in file "mcc_generated_files/dma1.c"
 36644 ;; Parameters:    Size  Location     Type
 36645 ;;		None
 36646 ;; Auto vars:     Size  Location     Type
 36647 ;;		None
 36648 ;; Return value:  Size  Location     Type
 36649 ;;                  1    wreg      void 
 36650 ;; Registers used:
 36651 ;;		None
 36652 ;; Tracked objects:
 36653 ;;		On entry : 0/0
 36654 ;;		On exit  : 3F/39
 36655 ;;		Unchanged: 0/0
 36656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36661 ;;Total ram usage:        0 bytes
 36662 ;; Hardware stack levels used:    1
 36663 ;; This function calls:
 36664 ;;		Nothing
 36665 ;; This function is called by:
 36666 ;;		Interrupt level 2
 36667 ;; This function uses a non-reentrant model
 36668 ;;
 36669                           
 36670                           	psect	text182
 36671  01C64C                     __ptext182:
 36672                           	opt callstack 0
 36673  01C64C                     _DMA1_DMAA_ISR:
 36674                           	opt callstack 4
 36675                           
 36676                           ; BSR set to: 57
 36677                           ;incstack = 0
 36678  01C64C  EE14  F15E         	lfsr	1,___inthi_sp
 36679                           
 36680                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 36681  01C650  0139               	movlb	57	; () banked
 36682  01C652  97A2               	bcf	162,3,b	;volatile
 36683                           
 36684                           ; BSR set to: 57
 36685  01C654  0011               	retfie		f
 36686  01C656                     __end_of_DMA1_DMAA_ISR:
 36687                           	opt callstack 0
 36688                           
 36689 ;; *************** function _DMA1_DMAOR_ISR *****************
 36690 ;; Defined at:
 36691 ;;		line 154 in file "mcc_generated_files/dma1.c"
 36692 ;; Parameters:    Size  Location     Type
 36693 ;;		None
 36694 ;; Auto vars:     Size  Location     Type
 36695 ;;		None
 36696 ;; Return value:  Size  Location     Type
 36697 ;;                  1    wreg      void 
 36698 ;; Registers used:
 36699 ;;		None
 36700 ;; Tracked objects:
 36701 ;;		On entry : 0/0
 36702 ;;		On exit  : 3F/39
 36703 ;;		Unchanged: 0/0
 36704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36709 ;;Total ram usage:        0 bytes
 36710 ;; Hardware stack levels used:    1
 36711 ;; This function calls:
 36712 ;;		Nothing
 36713 ;; This function is called by:
 36714 ;;		Interrupt level 2
 36715 ;; This function uses a non-reentrant model
 36716 ;;
 36717                           
 36718                           	psect	text183
 36719  01C658                     __ptext183:
 36720                           	opt callstack 0
 36721  01C658                     _DMA1_DMAOR_ISR:
 36722                           	opt callstack 4
 36723                           
 36724                           ; BSR set to: 57
 36725                           ;incstack = 0
 36726  01C658  EE14  F15E         	lfsr	1,___inthi_sp
 36727                           
 36728                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 36729  01C65C  0139               	movlb	57	; () banked
 36730  01C65E  95A2               	bcf	162,2,b	;volatile
 36731                           
 36732                           ; BSR set to: 57
 36733  01C660  0011               	retfie		f
 36734  01C662                     __end_of_DMA1_DMAOR_ISR:
 36735                           	opt callstack 0
 36736                           
 36737                           ;
 36738                           ; Interrupt Vector Table @ 0x8
 36739                           ;
 36740                           
 36741                           	psect	ivt0x8
 36742  000008                     __pivt0x8:
 36743                           	opt callstack 0
 36744  000008                     ivt0x8_base:
 36745                           	opt callstack 0
 36746                           
 36747                           ; Vector 0 : SWINT
 36748  000008  71A9               	dw	_Default_ISR shr (0+2)
 36749                           
 36750                           ; Vector 1 : HLVD
 36751  00000A  71A9               	dw	_Default_ISR shr (0+2)
 36752                           
 36753                           ; Vector 2 : OSF
 36754  00000C  71A9               	dw	_Default_ISR shr (0+2)
 36755                           
 36756                           ; Vector 3 : CSW
 36757  00000E  71A9               	dw	_Default_ISR shr (0+2)
 36758                           
 36759                           ; Vector 4 : NVM
 36760  000010  71A9               	dw	_Default_ISR shr (0+2)
 36761                           
 36762                           ; Vector 5 : SCAN
 36763  000012  71A9               	dw	_Default_ISR shr (0+2)
 36764                           
 36765                           ; Vector 6 : CRC
 36766  000014  71A9               	dw	_Default_ISR shr (0+2)
 36767                           
 36768                           ; Vector 7 : IOC
 36769  000016  71A9               	dw	_Default_ISR shr (0+2)
 36770                           
 36771                           ; Vector 8 : INT0
 36772  000018  7183               	dw	_INT0_ISR shr (0+2)
 36773                           
 36774                           ; Vector 9 : ZCD
 36775  00001A  71A9               	dw	_Default_ISR shr (0+2)
 36776                           
 36777                           ; Vector 10 : AD
 36778  00001C  6FF9               	dw	_ADCC_ISR shr (0+2)
 36779                           
 36780                           ; Vector 11 : ADT
 36781  00001E  6CF8               	dw	_ADCC_ThresholdISR shr (0+2)
 36782                           
 36783                           ; Vector 12 : CMP1
 36784  000020  71A9               	dw	_Default_ISR shr (0+2)
 36785                           
 36786                           ; Vector 13 : SMT1
 36787  000022  71A9               	dw	_Default_ISR shr (0+2)
 36788                           
 36789                           ; Vector 14 : SMT1PRA
 36790  000024  71A9               	dw	_Default_ISR shr (0+2)
 36791                           
 36792                           ; Vector 15 : SMT1PRW
 36793  000026  71A9               	dw	_Default_ISR shr (0+2)
 36794                           
 36795                           ; Vector 16 : DMA1SCNT
 36796  000028  7187               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 36797                           
 36798                           ; Vector 17 : DMA1DCNT
 36799  00002A  7190               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 36800                           
 36801                           ; Vector 18 : DMA1OR
 36802  00002C  7196               	dw	_DMA1_DMAOR_ISR shr (0+2)
 36803                           
 36804                           ; Vector 19 : DMA1A
 36805  00002E  7193               	dw	_DMA1_DMAA_ISR shr (0+2)
 36806                           
 36807                           ; Vector 20 : SPI1RX
 36808  000030  71A9               	dw	_Default_ISR shr (0+2)
 36809                           
 36810                           ; Vector 21 : SPI1TX
 36811  000032  71A9               	dw	_Default_ISR shr (0+2)
 36812                           
 36813                           ; Vector 22 : SPI1
 36814  000034  71A9               	dw	_Default_ISR shr (0+2)
 36815                           
 36816                           ; Vector 23 : I2C1RX
 36817  000036  71A9               	dw	_Default_ISR shr (0+2)
 36818                           
 36819                           ; Vector 24 : I2C1TX
 36820  000038  71A9               	dw	_Default_ISR shr (0+2)
 36821                           
 36822                           ; Vector 25 : I2C1
 36823  00003A  71A9               	dw	_Default_ISR shr (0+2)
 36824                           
 36825                           ; Vector 26 : I2C1E
 36826  00003C  71A9               	dw	_Default_ISR shr (0+2)
 36827                           
 36828                           ; Vector 27 : U1RX
 36829  00003E  7092               	dw	_UART1_rx_vect_isr shr (0+2)
 36830                           
 36831                           ; Vector 28 : U1TX
 36832  000040  71A9               	dw	_Default_ISR shr (0+2)
 36833                           
 36834                           ; Vector 29 : U1E
 36835  000042  71A9               	dw	_Default_ISR shr (0+2)
 36836                           
 36837                           ; Vector 30 : U1
 36838  000044  71A9               	dw	_Default_ISR shr (0+2)
 36839                           
 36840                           ; Vector 31 : TMR0
 36841  000046  71A9               	dw	_Default_ISR shr (0+2)
 36842                           
 36843                           ; Vector 32 : TMR1
 36844  000048  71A9               	dw	_Default_ISR shr (0+2)
 36845                           
 36846                           ; Vector 33 : TMR1G
 36847  00004A  71A9               	dw	_Default_ISR shr (0+2)
 36848                           
 36849                           ; Vector 34 : TMR2
 36850  00004C  71A9               	dw	_Default_ISR shr (0+2)
 36851                           
 36852                           ; Vector 35 : CCP1
 36853  00004E  71A9               	dw	_Default_ISR shr (0+2)
 36854                           
 36855                           ; Vector 36 : Undefined
 36856  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 36857                           
 36858                           ; Vector 37 : NCO1
 36859  000052  71A9               	dw	_Default_ISR shr (0+2)
 36860                           
 36861                           ; Vector 38 : CWG1
 36862  000054  71A9               	dw	_Default_ISR shr (0+2)
 36863                           
 36864                           ; Vector 39 : CLC1
 36865  000056  71A9               	dw	_Default_ISR shr (0+2)
 36866                           
 36867                           ; Vector 40 : INT1
 36868  000058  6F29               	dw	_INT1_ISR shr (0+2)
 36869                           
 36870                           ; Vector 41 : CMP2
 36871  00005A  71A9               	dw	_Default_ISR shr (0+2)
 36872                           
 36873                           ; Vector 42 : DMA2SCNT
 36874  00005C  71A9               	dw	_Default_ISR shr (0+2)
 36875                           
 36876                           ; Vector 43 : DMA2DCNT
 36877  00005E  71A9               	dw	_Default_ISR shr (0+2)
 36878                           
 36879                           ; Vector 44 : DMA2OR
 36880  000060  71A9               	dw	_Default_ISR shr (0+2)
 36881                           
 36882                           ; Vector 45 : DMA2A
 36883  000062  71A9               	dw	_Default_ISR shr (0+2)
 36884                           
 36885                           ; Vector 46 : I2C2RX
 36886  000064  71A9               	dw	_Default_ISR shr (0+2)
 36887                           
 36888                           ; Vector 47 : I2C2TX
 36889  000066  71A9               	dw	_Default_ISR shr (0+2)
 36890                           
 36891                           ; Vector 48 : I2C2
 36892  000068  71A9               	dw	_Default_ISR shr (0+2)
 36893                           
 36894                           ; Vector 49 : I2C2E
 36895  00006A  71A9               	dw	_Default_ISR shr (0+2)
 36896                           
 36897                           ; Vector 50 : U2RX
 36898  00006C  70A6               	dw	_UART2_rx_vect_isr shr (0+2)
 36899                           
 36900                           ; Vector 51 : U2TX
 36901  00006E  709C               	dw	_UART2_tx_vect_isr shr (0+2)
 36902                           
 36903                           ; Vector 52 : U2E
 36904  000070  71A9               	dw	_Default_ISR shr (0+2)
 36905                           
 36906                           ; Vector 53 : U2
 36907  000072  71A9               	dw	_Default_ISR shr (0+2)
 36908                           
 36909                           ; Vector 54 : TMR3
 36910  000074  64E7               	dw	_TMR3_ISR shr (0+2)
 36911                           
 36912                           ; Vector 55 : TMR3G
 36913  000076  71A9               	dw	_Default_ISR shr (0+2)
 36914                           
 36915                           ; Vector 56 : TMR4
 36916  000078  71A9               	dw	_Default_ISR shr (0+2)
 36917                           
 36918                           ; Vector 57 : CCP2
 36919  00007A  71A9               	dw	_Default_ISR shr (0+2)
 36920                           
 36921                           ; Vector 58 : Undefined
 36922  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 36923                           
 36924                           ; Vector 59 : CWG2
 36925  00007E  71A9               	dw	_Default_ISR shr (0+2)
 36926                           
 36927                           ; Vector 60 : CLC2
 36928  000080  71A9               	dw	_Default_ISR shr (0+2)
 36929                           
 36930                           ; Vector 61 : INT2
 36931  000082  71A9               	dw	_Default_ISR shr (0+2)
 36932                           
 36933                           ; Vector 62 : Undefined
 36934  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 36935                           
 36936                           ; Vector 63 : Undefined
 36937  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 36938                           
 36939                           ; Vector 64 : Undefined
 36940  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 36941                           
 36942                           ; Vector 65 : Undefined
 36943  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 36944                           
 36945                           ; Vector 66 : Undefined
 36946  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 36947                           
 36948                           ; Vector 67 : Undefined
 36949  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 36950                           
 36951                           ; Vector 68 : Undefined
 36952  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 36953                           
 36954                           ; Vector 69 : Undefined
 36955  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 36956                           
 36957                           ; Vector 70 : TMR5
 36958  000094  68E6               	dw	_TMR5_ISR shr (0+2)
 36959                           
 36960                           ; Vector 71 : TMR5G
 36961  000096  71A9               	dw	_Default_ISR shr (0+2)
 36962                           
 36963                           ; Vector 72 : TMR6
 36964  000098  713C               	dw	_TMR6_ISR shr (0+2)
 36965                           
 36966                           ; Vector 73 : CCP3
 36967  00009A  71A9               	dw	_Default_ISR shr (0+2)
 36968                           
 36969                           ; Vector 74 : CWG3
 36970  00009C  71A9               	dw	_Default_ISR shr (0+2)
 36971                           
 36972                           ; Vector 75 : CLC3
 36973  00009E  71A9               	dw	_Default_ISR shr (0+2)
 36974                           
 36975                           ; Vector 76 : Undefined
 36976  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 36977                           
 36978                           ; Vector 77 : Undefined
 36979  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 36980                           
 36981                           ; Vector 78 : Undefined
 36982  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 36983                           
 36984                           ; Vector 79 : Undefined
 36985  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 36986                           
 36987                           ; Vector 80 : CCP4
 36988  0000A8  71A9               	dw	_Default_ISR shr (0+2)
 36989                           
 36990                           ; Vector 81 : CLC4
 36991  0000AA  71A9               	dw	_Default_ISR shr (0+2)
 36992  0000AC                     ivt0x8_undefint:
 36993                           	opt callstack 0
 36994  0000AC  00FF               	reset	
 36995                           
 36996                           	psect	text184
 36997  000000                     __ptext184:
 36998                           	opt callstack 0
 36999                           
 37000                           	psect	rparam
 37001  0000                     
 37002                           	psect	temp
 37003  000001                     btemp:
 37004                           	opt callstack 0
 37005  000001                     	ds	32
 37006  0000                     wtemp0	set	btemp
 37007  0000                     wtemp1	set	btemp+2
 37008  0000                     wtemp2	set	btemp+4
 37009  0000                     wtemp3	set	btemp+6
 37010  0000                     wtemp4	set	btemp+8
 37011  0000                     wtemp5	set	btemp+10
 37012  0000                     wtemp8	set	btemp+1
 37013  0000                     ttemp0	set	btemp
 37014  0000                     ttemp1	set	btemp+3
 37015  0000                     ttemp2	set	btemp+6
 37016  0000                     ttemp3	set	btemp+9
 37017  0000                     ttemp5	set	btemp+1
 37018  0000                     ttemp6	set	btemp+4
 37019  0000                     ttemp7	set	btemp+8
 37020  0000                     ltemp0	set	btemp
 37021  0000                     ltemp1	set	btemp+4
 37022  0000                     ltemp2	set	btemp+8
 37023  0000                     lltemp0	set	btemp
 37024  0000                     lltemp1	set	btemp+8
 37025  0000                     lltemp2	set	btemp+16
 37026  0000                     lltemp3	set	btemp+24
 37027                           tosu	equ	0x3FFF
 37028                           tosh	equ	0x3FFE
 37029                           tosl	equ	0x3FFD
 37030                           stkptr	equ	0x3FFC
 37031                           pclatu	equ	0x3FFB
 37032                           pclath	equ	0x3FFA
 37033                           pcl	equ	0x3FF9
 37034                           tblptru	equ	0x3FF8
 37035                           tblptrh	equ	0x3FF7
 37036                           tblptrl	equ	0x3FF6
 37037                           tablat	equ	0x3FF5
 37038                           prodh	equ	0x3FF4
 37039                           prodl	equ	0x3FF3
 37040                           indf0	equ	0x3FEF
 37041                           postinc0	equ	0x3FEE
 37042                           postdec0	equ	0x3FED
 37043                           preinc0	equ	0x3FEC
 37044                           plusw0	equ	0x3FEB
 37045                           fsr0h	equ	0x3FEA
 37046                           fsr0l	equ	0x3FE9
 37047                           wreg	equ	0x3FE8
 37048                           indf1	equ	0x3FE7
 37049                           postinc1	equ	0x3FE6
 37050                           postdec1	equ	0x3FE5
 37051                           preinc1	equ	0x3FE4
 37052                           plusw1	equ	0x3FE3
 37053                           fsr1h	equ	0x3FE2
 37054                           fsr1l	equ	0x3FE1
 37055                           bsr	equ	0x3FE0
 37056                           indf2	equ	0x3FDF
 37057                           postinc2	equ	0x3FDE
 37058                           postdec2	equ	0x3FDD
 37059                           preinc2	equ	0x3FDC
 37060                           plusw2	equ	0x3FDB
 37061                           fsr2h	equ	0x3FDA
 37062                           fsr2l	equ	0x3FD9
 37063                           status	equ	0x3FD8


Data Sizes:
    Strings     1076
    Constant    492
    Data        1072
    BSS         1305
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     25      39
    BANK0           160     25     158
    BANK1           256      0     253
    BANK2           256      0     231
    BANK3           256      0     198
    BANK4           256      0     255
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_101(CODE[1]), STR_63(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_98(CODE[3]), STR_94(CODE[3]), STR_89(CODE[3]), STR_84(CODE[3]), 
		 -> STR_79(CODE[3]), STR_75(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_98(CODE[3]), STR_94(CODE[3]), STR_89(CODE[3]), STR_84(CODE[3]), 
		 -> STR_79(CODE[3]), STR_75(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_64(CODE[127]), STR_62(CODE[3]), STR_61(CODE[3]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), 
		 -> STR_48(CODE[19]), STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[29]), STR_35(CODE[23]), 
		 -> STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), 
		 -> STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_64(CODE[127]), STR_62(CODE[3]), STR_61(CODE[3]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), 
		 -> STR_48(CODE[19]), STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[29]), STR_35(CODE[23]), 
		 -> STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), 
		 -> STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_46(CODE[9]), STR_45(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_46(CODE[9]), STR_45(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_70(CODE[4]), STR_69(CODE[4]), STR_66(CODE[4]), STR_65(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_70(CODE[4]), STR_69(CODE[4]), STR_66(CODE[4]), STR_65(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_44(CODE[3]), STR_43(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_64(CODE[127]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), 
		 -> STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[29]), 
		 -> STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), 
		 -> STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S6463_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_64(CODE[127]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[29]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    f1p	PTR  size(2) Largest target is 299
		 -> C(BIGRAM[299]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_64(CODE[127]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[29]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 127
		 -> STR_64(CODE[127]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[29]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_46(CODE[9]), STR_45(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_46(CODE[9]), STR_45(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_46(CODE[9]), 
		 -> STR_45(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> STR_3(CODE[5]), V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__hid_input	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    S4870tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_46(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_45(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[191]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[191]), 

    sp__hid_display	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1995spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1995spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  471724
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                            _set_dac
                          _set_dac_a
                          _set_dac_b
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _set_dac_b                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (1) _set_dac_a                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (2) _convert_dac_raw                                      4     0      4    1578
                            ___fldiv
                             ___flge
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _set_dac                                              0     0      0      44
                  _SPI1_Exchange8bit
                    _dac_spi_control
 ---------------------------------------------------------------------------------
 (2) _dac_spi_control                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8435
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         7     3      4     136
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          2     0      2     771
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            2     0      2     237
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31221
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  248792
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0  124143
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (18) _sprintf                                           104    10     94   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   94094
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   93830
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31190
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1   31115
                             _printf
                     _ringBufS_flush
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INT1_ISR                                            4     4      0     205
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT1_CallBack                                       0     0      0     205
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (17) _switch_handler                                      2     2      0     205
 ---------------------------------------------------------------------------------
 (17) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR5_ISR                                           15    15      0    5521
                                             10 COMRAM    15    15      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR5_CallBack                                       0     0      0    5431
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultInterruptHandler                        0     0      0    5431
                     _check_day_time
 ---------------------------------------------------------------------------------
 (18) _check_day_time                                      4     4      0    5431
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
 ---------------------------------------------------------------------------------
 (19) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR3_ISR                                           25    25      0   35586
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR3_CallBack                                       0     0      0   35496
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (17) _calc_bsoc                                           6     6      0   35496
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _sprintf                                           104    10     94   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (18) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (18) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (17) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (28) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (28) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 27
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_dac
     _SPI1_Exchange8bit
     _dac_spi_control
   _set_dac_a
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_dac_b
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
       _wdtdelay
     _wait_lcd_done
       _wdtdelay
   _wait_lcd_done
     _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     50D      69       15.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      FF      13       99.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C6      11       77.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E7       9       90.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FD       7       98.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      9E       5       98.8%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     19      27       1       61.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     46E      58        0.0%
DATA                 0      0     97B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Feb  6 02:24:29 2020

                     _SPI1_Exchange8bit C43E                __end_of_set_display_info C4B6  
                                     _C 06FF                                       _D 082A  
                                     _H 01C6                                       _P 01F1  
                                     _R 00AF                                       _S 0254  
                                     _T FAAF                                       _V 0107  
      __end_of_TMR5_SetInterruptHandler C17E            __end_of_start_switch_handler C41E  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FBB7                  __end_of_FVR_Initialize C68A  
                        _check_day_time 8A8A                             __CFG_LVP$ON 000000  
                                   l169 C576                                     l807 C44C  
                                   l673 C036                                     _GIE 01FE97  
                                   _abs BA52                                     _pad 9E88  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize C522  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack C350  
                     _update_adc_result BCE2                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 00BA                           _INT1_CallBack C2E4  
                          __CFG_ZCD$OFF 000000                                    l1002 BC5E  
                                  l1332 12A2                                    l2141 3AB4  
                                  l1190 BC9E                                    l2302 123A  
                                  l2062 9A00                                    l1350 1906  
                                  l2071 84B2                                    l3040 4DE2  
                                  l2145 3DF2                                    l3121 4626  
                                  l1601 AF00                                    l2331 066A  
                       _timer3ReloadVal 009E                                    l3052 4C72  
                                  l2420 6132                                    l1348 1902  
                                  l2405 6858                                    l2246 9EE4  
                                  l1374 23AC                                    l1358 19A6  
                                  l3223 7BEC                                    l1616 BDDA  
                                  l1368 1BAA                                    l3161 88C4  
                                  l1369 1DD2                                    l2266 5900  
                                  l2346 0B1A                                    l2187 7440  
                                  l1732 C4B2                                    l3085 535C  
                                  l1469 B702                                    l2470 338E  
                                  l1816 581C                                    l3192 BA92  
                                  l2800 922E                                    l3184 8DB6  
                                  l2384 752E                                    l1675 BD38  
                                  l1932 8A80                                    l3292 9C4E  
                                  l1692 A0A8                                    l1684 856A  
                                  l1597 ABE6                                    l1685 86C6  
                  _ADCC_StartConversion C590                                    l1856 B21E  
                                  l1872 A9D8                                    l2762 A7B8  
                                  l2773 9390                                    l2766 92BC  
                                  l3574 B120                                    l3559 8292  
                                  l1992 8C20                                    l8010 495C  
                                  l3587 B09C                                    l1979 A1CA  
                                  l1996 8C18                                    l8020 49CE  
                                  l8030 4A0A                                    l8112 4CE0  
                                  l8024 49EE                                    l8026 4A00  
                                  l8034 4A3A                                    l8140 4D92  
                                  l8124 4D3E                                    l8108 4CDA  
                                  l8052 4AD6                                    l8134 4D6A  
                                  l8054 4AE8                                    l8062 4B24  
                                  l8222 BA82                                    l8302 67EA  
                                  l8240 8D58                                    l8320 B08C  
                                  l8146 4DC2                                    l8138 4D82  
                                  l8074 4BFC                                    l8058 4AF2  
                                  l8092 4C94                                    l8084 4C56  
                                  l8076 4C22                                    l8236 8D54  
                                  l8094 4CA6                                    l8502 5196  
                                  l8422 4E82                                    l8342 77B8  
                                  l8246 8DAE                                    l8600 3FA0  
                                  l8512 51D8                                    l8416 4E42  
                                  l8360 78D0                                    l8336 7764  
                                  l8264 B110                                    l8098 4CB2  
                                  l8522 5222                                    l8442 4F60  
                                  l8426 4E98                                    l8508 51B2  
                                  l8460 501E                                    l8436 4F20  
                                  l8428 4EC8                                    l8348 77FE  
                                  l8380 7E9A                                    l8292 66E4  
                                  l8542 52D8                                    l8526 5228  
                                  l8454 4FE4                                    l8446 4F76  
                                  l7910 AD62                                    l8294 6734  
                                  l8278 65C6                                    l8712 45D4  
                                  l8704 4590                                    l8608 3FC2  
                                  l8536 529C                                    l8448 4FA6  
                                  l7912 AD84                                    l8714 45EE  
                                  l8554 5330                                    l8298 677C  
                                  l8660 441A                                    l8580 3EA2  
                                  l8572 3E5C                                    l8556 5340  
                                  l8548 5308                                    l8468 5038  
                                  l8396 7FCE                                    l8388 7F22  
                                  l8740 9538                                    l8670 445C  
                                  l8590 3F2A                                    l8582 3ED2  
                                  l7950 470C                                    l8830 927A  
                                  l8494 5164                                    l8486 50FE  
                                  l8478 50C8                                    l9550 7A5E  
                                  l9534 799C                                    l8734 9522  
                                  l8806 9E6E                                    l8822 A7B6  
                                  l8814 A740                                    l8680 44A6  
                                  l7944 46C6                                    l8840 9358  
                                  l8488 5110                                    l8496 5168  
                                  l9560 7B40                                    l9552 7A76  
                                  l9544 7A32                                    l9536 79BE  
                                  l8760 95FE                                    l8666 4436  
                                  l8578 3E9C                                    l7962 4776  
                                  l7938 4686                                    l9570 7BDC  
                                  l9554 7A9A                                    l8746 9558  
                                  l8818 A782                                    l8906 8F94  
                                  l8930 97C8                                    l8684 44AC  
                                  l8596 3F6A                                    l7980 481E  
                                  l7972 47CC                                    l7956 4744  
                                  l7948 46DC                                    l8836 930A  
                                  l9556 7AD8                                    l8780 9D90  
                                  l8694 4520                                    l8598 3F70  
                                  l7974 47FC                                    l9902 5398  
                                  l8918 9066                                    l7968 47B6  
                                  l8848 938E                                    l9912 54BE  
                                  l8768 9632                                    l8784 9DA2  
                                  l8856 B950                                    l8698 4566  
                                  l8954 B7EE                                    l8890 91C6  
                                  l8882 919A                                    l8866 9118  
                                  l9586 8104                                    l8938 9874  
                                  l9852 8780                                    l9844 8714  
                                  l9924 55D2                                    l9916 55A0  
                                  l8788 9DBA                                    l8892 91DC  
                                  l8884 91B6                                    l9588 8170  
                                  l9854 878E                                    l9942 57EA  
                                  l9950 57FC                                    l8798 9E3A  
                                  STR_1 FF1E                                    l9864 87F0  
                                  l9856 87A4                                    l9936 574E  
                                  l9928 566E                                    STR_2 FF09  
                                  STR_3 FFD2                                    l9866 880E  
                                  l9858 87C2                                    STR_4 FECA  
                                  STR_5 FEA0                                    l9876 8842  
                                  l9868 8824                                    STR_6 FEA0  
                                  STR_7 FEA0                                    l9886 88A4  
                                  STR_8 FEB5                                    STR_9 FC9B  
                                  l9896 5368                                    l9968 C0AE  
                                  _LATA 003FBA                                    _LATB 003FBB  
                                  _LATC 003FBC                                    _LATD 003FBD  
                                  _LATE 003FBE                                    _LATF 003FBF  
                                  _T2PR 003FAB                                    u6000 BF1E  
                                  u6100 BA66                                    u6110 8CD8  
                                  u6200 B0CE                                    u7010 449E  
                                  u6210 B0D0                                    _T6PR 003F93  
                                  u6115 8CCE                                    u6300 6762  
                                  _PMD0 0039C0                                    _PMD1 0039C1  
                                  u6230 655E                                    _PMD2 0039C2  
                                  _PMD3 0039C3                                    u5520 ADB2  
                                  u7120 9584                                    u6160 8DA6  
                                  u6240 65AA                                    _PMD4 0039C4  
                                  u6305 6758                                    _PMD5 0039C5  
                                  u7050 44FA                                    u6410 775E  
                                  u7210 9E5A                                    u6170 8DA8  
                                  u6330 BB16                                    _PMD6 0039C6  
                                  u6155 8D88                                    u6235 6554  
                                  _PMD7 0039C7                                    u7060 4534  
                                  u6500 795A                                    u7140 961E  
                                  u6340 BB18                                    u7070 457A  
                                  u5710 4A32                                    u6430 77B4  
                                  u7310 B94C                                    u5550 BF4C  
                                  u6350 B04A                                    u7055 44EA  
                                  u5527 ADA4                                    u5720 4A52  
                                  u7320 90F8                                    u6280 668A  
                                  u5560 BF4E                                    u6360 B04C  
                                  u6441 77BE                                    u6265 65E4  
                                  u6450 77F8                                    u6610 8058  
                                  u6530 7E94                                    u7250 A7B2  
                                  u7410 920E                                    u7330 910C  
                                  u6266 65EA                                    u5715 4A22  
                                  u6267 65F8                                    u5820 4C44  
                                  u5660 4982                                    u6380 BF7C  
                                  u6460 782A                                    u7340 9146  
                                  u7325 90EE                                    u6285 6680  
                                  u7421 8F54                                    u5670 49A2  
                                  u6390 BF7E                                    u6550 7EEA  
                                  u7190 9DE6                                    u7430 8F8E  
                                  u7510 98AC                                    u5671 499C  
                                  u5920 4D2E                                    u6480 7908  
                                  u6560 7F1C                                    u7440 8FC0  
                                  u7345 913C                                    u7530 B7CA  
                                  u6570 7F4E                                    u5860 4CB8  
                                  u5780 4B1A                                    u9204 5382  
                                  u7540 B7EA                                    u7460 909E  
                                  u5925 4D1E                                    u9205 537C  
                                  u5950 4D4E                                    u6830 5276  
                                  u6750 5190                                    u9310 56B2  
                                  u6590 8006                                    u7390 91E4  
                                  u5880 4CD2                                    u5688 49A4  
                                  u6840 52B0                                    u9160 8838  
                                  u9304 56AA                                    u9224 53B2  
                                  u7480 97C2                                    u5785 4B0A  
                                  u9305 56A4                                    u9225 53AC  
                                  u6850 52EC                                    u7490 97F4  
                                  u6835 5266                                    u6940 3FB0  
                                  u9244 53D4                                    u9245 53CE  
                                  u6790 521A                                    u8710 819E  
                                  u5990 BF1C                                    u9264 55BA  
                                  u8640 7A2E                                    u9265 55B4  
                                  u6955 4144                                    u9540 B4BE  
                                  u9284 5688                                    u8660 7B86  
                                  u6965 420C                                    u9285 5682  
                                  u8717 8190                                    u8670 7B88  
                                  u8750 8238                                    u6975 43D4  
                                  u9615 C5BC                                    u9800 C3C6  
                                  u8760 8266                                    u9616 C5BE  
                                  u9625 C5AC                                    u8770 C39E  
                                  u9626 C5AE                                    _PLLR 01CEE0  
                                  u8755 8232                                    u9660 88E4  
                                  u9565 B4F2                                    u9485 BB52  
                                  u8757 8224                                    u9566 B4F4  
                                  u9558 B4C0                                    u9806 C3C8  
                                  u8767 8258                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR C010  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0297  
                                  _cp_h FBC7                                    _cp_l FBC3  
                                  _atoi 7982                                    _ctoa AF9A  
                                  _main 1244                                    _dtoa 5822  
                                  _nanf B5DC                                    _seed 01F5  
                                  _prec 003C                                    _nout 009A  
                                  _spin FB3F                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 7444                                    btemp 0001  
                                  _utoa 6814                                    _xtoa 60EE  
                __end_of_check_adc_scan C672                           ___fpclassifyf 8C2A  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 00A2  
             __end_of_SPI1_Exchange8bit C45C               __size_of_clear_hid_pflags 0066  
                       _TMR3_Initialize BA0A             __size_of_set_load_relay_one 0010  
           __size_of_set_load_relay_two 0010                           __CFG_CSWEN$ON 000000  
                        _SPI1STATUSbits 003D17                       _UART1_rx_vect_isr C248  
                          ___param_bank 000000                  __end_of_check_day_time 8C2A  
                    ?_UART1_rx_vect_isr 0021                        __end_of_INT0_ISR C61A  
                      __end_of_INT1_ISR BCE2          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma ABEE           __end_of_OSCILLATOR_Initialize C57C  
                                 l11000 C3F8                                   l11012 C032  
                                 l10056 8B54                                   l10144 BFC8  
                                 l11202 A29C                                   l10068 8BC6  
                                 l11038 BC46                                   l10086 BDE4  
                                 l11310 A8C0                                   l11056 BC86  
                                 l13000 3316                                   l12200 70EE  
                                 l11224 7188                                   l10178 B82A  
                                 l13010 333A                                   l11306 A882  
                                 l11250 722C                                   l11234 71CE  
                                 l11226 7198                                   l12212 9EB4  
                                 l13004 331A                                   l11244 7204  
                                 l11228 719E                                   l12222 9F2A  
                                 l11270 72AC                                   l11262 7286  
                                 l11254 7238                                   l11238 71DA  
                                 l10800 9674                                   l10640 8932  
                                 l10632 8906                                   l12160 ADEE  
                                 l12216 9EDC                                   l12232 A5A2  
                                 l12400 0396                                   l13202 38DC  
                                 l10802 967A                                   l11354 60E0  
                                 l12226 9F74                                   l12218 9EEE  
                                 l12250 AFB8                                   l12322 5C58  
                                 l12410 04D2                                   l13050 AB06  
                                 l10572 B888                                   l13220 3AE6  
                                 l13212 3A1C                                   l10820 96FA  
                                 l10804 9688                                   l10812 9690  
                                 l10644 8946                                   l11188 8F20  
                                 l12148 9B64                                   l12164 AE2C  
                                 l12252 AFE4                                   l12404 0406  
                                 l12180 6F18                                   l13028 ACEE  
                                 l13108 9FC0                                   l10724 BD02  
                                 l11292 7406                                   l11196 A1EA  
                                 l13206 3956                                   l10814 96C2  
                                 l12318 5C1C                                   l12502 0B12  
                                 l12422 0554                                   l12406 0470  
                                 l11294 7430                                   l10568 B856  
                                 l13232 3DEA                                   l13216 3AC4  
                                 l12504 0B34                                   l12336 00AC  
                                 l13048 AAC4                                   l12192 7040  
                                 l13072 ABF2                                   l10760 B1F4  
                                 l11482 B16E                                   l10682 BD4E  
                                 l12602 10E2                                   l12530 0CBA  
                                 l12442 05F6                                   l12434 0594  
                                 l12426 057C                                   l12370 022C  
                                 l12186 6FD6                                   l13074 ABFA  
                                 l13154 999A                                   l13330 83A4  
                                 l13314 82B0                                   l11476 B15E  
                                 l13180 3542                                   l13172 3482  
                                 l10828 9774                                   l12284 593A  
                                 l12276 58F0                                   l12460 06B8  
                                 l12444 0602                                   l12428 058E  
                                 l12348 00F0                                   l12356 0146  
                                 l13076 AC04                                   l13084 AC1A  
                                 l13148 9934                                   l13340 847C  
                                 l10940 A850                                   l10748 B1DC  
                                 l10772 9D1C                                   PRLOCK 0039EF  
                                 l12518 0C32                                   l12470 077A  
                                 l12366 01EA                                   l12374 0258  
                                 l13078 AC12                                   l13086 AC46  
                                 l13192 36B0                                   l13184 35AE  
                                 l13176 34D6                                   l12288 5958  
                                 l12480 0926                                   l12464 06F0  
                                 l12384 02FC                                   l12392 032A  
                                 l12368 0216                                   l10936 A7D4  
                                 l10768 9CBA                                   l12298 5B6A  
                                 l12618 119A                                   l12538 0D24  
                                 l12546 0D90                                   l12554 0EA2  
                                 l12730 6122                                   l13506 1472  
                                 l13196 3704                                   l12580 0FD6  
                                 l12708 6A9A                                   l13700 2382  
                                 l13452 12AA                                   l10798 9664  
                                 l13358 B302                                   l12582 0FF0  
                                 l12566 0F3A                                   l12494 0A48  
                                 l12662 75D0                                   l12654 7564  
                                 l12638 74B0                                   l12750 61F8  
                                 l12742 6198                                   l12830 2508  
                                 l13710 23D8                                   l13630 200E  
                                 l13606 19B6                                   l13454 12BC  
                                 l13446 1284                                   l12592 1092  
                                 l12672 7686                                   l12736 615C  
                                 l12912 2BEE                                   l12904 2B36  
                                 l12832 251E                                   l13384 853A  
                                 l13552 16DA                                   l13448 128C  
                                 l12658 75A0                                   l12690 6848  
                                 l12850 2650                                   l13634 206E  
                                 l13618 1AB6                                   l12676 76C2  
                                 l12668 765A                                   l12916 2C22  
                                 l12852 268A                                   l12828 24CE  
                                 l13660 2284                                   l13644 2202  
                                 l13564 17B4                                   l12790 645E  
                                 l12766 62EE                                   l12774 6374  
                                 l12870 2804                                   l12854 26A0  
                                 l13398 8662                                   l13646 222E  
                                 l13574 190A                                   l12936 2D82  
                                 l12880 289C                                   l13672 22D6  
                                 l13576 1938                                   l12698 68A4  
                                 l12946 2E30                                   l13690 233E  
                                 l13682 2314                                   l12980 3184  
                                 l12956 2F52                                   l12892 29DC  
                                 l13596 1992                                   l13588 196C  
                                 l12966 3008                                   l12888 2988  
                                 l13696 235C                                   l13688 2326  
                                 l12994 32BC                         __end_of___aodiv 7982  
                          _Volts_to_SOC A7C2                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 4DEC  
                                 _ADCLK 003EFF                         __end_of___aomod 807C  
                                 _ADPCH 003EF1                         __end_of___fldiv 5366  
                                 _ADREF 003EFD                         __end_of___awdiv 964C  
                       __end_of___flneg B97A                                   STR_10 FD56  
                                 STR_11 FE32                                   STR_12 FEDF  
                                 STR_21 FF83                                   STR_13 FEF4  
                                 STR_14 FF48                                   STR_30 FE5E  
                                 STR_22 FE1C                                   STR_15 FF33  
                                 STR_23 FE06                                   STR_31 FD6C  
                                 STR_40 FE8A                                   STR_24 FDF0  
                                 STR_32 FD82                                   STR_16 FD40  
                                 STR_41 FE8A                                   STR_25 FDDA  
                                 STR_33 FD98                                   STR_17 FC67  
                         __CFG_WDTE$OFF 000000                                   STR_50 FFBF  
                                 STR_42 FE8A                                   STR_26 FDC4  
                                 STR_34 FCE4                                   STR_18 FC81  
                                 STR_43 FFFC                                   STR_51 FFA4  
                                 STR_19 FF94                                   STR_27 FDAE  
                                 STR_35 FD29                                   STR_52 FFA4  
                                 STR_44 FFF9                                   STR_28 FE74  
                                 STR_36 FC4A                         __end_of___awmod 9E88  
                                 STR_53 FFA4                                   STR_45 FFB3  
                                 STR_29 FE48                                   STR_37 FCCD  
                                 STR_70 FFE3                                   STR_46 FFC9  
                                 STR_38 FCFB                                   STR_54 FCB5  
                                 STR_63 FC49                                   STR_47 FF5D  
                                 STR_39 FD12                                   STR_48 FF5D  
                                 STR_56 FF70                                   STR_64 FBCB  
                                 _ADRPT 003EEC                                   STR_73 FFEA  
                                 STR_65 FFD7                                   STR_49 FFBF  
                                 STR_82 FFED                                   STR_66 FFDF  
                                 STR_75 FFEA                                   STR_84 FFED  
                                 STR_92 FFF6                                   STR_77 FFF0  
                                 STR_69 FFDB                                   STR_94 FFF6  
                                 STR_79 FFF0                                   STR_87 FFF3  
                                 STR_96 FFE7                         __end_of___flmul 4630  
                                 STR_89 FFF3                                   STR_98 FFE7  
                       __end_of___flsub BADE                         __end_of___fltol 9238  
                                 u11030 7162                                   u11200 5926  
                                 u12000 6108                                   u11210 5B7E  
                                 u11130 5852                                   u11140 5854  
                                 u12100 6370                                   u11221 5BAE  
                                 u11230 5BC4                                   u11310 00DA  
                                 u12110 6390                                   u12030 61F0  
                                 u11231 5BC2                                   u11240 5BD8  
                                 u11160 58C4                                   u11080 A61C  
                                 u12040 6244                                   u12200 2566  
                                 u12121 63C0                                   u12105 6352  
                                 u11250 5BDC                                   u12130 63D6  
                                 u12050 6246                                   u12210 2568  
                       __end_of___lodiv 90C6                                   u12131 63D4  
                                 u11180 58D6                                   u11340 0194  
                                 u12140 63EA                                   u12220 258E  
                                 u11270 5BF2                                   u11430 050E  
                                 u11350 0196                                   u12150 63EE  
                                 u12070 62A4                                   u11087 A60E  
                                 u11600 0A18                                   u12080 62A6  
                                 u12320 28F0                                   u11530 0648  
                                 u12250 26E8                                   u13050 2274  
                                 _U1P1H 003DED                                   u11700 0EE4  
                                 u11460 0562                                   u11380 02A6  
                                 u12340 2A64                                   u12260 26EA  
                                 u13060 228C                                   _U1P2H 003DEF  
                                 u11390 02A8                                   u12270 2710  
                                 u13070 229E                                   _U1P1L 003DEC  
                                 _U1P3H 003DF1                                   _T3CLK 003FA9  
                                 u12440 305C                                   u13056 2276  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 u11490 05C6                                   u12370 2CDC  
                                 u12530 9910                                   u13066 228E  
                                 _U1P3L 003DF0                                   u11900 76E8  
                                 u12460 320C                                   u12380 2CDE  
                                 u13076 22A0                                   u10950 9B58  
                                 _U2P1L 003DD4                                   u11760 10B8  
                                 u11920 682E                                   u12480 ACCE  
                                 u12608 99DE                                   u12560 9976  
                                 _T3CON 003FA6                                   _U2P2L 003DD6  
                                 u10970 9BD4                                   _U2P3L 003DD8  
                                 u11780 116E                                   u11860 75C6  
                                 u12548 9912                                   u11790 1170  
                                 u11870 760C                                   u12590 99DC  
                                 u11951 6ADC                                   _T5CLK 003F9D  
                                 u11960 6AF2                         __end_of___lomod 98CE  
                                 u11961 6AF0                                   u11970 6B06  
                                 u12578 9978                                   u12930 158C  
                                 u11980 6B0A                                   _T2HLT 003FAD  
                                 u11877 75FE                                   u12870 86B2  
                                 u12950 17E2                                   u12880 86B4  
                                 _T5CON 003F9A                                   _T6CON 003F94  
                        __CFG_DEBUG$OFF 000000                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 0085                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 0026                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR3H 003FA5  
                                 _TMR5H 003F99                                   _TMR3L 003FA4  
                                 _TMR5L 003F98               __end_of_update_adc_result BD1C  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR C6A4                 __size_of_clear_adc_scan 0006  
     __size_of_TMR3_SetInterruptHandler 0028       __size_of_TMR6_SetInterruptHandler 0028  
                         __CFG_WRTB$OFF 000000                        __end_of_TMR3_ISR 94FE  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR A47A                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR C50A                            _DMA1CON1bits 003BFD  
            __size_of_send_lcd_data_dma 004A                                   _fabsf A9EA  
                                 _flags 003E                __size_of_calc_model_data 044C  
                          _DMA2CON0bits 003BDC                            _DMA2CON1bits 003BDD  
          __end_of_get_ac_charger_relay C60C                                   _fputc 9B34  
            __size_of_send_lcd_cmd_long 0040                         __end_of_isalpha BB22  
                                 _fputs ADDE                         __end_of_isdigit BF88  
                       __end_of_ivln2_h FBC3                      __CFG_MCLRE$EXTMCLR 000000  
                                 _srand BDF8                                   _width 003A  
                                 _putch C4D4            __end_of_set_ac_charger_relay C5E2  
                       __end_of_islower BF28                         __end_of_isspace B7FE  
              _INT1_SetInterruptHandler C1A6                         __end_of_set_dac A9EA  
                       __end_of_isupper BF58                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0001  
                                 ltemp1 0005                                   ltemp2 0009  
              __size_of_DMA1_Initialize 006A                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0001  
                                 ttemp1 0004                                   ttemp2 0007  
                                 ttemp3 000A                                   ttemp5 0002  
                                 ttemp6 0005                                   ttemp7 0009  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler C12E  
           _UART1_SetRxInterruptHandler C106                                   wtemp0 0001  
                                 wtemp1 0003                                   wtemp2 0005  
                                 wtemp3 0007                                   wtemp4 0009  
                                 wtemp5 000B                                   wtemp8 0002  
                       __end_of_sprintf A1B6                         __end_of_tolower B12A  
                       __end_of_strncmp 829C                         __end_of_toupper B0A6  
             __size_of_DMA1_DMADCNT_ISR 000A               __end_of_UART1_rx_vect_isr C270  
              __size_of_SPI1_Initialize 0016                         _TMR5_Initialize B9C2  
                 __end_of_ringBufS_init C08E                         __initialization A47A  
                     _UART2_rx_vect_isr C298                            __end_of_cp_h FBCB  
                          __end_of_cp_l FBC7                            __end_of_atoi 7BF6  
                          __end_of_ctoa B022                            __end_of_main 23EC  
                          __end_of_dtoa 5CA2                            __end_of_nanf B63E  
                          __end_of_spin FBB7                            __end_of_stoa 7702  
                          __end_of_utoa 6B54                            __end_of_xtoa 64A8  
                        __CFG_SAFEN$OFF 000000                      ?_UART2_rx_vect_isr 0021  
               __end_of_TMR2_Initialize C53A                   __end_of_send_lcd_data C2E4  
              __size_of_DMA2_Initialize 005A              __end_of_check_enter_button B30C  
              _TMR5_SetInterruptHandler C156                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E                   _TMR3_InterruptHandler 007C  
                     _port_data_dma_ptr C634                      esr_check@esr_state 00A4  
                   ??_UART2_rx_vect_isr 0026                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize C03C                         _PWM8_Initialize C550  
                      _UART1_Initialize B97A                       _UART2_tx_vect_isr C270  
                    _UART2_Transmit_ISR C010                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan B516                                  _ADLTHH 003EDF  
                                _ADLTHL 003EDE                                  _ADPREH 003EF7  
                                _ADPREL 003EF6                                  _DMA1PR 0039F3  
                                _DMA2PR 0039F4                                  _ADSTAT 003EFC  
                                _ADUTHH 003EE1                                  _ADUTHL 003EE0  
                    _PWM8_LoadDutyValue BB22                                  _ANSELA 003A40  
                                _ANSELB 003A50                                  _ANSELC 003A60  
                                _ANSELD 003A70                                  _ANSELE 003A80  
                                _ANSELF 003A90                      ?_UART2_tx_vect_isr 0021  
                                _U1CON0 003DF2                                  _U1CON1 003DF3  
                                _U1CON2 003DF4                                  _T3GATE 003FA8  
                                _U1BRGH 003DF6                                  _U1FIFO 003DF7  
                                _T3GCON 003FA7                                  _U2CON0 003DDA  
                                _U2CON1 003DDB                                  _U1BRGL 003DF5  
                                _U2CON2 003DDC                                  _U2BRGH 003DDE  
                                _U2FIFO 003DDF                                  _U2BRGL 003DDD  
                                _T5GATE 003F9C                                  _T5GCON 003F9B  
                                _MAINPR 0039F2                                  _RC3PPS 003A13  
                                _RD1PPS 003A19                                  i1l1019 A42A  
                                _RB6PPS 003A0E                                  i1l1207 9466  
                  _start_switch_handler C3FE                                  _RC5PPS 003A15  
                                _ODCONA 003A42                                  _ODCONB 003A52  
                                _ODCONC 003A62                                  _RC6PPS 003A16  
                                _ODCOND 003A72                                  _ODCONE 003A82  
                                _ODCONF 003A92                 __end_of_TMR3_Initialize BA52  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright C5F0                                  _SCANPR 0039F7  
                                _IVTADH 00389E                                  _IVTADL 00389D  
                                _IVTADU 00389F            __size_of_eaDogM_WriteCommand 000E  
                                _OSCFRQ 0039DF                                  u934_25 C5DC  
                                u934_26 C5DE                                  u960_20 BD5C  
                                u960_26 BD5E                                  u953_20 C608  
                                u939_20 8AE0                    __size_of_hid_display 021C  
                                u981_28 966A                                  u983_20 9684  
                                u983_21 967E                                  u987_24 976A  
                                u987_25 9766                        __end_of___xxtofl 88CE  
 __end_of_ADCC_DischargeSampleCapacitor C66A  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor C662                __end_of_send_lcd_cmd_dma C47A  
                       _TMR3_WriteTimer BC64                     ??_UART2_tx_vect_isr 0026  
             __end_of_UART2_rx_vect_isr C2C0              __size_of_SPI1_Exchange8bit 001E  
                __size_of_DMA1_DMAA_ISR 000A                          __CFG_XINST$OFF 000000  
                     _CLKREF_Initialize C62A                        _UART2_Initialize B63E  
                                _WaitMs BDC2                         _conv_raw_result 5366  
                          _CCPTMRS1bits 003F5F    __size_of_ADCC_SetADIInterruptHandler 0028  
                                ___flge 9238                                  ___fleq A6FE  
                     _ADCC_ThresholdISR B3E0                          __CFG_STVREN$ON 000000  
                        _ringBufS_flush AE76                                  _efgtoa 0000  
                                _floorf 64A8                       dac_spi_control@S0 0042  
                     dac_spi_control@S1 00A8                       dac_spi_control@S2 00A7  
                     dac_spi_control@SB 00A5                       dac_spi_control@SC 00A6  
                    ?_ADCC_ThresholdISR 0021                                  _memset 6E80  
                  __size_of_help_button 0038                                  clear_0 A4EC  
                                clear_1 A500                                  clear_2 A512  
                                clear_3 A51E                                  clear_4 A52A  
                                clear_5 A536                                  clear_6 A542  
             __end_of_port_data_dma_ptr C63E                                  _printf B57A  
                    _eaDogM_WriteString AC96                                  _strcpy A55A  
                             ?_ADCC_ISR 0021                                  _strlen AD3C  
                    __size_of_TimerDone 0028                            __pdataBIGRAM 04FF  
                       _ADCC_Initialize B376                          _PMD_Initialize C57C  
            __size_of_update_adc_result 003A               __end_of_UART2_tx_vect_isr C298  
                                lltemp0 0001                                  lltemp1 0009  
                                lltemp2 0011                                  lltemp3 0019  
                   ??_ADCC_ThresholdISR 0021                  __end_of_start_adc_scan B57A  
                          __mediumconst F9DE                                  preinc2 003FDC  
                __size_of_init_port_dma 0030                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay B752                        __end_of_spinners A2AC  
                      __end_of_vfprintf AB44                              _StartTimer BBE4  
                    __size_of___asfladd 0078           __size_of_INTERRUPT_Initialize 0066  
               __end_of_TMR5_Initialize BA0A                       _SYSTEM_Initialize B8E8  
                            __accesstop 0060                 __end_of__initialization A554  
                             ?_INT0_ISR 0021                               ?_INT1_ISR 0021  
                  __end_of_display_help C682                    __end_of_display_info C67A  
             __end_of_CLKREF_Initialize C634                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0028                         _TMR5_WriteTimer BC24  
                 _set_temp_display_help C5C2                        _clear_hid_pflags B44A  
                 __end_of_TMR3_CallBack C350               __end_of_ADCC_ThresholdISR B44A  
                    __size_of_calc_bsoc 0A6E                  __end_of_ringBufS_flush AF08  
                        __pcstackCOMRAM 0021                              ___inthi_sp 115E  
                            ___intlo_sp 18AF                            __pidataBANK0 BD8C  
                          __pidataBANK1 A62E             __size_of_send_port_data_dma 0052  
                         __end_of_fabsf AA98                               ?_TMR3_ISR 0021  
                             ?_TMR5_ISR 0021                               ?_TMR6_ISR 0021  
                        ivt0x8_undefint 00AC                           __end_of_fputc 9C58  
                         __end_of_fputs AE76                    _get_ac_charger_relay C5FE  
                         __end_of_srand BE2C                   __end_of_TMR5_CallBack C32C  
                         __end_of_putch C4EE                    _set_ac_charger_relay C5D2  
               __end_of_PWM8_Initialize C566                 __end_of_TMR6_Initialize C066  
                     _adc_int_t_handler B12A                  __end_of_PMD_Initialize C590  
                            __end_of_bp FBBF                              ??_ADCC_ISR 0021  
                 __end_of_TMR6_CallBack C398             __size_of_EXT_INT_Initialize 0034  
              calc_bsoc@log_update_wait 0040                  __size_of_calc_ror_data 0186  
                         _DMA1_DMAA_ISR C64C                   TMR3_ISR@CountCallBack 009C  
                        _clear_adc_scan C68A                      __size_of_hid_input 0138  
                __size_of_mode_lamp_dim 0018                _UART2_RxInterruptHandler 0091  
             __end_of_SYSTEM_Initialize B932                         __CFG_PR1WAY$OFF 000000  
                       __CFG_IVT1WAY$ON 000000                 __end_of_TMR3_WriteTimer BCA4  
                            __pbssBANK0 0060                              __pbssBANK1 01CF  
                            __pbssBANK2 0200                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              _check_help 84B8  
               __end_of_conv_raw_result 5822                      __size_of_esr_check 02D8  
                 _INT0_InterruptHandler 0097                              ??_INT0_ISR 0021  
                            ??_INT1_ISR 0027                       __end_of_TimerDone C0B6  
                      _DMA1_DMADCNT_ISR C640                         _convert_dac_raw 9C58  
                    __size_of_init_bsoc 0246              __size_of_UART2_rx_vect_isr 0028  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01BC  
                         _init_port_dma BEC8                   __end_of_wait_lcd_done C3BA  
      __end_of_TMR3_SetInterruptHandler C1A6                         __CFG_PPS1WAY$ON 000000  
      __end_of_TMR6_SetInterruptHandler C156                              ??_TMR3_ISR 00E5  
               __end_of_ADCC_Initialize B3E0                              ??_TMR5_ISR 002B  
             __end_of_adc_int_t_handler B1A8                              ??_TMR6_ISR 0026  
                     __end_of___asfladd B29A                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9                      __size_of_set_dac_a 0034  
                    __size_of_set_dac_b 0034    __end_of_ADCC_SetADTIInterruptHandler C21E  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler C1F6  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
            __size_of_port_data_dma_ptr 000A                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR C3DC  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan C690                                 u1023_48 C384  
                               u1015_48 C360                                 u1017_28 C2F4  
                               u1026_28 C318                          ?_DMA1_DMAA_ISR 0021  
                      _DMA1_DMASCNT_ISR C61C                                 _U1ERRIE 003DFA  
                               u1057_44 B18E                                 u1057_45 B188  
                    __size_of_set_vterm 001E                                 _U1ERRIR 003DF9  
                               _U2ERRIE 003DE2                                 u1271_20 3AD6  
                               _U2ERRIR 003DE1                                 u1269_20 3A0C  
                               u1276_28 C33C                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0021              __size_of_UART2_tx_vect_isr 0028  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                       _dac_spi_control B1A8                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0FAC                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                       __end_of_calc_bsoc 3E06  
                               _SPI1TXB 003D11                                 _OSCTUNE 0039DE  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch BFB6  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer BC64  
               __size_of_switch_handler 0142                      __size_of_stop_bsoc 0006  
            __end_of_set_load_relay_one C5C2              __end_of_set_load_relay_two C5B2  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
                         _calc_ror_data 8DC0                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 006A  
                         _mode_lamp_dim C50A                                 __Lparam 0000  
              __end_of_UART1_Initialize B9C2                       __end_of_hid_input 9A06  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 7702  
                               ___fladd 4630                                 ___aomod 7E3C  
                               ___fldiv 4DEC                                 ___awdiv 94FE  
                               ___flneg B932                                 ___awmod 9D70  
                               ___flmul 3E06                                 ___flsub BA98  
                               ___fltol 90C6                                 ___lodiv 8F46  
                               ___lomod 978E               __end_of_UART1_Receive_ISR C3FE  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display A396                                 __pcinit A47A  
              __end_of_mode_lamp_bright C5FE                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand C5E2  
                               __ramtop 2000                                 __ptext0 1244  
                               __ptext1 B69E                                 __ptext2 C3FE  
                               __ptext3 BDF8                                 __ptext4 A1B6  
                               __ptext5 BE2C                                 __ptext6 BE60  
                               __ptext7 9C58                                 __ptext8 A934  
                               __ptext9 B1A8                       __end_of_esr_check 7444  
                     _UART2_Receive_ISR C41E                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize C566  
                          __size_of_abs 0046                                 us651999 796C  
                          __size_of_pad 0114                       __end_of_init_bsoc 7E3C  
                               us662999 806A                                 _isalpha BADE  
                               _isdigit BF58                                 us752999 98BE  
                               _ivln2_h FBBF                                 us747999 90B0  
                             _T3CONbits 003FA6                                 _mode_sw 00A9  
                     __end_of_lp_filter 8A8A                                 _islower BEF8  
                               _isspace B7AC                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                                 _set_dac A934  
              __end_of_UART2_Initialize B69E                                 _isupper BF28  
            __size_of_SYSTEM_Initialize 004A                                 _sprintf A0AC  
                               _tolower B0A6                   __size_of_display_help 0008  
                               _utctime 01ED                 __end_of_convert_dac_raw 9D70  
                 __size_of_display_info 0008                                 _strncmp 807C  
                               _toupper B022                    end_of_initialization A554  
             __size_of_convert_adc_data 00B8                      _check_enter_button B29A  
                     __end_of_set_dac_a BE94                       __end_of_set_dac_b BE60  
                             i1u1289_20 945C     __end_of_UART2_SetRxInterruptHandler C106  
           _UART2_SetRxInterruptHandler C0DE                               i2u1060_48 BFFC  
                             i2u1062_48 B416                               i2u1062_49 B42A  
                             i2u1064_48 C25C                               i2u1066_48 C284  
                             i2u1068_48 C2AC                 check_day_time@day_delay 0041  
                     __end_of_set_vterm C498                       __end_of_vfpfcnvrt 3398  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 007E  
                   __size_of_StartTimer 0040                       __end_of_start_lcd C69C  
             __end_of_UART2_Receive_ISR C43E                          wdtdelay@dcount 0078  
               __end_of_dac_spi_control B222                   __CFG_WDTCPS$WDTCPS_31 000000  
                       ??_DMA1_DMAA_ISR 0027                   _INT1_InterruptHandler 0094  
                             _PORTBbits 003FCB                       __end_of_stop_bsoc C6A2  
                             _PORTDbits 003FCD                _TMR3_SetInterruptHandler C17E  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler C12E  
                          _display_help C67A                   _TMR5_InterruptHandler 007F  
                          _display_info C672    __size_of_UART2_SetTxInterruptHandler 0028  
              __end_of_clear_hid_pflags B4B0                       __size_of_ADCC_ISR 002C  
   __end_of_ADCC_SetADIInterruptHandler C246             _ADCC_SetADIInterruptHandler C21E  
                            _update_lcd 9F9C                         _calc_model_data 5CA2  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                            _static_soc B69E                         _DMA1_Initialize B30C  
                            _start_bsoc C3BA                  __size_of_send_lcd_data 0024  
                       _SPI1_Initialize C53A                   __end_of_get_vterm_ptr BFB6  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs BDF8            __end_of_INTERRUPT_Initialize B516  
                            _vterm_dump 9A06                          __end_of___flge 939A  
                        __end_of___fleq A7C2    __end_of_INT0_DefaultInterruptHandler C6B0  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler C6AE  
            __size_of_UART1_Receive_ISR 0022                         _DMA2_Initialize B752  
                         __pidataBIGRAM 6B54                          __end_of_efgtoa 1244  
                     __size_of_TMR3_ISR 0162                       __size_of_TMR5_ISR 00E2  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 6814             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 01E9                          __end_of_memset 716C  
                        __end_of_printf B5DC                __end_of_DMA1_DMADCNT_ISR C64A  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack C374  
                        __end_of_strcpy A62E                          __end_of_strlen ADDE  
                   start_initialization A47A    __end_of_TMR5_DefaultInterruptHandler BD8C  
 __size_of_TMR5_DefaultInterruptHandler 0038            _TMR5_DefaultInterruptHandler BD54  
       __size_of_PIN_MANAGER_Initialize 0092                             __end_of_abs BA98  
                 __end_of_INT1_CallBack C308               __size_of_set_display_info 001E  
                           __end_of_pad 9F9C                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd BBE4                          _switch_handler 964C  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 01DB                   __end_of___fpclassifyf 8DC0  
                         _uart2RxBuffer 0400                __end_of_DMA1_DMASCNT_ISR C62A  
                         _uart2TxBuffer 0300                          _DMA1_DMAOR_ISR C658  
                   __end_of_hid_display 84B8              __end_of_send_port_data_dma B850  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone C08E  
                         _ringBufS_init C066                             __pdataBANK0 00AF  
                           __pdataBANK1 0100              __size_of_UART2_Receive_ISR 0020  
                   __size_of_get_switch 002C              __end_of_EXT_INT_Initialize BEC8  
               __end_of_calc_model_data 60EE                           _send_lcd_data C2C0  
                   __end_of_help_button BD54         __end_of_eaDogM_WriteStringAtPos AC96  
                   __end_of_BVSOC_TABLE FAAF                               ___asfladd B222  
                  calc_model_data@bcror 0070                             __pbssBIGRAM 082A  
               __end_of_DMA1_Initialize B376                    calc_model_data@bvror 0074  
                           __pbssCOMRAM 003A        __end_of_INT0_SetInterruptHandler C1F6  
                         __pcstackBANK0 00E5                __size_of_TMR2_Initialize 0018  
                __size_of_TMR3_CallBack 0024                  __end_of_switch_handler 978E  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize C550  
              _UART1_RxInterruptHandler 008B                _UART2_TxInterruptHandler 008E  
                             __end_of_T FB3F                        _convert_adc_data A87C  
                             _calc_bsoc 3398               __size_of_ringBufS_put_dma 00AA  
                          _init_display A2AC                  __end_of_DMA1_DMAOR_ISR C662  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 0082  
                    calc_ror_data@bcror 0068                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize B7AC                      calc_ror_data@bvror 006C  
                _PIN_MANAGER_Initialize AF08                __size_of_TMR3_Initialize 0048  
                  __end_of_wait_lcd_set C696                           __pmediumconst F9DE  
                             __ptext100 A9EA                               __ptext101 5366  
                             __ptext110 88CE                               __ptext102 B5DC  
                             __ptext111 BA98                               __ptext103 C4B6  
                             __ptext120 C03C                               __ptext112 4630  
                             __ptext104 86CA                               __ptext121 C12E  
                             __ptext113 3E06                               __ptext105 4DEC  
                             __ptext130 AF08                               __ptext122 B9C2  
                             __ptext114 B8E8                               __ptext106 9238  
                             __ptext131 C566                               __ptext123 C156  
                             __ptext115 B63E                               __ptext107 5CA2  
                             __ptext140 B376                               __ptext132 B4B0  
                             __ptext124 BA0A                               __ptext116 C0B6  
                             __ptext108 C69C                               __ptext141 C1F6  
                             __ptext133 C682                               __ptext125 C17E  
                             __ptext117 C0DE                               __ptext109 C3BA  
                             __ptext150 BD54                               __ptext142 C21E  
                             __ptext134 BE94                               __ptext126 C522  
                             __ptext118 B97A                               __ptext151 8A8A  
                             __ptext143 BCA4                               __ptext135 C1A6  
                             __ptext127 C53A                               __ptext119 C106  
                             __ptext160 C634                               __ptext152 C5D2  
                             __ptext144 C2E4                               __ptext136 C1CE  
                             __ptext128 C550                               __ptext161 B222  
                             __ptext153 C5FE                               __ptext145 C6AA  
                             __ptext137 B752                               __ptext129 C57C  
                             __ptext170 B3E0                               __ptext162 C60C  
                             __ptext154 939C                               __ptext146 964C  
                             __ptext138 B30C                               __ptext171 C248  
                             __ptext163 C350                               __ptext155 BC64  
                             __ptext147 A398                               __ptext139 C62A  
                             __ptext180 C61C                               __ptext172 C3DC  
                             __ptext164 C6AE                               __ptext156 C32C  
                             __ptext148 BC24                               __ptext181 C640  
                             __ptext173 C270                               __ptext165 C6A4  
                             __ptext157 C6AC                               __ptext149 C308  
                             __ptext182 C64C                               __ptext174 C010  
                             __ptext166 BFE4                               __ptext158 3398  
                             __ptext183 C658                               __ptext175 C298  
                             __ptext167 B12A                               __ptext159 B7FE  
                             __ptext184 0000                               __ptext176 C41E  
                             __ptext168 C6B0                               __ptext177 C4F0  
                             __ptext169 C6B2                               __ptext178 C374  
                             __ptext179 B850                               _hid_input 98CE  
                    __end_of_StartTimer BC24                      _set_load_relay_one C5B2  
                    _set_load_relay_two C5A2                       __size_of_wdtdelay 005A  
                     __size_of_spinners 00F6                       __size_of_vfprintf 00AC  
                              _ADCC_ISR BFE4                  __CFG_BBSIZE$BBSIZE_512 000000  
                             fabsf@F463 0060                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                               _esr_check 716C  
               __size_of_get_raw_result 001E                          __size_of_fabsf 00AE  
                             _init_bsoc 7BF6                  __size_of_wait_lcd_done 0022  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 88CE  
                           _hid_display 829C                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize B4B0  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0021                                _INT0_ISR C60C  
                              _INT1_ISR BCA4                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
                              _LATFbits 003FBF       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 027D  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                          _SPI1CON0bits 003D14                            _SPI1CON1bits 003D15  
                             _set_dac_a BE60                               _set_dac_b BE2C  
                             _ring_buf1 0383                               _ring_buf2 0340  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                           _TMR3_CallBack C32C  
                              _PIR5bits 0039A5                                _PIR6bits 0039A6  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
              __size_of_TMR5_Initialize 0048                               _set_vterm C47A  
                   __size_of_update_lcd 0110                             _help_button BD1C  
                              _TMR3_ISR 939C                             _BVSOC_TABLE F9DF  
                              _TMR5_ISR A398                                _TMR6_ISR C4F0  
                             _port_data 04FF                     __size_of_static_soc 005A  
                             _vfpfcnvrt 23EC                            _SPI1INTFbits 003D1A  
                   __size_of_start_bsoc 0022                           _TMR5_CallBack C308  
                            _ADCON0bits 003EF8                      __end_of_check_help 86CA  
                             _start_lcd C696                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 001E                           _TMR6_CallBack C374  
                 __size_of_send_lcd_cmd 0040       __size_of_TMR5_SetInterruptHandler 0028  
                             _stop_bsoc C69C                        _set_display_info C498  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                           _INTCON0bits 003FD2                               copy_data0 A48E  
                             copy_data1 A4B4                               copy_data2 A4D6  
              _INT0_SetInterruptHandler C1CE                     __size_of_vterm_dump 012E  
   __end_of_UART2_SetTxInterruptHandler C0DE             _UART2_SetTxInterruptHandler C0B6  
                          _uart1RxCount 00AD                            _uart2RxCount 00AA  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 00A8  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_TMR3_WriteTimer 0040  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000                __size_of_conv_raw_result 04BC  
                         _wait_lcd_done C398                            _send_lcd_cmd BBA4  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
         __size_of_get_ac_charger_relay 000E                        __size_of___aomod 0240  
                       _adc_int_handler C6B2                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                      __size_of___lodiv 0180                        __size_of___lomod 0140  
         __size_of_set_ac_charger_relay 0010                      __end_of_get_switch BFE2  
               __size_of_check_day_time 01A0                   __end_of_DMA1_DMAA_ISR C656  
                    ___fpclassifyf@F463 0064    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0200                                ___xxtofl 86CA  
                     ?_DMA1_DMADCNT_ISR 0021             __size_of_check_enter_button 0072  
              __size_of_ADCC_Initialize 006A             __end_of_eaDogM_WriteCommand C5F0  
                      __size_of_isalpha 0044                        __size_of_isdigit 0030  
                              __pivt0x8 0008                        __size_of_islower 0030  
                      __size_of_isspace 0052                      ??_DMA1_DMADCNT_ISR 0027  
                      __size_of_set_dac 00B6                                __ptext10 BEC8  
                              __ptext11 A2AC                                __ptext20 98CE  
                              __ptext12 C2C0                                __ptext21 BFB6  
                              __ptext13 BB64                                __ptext30 C5B2  
                              __ptext22 716C                                __ptext14 BBA4  
                              __ptext31 C5E2                                __ptext23 BCE2  
                              __ptext15 C43E                                __ptext40 ABEE  
                              __ptext32 A87C                                __ptext24 B516  
                              __ptext16 C066                                __ptext41 C45C  
                              __ptext33 B44A                                __ptext25 C590  
                              __ptext17 7BF6                                __ptext50 B57A  
                              __ptext42 C398                                __ptext34 84B8  
                              __ptext26 C662                                __ptext18 A7C2  
                              __ptext51 AA98                                __ptext43 B6F8  
                              __ptext35 9A06                                __ptext27 C68A  
                              __ptext19 829C                                __ptext60 807C  
                              __ptext52 23EC                                __ptext44 B89E  
                              __ptext36 A0AC                                __ptext28 C66A  
                              __ptext61 7444                                __ptext53 60EE  
                              __ptext45 AC96                                __ptext37 BF88  
                              __ptext29 C5A2                                __ptext70 A6FE  
                              __ptext62 0000                                __ptext54 B022  
                              __ptext46 C690                                __ptext38 BDC2  
                              __ptext71 9D70                                __ptext63 B0A6  
                              __ptext55 BEF8                                __ptext47 C696  
                              __ptext39 9F9C                                __ptext80 ADDE  
                              __ptext72 94FE                                __ptext64 BF28  
                              __ptext56 BADE                                __ptext48 AE76  
                              __ptext81 9B34                                __ptext73 5822  
                              __ptext65 A55A                                __ptext57 6814  
                              __ptext49 6E80                                __ptext90 C50A  
                              __ptext82 C4D4                                __ptext74 BA52  
                              __ptext66 64A8                                __ptext58 978E  
                              __ptext91 C5F0                                __ptext83 AB44  
                              __ptext75 7E3C                                __ptext67 8C2A  
                              __ptext59 8F46                                __ptext92 BB22  
                              __ptext84 7982                                __ptext76 7702  
                              __ptext68 90C6                                __ptext93 BD1C  
                              __ptext85 B7AC                                __ptext77 AF9A  
                              __ptext69 B932                                __ptext94 C08E  
                              __ptext86 BF58                                __ptext78 9E88  
                              __ptext95 BBE4                                __ptext87 C47A  
                              __ptext79 AD3C                                __ptext96 C672  
                              __ptext88 C5C2                                __ptext97 C67A  
                              __ptext89 C498                                __ptext98 B29A  
                              __ptext99 8DC0                        __size_of_isupper 0030  
                              us1112999 583C                                us1202999 616E  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                              us1181999 7456                                us1193999 687A  
                      __size_of_strncmp 0220                        __size_of_toupper 0084  
                      _ringBufS_put_dma AB44                    __end_of_Volts_to_SOC A87C  
                         __size_of_atoi 0274                           __size_of_ctoa 0088  
                         __size_of_main 11A8                           __size_of_dtoa 0480  
                         __size_of_nanf 0062                   __size_of_wait_lcd_set 0006  
                         __size_of_stoa 02BE                           __size_of_utoa 0340  
                         __size_of_xtoa 03BA                     dac_spi_control@init 0043  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0021  
                 __end_of_init_port_dma BEF8                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 0088  
                             stoa@F1166 0100                      ??_DMA1_DMASCNT_ISR 0027  
          __end_of_ADCC_StartConversion C5A2                                _spi_link 01CF  
                              _wdtdelay B6F8              __end_of_UART2_Transmit_ISR C03C  
                              _spinners A1B6                                _vfprintf AA98  
              __end_of_convert_adc_data A934              __end_of_PWM8_LoadDutyValue BB64  
  __end_of_TMR3_DefaultInterruptHandler C6AE   __size_of_TMR3_DefaultInterruptHandler 0002  
          _TMR3_DefaultInterruptHandler C6AC    __end_of_INT1_DefaultInterruptHandler C6AC  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler C6AA  
                    _send_port_data_dma B7FE                           ??_Default_ISR 0021  
                           _uart1RxHead 0047                  __size_of_get_vterm_ptr 002E  
                           _uart2RxHead 0044                             _uart1RxTail 00AE  
                        _get_raw_result C4B6                             _uart2TxHead 00AC  
                           _uart2RxTail 00AB                               spinners@s 01E3  
                           _uart2TxTail 0046                            _wait_lcd_set C690  
                    _EXT_INT_Initialize BE94    __end_of_TMR6_DefaultInterruptHandler B89E  
 __size_of_TMR6_DefaultInterruptHandler 004E            _TMR6_DefaultInterruptHandler B850  
                     _send_lcd_data_dma B89E    __end_of_ADCC_DefaultInterruptHandler C6B2  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler C6B0  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long BB64          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help C5D2                   __end_of_calc_ror_data 8F46  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString AD3C  
                 __end_of_mode_lamp_dim C522                 __end_of_adc_int_handler C6B4  
              __size_of_convert_dac_raw 0118                  __size_of_INT0_CallBack 0024  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0024                      __end_of_update_lcd A0AC  
                _uart2TxBufferRemaining 0045                      __end_of_static_soc B6F8  
                    __end_of_start_bsoc C3DC                          _FVR_Initialize C682  
                __end_of_get_raw_result C4D4                        _send_lcd_cmd_dma C45C  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 00A0  
      __end_of_INT1_SetInterruptHandler C1CE               __size_of_UART1_Initialize 0048  
              __size_of_dac_spi_control 007A               __end_of_send_lcd_data_dma B8E8  
                      ??_DMA1_DMAOR_ISR 0027               __end_of_send_lcd_cmd_long BBA4  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR C6AA  
        __end_of_PIN_MANAGER_Initialize AF9A               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 9B34                 _eaDogM_WriteStringAtPos ABEE  
                         _get_vterm_ptr BF88                          _check_adc_scan C66A  
             __size_of_UART2_Initialize 0060  
