

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Feb 18 04:13:12 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=2
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=2
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=2
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=2
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1,group=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1,group=2
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=2
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=2
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=2
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=2
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1,group=2
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=2
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1,group=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1,group=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1,group=2
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1,group=2
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1,group=2
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1,group=2
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1,group=2
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1,group=2
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1,inline
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1,inline
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1,group=2
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1,group=2
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1,group=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1,group=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1,group=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1,group=1
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1,group=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1,group=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1
   194                           	psect	text170,global,reloc=2,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=2,class=CODE,delta=1
   197                           	psect	text173,global,reloc=2,class=CODE,delta=1
   198                           	psect	text174,global,reloc=2,class=CODE,delta=1
   199                           	psect	text175,global,reloc=2,class=CODE,delta=1
   200                           	psect	text176,global,reloc=2,class=CODE,delta=1
   201                           	psect	text177,global,reloc=2,class=CODE,delta=1
   202                           	psect	text178,global,reloc=2,class=CODE,delta=1
   203                           	psect	text179,global,reloc=2,class=CODE,delta=1
   204                           	psect	text180,global,reloc=2,class=CODE,delta=1
   205                           	psect	text181,global,reloc=2,class=CODE,delta=1
   206                           	psect	text182,global,reloc=2,class=CODE,delta=1
   207                           	psect	text183,global,reloc=2,class=CODE,delta=1
   208                           	psect	text184,global,reloc=2,class=CODE,delta=1
   209                           	psect	text185,global,reloc=2,class=CODE,delta=1
   210                           	psect	text186,global,reloc=2,class=CODE,delta=1
   211                           	psect	text187,global,reloc=4,class=CODE,delta=1
   212                           	psect	text188,global,reloc=2,class=CODE,delta=1
   213                           	psect	text189,global,reloc=2,class=CODE,delta=1
   214                           	psect	text190,global,reloc=2,class=CODE,delta=1
   215                           	psect	text191,global,reloc=4,class=CODE,delta=1
   216                           	psect	text192,global,reloc=2,class=CODE,delta=1
   217                           	psect	text193,global,reloc=2,class=CODE,delta=1
   218                           	psect	text194,global,reloc=2,class=CODE,delta=1
   219                           	psect	text195,global,reloc=2,class=CODE,delta=1
   220                           	psect	text196,global,reloc=2,class=CODE,delta=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1
   222                           	psect	text198,global,reloc=4,class=CODE,delta=1
   223                           	psect	text199,global,reloc=2,class=CODE,delta=1
   224                           	psect	text200,global,reloc=2,class=CODE,delta=1
   225                           	psect	text201,global,reloc=2,class=CODE,delta=1
   226                           	psect	text202,global,reloc=2,class=CODE,delta=1
   227                           	psect	text203,global,reloc=2,class=CODE,delta=1
   228                           	psect	text204,global,reloc=2,class=CODE,delta=1
   229                           	psect	text205,global,reloc=2,class=CODE,delta=1,group=1
   230                           	psect	text206,global,reloc=4,class=CODE,delta=1
   231                           	psect	text207,global,reloc=2,class=CODE,delta=1
   232                           	psect	text208,global,reloc=2,class=CODE,delta=1
   233                           	psect	text209,global,reloc=4,class=CODE,delta=1
   234                           	psect	text210,global,reloc=4,class=CODE,delta=1
   235                           	psect	text211,global,reloc=2,class=CODE,delta=1
   236                           	psect	text212,global,reloc=2,class=CODE,delta=1
   237                           	psect	text213,global,reloc=2,class=CODE,delta=1
   238                           	psect	text214,global,reloc=4,class=CODE,delta=1
   239                           	psect	text215,global,reloc=4,class=CODE,delta=1
   240                           	psect	text216,global,reloc=2,class=CODE,delta=1
   241                           	psect	text217,global,reloc=4,class=CODE,delta=1
   242                           	psect	text218,global,reloc=2,class=CODE,delta=1
   243                           	psect	text219,global,reloc=4,class=CODE,delta=1
   244                           	psect	text220,global,reloc=2,class=CODE,delta=1
   245                           	psect	text221,global,reloc=4,class=CODE,delta=1
   246                           	psect	text222,global,reloc=2,class=CODE,delta=1
   247                           	psect	text223,global,reloc=2,class=CODE,delta=1
   248                           	psect	text224,global,reloc=4,class=CODE,delta=1
   249                           	psect	text225,global,reloc=4,class=CODE,delta=1
   250                           	psect	text226,global,reloc=4,class=CODE,delta=1
   251                           	psect	text227,global,reloc=4,class=CODE,delta=1
   252                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   253                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   254                           	psect	text228,global,reloc=4,class=CODE,delta=1
   255                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   256                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   257  0000                     
   258                           ; Version 2.10
   259                           ; Generated 31/07/2019 GMT
   260                           ; 
   261                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   262                           ; All rights reserved.
   263                           ; 
   264                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   265                           ; 
   266                           ; Redistribution and use in source and binary forms, with or without modification, are
   267                           ; permitted provided that the following conditions are met:
   268                           ; 
   269                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   270                           ;        conditions and the following disclaimer.
   271                           ; 
   272                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   273                           ;        of conditions and the following disclaimer in the documentation and/or other
   274                           ;        materials provided with the distribution.
   275                           ; 
   276                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   277                           ;        software without specific prior written permission.
   278                           ; 
   279                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   280                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   281                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   282                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   283                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   284                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   285                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   286                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   287                           ; 
   288                           ; 
   289                           ; Code-generator required, PIC18F57K42 Definitions
   290                           ; 
   291                           ; SFR Addresses
   292  0000                     
   293 ;;_main$4049	offset	0
   294 ;;_main$4045	offset	2
   295 ;;_esr_temp	offset	4
   296 ;;_i_esr	offset	8
   297 ;;_shape	offset	10
   298 ;;_inp_index	offset	11
   299 ;;_k	offset	12
   300 ;;_j	offset	13
   301 ;;_i	offset	14
   302 ;;_mode	offset	15
   303 ;;_i_ror	offset	16
   304 ;;_mode	offset=-1 (param)
   305 ;;_hist	offset=-3 (param)
   306 ;;_s	offset=-2 (param)
   307 ;;_t	offset=-8 (param)
   308 ;;_voltage	offset=-4 (param)
   309 ;;_voltage	offset=-4 (param)
   310 ;;_voltage	offset=-4 (param)
   311 ;;_set	offset=-1 (param)
   312 ;;_x	offset	0
   313 ;;_r_cal_ptr	offset	2
   314 ;;_y	offset	4
   315 ;;_crcVal_save	offset	6
   316 ;;_bAdd	offset=-2 (param)
   317 ;;_esr_rescale	offset	0
   318 ;;_data	offset=-1 (param)
   319 ;;_cmd	offset=-1 (param)
   320 ;;_cmd	offset=-1 (param)
   321 ;;_data	offset=-1 (param)
   322 ;;__this	offset=-2 (param)
   323 ;;_soc	offset	0
   324 ;;_slot	offset	2
   325 ;;_cvoltage	offset=-4 (param)
   326 ;;_h	offset=-2 (param)
   327 ;;_h	offset=-2 (param)
   328 ;;_fsm	offset=-1 (param)
   329 ;;_mode	offset=-1 (param)
   330 ;;_mode	offset=-1 (param)
   331 ;;_cmd	offset=-1 (param)
   332 ;;_t	offset=-8 (param)
   333 ;;_t	offset=-1 (param)
   334 ;;_t	offset=-1 (param)
   335 ;;_tm	offset=-3 (param)
   336 ;;_y	offset	0
   337 ;;_t1	offset	8
   338 ;;_t0	offset	16
   339 ;;_t	offset=-8 (param)
   340 ;;_local	offset=-10 (param)
   341 ;;_isdst	offset=-12 (param)
   342 ;;_offset	offset=-14 (param)
   343 ;;_oppoff	offset=-16 (param)
   344 ;;_zonename	offset=-18 (param)
   345 ;;_t	offset=-8 (param)
   346 ;;_local	offset=-10 (param)
   347 ;;_alt	offset=-12 (param)
   348 ;;_z	offset=-2 (param)
   349 ;;_days	offset	0
   350 ;;_wday	offset	2
   351 ;;_t	offset	4
   352 ;;_is_leap	offset	12
   353 ;;_n	offset	14
   354 ;;_x	offset	16
   355 ;;_m	offset	18
   356 ;;_d	offset	20
   357 ;;_rule	offset=-6 (param)
   358 ;;_year	offset=-8 (param)
   359 ;;_m	offset=-2 (param)
   360 ;;_is_leap	offset=-4 (param)
   361 ;;_y	offset	0
   362 ;;_leaps	offset	2
   363 ;;_rem	offset	4
   364 ;;F5	offset	6
   365 ;;_centuries	offset	8
   366 ;;_leaps	offset	10
   367 ;;_cycles	offset	12
   368 ;;_year	offset=-8 (param)
   369 ;;_is_leap	offset=-10 (param)
   370 ;;_t	offset	0
   371 ;;_month	offset=-2 (param)
   372 ;;_is_leap	offset=-4 (param)
   373 ;;_s	offset	0
   374 ;;_r	offset	0
   375 ;;_p	offset=-2 (param)
   376 ;;_rule	offset=-4 (param)
   377 ;;_off	offset	0
   378 ;;_neg	offset	2
   379 ;;_p	offset=-2 (param)
   380 ;;_x	offset	0
   381 ;;_p	offset=-2 (param)
   382 ;;_i	offset	0
   383 ;;_d	offset=-2 (param)
   384 ;;_p	offset=-4 (param)
   385 ;;___secs_to_tm$7650	offset	0
   386 ;;_years	offset	1
   387 ;;_days	offset	9
   388 ;;_secs	offset	17
   389 ;;_remdays	offset	25
   390 ;;_q_cycles	offset	29
   391 ;;_c_cycles	offset	33
   392 ;;_remyears	offset	37
   393 ;;_remsecs	offset	41
   394 ;;_qc_cycles	offset	45
   395 ;;_months	offset	49
   396 ;;_leap	offset	51
   397 ;;_yday	offset	53
   398 ;;_wday	offset	55
   399 ;;_t	offset=-8 (param)
   400 ;;_tm	offset=-10 (param)
   401 ;;_product	offset	0
   402 ;;_multiplier	offset=-8 (param)
   403 ;;_multiplicand	offset=-16 (param)
   404 ;;_product	offset	0
   405 ;;_multiplier	offset=-4 (param)
   406 ;;_multiplicand	offset=-8 (param)
   407 ;;_sign	offset	0
   408 ;;_counter	offset	1
   409 ;;_dividend	offset=-4 (param)
   410 ;;_divisor	offset=-8 (param)
   411 ;;_quotient	offset	0
   412 ;;_sign	offset	4
   413 ;;_counter	offset	5
   414 ;;_dividend	offset=-4 (param)
   415 ;;_divisor	offset=-8 (param)
   416 ;;_cp	offset	0
   417 ;;_s	offset	2
   418 ;;_tim	offset=-2 (param)
   419 ;;_cp	offset=-2 (param)
   420 ;;_i	offset=-3 (param)
   421 ;;_cl	offset=-4 (param)
   422 ;;_ct	offset=-5 (param)
   423 ;;_rem	offset	0
   424 ;;_counter	offset	1
   425 ;;_dividend	offset=-1 (param)
   426 ;;_divisor	offset=-2 (param)
   427 ;;_cp	offset	0
   428 ;;_cb	offset	4
   429 ;;_cpz	offset	8
   430 ;;_cbz	offset	12
   431 ;;_x	offset	16
   432 ;;_x	offset	0
   433 ;;_r_cal_ptr	offset	2
   434 ;;_y	offset	4
   435 ;;_crcVal	offset	6
   436 ;;_GIEBitValue	offset	0
   437 ;;_bAdd	offset=-2 (param)
   438 ;;_bData	offset=-3 (param)
   439 ;;_result	offset	0
   440 ;;_mask	offset	2
   441 ;;_reverse	offset=-1 (param)
   442 ;;_xorValue	offset=-3 (param)
   443 ;;_mask	offset	0
   444 ;;_reverse	offset	2
   445 ;;_crc	offset=-2 (param)
   446 ;;_data	offset=-1 (param)
   447 ;;_channel	offset=-1 (param)
   448 ;;_c	offset	0
   449 ;;_shape	offset=-1 (param)
   450 ;;_reset	offset=-2 (param)
   451 ;;_i	offset=-1 (param)
   452 ;;_i	offset=-1 (param)
   453 ;;_mode	offset=-1 (param)
   454 ;;_cb	offset=-3 (param)
   455 ;;_cp	offset=-5 (param)
   456 ;;_mode	offset=-1 (param)
   457 ;;_cb	offset=-3 (param)
   458 ;;_cp	offset=-5 (param)
   459 ;;_scaleb	offset=-9 (param)
   460 ;;_scalep	offset=-13 (param)
   461 ;;_value	offset=-2 (param)
   462 ;;_window	offset=-4 (param)
   463 ;;_standard	offset=-6 (param)
   464 ;;_i	offset	0
   465 ;;_h	offset=-2 (param)
   466 ;;_flipper	offset=-1 (param)
   467 ;;_f	offset	0
   468 ;;_ap	offset	6
   469 ;;_s	offset=-3 (param)
   470 ;;_fmt	offset=-5 (param)
   471 ;;_line	offset=-1 (param)
   472 ;;_vterm	offset=-2 (param)
   473 ;;_numMilliseconds	offset=-2 (param)
   474 ;;_vterm	offset=-1 (param)
   475 ;;_row	offset	0
   476 ;;_r	offset=-1 (param)
   477 ;;_c	offset=-2 (param)
   478 ;;_strPtr	offset=-4 (param)
   479 ;;_strPtr	offset=-1 (param)
   480 ;;_delay	offset=-4 (param)
   481 ;;_strPtr	offset=-1 (param)
   482 ;;_strPtr	offset=-2 (param)
   483 ;;__this	offset=-2 (param)
   484 ;;_clearBuffer	offset=-3 (param)
   485 ;;_s	offset	0
   486 ;;_k	offset	2
   487 ;;_dest	offset=-2 (param)
   488 ;;_c	offset=-4 (param)
   489 ;;_n	offset=-6 (param)
   490 ;;_ap	offset	0
   491 ;;_fmt	offset=-3 (param)
   492 ;;_cfmt	offset	0
   493 ;;_fp	offset=-2 (param)
   494 ;;_fmt	offset=-4 (param)
   495 ;;_ap	offset=-6 (param)
   496 ;;_vfpfcnvrt$6691	offset	0
   497 ;;_vfpfcnvrt$6702	offset	2
   498 ;;_vfpfcnvrt$6690	offset	4
   499 ;;_llu	offset	6
   500 ;;_ll	offset	14
   501 ;;_f	offset	22
   502 ;;_ct	offset	26
   503 ;;_cp	offset	29
   504 ;;_c	offset	31
   505 ;;_fp	offset=-2 (param)
   506 ;;_fmt	offset=-4 (param)
   507 ;;_ap	offset=-6 (param)
   508 ;;_xtoa$6676	offset	0
   509 ;;_xtoa$6675	offset	2
   510 ;;_n	offset	4
   511 ;;_c	offset	12
   512 ;;_i	offset	14
   513 ;;_w	offset	16
   514 ;;_p	offset	18
   515 ;;_fp	offset=-2 (param)
   516 ;;_d	offset=-10 (param)
   517 ;;_x	offset=-11 (param)
   518 ;;_toupper$7617	offset	0
   519 ;;_c	offset=-2 (param)
   520 ;;_c	offset=-2 (param)
   521 ;;_c	offset=-2 (param)
   522 ;;_n	offset	0
   523 ;;_i	offset	8
   524 ;;_w	offset	10
   525 ;;_p	offset	12
   526 ;;_fp	offset=-2 (param)
   527 ;;_d	offset=-10 (param)
   528 ;;_counter	offset	0
   529 ;;_dividend	offset=-8 (param)
   530 ;;_divisor	offset=-16 (param)
   531 ;;_quotient	offset	0
   532 ;;_counter	offset	8
   533 ;;_dividend	offset=-8 (param)
   534 ;;_divisor	offset=-16 (param)
   535 ;;_r	offset	0
   536 ;;_l	offset	2
   537 ;;__l	offset=-2 (param)
   538 ;;__r	offset=-4 (param)
   539 ;;_n	offset=-6 (param)
   540 ;;_nuls	offset	0
   541 ;;_l	offset	7
   542 ;;_p	offset	9
   543 ;;_cp	offset	11
   544 ;;_w	offset	13
   545 ;;_i	offset	15
   546 ;;_fp	offset=-2 (param)
   547 ;;_s	offset=-4 (param)
   548 ;;_efgtoa$6648	offset	0
   549 ;;_efgtoa$6647	offset	2
   550 ;;_efgtoa$6646	offset	4
   551 ;;_efgtoa$6642	offset	6
   552 ;;_efgtoa$6638	offset	8
   553 ;;_efgtoa$6637	offset	10
   554 ;;_u	offset	12
   555 ;;_g	offset	16
   556 ;;_l	offset	20
   557 ;;_h	offset	24
   558 ;;_ou	offset	28
   559 ;;_n	offset	32
   560 ;;_e	offset	34
   561 ;;_i	offset	36
   562 ;;_w	offset	38
   563 ;;_p	offset	40
   564 ;;_sign	offset	42
   565 ;;_d	offset	44
   566 ;;_ne	offset	46
   567 ;;_m	offset	48
   568 ;;_pp	offset	50
   569 ;;_t	offset	52
   570 ;;_mode	offset	54
   571 ;;_nmode	offset	55
   572 ;;_fp	offset=-2 (param)
   573 ;;_f	offset=-6 (param)
   574 ;;_c	offset=-7 (param)
   575 ;;_tolower$7602	offset	0
   576 ;;_c	offset=-2 (param)
   577 ;;_c	offset=-2 (param)
   578 ;;_d	offset	0
   579 ;;_s	offset	2
   580 ;;_dest	offset=-2 (param)
   581 ;;_src	offset=-4 (param)
   582 ;;_u	offset	0
   583 ;;_m	offset	4
   584 ;;_e	offset	8
   585 ;;_x	offset=-4 (param)
   586 ;;_u	offset	0
   587 ;;_e	offset	4
   588 ;;_x	offset=-4 (param)
   589 ;;_exp1	offset	0
   590 ;;_sign1	offset	1
   591 ;;_f1	offset=-4 (param)
   592 ;;_f1	offset=-4 (param)
   593 ;;_ff1	offset=-4 (param)
   594 ;;_ff2	offset=-8 (param)
   595 ;;_sign	offset	0
   596 ;;_counter	offset	1
   597 ;;_dividend	offset=-2 (param)
   598 ;;_divisor	offset=-4 (param)
   599 ;;_quotient	offset	0
   600 ;;_sign	offset	2
   601 ;;_counter	offset	3
   602 ;;_dividend	offset=-2 (param)
   603 ;;_divisor	offset=-4 (param)
   604 ;;_dtoa$6614	offset	0
   605 ;;_n	offset	2
   606 ;;_i	offset	10
   607 ;;_s	offset	12
   608 ;;_w	offset	14
   609 ;;_p	offset	16
   610 ;;_fp	offset=-2 (param)
   611 ;;_d	offset=-10 (param)
   612 ;;_a	offset=-2 (param)
   613 ;;_sign	offset	0
   614 ;;_counter	offset	1
   615 ;;_dividend	offset=-8 (param)
   616 ;;_divisor	offset=-16 (param)
   617 ;;_quotient	offset	0
   618 ;;_sign	offset	8
   619 ;;_counter	offset	9
   620 ;;_dividend	offset=-8 (param)
   621 ;;_divisor	offset=-16 (param)
   622 ;;_w	offset	0
   623 ;;_fp	offset=-2 (param)
   624 ;;_c	offset=-3 (param)
   625 ;;_w	offset	0
   626 ;;_i	offset	2
   627 ;;_fp	offset=-2 (param)
   628 ;;_buf	offset=-4 (param)
   629 ;;_p	offset=-6 (param)
   630 ;;_a	offset	0
   631 ;;_s	offset=-2 (param)
   632 ;;_i	offset	0
   633 ;;_c	offset	2
   634 ;;_s	offset=-2 (param)
   635 ;;_fp	offset=-4 (param)
   636 ;;_c	offset=-2 (param)
   637 ;;_fp	offset=-4 (param)
   638 ;;_c	offset=-1 (param)
   639 ;;__this	offset=-2 (param)
   640 ;;_c	offset=-3 (param)
   641 ;;_atoi$7234	offset	0
   642 ;;_atoi$7232	offset	2
   643 ;;_atoi$7233	offset	4
   644 ;;_n	offset	5
   645 ;;_neg	offset	7
   646 ;;_s	offset=-2 (param)
   647 ;;_isspace$7283	offset	0
   648 ;;_c	offset=-2 (param)
   649 ;;_c	offset=-2 (param)
   650 ;;_vterm	offset=-1 (param)
   651 ;;_new_response_info	offset=-1 (param)
   652 ;;_new_response_info	offset=-1 (param)
   653 ;;_level	offset=-2 (param)
   654 ;;_dutyValue	offset=-2 (param)
   655 ;;_timer	offset=-1 (param)
   656 ;;_timer	offset=-1 (param)
   657 ;;_count	offset=-3 (param)
   658 ;;_h	offset=-2 (param)
   659 ;;_u	offset	0
   660 ;;_x	offset=-4 (param)
   661 ;;_chan	offset=-1 (param)
   662 ;;_to_what	offset=-2 (param)
   663 ;;_u	offset	0
   664 ;;_s	offset=-2 (param)
   665 ;;_index	offset=-1 (param)
   666 ;;_arg	offset	0
   667 ;;_exp	offset	4
   668 ;;_sign	offset=-1 (param)
   669 ;;_val	offset=-5 (param)
   670 ;;_grs	offset	0
   671 ;;_rem	offset	4
   672 ;;_new_exp	offset	8
   673 ;;_aexp	offset	10
   674 ;;_bexp	offset	11
   675 ;;_sign	offset	12
   676 ;;_b	offset=-4 (param)
   677 ;;_a	offset=-8 (param)
   678 ;;_ff1	offset=-4 (param)
   679 ;;_ff2	offset=-8 (param)
   680 ;;_lp_speed	offset	0
   681 ;;_new	offset=-4 (param)
   682 ;;_bn	offset=-5 (param)
   683 ;;_slow	offset=-6 (param)
   684 ;;_b	offset=-4 (param)
   685 ;;_a	offset=-8 (param)
   686 ;;_grs	offset	0
   687 ;;_bexp	offset	1
   688 ;;_aexp	offset	2
   689 ;;_signs	offset	3
   690 ;;_b	offset=-4 (param)
   691 ;;_a	offset=-8 (param)
   692 ;;_prod	offset	0
   693 ;;_grs	offset	4
   694 ;;_temp	offset	8
   695 ;;_bexp	offset	10
   696 ;;_aexp	offset	11
   697 ;;_sign	offset	12
   698 ;;_b	offset=-4 (param)
   699 ;;_a	offset=-8 (param)
   700 ;;_InterruptHandler	offset=-3 (param)
   701 ;;_InterruptHandler	offset=-3 (param)
   702 ;;_InterruptHandler	offset=-3 (param)
   703 ;;_InterruptHandler	offset=-3 (param)
   704 ;;_InterruptHandler	offset=-3 (param)
   705 ;;_InterruptHandler	offset=-3 (param)
   706 ;;_state	offset	0
   707 ;;_InterruptHandler	offset=-3 (param)
   708 ;;_InterruptHandler	offset=-3 (param)
   709 ;;_seed	offset	0
   710 ;;_poly	offset	2
   711 ;;_InterruptHandler	offset=-3 (param)
   712 ;;_InterruptHandler	offset=-3 (param)
   713 ;;_i	offset	0
   714 ;;_sw_value	offset	1
   715 ;;_timerVal	offset=-2 (param)
   716 ;;_light	offset	0
   717 ;;_t	offset=-8 (param)
   718 ;;_mode	offset=-1 (param)
   719 ;;_chan	offset=-1 (param)
   720 ;;_to_what	offset=-2 (param)
   721 ;;_u	offset	0
   722 ;;_s	offset=-2 (param)
   723 ;;_index	offset=-1 (param)
   724 ;;_arg	offset	0
   725 ;;_exp	offset	4
   726 ;;_sign	offset=-1 (param)
   727 ;;_val	offset=-5 (param)
   728 ;;_b	offset=-4 (param)
   729 ;;_a	offset=-8 (param)
   730 ;;_grs	offset	0
   731 ;;_bexp	offset	1
   732 ;;_aexp	offset	2
   733 ;;_signs	offset	3
   734 ;;_b	offset=-4 (param)
   735 ;;_a	offset=-8 (param)
   736 ;;_prod	offset	0
   737 ;;_grs	offset	4
   738 ;;_temp	offset	8
   739 ;;_bexp	offset	10
   740 ;;_aexp	offset	11
   741 ;;_sign	offset	12
   742 ;;_b	offset=-4 (param)
   743 ;;_a	offset=-8 (param)
   744 ;;_grs	offset	0
   745 ;;_rem	offset	4
   746 ;;_new_exp	offset	8
   747 ;;_aexp	offset	10
   748 ;;_bexp	offset	11
   749 ;;_sign	offset	12
   750 ;;_b	offset=-4 (param)
   751 ;;_a	offset=-8 (param)
   752 ;;_ff1	offset=-4 (param)
   753 ;;_ff2	offset=-8 (param)
   754 ;;_timerVal	offset=-2 (param)
   755 ;;_adj	offset	0
   756 ;;_log_ptr	offset	4
   757 ;;_f	offset	0
   758 ;;_ap	offset	6
   759 ;;_s	offset=-3 (param)
   760 ;;_fmt	offset=-5 (param)
   761 ;;_cfmt	offset	0
   762 ;;_fp	offset=-2 (param)
   763 ;;_fmt	offset=-4 (param)
   764 ;;_ap	offset=-6 (param)
   765 ;;_vfpfcnvrt$6691	offset	0
   766 ;;_vfpfcnvrt$6702	offset	2
   767 ;;_vfpfcnvrt$6690	offset	4
   768 ;;_llu	offset	6
   769 ;;_ll	offset	14
   770 ;;_f	offset	22
   771 ;;_ct	offset	26
   772 ;;_cp	offset	29
   773 ;;_c	offset	31
   774 ;;_fp	offset=-2 (param)
   775 ;;_fmt	offset=-4 (param)
   776 ;;_ap	offset=-6 (param)
   777 ;;_xtoa$6676	offset	0
   778 ;;_xtoa$6675	offset	2
   779 ;;_n	offset	4
   780 ;;_c	offset	12
   781 ;;_i	offset	14
   782 ;;_w	offset	16
   783 ;;_p	offset	18
   784 ;;_fp	offset=-2 (param)
   785 ;;_d	offset=-10 (param)
   786 ;;_x	offset=-11 (param)
   787 ;;_toupper$7617	offset	0
   788 ;;_c	offset=-2 (param)
   789 ;;_c	offset=-2 (param)
   790 ;;_c	offset=-2 (param)
   791 ;;_n	offset	0
   792 ;;_i	offset	8
   793 ;;_w	offset	10
   794 ;;_p	offset	12
   795 ;;_fp	offset=-2 (param)
   796 ;;_d	offset=-10 (param)
   797 ;;_counter	offset	0
   798 ;;_dividend	offset=-8 (param)
   799 ;;_divisor	offset=-16 (param)
   800 ;;_quotient	offset	0
   801 ;;_counter	offset	8
   802 ;;_dividend	offset=-8 (param)
   803 ;;_divisor	offset=-16 (param)
   804 ;;_r	offset	0
   805 ;;_l	offset	2
   806 ;;__l	offset=-2 (param)
   807 ;;__r	offset=-4 (param)
   808 ;;_n	offset=-6 (param)
   809 ;;_nuls	offset	0
   810 ;;_l	offset	7
   811 ;;_p	offset	9
   812 ;;_cp	offset	11
   813 ;;_w	offset	13
   814 ;;_i	offset	15
   815 ;;_fp	offset=-2 (param)
   816 ;;_s	offset=-4 (param)
   817 ;;_efgtoa$6648	offset	0
   818 ;;_efgtoa$6647	offset	2
   819 ;;_efgtoa$6646	offset	4
   820 ;;_efgtoa$6642	offset	6
   821 ;;_efgtoa$6638	offset	8
   822 ;;_efgtoa$6637	offset	10
   823 ;;_u	offset	12
   824 ;;_g	offset	16
   825 ;;_l	offset	20
   826 ;;_h	offset	24
   827 ;;_ou	offset	28
   828 ;;_n	offset	32
   829 ;;_e	offset	34
   830 ;;_i	offset	36
   831 ;;_w	offset	38
   832 ;;_p	offset	40
   833 ;;_sign	offset	42
   834 ;;_d	offset	44
   835 ;;_ne	offset	46
   836 ;;_m	offset	48
   837 ;;_pp	offset	50
   838 ;;_t	offset	52
   839 ;;_mode	offset	54
   840 ;;_nmode	offset	55
   841 ;;_fp	offset=-2 (param)
   842 ;;_f	offset=-6 (param)
   843 ;;_c	offset=-7 (param)
   844 ;;_tolower$7602	offset	0
   845 ;;_c	offset=-2 (param)
   846 ;;_c	offset=-2 (param)
   847 ;;_d	offset	0
   848 ;;_s	offset	2
   849 ;;_dest	offset=-2 (param)
   850 ;;_src	offset=-4 (param)
   851 ;;_u	offset	0
   852 ;;_m	offset	4
   853 ;;_e	offset	8
   854 ;;_x	offset=-4 (param)
   855 ;;_u	offset	0
   856 ;;_e	offset	4
   857 ;;_x	offset=-4 (param)
   858 ;;_exp1	offset	0
   859 ;;_sign1	offset	1
   860 ;;_f1	offset=-4 (param)
   861 ;;_f1	offset=-4 (param)
   862 ;;_ff1	offset=-4 (param)
   863 ;;_ff2	offset=-8 (param)
   864 ;;_sign	offset	0
   865 ;;_counter	offset	1
   866 ;;_dividend	offset=-2 (param)
   867 ;;_divisor	offset=-4 (param)
   868 ;;_quotient	offset	0
   869 ;;_sign	offset	2
   870 ;;_counter	offset	3
   871 ;;_dividend	offset=-2 (param)
   872 ;;_divisor	offset=-4 (param)
   873 ;;_dtoa$6614	offset	0
   874 ;;_n	offset	2
   875 ;;_i	offset	10
   876 ;;_s	offset	12
   877 ;;_w	offset	14
   878 ;;_p	offset	16
   879 ;;_fp	offset=-2 (param)
   880 ;;_d	offset=-10 (param)
   881 ;;_a	offset=-2 (param)
   882 ;;_sign	offset	0
   883 ;;_counter	offset	1
   884 ;;_dividend	offset=-8 (param)
   885 ;;_divisor	offset=-16 (param)
   886 ;;_quotient	offset	0
   887 ;;_sign	offset	8
   888 ;;_counter	offset	9
   889 ;;_dividend	offset=-8 (param)
   890 ;;_divisor	offset=-16 (param)
   891 ;;_w	offset	0
   892 ;;_fp	offset=-2 (param)
   893 ;;_c	offset=-3 (param)
   894 ;;_w	offset	0
   895 ;;_i	offset	2
   896 ;;_fp	offset=-2 (param)
   897 ;;_buf	offset=-4 (param)
   898 ;;_p	offset=-6 (param)
   899 ;;_a	offset	0
   900 ;;_s	offset=-2 (param)
   901 ;;_i	offset	0
   902 ;;_c	offset	2
   903 ;;_s	offset=-2 (param)
   904 ;;_fp	offset=-4 (param)
   905 ;;_c	offset=-2 (param)
   906 ;;_fp	offset=-4 (param)
   907 ;;_c	offset=-1 (param)
   908 ;;__this	offset=-2 (param)
   909 ;;_c	offset=-3 (param)
   910 ;;_atoi$7234	offset	0
   911 ;;_atoi$7232	offset	2
   912 ;;_atoi$7233	offset	4
   913 ;;_n	offset	5
   914 ;;_neg	offset	7
   915 ;;_s	offset=-2 (param)
   916 ;;_isspace$7283	offset	0
   917 ;;_c	offset=-2 (param)
   918 ;;_c	offset=-2 (param)
   919 ;;_dsize	offset=-2 (param)
   920 ;;_u	offset	0
   921 ;;_x	offset=-4 (param)
   922 ;;_f1p	offset=-2 (param)
   923 ;;_f2	offset=-6 (param)
   924 ;;_timer	offset=-1 (param)
   925 ;;_count	offset=-3 (param)
   926 ;;_channel	offset=-1 (param)
   927 ;;_i	offset	0
   928                           
   929                           	psect	idataBIGRAM
   930  01AA30                     __pidataBIGRAM:
   931                           	opt callstack 0
   932                           
   933                           ;initializer for _port_data
   934  01AA30  FF                 	db	255
   935  01AA31  00                 	db	0
   936  01AA32  FF                 	db	255
   937  01AA33  00                 	db	0
   938  01AA34  FF                 	db	255
   939  01AA35  00                 	db	0
   940  01AA36  FF                 	db	255
   941  01AA37  00                 	db	0
   942  01AA38  FF                 	db	255
   943  01AA39  00                 	db	0
   944  01AA3A  FF                 	db	255
   945  01AA3B  00                 	db	0
   946  01AA3C  FF                 	db	255
   947  01AA3D  00                 	db	0
   948  01AA3E  FF                 	db	255
   949  01AA3F  00                 	db	0
   950  01AA40  00                 	db	0
   951  01AA41  00                 	db	0
   952  01AA42  00                 	db	0
   953  01AA43  00                 	db	0
   954  01AA44  00                 	db	0
   955  01AA45  00                 	db	0
   956  01AA46  00                 	db	0
   957  01AA47  00                 	db	0
   958  01AA48  00                 	db	0
   959  01AA49  00                 	db	0
   960  01AA4A  00                 	db	0
   961  01AA4B  00                 	db	0
   962  01AA4C  00                 	db	0
   963  01AA4D  00                 	db	0
   964  01AA4E  00                 	db	0
   965  01AA4F  00                 	db	0
   966  01AA50  00                 	db	0
   967  01AA51  00                 	db	0
   968  01AA52  00                 	db	0
   969  01AA53  00                 	db	0
   970  01AA54  00                 	db	0
   971  01AA55  00                 	db	0
   972  01AA56  00                 	db	0
   973  01AA57  00                 	db	0
   974  01AA58  00                 	db	0
   975  01AA59  00                 	db	0
   976  01AA5A  00                 	db	0
   977  01AA5B  00                 	db	0
   978  01AA5C  00                 	db	0
   979  01AA5D  00                 	db	0
   980  01AA5E  00                 	db	0
   981  01AA5F  00                 	db	0
   982  01AA60  00                 	db	0
   983  01AA61  00                 	db	0
   984  01AA62  00                 	db	0
   985  01AA63  00                 	db	0
   986  01AA64  00                 	db	0
   987  01AA65  00                 	db	0
   988  01AA66  00                 	db	0
   989  01AA67  00                 	db	0
   990  01AA68  00                 	db	0
   991  01AA69  00                 	db	0
   992  01AA6A  00                 	db	0
   993  01AA6B  00                 	db	0
   994  01AA6C  00                 	db	0
   995  01AA6D  00                 	db	0
   996  01AA6E  00                 	db	0
   997  01AA6F  00                 	db	0
   998  01AA70  00                 	db	0
   999  01AA71  00                 	db	0
  1000  01AA72  00                 	db	0
  1001  01AA73  00                 	db	0
  1002  01AA74  00                 	db	0
  1003  01AA75  00                 	db	0
  1004  01AA76  00                 	db	0
  1005  01AA77  00                 	db	0
  1006  01AA78  00                 	db	0
  1007  01AA79  00                 	db	0
  1008  01AA7A  00                 	db	0
  1009  01AA7B  00                 	db	0
  1010  01AA7C  00                 	db	0
  1011  01AA7D  00                 	db	0
  1012  01AA7E  00                 	db	0
  1013  01AA7F  00                 	db	0
  1014  01AA80  00                 	db	0
  1015  01AA81  00                 	db	0
  1016  01AA82  00                 	db	0
  1017  01AA83  00                 	db	0
  1018  01AA84  00                 	db	0
  1019  01AA85  00                 	db	0
  1020  01AA86  00                 	db	0
  1021  01AA87  00                 	db	0
  1022  01AA88  00                 	db	0
  1023  01AA89  00                 	db	0
  1024  01AA8A  00                 	db	0
  1025  01AA8B  00                 	db	0
  1026  01AA8C  00                 	db	0
  1027  01AA8D  00                 	db	0
  1028  01AA8E  00                 	db	0
  1029  01AA8F  00                 	db	0
  1030  01AA90  00                 	db	0
  1031  01AA91  00                 	db	0
  1032  01AA92  00                 	db	0
  1033  01AA93  00                 	db	0
  1034  01AA94  00                 	db	0
  1035  01AA95  00                 	db	0
  1036  01AA96  00                 	db	0
  1037  01AA97  00                 	db	0
  1038  01AA98  00                 	db	0
  1039  01AA99  00                 	db	0
  1040  01AA9A  00                 	db	0
  1041  01AA9B  00                 	db	0
  1042  01AA9C  00                 	db	0
  1043  01AA9D  00                 	db	0
  1044  01AA9E  00                 	db	0
  1045  01AA9F  00                 	db	0
  1046  01AAA0  00                 	db	0
  1047  01AAA1  00                 	db	0
  1048  01AAA2  00                 	db	0
  1049  01AAA3  00                 	db	0
  1050  01AAA4  00                 	db	0
  1051  01AAA5  00                 	db	0
  1052  01AAA6  00                 	db	0
  1053  01AAA7  00                 	db	0
  1054  01AAA8  00                 	db	0
  1055  01AAA9  00                 	db	0
  1056  01AAAA  00                 	db	0
  1057  01AAAB  00                 	db	0
  1058  01AAAC  00                 	db	0
  1059  01AAAD  00                 	db	0
  1060  01AAAE  00                 	db	0
  1061  01AAAF  00                 	db	0
  1062  01AAB0  00                 	db	0
  1063  01AAB1  00                 	db	0
  1064  01AAB2  00                 	db	0
  1065  01AAB3  00                 	db	0
  1066  01AAB4  00                 	db	0
  1067  01AAB5  00                 	db	0
  1068  01AAB6  00                 	db	0
  1069  01AAB7  00                 	db	0
  1070  01AAB8  00                 	db	0
  1071  01AAB9  00                 	db	0
  1072  01AABA  00                 	db	0
  1073  01AABB  00                 	db	0
  1074  01AABC  00                 	db	0
  1075  01AABD  00                 	db	0
  1076  01AABE  00                 	db	0
  1077  01AABF  00                 	db	0
  1078  01AAC0  00                 	db	0
  1079  01AAC1  00                 	db	0
  1080  01AAC2  00                 	db	0
  1081  01AAC3  00                 	db	0
  1082  01AAC4  00                 	db	0
  1083  01AAC5  00                 	db	0
  1084  01AAC6  00                 	db	0
  1085  01AAC7  00                 	db	0
  1086  01AAC8  00                 	db	0
  1087  01AAC9  00                 	db	0
  1088  01AACA  00                 	db	0
  1089  01AACB  00                 	db	0
  1090  01AACC  00                 	db	0
  1091  01AACD  00                 	db	0
  1092  01AACE  00                 	db	0
  1093  01AACF  00                 	db	0
  1094  01AAD0  00                 	db	0
  1095  01AAD1  00                 	db	0
  1096  01AAD2  00                 	db	0
  1097  01AAD3  00                 	db	0
  1098  01AAD4  00                 	db	0
  1099  01AAD5  00                 	db	0
  1100  01AAD6  00                 	db	0
  1101  01AAD7  00                 	db	0
  1102  01AAD8  00                 	db	0
  1103  01AAD9  00                 	db	0
  1104  01AADA  00                 	db	0
  1105  01AADB  00                 	db	0
  1106  01AADC  00                 	db	0
  1107  01AADD  00                 	db	0
  1108  01AADE  00                 	db	0
  1109  01AADF  00                 	db	0
  1110  01AAE0  00                 	db	0
  1111  01AAE1  00                 	db	0
  1112  01AAE2  00                 	db	0
  1113  01AAE3  00                 	db	0
  1114  01AAE4  00                 	db	0
  1115  01AAE5  00                 	db	0
  1116  01AAE6  00                 	db	0
  1117  01AAE7  00                 	db	0
  1118  01AAE8  00                 	db	0
  1119  01AAE9  00                 	db	0
  1120  01AAEA  00                 	db	0
  1121  01AAEB  00                 	db	0
  1122  01AAEC  00                 	db	0
  1123  01AAED  00                 	db	0
  1124  01AAEE  00                 	db	0
  1125  01AAEF  00                 	db	0
  1126  01AAF0  00                 	db	0
  1127  01AAF1  00                 	db	0
  1128  01AAF2  00                 	db	0
  1129  01AAF3  00                 	db	0
  1130  01AAF4  00                 	db	0
  1131  01AAF5  00                 	db	0
  1132  01AAF6  00                 	db	0
  1133  01AAF7  00                 	db	0
  1134  01AAF8  00                 	db	0
  1135  01AAF9  00                 	db	0
  1136  01AAFA  00                 	db	0
  1137  01AAFB  00                 	db	0
  1138  01AAFC  00                 	db	0
  1139  01AAFD  00                 	db	0
  1140  01AAFE  00                 	db	0
  1141  01AAFF  00                 	db	0
  1142  01AB00  00                 	db	0
  1143  01AB01  00                 	db	0
  1144  01AB02  00                 	db	0
  1145  01AB03  00                 	db	0
  1146  01AB04  00                 	db	0
  1147  01AB05  00                 	db	0
  1148  01AB06  00                 	db	0
  1149  01AB07  00                 	db	0
  1150  01AB08  00                 	db	0
  1151  01AB09  00                 	db	0
  1152  01AB0A  00                 	db	0
  1153  01AB0B  00                 	db	0
  1154  01AB0C  00                 	db	0
  1155  01AB0D  00                 	db	0
  1156  01AB0E  00                 	db	0
  1157  01AB0F  00                 	db	0
  1158  01AB10  00                 	db	0
  1159  01AB11  00                 	db	0
  1160  01AB12  00                 	db	0
  1161  01AB13  00                 	db	0
  1162  01AB14  00                 	db	0
  1163  01AB15  00                 	db	0
  1164  01AB16  00                 	db	0
  1165  01AB17  00                 	db	0
  1166  01AB18  00                 	db	0
  1167  01AB19  00                 	db	0
  1168  01AB1A  00                 	db	0
  1169  01AB1B  00                 	db	0
  1170  01AB1C  00                 	db	0
  1171  01AB1D  00                 	db	0
  1172  01AB1E  00                 	db	0
  1173  01AB1F  00                 	db	0
  1174  01AB20  00                 	db	0
  1175  01AB21  00                 	db	0
  1176  01AB22  00                 	db	0
  1177  01AB23  00                 	db	0
  1178  01AB24  00                 	db	0
  1179  01AB25  00                 	db	0
  1180  01AB26  00                 	db	0
  1181  01AB27  00                 	db	0
  1182  01AB28  00                 	db	0
  1183  01AB29  00                 	db	0
  1184  01AB2A  00                 	db	0
  1185  01AB2B  00                 	db	0
  1186  01AB2C  00                 	db	0
  1187  01AB2D  00                 	db	0
  1188  01AB2E  00                 	db	0
  1189  01AB2F  00                 	db	0
  1190  01AB30  00                 	db	0
  1191  01AB31  00                 	db	0
  1192  01AB32  00                 	db	0
  1193  01AB33  00                 	db	0
  1194  01AB34  00                 	db	0
  1195  01AB35  00                 	db	0
  1196  01AB36  00                 	db	0
  1197  01AB37  00                 	db	0
  1198  01AB38  00                 	db	0
  1199  01AB39  00                 	db	0
  1200  01AB3A  00                 	db	0
  1201  01AB3B  00                 	db	0
  1202  01AB3C  00                 	db	0
  1203  01AB3D  00                 	db	0
  1204  01AB3E  00                 	db	0
  1205  01AB3F  00                 	db	0
  1206  01AB40  00                 	db	0
  1207  01AB41  00                 	db	0
  1208  01AB42  00                 	db	0
  1209  01AB43  00                 	db	0
  1210  01AB44  00                 	db	0
  1211  01AB45  00                 	db	0
  1212  01AB46  00                 	db	0
  1213  01AB47  00                 	db	0
  1214  01AB48  00                 	db	0
  1215  01AB49  00                 	db	0
  1216  01AB4A  00                 	db	0
  1217  01AB4B  00                 	db	0
  1218  01AB4C  00                 	db	0
  1219  01AB4D  00                 	db	0
  1220  01AB4E  00                 	db	0
  1221  01AB4F  00                 	db	0
  1222  01AB50  00                 	db	0
  1223  01AB51  00                 	db	0
  1224  01AB52  00                 	db	0
  1225  01AB53  00                 	db	0
  1226  01AB54  00                 	db	0
  1227  01AB55  00                 	db	0
  1228  01AB56  00                 	db	0
  1229  01AB57  00                 	db	0
  1230  01AB58  00                 	db	0
  1231  01AB59  00                 	db	0
  1232  01AB5A  00                 	db	0
  1233  01AB5B  00                 	db	0
  1234  01AB5C  00                 	db	0
  1235  01AB5D  00                 	db	0
  1236  01AB5E  00                 	db	0
  1237  01AB5F  00                 	db	0
  1238  01AB60  00                 	db	0
  1239  01AB61  00                 	db	0
  1240  01AB62  00                 	db	0
  1241  01AB63  00                 	db	0
  1242  01AB64  00                 	db	0
  1243  01AB65  00                 	db	0
  1244  01AB66  00                 	db	0
  1245  01AB67  00                 	db	0
  1246  01AB68  00                 	db	0
  1247  01AB69  00                 	db	0
  1248  01AB6A  00                 	db	0
  1249  01AB6B  00                 	db	0
  1250  01AB6C  00                 	db	0
  1251  01AB6D  00                 	db	0
  1252  01AB6E  00                 	db	0
  1253  01AB6F  00                 	db	0
  1254  01AB70  00                 	db	0
  1255  01AB71  00                 	db	0
  1256  01AB72  00                 	db	0
  1257  01AB73  00                 	db	0
  1258  01AB74  00                 	db	0
  1259  01AB75  00                 	db	0
  1260  01AB76  00                 	db	0
  1261  01AB77  00                 	db	0
  1262  01AB78  00                 	db	0
  1263  01AB79  00                 	db	0
  1264  01AB7A  00                 	db	0
  1265  01AB7B  00                 	db	0
  1266  01AB7C  00                 	db	0
  1267  01AB7D  00                 	db	0
  1268  01AB7E  00                 	db	0
  1269  01AB7F  00                 	db	0
  1270  01AB80  00                 	db	0
  1271  01AB81  00                 	db	0
  1272  01AB82  00                 	db	0
  1273  01AB83  00                 	db	0
  1274  01AB84  00                 	db	0
  1275  01AB85  00                 	db	0
  1276  01AB86  00                 	db	0
  1277  01AB87  00                 	db	0
  1278  01AB88  00                 	db	0
  1279  01AB89  00                 	db	0
  1280  01AB8A  00                 	db	0
  1281  01AB8B  00                 	db	0
  1282  01AB8C  00                 	db	0
  1283  01AB8D  00                 	db	0
  1284  01AB8E  00                 	db	0
  1285  01AB8F  00                 	db	0
  1286  01AB90  00                 	db	0
  1287  01AB91  00                 	db	0
  1288  01AB92  00                 	db	0
  1289  01AB93  00                 	db	0
  1290  01AB94  00                 	db	0
  1291  01AB95  00                 	db	0
  1292  01AB96  00                 	db	0
  1293  01AB97  00                 	db	0
  1294  01AB98  00                 	db	0
  1295  01AB99  00                 	db	0
  1296  01AB9A  00                 	db	0
  1297  01AB9B  00                 	db	0
  1298  01AB9C  00                 	db	0
  1299  01AB9D  00                 	db	0
  1300  01AB9E  00                 	db	0
  1301  01AB9F  00                 	db	0
  1302  01ABA0  00                 	db	0
  1303  01ABA1  00                 	db	0
  1304  01ABA2  00                 	db	0
  1305  01ABA3  00                 	db	0
  1306  01ABA4  00                 	db	0
  1307  01ABA5  00                 	db	0
  1308  01ABA6  00                 	db	0
  1309  01ABA7  00                 	db	0
  1310  01ABA8  00                 	db	0
  1311  01ABA9  00                 	db	0
  1312  01ABAA  00                 	db	0
  1313  01ABAB  00                 	db	0
  1314  01ABAC  00                 	db	0
  1315  01ABAD  00                 	db	0
  1316  01ABAE  00                 	db	0
  1317  01ABAF  00                 	db	0
  1318  01ABB0  00                 	db	0
  1319  01ABB1  00                 	db	0
  1320  01ABB2  00                 	db	0
  1321  01ABB3  00                 	db	0
  1322  01ABB4  00                 	db	0
  1323  01ABB5  00                 	db	0
  1324  01ABB6  00                 	db	0
  1325  01ABB7  00                 	db	0
  1326  01ABB8  00                 	db	0
  1327  01ABB9  00                 	db	0
  1328  01ABBA  00                 	db	0
  1329  01ABBB  00                 	db	0
  1330  01ABBC  00                 	db	0
  1331  01ABBD  00                 	db	0
  1332  01ABBE  00                 	db	0
  1333  01ABBF  00                 	db	0
  1334  01ABC0  00                 	db	0
  1335  01ABC1  00                 	db	0
  1336  01ABC2  00                 	db	0
  1337  01ABC3  00                 	db	0
  1338  01ABC4  00                 	db	0
  1339  01ABC5  00                 	db	0
  1340  01ABC6  00                 	db	0
  1341  01ABC7  00                 	db	0
  1342  01ABC8  00                 	db	0
  1343  01ABC9  00                 	db	0
  1344  01ABCA  00                 	db	0
  1345  01ABCB  00                 	db	0
  1346  01ABCC  00                 	db	0
  1347  01ABCD  00                 	db	0
  1348  01ABCE  00                 	db	0
  1349  01ABCF  00                 	db	0
  1350  01ABD0  00                 	db	0
  1351  01ABD1  00                 	db	0
  1352  01ABD2  00                 	db	0
  1353  01ABD3  00                 	db	0
  1354  01ABD4  00                 	db	0
  1355  01ABD5  00                 	db	0
  1356  01ABD6  00                 	db	0
  1357  01ABD7  00                 	db	0
  1358  01ABD8  00                 	db	0
  1359  01ABD9  00                 	db	0
  1360  01ABDA  00                 	db	0
  1361  01ABDB  00                 	db	0
  1362  01ABDC  00                 	db	0
  1363  01ABDD  00                 	db	0
  1364  01ABDE  00                 	db	0
  1365  01ABDF  00                 	db	0
  1366  01ABE0  00                 	db	0
  1367  01ABE1  00                 	db	0
  1368  01ABE2  00                 	db	0
  1369  01ABE3  00                 	db	0
  1370  01ABE4  00                 	db	0
  1371  01ABE5  00                 	db	0
  1372  01ABE6  00                 	db	0
  1373  01ABE7  00                 	db	0
  1374  01ABE8  00                 	db	0
  1375  01ABE9  00                 	db	0
  1376  01ABEA  00                 	db	0
  1377  01ABEB  00                 	db	0
  1378  01ABEC  00                 	db	0
  1379  01ABED  00                 	db	0
  1380  01ABEE  00                 	db	0
  1381  01ABEF  00                 	db	0
  1382  01ABF0  00                 	db	0
  1383  01ABF1  00                 	db	0
  1384  01ABF2  00                 	db	0
  1385  01ABF3  00                 	db	0
  1386  01ABF4  00                 	db	0
  1387  01ABF5  00                 	db	0
  1388  01ABF6  00                 	db	0
  1389  01ABF7  00                 	db	0
  1390  01ABF8  00                 	db	0
  1391  01ABF9  00                 	db	0
  1392  01ABFA  00                 	db	0
  1393  01ABFB  00                 	db	0
  1394  01ABFC  00                 	db	0
  1395  01ABFD  00                 	db	0
  1396  01ABFE  00                 	db	0
  1397  01ABFF  00                 	db	0
  1398  01AC00  00                 	db	0
  1399  01AC01  00                 	db	0
  1400  01AC02  00                 	db	0
  1401  01AC03  00                 	db	0
  1402  01AC04  00                 	db	0
  1403  01AC05  00                 	db	0
  1404  01AC06  00                 	db	0
  1405  01AC07  00                 	db	0
  1406  01AC08  00                 	db	0
  1407  01AC09  00                 	db	0
  1408  01AC0A  00                 	db	0
  1409  01AC0B  00                 	db	0
  1410  01AC0C  00                 	db	0
  1411  01AC0D  00                 	db	0
  1412  01AC0E  00                 	db	0
  1413  01AC0F  00                 	db	0
  1414  01AC10  00                 	db	0
  1415  01AC11  00                 	db	0
  1416  01AC12  00                 	db	0
  1417  01AC13  00                 	db	0
  1418  01AC14  00                 	db	0
  1419  01AC15  00                 	db	0
  1420  01AC16  00                 	db	0
  1421  01AC17  00                 	db	0
  1422  01AC18  00                 	db	0
  1423  01AC19  00                 	db	0
  1424  01AC1A  00                 	db	0
  1425  01AC1B  00                 	db	0
  1426  01AC1C  00                 	db	0
  1427  01AC1D  00                 	db	0
  1428  01AC1E  00                 	db	0
  1429  01AC1F  00                 	db	0
  1430  01AC20  00                 	db	0
  1431  01AC21  00                 	db	0
  1432  01AC22  00                 	db	0
  1433  01AC23  00                 	db	0
  1434  01AC24  00                 	db	0
  1435  01AC25  00                 	db	0
  1436  01AC26  00                 	db	0
  1437  01AC27  00                 	db	0
  1438  01AC28  00                 	db	0
  1439  01AC29  00                 	db	0
  1440  01AC2A  00                 	db	0
  1441  01AC2B  00                 	db	0
  1442  01AC2C  00                 	db	0
  1443  01AC2D  00                 	db	0
  1444  01AC2E  00                 	db	0
  1445  01AC2F  00                 	db	0
  1446                           
  1447                           ;initializer for _C
  1448  01AC30  0000               	dw	0
  1449  01AC32  0000               	dw	0
  1450  01AC34  0000               	dw	0
  1451  01AC36  0000               	dw	0
  1452  01AC38  0000               	dw	0
  1453  01AC3A  0000               	dw	0
  1454  01AC3C  0000               	dw	0
  1455  01AC3E  0000               	dw	0
  1456  01AC40  0000               	dw	0
  1457  01AC42  0000               	dw	0
  1458  01AC44  0000               	dw	0
  1459  01AC46  0000               	dw	0
  1460  01AC48  0000               	dw	0
  1461  01AC4A  0000               	dw	0
  1462  01AC4C  0000               	dw	0
  1463  01AC4E  0000               	dw	0
  1464  01AC50  0000               	dw	0
  1465  01AC52  0000               	dw	0
  1466  01AC54  0000               	dw	0
  1467  01AC56  0000               	dw	0
  1468  01AC58  0000               	dw	0
  1469  01AC5A  0000               	dw	0
  1470  01AC5C  0000               	dw	0
  1471  01AC5E  0000               	dw	0
  1472  01AC60  0000               	dw	0
  1473  01AC62  0000               	dw	0
  1474  01AC64  0000               	dw	0
  1475  01AC66  0000               	dw	0
  1476  01AC68  0000               	dw	0
  1477  01AC6A  0000               	dw	0
  1478  01AC6C  0000               	dw	0
  1479  01AC6E  0000               	dw	0
  1480  01AC70  0000               	dw	0
  1481  01AC72  0000               	dw	0
  1482  01AC74  0000               	dw	0
  1483  01AC76  0000               	dw	0
  1484  01AC78  0000               	dw	0
  1485  01AC7A  0000               	dw	0
  1486  01AC7C  0000               	dw	0
  1487  01AC7E  0000               	dw	0
  1488  01AC80  0000               	dw	0
  1489  01AC82  0000               	dw	0
  1490  01AC84  0000               	dw	0
  1491  01AC86  0000               	dw	0
  1492  01AC88  0000               	dw	0
  1493  01AC8A  0000               	dw	0
  1494  01AC8C  0000               	dw	0
  1495  01AC8E  0000               	dw	0
  1496  01AC90  0000               	dw	0
  1497  01AC92  0000               	dw	0
  1498  01AC94  0000               	dw	0
  1499  01AC96  0000               	dw	0
  1500  01AC98  0000               	dw	0
  1501  01AC9A  0000               	dw	0
  1502  01AC9C  0000               	dw	0
  1503  01AC9E  0000               	dw	0
  1504  01ACA0  0000               	dw	0
  1505  01ACA2  0000               	dw	0
  1506  01ACA4  0000               	dw	0
  1507  01ACA6  0000               	dw	0
  1508  01ACA8  0000               	dw	0
  1509  01ACAA  0000               	dw	0
  1510  01ACAC  0000               	dw	0
  1511  01ACAE  0000               	dw	0
  1512  01ACB0  0000               	dw	0
  1513  01ACB2  0000               	dw	0
  1514  01ACB4  0000               	dw	0
  1515  01ACB6  0000               	dw	0
  1516  01ACB8  0000               	dw	0
  1517  01ACBA  0000               	dw	0
  1518  01ACBC  0000               	dw	0
  1519  01ACBE  42FA               	dw	17146
  1520  01ACC0  0000               	dw	0
  1521  01ACC2  0000               	dw	0
  1522  01ACC4  0000               	dw	0
  1523  01ACC6  0000               	dw	0
  1524  01ACC8  0000               	dw	0
  1525  01ACCA  0000               	dw	0
  1526  01ACCC  0000               	dw	0
  1527  01ACCE  0000               	dw	0
  1528  01ACD0  0000               	dw	0
  1529  01ACD2  0000               	dw	0
  1530  01ACD4  0000               	dw	0
  1531  01ACD6  0000               	dw	0
  1532  01ACD8  0000               	dw	0
  1533  01ACDA  0000               	dw	0
  1534  01ACDC  0000               	dw	0
  1535  01ACDE  0000               	dw	0
  1536  01ACE0  0000               	dw	0
  1537  01ACE2  0000               	dw	0
  1538  01ACE4  0000               	dw	0
  1539  01ACE6  0000               	dw	0
  1540  01ACE8  00                 	db	0
  1541  01ACE9  01                 	db	1
  1542  01ACEA  0000               	dw	0
  1543  01ACEC  0000               	dw	0
  1544  01ACEE  0000               	dw	0
  1545  01ACF0  0000               	dw	0
  1546  01ACF2  0000               	dw	0
  1547  01ACF4  3F80               	dw	16256
  1548  01ACF6  0000               	dw	0
  1549  01ACF8  3F80               	dw	16256
  1550  01ACFA  0000               	dw	0
  1551  01ACFC  0000               	dw	0
  1552  01ACFE  0000               	dw	0
  1553  01AD00  0000               	dw	0
  1554  01AD02  0000               	dw	0
  1555  01AD04  0000               	dw	0
  1556  01AD06  0000               	dw	0
  1557  01AD08  0000               	dw	0
  1558  01AD0A  0000               	dw	0
  1559  01AD0C  0000               	dw	0
  1560  01AD0E  00                 	db	0
  1561  01AD0F  00                 	db	0
  1562  01AD10  00                 	db	0
  1563  01AD11  00                 	db	0
  1564  01AD12  00                 	db	0
  1565  01AD13  00                 	db	0
  1566  01AD14  00                 	db	0
  1567  01AD15  00                 	db	0
  1568  01AD16  00                 	db	0
  1569  01AD17  00                 	db	0
  1570  01AD18  00                 	db	0
  1571  01AD19  00                 	db	0
  1572  01AD1A  00                 	db	0
  1573  01AD1B  00                 	db	0
  1574  01AD1C  00                 	db	0
  1575  01AD1D  00                 	db	0
  1576  01AD1E  00                 	db	0
  1577  01AD1F  00                 	db	0
  1578  01AD20  00                 	db	0
  1579  01AD21  00                 	db	0
  1580  01AD22  00                 	db	0
  1581  01AD23  00                 	db	0
  1582  01AD24  00                 	db	0
  1583  01AD25  00                 	db	0
  1584  01AD26  00                 	db	0
  1585  01AD27  00                 	db	0
  1586  01AD28  00                 	db	0
  1587  01AD29  00                 	db	0
  1588  01AD2A  00                 	db	0
  1589  01AD2B  00                 	db	0
  1590  01AD2C  00                 	db	0
  1591  01AD2D  00                 	db	0
  1592  01AD2E  00                 	db	0
  1593  01AD2F  00                 	db	0
  1594  01AD30  00                 	db	0
  1595  01AD31  00                 	db	0
  1596  01AD32  00                 	db	0
  1597  01AD33  00                 	db	0
  1598  01AD34  00                 	db	0
  1599  01AD35  00                 	db	0
  1600  01AD36  00                 	db	0
  1601  01AD37  00                 	db	0
  1602  01AD38  00                 	db	0
  1603  01AD39  00                 	db	0
  1604  01AD3A  00                 	db	0
  1605  01AD3B  00                 	db	0
  1606  01AD3C  00                 	db	0
  1607  01AD3D  00                 	db	0
  1608  01AD3E  00                 	db	0
  1609  01AD3F  00                 	db	0
  1610  01AD40  00                 	db	0
  1611  01AD41  00                 	db	0
  1612  01AD42  00                 	db	0
  1613  01AD43  00                 	db	0
  1614  01AD44  00                 	db	0
  1615  01AD45  00                 	db	0
  1616  01AD46  00                 	db	0
  1617  01AD47  00                 	db	0
  1618  01AD48  00                 	db	0
  1619  01AD49  00                 	db	0
  1620  01AD4A  0000               	dw	0
  1621  01AD4C  0000               	dw	0
  1622  01AD4E  0000               	dw	0
  1623  01AD50  0000               	dw	0
  1624  01AD52  0000               	dw	0
  1625  01AD54  0000               	dw	0
  1626  01AD56  0000               	dw	0
  1627  01AD58  0000               	dw	0
  1628  01AD5A  0000               	dw	0
  1629  01AD5C  0000               	dw	0
  1630  01AD5E  01                 	db	1
  1631  01AD5F  00                 	db	0
  1632  01AD60  0000               	dw	0
  1633  01AD62  0000               	dw	0
  1634  01AD64  0000               	dw	0
  1635  01AD66  0000               	dw	0
  1636  01AD68  0000               	dw	0
  1637  01AD6A  0000               	dw	0
  1638  01AD6C  0000               	dw	0
  1639  01AD6E  0000               	dw	0
  1640                           
  1641                           	psect	idataBANK1
  1642  001026                     __pidataBANK1:
  1643                           	opt callstack 0
  1644                           
  1645                           ;initializer for _R
  1646  001026  0000               	dw	0
  1647  001028  0000               	dw	0
  1648  00102A  0000               	dw	0
  1649  00102C  0000               	dw	0
  1650  00102E  0000               	dw	0
  1651  001030  0000               	dw	0
  1652  001032  0000               	dw	0
  1653  001034  0000               	dw	0
  1654  001036  0000               	dw	0
  1655  001038  0000               	dw	0
  1656  00103A  0000               	dw	0
  1657  00103C  0000               	dw	0
  1658  00103E  0000               	dw	0
  1659  001040  0000               	dw	0
  1660  001042  0000               	dw	0
  1661  001044  0000               	dw	0
  1662  001046  0000               	dw	0
  1663  001048  0000               	dw	0
  1664  00104A  0000               	dw	0
  1665  00104C  0F62               	dw	3938
  1666  00104E  0FA4               	dw	4004
  1667  001050  89A0               	dw	35232
  1668  001052  3DB0               	dw	15792
  1669  001054  DEA4               	dw	56996
  1670  001056  3D13               	dw	15635
  1671  001058  00                 	db	0
  1672  001059  0000               	dw	0
  1673  00105B  00                 	db	0
  1674  00105C  00                 	db	0
  1675  00105D  0000               	dw	0
  1676  00105F  0000               	dw	0
  1677  001061  0000               	dw	0
  1678  001063  0000               	dw	0
  1679  001065  0000               	dw	0
  1680  001067  0000               	dw	0
  1681  001069  0000               	dw	0
  1682  00106B  0000               	dw	0
  1683  00106D  0000               	dw	0
  1684  00106F  0000               	dw	0
  1685  001071  0000               	dw	0
  1686  001073  0000               	dw	0
  1687  001075  0000               	dw	0
  1688  001077  0000               	dw	0
  1689  001079  0000               	dw	0
  1690  00107B  0000               	dw	0
  1691  00107D  0000               	dw	0
  1692  00107F  0000               	dw	0
  1693  001081  0000               	dw	0
  1694  001083  0000               	dw	0
  1695  001085  0000               	dw	0
  1696  001087  0000               	dw	0
  1697  001089  0000               	dw	0
  1698  00108B  0000               	dw	0
  1699  00108D  0000               	dw	0
  1700  00108F  0000               	dw	0
  1701  001091  0000               	dw	0
  1702  001093  0000               	dw	0
  1703  001095  0000               	dw	0
  1704  001097  0000               	dw	0
  1705  001099  0000               	dw	0
  1706  00109B  0000               	dw	0
  1707  00109D  0000               	dw	0
  1708  00109F  0000               	dw	0
  1709  0010A1  0000               	dw	0
  1710  0010A3  0000               	dw	0
  1711  0010A5  0000               	dw	0
  1712  0010A7  0000               	dw	0
  1713  0010A9  0000               	dw	0
  1714  0010AB  0000               	dw	0
  1715  0010AD  0000               	dw	0
  1716  0010AF  0000               	dw	0
  1717  0010B1  0000               	dw	0
  1718  0010B3  0000               	dw	0
  1719  0010B5  0000               	dw	0
  1720  0010B7  0000               	dw	0
  1721  0010B9  0000               	dw	0
  1722  0010BB  0000               	dw	0
  1723  0010BD  00                 	db	0
  1724  0010BE  1957               	dw	6487
  1725  0010C0  42                 	db	66
  1726                           
  1727                           ;initializer for _H
  1728  0010C1  00                 	db	0
  1729  0010C2  00                 	db	0
  1730  0010C3  01                 	db	1
  1731  0010C4  00                 	db	0
  1732  0010C5  01                 	db	1
  1733  0010C6  00                 	db	0
  1734  0010C7  01                 	db	1
  1735  0010C8  00                 	db	0
  1736  0010C9  00                 	db	0
  1737                           
  1738                           	psect	idataBANK2
  1739  000A98                     __pidataBANK2:
  1740                           	opt callstack 0
  1741                           
  1742                           ;initializer for stoa@F1166
  1743  000A98  28                 	db	40
  1744  000A99  6E                 	db	110
  1745  000A9A  75                 	db	117
  1746  000A9B  6C                 	db	108
  1747  000A9C  6C                 	db	108
  1748  000A9D  29                 	db	41
  1749  000A9E  00                 	db	0
  1750                           
  1751                           ;initializer for _V
  1752  000A9F  00                 	db	0
  1753  000AA0  00                 	db	0
  1754  000AA1  00                 	db	0
  1755  000AA2  00                 	db	0
  1756  000AA3  00                 	db	0
  1757  000AA4  00                 	db	0
  1758  000AA5  00                 	db	0
  1759  000AA6  00                 	db	0
  1760  000AA7  00                 	db	0
  1761  000AA8  00                 	db	0
  1762  000AA9  00                 	db	0
  1763  000AAA  00                 	db	0
  1764  000AAB  00                 	db	0
  1765  000AAC  00                 	db	0
  1766  000AAD  00                 	db	0
  1767  000AAE  00                 	db	0
  1768  000AAF  00                 	db	0
  1769  000AB0  00                 	db	0
  1770  000AB1  00                 	db	0
  1771  000AB2  00                 	db	0
  1772  000AB3  00                 	db	0
  1773  000AB4  00                 	db	0
  1774  000AB5  00                 	db	0
  1775  000AB6  00                 	db	0
  1776  000AB7  00                 	db	0
  1777  000AB8  00                 	db	0
  1778  000AB9  00                 	db	0
  1779  000ABA  00                 	db	0
  1780  000ABB  00                 	db	0
  1781  000ABC  00                 	db	0
  1782  000ABD  00                 	db	0
  1783  000ABE  00                 	db	0
  1784  000ABF  00                 	db	0
  1785  000AC0  00                 	db	0
  1786  000AC1  00                 	db	0
  1787  000AC2  00                 	db	0
  1788  000AC3  00                 	db	0
  1789  000AC4  00                 	db	0
  1790  000AC5  00                 	db	0
  1791  000AC6  00                 	db	0
  1792  000AC7  00                 	db	0
  1793  000AC8  00                 	db	0
  1794  000AC9  00                 	db	0
  1795  000ACA  00                 	db	0
  1796  000ACB  00                 	db	0
  1797  000ACC  00                 	db	0
  1798  000ACD  00                 	db	0
  1799  000ACE  00                 	db	0
  1800  000ACF  00                 	db	0
  1801  000AD0  00                 	db	0
  1802  000AD1  00                 	db	0
  1803  000AD2  00                 	db	0
  1804  000AD3  00                 	db	0
  1805  000AD4  00                 	db	0
  1806  000AD5  00                 	db	0
  1807  000AD6  00                 	db	0
  1808  000AD7  00                 	db	0
  1809  000AD8  00                 	db	0
  1810  000AD9  00                 	db	0
  1811  000ADA  00                 	db	0
  1812  000ADB  00                 	db	0
  1813  000ADC  00                 	db	0
  1814  000ADD  00                 	db	0
  1815  000ADE  00                 	db	0
  1816  000ADF  00                 	db	0
  1817  000AE0  00                 	db	0
  1818  000AE1  00                 	db	0
  1819  000AE2  00                 	db	0
  1820  000AE3  00                 	db	0
  1821  000AE4  00                 	db	0
  1822  000AE5  00                 	db	0
  1823  000AE6  00                 	db	0
  1824  000AE7  00                 	db	0
  1825  000AE8  00                 	db	0
  1826  000AE9  00                 	db	0
  1827  000AEA  00                 	db	0
  1828  000AEB  00                 	db	0
  1829  000AEC  00                 	db	0
  1830  000AED  00                 	db	0
  1831  000AEE  00                 	db	0
  1832  000AEF  00                 	db	0
  1833  000AF0  00                 	db	0
  1834  000AF1  00                 	db	0
  1835  000AF2  00                 	db	0
  1836  000AF3  00                 	db	0
  1837  000AF4  00                 	db	0
  1838  000AF5  00                 	db	0
  1839  000AF6  00                 	db	0
  1840  000AF7  00                 	db	0
  1841  000AF8  00                 	db	0
  1842  000AF9  00                 	db	0
  1843  000AFA  00                 	db	0
  1844  000AFB  00                 	db	0
  1845  000AFC  00                 	db	0
  1846  000AFD  00                 	db	0
  1847  000AFE  00                 	db	0
  1848  000AFF  00                 	db	0
  1849  000B00  00                 	db	0
  1850  000B01  00                 	db	0
  1851  000B02  00                 	db	0
  1852  000B03  00                 	db	0
  1853  000B04  00                 	db	0
  1854  000B05  00                 	db	0
  1855  000B06  00                 	db	0
  1856  000B07  00                 	db	0
  1857  000B08  00                 	db	0
  1858  000B09  00                 	db	0
  1859  000B0A  00                 	db	0
  1860  000B0B  00                 	db	0
  1861  000B0C  00                 	db	0
  1862  000B0D  00                 	db	0
  1863  000B0E  00                 	db	0
  1864  000B0F  00                 	db	0
  1865  000B10  00                 	db	0
  1866  000B11  00                 	db	0
  1867  000B12  00                 	db	0
  1868  000B13  00                 	db	0
  1869  000B14  00                 	db	0
  1870  000B15  00                 	db	0
  1871  000B16  00                 	db	0
  1872  000B17  00                 	db	0
  1873  000B18  00                 	db	0
  1874  000B19  00                 	db	0
  1875  000B1A  00                 	db	0
  1876  000B1B  00                 	db	0
  1877  000B1C  00                 	db	0
  1878  000B1D  00                 	db	0
  1879  000B1E  00                 	db	0
  1880  000B1F  00                 	db	0
  1881  000B20  019A               	dw	410
  1882  000B22  5E48               	dw	24136
  1883  000B24  00                 	db	0
  1884  000B25  00                 	db	0
  1885  000B26  00                 	db	0
  1886  000B27  00                 	db	0
  1887  000B28  00                 	db	0
  1888  000B29  00                 	db	0
  1889  000B2A  00                 	db	0
  1890  000B2B  0000               	dw	0
  1891  000B2D  0000               	dw	0
  1892  000B2F  0000               	dw	0
  1893  000B31  0000               	dw	0
  1894  000B33  0000               	dw	0
  1895  000B35  0000               	dw	0
  1896  000B37  00                 	db	0
  1897  000B38  00                 	db	0
  1898  000B39  00                 	db	0
  1899  000B3A  00                 	db	0
  1900  000B3B  00                 	db	0
  1901  000B3C  00                 	db	0
  1902  000B3D  00                 	db	0
  1903  000B3E  00                 	db	0
  1904  000B3F  00                 	db	0
  1905  000B40  00                 	db	0
  1906  000B41  00                 	db	0
  1907  000B42  0000               	dw	0
  1908  000B44  0000               	dw	0
  1909  000B46  2D                 	db	45
  1910  000B47  00                 	db	0
  1911  000B48  00                 	db	0
  1912  000B49  00                 	db	0
  1913  000B4A  00                 	db	0
  1914  000B4B  00                 	db	0
  1915  000B4C  0000               	dw	0
  1916  000B4E  0000               	dw	0
  1917  000B50  0000               	dw	0
  1918  000B52  0000               	dw	0
  1919                           
  1920                           	psect	mediumconst
  1921  00F716                     __pmediumconst:
  1922                           	opt callstack 0
  1923  00F716  00                 	db	0
  1924  00F717                     _BVSOC_TABLE:
  1925                           	opt callstack 0
  1926  00F717  59D8               	dw	23000
  1927  00F719  0000               	dw	0
  1928  00F71B  0005               	dw	5
  1929  00F71D  0000               	dw	0
  1930  00F71F  5B68               	dw	23400
  1931  00F721  0000               	dw	0
  1932  00F723  000A               	dw	10
  1933  00F725  0000               	dw	0
  1934  00F727  5C30               	dw	23600
  1935  00F729  0000               	dw	0
  1936  00F72B  0014               	dw	20
  1937  00F72D  0000               	dw	0
  1938  00F72F  5E38               	dw	24120
  1939  00F731  0000               	dw	0
  1940  00F733  0019               	dw	25
  1941  00F735  0000               	dw	0
  1942  00F737  5E88               	dw	24200
  1943  00F739  0000               	dw	0
  1944  00F73B  001E               	dw	30
  1945  00F73D  0000               	dw	0
  1946  00F73F  5F78               	dw	24440
  1947  00F741  0000               	dw	0
  1948  00F743  0028               	dw	40
  1949  00F745  0000               	dw	0
  1950  00F747  5FDC               	dw	24540
  1951  00F749  0000               	dw	0
  1952  00F74B  002D               	dw	45
  1953  00F74D  0000               	dw	0
  1954  00F74F  6018               	dw	24600
  1955  00F751  0000               	dw	0
  1956  00F753  0032               	dw	50
  1957  00F755  0000               	dw	0
  1958  00F757  6046               	dw	24646
  1959  00F759  0000               	dw	0
  1960  00F75B  0035               	dw	53
  1961  00F75D  0000               	dw	0
  1962  00F75F  607C               	dw	24700
  1963  00F761  0000               	dw	0
  1964  00F763  0037               	dw	55
  1965  00F765  0000               	dw	0
  1966  00F767  60AE               	dw	24750
  1967  00F769  0000               	dw	0
  1968  00F76B  0039               	dw	57
  1969  00F76D  0000               	dw	0
  1970  00F76F  60E0               	dw	24800
  1971  00F771  0000               	dw	0
  1972  00F773  003C               	dw	60
  1973  00F775  0000               	dw	0
  1974  00F777  6112               	dw	24850
  1975  00F779  0000               	dw	0
  1976  00F77B  003F               	dw	63
  1977  00F77D  0000               	dw	0
  1978  00F77F  615D               	dw	24925
  1979  00F781  0000               	dw	0
  1980  00F783  0043               	dw	67
  1981  00F785  0000               	dw	0
  1982  00F787  61A8               	dw	25000
  1983  00F789  0000               	dw	0
  1984  00F78B  0046               	dw	70
  1985  00F78D  0000               	dw	0
  1986  00F78F  61BC               	dw	25020
  1987  00F791  0000               	dw	0
  1988  00F793  0048               	dw	72
  1989  00F795  0000               	dw	0
  1990  00F797  61D0               	dw	25040
  1991  00F799  0000               	dw	0
  1992  00F79B  004B               	dw	75
  1993  00F79D  0000               	dw	0
  1994  00F79F  61DA               	dw	25050
  1995  00F7A1  0000               	dw	0
  1996  00F7A3  0050               	dw	80
  1997  00F7A5  0000               	dw	0
  1998  00F7A7  61E4               	dw	25060
  1999  00F7A9  0000               	dw	0
  2000  00F7AB  0055               	dw	85
  2001  00F7AD  0000               	dw	0
  2002  00F7AF  61F8               	dw	25080
  2003  00F7B1  0000               	dw	0
  2004  00F7B3  005A               	dw	90
  2005  00F7B5  0000               	dw	0
  2006  00F7B7  6208               	dw	25096
  2007  00F7B9  0000               	dw	0
  2008  00F7BB  005C               	dw	92
  2009  00F7BD  0000               	dw	0
  2010  00F7BF  6222               	dw	25122
  2011  00F7C1  0000               	dw	0
  2012  00F7C3  005D               	dw	93
  2013  00F7C5  0000               	dw	0
  2014  00F7C7  6234               	dw	25140
  2015  00F7C9  0000               	dw	0
  2016  00F7CB  005F               	dw	95
  2017  00F7CD  0000               	dw	0
  2018  00F7CF  6248               	dw	25160
  2019  00F7D1  0000               	dw	0
  2020  00F7D3  0061               	dw	97
  2021  00F7D5  0000               	dw	0
  2022  00F7D7  625C               	dw	25180
  2023  00F7D9  0000               	dw	0
  2024  00F7DB  0064               	dw	100
  2025  00F7DD  0000               	dw	0
  2026  00F7DF  6784               	dw	26500
  2027  00F7E1  0000               	dw	0
  2028  00F7E3  0062               	dw	98
  2029  00F7E5  0000               	dw	0
  2030  00F7E7                     __end_of_BVSOC_TABLE:
  2031                           	opt callstack 0
  2032  00F7E7                     ___month_to_secs@secs_through_month:
  2033                           	opt callstack 0
  2034  00F7E7  0000               	dw	0
  2035  00F7E9  0000               	dw	0
  2036  00F7EB  DE80               	dw	56960
  2037  00F7ED  0028               	dw	40
  2038  00F7EF  C880               	dw	51328
  2039  00F7F1  004D               	dw	77
  2040  00F7F3  A700               	dw	42752
  2041  00F7F5  0076               	dw	118
  2042  00F7F7  3400               	dw	13312
  2043  00F7F9  009E               	dw	158
  2044  00F7FB  1280               	dw	4736
  2045  00F7FD  00C7               	dw	199
  2046  00F7FF  9F80               	dw	40832
  2047  00F801  00EE               	dw	238
  2048  00F803  7E00               	dw	32256
  2049  00F805  0117               	dw	279
  2050  00F807  5C80               	dw	23680
  2051  00F809  0140               	dw	320
  2052  00F80B  E980               	dw	59776
  2053  00F80D  0167               	dw	359
  2054  00F80F  C800               	dw	51200
  2055  00F811  0190               	dw	400
  2056  00F813  5500               	dw	21760
  2057  00F815  01B8               	dw	440
  2058  00F817                     __end_of___month_to_secs@secs_through_month:
  2059                           	opt callstack 0
  2060  00F817                     ___secs_to_tm@days_in_month:
  2061                           	opt callstack 0
  2062  00F817  1F                 	db	31
  2063  00F818  1E                 	db	30
  2064  00F819  1F                 	db	31
  2065  00F81A  1E                 	db	30
  2066  00F81B  1F                 	db	31
  2067  00F81C  1F                 	db	31
  2068  00F81D  1E                 	db	30
  2069  00F81E  1F                 	db	31
  2070  00F81F  1E                 	db	30
  2071  00F820  1F                 	db	31
  2072  00F821  1F                 	db	31
  2073  00F822  1D                 	db	29
  2074  00F823                     __end_of___secs_to_tm@days_in_month:
  2075                           	opt callstack 0
  2076  00F823                     _T:
  2077                           	opt callstack 0
  2078  00F823  63                 	db	99
  2079  00F824  6F                 	db	111
  2080  00F825  6D                 	db	109
  2081  00F826  6D                 	db	109
  2082  00F827  61                 	db	97
  2083  00F828  6E                 	db	110
  2084  00F829  64                 	db	100
  2085  00F82A  73                 	db	115
  2086  00F82B  20                 	db	32
  2087  00F82C  31                 	db	49
  2088  00F82D  00                 	db	0
  2089  00F82E  00                 	db	0
  2090  00F82F  00                 	db	0
  2091  00F830  00                 	db	0
  2092  00F831  00                 	db	0
  2093  00F832  00                 	db	0
  2094  00F833  00                 	db	0
  2095  00F834  00                 	db	0
  2096  00F835  00                 	db	0
  2097  00F836  00                 	db	0
  2098  00F837  00                 	db	0
  2099  00F838  00                 	db	0
  2100  00F839  64                 	db	100
  2101  00F83A  69                 	db	105
  2102  00F83B  73                 	db	115
  2103  00F83C  70                 	db	112
  2104  00F83D  6C                 	db	108
  2105  00F83E  61                 	db	97
  2106  00F83F  79                 	db	121
  2107  00F840  73                 	db	115
  2108  00F841  20                 	db	32
  2109  00F842  31                 	db	49
  2110  00F843  00                 	db	0
  2111  00F844  00                 	db	0
  2112  00F845  00                 	db	0
  2113  00F846  00                 	db	0
  2114  00F847  00                 	db	0
  2115  00F848  00                 	db	0
  2116  00F849  00                 	db	0
  2117  00F84A  00                 	db	0
  2118  00F84B  00                 	db	0
  2119  00F84C  00                 	db	0
  2120  00F84D  00                 	db	0
  2121  00F84E  00                 	db	0
  2122  00F84F  63                 	db	99
  2123  00F850  6F                 	db	111
  2124  00F851  6D                 	db	109
  2125  00F852  6D                 	db	109
  2126  00F853  61                 	db	97
  2127  00F854  6E                 	db	110
  2128  00F855  64                 	db	100
  2129  00F856  73                 	db	115
  2130  00F857  20                 	db	32
  2131  00F858  32                 	db	50
  2132  00F859  00                 	db	0
  2133  00F85A  00                 	db	0
  2134  00F85B  00                 	db	0
  2135  00F85C  00                 	db	0
  2136  00F85D  00                 	db	0
  2137  00F85E  00                 	db	0
  2138  00F85F  00                 	db	0
  2139  00F860  00                 	db	0
  2140  00F861  00                 	db	0
  2141  00F862  00                 	db	0
  2142  00F863  00                 	db	0
  2143  00F864  00                 	db	0
  2144  00F865  64                 	db	100
  2145  00F866  69                 	db	105
  2146  00F867  73                 	db	115
  2147  00F868  70                 	db	112
  2148  00F869  6C                 	db	108
  2149  00F86A  61                 	db	97
  2150  00F86B  79                 	db	121
  2151  00F86C  73                 	db	115
  2152  00F86D  20                 	db	32
  2153  00F86E  32                 	db	50
  2154  00F86F  00                 	db	0
  2155  00F870  00                 	db	0
  2156  00F871  00                 	db	0
  2157  00F872  00                 	db	0
  2158  00F873  00                 	db	0
  2159  00F874  00                 	db	0
  2160  00F875  00                 	db	0
  2161  00F876  00                 	db	0
  2162  00F877  00                 	db	0
  2163  00F878  00                 	db	0
  2164  00F879  00                 	db	0
  2165  00F87A  00                 	db	0
  2166  00F87B  63                 	db	99
  2167  00F87C  6F                 	db	111
  2168  00F87D  6D                 	db	109
  2169  00F87E  6D                 	db	109
  2170  00F87F  61                 	db	97
  2171  00F880  6E                 	db	110
  2172  00F881  64                 	db	100
  2173  00F882  73                 	db	115
  2174  00F883  20                 	db	32
  2175  00F884  33                 	db	51
  2176  00F885  00                 	db	0
  2177  00F886  00                 	db	0
  2178  00F887  00                 	db	0
  2179  00F888  00                 	db	0
  2180  00F889  00                 	db	0
  2181  00F88A  00                 	db	0
  2182  00F88B  00                 	db	0
  2183  00F88C  00                 	db	0
  2184  00F88D  00                 	db	0
  2185  00F88E  00                 	db	0
  2186  00F88F  00                 	db	0
  2187  00F890  00                 	db	0
  2188  00F891  64                 	db	100
  2189  00F892  69                 	db	105
  2190  00F893  73                 	db	115
  2191  00F894  70                 	db	112
  2192  00F895  6C                 	db	108
  2193  00F896  61                 	db	97
  2194  00F897  79                 	db	121
  2195  00F898  73                 	db	115
  2196  00F899  20                 	db	32
  2197  00F89A  33                 	db	51
  2198  00F89B  00                 	db	0
  2199  00F89C  00                 	db	0
  2200  00F89D  00                 	db	0
  2201  00F89E  00                 	db	0
  2202  00F89F  00                 	db	0
  2203  00F8A0  00                 	db	0
  2204  00F8A1  00                 	db	0
  2205  00F8A2  00                 	db	0
  2206  00F8A3  00                 	db	0
  2207  00F8A4  00                 	db	0
  2208  00F8A5  00                 	db	0
  2209  00F8A6  00                 	db	0
  2210  00F8A7  63                 	db	99
  2211  00F8A8  6F                 	db	111
  2212  00F8A9  6D                 	db	109
  2213  00F8AA  6D                 	db	109
  2214  00F8AB  61                 	db	97
  2215  00F8AC  6E                 	db	110
  2216  00F8AD  64                 	db	100
  2217  00F8AE  73                 	db	115
  2218  00F8AF  20                 	db	32
  2219  00F8B0  34                 	db	52
  2220  00F8B1  00                 	db	0
  2221  00F8B2  00                 	db	0
  2222  00F8B3  00                 	db	0
  2223  00F8B4  00                 	db	0
  2224  00F8B5  00                 	db	0
  2225  00F8B6  00                 	db	0
  2226  00F8B7  00                 	db	0
  2227  00F8B8  00                 	db	0
  2228  00F8B9  00                 	db	0
  2229  00F8BA  00                 	db	0
  2230  00F8BB  00                 	db	0
  2231  00F8BC  00                 	db	0
  2232  00F8BD  64                 	db	100
  2233  00F8BE  69                 	db	105
  2234  00F8BF  73                 	db	115
  2235  00F8C0  70                 	db	112
  2236  00F8C1  6C                 	db	108
  2237  00F8C2  61                 	db	97
  2238  00F8C3  79                 	db	121
  2239  00F8C4  73                 	db	115
  2240  00F8C5  20                 	db	32
  2241  00F8C6  34                 	db	52
  2242  00F8C7  00                 	db	0
  2243  00F8C8  00                 	db	0
  2244  00F8C9  00                 	db	0
  2245  00F8CA  00                 	db	0
  2246  00F8CB  00                 	db	0
  2247  00F8CC  00                 	db	0
  2248  00F8CD  00                 	db	0
  2249  00F8CE  00                 	db	0
  2250  00F8CF  00                 	db	0
  2251  00F8D0  00                 	db	0
  2252  00F8D1  00                 	db	0
  2253  00F8D2  00                 	db	0
  2254  00F8D3                     __end_of_T:
  2255                           	opt callstack 0
  2256  00F8D3                     _spin:
  2257                           	opt callstack 0
  2258  00F8D3  7C                 	db	124
  2259  00F8D4  7C                 	db	124
  2260  00F8D5  2F                 	db	47
  2261  00F8D6  2F                 	db	47
  2262  00F8D7  2D                 	db	45
  2263  00F8D8  2D                 	db	45
  2264  00F8D9  00                 	db	0
  2265  00F8DA  00                 	db	0
  2266  00F8DB  00                 	db	0
  2267  00F8DC  00                 	db	0
  2268  00F8DD  00                 	db	0
  2269  00F8DE  00                 	db	0
  2270  00F8DF  00                 	db	0
  2271  00F8E0  00                 	db	0
  2272  00F8E1  00                 	db	0
  2273  00F8E2  00                 	db	0
  2274  00F8E3  00                 	db	0
  2275  00F8E4  00                 	db	0
  2276  00F8E5  00                 	db	0
  2277  00F8E6  00                 	db	0
  2278  00F8E7  7C                 	db	124
  2279  00F8E8  7C                 	db	124
  2280  00F8E9  2F                 	db	47
  2281  00F8EA  2F                 	db	47
  2282  00F8EB  2D                 	db	45
  2283  00F8EC  2D                 	db	45
  2284  00F8ED  5C                 	db	92
  2285  00F8EE  5C                 	db	92
  2286  00F8EF  00                 	db	0
  2287  00F8F0  00                 	db	0
  2288  00F8F1  00                 	db	0
  2289  00F8F2  00                 	db	0
  2290  00F8F3  00                 	db	0
  2291  00F8F4  00                 	db	0
  2292  00F8F5  00                 	db	0
  2293  00F8F6  00                 	db	0
  2294  00F8F7  00                 	db	0
  2295  00F8F8  00                 	db	0
  2296  00F8F9  00                 	db	0
  2297  00F8FA  00                 	db	0
  2298  00F8FB  4F                 	db	79
  2299  00F8FC  4F                 	db	79
  2300  00F8FD  4F                 	db	79
  2301  00F8FE  4F                 	db	79
  2302  00F8FF  4F                 	db	79
  2303  00F900  4F                 	db	79
  2304  00F901  2D                 	db	45
  2305  00F902  2D                 	db	45
  2306  00F903  5F                 	db	95
  2307  00F904  5F                 	db	95
  2308  00F905  2D                 	db	45
  2309  00F906  00                 	db	0
  2310  00F907  00                 	db	0
  2311  00F908  00                 	db	0
  2312  00F909  00                 	db	0
  2313  00F90A  00                 	db	0
  2314  00F90B  00                 	db	0
  2315  00F90C  00                 	db	0
  2316  00F90D  00                 	db	0
  2317  00F90E  00                 	db	0
  2318  00F90F  76                 	db	118
  2319  00F910  76                 	db	118
  2320  00F911  3C                 	db	60
  2321  00F912  3C                 	db	60
  2322  00F913  5E                 	db	94
  2323  00F914  5E                 	db	94
  2324  00F915  3E                 	db	62
  2325  00F916  3E                 	db	62
  2326  00F917  00                 	db	0
  2327  00F918  00                 	db	0
  2328  00F919  00                 	db	0
  2329  00F91A  00                 	db	0
  2330  00F91B  00                 	db	0
  2331  00F91C  00                 	db	0
  2332  00F91D  00                 	db	0
  2333  00F91E  00                 	db	0
  2334  00F91F  00                 	db	0
  2335  00F920  00                 	db	0
  2336  00F921  00                 	db	0
  2337  00F922  00                 	db	0
  2338  00F923  2E                 	db	46
  2339  00F924  2E                 	db	46
  2340  00F925  2A                 	db	42
  2341  00F926  2A                 	db	42
  2342  00F927  78                 	db	120
  2343  00F928  23                 	db	35
  2344  00F929  78                 	db	120
  2345  00F92A  23                 	db	35
  2346  00F92B  58                 	db	88
  2347  00F92C  58                 	db	88
  2348  00F92D  7C                 	db	124
  2349  00F92E  7C                 	db	124
  2350  00F92F  2D                 	db	45
  2351  00F930  2D                 	db	45
  2352  00F931  00                 	db	0
  2353  00F932  00                 	db	0
  2354  00F933  00                 	db	0
  2355  00F934  00                 	db	0
  2356  00F935  00                 	db	0
  2357  00F936  00                 	db	0
  2358  00F937  2E                 	db	46
  2359  00F938  2E                 	db	46
  2360  00F939  6F                 	db	111
  2361  00F93A  6F                 	db	111
  2362  00F93B  4F                 	db	79
  2363  00F93C  4F                 	db	79
  2364  00F93D  6F                 	db	111
  2365  00F93E  6F                 	db	111
  2366  00F93F  00                 	db	0
  2367  00F940  00                 	db	0
  2368  00F941  00                 	db	0
  2369  00F942  00                 	db	0
  2370  00F943  00                 	db	0
  2371  00F944  00                 	db	0
  2372  00F945  00                 	db	0
  2373  00F946  00                 	db	0
  2374  00F947  00                 	db	0
  2375  00F948  00                 	db	0
  2376  00F949  00                 	db	0
  2377  00F94A  00                 	db	0
  2378  00F94B                     __end_of_spin:
  2379                           	opt callstack 0
  2380  00F94B  0000               	dw	0
  2381  00F94D  3F80               	dw	16256
  2382  00F94F  0000               	dw	0
  2383  00F951  3FC0               	dw	16320
  2384  00F953                     __end_of_bp:
  2385                           	opt callstack 0
  2386  00F953                     ___gmt:
  2387                           	opt callstack 0
  2388  00F953  47                 	db	71
  2389  00F954  4D                 	db	77
  2390  00F955  54                 	db	84
  2391  00F956  00                 	db	0
  2392  00F957                     __end_of___gmt:
  2393                           	opt callstack 0
  2394  00F957  AA00               	dw	43520
  2395  00F959  3FB8               	dw	16312
  2396  00F95B                     __end_of_ivln2_h:
  2397                           	opt callstack 0
  2398  00F95B  23C6               	dw	9158
  2399  00F95D  B8F6               	dw	47350
  2400  00F95F                     __end_of_cp_l:
  2401                           	opt callstack 0
  2402  00F95F  4000               	dw	16384
  2403  00F961  3F76               	dw	16246
  2404  00F963                     __end_of_cp_h:
  2405                           	opt callstack 0
  2406  0000                     _IVTADL	set	14493
  2407  0000                     _IVTADH	set	14494
  2408  0000                     _IVTADU	set	14495
  2409  0000                     _CRCDATH	set	14689
  2410  0000                     _CRCDATL	set	14688
  2411  0000                     _CRCCON0bits	set	14696
  2412  0000                     _CRCCON1bits	set	14697
  2413  0000                     _CRCXORL	set	14694
  2414  0000                     _CRCXORH	set	14695
  2415  0000                     _SCANTRIG	set	14717
  2416  0000                     _SCANHADRL	set	14713
  2417  0000                     _SCANHADRH	set	14714
  2418  0000                     _SCANHADRU	set	14715
  2419  0000                     _SCANLADRL	set	14710
  2420  0000                     _SCANLADRH	set	14711
  2421  0000                     _SCANLADRU	set	14712
  2422  0000                     _SCANCON0	set	14716
  2423  0000                     _CRCACCH	set	14691
  2424  0000                     _CRCACCL	set	14690
  2425  0000                     _CRCCON1	set	14697
  2426  0000                     _CRCCON0	set	14696
  2427  0000                     _PIR6bits	set	14758
  2428  0000                     _PIR4bits	set	14756
  2429  0000                     _PIE8bits	set	14744
  2430  0000                     _PIR8bits	set	14760
  2431  0000                     _PIR0bits	set	14752
  2432  0000                     _NVMCON2	set	14822
  2433  0000                     _NVMDAT	set	14819
  2434  0000                     _NVMADRL	set	14816
  2435  0000                     _NVMADRH	set	14817
  2436  0000                     _NVMCON1bits	set	14821
  2437  0000                     _SCANPR	set	14839
  2438  0000                     _DMA2PR	set	14836
  2439  0000                     _DMA1PR	set	14835
  2440  0000                     _MAINPR	set	14834
  2441  0000                     _ISRPR	set	14833
  2442  0000                     _PIE2bits	set	14738
  2443  0000                     _PIR2bits	set	14754
  2444  0000                     _PIE9bits	set	14745
  2445  0000                     _PIR9bits	set	14761
  2446  0000                     _PIE6bits	set	14742
  2447  0000                     _PIE3bits	set	14739
  2448  0000                     _PMD7	set	14791
  2449  0000                     _PMD6	set	14790
  2450  0000                     _PMD5	set	14789
  2451  0000                     _PMD4	set	14788
  2452  0000                     _PMD3	set	14787
  2453  0000                     _PMD2	set	14786
  2454  0000                     _PMD1	set	14785
  2455  0000                     _PMD0	set	14784
  2456  0000                     _OSCTUNE	set	14814
  2457  0000                     _OSCFRQ	set	14815
  2458  0000                     _OSCEN	set	14813
  2459  0000                     _OSCCON3	set	14811
  2460  0000                     _OSCCON1	set	14809
  2461  0000                     _IPR8bits	set	14728
  2462  0000                     _IPR9bits	set	14729
  2463  0000                     _IPR5bits	set	14725
  2464  0000                     _IPR1bits	set	14721
  2465  0000                     _IPR3bits	set	14723
  2466  0000                     _IPR6bits	set	14726
  2467  0000                     _IPR2bits	set	14722
  2468  0000                     _PIE5bits	set	14741
  2469  0000                     _PIE1bits	set	14737
  2470  0000                     _PIR5bits	set	14757
  2471  0000                     _PIR1bits	set	14753
  2472  0000                     _PLLR	set	118496
  2473  0000                     _SPI1SDIPPS	set	15071
  2474  0000                     _U1RXPPS	set	15077
  2475  0000                     _RC6PPS	set	14870
  2476  0000                     _RC5PPS	set	14869
  2477  0000                     _INT1PPS	set	15041
  2478  0000                     _RD1PPS	set	14873
  2479  0000                     _INT0PPS	set	15040
  2480  0000                     _RC3PPS	set	14867
  2481  0000                     _RB6PPS	set	14862
  2482  0000                     _SPI1SCKPPS	set	15070
  2483  0000                     _U2RXPPS	set	15080
  2484  0000                     _SLRCONF	set	14995
  2485  0000                     _SLRCONE	set	14979
  2486  0000                     _SLRCOND	set	14963
  2487  0000                     _SLRCONC	set	14947
  2488  0000                     _SLRCONB	set	14931
  2489  0000                     _SLRCONA	set	14915
  2490  0000                     _ODCOND	set	14962
  2491  0000                     _ODCONC	set	14946
  2492  0000                     _ODCONB	set	14930
  2493  0000                     _ODCONA	set	14914
  2494  0000                     _ODCONF	set	14994
  2495  0000                     _ODCONE	set	14978
  2496  0000                     _WPUC	set	14945
  2497  0000                     _WPUA	set	14913
  2498  0000                     _WPUB	set	14929
  2499  0000                     _WPUE	set	14977
  2500  0000                     _WPUF	set	14993
  2501  0000                     _WPUD	set	14961
  2502  0000                     _ANSELA	set	14912
  2503  0000                     _ANSELF	set	14992
  2504  0000                     _ANSELE	set	14976
  2505  0000                     _ANSELB	set	14928
  2506  0000                     _ANSELC	set	14944
  2507  0000                     _ANSELD	set	14960
  2508  0000                     _DMA2SSA	set	15321
  2509  0000                     _DMA1SSA	set	15353
  2510  0000                     _DMA2DSZ	set	15310
  2511  0000                     _DMA2SSZ	set	15319
  2512  0000                     _DMA2DSA	set	15312
  2513  0000                     _DMA1DSZ	set	15342
  2514  0000                     _DMA1SSZ	set	15351
  2515  0000                     _DMA1DSA	set	15344
  2516  0000                     _DMA2CON0bits	set	15324
  2517  0000                     _DMA2CON1bits	set	15325
  2518  0000                     _DMA1CON0bits	set	15356
  2519  0000                     _DMA1CON1bits	set	15357
  2520  0000                     _DMA2CON0	set	15324
  2521  0000                     _DMA2AIRQ	set	15326
  2522  0000                     _DMA2SIRQ	set	15327
  2523  0000                     _DMA2CON1	set	15325
  2524  0000                     _DMA1CON0	set	15356
  2525  0000                     _DMA1AIRQ	set	15358
  2526  0000                     _DMA1SIRQ	set	15359
  2527  0000                     _DMA1CON1	set	15357
  2528  0000                     _CLKRCON	set	15589
  2529  0000                     _CLKRCLK	set	15590
  2530  0000                     _SPI1CON1bits	set	15637
  2531  0000                     _SPI1STATUSbits	set	15639
  2532  0000                     _SPI1INTFbits	set	15642
  2533  0000                     _SPI1CON0bits	set	15636
  2534  0000                     _SPI1RXB	set	15632
  2535  0000                     _SPI1TXB	set	15633
  2536  0000                     _SPI1TCNTL	set	15634
  2537  0000                     _SPI1CON0	set	15636
  2538  0000                     _SPI1CLK	set	15644
  2539  0000                     _SPI1BAUD	set	15641
  2540  0000                     _SPI1CON2	set	15638
  2541  0000                     _SPI1CON1	set	15637
  2542  0000                     _U2RXB	set	15824
  2543  0000                     _U2TXB	set	15826
  2544  0000                     _U2ERRIE	set	15842
  2545  0000                     _U2ERRIR	set	15841
  2546  0000                     _U2UIR	set	15840
  2547  0000                     _U2FIFO	set	15839
  2548  0000                     _U2BRGH	set	15838
  2549  0000                     _U2BRGL	set	15837
  2550  0000                     _U2CON2	set	15836
  2551  0000                     _U2CON1	set	15835
  2552  0000                     _U2CON0	set	15834
  2553  0000                     _U2P3L	set	15832
  2554  0000                     _U2P2L	set	15830
  2555  0000                     _U2P1L	set	15828
  2556  0000                     _U1RXB	set	15848
  2557  0000                     _U1ERRIE	set	15866
  2558  0000                     _U1ERRIR	set	15865
  2559  0000                     _U1UIR	set	15864
  2560  0000                     _U1FIFO	set	15863
  2561  0000                     _U1BRGH	set	15862
  2562  0000                     _U1BRGL	set	15861
  2563  0000                     _U1CON2	set	15860
  2564  0000                     _U1CON1	set	15859
  2565  0000                     _U1CON0	set	15858
  2566  0000                     _U1P3H	set	15857
  2567  0000                     _U1P3L	set	15856
  2568  0000                     _U1P2H	set	15855
  2569  0000                     _U1P2L	set	15854
  2570  0000                     _U1P1H	set	15853
  2571  0000                     _U1P1L	set	15852
  2572  0000                     _FVRCON	set	16065
  2573  0000                     _ADFLTRL	set	16102
  2574  0000                     _ADFLTRH	set	16103
  2575  0000                     _ADCON0bits	set	16120
  2576  0000                     _ADCON0	set	16120
  2577  0000                     _ADCLK	set	16127
  2578  0000                     _ADACT	set	16126
  2579  0000                     _ADREF	set	16125
  2580  0000                     _ADSTAT	set	16124
  2581  0000                     _ADCON3	set	16123
  2582  0000                     _ADCON2	set	16122
  2583  0000                     _ADCON1	set	16121
  2584  0000                     _ADPREH	set	16119
  2585  0000                     _ADPREL	set	16118
  2586  0000                     _ADCAP	set	16117
  2587  0000                     _ADACQH	set	16116
  2588  0000                     _ADACQL	set	16115
  2589  0000                     _ADPCH	set	16113
  2590  0000                     _ADRPT	set	16108
  2591  0000                     _ADACCU	set	16106
  2592  0000                     _ADSTPTH	set	16101
  2593  0000                     _ADSTPTL	set	16100
  2594  0000                     _ADUTHH	set	16097
  2595  0000                     _ADUTHL	set	16096
  2596  0000                     _ADLTHH	set	16095
  2597  0000                     _ADLTHL	set	16094
  2598  0000                     _CCPTMRS1bits	set	16223
  2599  0000                     _PORTDbits	set	16333
  2600  0000                     _PORTFbits	set	16335
  2601  0000                     _LATFbits	set	16319
  2602  0000                     _LATCbits	set	16316
  2603  0000                     _LATDbits	set	16317
  2604  0000                     _PORTBbits	set	16331
  2605  0000                     _T3CONbits	set	16294
  2606  0000                     _T3CON	set	16294
  2607  0000                     _TMR3L	set	16292
  2608  0000                     _TMR3H	set	16293
  2609  0000                     _T3CLK	set	16297
  2610  0000                     _T3GATE	set	16296
  2611  0000                     _T3GCON	set	16295
  2612  0000                     _T2CON	set	16300
  2613  0000                     _T2TMR	set	16298
  2614  0000                     _T2PR	set	16299
  2615  0000                     _T2RST	set	16303
  2616  0000                     _T2HLT	set	16301
  2617  0000                     _T2CLKCON	set	16302
  2618  0000                     _PWM8DCL	set	16224
  2619  0000                     _PWM8DCH	set	16225
  2620  0000                     _PWM8CON	set	16226
  2621  0000                     _LATEbits	set	16318
  2622  0000                     _T5CONbits	set	16282
  2623  0000                     _T5CON	set	16282
  2624  0000                     _TMR5L	set	16280
  2625  0000                     _TMR5H	set	16281
  2626  0000                     _T5CLK	set	16285
  2627  0000                     _T5GATE	set	16284
  2628  0000                     _T5GCON	set	16283
  2629  0000                     _T6CON	set	16276
  2630  0000                     _T6TMR	set	16274
  2631  0000                     _T6PR	set	16275
  2632  0000                     _T6RST	set	16279
  2633  0000                     _T6HLT	set	16277
  2634  0000                     _T6CLKCON	set	16278
  2635  0000                     _TRISD	set	16325
  2636  0000                     _TRISC	set	16324
  2637  0000                     _TRISB	set	16323
  2638  0000                     _TRISA	set	16322
  2639  0000                     _TRISF	set	16327
  2640  0000                     _TRISE	set	16326
  2641  0000                     _LATC	set	16316
  2642  0000                     _LATB	set	16315
  2643  0000                     _LATF	set	16319
  2644  0000                     _LATA	set	16314
  2645  0000                     _LATD	set	16317
  2646  0000                     _LATE	set	16318
  2647  0000                     _IVTLOCKbits	set	16340
  2648  0000                     _IVTLOCK	set	16340
  2649  0000                     _INTCON0bits	set	16338
  2650  0000                     _GIE	set	130711
  2651  00F963                     STR_103:
  2652                           
  2653                           ; BSR set to: 57
  2654  00F963  20                 	db	32
  2655  00F964  25                 	db	37
  2656  00F965  63                 	db	99	;'c'
  2657  00F966  20                 	db	32
  2658  00F967  2C                 	db	44
  2659  00F968  25                 	db	37
  2660  00F969  6C                 	db	108	;'l'
  2661  00F96A  75                 	db	117	;'u'
  2662  00F96B  2C                 	db	44
  2663  00F96C  25                 	db	37
  2664  00F96D  34                 	db	52	;'4'
  2665  00F96E  2E                 	db	46
  2666  00F96F  34                 	db	52	;'4'
  2667  00F970  66                 	db	102	;'f'
  2668  00F971  2C                 	db	44
  2669  00F972  25                 	db	37
  2670  00F973  34                 	db	52	;'4'
  2671  00F974  2E                 	db	46
  2672  00F975  34                 	db	52	;'4'
  2673  00F976  66                 	db	102	;'f'
  2674  00F977  2C                 	db	44
  2675  00F978  25                 	db	37
  2676  00F979  34                 	db	52	;'4'
  2677  00F97A  2E                 	db	46
  2678  00F97B  34                 	db	52	;'4'
  2679  00F97C  66                 	db	102	;'f'
  2680  00F97D  2C                 	db	44
  2681  00F97E  25                 	db	37
  2682  00F97F  34                 	db	52	;'4'
  2683  00F980  2E                 	db	46
  2684  00F981  34                 	db	52	;'4'
  2685  00F982  66                 	db	102	;'f'
  2686  00F983  2C                 	db	44
  2687  00F984  25                 	db	37
  2688  00F985  34                 	db	52	;'4'
  2689  00F986  2E                 	db	46
  2690  00F987  34                 	db	52	;'4'
  2691  00F988  66                 	db	102	;'f'
  2692  00F989  2C                 	db	44
  2693  00F98A  25                 	db	37
  2694  00F98B  34                 	db	52	;'4'
  2695  00F98C  2E                 	db	46
  2696  00F98D  33                 	db	51	;'3'
  2697  00F98E  66                 	db	102	;'f'
  2698  00F98F  2C                 	db	44
  2699  00F990  25                 	db	37
  2700  00F991  34                 	db	52	;'4'
  2701  00F992  2E                 	db	46
  2702  00F993  33                 	db	51	;'3'
  2703  00F994  66                 	db	102	;'f'
  2704  00F995  2C                 	db	44
  2705  00F996  25                 	db	37
  2706  00F997  34                 	db	52	;'4'
  2707  00F998  2E                 	db	46
  2708  00F999  33                 	db	51	;'3'
  2709  00F99A  66                 	db	102	;'f'
  2710  00F99B  2C                 	db	44
  2711  00F99C  25                 	db	37
  2712  00F99D  34                 	db	52	;'4'
  2713  00F99E  2E                 	db	46
  2714  00F99F  33                 	db	51	;'3'
  2715  00F9A0  66                 	db	102	;'f'
  2716  00F9A1  2C                 	db	44
  2717  00F9A2  25                 	db	37
  2718  00F9A3  34                 	db	52	;'4'
  2719  00F9A4  2E                 	db	46
  2720  00F9A5  33                 	db	51	;'3'
  2721  00F9A6  66                 	db	102	;'f'
  2722  00F9A7  2C                 	db	44
  2723  00F9A8  25                 	db	37
  2724  00F9A9  34                 	db	52	;'4'
  2725  00F9AA  2E                 	db	46
  2726  00F9AB  33                 	db	51	;'3'
  2727  00F9AC  66                 	db	102	;'f'
  2728  00F9AD  2C                 	db	44
  2729  00F9AE  25                 	db	37
  2730  00F9AF  64                 	db	100	;'d'
  2731  00F9B0  2C                 	db	44
  2732  00F9B1  25                 	db	37
  2733  00F9B2  64                 	db	100	;'d'
  2734  00F9B3  2C                 	db	44
  2735  00F9B4  25                 	db	37
  2736  00F9B5  32                 	db	50	;'2'
  2737  00F9B6  2E                 	db	46
  2738  00F9B7  36                 	db	54	;'6'
  2739  00F9B8  66                 	db	102	;'f'
  2740  00F9B9  2C                 	db	44
  2741  00F9BA  25                 	db	37
  2742  00F9BB  34                 	db	52	;'4'
  2743  00F9BC  2E                 	db	46
  2744  00F9BD  33                 	db	51	;'3'
  2745  00F9BE  66                 	db	102	;'f'
  2746  00F9BF  2C                 	db	44
  2747  00F9C0  25                 	db	37
  2748  00F9C1  64                 	db	100	;'d'
  2749  00F9C2  2C                 	db	44
  2750  00F9C3  25                 	db	37
  2751  00F9C4  64                 	db	100	;'d'
  2752  00F9C5  2C                 	db	44
  2753  00F9C6  25                 	db	37
  2754  00F9C7  6C                 	db	108	;'l'
  2755  00F9C8  75                 	db	117	;'u'
  2756  00F9C9  2C                 	db	44
  2757  00F9CA  25                 	db	37
  2758  00F9CB  6C                 	db	108	;'l'
  2759  00F9CC  75                 	db	117	;'u'
  2760  00F9CD  2C                 	db	44
  2761  00F9CE  25                 	db	37
  2762  00F9CF  34                 	db	52	;'4'
  2763  00F9D0  2E                 	db	46
  2764  00F9D1  33                 	db	51	;'3'
  2765  00F9D2  66                 	db	102	;'f'
  2766  00F9D3  2C                 	db	44
  2767  00F9D4  25                 	db	37
  2768  00F9D5  34                 	db	52	;'4'
  2769  00F9D6  2E                 	db	46
  2770  00F9D7  33                 	db	51	;'3'
  2771  00F9D8  66                 	db	102	;'f'
  2772  00F9D9  2C                 	db	44
  2773  00F9DA  25                 	db	37
  2774  00F9DB  34                 	db	52	;'4'
  2775  00F9DC  2E                 	db	46
  2776  00F9DD  33                 	db	51	;'3'
  2777  00F9DE  66                 	db	102	;'f'
  2778  00F9DF  0D                 	db	13
  2779  00F9E0  0A                 	db	10
  2780  00F9E1  00                 	db	0
  2781  00F9E2                     STR_141:
  2782                           
  2783                           ; BSR set to: 57
  2784  00F9E2  4A                 	db	74	;'J'
  2785  00F9E3  61                 	db	97	;'a'
  2786  00F9E4  6E                 	db	110	;'n'
  2787  00F9E5  46                 	db	70	;'F'
  2788  00F9E6  65                 	db	101	;'e'
  2789  00F9E7  62                 	db	98	;'b'
  2790  00F9E8  4D                 	db	77	;'M'
  2791  00F9E9  61                 	db	97	;'a'
  2792  00F9EA  72                 	db	114	;'r'
  2793  00F9EB  41                 	db	65	;'A'
  2794  00F9EC  70                 	db	112	;'p'
  2795  00F9ED  72                 	db	114	;'r'
  2796  00F9EE  4D                 	db	77	;'M'
  2797  00F9EF  61                 	db	97	;'a'
  2798  00F9F0  79                 	db	121	;'y'
  2799  00F9F1  4A                 	db	74	;'J'
  2800  00F9F2  75                 	db	117	;'u'
  2801  00F9F3  6E                 	db	110	;'n'
  2802  00F9F4  4A                 	db	74	;'J'
  2803  00F9F5  75                 	db	117	;'u'
  2804  00F9F6  6C                 	db	108	;'l'
  2805  00F9F7  41                 	db	65	;'A'
  2806  00F9F8  75                 	db	117	;'u'
  2807  00F9F9  67                 	db	103	;'g'
  2808  00F9FA  53                 	db	83	;'S'
  2809  00F9FB  65                 	db	101	;'e'
  2810  00F9FC  70                 	db	112	;'p'
  2811  00F9FD  4F                 	db	79	;'O'
  2812  00F9FE  63                 	db	99	;'c'
  2813  00F9FF  74                 	db	116	;'t'
  2814  00FA00  4E                 	db	78	;'N'
  2815  00FA01  6F                 	db	111	;'o'
  2816  00FA02  76                 	db	118	;'v'
  2817  00FA03  44                 	db	68	;'D'
  2818  00FA04  65                 	db	101	;'e'
  2819  00FA05  63                 	db	99	;'c'
  2820  00FA06  00                 	db	0
  2821  00FA07                     STR_45:
  2822                           
  2823                           ; BSR set to: 57
  2824  00FA07  53                 	db	83	;'S'
  2825  00FA08  25                 	db	37
  2826  00FA09  63                 	db	99	;'c'
  2827  00FA0A  43                 	db	67	;'C'
  2828  00FA0B  20                 	db	32
  2829  00FA0C  25                 	db	37
  2830  00FA0D  64                 	db	100	;'d'
  2831  00FA0E  20                 	db	32
  2832  00FA0F  52                 	db	82	;'R'
  2833  00FA10  55                 	db	85	;'U'
  2834  00FA11  4E                 	db	78	;'N'
  2835  00FA12  20                 	db	32
  2836  00FA13  25                 	db	37
  2837  00FA14  64                 	db	100	;'d'
  2838  00FA15  20                 	db	32
  2839  00FA16  56                 	db	86	;'V'
  2840  00FA17  25                 	db	37
  2841  00FA18  32                 	db	50	;'2'
  2842  00FA19  2E                 	db	46
  2843  00FA1A  32                 	db	50	;'2'
  2844  00FA1B  66                 	db	102	;'f'
  2845  00FA1C  20                 	db	32
  2846  00FA1D  20                 	db	32
  2847  00FA1E  20                 	db	32
  2848  00FA1F  20                 	db	32
  2849  00FA20  20                 	db	32
  2850  00FA21  20                 	db	32
  2851  00FA22  20                 	db	32
  2852  00FA23  20                 	db	32
  2853  00FA24  00                 	db	0
  2854  00FA25                     STR_78:
  2855                           
  2856                           ; BSR set to: 57
  2857  00FA25  25                 	db	37
  2858  00FA26  64                 	db	100	;'d'
  2859  00FA27  20                 	db	32
  2860  00FA28  25                 	db	37
  2861  00FA29  64                 	db	100	;'d'
  2862  00FA2A  20                 	db	32
  2863  00FA2B  25                 	db	37
  2864  00FA2C  64                 	db	100	;'d'
  2865  00FA2D  20                 	db	32
  2866  00FA2E  25                 	db	37
  2867  00FA2F  64                 	db	100	;'d'
  2868  00FA30  20                 	db	32
  2869  00FA31  20                 	db	32
  2870  00FA32  20                 	db	32
  2871  00FA33  20                 	db	32
  2872  00FA34  20                 	db	32
  2873  00FA35  20                 	db	32
  2874  00FA36  20                 	db	32
  2875  00FA37  20                 	db	32
  2876  00FA38  20                 	db	32
  2877  00FA39  20                 	db	32
  2878  00FA3A  20                 	db	32
  2879  00FA3B  20                 	db	32
  2880  00FA3C  20                 	db	32
  2881  00FA3D  20                 	db	32
  2882  00FA3E  20                 	db	32
  2883  00FA3F  20                 	db	32
  2884  00FA40  00                 	db	0
  2885  00FA41                     STR_22:
  2886                           
  2887                           ; BSR set to: 57
  2888  00FA41  52                 	db	82	;'R'
  2889  00FA42  31                 	db	49	;'1'
  2890  00FA43  20                 	db	32
  2891  00FA44  25                 	db	37
  2892  00FA45  32                 	db	50	;'2'
  2893  00FA46  2E                 	db	46
  2894  00FA47  33                 	db	51	;'3'
  2895  00FA48  66                 	db	102	;'f'
  2896  00FA49  20                 	db	32
  2897  00FA4A  25                 	db	37
  2898  00FA4B  33                 	db	51	;'3'
  2899  00FA4C  2E                 	db	46
  2900  00FA4D  34                 	db	52	;'4'
  2901  00FA4E  66                 	db	102	;'f'
  2902  00FA4F  20                 	db	32
  2903  00FA50  20                 	db	32
  2904  00FA51  20                 	db	32
  2905  00FA52  20                 	db	32
  2906  00FA53  20                 	db	32
  2907  00FA54  20                 	db	32
  2908  00FA55  20                 	db	32
  2909  00FA56  20                 	db	32
  2910  00FA57  20                 	db	32
  2911  00FA58  20                 	db	32
  2912  00FA59  20                 	db	32
  2913  00FA5A  20                 	db	32
  2914  00FA5B  00                 	db	0
  2915  00FA5C                     STR_23:
  2916                           
  2917                           ; BSR set to: 57
  2918  00FA5C  52                 	db	82	;'R'
  2919  00FA5D  32                 	db	50	;'2'
  2920  00FA5E  20                 	db	32
  2921  00FA5F  25                 	db	37
  2922  00FA60  32                 	db	50	;'2'
  2923  00FA61  2E                 	db	46
  2924  00FA62  33                 	db	51	;'3'
  2925  00FA63  66                 	db	102	;'f'
  2926  00FA64  20                 	db	32
  2927  00FA65  25                 	db	37
  2928  00FA66  33                 	db	51	;'3'
  2929  00FA67  2E                 	db	46
  2930  00FA68  34                 	db	52	;'4'
  2931  00FA69  66                 	db	102	;'f'
  2932  00FA6A  20                 	db	32
  2933  00FA6B  20                 	db	32
  2934  00FA6C  20                 	db	32
  2935  00FA6D  20                 	db	32
  2936  00FA6E  20                 	db	32
  2937  00FA6F  20                 	db	32
  2938  00FA70  20                 	db	32
  2939  00FA71  20                 	db	32
  2940  00FA72  20                 	db	32
  2941  00FA73  20                 	db	32
  2942  00FA74  20                 	db	32
  2943  00FA75  20                 	db	32
  2944  00FA76  00                 	db	0
  2945  00FA77                     
  2946                           ; BSR set to: 57
  2947  00FA77  20                 	db	32
  2948  00FA78  4D                 	db	77	;'M'
  2949  00FA79  65                 	db	101	;'e'
  2950  00FA7A  73                 	db	115	;'s'
  2951  00FA7B  67                 	db	103	;'g'
  2952  00FA7C  20                 	db	32
  2953  00FA7D  25                 	db	37
  2954  00FA7E  64                 	db	100	;'d'
  2955  00FA7F  20                 	db	32
  2956  00FA80  53                 	db	83	;'S'
  2957  00FA81  74                 	db	116	;'t'
  2958  00FA82  61                 	db	97	;'a'
  2959  00FA83  63                 	db	99	;'c'
  2960  00FA84  6B                 	db	107	;'k'
  2961  00FA85  20                 	db	32
  2962  00FA86  25                 	db	37
  2963  00FA87  64                 	db	100	;'d'
  2964  00FA88  20                 	db	32
  2965  00FA89  20                 	db	32
  2966  00FA8A  20                 	db	32
  2967  00FA8B  20                 	db	32
  2968  00FA8C  20                 	db	32
  2969  00FA8D  20                 	db	32
  2970  00FA8E  20                 	db	32
  2971  00FA8F  20                 	db	32
  2972  00FA90  00                 	db	0
  2973  00FA91                     STR_13:
  2974                           
  2975                           ; BSR set to: 57
  2976  00FA91  53                 	db	83	;'S'
  2977  00FA92  20                 	db	32
  2978  00FA93  53                 	db	83	;'S'
  2979  00FA94  25                 	db	37
  2980  00FA95  63                 	db	99	;'c'
  2981  00FA96  43                 	db	67	;'C'
  2982  00FA97  20                 	db	32
  2983  00FA98  25                 	db	37
  2984  00FA99  64                 	db	100	;'d'
  2985  00FA9A  20                 	db	32
  2986  00FA9B  25                 	db	37
  2987  00FA9C  32                 	db	50	;'2'
  2988  00FA9D  2E                 	db	46
  2989  00FA9E  34                 	db	52	;'4'
  2990  00FA9F  66                 	db	102	;'f'
  2991  00FAA0  20                 	db	32
  2992  00FAA1  20                 	db	32
  2993  00FAA2  20                 	db	32
  2994  00FAA3  20                 	db	32
  2995  00FAA4  20                 	db	32
  2996  00FAA5  20                 	db	32
  2997  00FAA6  20                 	db	32
  2998  00FAA7  20                 	db	32
  2999  00FAA8  20                 	db	32
  3000  00FAA9  20                 	db	32
  3001  00FAAA  00                 	db	0
  3002  00FAAB                     STR_46:
  3003                           
  3004                           ; BSR set to: 57
  3005  00FAAB  45                 	db	69	;'E'
  3006  00FAAC  53                 	db	83	;'S'
  3007  00FAAD  52                 	db	82	;'R'
  3008  00FAAE  20                 	db	32
  3009  00FAAF  20                 	db	32
  3010  00FAB0  25                 	db	37
  3011  00FAB1  32                 	db	50	;'2'
  3012  00FAB2  2E                 	db	46
  3013  00FAB3  36                 	db	54	;'6'
  3014  00FAB4  66                 	db	102	;'f'
  3015  00FAB5  20                 	db	32
  3016  00FAB6  20                 	db	32
  3017  00FAB7  20                 	db	32
  3018  00FAB8  20                 	db	32
  3019  00FAB9  20                 	db	32
  3020  00FABA  20                 	db	32
  3021  00FABB  20                 	db	32
  3022  00FABC  20                 	db	32
  3023  00FABD  20                 	db	32
  3024  00FABE  20                 	db	32
  3025  00FABF  20                 	db	32
  3026  00FAC0  20                 	db	32
  3027  00FAC1  20                 	db	32
  3028  00FAC2  00                 	db	0
  3029  00FAC3                     STR_43:
  3030                           
  3031                           ; BSR set to: 57
  3032  00FAC3  42                 	db	66	;'B'
  3033  00FAC4  41                 	db	65	;'A'
  3034  00FAC5  54                 	db	84	;'T'
  3035  00FAC6  54                 	db	84	;'T'
  3036  00FAC7  20                 	db	32
  3037  00FAC8  50                 	db	80	;'P'
  3038  00FAC9  57                 	db	87	;'W'
  3039  00FACA  52                 	db	82	;'R'
  3040  00FACB  20                 	db	32
  3041  00FACC  25                 	db	37
  3042  00FACD  33                 	db	51	;'3'
  3043  00FACE  2E                 	db	46
  3044  00FACF  32                 	db	50	;'2'
  3045  00FAD0  66                 	db	102	;'f'
  3046  00FAD1  20                 	db	32
  3047  00FAD2  20                 	db	32
  3048  00FAD3  20                 	db	32
  3049  00FAD4  20                 	db	32
  3050  00FAD5  20                 	db	32
  3051  00FAD6  20                 	db	32
  3052  00FAD7  20                 	db	32
  3053  00FAD8  20                 	db	32
  3054  00FAD9  20                 	db	32
  3055  00FADA  00                 	db	0
  3056  00FADB                     STR_47:
  3057                           
  3058                           ; BSR set to: 57
  3059  00FADB  52                 	db	82	;'R'
  3060  00FADC  31                 	db	49	;'1'
  3061  00FADD  20                 	db	32
  3062  00FADE  25                 	db	37
  3063  00FADF  32                 	db	50	;'2'
  3064  00FAE0  2E                 	db	46
  3065  00FAE1  33                 	db	51	;'3'
  3066  00FAE2  66                 	db	102	;'f'
  3067  00FAE3  20                 	db	32
  3068  00FAE4  25                 	db	37
  3069  00FAE5  33                 	db	51	;'3'
  3070  00FAE6  2E                 	db	46
  3071  00FAE7  34                 	db	52	;'4'
  3072  00FAE8  66                 	db	102	;'f'
  3073  00FAE9  20                 	db	32
  3074  00FAEA  20                 	db	32
  3075  00FAEB  20                 	db	32
  3076  00FAEC  20                 	db	32
  3077  00FAED  20                 	db	32
  3078  00FAEE  20                 	db	32
  3079  00FAEF  20                 	db	32
  3080  00FAF0  20                 	db	32
  3081  00FAF1  20                 	db	32
  3082  00FAF2  00                 	db	0
  3083  00FAF3                     STR_48:
  3084                           
  3085                           ; BSR set to: 57
  3086  00FAF3  52                 	db	82	;'R'
  3087  00FAF4  32                 	db	50	;'2'
  3088  00FAF5  20                 	db	32
  3089  00FAF6  25                 	db	37
  3090  00FAF7  32                 	db	50	;'2'
  3091  00FAF8  2E                 	db	46
  3092  00FAF9  33                 	db	51	;'3'
  3093  00FAFA  66                 	db	102	;'f'
  3094  00FAFB  20                 	db	32
  3095  00FAFC  25                 	db	37
  3096  00FAFD  33                 	db	51	;'3'
  3097  00FAFE  2E                 	db	46
  3098  00FAFF  34                 	db	52	;'4'
  3099  00FB00  66                 	db	102	;'f'
  3100  00FB01  20                 	db	32
  3101  00FB02  20                 	db	32
  3102  00FB03  20                 	db	32
  3103  00FB04  20                 	db	32
  3104  00FB05  20                 	db	32
  3105  00FB06  20                 	db	32
  3106  00FB07  20                 	db	32
  3107  00FB08  20                 	db	32
  3108  00FB09  20                 	db	32
  3109  00FB0A  00                 	db	0
  3110  00FB0B                     STR_44:
  3111                           
  3112                           ; BSR set to: 57
  3113  00FB0B  42                 	db	66	;'B'
  3114  00FB0C  41                 	db	65	;'A'
  3115  00FB0D  48                 	db	72	;'H'
  3116  00FB0E  20                 	db	32
  3117  00FB0F  25                 	db	37
  3118  00FB10  33                 	db	51	;'3'
  3119  00FB11  2E                 	db	46
  3120  00FB12  32                 	db	50	;'2'
  3121  00FB13  66                 	db	102	;'f'
  3122  00FB14  20                 	db	32
  3123  00FB15  50                 	db	80	;'P'
  3124  00FB16  25                 	db	37
  3125  00FB17  33                 	db	51	;'3'
  3126  00FB18  2E                 	db	46
  3127  00FB19  32                 	db	50	;'2'
  3128  00FB1A  66                 	db	102	;'f'
  3129  00FB1B  20                 	db	32
  3130  00FB1C  20                 	db	32
  3131  00FB1D  20                 	db	32
  3132  00FB1E  20                 	db	32
  3133  00FB1F  20                 	db	32
  3134  00FB20  20                 	db	32
  3135  00FB21  20                 	db	32
  3136  00FB22  00                 	db	0
  3137  00FB23                     STR_16:
  3138                           
  3139                           ; BSR set to: 57
  3140  00FB23  20                 	db	32
  3141  00FB24  20                 	db	32
  3142  00FB25  20                 	db	32
  3143  00FB26  20                 	db	32
  3144  00FB27  20                 	db	32
  3145  00FB28  20                 	db	32
  3146  00FB29  20                 	db	32
  3147  00FB2A  20                 	db	32
  3148  00FB2B  20                 	db	32
  3149  00FB2C  20                 	db	32
  3150  00FB2D  20                 	db	32
  3151  00FB2E  20                 	db	32
  3152  00FB2F  20                 	db	32
  3153  00FB30  20                 	db	32
  3154  00FB31  20                 	db	32
  3155  00FB32  20                 	db	32
  3156  00FB33  20                 	db	32
  3157  00FB34  20                 	db	32
  3158  00FB35  20                 	db	32
  3159  00FB36  20                 	db	32
  3160  00FB37  20                 	db	32
  3161  00FB38  20                 	db	32
  3162  00FB39  00                 	db	0
  3163  00FB3A                     STR_21:
  3164                           
  3165                           ; BSR set to: 57
  3166  00FB3A  45                 	db	69	;'E'
  3167  00FB3B  53                 	db	83	;'S'
  3168  00FB3C  52                 	db	82	;'R'
  3169  00FB3D  20                 	db	32
  3170  00FB3E  20                 	db	32
  3171  00FB3F  25                 	db	37
  3172  00FB40  32                 	db	50	;'2'
  3173  00FB41  2E                 	db	46
  3174  00FB42  36                 	db	54	;'6'
  3175  00FB43  66                 	db	102	;'f'
  3176  00FB44  20                 	db	32
  3177  00FB45  20                 	db	32
  3178  00FB46  20                 	db	32
  3179  00FB47  20                 	db	32
  3180  00FB48  20                 	db	32
  3181  00FB49  20                 	db	32
  3182  00FB4A  20                 	db	32
  3183  00FB4B  20                 	db	32
  3184  00FB4C  20                 	db	32
  3185  00FB4D  20                 	db	32
  3186  00FB4E  20                 	db	32
  3187  00FB4F  20                 	db	32
  3188  00FB50  00                 	db	0
  3189  00FB51                     STR_14:
  3190                           
  3191                           ; BSR set to: 57
  3192  00FB51  53                 	db	83	;'S'
  3193  00FB52  74                 	db	116	;'t'
  3194  00FB53  61                 	db	97	;'a'
  3195  00FB54  74                 	db	116	;'t'
  3196  00FB55  69                 	db	105	;'i'
  3197  00FB56  63                 	db	99	;'c'
  3198  00FB57  20                 	db	32
  3199  00FB58  53                 	db	83	;'S'
  3200  00FB59  4F                 	db	79	;'O'
  3201  00FB5A  43                 	db	67	;'C'
  3202  00FB5B  20                 	db	32
  3203  00FB5C  25                 	db	37
  3204  00FB5D  64                 	db	100	;'d'
  3205  00FB5E  20                 	db	32
  3206  00FB5F  20                 	db	32
  3207  00FB60  20                 	db	32
  3208  00FB61  20                 	db	32
  3209  00FB62  20                 	db	32
  3210  00FB63  20                 	db	32
  3211  00FB64  20                 	db	32
  3212  00FB65  20                 	db	32
  3213  00FB66  20                 	db	32
  3214  00FB67  00                 	db	0
  3215  00FB68                     STR_40:
  3216                           
  3217                           ; BSR set to: 57
  3218  00FB68  42                 	db	66	;'B'
  3219  00FB69  41                 	db	65	;'A'
  3220  00FB6A  54                 	db	84	;'T'
  3221  00FB6B  20                 	db	32
  3222  00FB6C  49                 	db	73	;'I'
  3223  00FB6D  57                 	db	87	;'W'
  3224  00FB6E  48                 	db	72	;'H'
  3225  00FB6F  20                 	db	32
  3226  00FB70  25                 	db	37
  3227  00FB71  34                 	db	52	;'4'
  3228  00FB72  2E                 	db	46
  3229  00FB73  31                 	db	49	;'1'
  3230  00FB74  66                 	db	102	;'f'
  3231  00FB75  20                 	db	32
  3232  00FB76  20                 	db	32
  3233  00FB77  20                 	db	32
  3234  00FB78  20                 	db	32
  3235  00FB79  20                 	db	32
  3236  00FB7A  20                 	db	32
  3237  00FB7B  20                 	db	32
  3238  00FB7C  20                 	db	32
  3239  00FB7D  20                 	db	32
  3240  00FB7E  00                 	db	0
  3241  00FB7F                     STR_41:
  3242                           
  3243                           ; BSR set to: 57
  3244  00FB7F  42                 	db	66	;'B'
  3245  00FB80  41                 	db	65	;'A'
  3246  00FB81  54                 	db	84	;'T'
  3247  00FB82  20                 	db	32
  3248  00FB83  4F                 	db	79	;'O'
  3249  00FB84  57                 	db	87	;'W'
  3250  00FB85  48                 	db	72	;'H'
  3251  00FB86  20                 	db	32
  3252  00FB87  25                 	db	37
  3253  00FB88  34                 	db	52	;'4'
  3254  00FB89  2E                 	db	46
  3255  00FB8A  31                 	db	49	;'1'
  3256  00FB8B  66                 	db	102	;'f'
  3257  00FB8C  20                 	db	32
  3258  00FB8D  20                 	db	32
  3259  00FB8E  20                 	db	32
  3260  00FB8F  20                 	db	32
  3261  00FB90  20                 	db	32
  3262  00FB91  20                 	db	32
  3263  00FB92  20                 	db	32
  3264  00FB93  20                 	db	32
  3265  00FB94  20                 	db	32
  3266  00FB95  00                 	db	0
  3267  00FB96                     STR_42:
  3268                           
  3269                           ; BSR set to: 57
  3270  00FB96  42                 	db	66	;'B'
  3271  00FB97  41                 	db	65	;'A'
  3272  00FB98  54                 	db	84	;'T'
  3273  00FB99  20                 	db	32
  3274  00FB9A  54                 	db	84	;'T'
  3275  00FB9B  57                 	db	87	;'W'
  3276  00FB9C  48                 	db	72	;'H'
  3277  00FB9D  20                 	db	32
  3278  00FB9E  25                 	db	37
  3279  00FB9F  34                 	db	52	;'4'
  3280  00FBA0  2E                 	db	46
  3281  00FBA1  31                 	db	49	;'1'
  3282  00FBA2  66                 	db	102	;'f'
  3283  00FBA3  20                 	db	32
  3284  00FBA4  20                 	db	32
  3285  00FBA5  20                 	db	32
  3286  00FBA6  20                 	db	32
  3287  00FBA7  20                 	db	32
  3288  00FBA8  20                 	db	32
  3289  00FBA9  20                 	db	32
  3290  00FBAA  20                 	db	32
  3291  00FBAB  20                 	db	32
  3292  00FBAC  00                 	db	0
  3293  00FBAD                     STR_36:
  3294                           
  3295                           ; BSR set to: 57
  3296  00FBAD  49                 	db	73	;'I'
  3297  00FBAE  4E                 	db	78	;'N'
  3298  00FBAF  56                 	db	86	;'V'
  3299  00FBB0  20                 	db	32
  3300  00FBB1  20                 	db	32
  3301  00FBB2  57                 	db	87	;'W'
  3302  00FBB3  48                 	db	72	;'H'
  3303  00FBB4  20                 	db	32
  3304  00FBB5  25                 	db	37
  3305  00FBB6  33                 	db	51	;'3'
  3306  00FBB7  2E                 	db	46
  3307  00FBB8  32                 	db	50	;'2'
  3308  00FBB9  66                 	db	102	;'f'
  3309  00FBBA  20                 	db	32
  3310  00FBBB  20                 	db	32
  3311  00FBBC  20                 	db	32
  3312  00FBBD  20                 	db	32
  3313  00FBBE  20                 	db	32
  3314  00FBBF  20                 	db	32
  3315  00FBC0  20                 	db	32
  3316  00FBC1  20                 	db	32
  3317  00FBC2  20                 	db	32
  3318  00FBC3  00                 	db	0
  3319  00FBC4                     STR_35:
  3320                           
  3321                           ; BSR set to: 57
  3322  00FBC4  4C                 	db	76	;'L'
  3323  00FBC5  4F                 	db	79	;'O'
  3324  00FBC6  41                 	db	65	;'A'
  3325  00FBC7  44                 	db	68	;'D'
  3326  00FBC8  20                 	db	32
  3327  00FBC9  57                 	db	87	;'W'
  3328  00FBCA  48                 	db	72	;'H'
  3329  00FBCB  20                 	db	32
  3330  00FBCC  25                 	db	37
  3331  00FBCD  33                 	db	51	;'3'
  3332  00FBCE  2E                 	db	46
  3333  00FBCF  32                 	db	50	;'2'
  3334  00FBD0  66                 	db	102	;'f'
  3335  00FBD1  20                 	db	32
  3336  00FBD2  20                 	db	32
  3337  00FBD3  20                 	db	32
  3338  00FBD4  20                 	db	32
  3339  00FBD5  20                 	db	32
  3340  00FBD6  20                 	db	32
  3341  00FBD7  20                 	db	32
  3342  00FBD8  20                 	db	32
  3343  00FBD9  20                 	db	32
  3344  00FBDA  00                 	db	0
  3345  00FBDB                     STR_34:
  3346                           
  3347                           ; BSR set to: 57
  3348  00FBDB  50                 	db	80	;'P'
  3349  00FBDC  56                 	db	86	;'V'
  3350  00FBDD  20                 	db	32
  3351  00FBDE  25                 	db	37
  3352  00FBDF  63                 	db	99	;'c'
  3353  00FBE0  20                 	db	32
  3354  00FBE1  57                 	db	87	;'W'
  3355  00FBE2  48                 	db	72	;'H'
  3356  00FBE3  20                 	db	32
  3357  00FBE4  25                 	db	37
  3358  00FBE5  33                 	db	51	;'3'
  3359  00FBE6  2E                 	db	46
  3360  00FBE7  32                 	db	50	;'2'
  3361  00FBE8  66                 	db	102	;'f'
  3362  00FBE9  20                 	db	32
  3363  00FBEA  20                 	db	32
  3364  00FBEB  20                 	db	32
  3365  00FBEC  20                 	db	32
  3366  00FBED  20                 	db	32
  3367  00FBEE  20                 	db	32
  3368  00FBEF  20                 	db	32
  3369  00FBF0  20                 	db	32
  3370  00FBF1  00                 	db	0
  3371  00FBF2                     STR_33:
  3372                           
  3373                           ; BSR set to: 57
  3374  00FBF2  49                 	db	73	;'I'
  3375  00FBF3  4E                 	db	78	;'N'
  3376  00FBF4  56                 	db	86	;'V'
  3377  00FBF5  20                 	db	32
  3378  00FBF6  20                 	db	32
  3379  00FBF7  50                 	db	80	;'P'
  3380  00FBF8  57                 	db	87	;'W'
  3381  00FBF9  52                 	db	82	;'R'
  3382  00FBFA  20                 	db	32
  3383  00FBFB  25                 	db	37
  3384  00FBFC  33                 	db	51	;'3'
  3385  00FBFD  2E                 	db	46
  3386  00FBFE  32                 	db	50	;'2'
  3387  00FBFF  66                 	db	102	;'f'
  3388  00FC00  20                 	db	32
  3389  00FC01  20                 	db	32
  3390  00FC02  20                 	db	32
  3391  00FC03  20                 	db	32
  3392  00FC04  20                 	db	32
  3393  00FC05  20                 	db	32
  3394  00FC06  20                 	db	32
  3395  00FC07  20                 	db	32
  3396  00FC08  00                 	db	0
  3397  00FC09                     STR_32:
  3398                           
  3399                           ; BSR set to: 57
  3400  00FC09  4C                 	db	76	;'L'
  3401  00FC0A  4F                 	db	79	;'O'
  3402  00FC0B  41                 	db	65	;'A'
  3403  00FC0C  44                 	db	68	;'D'
  3404  00FC0D  20                 	db	32
  3405  00FC0E  50                 	db	80	;'P'
  3406  00FC0F  57                 	db	87	;'W'
  3407  00FC10  52                 	db	82	;'R'
  3408  00FC11  20                 	db	32
  3409  00FC12  25                 	db	37
  3410  00FC13  33                 	db	51	;'3'
  3411  00FC14  2E                 	db	46
  3412  00FC15  32                 	db	50	;'2'
  3413  00FC16  66                 	db	102	;'f'
  3414  00FC17  20                 	db	32
  3415  00FC18  20                 	db	32
  3416  00FC19  20                 	db	32
  3417  00FC1A  20                 	db	32
  3418  00FC1B  20                 	db	32
  3419  00FC1C  20                 	db	32
  3420  00FC1D  20                 	db	32
  3421  00FC1E  20                 	db	32
  3422  00FC1F  00                 	db	0
  3423  00FC20                     STR_31:
  3424                           
  3425                           ; BSR set to: 57
  3426  00FC20  50                 	db	80	;'P'
  3427  00FC21  56                 	db	86	;'V'
  3428  00FC22  20                 	db	32
  3429  00FC23  25                 	db	37
  3430  00FC24  63                 	db	99	;'c'
  3431  00FC25  20                 	db	32
  3432  00FC26  50                 	db	80	;'P'
  3433  00FC27  57                 	db	87	;'W'
  3434  00FC28  52                 	db	82	;'R'
  3435  00FC29  20                 	db	32
  3436  00FC2A  25                 	db	37
  3437  00FC2B  33                 	db	51	;'3'
  3438  00FC2C  2E                 	db	46
  3439  00FC2D  32                 	db	50	;'2'
  3440  00FC2E  66                 	db	102	;'f'
  3441  00FC2F  20                 	db	32
  3442  00FC30  20                 	db	32
  3443  00FC31  20                 	db	32
  3444  00FC32  20                 	db	32
  3445  00FC33  20                 	db	32
  3446  00FC34  20                 	db	32
  3447  00FC35  20                 	db	32
  3448  00FC36  00                 	db	0
  3449  00FC37                     STR_15:
  3450                           
  3451                           ; BSR set to: 57
  3452  00FC37  42                 	db	66	;'B'
  3453  00FC38  61                 	db	97	;'a'
  3454  00FC39  74                 	db	116	;'t'
  3455  00FC3A  74                 	db	116	;'t'
  3456  00FC3B  65                 	db	101	;'e'
  3457  00FC3C  72                 	db	114	;'r'
  3458  00FC3D  79                 	db	121	;'y'
  3459  00FC3E  20                 	db	32
  3460  00FC3F  41                 	db	65	;'A'
  3461  00FC40  68                 	db	104	;'h'
  3462  00FC41  20                 	db	32
  3463  00FC42  25                 	db	37
  3464  00FC43  33                 	db	51	;'3'
  3465  00FC44  2E                 	db	46
  3466  00FC45  32                 	db	50	;'2'
  3467  00FC46  66                 	db	102	;'f'
  3468  00FC47  20                 	db	32
  3469  00FC48  20                 	db	32
  3470  00FC49  20                 	db	32
  3471  00FC4A  20                 	db	32
  3472  00FC4B  20                 	db	32
  3473  00FC4C  20                 	db	32
  3474  00FC4D  00                 	db	0
  3475  00FC4E                     STR_38:
  3476                           
  3477                           ; BSR set to: 57
  3478  00FC4E  42                 	db	66	;'B'
  3479  00FC4F  56                 	db	86	;'V'
  3480  00FC50  20                 	db	32
  3481  00FC51  25                 	db	37
  3482  00FC52  32                 	db	50	;'2'
  3483  00FC53  2E                 	db	46
  3484  00FC54  32                 	db	50	;'2'
  3485  00FC55  66                 	db	102	;'f'
  3486  00FC56  20                 	db	32
  3487  00FC57  42                 	db	66	;'B'
  3488  00FC58  41                 	db	65	;'A'
  3489  00FC59  20                 	db	32
  3490  00FC5A  25                 	db	37
  3491  00FC5B  32                 	db	50	;'2'
  3492  00FC5C  2E                 	db	46
  3493  00FC5D  32                 	db	50	;'2'
  3494  00FC5E  66                 	db	102	;'f'
  3495  00FC5F  20                 	db	32
  3496  00FC60  20                 	db	32
  3497  00FC61  20                 	db	32
  3498  00FC62  20                 	db	32
  3499  00FC63  20                 	db	32
  3500  00FC64  00                 	db	0
  3501  00FC65                     STR_39:
  3502                           
  3503                           ; BSR set to: 57
  3504  00FC65  43                 	db	67	;'C'
  3505  00FC66  56                 	db	86	;'V'
  3506  00FC67  20                 	db	32
  3507  00FC68  25                 	db	37
  3508  00FC69  32                 	db	50	;'2'
  3509  00FC6A  2E                 	db	46
  3510  00FC6B  32                 	db	50	;'2'
  3511  00FC6C  66                 	db	102	;'f'
  3512  00FC6D  20                 	db	32
  3513  00FC6E  4C                 	db	76	;'L'
  3514  00FC6F  41                 	db	65	;'A'
  3515  00FC70  20                 	db	32
  3516  00FC71  25                 	db	37
  3517  00FC72  32                 	db	50	;'2'
  3518  00FC73  2E                 	db	46
  3519  00FC74  32                 	db	50	;'2'
  3520  00FC75  66                 	db	102	;'f'
  3521  00FC76  20                 	db	32
  3522  00FC77  20                 	db	32
  3523  00FC78  20                 	db	32
  3524  00FC79  20                 	db	32
  3525  00FC7A  20                 	db	32
  3526  00FC7B  00                 	db	0
  3527  00FC7C                     STR_37:
  3528                           
  3529                           ; BSR set to: 57
  3530  00FC7C  50                 	db	80	;'P'
  3531  00FC7D  56                 	db	86	;'V'
  3532  00FC7E  20                 	db	32
  3533  00FC7F  25                 	db	37
  3534  00FC80  32                 	db	50	;'2'
  3535  00FC81  2E                 	db	46
  3536  00FC82  32                 	db	50	;'2'
  3537  00FC83  66                 	db	102	;'f'
  3538  00FC84  20                 	db	32
  3539  00FC85  50                 	db	80	;'P'
  3540  00FC86  41                 	db	65	;'A'
  3541  00FC87  20                 	db	32
  3542  00FC88  25                 	db	37
  3543  00FC89  32                 	db	50	;'2'
  3544  00FC8A  2E                 	db	46
  3545  00FC8B  32                 	db	50	;'2'
  3546  00FC8C  66                 	db	102	;'f'
  3547  00FC8D  20                 	db	32
  3548  00FC8E  20                 	db	32
  3549  00FC8F  20                 	db	32
  3550  00FC90  20                 	db	32
  3551  00FC91  20                 	db	32
  3552  00FC92  00                 	db	0
  3553  00FC93                     STR_140:
  3554                           
  3555                           ; BSR set to: 57
  3556  00FC93  53                 	db	83	;'S'
  3557  00FC94  75                 	db	117	;'u'
  3558  00FC95  6E                 	db	110	;'n'
  3559  00FC96  4D                 	db	77	;'M'
  3560  00FC97  6F                 	db	111	;'o'
  3561  00FC98  6E                 	db	110	;'n'
  3562  00FC99  54                 	db	84	;'T'
  3563  00FC9A  75                 	db	117	;'u'
  3564  00FC9B  65                 	db	101	;'e'
  3565  00FC9C  57                 	db	87	;'W'
  3566  00FC9D  65                 	db	101	;'e'
  3567  00FC9E  64                 	db	100	;'d'
  3568  00FC9F  54                 	db	84	;'T'
  3569  00FCA0  68                 	db	104	;'h'
  3570  00FCA1  75                 	db	117	;'u'
  3571  00FCA2  46                 	db	70	;'F'
  3572  00FCA3  72                 	db	114	;'r'
  3573  00FCA4  69                 	db	105	;'i'
  3574  00FCA5  53                 	db	83	;'S'
  3575  00FCA6  61                 	db	97	;'a'
  3576  00FCA7  74                 	db	116	;'t'
  3577  00FCA8  00                 	db	0
  3578  00FCA9                     STR_57:
  3579                           
  3580                           ; BSR set to: 57
  3581  00FCA9  20                 	db	32
  3582  00FCAA  25                 	db	37
  3583  00FCAB  64                 	db	100	;'d'
  3584  00FCAC  20                 	db	32
  3585  00FCAD  25                 	db	37
  3586  00FCAE  64                 	db	100	;'d'
  3587  00FCAF  20                 	db	32
  3588  00FCB0  20                 	db	32
  3589  00FCB1  20                 	db	32
  3590  00FCB2  20                 	db	32
  3591  00FCB3  20                 	db	32
  3592  00FCB4  20                 	db	32
  3593  00FCB5  20                 	db	32
  3594  00FCB6  20                 	db	32
  3595  00FCB7  20                 	db	32
  3596  00FCB8  20                 	db	32
  3597  00FCB9  20                 	db	32
  3598  00FCBA  20                 	db	32
  3599  00FCBB  20                 	db	32
  3600  00FCBC  20                 	db	32
  3601  00FCBD  20                 	db	32
  3602  00FCBE  00                 	db	0
  3603  00FCBF                     STR_73:
  3604                           
  3605                           ; BSR set to: 57
  3606  00FCBF  20                 	db	32
  3607  00FCC0  25                 	db	37
  3608  00FCC1  66                 	db	102	;'f'
  3609  00FCC2  20                 	db	32
  3610  00FCC3  25                 	db	37
  3611  00FCC4  66                 	db	102	;'f'
  3612  00FCC5  20                 	db	32
  3613  00FCC6  20                 	db	32
  3614  00FCC7  20                 	db	32
  3615  00FCC8  20                 	db	32
  3616  00FCC9  20                 	db	32
  3617  00FCCA  20                 	db	32
  3618  00FCCB  20                 	db	32
  3619  00FCCC  20                 	db	32
  3620  00FCCD  20                 	db	32
  3621  00FCCE  20                 	db	32
  3622  00FCCF  20                 	db	32
  3623  00FCD0  20                 	db	32
  3624  00FCD1  20                 	db	32
  3625  00FCD2  20                 	db	32
  3626  00FCD3  20                 	db	32
  3627  00FCD4  00                 	db	0
  3628  00FCD5                     STR_60:
  3629                           
  3630                           ; BSR set to: 57
  3631  00FCD5  20                 	db	32
  3632  00FCD6  25                 	db	37
  3633  00FCD7  6C                 	db	108	;'l'
  3634  00FCD8  64                 	db	100	;'d'
  3635  00FCD9  20                 	db	32
  3636  00FCDA  25                 	db	37
  3637  00FCDB  6C                 	db	108	;'l'
  3638  00FCDC  64                 	db	100	;'d'
  3639  00FCDD  20                 	db	32
  3640  00FCDE  20                 	db	32
  3641  00FCDF  20                 	db	32
  3642  00FCE0  20                 	db	32
  3643  00FCE1  20                 	db	32
  3644  00FCE2  20                 	db	32
  3645  00FCE3  20                 	db	32
  3646  00FCE4  20                 	db	32
  3647  00FCE5  20                 	db	32
  3648  00FCE6  20                 	db	32
  3649  00FCE7  20                 	db	32
  3650  00FCE8  20                 	db	32
  3651  00FCE9  20                 	db	32
  3652  00FCEA  00                 	db	0
  3653  00FCEB                     STR_12:
  3654                           
  3655                           ; BSR set to: 57
  3656  00FCEB  42                 	db	66	;'B'
  3657  00FCEC  56                 	db	86	;'V'
  3658  00FCED  20                 	db	32
  3659  00FCEE  25                 	db	37
  3660  00FCEF  32                 	db	50	;'2'
  3661  00FCF0  2E                 	db	46
  3662  00FCF1  34                 	db	52	;'4'
  3663  00FCF2  66                 	db	102	;'f'
  3664  00FCF3  20                 	db	32
  3665  00FCF4  20                 	db	32
  3666  00FCF5  20                 	db	32
  3667  00FCF6  20                 	db	32
  3668  00FCF7  20                 	db	32
  3669  00FCF8  20                 	db	32
  3670  00FCF9  20                 	db	32
  3671  00FCFA  20                 	db	32
  3672  00FCFB  20                 	db	32
  3673  00FCFC  20                 	db	32
  3674  00FCFD  20                 	db	32
  3675  00FCFE  20                 	db	32
  3676  00FCFF  20                 	db	32
  3677  00FD00  00                 	db	0
  3678  00FD01                     STR_26:
  3679                           
  3680                           ; BSR set to: 57
  3681  00FD01  54                 	db	84	;'T'
  3682  00FD02  6F                 	db	111	;'o'
  3683  00FD03  20                 	db	32
  3684  00FD04  45                 	db	69	;'E'
  3685  00FD05  45                 	db	69	;'E'
  3686  00FD06  50                 	db	80	;'P'
  3687  00FD07  52                 	db	82	;'R'
  3688  00FD08  4F                 	db	79	;'O'
  3689  00FD09  4D                 	db	77	;'M'
  3690  00FD0A  20                 	db	32
  3691  00FD0B  20                 	db	32
  3692  00FD0C  20                 	db	32
  3693  00FD0D  20                 	db	32
  3694  00FD0E  20                 	db	32
  3695  00FD0F  20                 	db	32
  3696  00FD10  20                 	db	32
  3697  00FD11  20                 	db	32
  3698  00FD12  20                 	db	32
  3699  00FD13  20                 	db	32
  3700  00FD14  20                 	db	32
  3701  00FD15  20                 	db	32
  3702  00FD16  00                 	db	0
  3703  00FD17                     STR_17:
  3704                           
  3705                           ; BSR set to: 57
  3706  00FD17  42                 	db	66	;'B'
  3707  00FD18  61                 	db	97	;'a'
  3708  00FD19  74                 	db	116	;'t'
  3709  00FD1A  74                 	db	116	;'t'
  3710  00FD1B  65                 	db	101	;'e'
  3711  00FD1C  72                 	db	114	;'r'
  3712  00FD1D  79                 	db	121	;'y'
  3713  00FD1E  20                 	db	32
  3714  00FD1F  45                 	db	69	;'E'
  3715  00FD20  53                 	db	83	;'S'
  3716  00FD21  52                 	db	82	;'R'
  3717  00FD22  20                 	db	32
  3718  00FD23  20                 	db	32
  3719  00FD24  20                 	db	32
  3720  00FD25  20                 	db	32
  3721  00FD26  20                 	db	32
  3722  00FD27  20                 	db	32
  3723  00FD28  20                 	db	32
  3724  00FD29  20                 	db	32
  3725  00FD2A  20                 	db	32
  3726  00FD2B  20                 	db	32
  3727  00FD2C  00                 	db	0
  3728  00FD2D                     STR_18:
  3729                           
  3730                           ; BSR set to: 57
  3731  00FD2D  43                 	db	67	;'C'
  3732  00FD2E  61                 	db	97	;'a'
  3733  00FD2F  6C                 	db	108	;'l'
  3734  00FD30  63                 	db	99	;'c'
  3735  00FD31  75                 	db	117	;'u'
  3736  00FD32  6C                 	db	108	;'l'
  3737  00FD33  61                 	db	97	;'a'
  3738  00FD34  74                 	db	116	;'t'
  3739  00FD35  69                 	db	105	;'i'
  3740  00FD36  6F                 	db	111	;'o'
  3741  00FD37  6E                 	db	110	;'n'
  3742  00FD38  20                 	db	32
  3743  00FD39  20                 	db	32
  3744  00FD3A  20                 	db	32
  3745  00FD3B  20                 	db	32
  3746  00FD3C  20                 	db	32
  3747  00FD3D  20                 	db	32
  3748  00FD3E  20                 	db	32
  3749  00FD3F  20                 	db	32
  3750  00FD40  20                 	db	32
  3751  00FD41  20                 	db	32
  3752  00FD42  00                 	db	0
  3753  00FD43                     STR_54:
  3754                           
  3755                           ; BSR set to: 57
  3756  00FD43  43                 	db	67	;'C'
  3757  00FD44  61                 	db	97	;'a'
  3758  00FD45  6C                 	db	108	;'l'
  3759  00FD46  69                 	db	105	;'i'
  3760  00FD47  62                 	db	98	;'b'
  3761  00FD48  72                 	db	114	;'r'
  3762  00FD49  61                 	db	97	;'a'
  3763  00FD4A  74                 	db	116	;'t'
  3764  00FD4B  69                 	db	105	;'i'
  3765  00FD4C  6F                 	db	111	;'o'
  3766  00FD4D  6E                 	db	110	;'n'
  3767  00FD4E  20                 	db	32
  3768  00FD4F  20                 	db	32
  3769  00FD50  20                 	db	32
  3770  00FD51  20                 	db	32
  3771  00FD52  20                 	db	32
  3772  00FD53  20                 	db	32
  3773  00FD54  20                 	db	32
  3774  00FD55  20                 	db	32
  3775  00FD56  20                 	db	32
  3776  00FD57  20                 	db	32
  3777  00FD58  00                 	db	0
  3778  00FD59                     STR_53:
  3779                           
  3780                           ; BSR set to: 57
  3781  00FD59  53                 	db	83	;'S'
  3782  00FD5A  65                 	db	101	;'e'
  3783  00FD5B  6E                 	db	110	;'n'
  3784  00FD5C  73                 	db	115	;'s'
  3785  00FD5D  6F                 	db	111	;'o'
  3786  00FD5E  72                 	db	114	;'r'
  3787  00FD5F  20                 	db	32
  3788  00FD60  5A                 	db	90	;'Z'
  3789  00FD61  65                 	db	101	;'e'
  3790  00FD62  72                 	db	114	;'r'
  3791  00FD63  6F                 	db	111	;'o'
  3792  00FD64  20                 	db	32
  3793  00FD65  20                 	db	32
  3794  00FD66  20                 	db	32
  3795  00FD67  20                 	db	32
  3796  00FD68  20                 	db	32
  3797  00FD69  20                 	db	32
  3798  00FD6A  20                 	db	32
  3799  00FD6B  20                 	db	32
  3800  00FD6C  20                 	db	32
  3801  00FD6D  20                 	db	32
  3802  00FD6E  00                 	db	0
  3803  00FD6F                     STR_74:
  3804                           
  3805                           ; BSR set to: 57
  3806  00FD6F  31                 	db	49	;'1'
  3807  00FD70  30                 	db	48	;'0'
  3808  00FD71  41                 	db	65	;'A'
  3809  00FD72  20                 	db	32
  3810  00FD73  43                 	db	67	;'C'
  3811  00FD74  61                 	db	97	;'a'
  3812  00FD75  6C                 	db	108	;'l'
  3813  00FD76  20                 	db	32
  3814  00FD77  53                 	db	83	;'S'
  3815  00FD78  65                 	db	101	;'e'
  3816  00FD79  74                 	db	116	;'t'
  3817  00FD7A  20                 	db	32
  3818  00FD7B  20                 	db	32
  3819  00FD7C  20                 	db	32
  3820  00FD7D  20                 	db	32
  3821  00FD7E  20                 	db	32
  3822  00FD7F  20                 	db	32
  3823  00FD80  20                 	db	32
  3824  00FD81  20                 	db	32
  3825  00FD82  20                 	db	32
  3826  00FD83  20                 	db	32
  3827  00FD84  00                 	db	0
  3828  00FD85                     STR_61:
  3829                           
  3830                           ; BSR set to: 57
  3831  00FD85  5A                 	db	90	;'Z'
  3832  00FD86  65                 	db	101	;'e'
  3833  00FD87  72                 	db	114	;'r'
  3834  00FD88  6F                 	db	111	;'o'
  3835  00FD89  20                 	db	32
  3836  00FD8A  43                 	db	67	;'C'
  3837  00FD8B  61                 	db	97	;'a'
  3838  00FD8C  6C                 	db	108	;'l'
  3839  00FD8D  20                 	db	32
  3840  00FD8E  53                 	db	83	;'S'
  3841  00FD8F  65                 	db	101	;'e'
  3842  00FD90  74                 	db	116	;'t'
  3843  00FD91  20                 	db	32
  3844  00FD92  20                 	db	32
  3845  00FD93  20                 	db	32
  3846  00FD94  20                 	db	32
  3847  00FD95  20                 	db	32
  3848  00FD96  20                 	db	32
  3849  00FD97  20                 	db	32
  3850  00FD98  20                 	db	32
  3851  00FD99  20                 	db	32
  3852  00FD9A  00                 	db	0
  3853  00FD9B                     STR_52:
  3854                           
  3855                           ; BSR set to: 57
  3856  00FD9B  42                 	db	66	;'B'
  3857  00FD9C  61                 	db	97	;'a'
  3858  00FD9D  74                 	db	116	;'t'
  3859  00FD9E  74                 	db	116	;'t'
  3860  00FD9F  65                 	db	101	;'e'
  3861  00FDA0  72                 	db	114	;'r'
  3862  00FDA1  79                 	db	121	;'y'
  3863  00FDA2  20                 	db	32
  3864  00FDA3  61                 	db	97	;'a'
  3865  00FDA4  6E                 	db	110	;'n'
  3866  00FDA5  64                 	db	100	;'d'
  3867  00FDA6  20                 	db	32
  3868  00FDA7  50                 	db	80	;'P'
  3869  00FDA8  56                 	db	86	;'V'
  3870  00FDA9  20                 	db	32
  3871  00FDAA  20                 	db	32
  3872  00FDAB  20                 	db	32
  3873  00FDAC  20                 	db	32
  3874  00FDAD  20                 	db	32
  3875  00FDAE  20                 	db	32
  3876  00FDAF  20                 	db	32
  3877  00FDB0  00                 	db	0
  3878  00FDB1                     STR_20:
  3879                           
  3880                           ; BSR set to: 57
  3881  00FDB1  43                 	db	67	;'C'
  3882  00FDB2  68                 	db	104	;'h'
  3883  00FDB3  65                 	db	101	;'e'
  3884  00FDB4  63                 	db	99	;'c'
  3885  00FDB5  6B                 	db	107	;'k'
  3886  00FDB6  69                 	db	105	;'i'
  3887  00FDB7  6E                 	db	110	;'n'
  3888  00FDB8  67                 	db	103	;'g'
  3889  00FDB9  20                 	db	32
  3890  00FDBA  25                 	db	37
  3891  00FDBB  63                 	db	99	;'c'
  3892  00FDBC  20                 	db	32
  3893  00FDBD  25                 	db	37
  3894  00FDBE  63                 	db	99	;'c'
  3895  00FDBF  20                 	db	32
  3896  00FDC0  20                 	db	32
  3897  00FDC1  20                 	db	32
  3898  00FDC2  20                 	db	32
  3899  00FDC3  20                 	db	32
  3900  00FDC4  20                 	db	32
  3901  00FDC5  20                 	db	32
  3902  00FDC6  00                 	db	0
  3903  00FDC7                     STR_27:
  3904                           
  3905                           ; BSR set to: 57
  3906  00FDC7  20                 	db	32
  3907  00FDC8  54                 	db	84	;'T'
  3908  00FDC9  69                 	db	105	;'i'
  3909  00FDCA  6D                 	db	109	;'m'
  3910  00FDCB  65                 	db	101	;'e'
  3911  00FDCC  20                 	db	32
  3912  00FDCD  25                 	db	37
  3913  00FDCE  6C                 	db	108	;'l'
  3914  00FDCF  75                 	db	117	;'u'
  3915  00FDD0  2C                 	db	44
  3916  00FDD1  20                 	db	32
  3917  00FDD2  25                 	db	37
  3918  00FDD3  6C                 	db	108	;'l'
  3919  00FDD4  75                 	db	117	;'u'
  3920  00FDD5  20                 	db	32
  3921  00FDD6  20                 	db	32
  3922  00FDD7  20                 	db	32
  3923  00FDD8  20                 	db	32
  3924  00FDD9  20                 	db	32
  3925  00FDDA  20                 	db	32
  3926  00FDDB  20                 	db	32
  3927  00FDDC  00                 	db	0
  3928  00FDDD                     STR_56:
  3929                           
  3930                           ; BSR set to: 57
  3931  00FDDD  53                 	db	83	;'S'
  3932  00FDDE  65                 	db	101	;'e'
  3933  00FDDF  6E                 	db	110	;'n'
  3934  00FDE0  73                 	db	115	;'s'
  3935  00FDE1  6F                 	db	111	;'o'
  3936  00FDE2  72                 	db	114	;'r'
  3937  00FDE3  20                 	db	32
  3938  00FDE4  52                 	db	82	;'R'
  3939  00FDE5  65                 	db	101	;'e'
  3940  00FDE6  61                 	db	97	;'a'
  3941  00FDE7  64                 	db	100	;'d'
  3942  00FDE8  69                 	db	105	;'i'
  3943  00FDE9  6E                 	db	110	;'n'
  3944  00FDEA  67                 	db	103	;'g'
  3945  00FDEB  73                 	db	115	;'s'
  3946  00FDEC  20                 	db	32
  3947  00FDED  20                 	db	32
  3948  00FDEE  20                 	db	32
  3949  00FDEF  20                 	db	32
  3950  00FDF0  20                 	db	32
  3951  00FDF1  20                 	db	32
  3952  00FDF2  00                 	db	0
  3953  00FDF3                     STR_77:
  3954                           
  3955                           ; BSR set to: 57
  3956  00FDF3  31                 	db	49	;'1'
  3957  00FDF4  30                 	db	48	;'0'
  3958  00FDF5  41                 	db	65	;'A'
  3959  00FDF6  20                 	db	32
  3960  00FDF7  4F                 	db	79	;'O'
  3961  00FDF8  75                 	db	117	;'u'
  3962  00FDF9  74                 	db	116	;'t'
  3963  00FDFA  20                 	db	32
  3964  00FDFB  4F                 	db	79	;'O'
  3965  00FDFC  66                 	db	102	;'f'
  3966  00FDFD  20                 	db	32
  3967  00FDFE  52                 	db	82	;'R'
  3968  00FDFF  61                 	db	97	;'a'
  3969  00FE00  6E                 	db	110	;'n'
  3970  00FE01  67                 	db	103	;'g'
  3971  00FE02  65                 	db	101	;'e'
  3972  00FE03  20                 	db	32
  3973  00FE04  20                 	db	32
  3974  00FE05  20                 	db	32
  3975  00FE06  20                 	db	32
  3976  00FE07  20                 	db	32
  3977  00FE08  00                 	db	0
  3978  00FE09                     STR_19:
  3979                           
  3980                           ; BSR set to: 57
  3981  00FE09  43                 	db	67	;'C'
  3982  00FE0A  68                 	db	104	;'h'
  3983  00FE0B  65                 	db	101	;'e'
  3984  00FE0C  63                 	db	99	;'c'
  3985  00FE0D  6B                 	db	107	;'k'
  3986  00FE0E  20                 	db	32
  3987  00FE0F  33                 	db	51	;'3'
  3988  00FE10  30                 	db	48	;'0'
  3989  00FE11  20                 	db	32
  3990  00FE12  73                 	db	115	;'s'
  3991  00FE13  65                 	db	101	;'e'
  3992  00FE14  63                 	db	99	;'c'
  3993  00FE15  6F                 	db	111	;'o'
  3994  00FE16  6E                 	db	110	;'n'
  3995  00FE17  64                 	db	100	;'d'
  3996  00FE18  73                 	db	115	;'s'
  3997  00FE19  20                 	db	32
  3998  00FE1A  20                 	db	32
  3999  00FE1B  20                 	db	32
  4000  00FE1C  20                 	db	32
  4001  00FE1D  20                 	db	32
  4002  00FE1E  00                 	db	0
  4003  00FE1F                     STR_64:
  4004                           
  4005                           ; BSR set to: 57
  4006  00FE1F  5A                 	db	90	;'Z'
  4007  00FE20  65                 	db	101	;'e'
  4008  00FE21  72                 	db	114	;'r'
  4009  00FE22  6F                 	db	111	;'o'
  4010  00FE23  20                 	db	32
  4011  00FE24  4F                 	db	79	;'O'
  4012  00FE25  75                 	db	117	;'u'
  4013  00FE26  74                 	db	116	;'t'
  4014  00FE27  20                 	db	32
  4015  00FE28  4F                 	db	79	;'O'
  4016  00FE29  66                 	db	102	;'f'
  4017  00FE2A  20                 	db	32
  4018  00FE2B  52                 	db	82	;'R'
  4019  00FE2C  61                 	db	97	;'a'
  4020  00FE2D  6E                 	db	110	;'n'
  4021  00FE2E  67                 	db	103	;'g'
  4022  00FE2F  65                 	db	101	;'e'
  4023  00FE30  20                 	db	32
  4024  00FE31  20                 	db	32
  4025  00FE32  20                 	db	32
  4026  00FE33  20                 	db	32
  4027  00FE34  00                 	db	0
  4028  00FE35                     STR_49:
  4029                           
  4030                           ; BSR set to: 57
  4031  00FE35  25                 	db	37
  4032  00FE36  64                 	db	100	;'d'
  4033  00FE37  20                 	db	32
  4034  00FE38  25                 	db	37
  4035  00FE39  32                 	db	50	;'2'
  4036  00FE3A  2E                 	db	46
  4037  00FE3B  34                 	db	52	;'4'
  4038  00FE3C  66                 	db	102	;'f'
  4039  00FE3D  2C                 	db	44
  4040  00FE3E  20                 	db	32
  4041  00FE3F  25                 	db	37
  4042  00FE40  64                 	db	100	;'d'
  4043  00FE41  20                 	db	32
  4044  00FE42  20                 	db	32
  4045  00FE43  54                 	db	84	;'T'
  4046  00FE44  52                 	db	82	;'R'
  4047  00FE45  49                 	db	73	;'I'
  4048  00FE46  4D                 	db	77	;'M'
  4049  00FE47  20                 	db	32
  4050  00FE48  20                 	db	32
  4051  00FE49  20                 	db	32
  4052  00FE4A  00                 	db	0
  4053  00FE4B                     STR_58:
  4054                           
  4055                           ; BSR set to: 57
  4056  00FE4B  53                 	db	83	;'S'
  4057  00FE4C  74                 	db	116	;'t'
  4058  00FE4D  61                 	db	97	;'a'
  4059  00FE4E  62                 	db	98	;'b'
  4060  00FE4F  69                 	db	105	;'i'
  4061  00FE50  6C                 	db	108	;'l'
  4062  00FE51  69                 	db	105	;'i'
  4063  00FE52  74                 	db	116	;'t'
  4064  00FE53  79                 	db	121	;'y'
  4065  00FE54  20                 	db	32
  4066  00FE55  63                 	db	99	;'c'
  4067  00FE56  6C                 	db	108	;'l'
  4068  00FE57  6F                 	db	111	;'o'
  4069  00FE58  63                 	db	99	;'c'
  4070  00FE59  6B                 	db	107	;'k'
  4071  00FE5A  20                 	db	32
  4072  00FE5B  25                 	db	37
  4073  00FE5C  64                 	db	100	;'d'
  4074  00FE5D  20                 	db	32
  4075  00FE5E  20                 	db	32
  4076  00FE5F  20                 	db	32
  4077  00FE60  00                 	db	0
  4078  00FE61                     STR_25:
  4079                           
  4080                           ; BSR set to: 57
  4081  00FE61  48                 	db	72	;'H'
  4082  00FE62  69                 	db	105	;'i'
  4083  00FE63  73                 	db	115	;'s'
  4084  00FE64  74                 	db	116	;'t'
  4085  00FE65  6F                 	db	111	;'o'
  4086  00FE66  72                 	db	114	;'r'
  4087  00FE67  79                 	db	121	;'y'
  4088  00FE68  20                 	db	32
  4089  00FE69  44                 	db	68	;'D'
  4090  00FE6A  61                 	db	97	;'a'
  4091  00FE6B  74                 	db	116	;'t'
  4092  00FE6C  61                 	db	97	;'a'
  4093  00FE6D  20                 	db	32
  4094  00FE6E  20                 	db	32
  4095  00FE6F  53                 	db	83	;'S'
  4096  00FE70  61                 	db	97	;'a'
  4097  00FE71  76                 	db	118	;'v'
  4098  00FE72  65                 	db	101	;'e'
  4099  00FE73  64                 	db	100	;'d'
  4100  00FE74  20                 	db	32
  4101  00FE75  20                 	db	32
  4102  00FE76  00                 	db	0
  4103  00FE77                     
  4104                           ; BSR set to: 57
  4105  00FE77  48                 	db	72	;'H'
  4106  00FE78  45                 	db	69	;'E'
  4107  00FE79  4C                 	db	76	;'L'
  4108  00FE7A  50                 	db	80	;'P'
  4109  00FE7B  20                 	db	32
  4110  00FE7C  25                 	db	37
  4111  00FE7D  73                 	db	115	;'s'
  4112  00FE7E  20                 	db	32
  4113  00FE7F  20                 	db	32
  4114  00FE80  20                 	db	32
  4115  00FE81  20                 	db	32
  4116  00FE82  20                 	db	32
  4117  00FE83  20                 	db	32
  4118  00FE84  20                 	db	32
  4119  00FE85  20                 	db	32
  4120  00FE86  20                 	db	32
  4121  00FE87  20                 	db	32
  4122  00FE88  20                 	db	32
  4123  00FE89  20                 	db	32
  4124  00FE8A  20                 	db	32
  4125  00FE8B  00                 	db	0
  4126  00FE8C                     
  4127                           ; BSR set to: 57
  4128  00FE8C  44                 	db	68	;'D'
  4129  00FE8D  49                 	db	73	;'I'
  4130  00FE8E  53                 	db	83	;'S'
  4131  00FE8F  50                 	db	80	;'P'
  4132  00FE90  4C                 	db	76	;'L'
  4133  00FE91  41                 	db	65	;'A'
  4134  00FE92  59                 	db	89	;'Y'
  4135  00FE93  20                 	db	32
  4136  00FE94  25                 	db	37
  4137  00FE95  73                 	db	115	;'s'
  4138  00FE96  20                 	db	32
  4139  00FE97  20                 	db	32
  4140  00FE98  20                 	db	32
  4141  00FE99  20                 	db	32
  4142  00FE9A  20                 	db	32
  4143  00FE9B  20                 	db	32
  4144  00FE9C  20                 	db	32
  4145  00FE9D  20                 	db	32
  4146  00FE9E  20                 	db	32
  4147  00FE9F  20                 	db	32
  4148  00FEA0  00                 	db	0
  4149  00FEA1                     STR_4:
  4150                           
  4151                           ; BSR set to: 57
  4152  00FEA1  20                 	db	32
  4153  00FEA2  4E                 	db	78	;'N'
  4154  00FEA3  53                 	db	83	;'S'
  4155  00FEA4  41                 	db	65	;'A'
  4156  00FEA5  53                 	db	83	;'S'
  4157  00FEA6  50                 	db	80	;'P'
  4158  00FEA7  4F                 	db	79	;'O'
  4159  00FEA8  4F                 	db	79	;'O'
  4160  00FEA9  4B                 	db	75	;'K'
  4161  00FEAA  20                 	db	32
  4162  00FEAB  20                 	db	32
  4163  00FEAC  20                 	db	32
  4164  00FEAD  20                 	db	32
  4165  00FEAE  20                 	db	32
  4166  00FEAF  20                 	db	32
  4167  00FEB0  20                 	db	32
  4168  00FEB1  20                 	db	32
  4169  00FEB2  20                 	db	32
  4170  00FEB3  20                 	db	32
  4171  00FEB4  20                 	db	32
  4172  00FEB5  00                 	db	0
  4173  00FEB6                     STR_67:
  4174                           
  4175                           ; BSR set to: 57
  4176  00FEB6  43                 	db	67	;'C'
  4177  00FEB7  61                 	db	97	;'a'
  4178  00FEB8  6C                 	db	108	;'l'
  4179  00FEB9  69                 	db	105	;'i'
  4180  00FEBA  62                 	db	98	;'b'
  4181  00FEBB  72                 	db	114	;'r'
  4182  00FEBC  61                 	db	97	;'a'
  4183  00FEBD  74                 	db	116	;'t'
  4184  00FEBE  69                 	db	105	;'i'
  4185  00FEBF  6F                 	db	111	;'o'
  4186  00FEC0  6E                 	db	110	;'n'
  4187  00FEC1  20                 	db	32
  4188  00FEC2  20                 	db	32
  4189  00FEC3  20                 	db	32
  4190  00FEC4  20                 	db	32
  4191  00FEC5  20                 	db	32
  4192  00FEC6  20                 	db	32
  4193  00FEC7  20                 	db	32
  4194  00FEC8  20                 	db	32
  4195  00FEC9  20                 	db	32
  4196  00FECA  00                 	db	0
  4197  00FECB                     STR_2:
  4198                           
  4199                           ; BSR set to: 57
  4200  00FECB  20                 	db	32
  4201  00FECC  56                 	db	86	;'V'
  4202  00FECD  65                 	db	101	;'e'
  4203  00FECE  72                 	db	114	;'r'
  4204  00FECF  73                 	db	115	;'s'
  4205  00FED0  69                 	db	105	;'i'
  4206  00FED1  6F                 	db	111	;'o'
  4207  00FED2  6E                 	db	110	;'n'
  4208  00FED3  20                 	db	32
  4209  00FED4  25                 	db	37
  4210  00FED5  73                 	db	115	;'s'
  4211  00FED6  20                 	db	32
  4212  00FED7  20                 	db	32
  4213  00FED8  20                 	db	32
  4214  00FED9  20                 	db	32
  4215  00FEDA  20                 	db	32
  4216  00FEDB  20                 	db	32
  4217  00FEDC  20                 	db	32
  4218  00FEDD  20                 	db	32
  4219  00FEDE  20                 	db	32
  4220  00FEDF  00                 	db	0
  4221  00FEE0                     STR_66:
  4222                           
  4223                           ; BSR set to: 57
  4224  00FEE0  31                 	db	49	;'1'
  4225  00FEE1  30                 	db	48	;'0'
  4226  00FEE2  20                 	db	32
  4227  00FEE3  41                 	db	65	;'A'
  4228  00FEE4  6D                 	db	109	;'m'
  4229  00FEE5  70                 	db	112	;'p'
  4230  00FEE6  20                 	db	32
  4231  00FEE7  53                 	db	83	;'S'
  4232  00FEE8  65                 	db	101	;'e'
  4233  00FEE9  6E                 	db	110	;'n'
  4234  00FEEA  73                 	db	115	;'s'
  4235  00FEEB  6F                 	db	111	;'o'
  4236  00FEEC  72                 	db	114	;'r'
  4237  00FEED  20                 	db	32
  4238  00FEEE  20                 	db	32
  4239  00FEEF  20                 	db	32
  4240  00FEF0  20                 	db	32
  4241  00FEF1  20                 	db	32
  4242  00FEF2  20                 	db	32
  4243  00FEF3  20                 	db	32
  4244  00FEF4  00                 	db	0
  4245  00FEF5                     STR_1:
  4246                           
  4247                           ; BSR set to: 57
  4248  00FEF5  20                 	db	32
  4249  00FEF6  4D                 	db	77	;'M'
  4250  00FEF7  42                 	db	66	;'B'
  4251  00FEF8  4D                 	db	77	;'M'
  4252  00FEF9  43                 	db	67	;'C'
  4253  00FEFA  20                 	db	32
  4254  00FEFB  53                 	db	83	;'S'
  4255  00FEFC  4F                 	db	79	;'O'
  4256  00FEFD  4C                 	db	76	;'L'
  4257  00FEFE  41                 	db	65	;'A'
  4258  00FEFF  52                 	db	82	;'R'
  4259  00FF00  4D                 	db	77	;'M'
  4260  00FF01  4F                 	db	79	;'O'
  4261  00FF02  4E                 	db	78	;'N'
  4262  00FF03  20                 	db	32
  4263  00FF04  20                 	db	32
  4264  00FF05  20                 	db	32
  4265  00FF06  20                 	db	32
  4266  00FF07  20                 	db	32
  4267  00FF08  20                 	db	32
  4268  00FF09  00                 	db	0
  4269  00FF0A                     STR_65:
  4270                           
  4271                           ; BSR set to: 57
  4272  00FF0A  42                 	db	66	;'B'
  4273  00FF0B  61                 	db	97	;'a'
  4274  00FF0C  74                 	db	116	;'t'
  4275  00FF0D  74                 	db	116	;'t'
  4276  00FF0E  65                 	db	101	;'e'
  4277  00FF0F  72                 	db	114	;'r'
  4278  00FF10  79                 	db	121	;'y'
  4279  00FF11  20                 	db	32
  4280  00FF12  61                 	db	97	;'a'
  4281  00FF13  6E                 	db	110	;'n'
  4282  00FF14  64                 	db	100	;'d'
  4283  00FF15  20                 	db	32
  4284  00FF16  50                 	db	80	;'P'
  4285  00FF17  56                 	db	86	;'V'
  4286  00FF18  20                 	db	32
  4287  00FF19  20                 	db	32
  4288  00FF1A  20                 	db	32
  4289  00FF1B  20                 	db	32
  4290  00FF1C  20                 	db	32
  4291  00FF1D  20                 	db	32
  4292  00FF1E  00                 	db	0
  4293  00FF1F                     STR_10:
  4294                           
  4295                           ; BSR set to: 57
  4296  00FF1F  52                 	db	82	;'R'
  4297  00FF20  65                 	db	101	;'e'
  4298  00FF21  61                 	db	97	;'a'
  4299  00FF22  64                 	db	100	;'d'
  4300  00FF23  20                 	db	32
  4301  00FF24  45                 	db	69	;'E'
  4302  00FF25  45                 	db	69	;'E'
  4303  00FF26  50                 	db	80	;'P'
  4304  00FF27  52                 	db	82	;'R'
  4305  00FF28  4F                 	db	79	;'O'
  4306  00FF29  4D                 	db	77	;'M'
  4307  00FF2A  20                 	db	32
  4308  00FF2B  44                 	db	68	;'D'
  4309  00FF2C  41                 	db	65	;'A'
  4310  00FF2D  54                 	db	84	;'T'
  4311  00FF2E  41                 	db	65	;'A'
  4312  00FF2F  20                 	db	32
  4313  00FF30  20                 	db	32
  4314  00FF31  20                 	db	32
  4315  00FF32  20                 	db	32
  4316  00FF33  00                 	db	0
  4317  00FF34                     STR_55:
  4318                           
  4319                           ; BSR set to: 57
  4320  00FF34  52                 	db	82	;'R'
  4321  00FF35  65                 	db	101	;'e'
  4322  00FF36  6C                 	db	108	;'l'
  4323  00FF37  65                 	db	101	;'e'
  4324  00FF38  61                 	db	97	;'a'
  4325  00FF39  73                 	db	115	;'s'
  4326  00FF3A  65                 	db	101	;'e'
  4327  00FF3B  20                 	db	32
  4328  00FF3C  62                 	db	98	;'b'
  4329  00FF3D  75                 	db	117	;'u'
  4330  00FF3E  74                 	db	116	;'t'
  4331  00FF3F  74                 	db	116	;'t'
  4332  00FF40  6F                 	db	111	;'o'
  4333  00FF41  6E                 	db	110	;'n'
  4334  00FF42  20                 	db	32
  4335  00FF43  25                 	db	37
  4336  00FF44  63                 	db	99	;'c'
  4337  00FF45  20                 	db	32
  4338  00FF46  20                 	db	32
  4339  00FF47  20                 	db	32
  4340  00FF48  00                 	db	0
  4341  00FF49                     STR_11:
  4342                           
  4343                           ; BSR set to: 57
  4344  00FF49  49                 	db	73	;'I'
  4345  00FF4A  6E                 	db	110	;'n'
  4346  00FF4B  76                 	db	118	;'v'
  4347  00FF4C  61                 	db	97	;'a'
  4348  00FF4D  6C                 	db	108	;'l'
  4349  00FF4E  69                 	db	105	;'i'
  4350  00FF4F  64                 	db	100	;'d'
  4351  00FF50  20                 	db	32
  4352  00FF51  45                 	db	69	;'E'
  4353  00FF52  45                 	db	69	;'E'
  4354  00FF53  50                 	db	80	;'P'
  4355  00FF54  52                 	db	82	;'R'
  4356  00FF55  4F                 	db	79	;'O'
  4357  00FF56  4D                 	db	77	;'M'
  4358  00FF57  20                 	db	32
  4359  00FF58  44                 	db	68	;'D'
  4360  00FF59  41                 	db	65	;'A'
  4361  00FF5A  54                 	db	84	;'T'
  4362  00FF5B  41                 	db	65	;'A'
  4363  00FF5C  20                 	db	32
  4364  00FF5D  00                 	db	0
  4365  00FF5E                     STR_85:
  4366                           
  4367                           ; BSR set to: 57
  4368  00FF5E  48                 	db	72	;'H'
  4369  00FF5F  45                 	db	69	;'E'
  4370  00FF60  4C                 	db	76	;'L'
  4371  00FF61  50                 	db	80	;'P'
  4372  00FF62  20                 	db	32
  4373  00FF63  25                 	db	37
  4374  00FF64  73                 	db	115	;'s'
  4375  00FF65  20                 	db	32
  4376  00FF66  20                 	db	32
  4377  00FF67  20                 	db	32
  4378  00FF68  20                 	db	32
  4379  00FF69  20                 	db	32
  4380  00FF6A  20                 	db	32
  4381  00FF6B  20                 	db	32
  4382  00FF6C  20                 	db	32
  4383  00FF6D  20                 	db	32
  4384  00FF6E  20                 	db	32
  4385  00FF6F  20                 	db	32
  4386  00FF70  00                 	db	0
  4387  00FF71                     STR_68:
  4388                           
  4389                           ; BSR set to: 57
  4390  00FF71  50                 	db	80	;'P'
  4391  00FF72  72                 	db	114	;'r'
  4392  00FF73  65                 	db	101	;'e'
  4393  00FF74  73                 	db	115	;'s'
  4394  00FF75  73                 	db	115	;'s'
  4395  00FF76  20                 	db	32
  4396  00FF77  62                 	db	98	;'b'
  4397  00FF78  75                 	db	117	;'u'
  4398  00FF79  74                 	db	116	;'t'
  4399  00FF7A  74                 	db	116	;'t'
  4400  00FF7B  6F                 	db	111	;'o'
  4401  00FF7C  6E                 	db	110	;'n'
  4402  00FF7D  20                 	db	32
  4403  00FF7E  25                 	db	37
  4404  00FF7F  63                 	db	99	;'c'
  4405  00FF80  20                 	db	32
  4406  00FF81  20                 	db	32
  4407  00FF82  20                 	db	32
  4408  00FF83  00                 	db	0
  4409  00FF84                     
  4410                           ; BSR set to: 57
  4411  00FF84  25                 	db	37
  4412  00FF85  64                 	db	100	;'d'
  4413  00FF86  20                 	db	32
  4414  00FF87  25                 	db	37
  4415  00FF88  32                 	db	50	;'2'
  4416  00FF89  2E                 	db	46
  4417  00FF8A  34                 	db	52	;'4'
  4418  00FF8B  66                 	db	102	;'f'
  4419  00FF8C  2C                 	db	44
  4420  00FF8D  20                 	db	32
  4421  00FF8E  25                 	db	37
  4422  00FF8F  64                 	db	100	;'d'
  4423  00FF90  20                 	db	32
  4424  00FF91  20                 	db	32
  4425  00FF92  20                 	db	32
  4426  00FF93  23                 	db	35
  4427  00FF94  20                 	db	32
  4428  00FF95  00                 	db	0
  4429  00FF96                     STR_28:
  4430                           
  4431                           ; BSR set to: 57
  4432  00FF96  25                 	db	37
  4433  00FF97  64                 	db	100	;'d'
  4434  00FF98  20                 	db	32
  4435  00FF99  25                 	db	37
  4436  00FF9A  32                 	db	50	;'2'
  4437  00FF9B  2E                 	db	46
  4438  00FF9C  34                 	db	52	;'4'
  4439  00FF9D  66                 	db	102	;'f'
  4440  00FF9E  20                 	db	32
  4441  00FF9F  20                 	db	32
  4442  00FFA0  20                 	db	32
  4443  00FFA1  25                 	db	37
  4444  00FFA2  64                 	db	100	;'d'
  4445  00FFA3  20                 	db	32
  4446  00FFA4  20                 	db	32
  4447  00FFA5  20                 	db	32
  4448  00FFA6  00                 	db	0
  4449  00FFA7                     STR_89:
  4450                           
  4451                           ; BSR set to: 57
  4452  00FFA7  76                 	db	118	;'v'
  4453  00FFA8  74                 	db	116	;'t'
  4454  00FFA9  65                 	db	101	;'e'
  4455  00FFAA  72                 	db	114	;'r'
  4456  00FFAB  6D                 	db	109	;'m'
  4457  00FFAC  20                 	db	32
  4458  00FFAD  25                 	db	37
  4459  00FFAE  78                 	db	120	;'x'
  4460  00FFAF  3A                 	db	58	;':'
  4461  00FFB0  25                 	db	37
  4462  00FFB1  78                 	db	120	;'x'
  4463  00FFB2  20                 	db	32
  4464  00FFB3  20                 	db	32
  4465  00FFB4  20                 	db	32
  4466  00FFB5  00                 	db	0
  4467  00FFB6                     STR_83:
  4468                           
  4469                           ; BSR set to: 57
  4470  00FFB6  46                 	db	70	;'F'
  4471  00FFB7  65                 	db	101	;'e'
  4472  00FFB8  62                 	db	98	;'b'
  4473  00FFB9  20                 	db	32
  4474  00FFBA  31                 	db	49	;'1'
  4475  00FFBB  36                 	db	54	;'6'
  4476  00FFBC  20                 	db	32
  4477  00FFBD  32                 	db	50	;'2'
  4478  00FFBE  30                 	db	48	;'0'
  4479  00FFBF  32                 	db	50	;'2'
  4480  00FFC0  30                 	db	48	;'0'
  4481  00FFC1  00                 	db	0
  4482  00FFC2                     STR_87:
  4483                           
  4484                           ; BSR set to: 57
  4485  00FFC2  25                 	db	37
  4486  00FFC3  73                 	db	115	;'s'
  4487  00FFC4  20                 	db	32
  4488  00FFC5  20                 	db	32
  4489  00FFC6  20                 	db	32
  4490  00FFC7  20                 	db	32
  4491  00FFC8  20                 	db	32
  4492  00FFC9  20                 	db	32
  4493  00FFCA  20                 	db	32
  4494  00FFCB  00                 	db	0
  4495  00FFCC                     STR_84:
  4496                           
  4497                           ; BSR set to: 57
  4498  00FFCC  32                 	db	50	;'2'
  4499  00FFCD  30                 	db	48	;'0'
  4500  00FFCE  3A                 	db	58	;':'
  4501  00FFCF  32                 	db	50	;'2'
  4502  00FFD0  36                 	db	54	;'6'
  4503  00FFD1  3A                 	db	58	;':'
  4504  00FFD2  33                 	db	51	;'3'
  4505  00FFD3  37                 	db	55	;'7'
  4506  00FFD4  00                 	db	0
  4507  00FFD5                     STR_3:
  4508                           
  4509                           ; BSR set to: 57
  4510  00FFD5  31                 	db	49	;'1'
  4511  00FFD6  2E                 	db	46
  4512  00FFD7  32                 	db	50	;'2'
  4513  00FFD8  35                 	db	53	;'5'
  4514  00FFD9  00                 	db	0
  4515  00FFDA                     STR_104:
  4516                           
  4517                           ; BSR set to: 57
  4518  00FFDA  49                 	db	73	;'I'
  4519  00FFDB  4E                 	db	78	;'N'
  4520  00FFDC  46                 	db	70	;'F'
  4521  00FFDD  00                 	db	0
  4522  00FFDE                     STR_108:
  4523                           
  4524                           ; BSR set to: 57
  4525  00FFDE  4E                 	db	78	;'N'
  4526  00FFDF  41                 	db	65	;'A'
  4527  00FFE0  4E                 	db	78	;'N'
  4528  00FFE1  00                 	db	0
  4529  00FFE2                     STR_105:
  4530                           
  4531                           ; BSR set to: 57
  4532  00FFE2  69                 	db	105	;'i'
  4533  00FFE3  6E                 	db	110	;'n'
  4534  00FFE4  66                 	db	102	;'f'
  4535  00FFE5  00                 	db	0
  4536  00FFE6                     STR_109:
  4537                           
  4538                           ; BSR set to: 57
  4539  00FFE6  6E                 	db	110	;'n'
  4540  00FFE7  61                 	db	97	;'a'
  4541  00FFE8  6E                 	db	110	;'n'
  4542  00FFE9  00                 	db	0
  4543  00FFEA                     STR_135:
  4544                           
  4545                           ; BSR set to: 57
  4546  00FFEA  6C                 	db	108	;'l'
  4547  00FFEB  58                 	db	88	;'X'
  4548  00FFEC  00                 	db	0
  4549  00FFED                     STR_112:
  4550                           
  4551                           ; BSR set to: 57
  4552  00FFED  6C                 	db	108	;'l'
  4553  00FFEE  64                 	db	100	;'d'
  4554  00FFEF  00                 	db	0
  4555  00FFF0                     STR_121:
  4556                           
  4557                           ; BSR set to: 57
  4558  00FFF0  6C                 	db	108	;'l'
  4559  00FFF1  66                 	db	102	;'f'
  4560  00FFF2  00                 	db	0
  4561  00FFF3                     STR_116:
  4562                           
  4563                           ; BSR set to: 57
  4564  00FFF3  6C                 	db	108	;'l'
  4565  00FFF4  69                 	db	105	;'i'
  4566  00FFF5  00                 	db	0
  4567  00FFF6                     STR_126:
  4568                           
  4569                           ; BSR set to: 57
  4570  00FFF6  6C                 	db	108	;'l'
  4571  00FFF7  75                 	db	117	;'u'
  4572  00FFF8  00                 	db	0
  4573  00FFF9                     STR_131:
  4574                           
  4575                           ; BSR set to: 57
  4576  00FFF9  6C                 	db	108	;'l'
  4577  00FFFA  78                 	db	120	;'x'
  4578  00FFFB  00                 	db	0
  4579  00FFFC                     STR_82:
  4580                           
  4581                           ; BSR set to: 57
  4582  00FFFC  25                 	db	37
  4583  00FFFD  73                 	db	115	;'s'
  4584  00FFFE  00                 	db	0
  4585  0000                     
  4586                           ; #config settings
  4587  00FFFF  00                 	db	0	; dummy byte at the end
  4588  0000                     
  4589                           	psect	cinit
  4590  0001C0                     __pcinit:
  4591                           	opt callstack 0
  4592  0001C0                     start_initialization:
  4593                           	opt callstack 0
  4594  0001C0                     __initialization:
  4595                           	opt callstack 0
  4596                           
  4597                           ; Initialize objects allocated to BIGRAM (832 bytes)
  4598                           ; load TBLPTR registers with __pidataBIGRAM
  4599  0001C0  0E30               	movlw	low __pidataBIGRAM
  4600  0001C2  6EF6               	movwf	tblptrl,c
  4601  0001C4  0EAA               	movlw	high __pidataBIGRAM
  4602  0001C6  6EF7               	movwf	tblptrh,c
  4603  0001C8  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  4604  0001CA  6EF8               	movwf	tblptru,c
  4605  0001CC  EE01  F2FF         	lfsr	0,__pdataBIGRAM
  4606  0001D0  EE20 F340          	lfsr	2,832
  4607  0001D4                     copy_data0:
  4608  0001D4  0009               	tblrd		*+
  4609  0001D6  006F FFD7 FFEE     	movff	tablat,postinc0
  4610  0001DC  50DD               	movf	postdec2,w,c
  4611  0001DE  50D9               	movf	fsr2l,w,c
  4612  0001E0  E1F9               	bnz	copy_data0
  4613  0001E2  50DA               	movf	fsr2h,w,c
  4614  0001E4  E1F7               	bnz	copy_data0
  4615                           
  4616                           ; Initialize objects allocated to BANK2 (188 bytes)
  4617                           ; load TBLPTR registers with __pidataBANK2
  4618  0001E6  0E98               	movlw	low __pidataBANK2
  4619  0001E8  6EF6               	movwf	tblptrl,c
  4620  0001EA  0E0A               	movlw	high __pidataBANK2
  4621  0001EC  6EF7               	movwf	tblptrh,c
  4622  0001EE  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  4623  0001F0  6EF8               	movwf	tblptru,c
  4624  0001F2  EE00  F200         	lfsr	0,__pdataBANK2
  4625  0001F6  EE20 F0BC          	lfsr	2,188
  4626  0001FA                     copy_data1:
  4627  0001FA  0009               	tblrd		*+
  4628  0001FC  006F FFD7 FFEE     	movff	tablat,postinc0
  4629  000202  50DD               	movf	postdec2,w,c
  4630  000204  50D9               	movf	fsr2l,w,c
  4631  000206  E1F9               	bnz	copy_data1
  4632                           
  4633                           ; Initialize objects allocated to BANK1 (164 bytes)
  4634                           ; load TBLPTR registers with __pidataBANK1
  4635  000208  0E26               	movlw	low __pidataBANK1
  4636  00020A  6EF6               	movwf	tblptrl,c
  4637  00020C  0E10               	movlw	high __pidataBANK1
  4638  00020E  6EF7               	movwf	tblptrh,c
  4639  000210  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  4640  000212  6EF8               	movwf	tblptru,c
  4641  000214  EE00  F100         	lfsr	0,__pdataBANK1
  4642  000218  EE20 F0A4          	lfsr	2,164
  4643  00021C                     copy_data2:
  4644  00021C  0009               	tblrd		*+
  4645  00021E  006F FFD7 FFEE     	movff	tablat,postinc0
  4646  000224  50DD               	movf	postdec2,w,c
  4647  000226  50D9               	movf	fsr2l,w,c
  4648  000228  E1F9               	bnz	copy_data2
  4649                           
  4650                           ; Clear objects allocated to BIGRAM (642 bytes)
  4651  00022A  EE02  F23F         	lfsr	0,__pbssBIGRAM
  4652  00022E  EE20 F282          	lfsr	2,642
  4653  000232                     clear_0:
  4654  000232  6AEE               	clrf	postinc0,c
  4655  000234  50DD               	movf	postdec2,w,c
  4656  000236  50D9               	movf	fsr2l,w,c
  4657  000238  E1FC               	bnz	clear_0
  4658  00023A  50DA               	movf	fsr2h,w,c
  4659  00023C  E1FA               	bnz	clear_0
  4660                           
  4661                           ; Clear objects allocated to BANK6 (255 bytes)
  4662  00023E  EE01  F200         	lfsr	0,__pbssBANK6
  4663  000242  EE20 F0FF          	lfsr	2,255
  4664  000246                     clear_1:
  4665  000246  6AEE               	clrf	postinc0,c
  4666  000248  50DD               	movf	postdec2,w,c
  4667  00024A  50D9               	movf	fsr2l,w,c
  4668  00024C  E1FC               	bnz	clear_1
  4669  00024E  50DA               	movf	fsr2h,w,c
  4670  000250  E1FA               	bnz	clear_1
  4671                           
  4672                           ; Clear objects allocated to BANK5 (134 bytes)
  4673  000252  EE01  F100         	lfsr	0,__pbssBANK5
  4674  000256  0E86               	movlw	134
  4675  000258                     clear_2:
  4676  000258  6AEE               	clrf	postinc0,c
  4677  00025A  06E8               	decf	wreg,f,c
  4678  00025C  E1FD               	bnz	clear_2
  4679                           
  4680                           ; Clear objects allocated to BANK4 (219 bytes)
  4681  00025E  EE01  F000         	lfsr	0,__pbssBANK4
  4682  000262  0EDB               	movlw	219
  4683  000264                     clear_3:
  4684  000264  6AEE               	clrf	postinc0,c
  4685  000266  06E8               	decf	wreg,f,c
  4686  000268  E1FD               	bnz	clear_3
  4687                           
  4688                           ; Clear objects allocated to BANK3 (247 bytes)
  4689  00026A  EE00  F300         	lfsr	0,__pbssBANK3
  4690  00026E  0EF7               	movlw	247
  4691  000270                     clear_4:
  4692  000270  6AEE               	clrf	postinc0,c
  4693  000272  06E8               	decf	wreg,f,c
  4694  000274  E1FD               	bnz	clear_4
  4695                           
  4696                           ; Clear objects allocated to BANK2 (42 bytes)
  4697  000276  EE00  F2BC         	lfsr	0,__pbssBANK2
  4698  00027A  0E2A               	movlw	42
  4699  00027C                     clear_5:
  4700  00027C  6AEE               	clrf	postinc0,c
  4701  00027E  06E8               	decf	wreg,f,c
  4702  000280  E1FD               	bnz	clear_5
  4703                           
  4704                           ; Clear objects allocated to BANK1 (89 bytes)
  4705  000282  EE00  F1A4         	lfsr	0,__pbssBANK1
  4706  000286  0E59               	movlw	89
  4707  000288                     clear_6:
  4708  000288  6AEE               	clrf	postinc0,c
  4709  00028A  06E8               	decf	wreg,f,c
  4710  00028C  E1FD               	bnz	clear_6
  4711                           
  4712                           ; Clear objects allocated to BANK0 (133 bytes)
  4713  00028E  EE00  F060         	lfsr	0,__pbssBANK0
  4714  000292  0E85               	movlw	133
  4715  000294                     clear_7:
  4716  000294  6AEE               	clrf	postinc0,c
  4717  000296  06E8               	decf	wreg,f,c
  4718  000298  E1FD               	bnz	clear_7
  4719                           
  4720                           ; Clear objects allocated to COMRAM (14 bytes)
  4721  00029A  EE00  F04A         	lfsr	0,__pbssCOMRAM
  4722  00029E  0E0E               	movlw	14
  4723  0002A0                     clear_8:
  4724  0002A0  6AEE               	clrf	postinc0,c
  4725  0002A2  06E8               	decf	wreg,f,c
  4726  0002A4  E1FD               	bnz	clear_8
  4727                           
  4728                           ;
  4729                           ; Setup IVTBASE
  4730                           ;
  4731  0002A6  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  4732  0002A8  6ED5               	movwf	213,c
  4733  0002AA  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  4734  0002AC  6ED6               	movwf	214,c
  4735  0002AE  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  4736  0002B0  6ED7               	movwf	215,c
  4737  0002B2                     end_of_initialization:
  4738                           	opt callstack 0
  4739  0002B2                     __end_of__initialization:
  4740                           	opt callstack 0
  4741  0002B2  0100               	movlb	0
  4742  0002B4  EF00  F080         	goto	_main	;jump to C main() function
  4743                           
  4744                           	psect	bssCOMRAM
  4745  00004A                     __pbssCOMRAM:
  4746                           	opt callstack 0
  4747  00004A                     _width:
  4748                           	opt callstack 0
  4749  00004A                     	ds	2
  4750  00004C                     _prec:
  4751                           	opt callstack 0
  4752  00004C                     	ds	2
  4753  00004E                     _flags:
  4754                           	opt callstack 0
  4755  00004E                     	ds	2
  4756  000050                     calc_bsoc@log_update_wait:
  4757                           	opt callstack 0
  4758  000050                     	ds	1
  4759  000051                     check_day_time@day_delay:
  4760                           	opt callstack 0
  4761  000051                     	ds	1
  4762  000052                     dac_spi_control@init:
  4763                           	opt callstack 0
  4764  000052                     	ds	1
  4765  000053                     display_history@bwait:
  4766                           	opt callstack 0
  4767  000053                     	ds	1
  4768  000054                     _uart2RxHead:
  4769                           	opt callstack 0
  4770  000054                     	ds	1
  4771  000055                     _uart2TxBufferRemaining:
  4772                           	opt callstack 0
  4773  000055                     	ds	1
  4774  000056                     _uart2TxTail:
  4775                           	opt callstack 0
  4776  000056                     	ds	1
  4777  000057                     _uart1RxHead:
  4778                           	opt callstack 0
  4779  000057                     	ds	1
  4780                           
  4781                           	psect	bssBANK0
  4782  000060                     __pbssBANK0:
  4783                           	opt callstack 0
  4784  000060                     _spi_link:
  4785                           	opt callstack 0
  4786  000060                     	ds	12
  4787  00006C                     ___tzname:
  4788                           	opt callstack 0
  4789  00006C                     	ds	4
  4790  000070                     ___timezone:
  4791                           	opt callstack 0
  4792  000070                     	ds	4
  4793  000074                     floorf@F524:
  4794                           	opt callstack 0
  4795  000074                     	ds	4
  4796  000078                     fabsf@F463:
  4797                           	opt callstack 0
  4798  000078                     	ds	4
  4799  00007C                     ___fpclassifyf@F463:
  4800                           	opt callstack 0
  4801  00007C                     	ds	4
  4802  000080                     calc_ror_data@bcror:
  4803                           	opt callstack 0
  4804  000080                     	ds	4
  4805  000084                     calc_ror_data@bvror:
  4806                           	opt callstack 0
  4807  000084                     	ds	4
  4808  000088                     calc_model_data@bcror:
  4809                           	opt callstack 0
  4810  000088                     	ds	4
  4811  00008C                     calc_model_data@bvror:
  4812                           	opt callstack 0
  4813  00008C                     	ds	4
  4814  000090                     wdtdelay@dcount:
  4815                           	opt callstack 0
  4816  000090                     	ds	4
  4817  000094                     _P:
  4818                           	opt callstack 0
  4819  000094                     	ds	4
  4820  000098                     _TMR3_InterruptHandler:
  4821                           	opt callstack 0
  4822  000098                     	ds	3
  4823  00009B                     _TMR5_InterruptHandler:
  4824                           	opt callstack 0
  4825  00009B                     	ds	3
  4826  00009E                     _TMR6_InterruptHandler:
  4827                           	opt callstack 0
  4828  00009E                     	ds	3
  4829  0000A1                     _ADCC_ADTI_InterruptHandler:
  4830                           	opt callstack 0
  4831  0000A1                     	ds	3
  4832  0000A4                     _ADCC_ADI_InterruptHandler:
  4833                           	opt callstack 0
  4834  0000A4                     	ds	3
  4835  0000A7                     _UART1_RxInterruptHandler:
  4836                           	opt callstack 0
  4837  0000A7                     	ds	3
  4838  0000AA                     _UART2_TxInterruptHandler:
  4839                           	opt callstack 0
  4840  0000AA                     	ds	3
  4841  0000AD                     _UART2_RxInterruptHandler:
  4842                           	opt callstack 0
  4843  0000AD                     	ds	3
  4844  0000B0                     _INT1_InterruptHandler:
  4845                           	opt callstack 0
  4846  0000B0                     	ds	3
  4847  0000B3                     _INT0_InterruptHandler:
  4848                           	opt callstack 0
  4849  0000B3                     	ds	3
  4850  0000B6                     _dst_off:
  4851                           	opt callstack 0
  4852  0000B6                     	ds	2
  4853  0000B8                     ___daylight:
  4854                           	opt callstack 0
  4855  0000B8                     	ds	2
  4856  0000BA                     _nout:
  4857                           	opt callstack 0
  4858  0000BA                     	ds	2
  4859  0000BC                     _t_mbmc:
  4860                           	opt callstack 0
  4861  0000BC                     	ds	2
  4862  0000BE                     TMR3_ISR@CountCallBack:
  4863                           	opt callstack 0
  4864  0000BE                     	ds	2
  4865  0000C0                     _timer3ReloadVal:
  4866                           	opt callstack 0
  4867  0000C0                     	ds	2
  4868  0000C2                     TMR5_ISR@CountCallBack:
  4869                           	opt callstack 0
  4870  0000C2                     	ds	2
  4871  0000C4                     _timer5ReloadVal:
  4872                           	opt callstack 0
  4873  0000C4                     	ds	2
  4874  0000C6                     esr_check@esr_state:
  4875                           	opt callstack 0
  4876  0000C6                     	ds	1
  4877  0000C7                     dac_spi_control@SB:
  4878                           	opt callstack 0
  4879  0000C7                     	ds	1
  4880  0000C8                     dac_spi_control@SC:
  4881                           	opt callstack 0
  4882  0000C8                     	ds	1
  4883  0000C9                     dac_spi_control@S2:
  4884                           	opt callstack 0
  4885  0000C9                     	ds	1
  4886  0000CA                     dac_spi_control@S1:
  4887                           	opt callstack 0
  4888  0000CA                     	ds	1
  4889  0000CB                     dac_spi_control@S0:
  4890                           	opt callstack 0
  4891  0000CB                     	ds	1
  4892  0000CC                     _mode_sw:
  4893                           	opt callstack 0
  4894  0000CC                     	ds	1
  4895  0000CD                     _uart2RxCount:
  4896                           	opt callstack 0
  4897  0000CD                     	ds	1
  4898  0000CE                     _uart2RxTail:
  4899                           	opt callstack 0
  4900  0000CE                     	ds	1
  4901  0000CF                     _uart2TxHead:
  4902                           	opt callstack 0
  4903  0000CF                     	ds	1
  4904  0000D0                     _uart1RxCount:
  4905                           	opt callstack 0
  4906  0000D0                     	ds	1
  4907  0000D1                     _uart1RxTail:
  4908                           	opt callstack 0
  4909  0000D1                     	ds	1
  4910  0000D2                     time@current_time:
  4911                           	opt callstack 0
  4912  0000D2                     	ds	8
  4913  0000DA                     _pclock:
  4914                           	opt callstack 0
  4915  0000DA                     	ds	8
  4916  0000E2                     _crcObj:
  4917                           	opt callstack 0
  4918  0000E2                     	ds	3
  4919                           
  4920                           	psect	bssBANK1
  4921  0001A4                     __pbssBANK1:
  4922                           	opt callstack 0
  4923  0001A4                     _S:
  4924                           	opt callstack 0
  4925  0001A4                     	ds	41
  4926  0001CD                     spinners@s:
  4927                           	opt callstack 0
  4928  0001CD                     	ds	6
  4929  0001D3                     _lock:
  4930                           	opt callstack 0
  4931  0001D3                     	ds	4
  4932  0001D7                     _utctime:
  4933                           	opt callstack 0
  4934  0001D7                     	ds	4
  4935  0001DB                     _r1:
  4936                           	opt callstack 0
  4937  0001DB                     	ds	10
  4938  0001E5                     _r0:
  4939                           	opt callstack 0
  4940  0001E5                     	ds	10
  4941  0001EF                     _dst_name:
  4942                           	opt callstack 0
  4943  0001EF                     	ds	7
  4944  0001F6                     _std_name:
  4945                           	opt callstack 0
  4946  0001F6                     	ds	7
  4947                           
  4948                           	psect	dataBANK1
  4949  000100                     __pdataBANK1:
  4950                           	opt callstack 0
  4951  000100                     _R:
  4952                           	opt callstack 0
  4953  000100                     	ds	155
  4954  00019B                     _H:
  4955                           	opt callstack 0
  4956  00019B                     	ds	9
  4957                           
  4958                           	psect	bssBANK2
  4959  0002BC                     __pbssBANK2:
  4960                           	opt callstack 0
  4961  0002BC                     _tickCount:
  4962                           	opt callstack 0
  4963  0002BC                     	ds	26
  4964  0002D6                     _uart1RxBuffer:
  4965                           	opt callstack 0
  4966  0002D6                     	ds	8
  4967  0002DE                     _seed:
  4968                           	opt callstack 0
  4969  0002DE                     	ds	8
  4970                           
  4971                           	psect	dataBANK2
  4972  000200                     __pdataBANK2:
  4973                           	opt callstack 0
  4974  000200                     stoa@F1166:
  4975                           	opt callstack 0
  4976  000200                     	ds	7
  4977  000207                     _V:
  4978                           	opt callstack 0
  4979  000207                     	ds	181
  4980                           
  4981                           	psect	bssBANK3
  4982  000300                     __pbssBANK3:
  4983                           	opt callstack 0
  4984  000300                     lp_filter@smooth:
  4985                           	opt callstack 0
  4986  000300                     	ds	84
  4987  000354                     _dbuf:
  4988                           	opt callstack 0
  4989  000354                     	ds	80
  4990  0003A4                     	ds	32
  4991  0003C4                     asctime@buf:
  4992                           	opt callstack 0
  4993  0003C4                     	ds	27
  4994  0003DF                     localtime@tm:
  4995                           	opt callstack 0
  4996  0003DF                     	ds	24
  4997                           
  4998                           	psect	bssBANK4
  4999  000400                     __pbssBANK4:
  5000                           	opt callstack 0
  5001  000400                     _uart2TxBuffer:
  5002                           	opt callstack 0
  5003  000400                     	ds	64
  5004  000440                     _r_cal:
  5005                           	opt callstack 0
  5006  000440                     	ds	155
  5007                           
  5008                           	psect	bssBANK5
  5009  000500                     __pbssBANK5:
  5010                           	opt callstack 0
  5011  000500                     _ring_buf2:
  5012                           	opt callstack 0
  5013  000500                     	ds	67
  5014  000543                     _ring_buf1:
  5015                           	opt callstack 0
  5016  000543                     	ds	67
  5017                           
  5018                           	psect	bssBANK6
  5019  000600                     __pbssBANK6:
  5020                           	opt callstack 0
  5021  000600                     _uart2RxBuffer:
  5022                           	opt callstack 0
  5023  000600                     	ds	255
  5024                           
  5025                           	psect	bssBIGRAM
  5026  000A3F                     __pbssBIGRAM:
  5027                           	opt callstack 0
  5028  000A3F                     _D:
  5029                           	opt callstack 0
  5030  000A3F                     	ds	642
  5031                           
  5032                           	psect	dataBIGRAM
  5033  0006FF                     __pdataBIGRAM:
  5034                           	opt callstack 0
  5035  0006FF                     _port_data:
  5036                           	opt callstack 0
  5037  0006FF                     	ds	512
  5038  0008FF                     _C:
  5039                           	opt callstack 0
  5040  0008FF                     	ds	320
  5041                           
  5042                           	psect	cstackBANK0
  5043  0000E5                     __pcstackBANK0:
  5044                           	opt callstack 0
  5045  0000E5                     ??_TMR3_ISR:
  5046                           
  5047                           ; 1 bytes @ 0x0
  5048  0000E5                     	ds	25
  5049                           
  5050                           	psect	cstackCOMRAM
  5051  000001                     __pcstackCOMRAM:
  5052                           	opt callstack 0
  5053  000001                     ??_ADCC_ThresholdISR:
  5054  000001                     
  5055                           ; 1 bytes @ 0x0
  5056  000001                     	ds	5
  5057  000006                     ??_TMR6_ISR:
  5058                           
  5059                           ; 1 bytes @ 0x5
  5060  000006                     	ds	1
  5061  000007                     ??_INT1_ISR:
  5062  000007                     
  5063                           ; 1 bytes @ 0x6
  5064  000007                     	ds	4
  5065  00000B                     ??_TMR5_ISR:
  5066                           
  5067                           ; 1 bytes @ 0xA
  5068  00000B                     	ds	31
  5069                           
  5070 ;;
  5071 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  5072 ;;
  5073 ;; *************** function _main *****************
  5074 ;; Defined at:
  5075 ;;		line 198 in file "main.c"
  5076 ;; Parameters:    Size  Location     Type
  5077 ;;		None
  5078 ;; Auto vars:     Size  Location     Type
  5079 ;;  esr_temp        4  [STACK] float 
  5080 ;;  i_esr           2  [STACK] unsigned short 
  5081 ;;  shape           1  [STACK] unsigned char 
  5082 ;;  inp_index       1  [STACK] unsigned char 
  5083 ;;  k               1  [STACK] unsigned char 
  5084 ;;  j               1  [STACK] unsigned char 
  5085 ;;  i               1  [STACK] unsigned char 
  5086 ;;  mode            1  [STACK] enum E17179
  5087 ;;  i_ror           1  [STACK] unsigned char 
  5088 ;; Return value:  Size  Location     Type
  5089 ;;                  1  [STACK] void 
  5090 ;; Registers used:
  5091 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
  5092 ;; Tracked objects:
  5093 ;;		On entry : 0/0
  5094 ;;		On exit  : 0/0
  5095 ;;		Unchanged: 0/0
  5096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5101 ;;Total ram usage:        0 bytes
  5102 ;; Hardware stack levels required when called:   28
  5103 ;; This function calls:
  5104 ;;		_SYSTEM_Initialize
  5105 ;;		_StartTimer
  5106 ;;		_TimerDone
  5107 ;;		_WaitMs
  5108 ;;		___fladd
  5109 ;;		___flge
  5110 ;;		___fltol
  5111 ;;		_asctime
  5112 ;;		_calc_model_data
  5113 ;;		_calc_ror_data
  5114 ;;		_check_adc_scan
  5115 ;;		_check_enter_button
  5116 ;;		_check_help
  5117 ;;		_clear_adc_scan
  5118 ;;		_clear_hid_pflags
  5119 ;;		_conv_raw_result
  5120 ;;		_convert_adc_data
  5121 ;;		_current_sensor_cal
  5122 ;;		_display_history
  5123 ;;		_eaDogM_WriteCommand
  5124 ;;		_esr_check
  5125 ;;		_fabsf
  5126 ;;		_get_raw_result
  5127 ;;		_get_switch
  5128 ;;		_get_vterm_ptr
  5129 ;;		_hid_display
  5130 ;;		_init_bsoc
  5131 ;;		_init_display
  5132 ;;		_init_port_dma
  5133 ;;		_load_hist_data
  5134 ;;		_localtime
  5135 ;;		_lp_filter
  5136 ;;		_mode_lamp_dim
  5137 ;;		_read_cal_data
  5138 ;;		_set_dac
  5139 ;;		_set_dac_a
  5140 ;;		_set_dac_b
  5141 ;;		_set_display_info
  5142 ;;		_set_hist_flag
  5143 ;;		_set_load_relay_one
  5144 ;;		_set_load_relay_two
  5145 ;;		_set_time
  5146 ;;		_set_vterm
  5147 ;;		_spinners
  5148 ;;		_sprintf
  5149 ;;		_srand
  5150 ;;		_start_adc_scan
  5151 ;;		_start_switch_handler
  5152 ;;		_static_soc
  5153 ;;		_time
  5154 ;;		_update_cal_data
  5155 ;;		_update_hist_data
  5156 ;;		_update_lcd
  5157 ;;		_wait_lcd_done
  5158 ;;		_write_cal_data
  5159 ;; This function is called by:
  5160 ;;		Startup code after reset
  5161 ;; This function uses a reentrant model
  5162 ;;
  5163                           
  5164                           	psect	text0
  5165  010000                     __ptext0:
  5166                           	opt callstack 0
  5167  010000                     _main:
  5168                           	opt callstack 0
  5169                           
  5170                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  5171  010000  0E11               	movlw	17
  5172  010002  26E1               	addwf	fsr1l,f,c
  5173  010004  0E00               	movlw	0
  5174  010006  22E2               	addwfc	fsr1h,f,c
  5175                           
  5176                           ;main.c: 200:  UI_STATES mode;;main.c: 201:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  5177                           ;stkvar	_inp_index @ sp[(-17)+11]
  5178                           
  5179                           ;incstack = 0
  5180  010008  0EFA               	movlw	-6
  5181  01000A  6AE3               	clrf	plusw1,c
  5182                           
  5183                           ;stkvar	_i @ sp[(-17)+14]
  5184  01000C  0EFD               	movlw	-3
  5185  01000E  6AE3               	clrf	plusw1,c
  5186                           
  5187                           ;stkvar	_j @ sp[(-17)+13]
  5188  010010  0EFC               	movlw	-4
  5189  010012  6AE3               	clrf	plusw1,c
  5190  010014  2AE3               	incf	plusw1,f,c
  5191                           
  5192                           ;stkvar	_k @ sp[(-17)+12]
  5193  010016  0EFB               	movlw	-5
  5194  010018  6AE3               	clrf	plusw1,c
  5195  01001A  82E3               	bsf	plusw1,1,c
  5196                           
  5197                           ;main.c: 204:  SYSTEM_Initialize();
  5198  01001C  EC7F  F010         	call	_SYSTEM_Initialize	;wreg free
  5199                           
  5200                           ; BSR set to: 60
  5201                           ;main.c: 207:  (INTCON0bits.GIEH = 1);
  5202  010020  8ED2               	bsf	210,7,c	;volatile
  5203                           
  5204                           ; BSR set to: 60
  5205                           ;main.c: 210:  (INTCON0bits.GIEL = 1);
  5206  010022  8CD2               	bsf	210,6,c	;volatile
  5207                           
  5208                           ; BSR set to: 60
  5209                           ;main.c: 212:  V.ui_state = UI_STATE_INIT;
  5210  010024  0102               	movlb	2	; () banked
  5211  010026  6B07               	clrf	_V& (0+255),b	;volatile
  5212                           
  5213                           ; BSR set to: 2
  5214                           ;main.c: 217:  WaitMs(300);
  5215  010028  0E2C               	movlw	44
  5216  01002A  6EE6               	movwf	postinc1,c
  5217  01002C  0E01               	movlw	1
  5218  01002E  6EE6               	movwf	postinc1,c
  5219  010030  EC57  F013         	call	_WaitMs	;wreg free
  5220                           
  5221                           ;main.c: 218:  if (PORTBbits.RB0) {
  5222  010034  A0CB               	btfss	203,0,c	;volatile
  5223  010036  D004               	goto	l17687
  5224                           
  5225                           ;main.c: 219:   mode = UI_STATE_HOST;
  5226                           ;stkvar	_mode @ sp[(-17)+15]
  5227  010038  0EFE               	movlw	-2
  5228  01003A  6AE3               	clrf	plusw1,c
  5229  01003C  2AE3               	incf	plusw1,f,c
  5230                           
  5231                           ;main.c: 220:  } else {
  5232  01003E  D004               	goto	l17689
  5233  010040                     l17687:
  5234                           
  5235                           ;main.c: 221:   mode = UI_STATE_LOG;
  5236                           ;stkvar	_mode @ sp[(-17)+15]
  5237  010040  0EFE               	movlw	-2
  5238  010042  6AE3               	clrf	plusw1,c
  5239  010044  80E3               	bsf	plusw1,0,c
  5240  010046  82E3               	bsf	plusw1,1,c	;indir
  5241  010048                     l17689:
  5242                           
  5243                           ;main.c: 224:  if (mode == UI_STATE_HOST) {
  5244                           ;stkvar	_mode @ sp[(-17)+15]
  5245  010048  0EFE               	movlw	-2
  5246  01004A  04E3               	decf	plusw1,w,c
  5247  01004C  A4D8               	btfss	status,2,c
  5248  01004E  D007               	goto	l1459
  5249                           
  5250                           ;main.c: 225:   do { LATDbits.LATD0 = 1; } while(0);
  5251  010050  80BD               	bsf	189,0,c	;volatile
  5252                           
  5253                           ;main.c: 226:   V.mode_pwm = 70;
  5254  010052  0E00               	movlw	0
  5255  010054  0102               	movlb	2	; () banked
  5256  010056  6F9A               	movwf	(_V+147)& (0+255),b	;volatile
  5257  010058  0E46               	movlw	70
  5258  01005A  6F99               	movwf	(_V+146)& (0+255),b	;volatile
  5259                           
  5260                           ;main.c: 227:  } else {
  5261  01005C  D004               	goto	l17693
  5262  01005E                     l1459:
  5263  01005E  90BD               	bcf	189,0,c	;volatile
  5264                           
  5265                           ;main.c: 229:   V.mode_pwm = 0;
  5266  010060  0102               	movlb	2	; () banked
  5267  010062  6B99               	clrf	(_V+146)& (0+255),b	;volatile
  5268  010064  6B9A               	clrf	(_V+147)& (0+255),b	;volatile
  5269  010066                     l17693:
  5270                           
  5271                           ; BSR set to: 2
  5272                           ;main.c: 231:  mode_lamp_dim(V.mode_pwm);
  5273  010066  0060  FA67  FFE6   	movff	_V+146,postinc1
  5274  01006C  0060  FA6B  FFE6   	movff	_V+147,postinc1
  5275  010072  EC15  F017         	call	_mode_lamp_dim	;wreg free
  5276  010076  EF66  F084         	goto	l17851
  5277  01007A                     l17695:
  5278                           
  5279                           ; BSR set to: 2
  5280                           ;main.c: 239:    init_port_dma();
  5281  01007A  ECF3  F013         	call	_init_port_dma	;wreg free
  5282                           
  5283                           ; BSR set to: 59
  5284                           ;main.c: 241:    init_display();
  5285  01007E  EC41  F003         	call	_init_display	;wreg free
  5286                           
  5287                           ; BSR set to: 61
  5288                           ;main.c: 242:    eaDogM_WriteCommand(0b00001100);
  5289  010082  0E0C               	movlw	12
  5290  010084  6EE6               	movwf	postinc1,c
  5291  010086  EC9D  F017         	call	_eaDogM_WriteCommand	;wreg free
  5292                           
  5293                           ; BSR set to: 0
  5294                           ;main.c: 243:    set_dac();
  5295  01008A  EC63  F006         	call	_set_dac	;wreg free
  5296                           
  5297                           ;main.c: 247:    set_load_relay_one(1);
  5298  01008E  0E01               	movlw	1
  5299  010090  6EE6               	movwf	postinc1,c
  5300  010092  EC7D  F017         	call	_set_load_relay_one	;wreg free
  5301                           
  5302                           ;main.c: 248:    set_load_relay_two(1);
  5303  010096  0E01               	movlw	1
  5304  010098  6EE6               	movwf	postinc1,c
  5305  01009A  EC75  F017         	call	_set_load_relay_two	;wreg free
  5306                           
  5307                           ;main.c: 250:    V.ui_state = mode;
  5308                           ;stkvar	_mode @ sp[(-17)+15]
  5309  01009E  0EFE               	movlw	-2
  5310  0100A0  006F FF8C  F207    	movff	plusw1,_V	;volatile
  5311                           
  5312                           ;main.c: 251:    srand(1957);
  5313  0100A6  0EA5               	movlw	165
  5314  0100A8  6EE6               	movwf	postinc1,c
  5315  0100AA  0E07               	movlw	7
  5316  0100AC  6EE6               	movwf	postinc1,c
  5317  0100AE  EC72  F013         	call	_srand	;wreg free
  5318                           
  5319                           ; BSR set to: 2
  5320                           ;main.c: 252:    set_vterm(0);
  5321  0100B2  0E00               	movlw	0
  5322  0100B4  6EE6               	movwf	postinc1,c
  5323  0100B6  ECDC  F016         	call	_set_vterm	;wreg free
  5324                           
  5325                           ;main.c: 253:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  5326  0100BA  0EF5               	movlw	low STR_1
  5327  0100BC  6EE6               	movwf	postinc1,c
  5328  0100BE  0EFE               	movlw	high STR_1
  5329  0100C0  6EE6               	movwf	postinc1,c
  5330  0100C2  0E00               	movlw	0
  5331  0100C4  6EE6               	movwf	postinc1,c
  5332  0100C6  0E00               	movlw	0
  5333  0100C8  6EE6               	movwf	postinc1,c
  5334  0100CA  EC53  F014         	call	_get_vterm_ptr	;wreg free
  5335  0100CE  0060  F0AB  FFE6   	movff	btemp,postinc1
  5336  0100D4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5337  0100DA  0E04               	movlw	4
  5338  0100DC  6EE6               	movwf	postinc1,c
  5339  0100DE  EC5B  F000         	call	_sprintf	;wreg free
  5340                           
  5341                           ; BSR set to: 0
  5342                           ;main.c: 254:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.25");
  5343  0100E2  0ED5               	movlw	low STR_3
  5344  0100E4  6EE6               	movwf	postinc1,c
  5345  0100E6  0EFF               	movlw	high STR_3
  5346  0100E8  6EE6               	movwf	postinc1,c
  5347  0100EA  0ECB               	movlw	low STR_2
  5348  0100EC  6EE6               	movwf	postinc1,c
  5349  0100EE  0EFE               	movlw	high STR_2
  5350  0100F0  6EE6               	movwf	postinc1,c
  5351  0100F2  0E00               	movlw	0
  5352  0100F4  6EE6               	movwf	postinc1,c
  5353  0100F6  0E01               	movlw	1
  5354  0100F8  6EE6               	movwf	postinc1,c
  5355  0100FA  EC53  F014         	call	_get_vterm_ptr	;wreg free
  5356  0100FE  0060  F0AB  FFE6   	movff	btemp,postinc1
  5357  010104  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5358  01010A  0E06               	movlw	6
  5359  01010C  6EE6               	movwf	postinc1,c
  5360  01010E  EC5B  F000         	call	_sprintf	;wreg free
  5361                           
  5362                           ; BSR set to: 0
  5363                           ;main.c: 255:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  5364  010112  0EA1               	movlw	low STR_4
  5365  010114  6EE6               	movwf	postinc1,c
  5366  010116  0EFE               	movlw	high STR_4
  5367  010118  6EE6               	movwf	postinc1,c
  5368  01011A  0E00               	movlw	0
  5369  01011C  6EE6               	movwf	postinc1,c
  5370  01011E  0E02               	movlw	2
  5371  010120  6EE6               	movwf	postinc1,c
  5372  010122  EC53  F014         	call	_get_vterm_ptr	;wreg free
  5373  010126  0060  F0AB  FFE6   	movff	btemp,postinc1
  5374  01012C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5375  010132  0E04               	movlw	4
  5376  010134  6EE6               	movwf	postinc1,c
  5377  010136  EC5B  F000         	call	_sprintf	;wreg free
  5378                           
  5379                           ; BSR set to: 0
  5380                           ;main.c: 256:    sprintf(get_vterm_ptr(3, 0), "                    ");
  5381  01013A  0E25               	movlw	low (STR_16+2)
  5382  01013C  6EE6               	movwf	postinc1,c
  5383  01013E  0EFB               	movlw	high (STR_16+2)
  5384  010140  6EE6               	movwf	postinc1,c
  5385  010142  0E00               	movlw	0
  5386  010144  6EE6               	movwf	postinc1,c
  5387  010146  0E03               	movlw	3
  5388  010148  6EE6               	movwf	postinc1,c
  5389  01014A  EC53  F014         	call	_get_vterm_ptr	;wreg free
  5390  01014E  0060  F0AB  FFE6   	movff	btemp,postinc1
  5391  010154  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5392  01015A  0E04               	movlw	4
  5393  01015C  6EE6               	movwf	postinc1,c
  5394  01015E  EC5B  F000         	call	_sprintf	;wreg free
  5395                           
  5396                           ; BSR set to: 0
  5397                           ;main.c: 257:    sprintf(get_vterm_ptr(0, 2), "                    ");
  5398  010162  0E25               	movlw	low (STR_16+2)
  5399  010164  6EE6               	movwf	postinc1,c
  5400  010166  0EFB               	movlw	high (STR_16+2)
  5401  010168  6EE6               	movwf	postinc1,c
  5402  01016A  0E02               	movlw	2
  5403  01016C  6EE6               	movwf	postinc1,c
  5404  01016E  0E00               	movlw	0
  5405  010170  6EE6               	movwf	postinc1,c
  5406  010172  EC53  F014         	call	_get_vterm_ptr	;wreg free
  5407  010176  0060  F0AB  FFE6   	movff	btemp,postinc1
  5408  01017C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5409  010182  0E04               	movlw	4
  5410  010184  6EE6               	movwf	postinc1,c
  5411  010186  EC5B  F000         	call	_sprintf	;wreg free
  5412                           
  5413                           ; BSR set to: 0
  5414                           ;main.c: 258:    sprintf(get_vterm_ptr(1, 2), "                    ");
  5415  01018A  0E25               	movlw	low (STR_16+2)
  5416  01018C  6EE6               	movwf	postinc1,c
  5417  01018E  0EFB               	movlw	high (STR_16+2)
  5418  010190  6EE6               	movwf	postinc1,c
  5419  010192  0E02               	movlw	2
  5420  010194  6EE6               	movwf	postinc1,c
  5421  010196  0E01               	movlw	1
  5422  010198  6EE6               	movwf	postinc1,c
  5423  01019A  EC53  F014         	call	_get_vterm_ptr	;wreg free
  5424  01019E  0060  F0AB  FFE6   	movff	btemp,postinc1
  5425  0101A4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5426  0101AA  0E04               	movlw	4
  5427  0101AC  6EE6               	movwf	postinc1,c
  5428  0101AE  EC5B  F000         	call	_sprintf	;wreg free
  5429                           
  5430                           ; BSR set to: 0
  5431                           ;main.c: 259:    sprintf(get_vterm_ptr(2, 2), "                    ");
  5432  0101B2  0E25               	movlw	low (STR_16+2)
  5433  0101B4  6EE6               	movwf	postinc1,c
  5434  0101B6  0EFB               	movlw	high (STR_16+2)
  5435  0101B8  6EE6               	movwf	postinc1,c
  5436  0101BA  0E02               	movlw	2
  5437  0101BC  6EE6               	movwf	postinc1,c
  5438  0101BE  0E02               	movlw	2
  5439  0101C0  6EE6               	movwf	postinc1,c
  5440  0101C2  EC53  F014         	call	_get_vterm_ptr	;wreg free
  5441  0101C6  0060  F0AB  FFE6   	movff	btemp,postinc1
  5442  0101CC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5443  0101D2  0E04               	movlw	4
  5444  0101D4  6EE6               	movwf	postinc1,c
  5445  0101D6  EC5B  F000         	call	_sprintf	;wreg free
  5446                           
  5447                           ; BSR set to: 0
  5448                           ;main.c: 260:    sprintf(get_vterm_ptr(3, 2), "                    ");
  5449  0101DA  0E25               	movlw	low (STR_16+2)
  5450  0101DC  6EE6               	movwf	postinc1,c
  5451  0101DE  0EFB               	movlw	high (STR_16+2)
  5452  0101E0  6EE6               	movwf	postinc1,c
  5453  0101E2  0E02               	movlw	2
  5454  0101E4  6EE6               	movwf	postinc1,c
  5455  0101E6  0E03               	movlw	3
  5456  0101E8  6EE6               	movwf	postinc1,c
  5457  0101EA  EC53  F014         	call	_get_vterm_ptr	;wreg free
  5458  0101EE  0060  F0AB  FFE6   	movff	btemp,postinc1
  5459  0101F4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5460  0101FA  0E04               	movlw	4
  5461  0101FC  6EE6               	movwf	postinc1,c
  5462  0101FE  EC5B  F000         	call	_sprintf	;wreg free
  5463                           
  5464                           ; BSR set to: 0
  5465                           ;main.c: 261:    update_lcd(0);
  5466  010202  0E00               	movlw	0
  5467  010204  6EE6               	movwf	postinc1,c
  5468  010206  EC4B  F0F8         	call	_update_lcd	;wreg free
  5469                           
  5470                           ;main.c: 262:    WaitMs(1000);
  5471  01020A  0EE8               	movlw	232
  5472  01020C  6EE6               	movwf	postinc1,c
  5473  01020E  0E03               	movlw	3
  5474  010210  6EE6               	movwf	postinc1,c
  5475  010212  EC57  F013         	call	_WaitMs	;wreg free
  5476                           
  5477                           ;main.c: 263:    StartTimer(TMR_DISPLAY, 250);
  5478  010216  0EFA               	movlw	250
  5479  010218  6EE6               	movwf	postinc1,c
  5480  01021A  0E00               	movlw	0
  5481  01021C  6EE6               	movwf	postinc1,c
  5482  01021E  0E0A               	movlw	10
  5483  010220  6EE6               	movwf	postinc1,c
  5484  010222  EC49  F012         	call	_StartTimer	;wreg free
  5485                           
  5486                           ;main.c: 264:    StartTimer(TMR_ADC, 200);
  5487  010226  0EC8               	movlw	200
  5488  010228  6EE6               	movwf	postinc1,c
  5489  01022A  0E00               	movlw	0
  5490  01022C  6EE6               	movwf	postinc1,c
  5491  01022E  0E01               	movlw	1
  5492  010230  6EE6               	movwf	postinc1,c
  5493  010232  EC49  F012         	call	_StartTimer	;wreg free
  5494                           
  5495                           ;main.c: 265:    StartTimer(TMR_INFO, 3000);
  5496  010236  0EB8               	movlw	184
  5497  010238  6EE6               	movwf	postinc1,c
  5498  01023A  0E0B               	movlw	11
  5499  01023C  6EE6               	movwf	postinc1,c
  5500  01023E  0E07               	movlw	7
  5501  010240  6EE6               	movwf	postinc1,c
  5502  010242  EC49  F012         	call	_StartTimer	;wreg free
  5503                           
  5504                           ;main.c: 266:    StartTimer(TMR_FLIPPER, 1500);
  5505  010246  0EDC               	movlw	220
  5506  010248  6EE6               	movwf	postinc1,c
  5507  01024A  0E05               	movlw	5
  5508  01024C  6EE6               	movwf	postinc1,c
  5509  01024E  0E0B               	movlw	11
  5510  010250  6EE6               	movwf	postinc1,c
  5511  010252  EC49  F012         	call	_StartTimer	;wreg free
  5512                           
  5513                           ;main.c: 267:    StartTimer(TMR_HELPDIS, 3000);
  5514  010256  0EB8               	movlw	184
  5515  010258  6EE6               	movwf	postinc1,c
  5516  01025A  0E0B               	movlw	11
  5517  01025C  6EE6               	movwf	postinc1,c
  5518  01025E  0E09               	movlw	9
  5519  010260  6EE6               	movwf	postinc1,c
  5520  010262  EC49  F012         	call	_StartTimer	;wreg free
  5521                           
  5522                           ;main.c: 269:    start_adc_scan();
  5523  010266  EC61  F00E         	call	_start_adc_scan	;wreg free
  5524                           
  5525                           ;main.c: 270:    start_switch_handler();
  5526  01026A  EC9E  F016         	call	_start_switch_handler	;wreg free
  5527                           
  5528                           ; BSR set to: 57
  5529                           ;main.c: 271:    WaitMs(1000);
  5530  01026E  0EE8               	movlw	232
  5531  010270  6EE6               	movwf	postinc1,c
  5532  010272  0E03               	movlw	3
  5533  010274  6EE6               	movwf	postinc1,c
  5534  010276  EC57  F013         	call	_WaitMs	;wreg free
  5535                           
  5536                           ;main.c: 276:    if (read_cal_data()) {
  5537  01027A  EC51  F0EE         	call	_read_cal_data	;wreg free
  5538  01027E  502A               	movf	btemp^0,w,c
  5539  010280  B4D8               	btfsc	status,2,c
  5540  010282  D07C               	goto	l17761
  5541                           
  5542                           ;main.c: 277:     update_cal_data();
  5543  010284  ECDB  F00F         	call	_update_cal_data	;wreg free
  5544                           
  5545                           ; BSR set to: 1
  5546                           ;main.c: 278:     if (update_hist_data(1, &C.hist[0]) && (C.hist[0].pclock > time(((void
      +                          *)0))))
  5547  010288  0EB8               	movlw	low (_C+185)
  5548  01028A  6EE6               	movwf	postinc1,c
  5549  01028C  0E09               	movlw	high (_C+185)
  5550  01028E  6EE6               	movwf	postinc1,c
  5551  010290  0E01               	movlw	1
  5552  010292  6EE6               	movwf	postinc1,c
  5553  010294  EC05  F00C         	call	_update_hist_data	;wreg free
  5554  010298  502A               	movf	btemp^0,w,c
  5555  01029A  B4D8               	btfsc	status,2,c
  5556  01029C  D05A               	goto	l17759
  5557  01029E  0E00               	movlw	0
  5558  0102A0  6EE6               	movwf	postinc1,c
  5559  0102A2  0E00               	movlw	0
  5560  0102A4  6EE6               	movwf	postinc1,c
  5561  0102A6  EC25  F00F         	call	_time	;wreg free
  5562  0102AA  52E5               	movf	postdec1,f,c
  5563  0102AC  006F FF9C  F041    	movff	indf1,btemp+23
  5564  0102B2  52E5               	movf	postdec1,f,c
  5565  0102B4  006F FF9C  F040    	movff	indf1,btemp+22
  5566  0102BA  52E5               	movf	postdec1,f,c
  5567  0102BC  006F FF9C  F03F    	movff	indf1,btemp+21
  5568  0102C2  52E5               	movf	postdec1,f,c
  5569  0102C4  006F FF9C  F03E    	movff	indf1,btemp+20
  5570  0102CA  52E5               	movf	postdec1,f,c
  5571  0102CC  006F FF9C  F03D    	movff	indf1,btemp+19
  5572  0102D2  52E5               	movf	postdec1,f,c
  5573  0102D4  006F FF9C  F03C    	movff	indf1,btemp+18
  5574  0102DA  52E5               	movf	postdec1,f,c
  5575  0102DC  006F FF9C  F03B    	movff	indf1,btemp+17
  5576  0102E2  52E5               	movf	postdec1,f,c
  5577  0102E4  006F FF9C  F03A    	movff	indf1,btemp+16
  5578  0102EA  EE22  F1B9         	lfsr	2,_C+186	;volatile
  5579  0102EE  50DE               	movf	postinc2,w,c
  5580  0102F0  5C3A               	subwf	(btemp+16)^0,w,c
  5581  0102F2  50DE               	movf	postinc2,w,c
  5582  0102F4  583B               	subwfb	(btemp+17)^0,w,c
  5583  0102F6  50DE               	movf	postinc2,w,c
  5584  0102F8  583C               	subwfb	(btemp+18)^0,w,c
  5585  0102FA  50DE               	movf	postinc2,w,c
  5586  0102FC  583D               	subwfb	(btemp+19)^0,w,c
  5587  0102FE  50DE               	movf	postinc2,w,c
  5588  010300  583E               	subwfb	(btemp+20)^0,w,c
  5589  010302  50DE               	movf	postinc2,w,c
  5590  010304  583F               	subwfb	(btemp+21)^0,w,c
  5591  010306  50DE               	movf	postinc2,w,c
  5592  010308  5840               	subwfb	(btemp+22)^0,w,c
  5593  01030A  5041               	movf	(btemp+23)^0,w,c
  5594  01030C  0A80               	xorlw	128
  5595  01030E  6E2A               	movwf	btemp^0,c
  5596  010310  50DE               	movf	postinc2,w,c
  5597  010312  0A80               	xorlw	128
  5598  010314  582A               	subwfb	btemp^0,w,c
  5599  010316  B0D8               	btfsc	status,0,c
  5600  010318  D01C               	goto	l17759
  5601                           
  5602                           ; BSR set to: 57
  5603                           ;main.c: 279:      set_time(C.hist[0].pclock);
  5604  01031A  EE22  F1B9         	lfsr	2,_C+186	;volatile
  5605  01031E  006F FF7B FFE6     	movff	postinc2,postinc1
  5606  010324  006F FF7B FFE6     	movff	postinc2,postinc1
  5607  01032A  006F FF7B FFE6     	movff	postinc2,postinc1
  5608  010330  006F FF7B FFE6     	movff	postinc2,postinc1
  5609  010336  006F FF7B FFE6     	movff	postinc2,postinc1
  5610  01033C  006F FF7B FFE6     	movff	postinc2,postinc1
  5611  010342  006F FF7B FFE6     	movff	postinc2,postinc1
  5612  010348  006F FF7B FFE6     	movff	postinc2,postinc1
  5613  01034E  EC3C  F013         	call	_set_time	;wreg free
  5614  010352                     l17759:
  5615                           
  5616                           ;main.c: 281:     sprintf(get_vterm_ptr(2, 0), "Read EEPROM DATA    ");
  5617  010352  0E1F               	movlw	low STR_10
  5618  010354  6EE6               	movwf	postinc1,c
  5619  010356  0EFF               	movlw	high STR_10
  5620  010358  6EE6               	movwf	postinc1,c
  5621  01035A  0E00               	movlw	0
  5622  01035C  6EE6               	movwf	postinc1,c
  5623  01035E  0E02               	movlw	2
  5624  010360  6EE6               	movwf	postinc1,c
  5625  010362  EC53  F014         	call	_get_vterm_ptr	;wreg free
  5626  010366  0060  F0AB  FFE6   	movff	btemp,postinc1
  5627  01036C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5628  010372  0E04               	movlw	4
  5629  010374  6EE6               	movwf	postinc1,c
  5630  010376  EC5B  F000         	call	_sprintf	;wreg free
  5631                           
  5632                           ;main.c: 282:    } else {
  5633  01037A  D014               	goto	l1466
  5634  01037C                     l17761:
  5635                           
  5636                           ;main.c: 283:     sprintf(get_vterm_ptr(2, 0), "Invalid EEPROM DATA ");
  5637  01037C  0E49               	movlw	low STR_11
  5638  01037E  6EE6               	movwf	postinc1,c
  5639  010380  0EFF               	movlw	high STR_11
  5640  010382  6EE6               	movwf	postinc1,c
  5641  010384  0E00               	movlw	0
  5642  010386  6EE6               	movwf	postinc1,c
  5643  010388  0E02               	movlw	2
  5644  01038A  6EE6               	movwf	postinc1,c
  5645  01038C  EC53  F014         	call	_get_vterm_ptr	;wreg free
  5646  010390  0060  F0AB  FFE6   	movff	btemp,postinc1
  5647  010396  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5648  01039C  0E04               	movlw	4
  5649  01039E  6EE6               	movwf	postinc1,c
  5650  0103A0  EC5B  F000         	call	_sprintf	;wreg free
  5651  0103A4                     l1466:
  5652                           
  5653                           ; BSR set to: 0
  5654                           ;main.c: 285:    update_lcd(0);
  5655  0103A4  0E00               	movlw	0
  5656  0103A6  6EE6               	movwf	postinc1,c
  5657  0103A8  EC4B  F0F8         	call	_update_lcd	;wreg free
  5658                           
  5659                           ;main.c: 286:    WaitMs(2000);
  5660  0103AC  0ED0               	movlw	208
  5661  0103AE  6EE6               	movwf	postinc1,c
  5662  0103B0  0E07               	movlw	7
  5663  0103B2  6EE6               	movwf	postinc1,c
  5664  0103B4  EC57  F013         	call	_WaitMs	;wreg free
  5665                           
  5666                           ;main.c: 288:    i_ror = 1;
  5667                           ;stkvar	_i_ror @ sp[(-17)+16]
  5668  0103B8  0EFF               	movlw	-1
  5669  0103BA  6AE3               	clrf	plusw1,c
  5670  0103BC  2AE3               	incf	plusw1,f,c
  5671  0103BE                     l17767:
  5672                           
  5673                           ;main.c: 290:     calc_ror_data();
  5674  0103BE  EC41  F0F3         	call	_calc_ror_data	;wreg free
  5675                           
  5676                           ;main.c: 291:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f             ", conv_raw_result(
      +                          V_BAT, CONV));
  5677  0103C2  0E00               	movlw	0
  5678  0103C4  6EE6               	movwf	postinc1,c
  5679  0103C6  0E04               	movlw	4
  5680  0103C8  6EE6               	movwf	postinc1,c
  5681  0103CA  EC00  F0C9         	call	_conv_raw_result	;wreg free
  5682  0103CE  0060  F0AB  FFE6   	movff	btemp,postinc1
  5683  0103D4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5684  0103DA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  5685  0103E0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  5686  0103E6  0EEB               	movlw	low STR_12
  5687  0103E8  6EE6               	movwf	postinc1,c
  5688  0103EA  0EFC               	movlw	high STR_12
  5689  0103EC  6EE6               	movwf	postinc1,c
  5690  0103EE  0E00               	movlw	0
  5691  0103F0  6EE6               	movwf	postinc1,c
  5692  0103F2  0E01               	movlw	1
  5693  0103F4  6EE6               	movwf	postinc1,c
  5694  0103F6  EC53  F014         	call	_get_vterm_ptr	;wreg free
  5695  0103FA  0060  F0AB  FFE6   	movff	btemp,postinc1
  5696  010400  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5697  010406  0E08               	movlw	8
  5698  010408  6EE6               	movwf	postinc1,c
  5699  01040A  EC5B  F000         	call	_sprintf	;wreg free
  5700                           
  5701                           ; BSR set to: 0
  5702                           ;main.c: 292:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  5703  01040E  EE22  F16B         	lfsr	2,_C+108	;volatile
  5704  010412  006F FF7B FFE6     	movff	postinc2,postinc1
  5705  010418  006F FF7B FFE6     	movff	postinc2,postinc1
  5706  01041E  006F FF7B FFE6     	movff	postinc2,postinc1
  5707  010424  006F FF7B FFE6     	movff	postinc2,postinc1
  5708                           
  5709                           ;stkvar	_i_ror @ sp[(-21)+16]
  5710  01042A  0EFB               	movlw	-5
  5711  01042C  50E3               	movf	plusw1,w,c
  5712  01042E  6EE6               	movwf	postinc1,c
  5713  010430  0E00               	movlw	0
  5714  010432  6EE6               	movwf	postinc1,c
  5715  010434  0E00               	movlw	0
  5716  010436  6EE6               	movwf	postinc1,c
  5717  010438  0E05               	movlw	5
  5718  01043A  6EE6               	movwf	postinc1,c
  5719  01043C  ECD7  F001         	call	_spinners	;wreg free
  5720  010440  502A               	movf	btemp^0,w,c
  5721  010442  6EE6               	movwf	postinc1,c
  5722  010444  0E00               	movlw	0
  5723  010446  6EE6               	movwf	postinc1,c
  5724  010448  0E91               	movlw	low STR_13
  5725  01044A  6EE6               	movwf	postinc1,c
  5726  01044C  0EFA               	movlw	high STR_13
  5727  01044E  6EE6               	movwf	postinc1,c
  5728  010450  0E00               	movlw	0
  5729  010452  6EE6               	movwf	postinc1,c
  5730  010454  0E02               	movlw	2
  5731  010456  6EE6               	movwf	postinc1,c
  5732  010458  EC53  F014         	call	_get_vterm_ptr	;wreg free
  5733  01045C  0060  F0AB  FFE6   	movff	btemp,postinc1
  5734  010462  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5735  010468  0E0C               	movlw	12
  5736  01046A  6EE6               	movwf	postinc1,c
  5737  01046C  EC5B  F000         	call	_sprintf	;wreg free
  5738                           
  5739                           ; BSR set to: 0
  5740                           ;main.c: 293:     update_lcd(0);
  5741  010470  0E00               	movlw	0
  5742  010472  6EE6               	movwf	postinc1,c
  5743  010474  EC4B  F0F8         	call	_update_lcd	;wreg free
  5744                           
  5745                           ;main.c: 294:     clear_adc_scan();
  5746  010478  ECF7  F017         	call	_clear_adc_scan	;wreg free
  5747                           
  5748                           ; BSR set to: 1
  5749                           ;main.c: 295:     start_adc_scan();
  5750  01047C  EC61  F00E         	call	_start_adc_scan	;wreg free
  5751                           
  5752                           ;main.c: 296:     WaitMs(2000);
  5753  010480  0ED0               	movlw	208
  5754  010482  6EE6               	movwf	postinc1,c
  5755  010484  0E07               	movlw	7
  5756  010486  6EE6               	movwf	postinc1,c
  5757  010488  EC57  F013         	call	_WaitMs	;wreg free
  5758                           
  5759                           ;main.c: 299:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  5760                           ;stkvar	_i_ror @ sp[(-17)+16]
  5761  01048C  0EFF               	movlw	-1
  5762  01048E  006F FF8C  F035    	movff	plusw1,btemp+11
  5763  010494  2A35               	incf	(btemp+11)^0,f,c
  5764  010496  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  5765  01049C  0635               	decf	(btemp+11)^0,f,c
  5766  01049E  0E1E               	movlw	30
  5767  0104A0  6035               	cpfslt	(btemp+11)^0,c
  5768  0104A2  D01A               	goto	u17310
  5769  0104A4  EE22  F16B         	lfsr	2,_C+108	;volatile
  5770  0104A8  006F FF7B FFE6     	movff	postinc2,postinc1
  5771  0104AE  006F FF7B FFE6     	movff	postinc2,postinc1
  5772  0104B4  006F FF7B FFE6     	movff	postinc2,postinc1
  5773  0104BA  006F FF7B FFE6     	movff	postinc2,postinc1
  5774  0104C0  0E42               	movlw	66
  5775  0104C2  6EE6               	movwf	postinc1,c
  5776  0104C4  0E60               	movlw	96
  5777  0104C6  6EE6               	movwf	postinc1,c
  5778  0104C8  0E65               	movlw	101
  5779  0104CA  6EE6               	movwf	postinc1,c
  5780  0104CC  0E3C               	movlw	60
  5781  0104CE  6EE6               	movwf	postinc1,c
  5782  0104D0  ECE9  F0F6         	call	___flge	;wreg free
  5783  0104D4  A02A               	btfss	btemp& (0+255),0,c
  5784  0104D6  D773               	goto	l17767
  5785  0104D8                     u17310:
  5786                           
  5787                           ;main.c: 301:    static_soc();
  5788  0104D8  EC54  F00F         	call	_static_soc	;wreg free
  5789                           
  5790                           ;main.c: 302:    init_bsoc();
  5791  0104DC  ECAB  F0E5         	call	_init_bsoc	;wreg free
  5792                           
  5793                           ;main.c: 303:    set_load_relay_one(0);
  5794  0104E0  0E00               	movlw	0
  5795  0104E2  6EE6               	movwf	postinc1,c
  5796  0104E4  EC7D  F017         	call	_set_load_relay_one	;wreg free
  5797                           
  5798                           ;main.c: 304:    set_load_relay_two(0);
  5799  0104E8  0E00               	movlw	0
  5800  0104EA  6EE6               	movwf	postinc1,c
  5801  0104EC  EC75  F017         	call	_set_load_relay_two	;wreg free
  5802                           
  5803                           ;main.c: 305:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d         ", C.soc);
  5804  0104F0  EE22  F1B5         	lfsr	2,_C+182	;volatile
  5805  0104F4  006F FF78  F034    	movff	postinc2,btemp+10
  5806  0104FA  006F FF74  F035    	movff	postdec2,btemp+11
  5807  010500  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  5808  010506  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  5809  01050C  0E51               	movlw	low STR_14
  5810  01050E  6EE6               	movwf	postinc1,c
  5811  010510  0EFB               	movlw	high STR_14
  5812  010512  6EE6               	movwf	postinc1,c
  5813  010514  0E00               	movlw	0
  5814  010516  6EE6               	movwf	postinc1,c
  5815  010518  0E00               	movlw	0
  5816  01051A  6EE6               	movwf	postinc1,c
  5817  01051C  EC53  F014         	call	_get_vterm_ptr	;wreg free
  5818  010520  0060  F0AB  FFE6   	movff	btemp,postinc1
  5819  010526  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5820  01052C  0E06               	movlw	6
  5821  01052E  6EE6               	movwf	postinc1,c
  5822  010530  EC5B  F000         	call	_sprintf	;wreg free
  5823                           
  5824                           ; BSR set to: 0
  5825                           ;main.c: 306:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f      ", C.dynamic_ah);
  5826  010534  EE22  F18F         	lfsr	2,_C+144	;volatile
  5827  010538  006F FF7B FFE6     	movff	postinc2,postinc1
  5828  01053E  006F FF7B FFE6     	movff	postinc2,postinc1
  5829  010544  006F FF7B FFE6     	movff	postinc2,postinc1
  5830  01054A  006F FF7B FFE6     	movff	postinc2,postinc1
  5831  010550  0E37               	movlw	low STR_15
  5832  010552  6EE6               	movwf	postinc1,c
  5833  010554  0EFC               	movlw	high STR_15
  5834  010556  6EE6               	movwf	postinc1,c
  5835  010558  0E00               	movlw	0
  5836  01055A  6EE6               	movwf	postinc1,c
  5837  01055C  0E01               	movlw	1
  5838  01055E  6EE6               	movwf	postinc1,c
  5839  010560  EC53  F014         	call	_get_vterm_ptr	;wreg free
  5840  010564  0060  F0AB  FFE6   	movff	btemp,postinc1
  5841  01056A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5842  010570  0E08               	movlw	8
  5843  010572  6EE6               	movwf	postinc1,c
  5844  010574  EC5B  F000         	call	_sprintf	;wreg free
  5845                           
  5846                           ; BSR set to: 0
  5847                           ;main.c: 307:    sprintf(get_vterm_ptr(2, 0), "                      ");
  5848  010578  0E23               	movlw	low STR_16
  5849  01057A  6EE6               	movwf	postinc1,c
  5850  01057C  0EFB               	movlw	high STR_16
  5851  01057E  6EE6               	movwf	postinc1,c
  5852  010580  0E00               	movlw	0
  5853  010582  6EE6               	movwf	postinc1,c
  5854  010584  0E02               	movlw	2
  5855  010586  6EE6               	movwf	postinc1,c
  5856  010588  EC53  F014         	call	_get_vterm_ptr	;wreg free
  5857  01058C  0060  F0AB  FFE6   	movff	btemp,postinc1
  5858  010592  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5859  010598  0E04               	movlw	4
  5860  01059A  6EE6               	movwf	postinc1,c
  5861  01059C  EC5B  F000         	call	_sprintf	;wreg free
  5862                           
  5863                           ; BSR set to: 0
  5864                           ;main.c: 308:    update_lcd(0);
  5865  0105A0  0E00               	movlw	0
  5866  0105A2  6EE6               	movwf	postinc1,c
  5867  0105A4  EC4B  F0F8         	call	_update_lcd	;wreg free
  5868                           
  5869                           ;main.c: 309:    WaitMs(2000);
  5870  0105A8  0ED0               	movlw	208
  5871  0105AA  6EE6               	movwf	postinc1,c
  5872  0105AC  0E07               	movlw	7
  5873  0105AE  6EE6               	movwf	postinc1,c
  5874  0105B0  EC57  F013         	call	_WaitMs	;wreg free
  5875                           
  5876                           ;main.c: 310:    sprintf(get_vterm_ptr(0, 0), "Battery ESR          ");
  5877  0105B4  0E17               	movlw	low STR_17
  5878  0105B6  6EE6               	movwf	postinc1,c
  5879  0105B8  0EFD               	movlw	high STR_17
  5880  0105BA  6EE6               	movwf	postinc1,c
  5881  0105BC  0E00               	movlw	0
  5882  0105BE  6EE6               	movwf	postinc1,c
  5883  0105C0  0E00               	movlw	0
  5884  0105C2  6EE6               	movwf	postinc1,c
  5885  0105C4  EC53  F014         	call	_get_vterm_ptr	;wreg free
  5886  0105C8  0060  F0AB  FFE6   	movff	btemp,postinc1
  5887  0105CE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5888  0105D4  0E04               	movlw	4
  5889  0105D6  6EE6               	movwf	postinc1,c
  5890  0105D8  EC5B  F000         	call	_sprintf	;wreg free
  5891                           
  5892                           ; BSR set to: 0
  5893                           ;main.c: 311:    sprintf(get_vterm_ptr(1, 0), "Calculation          ");
  5894  0105DC  0E2D               	movlw	low STR_18
  5895  0105DE  6EE6               	movwf	postinc1,c
  5896  0105E0  0EFD               	movlw	high STR_18
  5897  0105E2  6EE6               	movwf	postinc1,c
  5898  0105E4  0E00               	movlw	0
  5899  0105E6  6EE6               	movwf	postinc1,c
  5900  0105E8  0E01               	movlw	1
  5901  0105EA  6EE6               	movwf	postinc1,c
  5902  0105EC  EC53  F014         	call	_get_vterm_ptr	;wreg free
  5903  0105F0  0060  F0AB  FFE6   	movff	btemp,postinc1
  5904  0105F6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5905  0105FC  0E04               	movlw	4
  5906  0105FE  6EE6               	movwf	postinc1,c
  5907  010600  EC5B  F000         	call	_sprintf	;wreg free
  5908                           
  5909                           ; BSR set to: 0
  5910                           ;main.c: 312:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds     ");
  5911  010604  0E09               	movlw	low STR_19
  5912  010606  6EE6               	movwf	postinc1,c
  5913  010608  0EFE               	movlw	high STR_19
  5914  01060A  6EE6               	movwf	postinc1,c
  5915  01060C  0E00               	movlw	0
  5916  01060E  6EE6               	movwf	postinc1,c
  5917  010610  0E02               	movlw	2
  5918  010612  6EE6               	movwf	postinc1,c
  5919  010614  EC53  F014         	call	_get_vterm_ptr	;wreg free
  5920  010618  0060  F0AB  FFE6   	movff	btemp,postinc1
  5921  01061E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5922  010624  0E04               	movlw	4
  5923  010626  6EE6               	movwf	postinc1,c
  5924  010628  EC5B  F000         	call	_sprintf	;wreg free
  5925                           
  5926                           ; BSR set to: 0
  5927                           ;main.c: 313:    update_lcd(0);
  5928  01062C  0E00               	movlw	0
  5929  01062E  6EE6               	movwf	postinc1,c
  5930  010630  EC4B  F0F8         	call	_update_lcd	;wreg free
  5931                           
  5932                           ;main.c: 314:    uint16_t i_esr = 1;
  5933  010634  0E01               	movlw	1
  5934  010636  6E34               	movwf	(btemp+10)^0,c
  5935  010638  0E00               	movlw	0
  5936  01063A  6E35               	movwf	(btemp+11)^0,c
  5937                           
  5938                           ;stkvar	_i_esr @ sp[(-17)+8]
  5939  01063C  0EF7               	movlw	-9
  5940  01063E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  5941  010644  0EF8               	movlw	-8
  5942  010646  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  5943                           
  5944                           ;main.c: 316:    float esr_temp;;main.c: 317:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  5945  01064C  D06D               	goto	l17827
  5946  01064E                     l17815:
  5947                           
  5948                           ;main.c: 318:     WaitMs(110);
  5949  01064E  0E6E               	movlw	110
  5950  010650  6EE6               	movwf	postinc1,c
  5951  010652  0E00               	movlw	0
  5952  010654  6EE6               	movwf	postinc1,c
  5953  010656  EC57  F013         	call	_WaitMs	;wreg free
  5954                           
  5955                           ;main.c: 319:     shape = (uint8_t) fabsf(esr_temp);
  5956                           ;stkvar	_esr_temp @ sp[(-17)+4]
  5957  01065A  0EF3               	movlw	-13
  5958  01065C  006F FF8F FFE6     	movff	plusw1,postinc1
  5959  010662  006F FF8F FFE6     	movff	plusw1,postinc1
  5960  010668  006F FF8F FFE6     	movff	plusw1,postinc1
  5961  01066E  006F FF8F FFE6     	movff	plusw1,postinc1
  5962  010674  ECBE  F006         	call	_fabsf	;wreg free
  5963  010678  0060  F0AB  FFE6   	movff	btemp,postinc1
  5964  01067E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5965  010684  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  5966  01068A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  5967  010690  EC7D  F0F5         	call	___fltol	;wreg free
  5968  010694  0060  F0A8  F035   	movff	btemp,btemp+11
  5969                           
  5970                           ;stkvar	_shape @ sp[(-17)+10]
  5971  01069A  0EF9               	movlw	-7
  5972  01069C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  5973                           
  5974                           ;main.c: 320:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c       ", spinners(0, 0), 
      +                          spinners(shape, 0));
  5975  0106A2  0E00               	movlw	0
  5976  0106A4  6EE6               	movwf	postinc1,c
  5977                           
  5978                           ;stkvar	_shape @ sp[(-18)+10]
  5979  0106A6  0EF8               	movlw	-8
  5980  0106A8  50E3               	movf	plusw1,w,c
  5981  0106AA  6EE6               	movwf	postinc1,c
  5982  0106AC  ECD7  F001         	call	_spinners	;wreg free
  5983  0106B0  502A               	movf	btemp^0,w,c
  5984  0106B2  6EE6               	movwf	postinc1,c
  5985  0106B4  0E00               	movlw	0
  5986  0106B6  6EE6               	movwf	postinc1,c
  5987  0106B8  0E00               	movlw	0
  5988  0106BA  6EE6               	movwf	postinc1,c
  5989  0106BC  0E00               	movlw	0
  5990  0106BE  6EE6               	movwf	postinc1,c
  5991  0106C0  ECD7  F001         	call	_spinners	;wreg free
  5992  0106C4  502A               	movf	btemp^0,w,c
  5993  0106C6  6EE6               	movwf	postinc1,c
  5994  0106C8  0E00               	movlw	0
  5995  0106CA  6EE6               	movwf	postinc1,c
  5996  0106CC  0EB1               	movlw	low STR_20
  5997  0106CE  6EE6               	movwf	postinc1,c
  5998  0106D0  0EFD               	movlw	high STR_20
  5999  0106D2  6EE6               	movwf	postinc1,c
  6000  0106D4  0E00               	movlw	0
  6001  0106D6  6EE6               	movwf	postinc1,c
  6002  0106D8  0E02               	movlw	2
  6003  0106DA  6EE6               	movwf	postinc1,c
  6004  0106DC  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6005  0106E0  0060  F0AB  FFE6   	movff	btemp,postinc1
  6006  0106E6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6007  0106EC  0E08               	movlw	8
  6008  0106EE  6EE6               	movwf	postinc1,c
  6009  0106F0  EC5B  F000         	call	_sprintf	;wreg free
  6010                           
  6011                           ; BSR set to: 0
  6012                           ;main.c: 321:     update_lcd(0);
  6013  0106F4  0E00               	movlw	0
  6014  0106F6  6EE6               	movwf	postinc1,c
  6015  0106F8  EC4B  F0F8         	call	_update_lcd	;wreg free
  6016                           
  6017                           ;main.c: 323:     if (i_esr++ > 512)
  6018                           ;stkvar	_i_esr @ sp[(-17)+8]
  6019  0106FC  50E1               	movf	fsr1l,w,c
  6020  0106FE  0FF7               	addlw	-9
  6021  010700  6ED9               	movwf	fsr2l,c
  6022  010702  50E2               	movf	fsr1h,w,c
  6023  010704  6EDA               	movwf	fsr2h,c
  6024  010706  0EFF               	movlw	255
  6025  010708  22DA               	addwfc	fsr2h,f,c
  6026  01070A  006F FF7C  F034    	movff	indf2,btemp+10
  6027  010710  0E01               	movlw	1
  6028  010712  26DE               	addwf	postinc2,f,c
  6029  010714  006F FF7C  F035    	movff	indf2,btemp+11
  6030  01071A  0E00               	movlw	0
  6031  01071C  22DD               	addwfc	postdec2,f,c
  6032  01071E  0434               	decf	(btemp+10)^0,w,c
  6033  010720  0E02               	movlw	2
  6034  010722  5835               	subwfb	(btemp+11)^0,w,c
  6035  010724  B0D8               	btfsc	status,0,c
  6036  010726  D017               	goto	u17330
  6037  010728                     l17827:
  6038                           
  6039                           ;main.c: 317:    while ((esr_temp = esr_check(0)) < 0.0) {
  6040  010728  0E00               	movlw	0
  6041  01072A  6EE6               	movwf	postinc1,c
  6042  01072C  ECB9  F0DC         	call	_esr_check	;wreg free
  6043                           
  6044                           ;stkvar	_esr_temp @ sp[(-17)+4]
  6045  010730  0EF3               	movlw	-13
  6046  010732  0060  F0AB  FFE3   	movff	btemp,plusw1
  6047  010738  0EF4               	movlw	-12
  6048  01073A  0060  F0AF  FFE3   	movff	btemp+1,plusw1
  6049  010740  0EF5               	movlw	-11
  6050  010742  0060  F0B3  FFE3   	movff	btemp+2,plusw1
  6051  010748  0EF6               	movlw	-10
  6052  01074A  0060  F0B7  FFE3   	movff	btemp+3,plusw1
  6053  010750  0EF6               	movlw	-10
  6054  010752  BEE3               	btfsc	plusw1,7,c
  6055  010754  D77C               	goto	l17815
  6056  010756                     u17330:
  6057                           
  6058                           ;main.c: 326:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f            ", C.esr);
  6059  010756  EE22  F187         	lfsr	2,_C+136	;volatile
  6060  01075A  006F FF7B FFE6     	movff	postinc2,postinc1
  6061  010760  006F FF7B FFE6     	movff	postinc2,postinc1
  6062  010766  006F FF7B FFE6     	movff	postinc2,postinc1
  6063  01076C  006F FF7B FFE6     	movff	postinc2,postinc1
  6064  010772  0E3A               	movlw	low STR_21
  6065  010774  6EE6               	movwf	postinc1,c
  6066  010776  0EFB               	movlw	high STR_21
  6067  010778  6EE6               	movwf	postinc1,c
  6068  01077A  0E00               	movlw	0
  6069  01077C  6EE6               	movwf	postinc1,c
  6070  01077E  0E00               	movlw	0
  6071  010780  6EE6               	movwf	postinc1,c
  6072  010782  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6073  010786  0060  F0AB  FFE6   	movff	btemp,postinc1
  6074  01078C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6075  010792  0E08               	movlw	8
  6076  010794  6EE6               	movwf	postinc1,c
  6077  010796  EC5B  F000         	call	_sprintf	;wreg free
  6078                           
  6079                           ;main.c: 327:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f            ", C.bv_one_loa
      +                          d, C.load_i1);
  6080  01079A  EE22  F219         	lfsr	2,_C+282	;volatile
  6081  01079E  006F FF7B FFE6     	movff	postinc2,postinc1
  6082  0107A4  006F FF7B FFE6     	movff	postinc2,postinc1
  6083  0107AA  006F FF7B FFE6     	movff	postinc2,postinc1
  6084  0107B0  006F FF7B FFE6     	movff	postinc2,postinc1
  6085  0107B6  EE22  F225         	lfsr	2,_C+294	;volatile
  6086  0107BA  006F FF7B FFE6     	movff	postinc2,postinc1
  6087  0107C0  006F FF7B FFE6     	movff	postinc2,postinc1
  6088  0107C6  006F FF7B FFE6     	movff	postinc2,postinc1
  6089  0107CC  006F FF7B FFE6     	movff	postinc2,postinc1
  6090  0107D2  0E41               	movlw	low STR_22
  6091  0107D4  6EE6               	movwf	postinc1,c
  6092  0107D6  0EFA               	movlw	high STR_22
  6093  0107D8  6EE6               	movwf	postinc1,c
  6094  0107DA  0E00               	movlw	0
  6095  0107DC  6EE6               	movwf	postinc1,c
  6096  0107DE  0E01               	movlw	1
  6097  0107E0  6EE6               	movwf	postinc1,c
  6098  0107E2  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6099  0107E6  0060  F0AB  FFE6   	movff	btemp,postinc1
  6100  0107EC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6101  0107F2  0E0C               	movlw	12
  6102  0107F4  6EE6               	movwf	postinc1,c
  6103  0107F6  EC5B  F000         	call	_sprintf	;wreg free
  6104                           
  6105                           ;main.c: 328:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f            ", C.bv_full_lo
      +                          ad, C.load_i2);
  6106  0107FA  EE22  F21D         	lfsr	2,_C+286	;volatile
  6107  0107FE  006F FF7B FFE6     	movff	postinc2,postinc1
  6108  010804  006F FF7B FFE6     	movff	postinc2,postinc1
  6109  01080A  006F FF7B FFE6     	movff	postinc2,postinc1
  6110  010810  006F FF7B FFE6     	movff	postinc2,postinc1
  6111  010816  EE22  F229         	lfsr	2,_C+298	;volatile
  6112  01081A  006F FF7B FFE6     	movff	postinc2,postinc1
  6113  010820  006F FF7B FFE6     	movff	postinc2,postinc1
  6114  010826  006F FF7B FFE6     	movff	postinc2,postinc1
  6115  01082C  006F FF7B FFE6     	movff	postinc2,postinc1
  6116  010832  0E5C               	movlw	low STR_23
  6117  010834  6EE6               	movwf	postinc1,c
  6118  010836  0EFA               	movlw	high STR_23
  6119  010838  6EE6               	movwf	postinc1,c
  6120  01083A  0E00               	movlw	0
  6121  01083C  6EE6               	movwf	postinc1,c
  6122  01083E  0E02               	movlw	2
  6123  010840  6EE6               	movwf	postinc1,c
  6124  010842  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6125  010846  0060  F0AB  FFE6   	movff	btemp,postinc1
  6126  01084C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6127  010852  0E0C               	movlw	12
  6128  010854  6EE6               	movwf	postinc1,c
  6129  010856  EC5B  F000         	call	_sprintf	;wreg free
  6130                           
  6131                           ;main.c: 329:    update_lcd(0);
  6132  01085A  0E00               	movlw	0
  6133  01085C  6EE6               	movwf	postinc1,c
  6134  01085E  EC4B  F0F8         	call	_update_lcd	;wreg free
  6135                           
  6136                           ;main.c: 330:    WaitMs(4000);
  6137  010862  0EA0               	movlw	160
  6138  010864  6EE6               	movwf	postinc1,c
  6139  010866  0E0F               	movlw	15
  6140  010868  6EE6               	movwf	postinc1,c
  6141  01086A  EC57  F013         	call	_WaitMs	;wreg free
  6142                           
  6143                           ;main.c: 331:    V.sensor_set = get_switch(SCALIB);
  6144  01086E  0E04               	movlw	4
  6145  010870  6EE6               	movwf	postinc1,c
  6146  010872  EC6A  F014         	call	_get_switch	;wreg free
  6147  010876  502A               	movf	btemp^0,w,c
  6148  010878  B4D8               	btfsc	status,2,c
  6149  01087A  D002               	goto	u17340
  6150  01087C  0E01               	movlw	1
  6151  01087E  D001               	goto	u17350
  6152  010880                     u17340:
  6153  010880  0E00               	movlw	0
  6154  010882                     u17350:
  6155  010882  0102               	movlb	2	; () banked
  6156  010884  6FB2               	movwf	(_V+171)& (0+255),b	;volatile
  6157                           
  6158                           ; BSR set to: 2
  6159                           ;main.c: 332:    WaitMs(1000);
  6160  010886  0EE8               	movlw	232
  6161  010888  6EE6               	movwf	postinc1,c
  6162  01088A  0E03               	movlw	3
  6163  01088C  6EE6               	movwf	postinc1,c
  6164  01088E  EC57  F013         	call	_WaitMs	;wreg free
  6165                           
  6166                           ;main.c: 333:    if (V.sensor_set && get_switch(SCALIB)) {
  6167  010892  0102               	movlb	2	; () banked
  6168  010894  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  6169  010896  B4D8               	btfsc	status,2,c
  6170  010898  D00F               	goto	l17845
  6171                           
  6172                           ; BSR set to: 2
  6173  01089A  0E04               	movlw	4
  6174  01089C  6EE6               	movwf	postinc1,c
  6175  01089E  EC6A  F014         	call	_get_switch	;wreg free
  6176  0108A2  502A               	movf	btemp^0,w,c
  6177  0108A4  B4D8               	btfsc	status,2,c
  6178  0108A6  D008               	goto	l17845
  6179                           
  6180                           ;main.c: 334:     current_sensor_cal();
  6181  0108A8  EC4C  F0A4         	call	_current_sensor_cal	;wreg free
  6182                           
  6183                           ;main.c: 335:     WaitMs(4000);
  6184  0108AC  0EA0               	movlw	160
  6185  0108AE  6EE6               	movwf	postinc1,c
  6186  0108B0  0E0F               	movlw	15
  6187  0108B2  6EE6               	movwf	postinc1,c
  6188  0108B4  EC57  F013         	call	_WaitMs	;wreg free
  6189  0108B8                     l17845:
  6190                           
  6191                           ;main.c: 337:    V.sensor_set = 0;
  6192  0108B8  0102               	movlb	2	; () banked
  6193  0108BA  6BB2               	clrf	(_V+171)& (0+255),b	;volatile
  6194                           
  6195                           ; BSR set to: 2
  6196                           ;main.c: 338:    V.system_stable = 1;
  6197  0108BC  0E01               	movlw	1
  6198  0108BE  6FB3               	movwf	(_V+172)& (0+255),b	;volatile
  6199                           
  6200                           ;main.c: 339:    break;
  6201  0108C0  D01D               	goto	l17853
  6202  0108C2                     l1479:
  6203                           
  6204                           ; BSR set to: 2
  6205                           ;main.c: 345:    P.SYSTEM_STABLE = 1;
  6206  0108C2  0100               	movlb	0	; () banked
  6207  0108C4  8195               	bsf	(_P+1)& (0+255),0,b	;volatile
  6208                           
  6209                           ;main.c: 346:    break;
  6210  0108C6  D01A               	goto	l17853
  6211  0108C8                     l1481:
  6212                           
  6213                           ; BSR set to: 2
  6214                           ;main.c: 349:    V.ui_state = UI_STATE_INIT;
  6215  0108C8  6B07               	clrf	_V& (0+255),b	;volatile
  6216                           
  6217                           ;main.c: 350:    break;
  6218  0108CA  D018               	goto	l17853
  6219  0108CC                     l17851:
  6220  0108CC  0102               	movlb	2	; () banked
  6221  0108CE  5107               	movf	_V& (0+255),w,b	;volatile
  6222  0108D0  6E34               	movwf	(btemp+10)^0,c
  6223  0108D2  6A35               	clrf	(btemp+11)^0,c
  6224                           
  6225                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6226                           ; Switch size 1, requested type "simple"
  6227                           ; Number of cases is 1, Range of values is 0 to 0
  6228                           ; switch strategies available:
  6229                           ; Name         Instructions Cycles
  6230                           ; simple_byte            4     3 (average)
  6231                           ;	Chosen strategy is simple_byte
  6232  0108D4  5035               	movf	(btemp+11)^0,w,c
  6233  0108D6  0A00               	xorlw	0	; case 0
  6234  0108D8  A4D8               	btfss	status,2,c
  6235  0108DA  D7F6               	goto	l1481
  6236                           
  6237                           ; BSR set to: 2
  6238                           ; Switch size 1, requested type "simple"
  6239                           ; Number of cases is 5, Range of values is 0 to 5
  6240                           ; switch strategies available:
  6241                           ; Name         Instructions Cycles
  6242                           ; simple_byte           16     9 (average)
  6243                           ;	Chosen strategy is simple_byte
  6244  0108DC  5034               	movf	(btemp+10)^0,w,c
  6245  0108DE  0A00               	xorlw	0	; case 0
  6246  0108E0  B4D8               	btfsc	status,2,c
  6247  0108E2  EF3D  F080         	goto	l17695
  6248  0108E6  0A01               	xorlw	1	; case 1
  6249  0108E8  B4D8               	btfsc	status,2,c
  6250  0108EA  D008               	goto	l17853
  6251  0108EC  0A02               	xorlw	2	; case 3
  6252  0108EE  B4D8               	btfsc	status,2,c
  6253  0108F0  D005               	goto	l17853
  6254  0108F2  0A07               	xorlw	7	; case 4
  6255  0108F4  B4D8               	btfsc	status,2,c
  6256  0108F6  D7E5               	goto	l1479
  6257  0108F8  0A01               	xorlw	1	; case 5
  6258  0108FA  D7E6               	goto	l1481
  6259  0108FC                     l17853:
  6260                           
  6261                           ;main.c: 353:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  6262  0108FC  0E01               	movlw	1
  6263  0108FE  6EE6               	movwf	postinc1,c
  6264  010900  ECD5  F014         	call	_TimerDone	;wreg free
  6265  010904  502A               	movf	btemp^0,w,c
  6266  010906  B4D8               	btfsc	status,2,c
  6267  010908  D013               	goto	l17865
  6268  01090A  ECDD  F017         	call	_check_adc_scan	;wreg free
  6269  01090E  502A               	movf	btemp^0,w,c
  6270  010910  B4D8               	btfsc	status,2,c
  6271  010912  D00E               	goto	l17865
  6272                           
  6273                           ;main.c: 357:    convert_adc_data();
  6274  010914  EC07  F006         	call	_convert_adc_data	;wreg free
  6275                           
  6276                           ;main.c: 361:    clear_adc_scan();
  6277  010918  ECF7  F017         	call	_clear_adc_scan	;wreg free
  6278                           
  6279                           ; BSR set to: 1
  6280                           ;main.c: 362:    start_adc_scan();
  6281  01091C  EC61  F00E         	call	_start_adc_scan	;wreg free
  6282                           
  6283                           ;main.c: 363:    StartTimer(TMR_ADC, 200);
  6284  010920  0EC8               	movlw	200
  6285  010922  6EE6               	movwf	postinc1,c
  6286  010924  0E00               	movlw	0
  6287  010926  6EE6               	movwf	postinc1,c
  6288  010928  0E01               	movlw	1
  6289  01092A  6EE6               	movwf	postinc1,c
  6290  01092C  EC49  F012         	call	_StartTimer	;wreg free
  6291  010930                     l17865:
  6292                           
  6293                           ;main.c: 366:   if (TimerDone(TMR_DISPLAY)) {
  6294  010930  0E0A               	movlw	10
  6295  010932  6EE6               	movwf	postinc1,c
  6296  010934  ECD5  F014         	call	_TimerDone	;wreg free
  6297  010938  502A               	movf	btemp^0,w,c
  6298  01093A  B4D8               	btfsc	status,2,c
  6299  01093C  EF60  F08A         	goto	l17975
  6300                           
  6301                           ;main.c: 367:    if (TimerDone(TMR_HELPDIS)) {
  6302  010940  0E09               	movlw	9
  6303  010942  6EE6               	movwf	postinc1,c
  6304  010944  ECD5  F014         	call	_TimerDone	;wreg free
  6305  010948  502A               	movf	btemp^0,w,c
  6306  01094A  B4D8               	btfsc	status,2,c
  6307  01094C  D004               	goto	l17871
  6308                           
  6309                           ;main.c: 368:     set_display_info(DIS_STR);
  6310  01094E  0E00               	movlw	0
  6311  010950  6EE6               	movwf	postinc1,c
  6312  010952  ECEB  F016         	call	_set_display_info	;wreg free
  6313  010956                     l17871:
  6314                           
  6315                           ;main.c: 370:    pclock = time(((void*)0));
  6316  010956  0E00               	movlw	0
  6317  010958  6EE6               	movwf	postinc1,c
  6318  01095A  0E00               	movlw	0
  6319  01095C  6EE6               	movwf	postinc1,c
  6320  01095E  EC25  F00F         	call	_time	;wreg free
  6321  010962  52E5               	movf	postdec1,f,c
  6322  010964  006F FF9C  F041    	movff	indf1,btemp+23
  6323  01096A  52E5               	movf	postdec1,f,c
  6324  01096C  006F FF9C  F040    	movff	indf1,btemp+22
  6325  010972  52E5               	movf	postdec1,f,c
  6326  010974  006F FF9C  F03F    	movff	indf1,btemp+21
  6327  01097A  52E5               	movf	postdec1,f,c
  6328  01097C  006F FF9C  F03E    	movff	indf1,btemp+20
  6329  010982  52E5               	movf	postdec1,f,c
  6330  010984  006F FF9C  F03D    	movff	indf1,btemp+19
  6331  01098A  52E5               	movf	postdec1,f,c
  6332  01098C  006F FF9C  F03C    	movff	indf1,btemp+18
  6333  010992  52E5               	movf	postdec1,f,c
  6334  010994  006F FF9C  F03B    	movff	indf1,btemp+17
  6335  01099A  52E5               	movf	postdec1,f,c
  6336  01099C  006F FF9C  F03A    	movff	indf1,btemp+16
  6337  0109A2  0060  F0E8  F0DA   	movff	btemp+16,_pclock
  6338  0109A8  0060  F0EC  F0DB   	movff	btemp+17,_pclock+1
  6339  0109AE  0060  F0F0  F0DC   	movff	btemp+18,_pclock+2
  6340  0109B4  0060  F0F4  F0DD   	movff	btemp+19,_pclock+3
  6341  0109BA  0060  F0F8  F0DE   	movff	btemp+20,_pclock+4
  6342  0109C0  0060  F0FC  F0DF   	movff	btemp+21,_pclock+5
  6343  0109C6  0060  F100  F0E0   	movff	btemp+22,_pclock+6
  6344  0109CC  0060  F104  F0E1   	movff	btemp+23,_pclock+7
  6345                           
  6346                           ; BSR set to: 57
  6347                           ;main.c: 371:    t_mbmc = localtime(&pclock);
  6348  0109D2  0EDA               	movlw	_pclock& (0+255)
  6349  0109D4  6EE6               	movwf	postinc1,c
  6350  0109D6  EC2D  F017         	call	_localtime	;wreg free
  6351  0109DA  0060  F0A8  F0BC   	movff	btemp,_t_mbmc
  6352  0109E0  0060  F0AC  F0BD   	movff	btemp+1,_t_mbmc+1
  6353                           
  6354                           ;main.c: 372:    sprintf(get_vterm_ptr(3, 0), "%s           ", asctime(t_mbmc));
  6355  0109E6  0060  F2F3  FFE6   	movff	_t_mbmc,postinc1
  6356  0109EC  0060  F2F7  FFE6   	movff	_t_mbmc+1,postinc1
  6357  0109F2  EC75  F0C6         	call	_asctime	;wreg free
  6358  0109F6  0060  F0AB  FFE6   	movff	btemp,postinc1
  6359  0109FC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6360  010A02  0E63               	movlw	low (STR_85+5)
  6361  010A04  6EE6               	movwf	postinc1,c
  6362  010A06  0EFF               	movlw	high (STR_85+5)
  6363  010A08  6EE6               	movwf	postinc1,c
  6364  010A0A  0E00               	movlw	0
  6365  010A0C  6EE6               	movwf	postinc1,c
  6366  010A0E  0E03               	movlw	3
  6367  010A10  6EE6               	movwf	postinc1,c
  6368  010A12  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6369  010A16  0060  F0AB  FFE6   	movff	btemp,postinc1
  6370  010A1C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6371  010A22  0E06               	movlw	6
  6372  010A24  6EE6               	movwf	postinc1,c
  6373  010A26  EC5B  F000         	call	_sprintf	;wreg free
  6374                           
  6375                           ; BSR set to: 0
  6376                           ;main.c: 373:    calc_model_data();
  6377  010A2A  EC9E  F0CD         	call	_calc_model_data	;wreg free
  6378                           
  6379                           ; BSR set to: 57
  6380                           ;main.c: 374:    if (C.dupdate) {
  6381  010A2E  EE22  F22E         	lfsr	2,_C+303	;volatile
  6382  010A32  50DF               	movf	indf2,w,c
  6383  010A34  B4D8               	btfsc	status,2,c
  6384  010A36  D0A4               	goto	l17901
  6385                           
  6386                           ; BSR set to: 57
  6387                           ;main.c: 375:     C.dupdate = 0;
  6388  010A38  0E00               	movlw	0
  6389  010A3A  006F FFA0  FA2E    	movff	wreg,_C+303	;volatile
  6390                           
  6391                           ;main.c: 376:     set_hist_flag();
  6392  010A40  ECF1  F017         	call	_set_hist_flag	;wreg free
  6393                           
  6394                           ; BSR set to: 1
  6395                           ;main.c: 377:     load_hist_data();
  6396  010A44  EC7E  F0E4         	call	_load_hist_data	;wreg free
  6397                           
  6398                           ; BSR set to: 57
  6399                           ;main.c: 378:     update_hist_data(0, &C.hist[0]);
  6400  010A48  0EB8               	movlw	low (_C+185)
  6401  010A4A  6EE6               	movwf	postinc1,c
  6402  010A4C  0E09               	movlw	high (_C+185)
  6403  010A4E  6EE6               	movwf	postinc1,c
  6404  010A50  0E00               	movlw	0
  6405  010A52  6EE6               	movwf	postinc1,c
  6406  010A54  EC05  F00C         	call	_update_hist_data	;wreg free
  6407                           
  6408                           ;main.c: 379:     write_cal_data();
  6409  010A58  ECA8  F0F9         	call	_write_cal_data	;wreg free
  6410                           
  6411                           ;main.c: 380:     sprintf(get_vterm_ptr(0, 0), "History Data  Saved  ");
  6412  010A5C  0E61               	movlw	low STR_25
  6413  010A5E  6EE6               	movwf	postinc1,c
  6414  010A60  0EFE               	movlw	high STR_25
  6415  010A62  6EE6               	movwf	postinc1,c
  6416  010A64  0E00               	movlw	0
  6417  010A66  6EE6               	movwf	postinc1,c
  6418  010A68  0E00               	movlw	0
  6419  010A6A  6EE6               	movwf	postinc1,c
  6420  010A6C  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6421  010A70  0060  F0AB  FFE6   	movff	btemp,postinc1
  6422  010A76  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6423  010A7C  0E04               	movlw	4
  6424  010A7E  6EE6               	movwf	postinc1,c
  6425  010A80  EC5B  F000         	call	_sprintf	;wreg free
  6426                           
  6427                           ; BSR set to: 0
  6428                           ;main.c: 381:     sprintf(get_vterm_ptr(1, 0), "To EEPROM            ");
  6429  010A84  0E01               	movlw	low STR_26
  6430  010A86  6EE6               	movwf	postinc1,c
  6431  010A88  0EFD               	movlw	high STR_26
  6432  010A8A  6EE6               	movwf	postinc1,c
  6433  010A8C  0E00               	movlw	0
  6434  010A8E  6EE6               	movwf	postinc1,c
  6435  010A90  0E01               	movlw	1
  6436  010A92  6EE6               	movwf	postinc1,c
  6437  010A94  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6438  010A98  0060  F0AB  FFE6   	movff	btemp,postinc1
  6439  010A9E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6440  010AA4  0E04               	movlw	4
  6441  010AA6  6EE6               	movwf	postinc1,c
  6442  010AA8  EC5B  F000         	call	_sprintf	;wreg free
  6443                           
  6444                           ; BSR set to: 0
  6445                           ;main.c: 382:     sprintf(get_vterm_ptr(2, 0), " Time %lu, %lu       ", time(((void*)0))
      +                          , C.hist[0].updates);
  6446  010AAC  EE22  F1D9         	lfsr	2,_C+218	;volatile
  6447  010AB0  006F FF7B FFE6     	movff	postinc2,postinc1
  6448  010AB6  006F FF7B FFE6     	movff	postinc2,postinc1
  6449  010ABC  006F FF7B FFE6     	movff	postinc2,postinc1
  6450  010AC2  006F FF7B FFE6     	movff	postinc2,postinc1
  6451  010AC8  0E00               	movlw	0
  6452  010ACA  6EE6               	movwf	postinc1,c
  6453  010ACC  0E00               	movlw	0
  6454  010ACE  6EE6               	movwf	postinc1,c
  6455  010AD0  EC25  F00F         	call	_time	;wreg free
  6456  010AD4  52E5               	movf	postdec1,f,c
  6457  010AD6  006F FF9C  F041    	movff	indf1,btemp+23
  6458  010ADC  52E5               	movf	postdec1,f,c
  6459  010ADE  006F FF9C  F040    	movff	indf1,btemp+22
  6460  010AE4  52E5               	movf	postdec1,f,c
  6461  010AE6  006F FF9C  F03F    	movff	indf1,btemp+21
  6462  010AEC  52E5               	movf	postdec1,f,c
  6463  010AEE  006F FF9C  F03E    	movff	indf1,btemp+20
  6464  010AF4  52E5               	movf	postdec1,f,c
  6465  010AF6  006F FF9C  F03D    	movff	indf1,btemp+19
  6466  010AFC  52E5               	movf	postdec1,f,c
  6467  010AFE  006F FF9C  F03C    	movff	indf1,btemp+18
  6468  010B04  52E5               	movf	postdec1,f,c
  6469  010B06  006F FF9C  F03B    	movff	indf1,btemp+17
  6470  010B0C  52E5               	movf	postdec1,f,c
  6471  010B0E  006F FF9C  F03A    	movff	indf1,btemp+16
  6472  010B14  0060  F0EB  FFE6   	movff	btemp+16,postinc1
  6473  010B1A  0060  F0EF  FFE6   	movff	btemp+17,postinc1
  6474  010B20  0060  F0F3  FFE6   	movff	btemp+18,postinc1
  6475  010B26  0060  F0F7  FFE6   	movff	btemp+19,postinc1
  6476  010B2C  0060  F0FB  FFE6   	movff	btemp+20,postinc1
  6477  010B32  0060  F0FF  FFE6   	movff	btemp+21,postinc1
  6478  010B38  0060  F103  FFE6   	movff	btemp+22,postinc1
  6479  010B3E  0060  F107  FFE6   	movff	btemp+23,postinc1
  6480  010B44  0EC7               	movlw	low STR_27
  6481  010B46  6EE6               	movwf	postinc1,c
  6482  010B48  0EFD               	movlw	high STR_27
  6483  010B4A  6EE6               	movwf	postinc1,c
  6484  010B4C  0E00               	movlw	0
  6485  010B4E  6EE6               	movwf	postinc1,c
  6486  010B50  0E02               	movlw	2
  6487  010B52  6EE6               	movwf	postinc1,c
  6488  010B54  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6489  010B58  0060  F0AB  FFE6   	movff	btemp,postinc1
  6490  010B5E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6491  010B64  0E10               	movlw	16
  6492  010B66  6EE6               	movwf	postinc1,c
  6493  010B68  EC5B  F000         	call	_sprintf	;wreg free
  6494                           
  6495                           ; BSR set to: 0
  6496                           ;main.c: 383:     update_lcd(0);
  6497  010B6C  0E00               	movlw	0
  6498  010B6E  6EE6               	movwf	postinc1,c
  6499  010B70  EC4B  F0F8         	call	_update_lcd	;wreg free
  6500                           
  6501                           ;main.c: 384:     WaitMs(2000);
  6502  010B74  0ED0               	movlw	208
  6503  010B76  6EE6               	movwf	postinc1,c
  6504  010B78  0E07               	movlw	7
  6505  010B7A  6EE6               	movwf	postinc1,c
  6506  010B7C  EC57  F013         	call	_WaitMs	;wreg free
  6507  010B80                     l17901:
  6508                           
  6509                           ;main.c: 392:     hid_display(&H);
  6510  010B80  0E9B               	movlw	low _H
  6511  010B82  6EE6               	movwf	postinc1,c
  6512  010B84  0E01               	movlw	high _H
  6513  010B86  6EE6               	movwf	postinc1,c
  6514  010B88  EC38  F0EB         	call	_hid_display	;wreg free
  6515                           
  6516                           ;main.c: 393:     switch (H.hid_display) {
  6517  010B8C  EFF1  F089         	goto	l17945
  6518  010B90                     l1489:
  6519                           
  6520                           ; BSR set to: 1
  6521                           ;main.c: 395:      V.calib = 0;
  6522  010B90  0102               	movlb	2	; () banked
  6523  010B92  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  6524                           
  6525                           ; BSR set to: 2
  6526                           ;main.c: 396:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f       ", (C.day) ? 'D' 
      +                          : ' ', C.p_pv);
  6527  010B94  EE22  F22D         	lfsr	2,_C+302	;volatile
  6528  010B98  50DF               	movf	indf2,w,c
  6529  010B9A  A4D8               	btfss	status,2,c
  6530  010B9C  D002               	goto	l17907
  6531                           
  6532                           ; BSR set to: 2
  6533  010B9E  0E20               	movlw	32
  6534  010BA0  D001               	goto	L1
  6535  010BA2                     l17907:
  6536                           
  6537                           ; BSR set to: 2
  6538  010BA2  0E44               	movlw	68
  6539  010BA4                     L1:
  6540  010BA4  6E34               	movwf	(btemp+10)^0,c
  6541  010BA6  0E00               	movlw	0
  6542  010BA8  6E35               	movwf	(btemp+11)^0,c
  6543                           
  6544                           ;stkvar	_main$4045 @ sp[(-17)+2]
  6545  010BAA  0EF1               	movlw	-15
  6546  010BAC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  6547  010BB2  0EF2               	movlw	-14
  6548  010BB4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  6549                           
  6550                           ; BSR set to: 2
  6551  010BBA  EE22  F17B         	lfsr	2,_C+124	;volatile
  6552  010BBE  006F FF7B FFE6     	movff	postinc2,postinc1
  6553  010BC4  006F FF7B FFE6     	movff	postinc2,postinc1
  6554  010BCA  006F FF7B FFE6     	movff	postinc2,postinc1
  6555  010BD0  006F FF7B FFE6     	movff	postinc2,postinc1
  6556                           
  6557                           ;stkvar	_main$4045 @ sp[(-21)+2]
  6558  010BD6  0EED               	movlw	-19
  6559  010BD8  006F FF8F FFE6     	movff	plusw1,postinc1
  6560  010BDE  006F FF8F FFE6     	movff	plusw1,postinc1
  6561  010BE4  0E20               	movlw	low STR_31
  6562  010BE6  6EE6               	movwf	postinc1,c
  6563  010BE8  0EFC               	movlw	high STR_31
  6564  010BEA  6EE6               	movwf	postinc1,c
  6565  010BEC  0E00               	movlw	0
  6566  010BEE  6EE6               	movwf	postinc1,c
  6567  010BF0  0E00               	movlw	0
  6568  010BF2  6EE6               	movwf	postinc1,c
  6569  010BF4  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6570  010BF8  0060  F0AB  FFE6   	movff	btemp,postinc1
  6571  010BFE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6572  010C04  0E0A               	movlw	10
  6573  010C06  6EE6               	movwf	postinc1,c
  6574  010C08  EC5B  F000         	call	_sprintf	;wreg free
  6575                           
  6576                           ; BSR set to: 0
  6577                           ;main.c: 397:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f        ", C.p_load);
  6578  010C0C  EE22  F173         	lfsr	2,_C+116	;volatile
  6579  010C10  006F FF7B FFE6     	movff	postinc2,postinc1
  6580  010C16  006F FF7B FFE6     	movff	postinc2,postinc1
  6581  010C1C  006F FF7B FFE6     	movff	postinc2,postinc1
  6582  010C22  006F FF7B FFE6     	movff	postinc2,postinc1
  6583  010C28  0E09               	movlw	low STR_32
  6584  010C2A  6EE6               	movwf	postinc1,c
  6585  010C2C  0EFC               	movlw	high STR_32
  6586  010C2E  6EE6               	movwf	postinc1,c
  6587  010C30  0E00               	movlw	0
  6588  010C32  6EE6               	movwf	postinc1,c
  6589  010C34  0E01               	movlw	1
  6590  010C36  6EE6               	movwf	postinc1,c
  6591  010C38  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6592  010C3C  0060  F0AB  FFE6   	movff	btemp,postinc1
  6593  010C42  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6594  010C48  0E08               	movlw	8
  6595  010C4A  6EE6               	movwf	postinc1,c
  6596  010C4C  EC5B  F000         	call	_sprintf	;wreg free
  6597                           
  6598                           ; BSR set to: 0
  6599                           ;main.c: 398:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f        ", C.p_inverter);
  6600  010C50  EE22  F177         	lfsr	2,_C+120	;volatile
  6601  010C54  006F FF7B FFE6     	movff	postinc2,postinc1
  6602  010C5A  006F FF7B FFE6     	movff	postinc2,postinc1
  6603  010C60  006F FF7B FFE6     	movff	postinc2,postinc1
  6604  010C66  006F FF7B FFE6     	movff	postinc2,postinc1
  6605  010C6C  0EF2               	movlw	low STR_33
  6606  010C6E  6EE6               	movwf	postinc1,c
  6607  010C70  0EFB               	movlw	high STR_33
  6608  010C72  6EE6               	movwf	postinc1,c
  6609  010C74  0E00               	movlw	0
  6610  010C76  6EE6               	movwf	postinc1,c
  6611  010C78  0E02               	movlw	2
  6612  010C7A  6EE6               	movwf	postinc1,c
  6613  010C7C  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6614  010C80  0060  F0AB  FFE6   	movff	btemp,postinc1
  6615  010C86  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6616  010C8C  0E08               	movlw	8
  6617  010C8E  6EE6               	movwf	postinc1,c
  6618  010C90  EC5B  F000         	call	_sprintf	;wreg free
  6619                           
  6620                           ; BSR set to: 0
  6621                           ;main.c: 400:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f        ", (C.day) ? 'D' 
      +                          : ' ', C.pvkw);
  6622  010C94  EE22  F22D         	lfsr	2,_C+302	;volatile
  6623  010C98  50DF               	movf	indf2,w,c
  6624  010C9A  A4D8               	btfss	status,2,c
  6625  010C9C  D002               	goto	l17919
  6626                           
  6627                           ; BSR set to: 0
  6628  010C9E  0E20               	movlw	32
  6629  010CA0  D001               	goto	L2
  6630  010CA2                     l17919:
  6631                           
  6632                           ; BSR set to: 0
  6633  010CA2  0E44               	movlw	68
  6634  010CA4                     L2:
  6635  010CA4  6E34               	movwf	(btemp+10)^0,c
  6636  010CA6  0E00               	movlw	0
  6637  010CA8  6E35               	movwf	(btemp+11)^0,c
  6638                           
  6639                           ;stkvar	_main$4049 @ sp[(-17)+0]
  6640  010CAA  0EEF               	movlw	-17
  6641  010CAC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  6642  010CB2  0EF0               	movlw	-16
  6643  010CB4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  6644                           
  6645                           ; BSR set to: 0
  6646  010CBA  EE22  F1A7         	lfsr	2,_C+168	;volatile
  6647  010CBE  006F FF7B FFE6     	movff	postinc2,postinc1
  6648  010CC4  006F FF7B FFE6     	movff	postinc2,postinc1
  6649  010CCA  006F FF7B FFE6     	movff	postinc2,postinc1
  6650  010CD0  006F FF7B FFE6     	movff	postinc2,postinc1
  6651                           
  6652                           ;stkvar	_main$4049 @ sp[(-21)+0]
  6653  010CD6  0EEB               	movlw	-21
  6654  010CD8  006F FF8F FFE6     	movff	plusw1,postinc1
  6655  010CDE  006F FF8F FFE6     	movff	plusw1,postinc1
  6656  010CE4  0EDB               	movlw	low STR_34
  6657  010CE6  6EE6               	movwf	postinc1,c
  6658  010CE8  0EFB               	movlw	high STR_34
  6659  010CEA  6EE6               	movwf	postinc1,c
  6660  010CEC  0E01               	movlw	1
  6661  010CEE  6EE6               	movwf	postinc1,c
  6662  010CF0  0E00               	movlw	0
  6663  010CF2  6EE6               	movwf	postinc1,c
  6664  010CF4  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6665  010CF8  0060  F0AB  FFE6   	movff	btemp,postinc1
  6666  010CFE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6667  010D04  0E0A               	movlw	10
  6668  010D06  6EE6               	movwf	postinc1,c
  6669  010D08  EC5B  F000         	call	_sprintf	;wreg free
  6670                           
  6671                           ; BSR set to: 0
  6672                           ;main.c: 401:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f         ", C.loadkw);
  6673  010D0C  EE22  F1AF         	lfsr	2,_C+176	;volatile
  6674  010D10  006F FF7B FFE6     	movff	postinc2,postinc1
  6675  010D16  006F FF7B FFE6     	movff	postinc2,postinc1
  6676  010D1C  006F FF7B FFE6     	movff	postinc2,postinc1
  6677  010D22  006F FF7B FFE6     	movff	postinc2,postinc1
  6678  010D28  0EC4               	movlw	low STR_35
  6679  010D2A  6EE6               	movwf	postinc1,c
  6680  010D2C  0EFB               	movlw	high STR_35
  6681  010D2E  6EE6               	movwf	postinc1,c
  6682  010D30  0E01               	movlw	1
  6683  010D32  6EE6               	movwf	postinc1,c
  6684  010D34  0E01               	movlw	1
  6685  010D36  6EE6               	movwf	postinc1,c
  6686  010D38  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6687  010D3C  0060  F0AB  FFE6   	movff	btemp,postinc1
  6688  010D42  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6689  010D48  0E08               	movlw	8
  6690  010D4A  6EE6               	movwf	postinc1,c
  6691  010D4C  EC5B  F000         	call	_sprintf	;wreg free
  6692                           
  6693                           ; BSR set to: 0
  6694                           ;main.c: 402:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f         ", C.invkw);
  6695  010D50  EE22  F1AB         	lfsr	2,_C+172	;volatile
  6696  010D54  006F FF7B FFE6     	movff	postinc2,postinc1
  6697  010D5A  006F FF7B FFE6     	movff	postinc2,postinc1
  6698  010D60  006F FF7B FFE6     	movff	postinc2,postinc1
  6699  010D66  006F FF7B FFE6     	movff	postinc2,postinc1
  6700  010D6C  0EAD               	movlw	low STR_36
  6701  010D6E  6EE6               	movwf	postinc1,c
  6702  010D70  0EFB               	movlw	high STR_36
  6703  010D72  6EE6               	movwf	postinc1,c
  6704  010D74  0E01               	movlw	1
  6705  010D76  6EE6               	movwf	postinc1,c
  6706  010D78  0E02               	movlw	2
  6707  010D7A  6EE6               	movwf	postinc1,c
  6708  010D7C  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6709  010D80  0060  F0AB  FFE6   	movff	btemp,postinc1
  6710  010D86  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6711  010D8C  0E08               	movlw	8
  6712  010D8E  6EE6               	movwf	postinc1,c
  6713  010D90  EC5B  F000         	call	_sprintf	;wreg free
  6714                           
  6715                           ;main.c: 403:      break;
  6716  010D94  D33C               	goto	l17947
  6717  010D96                     l1499:
  6718                           
  6719                           ; BSR set to: 1
  6720                           ;main.c: 405:      V.calib = 0;
  6721  010D96  0102               	movlb	2	; () banked
  6722  010D98  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  6723                           
  6724                           ; BSR set to: 2
  6725                           ;main.c: 406:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f     ", C.calc[V_PV], 
      +                          C.calc[C_PV]);
  6726  010D9A  EE22  F103         	lfsr	2,_C+4	;volatile
  6727  010D9E  006F FF7B FFE6     	movff	postinc2,postinc1
  6728  010DA4  006F FF7B FFE6     	movff	postinc2,postinc1
  6729  010DAA  006F FF7B FFE6     	movff	postinc2,postinc1
  6730  010DB0  006F FF7B FFE6     	movff	postinc2,postinc1
  6731  010DB6  EE22  F113         	lfsr	2,_C+20	;volatile
  6732  010DBA  006F FF7B FFE6     	movff	postinc2,postinc1
  6733  010DC0  006F FF7B FFE6     	movff	postinc2,postinc1
  6734  010DC6  006F FF7B FFE6     	movff	postinc2,postinc1
  6735  010DCC  006F FF7B FFE6     	movff	postinc2,postinc1
  6736  010DD2  0E7C               	movlw	low STR_37
  6737  010DD4  6EE6               	movwf	postinc1,c
  6738  010DD6  0EFC               	movlw	high STR_37
  6739  010DD8  6EE6               	movwf	postinc1,c
  6740  010DDA  0E00               	movlw	0
  6741  010DDC  6EE6               	movwf	postinc1,c
  6742  010DDE  0E00               	movlw	0
  6743  010DE0  6EE6               	movwf	postinc1,c
  6744  010DE2  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6745  010DE6  0060  F0AB  FFE6   	movff	btemp,postinc1
  6746  010DEC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6747  010DF2  0E0C               	movlw	12
  6748  010DF4  6EE6               	movwf	postinc1,c
  6749  010DF6  EC5B  F000         	call	_sprintf	;wreg free
  6750                           
  6751                           ;main.c: 407:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f     ", C.calc[V_BAT],
      +                           C.calc[C_BATT]);
  6752  010DFA  EE22  F0FF         	lfsr	2,_C
  6753  010DFE  006F FF7B FFE6     	movff	postinc2,postinc1
  6754  010E04  006F FF7B FFE6     	movff	postinc2,postinc1
  6755  010E0A  006F FF7B FFE6     	movff	postinc2,postinc1
  6756  010E10  006F FF7B FFE6     	movff	postinc2,postinc1
  6757  010E16  EE22  F10F         	lfsr	2,_C+16	;volatile
  6758  010E1A  006F FF7B FFE6     	movff	postinc2,postinc1
  6759  010E20  006F FF7B FFE6     	movff	postinc2,postinc1
  6760  010E26  006F FF7B FFE6     	movff	postinc2,postinc1
  6761  010E2C  006F FF7B FFE6     	movff	postinc2,postinc1
  6762  010E32  0E4E               	movlw	low STR_38
  6763  010E34  6EE6               	movwf	postinc1,c
  6764  010E36  0EFC               	movlw	high STR_38
  6765  010E38  6EE6               	movwf	postinc1,c
  6766  010E3A  0E00               	movlw	0
  6767  010E3C  6EE6               	movwf	postinc1,c
  6768  010E3E  0E01               	movlw	1
  6769  010E40  6EE6               	movwf	postinc1,c
  6770  010E42  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6771  010E46  0060  F0AB  FFE6   	movff	btemp,postinc1
  6772  010E4C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6773  010E52  0E0C               	movlw	12
  6774  010E54  6EE6               	movwf	postinc1,c
  6775  010E56  EC5B  F000         	call	_sprintf	;wreg free
  6776                           
  6777                           ;main.c: 408:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f     ", C.calc[V_CC], 
      +                          C.c_load);
  6778  010E5A  EE22  F13F         	lfsr	2,_C+64	;volatile
  6779  010E5E  006F FF7B FFE6     	movff	postinc2,postinc1
  6780  010E64  006F FF7B FFE6     	movff	postinc2,postinc1
  6781  010E6A  006F FF7B FFE6     	movff	postinc2,postinc1
  6782  010E70  006F FF7B FFE6     	movff	postinc2,postinc1
  6783  010E76  EE22  F107         	lfsr	2,_C+8	;volatile
  6784  010E7A  006F FF7B FFE6     	movff	postinc2,postinc1
  6785  010E80  006F FF7B FFE6     	movff	postinc2,postinc1
  6786  010E86  006F FF7B FFE6     	movff	postinc2,postinc1
  6787  010E8C  006F FF7B FFE6     	movff	postinc2,postinc1
  6788  010E92  0E65               	movlw	low STR_39
  6789  010E94  6EE6               	movwf	postinc1,c
  6790  010E96  0EFC               	movlw	high STR_39
  6791  010E98  6EE6               	movwf	postinc1,c
  6792  010E9A  0E00               	movlw	0
  6793  010E9C  6EE6               	movwf	postinc1,c
  6794  010E9E  0E02               	movlw	2
  6795  010EA0  6EE6               	movwf	postinc1,c
  6796  010EA2  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6797  010EA6  0060  F0AB  FFE6   	movff	btemp,postinc1
  6798  010EAC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6799  010EB2  0E0C               	movlw	12
  6800  010EB4  6EE6               	movwf	postinc1,c
  6801  010EB6  EC5B  F000         	call	_sprintf	;wreg free
  6802                           
  6803                           ;main.c: 410:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f         ", C.bkwi);
  6804  010EBA  EE22  F19F         	lfsr	2,_C+160	;volatile
  6805  010EBE  006F FF7B FFE6     	movff	postinc2,postinc1
  6806  010EC4  006F FF7B FFE6     	movff	postinc2,postinc1
  6807  010ECA  006F FF7B FFE6     	movff	postinc2,postinc1
  6808  010ED0  006F FF7B FFE6     	movff	postinc2,postinc1
  6809  010ED6  0E68               	movlw	low STR_40
  6810  010ED8  6EE6               	movwf	postinc1,c
  6811  010EDA  0EFB               	movlw	high STR_40
  6812  010EDC  6EE6               	movwf	postinc1,c
  6813  010EDE  0E01               	movlw	1
  6814  010EE0  6EE6               	movwf	postinc1,c
  6815  010EE2  0E00               	movlw	0
  6816  010EE4  6EE6               	movwf	postinc1,c
  6817  010EE6  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6818  010EEA  0060  F0AB  FFE6   	movff	btemp,postinc1
  6819  010EF0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6820  010EF6  0E08               	movlw	8
  6821  010EF8  6EE6               	movwf	postinc1,c
  6822  010EFA  EC5B  F000         	call	_sprintf	;wreg free
  6823                           
  6824                           ;main.c: 411:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f         ", C.bkwo);
  6825  010EFE  EE22  F1A3         	lfsr	2,_C+164	;volatile
  6826  010F02  006F FF7B FFE6     	movff	postinc2,postinc1
  6827  010F08  006F FF7B FFE6     	movff	postinc2,postinc1
  6828  010F0E  006F FF7B FFE6     	movff	postinc2,postinc1
  6829  010F14  006F FF7B FFE6     	movff	postinc2,postinc1
  6830  010F1A  0E7F               	movlw	low STR_41
  6831  010F1C  6EE6               	movwf	postinc1,c
  6832  010F1E  0EFB               	movlw	high STR_41
  6833  010F20  6EE6               	movwf	postinc1,c
  6834  010F22  0E01               	movlw	1
  6835  010F24  6EE6               	movwf	postinc1,c
  6836  010F26  0E01               	movlw	1
  6837  010F28  6EE6               	movwf	postinc1,c
  6838  010F2A  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6839  010F2E  0060  F0AB  FFE6   	movff	btemp,postinc1
  6840  010F34  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6841  010F3A  0E08               	movlw	8
  6842  010F3C  6EE6               	movwf	postinc1,c
  6843  010F3E  EC5B  F000         	call	_sprintf	;wreg free
  6844                           
  6845                           ;main.c: 412:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f         ", C.bkwi + C.bkw
      +                          o);
  6846  010F42  EE22  F1A3         	lfsr	2,_C+164	;volatile
  6847  010F46  006F FF7B FFE6     	movff	postinc2,postinc1
  6848  010F4C  006F FF7B FFE6     	movff	postinc2,postinc1
  6849  010F52  006F FF7B FFE6     	movff	postinc2,postinc1
  6850  010F58  006F FF7B FFE6     	movff	postinc2,postinc1
  6851  010F5E  EE22  F19F         	lfsr	2,_C+160	;volatile
  6852  010F62  006F FF7B FFE6     	movff	postinc2,postinc1
  6853  010F68  006F FF7B FFE6     	movff	postinc2,postinc1
  6854  010F6E  006F FF7B FFE6     	movff	postinc2,postinc1
  6855  010F74  006F FF7B FFE6     	movff	postinc2,postinc1
  6856  010F7A  EC7C  F0BC         	call	___fladd	;wreg free
  6857  010F7E  0060  F0AB  FFE6   	movff	btemp,postinc1
  6858  010F84  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6859  010F8A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  6860  010F90  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  6861  010F96  0E96               	movlw	low STR_42
  6862  010F98  6EE6               	movwf	postinc1,c
  6863  010F9A  0EFB               	movlw	high STR_42
  6864  010F9C  6EE6               	movwf	postinc1,c
  6865  010F9E  0E01               	movlw	1
  6866  010FA0  6EE6               	movwf	postinc1,c
  6867  010FA2  0E02               	movlw	2
  6868  010FA4  6EE6               	movwf	postinc1,c
  6869  010FA6  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6870  010FAA  0060  F0AB  FFE6   	movff	btemp,postinc1
  6871  010FB0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6872  010FB6  0E08               	movlw	8
  6873  010FB8  6EE6               	movwf	postinc1,c
  6874  010FBA  EC5B  F000         	call	_sprintf	;wreg free
  6875                           
  6876                           ;main.c: 413:      break;
  6877  010FBE  D227               	goto	l17947
  6878  010FC0                     l1500:
  6879                           
  6880                           ; BSR set to: 1
  6881                           ;main.c: 415:      V.calib = 0;
  6882  010FC0  0102               	movlb	2	; () banked
  6883  010FC2  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  6884                           
  6885                           ; BSR set to: 2
  6886                           ;main.c: 416:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f         ", C.p_bat);
  6887  010FC4  EE22  F17F         	lfsr	2,_C+128	;volatile
  6888  010FC8  006F FF7B FFE6     	movff	postinc2,postinc1
  6889  010FCE  006F FF7B FFE6     	movff	postinc2,postinc1
  6890  010FD4  006F FF7B FFE6     	movff	postinc2,postinc1
  6891  010FDA  006F FF7B FFE6     	movff	postinc2,postinc1
  6892  010FE0  0EC3               	movlw	low STR_43
  6893  010FE2  6EE6               	movwf	postinc1,c
  6894  010FE4  0EFA               	movlw	high STR_43
  6895  010FE6  6EE6               	movwf	postinc1,c
  6896  010FE8  0E00               	movlw	0
  6897  010FEA  6EE6               	movwf	postinc1,c
  6898  010FEC  0E00               	movlw	0
  6899  010FEE  6EE6               	movwf	postinc1,c
  6900  010FF0  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6901  010FF4  0060  F0AB  FFE6   	movff	btemp,postinc1
  6902  010FFA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6903  011000  0E08               	movlw	8
  6904  011002  6EE6               	movwf	postinc1,c
  6905  011004  EC5B  F000         	call	_sprintf	;wreg free
  6906                           
  6907                           ;main.c: 417:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f       ", C.dynamic_ah,
      +                           C.pv_ah);
  6908  011008  EE22  F193         	lfsr	2,_C+148	;volatile
  6909  01100C  006F FF7B FFE6     	movff	postinc2,postinc1
  6910  011012  006F FF7B FFE6     	movff	postinc2,postinc1
  6911  011018  006F FF7B FFE6     	movff	postinc2,postinc1
  6912  01101E  006F FF7B FFE6     	movff	postinc2,postinc1
  6913  011024  EE22  F18F         	lfsr	2,_C+144	;volatile
  6914  011028  006F FF7B FFE6     	movff	postinc2,postinc1
  6915  01102E  006F FF7B FFE6     	movff	postinc2,postinc1
  6916  011034  006F FF7B FFE6     	movff	postinc2,postinc1
  6917  01103A  006F FF7B FFE6     	movff	postinc2,postinc1
  6918  011040  0E0B               	movlw	low STR_44
  6919  011042  6EE6               	movwf	postinc1,c
  6920  011044  0EFB               	movlw	high STR_44
  6921  011046  6EE6               	movwf	postinc1,c
  6922  011048  0E00               	movlw	0
  6923  01104A  6EE6               	movwf	postinc1,c
  6924  01104C  0E01               	movlw	1
  6925  01104E  6EE6               	movwf	postinc1,c
  6926  011050  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6927  011054  0060  F0AB  FFE6   	movff	btemp,postinc1
  6928  01105A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6929  011060  0E0C               	movlw	12
  6930  011062  6EE6               	movwf	postinc1,c
  6931  011064  EC5B  F000         	call	_sprintf	;wreg free
  6932                           
  6933                           ;main.c: 418:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d V%2.2f        ", spinner
      +                          s(5, 0), C.soc, C.runtime, C.calc[V_BAT]);
  6934  011068  EE22  F10F         	lfsr	2,_C+16	;volatile
  6935  01106C  006F FF7B FFE6     	movff	postinc2,postinc1
  6936  011072  006F FF7B FFE6     	movff	postinc2,postinc1
  6937  011078  006F FF7B FFE6     	movff	postinc2,postinc1
  6938  01107E  006F FF7B FFE6     	movff	postinc2,postinc1
  6939  011084  EE22  F1B3         	lfsr	2,_C+180	;volatile
  6940  011088  006F FF78  F034    	movff	postinc2,btemp+10
  6941  01108E  006F FF74  F035    	movff	postdec2,btemp+11
  6942  011094  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  6943  01109A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  6944  0110A0  EE22  F1B5         	lfsr	2,_C+182	;volatile
  6945  0110A4  006F FF78  F034    	movff	postinc2,btemp+10
  6946  0110AA  006F FF74  F035    	movff	postdec2,btemp+11
  6947  0110B0  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  6948  0110B6  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  6949  0110BC  0E00               	movlw	0
  6950  0110BE  6EE6               	movwf	postinc1,c
  6951  0110C0  0E05               	movlw	5
  6952  0110C2  6EE6               	movwf	postinc1,c
  6953  0110C4  ECD7  F001         	call	_spinners	;wreg free
  6954  0110C8  502A               	movf	btemp^0,w,c
  6955  0110CA  6EE6               	movwf	postinc1,c
  6956  0110CC  0E00               	movlw	0
  6957  0110CE  6EE6               	movwf	postinc1,c
  6958  0110D0  0E07               	movlw	low STR_45
  6959  0110D2  6EE6               	movwf	postinc1,c
  6960  0110D4  0EFA               	movlw	high STR_45
  6961  0110D6  6EE6               	movwf	postinc1,c
  6962  0110D8  0E00               	movlw	0
  6963  0110DA  6EE6               	movwf	postinc1,c
  6964  0110DC  0E02               	movlw	2
  6965  0110DE  6EE6               	movwf	postinc1,c
  6966  0110E0  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6967  0110E4  0060  F0AB  FFE6   	movff	btemp,postinc1
  6968  0110EA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6969  0110F0  0E0E               	movlw	14
  6970  0110F2  6EE6               	movwf	postinc1,c
  6971  0110F4  EC5B  F000         	call	_sprintf	;wreg free
  6972                           
  6973                           ;main.c: 420:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f             ", C.esr);
  6974  0110F8  EE22  F187         	lfsr	2,_C+136	;volatile
  6975  0110FC  006F FF7B FFE6     	movff	postinc2,postinc1
  6976  011102  006F FF7B FFE6     	movff	postinc2,postinc1
  6977  011108  006F FF7B FFE6     	movff	postinc2,postinc1
  6978  01110E  006F FF7B FFE6     	movff	postinc2,postinc1
  6979  011114  0EAB               	movlw	low STR_46
  6980  011116  6EE6               	movwf	postinc1,c
  6981  011118  0EFA               	movlw	high STR_46
  6982  01111A  6EE6               	movwf	postinc1,c
  6983  01111C  0E01               	movlw	1
  6984  01111E  6EE6               	movwf	postinc1,c
  6985  011120  0E00               	movlw	0
  6986  011122  6EE6               	movwf	postinc1,c
  6987  011124  EC53  F014         	call	_get_vterm_ptr	;wreg free
  6988  011128  0060  F0AB  FFE6   	movff	btemp,postinc1
  6989  01112E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6990  011134  0E08               	movlw	8
  6991  011136  6EE6               	movwf	postinc1,c
  6992  011138  EC5B  F000         	call	_sprintf	;wreg free
  6993                           
  6994                           ;main.c: 421:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f         ", C.bv_one_load
      +                          , C.load_i1);
  6995  01113C  EE22  F219         	lfsr	2,_C+282	;volatile
  6996  011140  006F FF7B FFE6     	movff	postinc2,postinc1
  6997  011146  006F FF7B FFE6     	movff	postinc2,postinc1
  6998  01114C  006F FF7B FFE6     	movff	postinc2,postinc1
  6999  011152  006F FF7B FFE6     	movff	postinc2,postinc1
  7000  011158  EE22  F225         	lfsr	2,_C+294	;volatile
  7001  01115C  006F FF7B FFE6     	movff	postinc2,postinc1
  7002  011162  006F FF7B FFE6     	movff	postinc2,postinc1
  7003  011168  006F FF7B FFE6     	movff	postinc2,postinc1
  7004  01116E  006F FF7B FFE6     	movff	postinc2,postinc1
  7005  011174  0EDB               	movlw	low STR_47
  7006  011176  6EE6               	movwf	postinc1,c
  7007  011178  0EFA               	movlw	high STR_47
  7008  01117A  6EE6               	movwf	postinc1,c
  7009  01117C  0E01               	movlw	1
  7010  01117E  6EE6               	movwf	postinc1,c
  7011  011180  0E01               	movlw	1
  7012  011182  6EE6               	movwf	postinc1,c
  7013  011184  EC53  F014         	call	_get_vterm_ptr	;wreg free
  7014  011188  0060  F0AB  FFE6   	movff	btemp,postinc1
  7015  01118E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7016  011194  0E0C               	movlw	12
  7017  011196  6EE6               	movwf	postinc1,c
  7018  011198  EC5B  F000         	call	_sprintf	;wreg free
  7019                           
  7020                           ;main.c: 422:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f         ", C.bv_full_loa
      +                          d, C.load_i2);
  7021  01119C  EE22  F21D         	lfsr	2,_C+286	;volatile
  7022  0111A0  006F FF7B FFE6     	movff	postinc2,postinc1
  7023  0111A6  006F FF7B FFE6     	movff	postinc2,postinc1
  7024  0111AC  006F FF7B FFE6     	movff	postinc2,postinc1
  7025  0111B2  006F FF7B FFE6     	movff	postinc2,postinc1
  7026  0111B8  EE22  F229         	lfsr	2,_C+298	;volatile
  7027  0111BC  006F FF7B FFE6     	movff	postinc2,postinc1
  7028  0111C2  006F FF7B FFE6     	movff	postinc2,postinc1
  7029  0111C8  006F FF7B FFE6     	movff	postinc2,postinc1
  7030  0111CE  006F FF7B FFE6     	movff	postinc2,postinc1
  7031  0111D4  0EF3               	movlw	low STR_48
  7032  0111D6  6EE6               	movwf	postinc1,c
  7033  0111D8  0EFA               	movlw	high STR_48
  7034  0111DA  6EE6               	movwf	postinc1,c
  7035  0111DC  0E01               	movlw	1
  7036  0111DE  6EE6               	movwf	postinc1,c
  7037  0111E0  0E02               	movlw	2
  7038  0111E2  6EE6               	movwf	postinc1,c
  7039  0111E4  EC53  F014         	call	_get_vterm_ptr	;wreg free
  7040  0111E8  0060  F0AB  FFE6   	movff	btemp,postinc1
  7041  0111EE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7042  0111F4  0E0C               	movlw	12
  7043  0111F6  6EE6               	movwf	postinc1,c
  7044  0111F8  EC5B  F000         	call	_sprintf	;wreg free
  7045                           
  7046                           ;main.c: 423:      break;
  7047  0111FC  D108               	goto	l17947
  7048  0111FE                     l17931:
  7049                           
  7050                           ; BSR set to: 1
  7051                           ;main.c: 425:      if (!V.calib) {
  7052  0111FE  0102               	movlb	2	; () banked
  7053  011200  51B0               	movf	(_V+169)& (0+255),w,b	;volatile
  7054  011202  A4D8               	btfss	status,2,c
  7055  011204  D02D               	goto	l17935
  7056                           
  7057                           ; BSR set to: 2
  7058                           ;main.c: 426:       lp_filter(0.0, i, -1);
  7059  011206  0EFF               	movlw	255
  7060  011208  6EE6               	movwf	postinc1,c
  7061                           
  7062                           ;stkvar	_i @ sp[(-18)+14]
  7063  01120A  0EFC               	movlw	-4
  7064  01120C  50E3               	movf	plusw1,w,c
  7065  01120E  6EE6               	movwf	postinc1,c
  7066  011210  0E00               	movlw	0
  7067  011212  6EE6               	movwf	postinc1,c
  7068  011214  0E00               	movlw	0
  7069  011216  6EE6               	movwf	postinc1,c
  7070  011218  0E00               	movlw	0
  7071  01121A  6EE6               	movwf	postinc1,c
  7072  01121C  0E00               	movlw	0
  7073  01121E  6EE6               	movwf	postinc1,c
  7074  011220  EC36  F0EF         	call	_lp_filter	;wreg free
  7075                           
  7076                           ;main.c: 427:       lp_filter(0.0, j, -1);
  7077  011224  0EFF               	movlw	255
  7078  011226  6EE6               	movwf	postinc1,c
  7079                           
  7080                           ;stkvar	_j @ sp[(-18)+13]
  7081  011228  0EFB               	movlw	-5
  7082  01122A  50E3               	movf	plusw1,w,c
  7083  01122C  6EE6               	movwf	postinc1,c
  7084  01122E  0E00               	movlw	0
  7085  011230  6EE6               	movwf	postinc1,c
  7086  011232  0E00               	movlw	0
  7087  011234  6EE6               	movwf	postinc1,c
  7088  011236  0E00               	movlw	0
  7089  011238  6EE6               	movwf	postinc1,c
  7090  01123A  0E00               	movlw	0
  7091  01123C  6EE6               	movwf	postinc1,c
  7092  01123E  EC36  F0EF         	call	_lp_filter	;wreg free
  7093                           
  7094                           ;main.c: 428:       lp_filter(0.0, k, -1);
  7095  011242  0EFF               	movlw	255
  7096  011244  6EE6               	movwf	postinc1,c
  7097                           
  7098                           ;stkvar	_k @ sp[(-18)+12]
  7099  011246  0EFA               	movlw	-6
  7100  011248  50E3               	movf	plusw1,w,c
  7101  01124A  6EE6               	movwf	postinc1,c
  7102  01124C  0E00               	movlw	0
  7103  01124E  6EE6               	movwf	postinc1,c
  7104  011250  0E00               	movlw	0
  7105  011252  6EE6               	movwf	postinc1,c
  7106  011254  0E00               	movlw	0
  7107  011256  6EE6               	movwf	postinc1,c
  7108  011258  0E00               	movlw	0
  7109  01125A  6EE6               	movwf	postinc1,c
  7110  01125C  EC36  F0EF         	call	_lp_filter	;wreg free
  7111  011260                     l17935:
  7112                           
  7113                           ;main.c: 430:      V.calib = 1;
  7114  011260  0E01               	movlw	1
  7115  011262  0102               	movlb	2	; () banked
  7116  011264  6FB0               	movwf	(_V+169)& (0+255),b	;volatile
  7117                           
  7118                           ; BSR set to: 2
  7119                           ;main.c: 431:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          i), C.calc[i], inp_index);
  7120                           ;stkvar	_inp_index @ sp[(-17)+11]
  7121  011266  0EFA               	movlw	-6
  7122  011268  50E3               	movf	plusw1,w,c
  7123  01126A  6EE6               	movwf	postinc1,c
  7124  01126C  0E00               	movlw	0
  7125  01126E  6EE6               	movwf	postinc1,c
  7126                           
  7127                           ;stkvar	_i @ sp[(-19)+14]
  7128  011270  0EFB               	movlw	-5
  7129  011272  50E3               	movf	plusw1,w,c
  7130  011274  0D04               	mullw	4
  7131  011276  0EFF               	movlw	low _C
  7132  011278  24F3               	addwf	243,w,c
  7133  01127A  6ED9               	movwf	fsr2l,c
  7134  01127C  0E08               	movlw	high _C
  7135  01127E  20F4               	addwfc	prodh,w,c
  7136  011280  6EDA               	movwf	fsr2h,c
  7137  011282  006F FF7B FFE6     	movff	postinc2,postinc1
  7138  011288  006F FF7B FFE6     	movff	postinc2,postinc1
  7139  01128E  006F FF7B FFE6     	movff	postinc2,postinc1
  7140  011294  006F FF7B FFE6     	movff	postinc2,postinc1
  7141                           
  7142                           ;stkvar	_i @ sp[(-23)+14]
  7143  01129A  0EF7               	movlw	-9
  7144  01129C  50E3               	movf	plusw1,w,c
  7145  01129E  6EE6               	movwf	postinc1,c
  7146  0112A0  EC6B  F016         	call	_get_raw_result	;wreg free
  7147  0112A4  0060  F0AB  FFE6   	movff	btemp,postinc1
  7148  0112AA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7149  0112B0  0E35               	movlw	low STR_49
  7150  0112B2  6EE6               	movwf	postinc1,c
  7151  0112B4  0EFE               	movlw	high STR_49
  7152  0112B6  6EE6               	movwf	postinc1,c
  7153  0112B8  0E00               	movlw	0
  7154  0112BA  6EE6               	movwf	postinc1,c
  7155  0112BC  0E00               	movlw	0
  7156  0112BE  6EE6               	movwf	postinc1,c
  7157  0112C0  EC53  F014         	call	_get_vterm_ptr	;wreg free
  7158  0112C4  0060  F0AB  FFE6   	movff	btemp,postinc1
  7159  0112CA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7160  0112D0  0E0C               	movlw	12
  7161  0112D2  6EE6               	movwf	postinc1,c
  7162  0112D4  EC5B  F000         	call	_sprintf	;wreg free
  7163                           
  7164                           ; BSR set to: 0
  7165                           ;main.c: 432:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          j), C.calc[j], inp_index + 1);
  7166                           ;stkvar	_inp_index @ sp[(-17)+11]
  7167  0112D8  0EFA               	movlw	-6
  7168  0112DA  50E3               	movf	plusw1,w,c
  7169  0112DC  6E34               	movwf	(btemp+10)^0,c
  7170  0112DE  6A35               	clrf	(btemp+11)^0,c
  7171  0112E0  0E01               	movlw	1
  7172  0112E2  2634               	addwf	(btemp+10)^0,f,c
  7173  0112E4  0E00               	movlw	0
  7174  0112E6  2235               	addwfc	(btemp+11)^0,f,c
  7175  0112E8  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  7176  0112EE  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  7177                           
  7178                           ;stkvar	_j @ sp[(-19)+13]
  7179  0112F4  0EFA               	movlw	-6
  7180  0112F6  50E3               	movf	plusw1,w,c
  7181  0112F8  0D04               	mullw	4
  7182  0112FA  0EFF               	movlw	low _C
  7183  0112FC  24F3               	addwf	243,w,c
  7184  0112FE  6ED9               	movwf	fsr2l,c
  7185  011300  0E08               	movlw	high _C
  7186  011302  20F4               	addwfc	prodh,w,c
  7187  011304  6EDA               	movwf	fsr2h,c
  7188  011306  006F FF7B FFE6     	movff	postinc2,postinc1
  7189  01130C  006F FF7B FFE6     	movff	postinc2,postinc1
  7190  011312  006F FF7B FFE6     	movff	postinc2,postinc1
  7191  011318  006F FF7B FFE6     	movff	postinc2,postinc1
  7192                           
  7193                           ;stkvar	_j @ sp[(-23)+13]
  7194  01131E  0EF6               	movlw	-10
  7195  011320  50E3               	movf	plusw1,w,c
  7196  011322  6EE6               	movwf	postinc1,c
  7197  011324  EC6B  F016         	call	_get_raw_result	;wreg free
  7198  011328  0060  F0AB  FFE6   	movff	btemp,postinc1
  7199  01132E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7200  011334  0E35               	movlw	low STR_49
  7201  011336  6EE6               	movwf	postinc1,c
  7202  011338  0EFE               	movlw	high STR_49
  7203  01133A  6EE6               	movwf	postinc1,c
  7204  01133C  0E00               	movlw	0
  7205  01133E  6EE6               	movwf	postinc1,c
  7206  011340  0E01               	movlw	1
  7207  011342  6EE6               	movwf	postinc1,c
  7208  011344  EC53  F014         	call	_get_vterm_ptr	;wreg free
  7209  011348  0060  F0AB  FFE6   	movff	btemp,postinc1
  7210  01134E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7211  011354  0E0C               	movlw	12
  7212  011356  6EE6               	movwf	postinc1,c
  7213  011358  EC5B  F000         	call	_sprintf	;wreg free
  7214                           
  7215                           ; BSR set to: 0
  7216                           ;main.c: 433:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          k), C.calc[k], inp_index + 2);
  7217                           ;stkvar	_inp_index @ sp[(-17)+11]
  7218  01135C  0EFA               	movlw	-6
  7219  01135E  50E3               	movf	plusw1,w,c
  7220  011360  6E34               	movwf	(btemp+10)^0,c
  7221  011362  6A35               	clrf	(btemp+11)^0,c
  7222  011364  0E02               	movlw	2
  7223  011366  2634               	addwf	(btemp+10)^0,f,c
  7224  011368  0E00               	movlw	0
  7225  01136A  2235               	addwfc	(btemp+11)^0,f,c
  7226  01136C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  7227  011372  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  7228                           
  7229                           ;stkvar	_k @ sp[(-19)+12]
  7230  011378  0EF9               	movlw	-7
  7231  01137A  50E3               	movf	plusw1,w,c
  7232  01137C  0D04               	mullw	4
  7233  01137E  0EFF               	movlw	low _C
  7234  011380  24F3               	addwf	243,w,c
  7235  011382  6ED9               	movwf	fsr2l,c
  7236  011384  0E08               	movlw	high _C
  7237  011386  20F4               	addwfc	prodh,w,c
  7238  011388  6EDA               	movwf	fsr2h,c
  7239  01138A  006F FF7B FFE6     	movff	postinc2,postinc1
  7240  011390  006F FF7B FFE6     	movff	postinc2,postinc1
  7241  011396  006F FF7B FFE6     	movff	postinc2,postinc1
  7242  01139C  006F FF7B FFE6     	movff	postinc2,postinc1
  7243                           
  7244                           ;stkvar	_k @ sp[(-23)+12]
  7245  0113A2  0EF5               	movlw	-11
  7246  0113A4  50E3               	movf	plusw1,w,c
  7247  0113A6  6EE6               	movwf	postinc1,c
  7248  0113A8  EC6B  F016         	call	_get_raw_result	;wreg free
  7249  0113AC  0060  F0AB  FFE6   	movff	btemp,postinc1
  7250  0113B2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7251  0113B8  0E35               	movlw	low STR_49
  7252  0113BA  6EE6               	movwf	postinc1,c
  7253  0113BC  0EFE               	movlw	high STR_49
  7254  0113BE  6EE6               	movwf	postinc1,c
  7255  0113C0  0E00               	movlw	0
  7256  0113C2  6EE6               	movwf	postinc1,c
  7257  0113C4  0E02               	movlw	2
  7258  0113C6  6EE6               	movwf	postinc1,c
  7259  0113C8  EC53  F014         	call	_get_vterm_ptr	;wreg free
  7260  0113CC  0060  F0AB  FFE6   	movff	btemp,postinc1
  7261  0113D2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7262  0113D8  0E0C               	movlw	12
  7263  0113DA  6EE6               	movwf	postinc1,c
  7264  0113DC  EC5B  F000         	call	_sprintf	;wreg free
  7265                           
  7266                           ;main.c: 434:      break;
  7267  0113E0  D016               	goto	l17947
  7268  0113E2                     l17945:
  7269  0113E2  0101               	movlb	1	; () banked
  7270  0113E4  519B               	movf	_H& (0+255),w,b
  7271  0113E6  6E34               	movwf	(btemp+10)^0,c
  7272  0113E8  6A35               	clrf	(btemp+11)^0,c
  7273                           
  7274                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7275                           ; Switch size 1, requested type "simple"
  7276                           ; Number of cases is 1, Range of values is 0 to 0
  7277                           ; switch strategies available:
  7278                           ; Name         Instructions Cycles
  7279                           ; simple_byte            4     3 (average)
  7280                           ;	Chosen strategy is simple_byte
  7281  0113EA  5035               	movf	(btemp+11)^0,w,c
  7282  0113EC  0A00               	xorlw	0	; case 0
  7283  0113EE  A4D8               	btfss	status,2,c
  7284  0113F0  D00E               	goto	l17947
  7285                           
  7286                           ; BSR set to: 1
  7287                           ; Switch size 1, requested type "simple"
  7288                           ; Number of cases is 4, Range of values is 0 to 3
  7289                           ; switch strategies available:
  7290                           ; Name         Instructions Cycles
  7291                           ; simple_byte           13     7 (average)
  7292                           ;	Chosen strategy is simple_byte
  7293  0113F2  5034               	movf	(btemp+10)^0,w,c
  7294  0113F4  0A00               	xorlw	0	; case 0
  7295  0113F6  B4D8               	btfsc	status,2,c
  7296  0113F8  D4CE               	goto	l1499
  7297  0113FA  0A01               	xorlw	1	; case 1
  7298  0113FC  B4D8               	btfsc	status,2,c
  7299  0113FE  EFC8  F085         	goto	l1489
  7300  011402  0A03               	xorlw	3	; case 2
  7301  011404  B4D8               	btfsc	status,2,c
  7302  011406  D5DC               	goto	l1500
  7303  011408  0A01               	xorlw	1	; case 3
  7304  01140A  B4D8               	btfsc	status,2,c
  7305  01140C  D6F8               	goto	l17931
  7306  01140E                     l17947:
  7307                           
  7308                           ;main.c: 438:     clear_hid_pflags(&H);
  7309  01140E  0E9B               	movlw	low _H
  7310  011410  6EE6               	movwf	postinc1,c
  7311  011412  0E01               	movlw	high _H
  7312  011414  6EE6               	movwf	postinc1,c
  7313  011416  ECC9  F00D         	call	_clear_hid_pflags	;wreg free
  7314                           
  7315                           ;main.c: 440:    StartTimer(TMR_DISPLAY, 250);
  7316  01141A  0EFA               	movlw	250
  7317  01141C  6EE6               	movwf	postinc1,c
  7318  01141E  0E00               	movlw	0
  7319  011420  6EE6               	movwf	postinc1,c
  7320  011422  0E0A               	movlw	10
  7321  011424  6EE6               	movwf	postinc1,c
  7322  011426  EC49  F012         	call	_StartTimer	;wreg free
  7323                           
  7324                           ;main.c: 441:    V.enter = check_enter_button(&H);
  7325  01142A  0E9B               	movlw	low _H
  7326  01142C  6EE6               	movwf	postinc1,c
  7327  01142E  0E01               	movlw	high _H
  7328  011430  6EE6               	movwf	postinc1,c
  7329  011432  ECBC  F00C         	call	_check_enter_button	;wreg free
  7330  011436  502A               	movf	btemp^0,w,c
  7331  011438  0102               	movlb	2	; () banked
  7332  01143A  6FB1               	movwf	(_V+170)& (0+255),b	;volatile
  7333                           
  7334                           ; BSR set to: 2
  7335                           ;main.c: 442:    if (V.enter && (H.hid_display != HID_AUX)) {
  7336  01143C  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
  7337  01143E  B4D8               	btfsc	status,2,c
  7338  011440  D013               	goto	l17961
  7339                           
  7340                           ; BSR set to: 2
  7341  011442  0E03               	movlw	3
  7342  011444  0101               	movlb	1	; () banked
  7343  011446  199B               	xorwf	_H& (0+255),w,b
  7344  011448  B4D8               	btfsc	status,2,c
  7345  01144A  D00E               	goto	l17961
  7346                           
  7347                           ; BSR set to: 1
  7348                           ;main.c: 443:     V.enter = 0;
  7349  01144C  0102               	movlb	2	; () banked
  7350  01144E  6BB1               	clrf	(_V+170)& (0+255),b	;volatile
  7351                           
  7352                           ; BSR set to: 2
  7353                           ;main.c: 444:     V.screen = ~V.screen;
  7354  011450  A1A0               	btfss	(_V+153)& (0+255),0,b	;volatile
  7355  011452  D002               	goto	u17480
  7356  011454  0E01               	movlw	1
  7357  011456  D001               	goto	u17486
  7358  011458                     u17480:
  7359  011458  0E00               	movlw	0
  7360  01145A                     u17486:
  7361  01145A  0AFF               	xorlw	255
  7362  01145C  6E35               	movwf	(btemp+11)^0,c
  7363  01145E  51A0               	movf	(_V+153)& (0+255),w,b	;volatile
  7364  011460  1835               	xorwf	(btemp+11)^0,w,c
  7365  011462  0BFE               	andlw	-2
  7366  011464  1835               	xorwf	(btemp+11)^0,w,c
  7367  011466  6FA0               	movwf	(_V+153)& (0+255),b	;volatile
  7368  011468                     l17961:
  7369                           
  7370                           ;main.c: 446:    set_vterm(V.screen);
  7371  011468  0102               	movlb	2	; () banked
  7372  01146A  A1A0               	btfss	(_V+153)& (0+255),0,b	;volatile
  7373  01146C  D002               	goto	u17490
  7374  01146E  0E01               	movlw	1
  7375  011470  D001               	goto	u17496
  7376  011472                     u17490:
  7377  011472  0E00               	movlw	0
  7378  011474                     u17496:
  7379  011474  6EE6               	movwf	postinc1,c
  7380  011476  ECDC  F016         	call	_set_vterm	;wreg free
  7381                           
  7382                           ;main.c: 447:    update_lcd(V.screen);
  7383  01147A  0102               	movlb	2	; () banked
  7384  01147C  A1A0               	btfss	(_V+153)& (0+255),0,b	;volatile
  7385  01147E  D002               	goto	u17500
  7386  011480  0E01               	movlw	1
  7387  011482  D001               	goto	u17506
  7388  011484                     u17500:
  7389  011484  0E00               	movlw	0
  7390  011486                     u17506:
  7391  011486  6EE6               	movwf	postinc1,c
  7392  011488  EC4B  F0F8         	call	_update_lcd	;wreg free
  7393                           
  7394                           ;main.c: 448:    display_history();
  7395  01148C  EC4C  F0DB         	call	_display_history	;wreg free
  7396                           
  7397                           ;main.c: 450:    wait_lcd_done();
  7398  011490  EC5A  F016         	call	_wait_lcd_done	;wreg free
  7399                           
  7400                           ; BSR set to: 0
  7401                           ;main.c: 451:    set_dac_a(3.333);
  7402  011494  0EDF               	movlw	223
  7403  011496  6EE6               	movwf	postinc1,c
  7404  011498  0E4F               	movlw	79
  7405  01149A  6EE6               	movwf	postinc1,c
  7406  01149C  0E55               	movlw	85
  7407  01149E  6EE6               	movwf	postinc1,c
  7408  0114A0  0E40               	movlw	64
  7409  0114A2  6EE6               	movwf	postinc1,c
  7410  0114A4  ECA6  F013         	call	_set_dac_a	;wreg free
  7411                           
  7412                           ;main.c: 452:    set_dac_b(6.666);
  7413  0114A8  0EDF               	movlw	223
  7414  0114AA  6EE6               	movwf	postinc1,c
  7415  0114AC  0E4F               	movlw	79
  7416  0114AE  6EE6               	movwf	postinc1,c
  7417  0114B0  0ED5               	movlw	213
  7418  0114B2  6EE6               	movwf	postinc1,c
  7419  0114B4  0E40               	movlw	64
  7420  0114B6  6EE6               	movwf	postinc1,c
  7421  0114B8  EC8C  F013         	call	_set_dac_b	;wreg free
  7422                           
  7423                           ;main.c: 453:    set_dac();
  7424  0114BC  EC63  F006         	call	_set_dac	;wreg free
  7425  0114C0                     l17975:
  7426                           
  7427                           ;main.c: 459:   check_help(V.flipper);
  7428  0114C0  0102               	movlb	2	; () banked
  7429  0114C2  51AF               	movf	(_V+168)& (0+255),w,b	;volatile
  7430  0114C4  6EE6               	movwf	postinc1,c
  7431  0114C6  EC46  F0EC         	call	_check_help	;wreg free
  7432                           
  7433                           ;main.c: 461:   if (V.enter) {
  7434  0114CA  0102               	movlb	2	; () banked
  7435  0114CC  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
  7436  0114CE  B4D8               	btfsc	status,2,c
  7437  0114D0  D062               	goto	l1505
  7438                           
  7439                           ; BSR set to: 2
  7440                           ;main.c: 462:    V.enter = 0;
  7441  0114D2  6BB1               	clrf	(_V+170)& (0+255),b	;volatile
  7442                           
  7443                           ;main.c: 463:    V.calib = 0;
  7444  0114D4  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  7445                           
  7446                           ; BSR set to: 2
  7447                           ;main.c: 464:    inp_index += 3;
  7448                           ;stkvar	_inp_index @ sp[(-17)+11]
  7449  0114D6  0EFA               	movlw	-6
  7450  0114D8  006F FF8C  F02A    	movff	plusw1,btemp
  7451  0114DE  0E03               	movlw	3
  7452  0114E0  262A               	addwf	btemp^0,f,c
  7453  0114E2  0EFA               	movlw	-6
  7454  0114E4  0060  F0AB  FFE3   	movff	btemp,plusw1
  7455                           
  7456                           ;main.c: 465:    if (inp_index > 9)
  7457                           ;stkvar	_inp_index @ sp[(-17)+11]
  7458  0114EA  0EFA               	movlw	-6
  7459  0114EC  006F FF8C  F02A    	movff	plusw1,btemp
  7460  0114F2  0E09               	movlw	9
  7461  0114F4  642A               	cpfsgt	btemp^0,c
  7462  0114F6  D03A               	goto	l18003
  7463                           
  7464                           ; BSR set to: 2
  7465                           ;main.c: 466:     inp_index = 0;
  7466                           ;stkvar	_inp_index @ sp[(-17)+11]
  7467  0114F8  0EFA               	movlw	-6
  7468  0114FA  6AE3               	clrf	plusw1,c
  7469  0114FC  D037               	goto	l18003
  7470  0114FE                     l17985:
  7471                           
  7472                           ; BSR set to: 2
  7473                           ;main.c: 469:     i = C_BATT;
  7474                           ;stkvar	_i @ sp[(-17)+14]
  7475  0114FE  0EFD               	movlw	-3
  7476  011500  6AE3               	clrf	plusw1,c
  7477                           
  7478                           ; BSR set to: 2
  7479                           ;main.c: 470:     j = C_PV;
  7480                           ;stkvar	_j @ sp[(-17)+13]
  7481  011502  0EFC               	movlw	-4
  7482  011504  6AE3               	clrf	plusw1,c
  7483  011506  2AE3               	incf	plusw1,f,c
  7484                           
  7485                           ; BSR set to: 2
  7486                           ;main.c: 471:     k = V_CC;
  7487                           ;stkvar	_k @ sp[(-17)+12]
  7488  011508  0EFB               	movlw	-5
  7489  01150A  6AE3               	clrf	plusw1,c
  7490  01150C  82E3               	bsf	plusw1,1,c
  7491                           
  7492                           ;main.c: 472:     break;
  7493  01150E  D043               	goto	l1505
  7494  011510                     l17991:
  7495                           
  7496                           ; BSR set to: 2
  7497                           ;main.c: 474:     i = V_BAT;
  7498                           ;stkvar	_i @ sp[(-17)+14]
  7499  011510  0EFD               	movlw	-3
  7500  011512  6AE3               	clrf	plusw1,c
  7501  011514  84E3               	bsf	plusw1,2,c
  7502                           
  7503                           ;main.c: 475:     j = V_PV;
  7504                           ;stkvar	_j @ sp[(-17)+13]
  7505  011516  0EFC               	movlw	-4
  7506  011518  6AE3               	clrf	plusw1,c
  7507  01151A  80E3               	bsf	plusw1,0,c
  7508  01151C  84E3               	bsf	plusw1,2,c	;indir
  7509                           
  7510                           ;main.c: 476:     k = V_CBUS;
  7511                           ;stkvar	_k @ sp[(-17)+12]
  7512  01151E  0EFB               	movlw	-5
  7513  011520  6AE3               	clrf	plusw1,c
  7514  011522  82E3               	bsf	plusw1,1,c
  7515  011524  84E3               	bsf	plusw1,2,c	;indir
  7516                           
  7517                           ;main.c: 477:     break;
  7518  011526  D037               	goto	l1505
  7519  011528                     l17993:
  7520                           
  7521                           ; BSR set to: 2
  7522                           ;main.c: 479:     i = V_BBAT;
  7523                           ;stkvar	_i @ sp[(-17)+14]
  7524  011528  0EFD               	movlw	-3
  7525  01152A  6AE3               	clrf	plusw1,c
  7526  01152C  82E3               	bsf	plusw1,1,c
  7527  01152E  86E3               	bsf	plusw1,3,c	;indir
  7528                           
  7529                           ; BSR set to: 2
  7530                           ;main.c: 480:     j = V_TEMP;
  7531  011530  0E0B               	movlw	11
  7532  011532  6E35               	movwf	(btemp+11)^0,c
  7533                           
  7534                           ;stkvar	_j @ sp[(-17)+13]
  7535  011534  0EFC               	movlw	-4
  7536  011536  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7537                           
  7538                           ; BSR set to: 2
  7539                           ;main.c: 481:     k = V_INVERTER;
  7540                           ;stkvar	_k @ sp[(-17)+12]
  7541  01153C  0EFB               	movlw	-5
  7542  01153E  6AE3               	clrf	plusw1,c
  7543  011540  84E3               	bsf	plusw1,2,c
  7544  011542  86E3               	bsf	plusw1,3,c	;indir
  7545                           
  7546                           ;main.c: 482:     break;
  7547  011544  D028               	goto	l1505
  7548  011546                     l17999:
  7549                           
  7550                           ; BSR set to: 2
  7551                           ;main.c: 484:     i = V_LIGHT_SENSOR;
  7552  011546  0E0D               	movlw	13
  7553  011548  6E35               	movwf	(btemp+11)^0,c
  7554                           
  7555                           ;stkvar	_i @ sp[(-17)+14]
  7556  01154A  0EFD               	movlw	-3
  7557  01154C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7558                           
  7559                           ;main.c: 485:     j = V_LIGHT_SENSOR;
  7560  011552  0E0D               	movlw	13
  7561  011554  6E35               	movwf	(btemp+11)^0,c
  7562                           
  7563                           ;stkvar	_j @ sp[(-17)+13]
  7564  011556  0EFC               	movlw	-4
  7565  011558  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7566                           
  7567                           ;main.c: 486:     k = V_LIGHT_SENSOR;
  7568  01155E  0E0D               	movlw	13
  7569  011560  6E35               	movwf	(btemp+11)^0,c
  7570                           
  7571                           ;stkvar	_k @ sp[(-17)+12]
  7572  011562  0EFB               	movlw	-5
  7573  011564  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7574                           
  7575                           ;main.c: 487:     break;
  7576  01156A  D015               	goto	l1505
  7577  01156C                     l18003:
  7578                           
  7579                           ; BSR set to: 2
  7580                           ;stkvar	_inp_index @ sp[(-17)+11]
  7581  01156C  0EFA               	movlw	-6
  7582  01156E  50E3               	movf	plusw1,w,c
  7583  011570  6E34               	movwf	(btemp+10)^0,c
  7584  011572  6A35               	clrf	(btemp+11)^0,c
  7585                           
  7586                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7587                           ; Switch size 1, requested type "simple"
  7588                           ; Number of cases is 1, Range of values is 0 to 0
  7589                           ; switch strategies available:
  7590                           ; Name         Instructions Cycles
  7591                           ; simple_byte            4     3 (average)
  7592                           ;	Chosen strategy is simple_byte
  7593  011574  5035               	movf	(btemp+11)^0,w,c
  7594  011576  0A00               	xorlw	0	; case 0
  7595  011578  A4D8               	btfss	status,2,c
  7596  01157A  D00D               	goto	l1505
  7597                           
  7598                           ; BSR set to: 2
  7599                           ; Switch size 1, requested type "simple"
  7600                           ; Number of cases is 4, Range of values is 0 to 9
  7601                           ; switch strategies available:
  7602                           ; Name         Instructions Cycles
  7603                           ; simple_byte           13     7 (average)
  7604                           ;	Chosen strategy is simple_byte
  7605  01157C  5034               	movf	(btemp+10)^0,w,c
  7606  01157E  0A00               	xorlw	0	; case 0
  7607  011580  B4D8               	btfsc	status,2,c
  7608  011582  D7BD               	goto	l17985
  7609  011584  0A03               	xorlw	3	; case 3
  7610  011586  B4D8               	btfsc	status,2,c
  7611  011588  D7C3               	goto	l17991
  7612  01158A  0A05               	xorlw	5	; case 6
  7613  01158C  B4D8               	btfsc	status,2,c
  7614  01158E  D7CC               	goto	l17993
  7615  011590  0A0F               	xorlw	15	; case 9
  7616  011592  B4D8               	btfsc	status,2,c
  7617  011594  D7D8               	goto	l17999
  7618  011596                     l1505:
  7619                           
  7620                           ; BSR set to: 2
  7621                           ;main.c: 496:   if (V.set_sequ) {
  7622  011596  A19F               	btfss	(_V+152)& (0+255),0,b	;volatile
  7623  011598  EF66  F084         	goto	l17851
  7624                           
  7625                           ; BSR set to: 2
  7626                           ;main.c: 497:    if (TimerDone(TMR_INFO)) {
  7627  01159C  0E07               	movlw	7
  7628  01159E  6EE6               	movwf	postinc1,c
  7629  0115A0  ECD5  F014         	call	_TimerDone	;wreg free
  7630  0115A4  502A               	movf	btemp^0,w,c
  7631  0115A6  B4D8               	btfsc	status,2,c
  7632  0115A8  D00C               	goto	l18013
  7633                           
  7634                           ;main.c: 498:     V.set_sequ = 0;
  7635  0115AA  0102               	movlb	2	; () banked
  7636  0115AC  919F               	bcf	(_V+152)& (0+255),0,b	;volatile
  7637                           
  7638                           ; BSR set to: 2
  7639                           ;main.c: 499:     set_vterm(0);
  7640  0115AE  0E00               	movlw	0
  7641  0115B0  6EE6               	movwf	postinc1,c
  7642  0115B2  ECDC  F016         	call	_set_vterm	;wreg free
  7643                           
  7644                           ;main.c: 500:     update_lcd(0);
  7645  0115B6  0E00               	movlw	0
  7646  0115B8  6EE6               	movwf	postinc1,c
  7647  0115BA  EC4B  F0F8         	call	_update_lcd	;wreg free
  7648                           
  7649                           ;main.c: 501:    } else {
  7650  0115BE  EF66  F084         	goto	l17851
  7651  0115C2                     l18013:
  7652                           
  7653                           ;main.c: 503:     set_vterm(2);
  7654  0115C2  0E02               	movlw	2
  7655  0115C4  6EE6               	movwf	postinc1,c
  7656  0115C6  ECDC  F016         	call	_set_vterm	;wreg free
  7657                           
  7658                           ;main.c: 504:     update_lcd(2);
  7659  0115CA  0E02               	movlw	2
  7660  0115CC  6EE6               	movwf	postinc1,c
  7661  0115CE  EC4B  F0F8         	call	_update_lcd	;wreg free
  7662  0115D2  EF66  F084         	goto	l17851
  7663  0115D6                     __end_of_main:
  7664                           	opt callstack 0
  7665                           
  7666 ;; *************** function _update_hist_data *****************
  7667 ;; Defined at:
  7668 ;;		line 456 in file "daq.c"
  7669 ;; Parameters:    Size  Location     Type
  7670 ;;  mode            1  [STACK] const _Bool 
  7671 ;;  hist            2  [STACK] PTR volatile struct hist
  7672 ;;		 -> C.hist(97), C(320), 
  7673 ;; Auto vars:     Size  Location     Type
  7674 ;;		None
  7675 ;; Return value:  Size  Location     Type
  7676 ;;                  1  [STACK] _Bool 
  7677 ;; Registers used:
  7678 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl
  7679 ;; Tracked objects:
  7680 ;;		On entry : 7/1
  7681 ;;		On exit  : 0/0
  7682 ;;		Unchanged: 0/0
  7683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7688 ;;Total ram usage:        0 bytes
  7689 ;; Hardware stack levels used:    1
  7690 ;; Hardware stack levels required when called:   15
  7691 ;; This function calls:
  7692 ;;		Nothing
  7693 ;; This function is called by:
  7694 ;;		_main
  7695 ;; This function uses a reentrant model
  7696 ;;
  7697                           
  7698                           	psect	text1
  7699  00180A                     __ptext1:
  7700                           	opt callstack 0
  7701  00180A                     _update_hist_data:
  7702                           	opt callstack 15
  7703                           
  7704                           ;daq.c: 456: _Bool update_hist_data(const _Bool mode, volatile hist_type *hist);daq.c: 4
      +                          57: {;daq.c: 458:  if (hist == ((void*)0))
  7705                           ;stkvar	_hist @ sp[(0)+-3]
  7706                           
  7707                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7708                           ;incstack = 0
  7709  00180A  0EFD               	movlw	-3
  7710  00180C  006F FF8C  F02A    	movff	plusw1,btemp
  7711  001812  0EFE               	movlw	-2
  7712  001814  50E3               	movf	plusw1,w,c
  7713  001816  102A               	iorwf	btemp^0,w,c
  7714  001818  A4D8               	btfss	status,2,c
  7715  00181A  D002               	goto	l14287
  7716  00181C                     u13500:
  7717                           
  7718                           ;daq.c: 459:   return 0;
  7719  00181C  0E00               	movlw	0
  7720  00181E  D01A               	goto	L3
  7721  001820                     l14287:
  7722                           
  7723                           ;daq.c: 461:  if (mode) {
  7724                           ;stkvar	_mode @ sp[(0)+-1]
  7725  001820  0EFF               	movlw	-1
  7726  001822  50E3               	movf	plusw1,w,c
  7727  001824  B4D8               	btfsc	status,2,c
  7728  001826  D018               	goto	l14299
  7729                           
  7730                           ;daq.c: 462:   if (R.hist_save) {
  7731  001828  0101               	movlb	1	; () banked
  7732  00182A  A197               	btfss	(_R+151)& (0+255),0,b	;volatile
  7733  00182C  D7F7               	goto	u13500
  7734                           
  7735                           ; BSR set to: 1
  7736                           ;daq.c: 463:    R.H = *hist;
  7737                           ;stkvar	_hist @ sp[(0)+-3]
  7738  00182E  0EFD               	movlw	-3
  7739  001830  006F FF8F FFD9     	movff	plusw1,fsr2l
  7740  001836  0EFE               	movlw	-2
  7741  001838  006F FF8F FFDA     	movff	plusw1,fsr2h
  7742  00183E  EE00  F136         	lfsr	0,_R+54	;volatile
  7743  001842  0E60               	movlw	96
  7744  001844                     u13531:
  7745  001844  006F FF6F FFEB     	movff	plusw2,plusw0
  7746  00184A  06E8               	decf	wreg,f,c
  7747  00184C  E2FB               	bc	u13531
  7748                           
  7749                           ; BSR set to: 1
  7750                           ;daq.c: 464:    if (R.hist_update) {
  7751  00184E  A397               	btfss	(_R+151)& (0+255),1,b	;volatile
  7752  001850  D7E5               	goto	u13500
  7753                           
  7754                           ; BSR set to: 1
  7755                           ;daq.c: 465:     return 1;
  7756  001852  0E01               	movlw	1
  7757  001854                     L3:
  7758  001854  6E2A               	movwf	btemp^0,c
  7759  001856  D013               	goto	l2107
  7760  001858                     l14299:
  7761                           
  7762                           ;daq.c: 469:   *hist = R.H;
  7763  001858  EE20  F136         	lfsr	2,_R+54	;volatile
  7764                           
  7765                           ;stkvar	_hist @ sp[(0)+-3]
  7766  00185C  0EFD               	movlw	-3
  7767  00185E  006F FF8F FFE9     	movff	plusw1,fsr0l
  7768  001864  0EFE               	movlw	-2
  7769  001866  006F FF8F FFEA     	movff	plusw1,fsr0h
  7770  00186C  0E60               	movlw	96
  7771  00186E                     u13551:
  7772  00186E  006F FF6F FFEB     	movff	plusw2,plusw0
  7773  001874  06E8               	decf	wreg,f,c
  7774  001876  E2FB               	bc	u13551
  7775                           
  7776                           ;daq.c: 470:   R.hist_save = 1;
  7777  001878  0101               	movlb	1	; () banked
  7778  00187A  8197               	bsf	(_R+151)& (0+255),0,b	;volatile
  7779  00187C  D7CF               	goto	u13500
  7780  00187E                     l2107:
  7781                           
  7782                           ; _update_hist_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
  7783  00187E  52E5               	movf	postdec1,f,c
  7784  001880  52E5               	movf	postdec1,f,c
  7785  001882  52E5               	movf	postdec1,f,c
  7786  001884  0012               	return		;funcret
  7787  001886                     __end_of_update_hist_data:
  7788                           	opt callstack 0
  7789                           
  7790 ;; *************** function _update_cal_data *****************
  7791 ;; Defined at:
  7792 ;;		line 437 in file "daq.c"
  7793 ;; Parameters:    Size  Location     Type
  7794 ;;		None
  7795 ;; Auto vars:     Size  Location     Type
  7796 ;;		None
  7797 ;; Return value:  Size  Location     Type
  7798 ;;                  1  [STACK] void 
  7799 ;; Registers used:
  7800 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  7801 ;; Tracked objects:
  7802 ;;		On entry : 0/39
  7803 ;;		On exit  : 3F/1
  7804 ;;		Unchanged: 0/0
  7805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7810 ;;Total ram usage:        0 bytes
  7811 ;; Hardware stack levels used:    1
  7812 ;; Hardware stack levels required when called:   15
  7813 ;; This function calls:
  7814 ;;		Nothing
  7815 ;; This function is called by:
  7816 ;;		_main
  7817 ;; This function uses a reentrant model
  7818 ;;
  7819                           
  7820                           	psect	text2
  7821  001FB6                     __ptext2:
  7822                           	opt callstack 0
  7823  001FB6                     _update_cal_data:
  7824                           	opt callstack 15
  7825                           
  7826                           ;daq.c: 439:  R = r_cal;
  7827                           
  7828                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7829                           ;incstack = 0
  7830  001FB6  EE21  F040         	lfsr	2,_r_cal
  7831  001FBA  EE00  F100         	lfsr	0,_R	;volatile
  7832  001FBE  0E9A               	movlw	154
  7833  001FC0                     u13471:
  7834  001FC0  006F FF7B FFEE     	movff	postinc2,postinc0
  7835  001FC6  06E8               	decf	wreg,f,c
  7836  001FC8  E2FB               	bc	u13471
  7837  001FCA  0E9B               	movlw	155
  7838  001FCC  5ED9               	subwf	fsr2l,f,c
  7839  001FCE  5EE9               	subwf	fsr0l,f,c
  7840                           
  7841                           ;daq.c: 440:  if (!R.c_zero_cal) {
  7842  001FD0  0101               	movlb	1	; () banked
  7843  001FD2  B597               	btfsc	(_R+151)& (0+255),2,b	;volatile
  7844  001FD4  D008               	goto	l14277
  7845                           
  7846                           ; BSR set to: 1
  7847                           ;daq.c: 441:   R.n_offset[0] = 3938;
  7848  001FD6  0E0F               	movlw	15
  7849  001FD8  6F27               	movwf	(_R+39)& (0+255),b	;volatile
  7850  001FDA  0E62               	movlw	98
  7851  001FDC  6F26               	movwf	(_R+38)& (0+255),b	;volatile
  7852                           
  7853                           ;daq.c: 442:   R.n_offset[1] = 4004;
  7854  001FDE  0E0F               	movlw	15
  7855  001FE0  6F29               	movwf	(_R+41)& (0+255),b	;volatile
  7856  001FE2  0EA4               	movlw	164
  7857  001FE4  6F28               	movwf	(_R+40)& (0+255),b	;volatile
  7858  001FE6                     l14277:
  7859                           
  7860                           ; BSR set to: 1
  7861                           ;daq.c: 446:  if (!R.c_scale_cal) {
  7862  001FE6  B797               	btfsc	(_R+151)& (0+255),3,b	;volatile
  7863  001FE8  0012               	return	
  7864                           
  7865                           ; BSR set to: 1
  7866                           ;daq.c: 447:   R.n_scalar[0] = 0.0862000;
  7867  001FEA  0EA0               	movlw	160
  7868  001FEC  6F2A               	movwf	(_R+42)& (0+255),b	;volatile
  7869  001FEE  0E89               	movlw	137
  7870  001FF0  6F2B               	movwf	(_R+43)& (0+255),b	;volatile
  7871  001FF2  0EB0               	movlw	176
  7872  001FF4  6F2C               	movwf	(_R+44)& (0+255),b	;volatile
  7873  001FF6  0E3D               	movlw	61
  7874  001FF8  6F2D               	movwf	(_R+45)& (0+255),b	;volatile
  7875                           
  7876                           ;daq.c: 448:   R.n_scalar[1] = 0.0361010;
  7877  001FFA  0EA4               	movlw	164
  7878  001FFC  6F2E               	movwf	(_R+46)& (0+255),b	;volatile
  7879  001FFE  0EDE               	movlw	222
  7880  002000  6F2F               	movwf	(_R+47)& (0+255),b	;volatile
  7881  002002  0E13               	movlw	19
  7882  002004  6F30               	movwf	(_R+48)& (0+255),b	;volatile
  7883  002006  0E3D               	movlw	61
  7884  002008  6F31               	movwf	(_R+49)& (0+255),b	;volatile
  7885                           
  7886                           ; BSR set to: 1
  7887                           ; _update_cal_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  7888  00200A  0012               	return		;funcret
  7889  00200C                     __end_of_update_cal_data:
  7890                           	opt callstack 0
  7891                           
  7892 ;; *************** function _static_soc *****************
  7893 ;; Defined at:
  7894 ;;		line 118 in file "mbmc.c"
  7895 ;; Parameters:    Size  Location     Type
  7896 ;;		None
  7897 ;; Auto vars:     Size  Location     Type
  7898 ;;		None
  7899 ;; Return value:  Size  Location     Type
  7900 ;;                  1  [STACK] void 
  7901 ;; Registers used:
  7902 ;;		wreg, fsr2l, fsr2h
  7903 ;; Tracked objects:
  7904 ;;		On entry : 0/1
  7905 ;;		On exit  : 0/0
  7906 ;;		Unchanged: 0/0
  7907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7912 ;;Total ram usage:        0 bytes
  7913 ;; Hardware stack levels used:    1
  7914 ;; Hardware stack levels required when called:   15
  7915 ;; This function calls:
  7916 ;;		Nothing
  7917 ;; This function is called by:
  7918 ;;		_main
  7919 ;; This function uses a reentrant model
  7920 ;;
  7921                           
  7922                           	psect	text3
  7923  001EA8                     __ptext3:
  7924                           	opt callstack 0
  7925  001EA8                     _static_soc:
  7926                           	opt callstack 15
  7927                           
  7928                           ;mbmc.c: 120:  C.runtime = 120;
  7929                           
  7930                           ; BSR set to: 1
  7931                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7932                           ;incstack = 0
  7933  001EA8  0E78               	movlw	120
  7934  001EAA  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
  7935  001EB0  0E00               	movlw	0
  7936  001EB2  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
  7937                           
  7938                           ;mbmc.c: 121:  C.soc = 100;
  7939  001EB8  0E64               	movlw	100
  7940  001EBA  006F FFA0  F9B5    	movff	wreg,_C+182	;volatile
  7941  001EC0  0E00               	movlw	0
  7942  001EC2  006F FFA0  F9B6    	movff	wreg,_C+183	;volatile
  7943                           
  7944                           ;mbmc.c: 122:  C.dynamic_ah = C.bank_ah;
  7945  001EC8  EE22  F18B         	lfsr	2,_C+140	;volatile
  7946  001ECC  006F FF78  F98F    	movff	postinc2,_C+144	;volatile
  7947  001ED2  006F FF78  F990    	movff	postinc2,_C+145	;volatile
  7948  001ED8  006F FF78  F991    	movff	postinc2,_C+146	;volatile
  7949  001EDE  006F FF74  F992    	movff	postdec2,_C+147	;volatile
  7950                           
  7951                           ;mbmc.c: 123:  C.dynamic_ah_adj = C.dynamic_ah;
  7952  001EE4  EE22  F18F         	lfsr	2,_C+144	;volatile
  7953  001EE8  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
  7954  001EEE  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
  7955  001EF4  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
  7956  001EFA  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
  7957                           
  7958                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  7959  001F00  0012               	return		;funcret
  7960  001F02                     __end_of_static_soc:
  7961                           	opt callstack 0
  7962                           
  7963 ;; *************** function _start_switch_handler *****************
  7964 ;; Defined at:
  7965 ;;		line 125 in file "dio.c"
  7966 ;; Parameters:    Size  Location     Type
  7967 ;;		None
  7968 ;; Auto vars:     Size  Location     Type
  7969 ;;		None
  7970 ;; Return value:  Size  Location     Type
  7971 ;;                  1  [STACK] void 
  7972 ;; Registers used:
  7973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  7974 ;; Tracked objects:
  7975 ;;		On entry : 0/0
  7976 ;;		On exit  : 3F/39
  7977 ;;		Unchanged: 0/0
  7978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7983 ;;Total ram usage:        0 bytes
  7984 ;; Hardware stack levels used:    1
  7985 ;; Hardware stack levels required when called:   16
  7986 ;; This function calls:
  7987 ;;		_INT1_SetInterruptHandler
  7988 ;; This function is called by:
  7989 ;;		_main
  7990 ;; This function uses a reentrant model
  7991 ;;
  7992                           
  7993                           	psect	text4
  7994  002D3C                     __ptext4:
  7995                           	opt callstack 0
  7996  002D3C                     _start_switch_handler:
  7997                           	opt callstack 14
  7998                           
  7999                           ;dio.c: 127:  (PIE5bits.INT1IE = 0);
  8000                           
  8001                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8002                           ;incstack = 0
  8003  002D3C  0139               	movlb	57	; () banked
  8004  002D3E  9195               	bcf	149,0,b	;volatile
  8005                           
  8006                           ; BSR set to: 57
  8007                           ;dio.c: 128:  INT1_SetInterruptHandler(switch_handler);
  8008  002D40  0EF6               	movlw	low _switch_handler
  8009  002D42  6EE6               	movwf	postinc1,c
  8010  002D44  0EF5               	movlw	high _switch_handler
  8011  002D46  6EE6               	movwf	postinc1,c
  8012  002D48  0E01               	movlw	low (_switch_handler shr (0+16))
  8013  002D4A  6EE6               	movwf	postinc1,c
  8014  002D4C  EC61  F015         	call	_INT1_SetInterruptHandler	;wreg free
  8015                           
  8016                           ;dio.c: 129:  S.button[SNULL].sw = SW_INVALID;
  8017  002D50  0E02               	movlw	2
  8018  002D52  0101               	movlb	1	; () banked
  8019  002D54  6FC7               	movwf	(_S+35)& (0+255),b	;volatile
  8020                           
  8021                           ; BSR set to: 1
  8022                           ;dio.c: 130:  (PIE5bits.INT1IE = 1);
  8023  002D56  0139               	movlb	57	; () banked
  8024  002D58  8195               	bsf	149,0,b	;volatile
  8025                           
  8026                           ; BSR set to: 57
  8027                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  8028  002D5A  0012               	return		;funcret
  8029  002D5C                     __end_of_start_switch_handler:
  8030                           	opt callstack 0
  8031                           
  8032 ;; *************** function _srand *****************
  8033 ;; Defined at:
  8034 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  8035 ;; Parameters:    Size  Location     Type
  8036 ;;  s               2  [STACK] unsigned int 
  8037 ;; Auto vars:     Size  Location     Type
  8038 ;;		None
  8039 ;; Return value:  Size  Location     Type
  8040 ;;                  1  [STACK] void 
  8041 ;; Registers used:
  8042 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  8043 ;; Tracked objects:
  8044 ;;		On entry : 0/0
  8045 ;;		On exit  : 3F/2
  8046 ;;		Unchanged: 0/0
  8047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8052 ;;Total ram usage:        0 bytes
  8053 ;; Hardware stack levels used:    1
  8054 ;; Hardware stack levels required when called:   15
  8055 ;; This function calls:
  8056 ;;		Nothing
  8057 ;; This function is called by:
  8058 ;;		_main
  8059 ;; This function uses a reentrant model
  8060 ;;
  8061                           
  8062                           	psect	text5
  8063  0026E4                     __ptext5:
  8064                           	opt callstack 0
  8065  0026E4                     _srand:
  8066                           	opt callstack 15
  8067                           
  8068                           ;stkvar	_s @ sp[(0)+-2]
  8069                           
  8070                           ; BSR set to: 57
  8071                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8072                           ;incstack = 0
  8073  0026E4  0EFE               	movlw	-2
  8074  0026E6  50E3               	movf	plusw1,w,c
  8075  0026E8  0FFF               	addlw	255
  8076  0026EA  6E34               	movwf	(btemp+10)^0,c
  8077  0026EC  0EFF               	movlw	-1
  8078  0026EE  006F FF8C  F035    	movff	plusw1,btemp+11
  8079  0026F4  0EFF               	movlw	255
  8080  0026F6  2235               	addwfc	(btemp+11)^0,f,c
  8081  0026F8  0060  F0D0  F2DE   	movff	btemp+10,_seed
  8082  0026FE  0060  F0D4  F2DF   	movff	btemp+11,_seed+1
  8083  002704  0102               	movlb	2	; () banked
  8084  002706  6BE0               	clrf	(_seed+2)& (0+255),b
  8085  002708  6BE1               	clrf	(_seed+3)& (0+255),b
  8086  00270A  6BE2               	clrf	(_seed+4)& (0+255),b
  8087  00270C  6BE3               	clrf	(_seed+5)& (0+255),b
  8088  00270E  6BE4               	clrf	(_seed+6)& (0+255),b
  8089  002710  6BE5               	clrf	(_seed+7)& (0+255),b
  8090                           
  8091                           ; BSR set to: 2
  8092                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  8093  002712  52E5               	movf	postdec1,f,c
  8094  002714  52E5               	movf	postdec1,f,c
  8095  002716  0012               	return		;funcret
  8096  002718                     __end_of_srand:
  8097                           	opt callstack 0
  8098                           
  8099 ;; *************** function _set_time *****************
  8100 ;; Defined at:
  8101 ;;		line 255 in file "mbmc.c"
  8102 ;; Parameters:    Size  Location     Type
  8103 ;;  t               8  [STACK] long long 
  8104 ;; Auto vars:     Size  Location     Type
  8105 ;;		None
  8106 ;; Return value:  Size  Location     Type
  8107 ;;                  1  [STACK] void 
  8108 ;; Registers used:
  8109 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
  8110 ;; Tracked objects:
  8111 ;;		On entry : 3F/39
  8112 ;;		On exit  : 3F/39
  8113 ;;		Unchanged: 0/0
  8114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8119 ;;Total ram usage:        0 bytes
  8120 ;; Hardware stack levels used:    1
  8121 ;; Hardware stack levels required when called:   15
  8122 ;; This function calls:
  8123 ;;		Nothing
  8124 ;; This function is called by:
  8125 ;;		_main
  8126 ;; This function uses a reentrant model
  8127 ;;
  8128                           
  8129                           	psect	text6
  8130  002678                     __ptext6:
  8131                           	opt callstack 0
  8132  002678                     _set_time:
  8133                           	opt callstack 15
  8134                           
  8135                           ;mbmc.c: 255: void set_time(time_t t);mbmc.c: 256: {;mbmc.c: 257:  PIE8bits.TMR5IE = 0;
  8136                           
  8137                           ; BSR set to: 2
  8138                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8139                           ;incstack = 0
  8140  002678  0139               	movlb	57	; () banked
  8141  00267A  9D98               	bcf	152,6,b	;volatile
  8142                           
  8143                           ; BSR set to: 57
  8144                           ;mbmc.c: 258:  V.ticks=t;
  8145                           ;stkvar	_t @ sp[(0)+-8]
  8146  00267C  50E1               	movf	fsr1l,w,c
  8147  00267E  0FF8               	addlw	-8
  8148  002680  6ED9               	movwf	fsr2l,c
  8149  002682  50E2               	movf	fsr1h,w,c
  8150  002684  6EDA               	movwf	fsr2h,c
  8151  002686  0EFF               	movlw	255
  8152  002688  22DA               	addwfc	fsr2h,f,c
  8153  00268A  006F FF78  F288    	movff	postinc2,_V+129	;volatile
  8154  002690  006F FF78  F289    	movff	postinc2,_V+130	;volatile
  8155  002696  006F FF78  F28A    	movff	postinc2,_V+131	;volatile
  8156  00269C  006F FF78  F28B    	movff	postinc2,_V+132	;volatile
  8157                           
  8158                           ; BSR set to: 57
  8159                           ;mbmc.c: 259:  PIE8bits.TMR5IE = 1;
  8160  0026A2  8D98               	bsf	152,6,b	;volatile
  8161                           
  8162                           ; BSR set to: 57
  8163                           ; _set_time: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
  8164  0026A4  0EF8               	movlw	248
  8165  0026A6  26E1               	addwf	fsr1l,f,c
  8166  0026A8  0EFF               	movlw	255
  8167  0026AA  22E2               	addwfc	fsr1h,f,c
  8168  0026AC  0012               	return		;funcret
  8169  0026AE                     __end_of_set_time:
  8170                           	opt callstack 0
  8171                           
  8172 ;; *************** function _set_hist_flag *****************
  8173 ;; Defined at:
  8174 ;;		line 475 in file "daq.c"
  8175 ;; Parameters:    Size  Location     Type
  8176 ;;		None
  8177 ;; Auto vars:     Size  Location     Type
  8178 ;;		None
  8179 ;; Return value:  Size  Location     Type
  8180 ;;                  1  [STACK] void 
  8181 ;; Registers used:
  8182 ;;		None
  8183 ;; Tracked objects:
  8184 ;;		On entry : 3F/39
  8185 ;;		On exit  : 3F/1
  8186 ;;		Unchanged: 0/0
  8187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8192 ;;Total ram usage:        0 bytes
  8193 ;; Hardware stack levels used:    1
  8194 ;; Hardware stack levels required when called:   15
  8195 ;; This function calls:
  8196 ;;		Nothing
  8197 ;; This function is called by:
  8198 ;;		_main
  8199 ;; This function uses a reentrant model
  8200 ;;
  8201                           
  8202                           	psect	text7
  8203  002FE2                     __ptext7:
  8204                           	opt callstack 0
  8205  002FE2                     _set_hist_flag:
  8206                           	opt callstack 15
  8207                           
  8208                           ;daq.c: 477:  R.hist_update=1;
  8209                           
  8210                           ; BSR set to: 57
  8211                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8212                           ;incstack = 0
  8213  002FE2  0101               	movlb	1	; () banked
  8214  002FE4  8397               	bsf	(_R+151)& (0+255),1,b	;volatile
  8215                           
  8216                           ; BSR set to: 1
  8217                           ; _set_hist_flag: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8218  002FE6  0012               	return		;funcret
  8219  002FE8                     __end_of_set_hist_flag:
  8220                           	opt callstack 0
  8221                           
  8222 ;; *************** function _set_dac_b *****************
  8223 ;; Defined at:
  8224 ;;		line 308 in file "daq.c"
  8225 ;; Parameters:    Size  Location     Type
  8226 ;;  voltage         4  [STACK] const float 
  8227 ;; Auto vars:     Size  Location     Type
  8228 ;;		None
  8229 ;; Return value:  Size  Location     Type
  8230 ;;                  2  [STACK] unsigned short 
  8231 ;; Registers used:
  8232 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  8233 ;; Tracked objects:
  8234 ;;		On entry : 0/0
  8235 ;;		On exit  : 0/0
  8236 ;;		Unchanged: 0/0
  8237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8242 ;;Total ram usage:        0 bytes
  8243 ;; Hardware stack levels used:    1
  8244 ;; Hardware stack levels required when called:   17
  8245 ;; This function calls:
  8246 ;;		_convert_dac_raw
  8247 ;; This function is called by:
  8248 ;;		_main
  8249 ;; This function uses a reentrant model
  8250 ;;
  8251                           
  8252                           	psect	text8
  8253  002718                     __ptext8:
  8254                           	opt callstack 0
  8255  002718                     _set_dac_b:
  8256                           	opt callstack 13
  8257                           
  8258                           ;daq.c: 308: uint16_t set_dac_b(const float voltage);daq.c: 309: {;daq.c: 310:  R.raw_da
      +                          c[1] = convert_dac_raw(voltage);
  8259                           ;stkvar	_voltage @ sp[(0)+-4]
  8260                           
  8261                           ; BSR set to: 1
  8262                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8263                           ;incstack = 0
  8264  002718  0EFC               	movlw	-4
  8265  00271A  006F FF8F FFE6     	movff	plusw1,postinc1
  8266  002720  006F FF8F FFE6     	movff	plusw1,postinc1
  8267  002726  006F FF8F FFE6     	movff	plusw1,postinc1
  8268  00272C  006F FF8F FFE6     	movff	plusw1,postinc1
  8269  002732  ECF7  F0FD         	call	_convert_dac_raw	;wreg free
  8270  002736  0060  F0A8  F122   	movff	btemp,_R+34	;volatile
  8271  00273C  0060  F0AC  F123   	movff	btemp+1,_R+35	;volatile
  8272                           
  8273                           ; _set_dac_b: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  8274                           
  8275                           ;daq.c: 311:  return R.raw_dac[1];;	Return value of _set_dac_b is never used
  8276  002742  52E5               	movf	postdec1,f,c
  8277  002744  52E5               	movf	postdec1,f,c
  8278  002746  52E5               	movf	postdec1,f,c
  8279  002748  52E5               	movf	postdec1,f,c
  8280  00274A  0012               	return		;funcret
  8281  00274C                     __end_of_set_dac_b:
  8282                           	opt callstack 0
  8283                           
  8284 ;; *************** function _set_dac_a *****************
  8285 ;; Defined at:
  8286 ;;		line 299 in file "daq.c"
  8287 ;; Parameters:    Size  Location     Type
  8288 ;;  voltage         4  [STACK] const float 
  8289 ;; Auto vars:     Size  Location     Type
  8290 ;;		None
  8291 ;; Return value:  Size  Location     Type
  8292 ;;                  2  [STACK] unsigned short 
  8293 ;; Registers used:
  8294 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  8295 ;; Tracked objects:
  8296 ;;		On entry : 3F/0
  8297 ;;		On exit  : 0/0
  8298 ;;		Unchanged: 0/0
  8299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8304 ;;Total ram usage:        0 bytes
  8305 ;; Hardware stack levels used:    1
  8306 ;; Hardware stack levels required when called:   17
  8307 ;; This function calls:
  8308 ;;		_convert_dac_raw
  8309 ;; This function is called by:
  8310 ;;		_main
  8311 ;; This function uses a reentrant model
  8312 ;;
  8313                           
  8314                           	psect	text9
  8315  00274C                     __ptext9:
  8316                           	opt callstack 0
  8317  00274C                     _set_dac_a:
  8318                           	opt callstack 13
  8319                           
  8320                           ;daq.c: 299: uint16_t set_dac_a(const float voltage);daq.c: 300: {;daq.c: 301:  R.raw_da
      +                          c[0] = convert_dac_raw(voltage);
  8321                           ;stkvar	_voltage @ sp[(0)+-4]
  8322                           
  8323                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8324                           ;incstack = 0
  8325  00274C  0EFC               	movlw	-4
  8326  00274E  006F FF8F FFE6     	movff	plusw1,postinc1
  8327  002754  006F FF8F FFE6     	movff	plusw1,postinc1
  8328  00275A  006F FF8F FFE6     	movff	plusw1,postinc1
  8329  002760  006F FF8F FFE6     	movff	plusw1,postinc1
  8330  002766  ECF7  F0FD         	call	_convert_dac_raw	;wreg free
  8331  00276A  0060  F0A8  F120   	movff	btemp,_R+32	;volatile
  8332  002770  0060  F0AC  F121   	movff	btemp+1,_R+33	;volatile
  8333                           
  8334                           ; _set_dac_a: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  8335                           
  8336                           ;daq.c: 302:  return R.raw_dac[0];;	Return value of _set_dac_a is never used
  8337  002776  52E5               	movf	postdec1,f,c
  8338  002778  52E5               	movf	postdec1,f,c
  8339  00277A  52E5               	movf	postdec1,f,c
  8340  00277C  52E5               	movf	postdec1,f,c
  8341  00277E  0012               	return		;funcret
  8342  002780                     __end_of_set_dac_a:
  8343                           	opt callstack 0
  8344                           
  8345 ;; *************** function _convert_dac_raw *****************
  8346 ;; Defined at:
  8347 ;;		line 281 in file "daq.c"
  8348 ;; Parameters:    Size  Location     Type
  8349 ;;  voltage         4  [STACK] float 
  8350 ;; Auto vars:     Size  Location     Type
  8351 ;;		None
  8352 ;; Return value:  Size  Location     Type
  8353 ;;                  2  [STACK] unsigned short 
  8354 ;; Registers used:
  8355 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  8356 ;; Tracked objects:
  8357 ;;		On entry : 0/0
  8358 ;;		On exit  : 0/0
  8359 ;;		Unchanged: 0/0
  8360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8365 ;;Total ram usage:        0 bytes
  8366 ;; Hardware stack levels used:    1
  8367 ;; Hardware stack levels required when called:   16
  8368 ;; This function calls:
  8369 ;;		___fldiv
  8370 ;;		___flge
  8371 ;;		___fltol
  8372 ;; This function is called by:
  8373 ;;		_set_dac_a
  8374 ;;		_set_dac_b
  8375 ;; This function uses a reentrant model
  8376 ;;
  8377                           
  8378                           	psect	text10
  8379  01FBEE                     __ptext10:
  8380                           	opt callstack 0
  8381  01FBEE                     _convert_dac_raw:
  8382                           	opt callstack 13
  8383                           
  8384                           ;daq.c: 281: static uint16_t convert_dac_raw(float voltage);daq.c: 282: {;daq.c: 286:  i
      +                          f (voltage < 0.001)
  8385                           
  8386                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8387                           ;incstack = 0
  8388  01FBEE  0E6F               	movlw	111
  8389  01FBF0  6EE6               	movwf	postinc1,c
  8390  01FBF2  0E12               	movlw	18
  8391  01FBF4  6EE6               	movwf	postinc1,c
  8392  01FBF6  0E83               	movlw	131
  8393  01FBF8  6EE6               	movwf	postinc1,c
  8394  01FBFA  0E3A               	movlw	58
  8395  01FBFC  6EE6               	movwf	postinc1,c
  8396                           
  8397                           ;stkvar	_voltage @ sp[(-4)+-4]
  8398  01FBFE  0EF8               	movlw	-8
  8399  01FC00  006F FF8F FFE6     	movff	plusw1,postinc1
  8400  01FC06  006F FF8F FFE6     	movff	plusw1,postinc1
  8401  01FC0C  006F FF8F FFE6     	movff	plusw1,postinc1
  8402  01FC12  006F FF8F FFE6     	movff	plusw1,postinc1
  8403  01FC18  ECE9  F0F6         	call	___flge	;wreg free
  8404  01FC1C  B02A               	btfsc	btemp& (0+255),0,c
  8405  01FC1E  D018               	goto	l13811
  8406                           
  8407                           ;daq.c: 287:   voltage = 0.001;
  8408  01FC20  0E6F               	movlw	111
  8409  01FC22  6E32               	movwf	(btemp+8)^0,c
  8410  01FC24  0E12               	movlw	18
  8411  01FC26  6E33               	movwf	(btemp+9)^0,c
  8412  01FC28  0E83               	movlw	131
  8413  01FC2A  6E34               	movwf	(btemp+10)^0,c
  8414  01FC2C  0E3A               	movlw	58
  8415  01FC2E  6E35               	movwf	(btemp+11)^0,c
  8416                           
  8417                           ;stkvar	_voltage @ sp[(0)+-4]
  8418  01FC30  0EFC               	movlw	-4
  8419  01FC32  0060  F0CB  FFE3   	movff	btemp+8,plusw1
  8420  01FC38  0EFD               	movlw	-3
  8421  01FC3A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
  8422  01FC40  0EFE               	movlw	-2
  8423  01FC42  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  8424  01FC48  0EFF               	movlw	-1
  8425  01FC4A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8426  01FC50                     l13811:
  8427                           
  8428                           ;daq.c: 288:  if (voltage > 10.0)
  8429                           ;stkvar	_voltage @ sp[(0)+-4]
  8430  01FC50  0EFC               	movlw	-4
  8431  01FC52  006F FF8F FFE6     	movff	plusw1,postinc1
  8432  01FC58  006F FF8F FFE6     	movff	plusw1,postinc1
  8433  01FC5E  006F FF8F FFE6     	movff	plusw1,postinc1
  8434  01FC64  006F FF8F FFE6     	movff	plusw1,postinc1
  8435  01FC6A  0E00               	movlw	0
  8436  01FC6C  6EE6               	movwf	postinc1,c
  8437  01FC6E  0E00               	movlw	0
  8438  01FC70  6EE6               	movwf	postinc1,c
  8439  01FC72  0E20               	movlw	32
  8440  01FC74  6EE6               	movwf	postinc1,c
  8441  01FC76  0E41               	movlw	65
  8442  01FC78  6EE6               	movwf	postinc1,c
  8443  01FC7A  ECE9  F0F6         	call	___flge	;wreg free
  8444  01FC7E  B02A               	btfsc	btemp& (0+255),0,c
  8445  01FC80  D018               	goto	l13815
  8446                           
  8447                           ;daq.c: 289:   voltage = 10.0;
  8448  01FC82  0E00               	movlw	0
  8449  01FC84  6E32               	movwf	(btemp+8)^0,c
  8450  01FC86  0E00               	movlw	0
  8451  01FC88  6E33               	movwf	(btemp+9)^0,c
  8452  01FC8A  0E20               	movlw	32
  8453  01FC8C  6E34               	movwf	(btemp+10)^0,c
  8454  01FC8E  0E41               	movlw	65
  8455  01FC90  6E35               	movwf	(btemp+11)^0,c
  8456                           
  8457                           ;stkvar	_voltage @ sp[(0)+-4]
  8458  01FC92  0EFC               	movlw	-4
  8459  01FC94  0060  F0CB  FFE3   	movff	btemp+8,plusw1
  8460  01FC9A  0EFD               	movlw	-3
  8461  01FC9C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
  8462  01FCA2  0EFE               	movlw	-2
  8463  01FCA4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  8464  01FCAA  0EFF               	movlw	-1
  8465  01FCAC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8466  01FCB2                     l13815:
  8467                           
  8468                           ;daq.c: 293:  return(uint16_t) (voltage / 0.002442);
  8469  01FCB2  0EF6               	movlw	246
  8470  01FCB4  6EE6               	movwf	postinc1,c
  8471  01FCB6  0E09               	movlw	9
  8472  01FCB8  6EE6               	movwf	postinc1,c
  8473  01FCBA  0E20               	movlw	32
  8474  01FCBC  6EE6               	movwf	postinc1,c
  8475  01FCBE  0E3B               	movlw	59
  8476  01FCC0  6EE6               	movwf	postinc1,c
  8477                           
  8478                           ;stkvar	_voltage @ sp[(-4)+-4]
  8479  01FCC2  0EF8               	movlw	-8
  8480  01FCC4  006F FF8F FFE6     	movff	plusw1,postinc1
  8481  01FCCA  006F FF8F FFE6     	movff	plusw1,postinc1
  8482  01FCD0  006F FF8F FFE6     	movff	plusw1,postinc1
  8483  01FCD6  006F FF8F FFE6     	movff	plusw1,postinc1
  8484  01FCDC  ECB8  F0C3         	call	___fldiv	;wreg free
  8485  01FCE0  0060  F0AB  FFE6   	movff	btemp,postinc1
  8486  01FCE6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  8487  01FCEC  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  8488  01FCF2  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  8489  01FCF8  EC7D  F0F5         	call	___fltol	;wreg free
  8490                           
  8491                           ; _convert_dac_raw: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
  8492  01FCFC  52E5               	movf	postdec1,f,c
  8493  01FCFE  52E5               	movf	postdec1,f,c
  8494  01FD00  52E5               	movf	postdec1,f,c
  8495  01FD02  52E5               	movf	postdec1,f,c
  8496  01FD04  0012               	return		;funcret
  8497  01FD06                     __end_of_convert_dac_raw:
  8498                           	opt callstack 0
  8499                           
  8500 ;; *************** function _set_dac *****************
  8501 ;; Defined at:
  8502 ;;		line 257 in file "daq.c"
  8503 ;; Parameters:    Size  Location     Type
  8504 ;;		None
  8505 ;; Auto vars:     Size  Location     Type
  8506 ;;		None
  8507 ;; Return value:  Size  Location     Type
  8508 ;;                  1  [STACK] void 
  8509 ;; Registers used:
  8510 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  8511 ;; Tracked objects:
  8512 ;;		On entry : 0/0
  8513 ;;		On exit  : 0/0
  8514 ;;		Unchanged: 0/0
  8515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8520 ;;Total ram usage:        0 bytes
  8521 ;; Hardware stack levels used:    1
  8522 ;; Hardware stack levels required when called:   16
  8523 ;; This function calls:
  8524 ;;		_SPI1_Exchange8bit
  8525 ;;		_dac_spi_control
  8526 ;; This function is called by:
  8527 ;;		_main
  8528 ;; This function uses a reentrant model
  8529 ;;
  8530                           
  8531                           	psect	text11
  8532  000CC6                     __ptext11:
  8533                           	opt callstack 0
  8534  000CC6                     _set_dac:
  8535                           	opt callstack 14
  8536                           
  8537                           ;daq.c: 259:  while (!SPI1STATUSbits.TXBE);
  8538                           
  8539                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8540                           ;incstack = 0
  8541  000CC6  013D               	movlb	61	; () banked
  8542  000CC8  AB17               	btfss	23,5,b	;volatile
  8543  000CCA  D7FD               	goto	_set_dac
  8544                           
  8545                           ; BSR set to: 61
  8546                           
  8547                           ;daq.c: 260:  do { LATCbits.LATC2 = 1; } while(0);
  8548  000CCC  84BC               	bsf	188,2,c	;volatile
  8549                           
  8550                           ; BSR set to: 61
  8551                           
  8552                           ;daq.c: 261:  do { LATCbits.LATC0 = 1; } while(0);
  8553  000CCE  80BC               	bsf	188,0,c	;volatile
  8554                           
  8555                           ; BSR set to: 61
  8556                           ;daq.c: 262:  dac_spi_control(1);
  8557  000CD0  0E01               	movlw	1
  8558  000CD2  6EE6               	movwf	postinc1,c
  8559  000CD4  EC43  F00C         	call	_dac_spi_control	;wreg free
  8560                           
  8561                           ;daq.c: 263:  R.max5322_cmd.map.dac0 = R.raw_dac[0]&0xff;
  8562  000CD8  C120  F124         	movff	_R+32,_R+36	;volatile
  8563                           
  8564                           ;daq.c: 264:  R.max5322_cmd.map.dac1 = (R.raw_dac[0] >> 8) &0xf;
  8565  000CDC  EE20  F120         	lfsr	2,_R+32	;volatile
  8566  000CE0  006F FF78  F034    	movff	postinc2,btemp+10
  8567  000CE6  006F FF74  F035    	movff	postdec2,btemp+11
  8568  000CEC  0060  F0D4  F034   	movff	btemp+11,btemp+10
  8569  000CF2  6A35               	clrf	(btemp+11)^0,c
  8570  000CF4  0E0F               	movlw	15
  8571  000CF6  1634               	andwf	(btemp+10)^0,f,c
  8572  000CF8  0101               	movlb	1	; () banked
  8573  000CFA  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8574  000CFC  1834               	xorwf	(btemp+10)^0,w,c
  8575  000CFE  0BF0               	andlw	-16
  8576  000D00  1834               	xorwf	(btemp+10)^0,w,c
  8577  000D02  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8578                           
  8579                           ; BSR set to: 1
  8580                           ;daq.c: 265:  R.max5322_cmd.map.cont = 0b0100;
  8581  000D04  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8582  000D06  0B0F               	andlw	-241
  8583  000D08  0940               	iorlw	64
  8584  000D0A  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8585                           
  8586                           ; BSR set to: 1
  8587  000D0C  90BF               	bcf	191,0,c	;volatile
  8588                           
  8589                           ; BSR set to: 1
  8590                           ;daq.c: 267:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  8591  000D0E  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8592  000D10  6EE6               	movwf	postinc1,c
  8593  000D12  ECBE  F016         	call	_SPI1_Exchange8bit	;wreg free
  8594                           
  8595                           ; BSR set to: 57
  8596                           ;daq.c: 268:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  8597  000D16  0101               	movlb	1	; () banked
  8598  000D18  5124               	movf	(_R+36)& (0+255),w,b	;volatile
  8599  000D1A  6EE6               	movwf	postinc1,c
  8600  000D1C  ECBE  F016         	call	_SPI1_Exchange8bit	;wreg free
  8601                           
  8602                           ; BSR set to: 57
  8603  000D20  80BF               	bsf	191,0,c	;volatile
  8604                           
  8605                           ; BSR set to: 57
  8606                           ;daq.c: 270:  R.max5322_cmd.map.dac0 = R.raw_dac[1]&0xff;
  8607  000D22  C122  F124         	movff	_R+34,_R+36	;volatile
  8608                           
  8609                           ; BSR set to: 57
  8610                           ;daq.c: 271:  R.max5322_cmd.map.dac1 = (R.raw_dac[1] >> 8) &0xf;
  8611  000D26  EE20  F122         	lfsr	2,_R+34	;volatile
  8612  000D2A  006F FF78  F034    	movff	postinc2,btemp+10
  8613  000D30  006F FF74  F035    	movff	postdec2,btemp+11
  8614  000D36  0060  F0D4  F034   	movff	btemp+11,btemp+10
  8615  000D3C  6A35               	clrf	(btemp+11)^0,c
  8616  000D3E  0E0F               	movlw	15
  8617  000D40  1634               	andwf	(btemp+10)^0,f,c
  8618  000D42  0101               	movlb	1	; () banked
  8619  000D44  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8620  000D46  1834               	xorwf	(btemp+10)^0,w,c
  8621  000D48  0BF0               	andlw	-16
  8622  000D4A  1834               	xorwf	(btemp+10)^0,w,c
  8623  000D4C  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8624                           
  8625                           ; BSR set to: 1
  8626                           ;daq.c: 272:  R.max5322_cmd.map.cont = 0b0101;
  8627  000D4E  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8628  000D50  0B0F               	andlw	-241
  8629  000D52  0950               	iorlw	80
  8630  000D54  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8631                           
  8632                           ; BSR set to: 1
  8633  000D56  90BF               	bcf	191,0,c	;volatile
  8634                           
  8635                           ; BSR set to: 1
  8636                           ;daq.c: 274:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  8637  000D58  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8638  000D5A  6EE6               	movwf	postinc1,c
  8639  000D5C  ECBE  F016         	call	_SPI1_Exchange8bit	;wreg free
  8640                           
  8641                           ; BSR set to: 57
  8642                           ;daq.c: 275:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  8643  000D60  0101               	movlb	1	; () banked
  8644  000D62  5124               	movf	(_R+36)& (0+255),w,b	;volatile
  8645  000D64  6EE6               	movwf	postinc1,c
  8646  000D66  ECBE  F016         	call	_SPI1_Exchange8bit	;wreg free
  8647  000D6A                     l2044:
  8648  000D6A  013D               	movlb	61	; () banked
  8649  000D6C  AB17               	btfss	23,5,b	;volatile
  8650  000D6E  D7FD               	goto	l2044
  8651                           
  8652                           ; BSR set to: 61
  8653                           
  8654                           ;daq.c: 277:  do { LATFbits.LATF0 = 1; } while(0);
  8655  000D70  80BF               	bsf	191,0,c	;volatile
  8656                           
  8657                           ; BSR set to: 61
  8658                           ;daq.c: 278:  dac_spi_control(0);
  8659  000D72  0E00               	movlw	0
  8660  000D74  6EE6               	movwf	postinc1,c
  8661  000D76  EC43  F00C         	call	_dac_spi_control	;wreg free
  8662                           
  8663                           ; _set_dac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  8664  000D7A  0012               	return		;funcret
  8665  000D7C                     __end_of_set_dac:
  8666                           	opt callstack 0
  8667                           
  8668 ;; *************** function _dac_spi_control *****************
  8669 ;; Defined at:
  8670 ;;		line 209 in file "daq.c"
  8671 ;; Parameters:    Size  Location     Type
  8672 ;;  set             1  [STACK] _Bool 
  8673 ;; Auto vars:     Size  Location     Type
  8674 ;;		None
  8675 ;; Return value:  Size  Location     Type
  8676 ;;                  1  [STACK] void 
  8677 ;; Registers used:
  8678 ;;		wreg, fsr1l, fsr1h, status,2
  8679 ;; Tracked objects:
  8680 ;;		On entry : 3F/3D
  8681 ;;		On exit  : 0/0
  8682 ;;		Unchanged: 0/0
  8683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8688 ;;Total ram usage:        0 bytes
  8689 ;; Hardware stack levels used:    1
  8690 ;; Hardware stack levels required when called:   15
  8691 ;; This function calls:
  8692 ;;		Nothing
  8693 ;; This function is called by:
  8694 ;;		_set_dac
  8695 ;; This function uses a reentrant model
  8696 ;;
  8697                           
  8698                           	psect	text12
  8699  001886                     __ptext12:
  8700                           	opt callstack 0
  8701  001886                     _dac_spi_control:
  8702                           	opt callstack 14
  8703                           
  8704                           ;daq.c: 209: void dac_spi_control(_Bool set);daq.c: 210: {;daq.c: 211:  static _Bool ini
      +                          t = 0;;daq.c: 212:  static uint8_t S0, S1, S2, SC, SB;;daq.c: 214:  if (set) {
  8705                           ;stkvar	_set @ sp[(0)+-1]
  8706                           
  8707                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8708                           ;incstack = 0
  8709  001886  0EFF               	movlw	-1
  8710  001888  50E3               	movf	plusw1,w,c
  8711  00188A  B4D8               	btfsc	status,2,c
  8712  00188C  D022               	goto	l13803
  8713                           
  8714                           ;daq.c: 215:   SPI1CON0bits.EN = 0;
  8715  00188E  013D               	movlb	61	; () banked
  8716  001890  9F14               	bcf	20,7,b	;volatile
  8717                           
  8718                           ; BSR set to: 61
  8719                           ;daq.c: 216:   if (!init) {
  8720  001892  5052               	movf	dac_spi_control@init^0,w,c
  8721  001894  A4D8               	btfss	status,2,c
  8722  001896  D011               	goto	l13791
  8723                           
  8724                           ; BSR set to: 61
  8725                           ;daq.c: 217:    init = 1;
  8726  001898  0E01               	movlw	1
  8727  00189A  6E52               	movwf	dac_spi_control@init^0,c
  8728                           
  8729                           ; BSR set to: 61
  8730                           ;daq.c: 218:    S0 = SPI1CON0;
  8731  00189C  006F F450  F0CB    	movff	15636,dac_spi_control@S0	;volatile
  8732                           
  8733                           ; BSR set to: 61
  8734                           ;daq.c: 219:    S1 = SPI1CON1;
  8735  0018A2  006F F454  F0CA    	movff	15637,dac_spi_control@S1	;volatile
  8736                           
  8737                           ; BSR set to: 61
  8738                           ;daq.c: 220:    S2 = SPI1CON2;
  8739  0018A8  006F F458  F0C9    	movff	15638,dac_spi_control@S2	;volatile
  8740                           
  8741                           ; BSR set to: 61
  8742                           ;daq.c: 221:    SC = SPI1CLK;
  8743  0018AE  006F F470  F0C8    	movff	15644,dac_spi_control@SC	;volatile
  8744                           
  8745                           ; BSR set to: 61
  8746                           ;daq.c: 222:    SB = SPI1BAUD;
  8747  0018B4  006F F464  F0C7    	movff	15641,dac_spi_control@SB	;volatile
  8748  0018BA                     l13791:
  8749                           
  8750                           ; BSR set to: 61
  8751                           ;daq.c: 228:   SPI1CON1 = 0x00;
  8752  0018BA  6B15               	clrf	21,b	;volatile
  8753                           
  8754                           ; BSR set to: 61
  8755                           ;daq.c: 229:   SPI1CON1bits.CKE = 1;
  8756  0018BC  8D15               	bsf	21,6,b	;volatile
  8757                           
  8758                           ; BSR set to: 61
  8759                           ;daq.c: 230:   SPI1CON1bits.CKP = 0;
  8760  0018BE  9B15               	bcf	21,5,b	;volatile
  8761                           
  8762                           ; BSR set to: 61
  8763                           ;daq.c: 231:   SPI1CON1bits.SMP = 0;
  8764  0018C0  9F15               	bcf	21,7,b	;volatile
  8765                           
  8766                           ;daq.c: 233:   SPI1CON2 = 0x03;
  8767  0018C2  0E03               	movlw	3
  8768  0018C4  6F16               	movwf	22,b	;volatile
  8769                           
  8770                           ;daq.c: 235:   SPI1BAUD = 0x0f;
  8771  0018C6  0E0F               	movlw	15
  8772  0018C8  6F19               	movwf	25,b	;volatile
  8773                           
  8774                           ; BSR set to: 61
  8775                           ;daq.c: 237:   SPI1CLK = 0x00;
  8776  0018CA  6B1C               	clrf	28,b	;volatile
  8777                           
  8778                           ;daq.c: 239:   SPI1CON0 = 0x83;
  8779  0018CC  0E83               	movlw	131
  8780  0018CE  6F14               	movwf	20,b	;volatile
  8781  0018D0  D014               	goto	L4
  8782  0018D2                     l13803:
  8783                           
  8784                           ;daq.c: 242:   if (init) {
  8785  0018D2  5052               	movf	dac_spi_control@init^0,w,c
  8786  0018D4  B4D8               	btfsc	status,2,c
  8787  0018D6  D012               	goto	l2028
  8788                           
  8789                           ;daq.c: 246:    SPI1CON0bits.EN = 0;
  8790  0018D8  013D               	movlb	61	; () banked
  8791  0018DA  9F14               	bcf	20,7,b	;volatile
  8792                           
  8793                           ;daq.c: 247:    SPI1CON1 = S1;
  8794  0018DC  0060  F32B  FD15   	movff	dac_spi_control@S1,15637	;volatile
  8795                           
  8796                           ;daq.c: 248:    SPI1CON2 = S2;
  8797  0018E2  0060  F327  FD16   	movff	dac_spi_control@S2,15638	;volatile
  8798                           
  8799                           ;daq.c: 249:    SPI1CLK = SC;
  8800  0018E8  0060  F323  FD1C   	movff	dac_spi_control@SC,15644	;volatile
  8801                           
  8802                           ;daq.c: 250:    SPI1BAUD = SB;
  8803  0018EE  0060  F31F  FD19   	movff	dac_spi_control@SB,15641	;volatile
  8804                           
  8805                           ;daq.c: 251:    SPI1CON0 = S0;
  8806  0018F4  0060  F32F  FD14   	movff	dac_spi_control@S0,15636	;volatile
  8807  0018FA                     L4:
  8808                           
  8809                           ;daq.c: 252:    SPI1CON0bits.EN = 1;
  8810  0018FA  8F14               	bsf	20,7,b	;volatile
  8811  0018FC                     l2028:
  8812                           
  8813                           ; _dac_spi_control: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
  8814  0018FC  52E5               	movf	postdec1,f,c
  8815  0018FE  0012               	return		;funcret
  8816  001900                     __end_of_dac_spi_control:
  8817                           	opt callstack 0
  8818                           
  8819 ;; *************** function _read_cal_data *****************
  8820 ;; Defined at:
  8821 ;;		line 370 in file "daq.c"
  8822 ;; Parameters:    Size  Location     Type
  8823 ;;		None
  8824 ;; Auto vars:     Size  Location     Type
  8825 ;;  x               2  [STACK] unsigned short 
  8826 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
  8827 ;;		 -> r_cal(155), 
  8828 ;;  y               2  [STACK] unsigned short 
  8829 ;;  crcVal_save     1  [STACK] unsigned char 
  8830 ;; Return value:  Size  Location     Type
  8831 ;;                  1  [STACK] _Bool 
  8832 ;; Registers used:
  8833 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
  8834 ;; Tracked objects:
  8835 ;;		On entry : 0/39
  8836 ;;		On exit  : 0/0
  8837 ;;		Unchanged: 0/0
  8838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8843 ;;Total ram usage:        0 bytes
  8844 ;; Hardware stack levels used:    1
  8845 ;; Hardware stack levels required when called:   17
  8846 ;; This function calls:
  8847 ;;		_CRC_8BitDataWrite
  8848 ;;		_CRC_CalculatedResultGet
  8849 ;;		_CRC_Initialize
  8850 ;;		_CRC_IsBusy
  8851 ;;		_CRC_Start
  8852 ;;		_DATAEE_ReadByte
  8853 ;; This function is called by:
  8854 ;;		_main
  8855 ;; This function uses a reentrant model
  8856 ;;
  8857                           
  8858                           	psect	text13
  8859  01DCA2                     __ptext13:
  8860                           	opt callstack 0
  8861  01DCA2                     _read_cal_data:
  8862                           	opt callstack 0
  8863                           
  8864                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8865  01DCA2  0E07               	movlw	7
  8866  01DCA4  26E1               	addwf	fsr1l,f,c
  8867  01DCA6  0E00               	movlw	0
  8868  01DCA8  22E2               	addwfc	fsr1h,f,c
  8869                           
  8870                           ;daq.c: 372:  uint16_t x = 0, y;
  8871                           ;stkvar	_x @ sp[(-7)+0]
  8872                           
  8873                           ;incstack = 0
  8874  01DCAA  0EF9               	movlw	-7
  8875  01DCAC  6AE3               	clrf	plusw1,c
  8876  01DCAE  0EFA               	movlw	-6
  8877  01DCB0  6AE3               	clrf	plusw1,c
  8878                           
  8879                           ;daq.c: 373:  uint8_t *r_cal_ptr, crcVal_save;;daq.c: 375:  y = sizeof(r_cal);
  8880  01DCB2  0E9B               	movlw	155
  8881  01DCB4  6E34               	movwf	(btemp+10)^0,c
  8882  01DCB6  0E00               	movlw	0
  8883  01DCB8  6E35               	movwf	(btemp+11)^0,c
  8884                           
  8885                           ;stkvar	_y @ sp[(-7)+4]
  8886  01DCBA  0EFD               	movlw	-3
  8887  01DCBC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  8888  01DCC2  0EFE               	movlw	-2
  8889  01DCC4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8890                           
  8891                           ;daq.c: 376:  r_cal_ptr = (uint8_t*) & r_cal;
  8892                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8893  01DCCA  0E04               	movlw	high _r_cal
  8894  01DCCC  6E2A               	movwf	btemp^0,c
  8895  01DCCE  0EFC               	movlw	-4
  8896  01DCD0  0060  F0AB  FFE3   	movff	btemp,plusw1
  8897  01DCD6  0E40               	movlw	low _r_cal
  8898  01DCD8  6E2A               	movwf	btemp^0,c
  8899  01DCDA  0EFB               	movlw	-5
  8900  01DCDC  0060  F0AB  FFE3   	movff	btemp,plusw1
  8901                           
  8902                           ;daq.c: 378:  CRC_Initialize();
  8903  01DCE2  EC73  F00A         	call	_CRC_Initialize	;wreg free
  8904                           
  8905                           ; BSR set to: 0
  8906                           ;daq.c: 381:  CRC_Start();
  8907  01DCE6  ECF4  F017         	call	_CRC_Start	;wreg free
  8908  01DCEA                     l14237:
  8909                           
  8910                           ;daq.c: 384:   r_cal_ptr[x] = DATAEE_ReadByte(x);
  8911                           ;stkvar	_x @ sp[(-7)+0]
  8912  01DCEA  0EF9               	movlw	-7
  8913  01DCEC  006F FF8F FFE6     	movff	plusw1,postinc1
  8914  01DCF2  006F FF8F FFE6     	movff	plusw1,postinc1
  8915  01DCF8  ECDA  F013         	call	_DATAEE_ReadByte	;wreg free
  8916                           
  8917                           ;stkvar	_x @ sp[(-7)+0]
  8918  01DCFC  0EF9               	movlw	-7
  8919  01DCFE  006F FF8C  F034    	movff	plusw1,btemp+10
  8920  01DD04  0EFA               	movlw	-6
  8921  01DD06  006F FF8C  F035    	movff	plusw1,btemp+11
  8922                           
  8923                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8924  01DD0C  0EFB               	movlw	-5
  8925  01DD0E  006F FF8C  F032    	movff	plusw1,btemp+8
  8926  01DD14  0EFC               	movlw	-4
  8927  01DD16  006F FF8C  F033    	movff	plusw1,btemp+9
  8928  01DD1C  5034               	movf	(btemp+10)^0,w,c
  8929  01DD1E  2432               	addwf	(btemp+8)^0,w,c
  8930  01DD20  6ED9               	movwf	fsr2l,c
  8931  01DD22  5035               	movf	(btemp+11)^0,w,c
  8932  01DD24  2033               	addwfc	(btemp+9)^0,w,c
  8933  01DD26  6EDA               	movwf	fsr2h,c
  8934  01DD28  0060  F0AB  FFDF   	movff	btemp,indf2
  8935                           
  8936                           ;daq.c: 385:  } while (++x < y);
  8937                           ;stkvar	_y @ sp[(-7)+4]
  8938  01DD2E  0EFD               	movlw	-3
  8939  01DD30  006F FF8C  F034    	movff	plusw1,btemp+10
  8940  01DD36  0EFE               	movlw	-2
  8941  01DD38  006F FF8C  F035    	movff	plusw1,btemp+11
  8942                           
  8943                           ;stkvar	_x @ sp[(-7)+0]
  8944  01DD3E  0EF9               	movlw	-7
  8945  01DD40  50E3               	movf	plusw1,w,c
  8946  01DD42  0F01               	addlw	1
  8947  01DD44  6E2A               	movwf	btemp^0,c
  8948  01DD46  0EF9               	movlw	-7
  8949  01DD48  0060  F0AB  FFE3   	movff	btemp,plusw1
  8950  01DD4E  6A2A               	clrf	btemp^0,c
  8951  01DD50  0EFA               	movlw	-6
  8952  01DD52  50E3               	movf	plusw1,w,c
  8953  01DD54  202A               	addwfc	btemp^0,w,c
  8954  01DD56  6E2A               	movwf	btemp^0,c
  8955  01DD58  0EFA               	movlw	-6
  8956  01DD5A  0060  F0AB  FFE3   	movff	btemp,plusw1
  8957  01DD60  0EF9               	movlw	-7
  8958  01DD62  006F FF8C  F032    	movff	plusw1,btemp+8
  8959  01DD68  0EFA               	movlw	-6
  8960  01DD6A  006F FF8C  F033    	movff	plusw1,btemp+9
  8961  01DD70  5034               	movf	(btemp+10)^0,w,c
  8962  01DD72  5C32               	subwf	(btemp+8)^0,w,c
  8963  01DD74  5035               	movf	(btemp+11)^0,w,c
  8964  01DD76  5833               	subwfb	(btemp+9)^0,w,c
  8965  01DD78  A0D8               	btfss	status,0,c
  8966  01DD7A  D7B7               	goto	l14237
  8967                           
  8968                           ;daq.c: 386:  crcVal_save = r_cal.crc;
  8969                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  8970  01DD7C  0EFF               	movlw	-1
  8971  01DD7E  0061  F36B  FFE3   	movff	_r_cal+154,plusw1
  8972                           
  8973                           ;daq.c: 388:  if (r_cal.checkmark == 0x1957) {
  8974  01DD84  0E57               	movlw	87
  8975  01DD86  0104               	movlb	4	; () banked
  8976  01DD88  19D8               	xorwf	(_r_cal+152)& (0+255),w,b
  8977  01DD8A  E163               	bnz	l14257
  8978  01DD8C  0E19               	movlw	25
  8979  01DD8E  19D9               	xorwf	(_r_cal+153)& (0+255),w,b
  8980  01DD90  A4D8               	btfss	status,2,c
  8981  01DD92  D05F               	goto	u13460
  8982                           
  8983                           ; BSR set to: 4
  8984                           ;daq.c: 389:   r_cal.crc = 0x42;
  8985  01DD94  0E42               	movlw	66
  8986  01DD96  6FDA               	movwf	(_r_cal+154)& (0+255),b
  8987                           
  8988                           ; BSR set to: 4
  8989                           ;daq.c: 390:   x = 0;
  8990                           ;stkvar	_x @ sp[(-7)+0]
  8991  01DD98  0EF9               	movlw	-7
  8992  01DD9A  6AE3               	clrf	plusw1,c
  8993  01DD9C  0EFA               	movlw	-6
  8994  01DD9E  6AE3               	clrf	plusw1,c
  8995  01DDA0                     l14249:
  8996                           
  8997                           ;daq.c: 393:    CRC_8BitDataWrite(r_cal_ptr[x]);
  8998                           ;stkvar	_x @ sp[(-7)+0]
  8999  01DDA0  0EF9               	movlw	-7
  9000  01DDA2  006F FF8C  F034    	movff	plusw1,btemp+10
  9001  01DDA8  0EFA               	movlw	-6
  9002  01DDAA  006F FF8C  F035    	movff	plusw1,btemp+11
  9003                           
  9004                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  9005  01DDB0  0EFB               	movlw	-5
  9006  01DDB2  006F FF8C  F032    	movff	plusw1,btemp+8
  9007  01DDB8  0EFC               	movlw	-4
  9008  01DDBA  006F FF8C  F033    	movff	plusw1,btemp+9
  9009  01DDC0  5034               	movf	(btemp+10)^0,w,c
  9010  01DDC2  2432               	addwf	(btemp+8)^0,w,c
  9011  01DDC4  6ED9               	movwf	fsr2l,c
  9012  01DDC6  5035               	movf	(btemp+11)^0,w,c
  9013  01DDC8  2033               	addwfc	(btemp+9)^0,w,c
  9014  01DDCA  6EDA               	movwf	fsr2h,c
  9015  01DDCC  50DF               	movf	indf2,w,c
  9016  01DDCE  6EE6               	movwf	postinc1,c
  9017  01DDD0  EC63  F017         	call	_CRC_8BitDataWrite	;wreg free
  9018  01DDD4                     l14251:
  9019  01DDD4  EC85  F017         	call	_CRC_IsBusy	;wreg free
  9020  01DDD8  502A               	movf	btemp^0,w,c
  9021  01DDDA  A4D8               	btfss	status,2,c
  9022  01DDDC  D7FB               	goto	l14251
  9023                           
  9024                           ;daq.c: 395:   } while (++x < y);
  9025                           ;stkvar	_y @ sp[(-7)+4]
  9026  01DDDE  0EFD               	movlw	-3
  9027  01DDE0  006F FF8C  F034    	movff	plusw1,btemp+10
  9028  01DDE6  0EFE               	movlw	-2
  9029  01DDE8  006F FF8C  F035    	movff	plusw1,btemp+11
  9030                           
  9031                           ;stkvar	_x @ sp[(-7)+0]
  9032  01DDEE  0EF9               	movlw	-7
  9033  01DDF0  50E3               	movf	plusw1,w,c
  9034  01DDF2  0F01               	addlw	1
  9035  01DDF4  6E2A               	movwf	btemp^0,c
  9036  01DDF6  0EF9               	movlw	-7
  9037  01DDF8  0060  F0AB  FFE3   	movff	btemp,plusw1
  9038  01DDFE  6A2A               	clrf	btemp^0,c
  9039  01DE00  0EFA               	movlw	-6
  9040  01DE02  50E3               	movf	plusw1,w,c
  9041  01DE04  202A               	addwfc	btemp^0,w,c
  9042  01DE06  6E2A               	movwf	btemp^0,c
  9043  01DE08  0EFA               	movlw	-6
  9044  01DE0A  0060  F0AB  FFE3   	movff	btemp,plusw1
  9045  01DE10  0EF9               	movlw	-7
  9046  01DE12  006F FF8C  F032    	movff	plusw1,btemp+8
  9047  01DE18  0EFA               	movlw	-6
  9048  01DE1A  006F FF8C  F033    	movff	plusw1,btemp+9
  9049  01DE20  5034               	movf	(btemp+10)^0,w,c
  9050  01DE22  5C32               	subwf	(btemp+8)^0,w,c
  9051  01DE24  5035               	movf	(btemp+11)^0,w,c
  9052  01DE26  5833               	subwfb	(btemp+9)^0,w,c
  9053  01DE28  A0D8               	btfss	status,0,c
  9054  01DE2A  D7BA               	goto	l14249
  9055                           
  9056                           ;daq.c: 396:   if (CRC_CalculatedResultGet(0, 0x00) != crcVal_save)
  9057  01DE2C  0E00               	movlw	0
  9058  01DE2E  6EE6               	movwf	postinc1,c
  9059  01DE30  0E00               	movlw	0
  9060  01DE32  6EE6               	movwf	postinc1,c
  9061  01DE34  0E00               	movlw	0
  9062  01DE36  6EE6               	movwf	postinc1,c
  9063  01DE38  ECC4  F0F4         	call	_CRC_CalculatedResultGet	;wreg free
  9064                           
  9065                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  9066  01DE3C  0EFF               	movlw	-1
  9067  01DE3E  50E3               	movf	plusw1,w,c
  9068  01DE40  6E34               	movwf	(btemp+10)^0,c
  9069  01DE42  6A35               	clrf	(btemp+11)^0,c
  9070  01DE44  5034               	movf	(btemp+10)^0,w,c
  9071  01DE46  182A               	xorwf	btemp^0,w,c
  9072  01DE48  E104               	bnz	u13460
  9073  01DE4A  5035               	movf	(btemp+11)^0,w,c
  9074  01DE4C  182B               	xorwf	(btemp+1)^0,w,c
  9075  01DE4E  B4D8               	btfsc	status,2,c
  9076  01DE50  D002               	goto	l14265
  9077  01DE52                     u13460:
  9078  01DE52                     l14257:
  9079                           
  9080                           ;daq.c: 397:    return 0;
  9081  01DE52  0E00               	movlw	0
  9082  01DE54  D005               	goto	L5
  9083  01DE56                     l14265:
  9084                           
  9085                           ;daq.c: 401:  r_cal.crc = crcVal_save;
  9086                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  9087  01DE56  0EFF               	movlw	-1
  9088  01DE58  006F FF8C  F4DA    	movff	plusw1,_r_cal+154
  9089                           
  9090                           ;daq.c: 402:  return 1;
  9091  01DE5E  0E01               	movlw	1
  9092  01DE60                     L5:
  9093  01DE60  6E2A               	movwf	btemp^0,c
  9094                           
  9095                           ; _read_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  9096  01DE62  0EF9               	movlw	249
  9097  01DE64  26E1               	addwf	fsr1l,f,c
  9098  01DE66  0EFF               	movlw	255
  9099  01DE68  22E2               	addwfc	fsr1h,f,c
  9100  01DE6A  0012               	return		;funcret
  9101  01DE6C                     __end_of_read_cal_data:
  9102                           	opt callstack 0
  9103                           
  9104 ;; *************** function _DATAEE_ReadByte *****************
  9105 ;; Defined at:
  9106 ;;		line 194 in file "mcc_generated_files/memory.c"
  9107 ;; Parameters:    Size  Location     Type
  9108 ;;  bAdd            2  [STACK] unsigned short 
  9109 ;; Auto vars:     Size  Location     Type
  9110 ;;		None
  9111 ;; Return value:  Size  Location     Type
  9112 ;;                  1  [STACK] unsigned char 
  9113 ;; Registers used:
  9114 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  9115 ;; Tracked objects:
  9116 ;;		On entry : 0/39
  9117 ;;		On exit  : 0/0
  9118 ;;		Unchanged: 0/0
  9119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9124 ;;Total ram usage:        0 bytes
  9125 ;; Hardware stack levels used:    1
  9126 ;; Hardware stack levels required when called:   15
  9127 ;; This function calls:
  9128 ;;		Nothing
  9129 ;; This function is called by:
  9130 ;;		_read_cal_data
  9131 ;; This function uses a reentrant model
  9132 ;;
  9133                           
  9134                           	psect	text14
  9135  0027B4                     __ptext14:
  9136                           	opt callstack 0
  9137  0027B4                     _DATAEE_ReadByte:
  9138                           	opt callstack 14
  9139                           
  9140                           ;mcc_generated_files/memory.c: 194: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 195: {;mcc_generated_files/memory.c: 196:     NVMADRH = (uint8_t)((bAdd
      +                           >> 8) & 0x03);
  9141                           ;stkvar	_bAdd @ sp[(0)+-2]
  9142                           
  9143                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9144                           ;incstack = 0
  9145  0027B4  0EFF               	movlw	255
  9146  0027B6  24E1               	addwf	fsr1l,w,c
  9147  0027B8  6ED9               	movwf	fsr2l,c
  9148  0027BA  0EFF               	movlw	255
  9149  0027BC  20E2               	addwfc	fsr1h,w,c
  9150  0027BE  6EDA               	movwf	fsr2h,c
  9151  0027C0  50DF               	movf	indf2,w,c
  9152  0027C2  0B03               	andlw	3
  9153  0027C4  0139               	movlb	57	; () banked
  9154  0027C6  6FE1               	movwf	225,b	;volatile
  9155                           
  9156                           ; BSR set to: 57
  9157                           ;mcc_generated_files/memory.c: 197:     NVMADRL = (uint8_t)(bAdd & 0xFF);
  9158                           ;stkvar	_bAdd @ sp[(0)+-2]
  9159  0027C8  0EFE               	movlw	-2
  9160  0027CA  006F FF8F F9E0     	movff	plusw1,14816	;volatile
  9161                           
  9162                           ; BSR set to: 57
  9163                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.NVMREG = 0;
  9164  0027D0  0E3F               	movlw	-193
  9165  0027D2  17E5               	andwf	229,f,b	;volsfr
  9166                           
  9167                           ; BSR set to: 57
  9168                           ;mcc_generated_files/memory.c: 199:     NVMCON1bits.RD = 1;
  9169  0027D4  81E5               	bsf	229,0,b	;volsfr
  9170                           
  9171                           ; BSR set to: 57
  9172                           ;mcc_generated_files/memory.c: 200:     __nop();
  9173  0027D6  F000               	nop	
  9174                           
  9175                           ;mcc_generated_files/memory.c: 201:     __nop();
  9176  0027D8  F000               	nop	
  9177                           
  9178                           ;mcc_generated_files/memory.c: 203:     return (NVMDAT);
  9179  0027DA  006E F78C  F02A    	movff	14819,btemp	;volatile
  9180                           
  9181                           ; _DATAEE_ReadByte: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  9182  0027E0  52E5               	movf	postdec1,f,c
  9183  0027E2  52E5               	movf	postdec1,f,c
  9184  0027E4  0012               	return		;funcret
  9185  0027E6                     __end_of_DATAEE_ReadByte:
  9186                           	opt callstack 0
  9187                           
  9188 ;; *************** function _load_hist_data *****************
  9189 ;; Defined at:
  9190 ;;		line 224 in file "mbmc.c"
  9191 ;; Parameters:    Size  Location     Type
  9192 ;;		None
  9193 ;; Auto vars:     Size  Location     Type
  9194 ;;  esr_rescale     2  [STACK] short 
  9195 ;; Return value:  Size  Location     Type
  9196 ;;                  1  [STACK] void 
  9197 ;; Registers used:
  9198 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, prodl, prodh
  9199 ;; Tracked objects:
  9200 ;;		On entry : 3F/1
  9201 ;;		On exit  : 3F/39
  9202 ;;		Unchanged: 0/0
  9203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9208 ;;Total ram usage:        0 bytes
  9209 ;; Hardware stack levels used:    1
  9210 ;; Hardware stack levels required when called:   16
  9211 ;; This function calls:
  9212 ;;		___fldiv
  9213 ;;		___flmul
  9214 ;;		___fltol
  9215 ;;		_start_bsoc
  9216 ;;		_stop_bsoc
  9217 ;;		_time
  9218 ;; This function is called by:
  9219 ;;		_main
  9220 ;; This function uses a reentrant model
  9221 ;;
  9222                           
  9223                           	psect	text15
  9224  01C8FC                     __ptext15:
  9225                           	opt callstack 0
  9226  01C8FC                     _load_hist_data:
  9227                           	opt callstack 0
  9228                           
  9229                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9230  01C8FC  52E6               	movf	postinc1,f,c
  9231  01C8FE  52E6               	movf	postinc1,f,c
  9232                           
  9233                           ;mbmc.c: 226:  int16_t esr_rescale;;mbmc.c: 228:  stop_bsoc();
  9234                           
  9235                           ;incstack = 0
  9236  01C900  EC00  F018         	call	_stop_bsoc	;wreg free
  9237                           
  9238                           ; BSR set to: 57
  9239                           ;mbmc.c: 229:  esr_rescale = (int16_t) (C.esr * 1000.0);
  9240  01C904  0E00               	movlw	0
  9241  01C906  6EE6               	movwf	postinc1,c
  9242  01C908  0E00               	movlw	0
  9243  01C90A  6EE6               	movwf	postinc1,c
  9244  01C90C  0E7A               	movlw	122
  9245  01C90E  6EE6               	movwf	postinc1,c
  9246  01C910  0E44               	movlw	68
  9247  01C912  6EE6               	movwf	postinc1,c
  9248  01C914  EE22  F187         	lfsr	2,_C+136	;volatile
  9249  01C918  006F FF7B FFE6     	movff	postinc2,postinc1
  9250  01C91E  006F FF7B FFE6     	movff	postinc2,postinc1
  9251  01C924  006F FF7B FFE6     	movff	postinc2,postinc1
  9252  01C92A  006F FF7B FFE6     	movff	postinc2,postinc1
  9253  01C930  EC67  F0B8         	call	___flmul	;wreg free
  9254  01C934  0060  F0AB  FFE6   	movff	btemp,postinc1
  9255  01C93A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9256  01C940  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9257  01C946  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9258  01C94C  EC7D  F0F5         	call	___fltol	;wreg free
  9259  01C950  0060  F0A8  F034   	movff	btemp,btemp+10
  9260  01C956  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9261                           
  9262                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9263  01C95C  0EFE               	movlw	-2
  9264  01C95E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  9265  01C964  0EFF               	movlw	-1
  9266  01C966  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  9267                           
  9268                           ;mbmc.c: 230:  C.hist[0].updates++;
  9269  01C96C  EE22  F1D9         	lfsr	2,_C+218	;volatile
  9270  01C970  2ADE               	incf	postinc2,f,c
  9271  01C972  0E00               	movlw	0
  9272  01C974  22DE               	addwfc	postinc2,f,c
  9273  01C976  22DE               	addwfc	postinc2,f,c
  9274  01C978  22DE               	addwfc	postinc2,f,c
  9275                           
  9276                           ;mbmc.c: 231:  C.hist[0].h[12] += (int16_t) (C.pvkw / 10.0);
  9277  01C97A  0E00               	movlw	0
  9278  01C97C  6EE6               	movwf	postinc1,c
  9279  01C97E  0E00               	movlw	0
  9280  01C980  6EE6               	movwf	postinc1,c
  9281  01C982  0E20               	movlw	32
  9282  01C984  6EE6               	movwf	postinc1,c
  9283  01C986  0E41               	movlw	65
  9284  01C988  6EE6               	movwf	postinc1,c
  9285  01C98A  EE22  F1A7         	lfsr	2,_C+168	;volatile
  9286  01C98E  006F FF7B FFE6     	movff	postinc2,postinc1
  9287  01C994  006F FF7B FFE6     	movff	postinc2,postinc1
  9288  01C99A  006F FF7B FFE6     	movff	postinc2,postinc1
  9289  01C9A0  006F FF7B FFE6     	movff	postinc2,postinc1
  9290  01C9A6  ECB8  F0C3         	call	___fldiv	;wreg free
  9291  01C9AA  0060  F0AB  FFE6   	movff	btemp,postinc1
  9292  01C9B0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9293  01C9B6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9294  01C9BC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9295  01C9C2  EC7D  F0F5         	call	___fltol	;wreg free
  9296  01C9C6  0060  F0A8  F034   	movff	btemp,btemp+10
  9297  01C9CC  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9298  01C9D2  EE22  F1F5         	lfsr	2,_C+246	;volatile
  9299  01C9D6  5034               	movf	(btemp+10)^0,w,c
  9300  01C9D8  26DE               	addwf	postinc2,f,c
  9301  01C9DA  5035               	movf	(btemp+11)^0,w,c
  9302  01C9DC  22DD               	addwfc	postdec2,f,c
  9303                           
  9304                           ;mbmc.c: 232:  C.hist[0].h[11]++;
  9305  01C9DE  EE22  F1F3         	lfsr	2,_C+244	;volatile
  9306  01C9E2  2ADE               	incf	postinc2,f,c
  9307  01C9E4  0E00               	movlw	0
  9308  01C9E6  22DD               	addwfc	postdec2,f,c
  9309                           
  9310                           ;mbmc.c: 233:  C.hist[10].h[10] = esr_rescale;
  9311                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9312  01C9E8  50E1               	movf	fsr1l,w,c
  9313  01C9EA  0FFE               	addlw	-2
  9314  01C9EC  6ED9               	movwf	fsr2l,c
  9315  01C9EE  50E2               	movf	fsr1h,w,c
  9316  01C9F0  6EDA               	movwf	fsr2h,c
  9317  01C9F2  0EFF               	movlw	255
  9318  01C9F4  22DA               	addwfc	fsr2h,f,c
  9319  01C9F6  006F FF78  FDBB    	movff	postinc2,_C+1212	;volatile
  9320  01C9FC  006F FF74  FDBC    	movff	postdec2,_C+1213	;volatile
  9321                           
  9322                           ;mbmc.c: 234:  C.hist[10].h[9] = esr_rescale;
  9323                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9324  01CA02  50E1               	movf	fsr1l,w,c
  9325  01CA04  0FFE               	addlw	-2
  9326  01CA06  6ED9               	movwf	fsr2l,c
  9327  01CA08  50E2               	movf	fsr1h,w,c
  9328  01CA0A  6EDA               	movwf	fsr2h,c
  9329  01CA0C  0EFF               	movlw	255
  9330  01CA0E  22DA               	addwfc	fsr2h,f,c
  9331  01CA10  006F FF78  FDB9    	movff	postinc2,_C+1210	;volatile
  9332  01CA16  006F FF74  FDBA    	movff	postdec2,_C+1211	;volatile
  9333                           
  9334                           ;mbmc.c: 235:  C.hist[0].h[6] = C.dynamic_ah;
  9335  01CA1C  EE22  F18F         	lfsr	2,_C+144	;volatile
  9336  01CA20  006F FF7B FFE6     	movff	postinc2,postinc1
  9337  01CA26  006F FF7B FFE6     	movff	postinc2,postinc1
  9338  01CA2C  006F FF7B FFE6     	movff	postinc2,postinc1
  9339  01CA32  006F FF7B FFE6     	movff	postinc2,postinc1
  9340  01CA38  EC7D  F0F5         	call	___fltol	;wreg free
  9341  01CA3C  0060  F0A8  F034   	movff	btemp,btemp+10
  9342  01CA42  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9343  01CA48  0060  F0D0  F9E9   	movff	btemp+10,_C+234	;volatile
  9344  01CA4E  0060  F0D4  F9EA   	movff	btemp+11,_C+235	;volatile
  9345                           
  9346                           ;mbmc.c: 236:  C.hist[0].h[0] = C.dynamic_ah_adj;
  9347  01CA54  EE22  F19B         	lfsr	2,_C+156	;volatile
  9348  01CA58  006F FF7B FFE6     	movff	postinc2,postinc1
  9349  01CA5E  006F FF7B FFE6     	movff	postinc2,postinc1
  9350  01CA64  006F FF7B FFE6     	movff	postinc2,postinc1
  9351  01CA6A  006F FF7B FFE6     	movff	postinc2,postinc1
  9352  01CA70  EC7D  F0F5         	call	___fltol	;wreg free
  9353  01CA74  0060  F0A8  F034   	movff	btemp,btemp+10
  9354  01CA7A  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9355  01CA80  0060  F0D0  F9DD   	movff	btemp+10,_C+222	;volatile
  9356  01CA86  0060  F0D4  F9DE   	movff	btemp+11,_C+223	;volatile
  9357                           
  9358                           ;mbmc.c: 237:  C.hist[0].pclock = time(((void*)0));
  9359  01CA8C  0E00               	movlw	0
  9360  01CA8E  6EE6               	movwf	postinc1,c
  9361  01CA90  0E00               	movlw	0
  9362  01CA92  6EE6               	movwf	postinc1,c
  9363  01CA94  EC25  F00F         	call	_time	;wreg free
  9364  01CA98  52E5               	movf	postdec1,f,c
  9365  01CA9A  006F FF9C  F041    	movff	indf1,btemp+23
  9366  01CAA0  52E5               	movf	postdec1,f,c
  9367  01CAA2  006F FF9C  F040    	movff	indf1,btemp+22
  9368  01CAA8  52E5               	movf	postdec1,f,c
  9369  01CAAA  006F FF9C  F03F    	movff	indf1,btemp+21
  9370  01CAB0  52E5               	movf	postdec1,f,c
  9371  01CAB2  006F FF9C  F03E    	movff	indf1,btemp+20
  9372  01CAB8  52E5               	movf	postdec1,f,c
  9373  01CABA  006F FF9C  F03D    	movff	indf1,btemp+19
  9374  01CAC0  52E5               	movf	postdec1,f,c
  9375  01CAC2  006F FF9C  F03C    	movff	indf1,btemp+18
  9376  01CAC8  52E5               	movf	postdec1,f,c
  9377  01CACA  006F FF9C  F03B    	movff	indf1,btemp+17
  9378  01CAD0  52E5               	movf	postdec1,f,c
  9379  01CAD2  006F FF9C  F03A    	movff	indf1,btemp+16
  9380  01CAD8  EE22  F1B9         	lfsr	2,_C+186	;volatile
  9381  01CADC  0060  F0EB  FFDE   	movff	btemp+16,postinc2
  9382  01CAE2  0060  F0EF  FFDE   	movff	btemp+17,postinc2
  9383  01CAE8  0060  F0F3  FFDE   	movff	btemp+18,postinc2
  9384  01CAEE  0060  F0F7  FFDE   	movff	btemp+19,postinc2
  9385  01CAF4  0060  F0FB  FFDE   	movff	btemp+20,postinc2
  9386  01CAFA  0060  F0FF  FFDE   	movff	btemp+21,postinc2
  9387  01CB00  0060  F103  FFDE   	movff	btemp+22,postinc2
  9388  01CB06  0060  F107  FFDE   	movff	btemp+23,postinc2
  9389                           
  9390                           ; BSR set to: 57
  9391                           ;mbmc.c: 238:  C.dynamic_ah = 0.0;
  9392  01CB0C  0E00               	movlw	0
  9393  01CB0E  006F FFA0  F98F    	movff	wreg,_C+144	;volatile
  9394  01CB14  0E00               	movlw	0
  9395  01CB16  006F FFA0  F990    	movff	wreg,_C+145	;volatile
  9396  01CB1C  0E00               	movlw	0
  9397  01CB1E  006F FFA0  F991    	movff	wreg,_C+146	;volatile
  9398  01CB24  0E00               	movlw	0
  9399  01CB26  006F FFA0  F992    	movff	wreg,_C+147	;volatile
  9400                           
  9401                           ; BSR set to: 57
  9402                           ;mbmc.c: 239:  C.dynamic_ah_adj = 0.0;
  9403  01CB2C  0E00               	movlw	0
  9404  01CB2E  006F FFA0  F99B    	movff	wreg,_C+156	;volatile
  9405  01CB34  0E00               	movlw	0
  9406  01CB36  006F FFA0  F99C    	movff	wreg,_C+157	;volatile
  9407  01CB3C  0E00               	movlw	0
  9408  01CB3E  006F FFA0  F99D    	movff	wreg,_C+158	;volatile
  9409  01CB44  0E00               	movlw	0
  9410  01CB46  006F FFA0  F99E    	movff	wreg,_C+159	;volatile
  9411                           
  9412                           ; BSR set to: 57
  9413                           ;mbmc.c: 240:  start_bsoc();
  9414  01CB4C  EC7C  F016         	call	_start_bsoc	;wreg free
  9415                           
  9416                           ; BSR set to: 57
  9417                           ; _load_hist_data: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9418  01CB50  52E5               	movf	postdec1,f,c
  9419  01CB52  52E5               	movf	postdec1,f,c
  9420  01CB54  0012               	return		;funcret
  9421  01CB56                     __end_of_load_hist_data:
  9422                           	opt callstack 0
  9423                           
  9424 ;; *************** function _init_port_dma *****************
  9425 ;; Defined at:
  9426 ;;		line 104 in file "eadog.c"
  9427 ;; Parameters:    Size  Location     Type
  9428 ;;		None
  9429 ;; Auto vars:     Size  Location     Type
  9430 ;;		None
  9431 ;; Return value:  Size  Location     Type
  9432 ;;                  1  [STACK] void 
  9433 ;; Registers used:
  9434 ;;		wreg, status,2
  9435 ;; Tracked objects:
  9436 ;;		On entry : 0/2
  9437 ;;		On exit  : 3F/3B
  9438 ;;		Unchanged: 0/0
  9439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9444 ;;Total ram usage:        0 bytes
  9445 ;; Hardware stack levels used:    1
  9446 ;; Hardware stack levels required when called:   15
  9447 ;; This function calls:
  9448 ;;		Nothing
  9449 ;; This function is called by:
  9450 ;;		_main
  9451 ;; This function uses a reentrant model
  9452 ;;
  9453                           
  9454                           	psect	text16
  9455  0027E6                     __ptext16:
  9456                           	opt callstack 0
  9457  0027E6                     _init_port_dma:
  9458                           	opt callstack 15
  9459                           
  9460                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
  9461                           
  9462                           ; BSR set to: 57
  9463                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9464                           ;incstack = 0
  9465  0027E6  0E3F               	movlw	-193
  9466  0027E8  013B               	movlb	59	; () banked
  9467  0027EA  17DD               	andwf	221,f,b	;volatile
  9468                           
  9469                           ; BSR set to: 59
  9470                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
  9471  0027EC  9BDD               	bcf	221,5,b	;volatile
  9472                           
  9473                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
  9474  0027EE  51DD               	movf	221,w,b	;volatile
  9475  0027F0  0BF9               	andlw	-7
  9476  0027F2  0902               	iorlw	2
  9477  0027F4  6FDD               	movwf	221,b	;volatile
  9478                           
  9479                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
  9480  0027F6  0EE7               	movlw	-25
  9481  0027F8  17DD               	andwf	221,f,b	;volatile
  9482                           
  9483                           ; BSR set to: 59
  9484                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
  9485  0027FA  81DD               	bsf	221,0,b	;volatile
  9486                           
  9487                           ; BSR set to: 59
  9488                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
  9489  0027FC  9DDC               	bcf	220,6,b	;volatile
  9490                           
  9491                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
  9492  0027FE  0E3D               	movlw	61
  9493  002800  6FD1               	movwf	209,b	;volatile
  9494  002802  0EEA               	movlw	234
  9495  002804  6FD0               	movwf	208,b	;volatile
  9496                           
  9497                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
  9498  002806  0EFF               	movlw	low _port_data
  9499  002808  6FD9               	movwf	217,b	;volatile
  9500  00280A  0E06               	movlw	high _port_data
  9501  00280C  6FDA               	movwf	218,b	;volatile
  9502  00280E  0E00               	movlw	low (_port_data shr (0+16))
  9503  002810  6FDB               	movwf	219,b	;volatile
  9504                           
  9505                           ; BSR set to: 59
  9506                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
  9507  002812  9BDC               	bcf	220,5,b	;volatile
  9508                           
  9509                           ; BSR set to: 59
  9510                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  9511  002814  0012               	return		;funcret
  9512  002816                     __end_of_init_port_dma:
  9513                           	opt callstack 0
  9514                           
  9515 ;; *************** function _init_display *****************
  9516 ;; Defined at:
  9517 ;;		line 38 in file "eadog.c"
  9518 ;; Parameters:    Size  Location     Type
  9519 ;;		None
  9520 ;; Auto vars:     Size  Location     Type
  9521 ;;		None
  9522 ;; Return value:  Size  Location     Type
  9523 ;;                  1  [STACK] void 
  9524 ;; Registers used:
  9525 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9526 ;; Tracked objects:
  9527 ;;		On entry : 3F/3B
  9528 ;;		On exit  : 3F/3D
  9529 ;;		Unchanged: 0/0
  9530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9535 ;;Total ram usage:        0 bytes
  9536 ;; Hardware stack levels used:    1
  9537 ;; Hardware stack levels required when called:   17
  9538 ;; This function calls:
  9539 ;;		_ringBufS_init
  9540 ;;		_send_lcd_cmd
  9541 ;;		_send_lcd_cmd_long
  9542 ;;		_send_lcd_data
  9543 ;;		_wdtdelay
  9544 ;; This function is called by:
  9545 ;;		_main
  9546 ;; This function uses a reentrant model
  9547 ;;
  9548                           
  9549                           	psect	text17
  9550  000682                     __ptext17:
  9551                           	opt callstack 0
  9552  000682                     _init_display:
  9553                           	opt callstack 13
  9554                           
  9555                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  9556                           
  9557                           ; BSR set to: 59
  9558                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9559                           ;incstack = 0
  9560  000682  0E43               	movlw	low _ring_buf1
  9561  000684  0100               	movlb	0	; () banked
  9562  000686  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  9563  000688  0E05               	movlw	high _ring_buf1
  9564  00068A  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  9565                           
  9566                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  9567  00068C  0E00               	movlw	low _ring_buf2
  9568  00068E  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  9569  000690  0E05               	movlw	high _ring_buf2
  9570  000692  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  9571                           
  9572                           ; BSR set to: 0
  9573                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  9574  000694  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  9575  00069A  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  9576  0006A0  ECC1  F014         	call	_ringBufS_init	;wreg free
  9577                           
  9578                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  9579  0006A4  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  9580  0006AA  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  9581  0006B0  ECC1  F014         	call	_ringBufS_init	;wreg free
  9582                           
  9583                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  9584  0006B4  84BE               	bsf	190,2,c	;volatile
  9585                           
  9586                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
  9587  0006B6  013D               	movlb	61	; () banked
  9588  0006B8  9F14               	bcf	20,7,b	;volatile
  9589                           
  9590                           ; BSR set to: 61
  9591                           ;eadog.c: 49:  SPI1CON1 = 0x20;
  9592  0006BA  0E20               	movlw	32
  9593  0006BC  6F15               	movwf	21,b	;volatile
  9594                           
  9595                           ; BSR set to: 61
  9596                           ;eadog.c: 51:  SPI1CON2 = 0x03;
  9597  0006BE  0E03               	movlw	3
  9598  0006C0  6F16               	movwf	22,b	;volatile
  9599                           
  9600                           ; BSR set to: 61
  9601                           ;eadog.c: 53:  SPI1BAUD = 0x04;
  9602  0006C2  0E04               	movlw	4
  9603  0006C4  6F19               	movwf	25,b	;volatile
  9604                           
  9605                           ; BSR set to: 61
  9606                           ;eadog.c: 55:  SPI1CLK = 0x02;
  9607  0006C6  0E02               	movlw	2
  9608  0006C8  6F1C               	movwf	28,b	;volatile
  9609                           
  9610                           ; BSR set to: 61
  9611                           ;eadog.c: 57:  SPI1CON0 = 0x83;
  9612  0006CA  0E83               	movlw	131
  9613  0006CC  6F14               	movwf	20,b	;volatile
  9614                           
  9615                           ; BSR set to: 61
  9616                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
  9617  0006CE  8F14               	bsf	20,7,b	;volatile
  9618                           
  9619                           ; BSR set to: 61
  9620                           ;eadog.c: 60:  wdtdelay(350000);
  9621  0006D0  0E30               	movlw	48
  9622  0006D2  6EE6               	movwf	postinc1,c
  9623  0006D4  0E57               	movlw	87
  9624  0006D6  6EE6               	movwf	postinc1,c
  9625  0006D8  0E05               	movlw	5
  9626  0006DA  6EE6               	movwf	postinc1,c
  9627  0006DC  0E00               	movlw	0
  9628  0006DE  6EE6               	movwf	postinc1,c
  9629  0006E0  EC81  F00F         	call	_wdtdelay	;wreg free
  9630                           
  9631                           ; BSR set to: 0
  9632                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
  9633  0006E4  0E46               	movlw	70
  9634  0006E6  6EE6               	movwf	postinc1,c
  9635  0006E8  EC09  F012         	call	_send_lcd_cmd_long	;wreg free
  9636                           
  9637                           ; BSR set to: 0
  9638                           ;eadog.c: 62:  send_lcd_cmd(0x41);
  9639  0006EC  0E41               	movlw	65
  9640  0006EE  6EE6               	movwf	postinc1,c
  9641  0006F0  EC29  F012         	call	_send_lcd_cmd	;wreg free
  9642                           
  9643                           ; BSR set to: 0
  9644                           ;eadog.c: 63:  wdtdelay(80);
  9645  0006F4  0E50               	movlw	80
  9646  0006F6  6EE6               	movwf	postinc1,c
  9647  0006F8  0E00               	movlw	0
  9648  0006FA  6EE6               	movwf	postinc1,c
  9649  0006FC  0E00               	movlw	0
  9650  0006FE  6EE6               	movwf	postinc1,c
  9651  000700  0E00               	movlw	0
  9652  000702  6EE6               	movwf	postinc1,c
  9653  000704  EC81  F00F         	call	_wdtdelay	;wreg free
  9654                           
  9655                           ; BSR set to: 0
  9656                           ;eadog.c: 64:  send_lcd_cmd(0x53);
  9657  000708  0E53               	movlw	83
  9658  00070A  6EE6               	movwf	postinc1,c
  9659  00070C  EC29  F012         	call	_send_lcd_cmd	;wreg free
  9660                           
  9661                           ; BSR set to: 0
  9662                           ;eadog.c: 65:  send_lcd_data(2);
  9663  000710  0E02               	movlw	2
  9664  000712  6EE6               	movwf	postinc1,c
  9665  000714  ECEE  F015         	call	_send_lcd_data	;wreg free
  9666                           
  9667                           ; BSR set to: 0
  9668                           ;eadog.c: 66:  wdtdelay(80);
  9669  000718  0E50               	movlw	80
  9670  00071A  6EE6               	movwf	postinc1,c
  9671  00071C  0E00               	movlw	0
  9672  00071E  6EE6               	movwf	postinc1,c
  9673  000720  0E00               	movlw	0
  9674  000722  6EE6               	movwf	postinc1,c
  9675  000724  0E00               	movlw	0
  9676  000726  6EE6               	movwf	postinc1,c
  9677  000728  EC81  F00F         	call	_wdtdelay	;wreg free
  9678                           
  9679                           ; BSR set to: 0
  9680                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
  9681  00072C  0E51               	movlw	81
  9682  00072E  6EE6               	movwf	postinc1,c
  9683  000730  EC09  F012         	call	_send_lcd_cmd_long	;wreg free
  9684                           
  9685                           ; BSR set to: 0
  9686                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
  9687  000734  013D               	movlb	61	; () banked
  9688  000736  9F14               	bcf	20,7,b	;volatile
  9689                           
  9690                           ; BSR set to: 61
  9691                           ;eadog.c: 69:  SPI1CON2 = 0x02;
  9692  000738  0E02               	movlw	2
  9693  00073A  6F16               	movwf	22,b	;volatile
  9694                           
  9695                           ; BSR set to: 61
  9696                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
  9697  00073C  8F14               	bsf	20,7,b	;volatile
  9698                           
  9699                           ; BSR set to: 61
  9700                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
  9701  00073E  931A               	bcf	26,1,b	;volatile
  9702                           
  9703                           ; BSR set to: 61
  9704                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
  9705  000740  0E3F               	movlw	-193
  9706  000742  013B               	movlb	59	; () banked
  9707  000744  17FD               	andwf	253,f,b	;volatile
  9708                           
  9709                           ; BSR set to: 59
  9710                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
  9711  000746  9BFD               	bcf	253,5,b	;volatile
  9712                           
  9713                           ; BSR set to: 59
  9714                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
  9715  000748  51FD               	movf	253,w,b	;volatile
  9716  00074A  0BF9               	andlw	-7
  9717  00074C  0902               	iorlw	2
  9718  00074E  6FFD               	movwf	253,b	;volatile
  9719                           
  9720                           ; BSR set to: 59
  9721                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
  9722  000750  0EE7               	movlw	-25
  9723  000752  17FD               	andwf	253,f,b	;volatile
  9724                           
  9725                           ; BSR set to: 59
  9726                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
  9727  000754  81FD               	bsf	253,0,b	;volatile
  9728                           
  9729                           ; BSR set to: 59
  9730                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
  9731  000756  0E43               	movlw	low _ring_buf1
  9732  000758  6FF9               	movwf	249,b	;volatile
  9733  00075A  0E05               	movlw	high _ring_buf1
  9734  00075C  6FFA               	movwf	250,b	;volatile
  9735  00075E  0E00               	movlw	low (_ring_buf1 shr (0+16))
  9736  000760  6FFB               	movwf	251,b	;volatile
  9737                           
  9738                           ; BSR set to: 59
  9739                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
  9740  000762  9BFC               	bcf	252,5,b	;volatile
  9741                           
  9742                           ; BSR set to: 59
  9743                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
  9744  000764  013D               	movlb	61	; () banked
  9745  000766  831A               	bsf	26,1,b	;volatile
  9746                           
  9747                           ; BSR set to: 61
  9748                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
  9749  000768  94BE               	bcf	190,2,c	;volatile
  9750                           
  9751                           ; BSR set to: 61
  9752                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  9753  00076A  0012               	return		;funcret
  9754  00076C                     __end_of_init_display:
  9755                           	opt callstack 0
  9756                           
  9757 ;; *************** function _send_lcd_data *****************
  9758 ;; Defined at:
  9759 ;;		line 123 in file "eadog.c"
  9760 ;; Parameters:    Size  Location     Type
  9761 ;;  data            1  [STACK] const unsigned char 
  9762 ;; Auto vars:     Size  Location     Type
  9763 ;;		None
  9764 ;; Return value:  Size  Location     Type
  9765 ;;                  1  [STACK] void 
  9766 ;; Registers used:
  9767 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9768 ;; Tracked objects:
  9769 ;;		On entry : 3F/0
  9770 ;;		On exit  : 3F/0
  9771 ;;		Unchanged: 0/0
  9772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9777 ;;Total ram usage:        0 bytes
  9778 ;; Hardware stack levels used:    1
  9779 ;; Hardware stack levels required when called:   16
  9780 ;; This function calls:
  9781 ;;		_SPI1_Exchange8bit
  9782 ;;		_wdtdelay
  9783 ;; This function is called by:
  9784 ;;		_init_display
  9785 ;; This function uses a reentrant model
  9786 ;;
  9787                           
  9788                           	psect	text18
  9789  002BDC                     __ptext18:
  9790                           	opt callstack 0
  9791  002BDC                     _send_lcd_data:
  9792                           	opt callstack 13
  9793                           
  9794                           ; BSR set to: 61
  9795                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9796                           ;incstack = 0
  9797                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
  9798  002BDC  94BC               	bcf	188,2,c	;volatile
  9799                           
  9800                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
  9801                           ;stkvar	_data @ sp[(0)+-1]
  9802  002BDE  0EFF               	movlw	-1
  9803  002BE0  50E3               	movf	plusw1,w,c
  9804  002BE2  6EE6               	movwf	postinc1,c
  9805  002BE4  ECBE  F016         	call	_SPI1_Exchange8bit	;wreg free
  9806                           
  9807                           ; BSR set to: 57
  9808                           ;eadog.c: 127:  wdtdelay(8);
  9809  002BE8  0E08               	movlw	8
  9810  002BEA  6EE6               	movwf	postinc1,c
  9811  002BEC  0E00               	movlw	0
  9812  002BEE  6EE6               	movwf	postinc1,c
  9813  002BF0  0E00               	movlw	0
  9814  002BF2  6EE6               	movwf	postinc1,c
  9815  002BF4  0E00               	movlw	0
  9816  002BF6  6EE6               	movwf	postinc1,c
  9817  002BF8  EC81  F00F         	call	_wdtdelay	;wreg free
  9818                           
  9819                           ; BSR set to: 0
  9820                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  9821  002BFC  52E5               	movf	postdec1,f,c
  9822  002BFE  0012               	return		;funcret
  9823  002C00                     __end_of_send_lcd_data:
  9824                           	opt callstack 0
  9825                           
  9826 ;; *************** function _send_lcd_cmd_long *****************
  9827 ;; Defined at:
  9828 ;;		line 139 in file "eadog.c"
  9829 ;; Parameters:    Size  Location     Type
  9830 ;;  cmd             1  [STACK] const unsigned char 
  9831 ;; Auto vars:     Size  Location     Type
  9832 ;;		None
  9833 ;; Return value:  Size  Location     Type
  9834 ;;                  1  [STACK] void 
  9835 ;; Registers used:
  9836 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9837 ;; Tracked objects:
  9838 ;;		On entry : 3F/0
  9839 ;;		On exit  : 3F/0
  9840 ;;		Unchanged: 0/0
  9841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9846 ;;Total ram usage:        0 bytes
  9847 ;; Hardware stack levels used:    1
  9848 ;; Hardware stack levels required when called:   16
  9849 ;; This function calls:
  9850 ;;		_SPI1_Exchange8bit
  9851 ;;		_wdtdelay
  9852 ;; This function is called by:
  9853 ;;		_init_display
  9854 ;; This function uses a reentrant model
  9855 ;;
  9856                           
  9857                           	psect	text19
  9858  002412                     __ptext19:
  9859                           	opt callstack 0
  9860  002412                     _send_lcd_cmd_long:
  9861                           	opt callstack 13
  9862                           
  9863                           ; BSR set to: 0
  9864                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9865                           ;incstack = 0
  9866                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
  9867  002412  94BC               	bcf	188,2,c	;volatile
  9868                           
  9869                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
  9870  002414  0EFE               	movlw	254
  9871  002416  6EE6               	movwf	postinc1,c
  9872  002418  ECBE  F016         	call	_SPI1_Exchange8bit	;wreg free
  9873                           
  9874                           ; BSR set to: 57
  9875                           ;eadog.c: 143:  wdtdelay(8);
  9876  00241C  0E08               	movlw	8
  9877  00241E  6EE6               	movwf	postinc1,c
  9878  002420  0E00               	movlw	0
  9879  002422  6EE6               	movwf	postinc1,c
  9880  002424  0E00               	movlw	0
  9881  002426  6EE6               	movwf	postinc1,c
  9882  002428  0E00               	movlw	0
  9883  00242A  6EE6               	movwf	postinc1,c
  9884  00242C  EC81  F00F         	call	_wdtdelay	;wreg free
  9885                           
  9886                           ; BSR set to: 0
  9887                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
  9888                           ;stkvar	_cmd @ sp[(0)+-1]
  9889  002430  0EFF               	movlw	-1
  9890  002432  50E3               	movf	plusw1,w,c
  9891  002434  6EE6               	movwf	postinc1,c
  9892  002436  ECBE  F016         	call	_SPI1_Exchange8bit	;wreg free
  9893                           
  9894                           ;eadog.c: 145:  wdtdelay(800);
  9895  00243A  0E20               	movlw	32
  9896  00243C  6EE6               	movwf	postinc1,c
  9897  00243E  0E03               	movlw	3
  9898  002440  6EE6               	movwf	postinc1,c
  9899  002442  0E00               	movlw	0
  9900  002444  6EE6               	movwf	postinc1,c
  9901  002446  0E00               	movlw	0
  9902  002448  6EE6               	movwf	postinc1,c
  9903  00244A  EC81  F00F         	call	_wdtdelay	;wreg free
  9904                           
  9905                           ; BSR set to: 0
  9906                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  9907  00244E  52E5               	movf	postdec1,f,c
  9908  002450  0012               	return		;funcret
  9909  002452                     __end_of_send_lcd_cmd_long:
  9910                           	opt callstack 0
  9911                           
  9912 ;; *************** function _send_lcd_cmd *****************
  9913 ;; Defined at:
  9914 ;;		line 130 in file "eadog.c"
  9915 ;; Parameters:    Size  Location     Type
  9916 ;;  cmd             1  [STACK] const unsigned char 
  9917 ;; Auto vars:     Size  Location     Type
  9918 ;;		None
  9919 ;; Return value:  Size  Location     Type
  9920 ;;                  1  [STACK] void 
  9921 ;; Registers used:
  9922 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9923 ;; Tracked objects:
  9924 ;;		On entry : 3F/0
  9925 ;;		On exit  : 3F/0
  9926 ;;		Unchanged: 0/0
  9927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9932 ;;Total ram usage:        0 bytes
  9933 ;; Hardware stack levels used:    1
  9934 ;; Hardware stack levels required when called:   16
  9935 ;; This function calls:
  9936 ;;		_SPI1_Exchange8bit
  9937 ;;		_wdtdelay
  9938 ;; This function is called by:
  9939 ;;		_init_display
  9940 ;; This function uses a reentrant model
  9941 ;;
  9942                           
  9943                           	psect	text20
  9944  002452                     __ptext20:
  9945                           	opt callstack 0
  9946  002452                     _send_lcd_cmd:
  9947                           	opt callstack 13
  9948                           
  9949                           ; BSR set to: 0
  9950                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9951                           ;incstack = 0
  9952                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
  9953  002452  94BC               	bcf	188,2,c	;volatile
  9954                           
  9955                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
  9956  002454  0EFE               	movlw	254
  9957  002456  6EE6               	movwf	postinc1,c
  9958  002458  ECBE  F016         	call	_SPI1_Exchange8bit	;wreg free
  9959                           
  9960                           ; BSR set to: 57
  9961                           ;eadog.c: 134:  wdtdelay(8);
  9962  00245C  0E08               	movlw	8
  9963  00245E  6EE6               	movwf	postinc1,c
  9964  002460  0E00               	movlw	0
  9965  002462  6EE6               	movwf	postinc1,c
  9966  002464  0E00               	movlw	0
  9967  002466  6EE6               	movwf	postinc1,c
  9968  002468  0E00               	movlw	0
  9969  00246A  6EE6               	movwf	postinc1,c
  9970  00246C  EC81  F00F         	call	_wdtdelay	;wreg free
  9971                           
  9972                           ; BSR set to: 0
  9973                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
  9974                           ;stkvar	_cmd @ sp[(0)+-1]
  9975  002470  0EFF               	movlw	-1
  9976  002472  50E3               	movf	plusw1,w,c
  9977  002474  6EE6               	movwf	postinc1,c
  9978  002476  ECBE  F016         	call	_SPI1_Exchange8bit	;wreg free
  9979                           
  9980                           ;eadog.c: 136:  wdtdelay(8);
  9981  00247A  0E08               	movlw	8
  9982  00247C  6EE6               	movwf	postinc1,c
  9983  00247E  0E00               	movlw	0
  9984  002480  6EE6               	movwf	postinc1,c
  9985  002482  0E00               	movlw	0
  9986  002484  6EE6               	movwf	postinc1,c
  9987  002486  0E00               	movlw	0
  9988  002488  6EE6               	movwf	postinc1,c
  9989  00248A  EC81  F00F         	call	_wdtdelay	;wreg free
  9990                           
  9991                           ; BSR set to: 0
  9992                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  9993  00248E  52E5               	movf	postdec1,f,c
  9994  002490  0012               	return		;funcret
  9995  002492                     __end_of_send_lcd_cmd:
  9996                           	opt callstack 0
  9997                           
  9998 ;; *************** function _SPI1_Exchange8bit *****************
  9999 ;; Defined at:
 10000 ;;		line 79 in file "mcc_generated_files/spi1.c"
 10001 ;; Parameters:    Size  Location     Type
 10002 ;;  data            1  [STACK] unsigned char 
 10003 ;; Auto vars:     Size  Location     Type
 10004 ;;		None
 10005 ;; Return value:  Size  Location     Type
 10006 ;;                  1  [STACK] unsigned char 
 10007 ;; Registers used:
 10008 ;;		wreg, fsr1l, fsr1h, status,2, btemp
 10009 ;; Tracked objects:
 10010 ;;		On entry : 0/1
 10011 ;;		On exit  : 3F/39
 10012 ;;		Unchanged: 0/0
 10013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10018 ;;Total ram usage:        0 bytes
 10019 ;; Hardware stack levels used:    1
 10020 ;; Hardware stack levels required when called:   15
 10021 ;; This function calls:
 10022 ;;		Nothing
 10023 ;; This function is called by:
 10024 ;;		_send_lcd_data
 10025 ;;		_send_lcd_cmd
 10026 ;;		_send_lcd_cmd_long
 10027 ;;		_set_dac
 10028 ;; This function uses a reentrant model
 10029 ;;
 10030                           
 10031                           	psect	text21
 10032  002D7C                     __ptext21:
 10033                           	opt callstack 0
 10034  002D7C                     _SPI1_Exchange8bit:
 10035                           	opt callstack 14
 10036                           
 10037                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
 10038                           
 10039                           ; BSR set to: 0
 10040                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10041                           ;incstack = 0
 10042  002D7C  0E01               	movlw	1
 10043  002D7E  013D               	movlb	61	; () banked
 10044  002D80  6F12               	movwf	18,b	;volatile
 10045                           
 10046                           ; BSR set to: 61
 10047                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
 10048                           ;stkvar	_data @ sp[(0)+-1]
 10049  002D82  0EFF               	movlw	-1
 10050  002D84  006F FF8F FD11     	movff	plusw1,15633	;volatile
 10051  002D8A                     l809:
 10052                           
 10053                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
 10054  002D8A  0139               	movlb	57	; () banked
 10055  002D8C  A9A2               	btfss	162,4,b	;volatile
 10056  002D8E  D7FD               	goto	l809
 10057                           
 10058                           ; BSR set to: 57
 10059                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
 10060  002D90  006F F440  F02A    	movff	15632,btemp	;volatile
 10061                           
 10062                           ; BSR set to: 57
 10063                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 10064  002D96  52E5               	movf	postdec1,f,c
 10065  002D98  0012               	return		;funcret
 10066  002D9A                     __end_of_SPI1_Exchange8bit:
 10067                           	opt callstack 0
 10068                           
 10069 ;; *************** function _ringBufS_init *****************
 10070 ;; Defined at:
 10071 ;;		line 22 in file "ringbufs.c"
 10072 ;; Parameters:    Size  Location     Type
 10073 ;;  _this           2  [STACK] PTR volatile struct ring
 10074 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10075 ;; Auto vars:     Size  Location     Type
 10076 ;;		None
 10077 ;; Return value:  Size  Location     Type
 10078 ;;                  1  [STACK] void 
 10079 ;; Registers used:
 10080 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10081 ;; Tracked objects:
 10082 ;;		On entry : 0/0
 10083 ;;		On exit  : 0/0
 10084 ;;		Unchanged: 0/0
 10085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10090 ;;Total ram usage:        0 bytes
 10091 ;; Hardware stack levels used:    1
 10092 ;; Hardware stack levels required when called:   16
 10093 ;; This function calls:
 10094 ;;		_memset
 10095 ;; This function is called by:
 10096 ;;		_init_display
 10097 ;; This function uses a reentrant model
 10098 ;;
 10099                           
 10100                           	psect	text22
 10101  002982                     __ptext22:
 10102                           	opt callstack 0
 10103  002982                     _ringBufS_init:
 10104                           	opt callstack 13
 10105                           
 10106                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
 10107                           
 10108                           ; BSR set to: 57
 10109                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10110                           ;incstack = 0
 10111  002982  0E43               	movlw	67
 10112  002984  6EE6               	movwf	postinc1,c
 10113  002986  0E00               	movlw	0
 10114  002988  6EE6               	movwf	postinc1,c
 10115  00298A  0E00               	movlw	0
 10116  00298C  6EE6               	movwf	postinc1,c
 10117  00298E  0E00               	movlw	0
 10118  002990  6EE6               	movwf	postinc1,c
 10119                           
 10120                           ;stkvar	__this @ sp[(-4)+-2]
 10121  002992  0EFA               	movlw	-6
 10122  002994  006F FF8F FFE6     	movff	plusw1,postinc1
 10123  00299A  006F FF8F FFE6     	movff	plusw1,postinc1
 10124  0029A0  ECD6  F0D9         	call	_memset	;wreg free
 10125                           
 10126                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 10127  0029A4  52E5               	movf	postdec1,f,c
 10128  0029A6  52E5               	movf	postdec1,f,c
 10129  0029A8  0012               	return		;funcret
 10130  0029AA                     __end_of_ringBufS_init:
 10131                           	opt callstack 0
 10132                           
 10133 ;; *************** function _init_bsoc *****************
 10134 ;; Defined at:
 10135 ;;		line 110 in file "bsoc.c"
 10136 ;; Parameters:    Size  Location     Type
 10137 ;;		None
 10138 ;; Auto vars:     Size  Location     Type
 10139 ;;		None
 10140 ;; Return value:  Size  Location     Type
 10141 ;;                  1  [STACK] void 
 10142 ;; Registers used:
 10143 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 10144 ;; Tracked objects:
 10145 ;;		On entry : 0/1
 10146 ;;		On exit  : 0/0
 10147 ;;		Unchanged: 0/0
 10148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10153 ;;Total ram usage:        0 bytes
 10154 ;; Hardware stack levels used:    1
 10155 ;; Hardware stack levels required when called:   18
 10156 ;; This function calls:
 10157 ;;		_TMR3_SetInterruptHandler
 10158 ;;		_Volts_to_SOC
 10159 ;;		___fldiv
 10160 ;;		___flmul
 10161 ;;		___fltol
 10162 ;;		___xxtofl
 10163 ;;		_conv_raw_result
 10164 ;; This function is called by:
 10165 ;;		_main
 10166 ;; This function uses a reentrant model
 10167 ;;
 10168                           
 10169                           	psect	text23
 10170  01CB56                     __ptext23:
 10171                           	opt callstack 0
 10172  01CB56                     _init_bsoc:
 10173                           	opt callstack 12
 10174                           
 10175                           ;bsoc.c: 115:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
 10176                           
 10177                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10178                           ;incstack = 0
 10179  01CB56  0E00               	movlw	0
 10180  01CB58  6EE6               	movwf	postinc1,c
 10181  01CB5A  0E00               	movlw	0
 10182  01CB5C  6EE6               	movwf	postinc1,c
 10183  01CB5E  0E7A               	movlw	122
 10184  01CB60  6EE6               	movwf	postinc1,c
 10185  01CB62  0E44               	movlw	68
 10186  01CB64  6EE6               	movwf	postinc1,c
 10187  01CB66  0E00               	movlw	0
 10188  01CB68  6EE6               	movwf	postinc1,c
 10189  01CB6A  0E04               	movlw	4
 10190  01CB6C  6EE6               	movwf	postinc1,c
 10191  01CB6E  EC00  F0C9         	call	_conv_raw_result	;wreg free
 10192  01CB72  0060  F0AB  FFE6   	movff	btemp,postinc1
 10193  01CB78  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10194  01CB7E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10195  01CB84  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10196  01CB8A  EC7D  F0F5         	call	___fltol	;wreg free
 10197  01CB8E  0060  F0AB  FFE6   	movff	btemp,postinc1
 10198  01CB94  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10199  01CB9A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10200  01CBA0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10201  01CBA6  0E00               	movlw	0
 10202  01CBA8  6EE6               	movwf	postinc1,c
 10203  01CBAA  EC4F  F0ED         	call	___xxtofl	;wreg free
 10204  01CBAE  0060  F0AB  FFE6   	movff	btemp,postinc1
 10205  01CBB4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10206  01CBBA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10207  01CBC0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10208  01CBC6  EC67  F0B8         	call	___flmul	;wreg free
 10209  01CBCA  0060  F0AB  FFE6   	movff	btemp,postinc1
 10210  01CBD0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10211  01CBD6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10212  01CBDC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10213  01CBE2  EC7D  F0F5         	call	___fltol	;wreg free
 10214  01CBE6  0060  F0AB  FFE6   	movff	btemp,postinc1
 10215  01CBEC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10216  01CBF2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10217  01CBF8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10218  01CBFE  ECAA  F005         	call	_Volts_to_SOC	;wreg free
 10219  01CC02  0060  F0A8  F9B5   	movff	btemp,_C+182	;volatile
 10220  01CC08  0060  F0AC  F9B6   	movff	btemp+1,_C+183	;volatile
 10221                           
 10222                           ;bsoc.c: 116:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
 10223  01CC0E  EE22  F18B         	lfsr	2,_C+140	;volatile
 10224  01CC12  006F FF7B FFE6     	movff	postinc2,postinc1
 10225  01CC18  006F FF7B FFE6     	movff	postinc2,postinc1
 10226  01CC1E  006F FF7B FFE6     	movff	postinc2,postinc1
 10227  01CC24  006F FF7B FFE6     	movff	postinc2,postinc1
 10228  01CC2A  0E00               	movlw	0
 10229  01CC2C  6EE6               	movwf	postinc1,c
 10230  01CC2E  0E00               	movlw	0
 10231  01CC30  6EE6               	movwf	postinc1,c
 10232  01CC32  0EC8               	movlw	200
 10233  01CC34  6EE6               	movwf	postinc1,c
 10234  01CC36  0E42               	movlw	66
 10235  01CC38  6EE6               	movwf	postinc1,c
 10236  01CC3A  0E00               	movlw	0
 10237  01CC3C  6EE6               	movwf	postinc1,c
 10238  01CC3E  0E00               	movlw	0
 10239  01CC40  6EE6               	movwf	postinc1,c
 10240  01CC42  0E7A               	movlw	122
 10241  01CC44  6EE6               	movwf	postinc1,c
 10242  01CC46  0E44               	movlw	68
 10243  01CC48  6EE6               	movwf	postinc1,c
 10244  01CC4A  0E00               	movlw	0
 10245  01CC4C  6EE6               	movwf	postinc1,c
 10246  01CC4E  0E04               	movlw	4
 10247  01CC50  6EE6               	movwf	postinc1,c
 10248  01CC52  EC00  F0C9         	call	_conv_raw_result	;wreg free
 10249  01CC56  0060  F0AB  FFE6   	movff	btemp,postinc1
 10250  01CC5C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10251  01CC62  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10252  01CC68  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10253  01CC6E  EC7D  F0F5         	call	___fltol	;wreg free
 10254  01CC72  0060  F0AB  FFE6   	movff	btemp,postinc1
 10255  01CC78  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10256  01CC7E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10257  01CC84  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10258  01CC8A  0E00               	movlw	0
 10259  01CC8C  6EE6               	movwf	postinc1,c
 10260  01CC8E  EC4F  F0ED         	call	___xxtofl	;wreg free
 10261  01CC92  0060  F0AB  FFE6   	movff	btemp,postinc1
 10262  01CC98  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10263  01CC9E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10264  01CCA4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10265  01CCAA  EC67  F0B8         	call	___flmul	;wreg free
 10266  01CCAE  0060  F0AB  FFE6   	movff	btemp,postinc1
 10267  01CCB4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10268  01CCBA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10269  01CCC0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10270  01CCC6  EC7D  F0F5         	call	___fltol	;wreg free
 10271  01CCCA  0060  F0AB  FFE6   	movff	btemp,postinc1
 10272  01CCD0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10273  01CCD6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10274  01CCDC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10275  01CCE2  ECAA  F005         	call	_Volts_to_SOC	;wreg free
 10276  01CCE6  0060  F0A8  F034   	movff	btemp,btemp+10
 10277  01CCEC  0060  F0AC  F035   	movff	btemp+1,btemp+11
 10278  01CCF2  5034               	movf	(btemp+10)^0,w,c
 10279  01CCF4  6E2E               	movwf	(btemp+4)^0,c
 10280  01CCF6  5035               	movf	(btemp+11)^0,w,c
 10281  01CCF8  6E2F               	movwf	(btemp+5)^0,c
 10282  01CCFA  6A30               	clrf	(btemp+6)^0,c
 10283  01CCFC  6A31               	clrf	(btemp+7)^0,c
 10284  01CCFE  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 10285  01CD04  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 10286  01CD0A  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 10287  01CD10  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 10288  01CD16  0E00               	movlw	0
 10289  01CD18  6EE6               	movwf	postinc1,c
 10290  01CD1A  EC4F  F0ED         	call	___xxtofl	;wreg free
 10291  01CD1E  0060  F0AB  FFE6   	movff	btemp,postinc1
 10292  01CD24  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10293  01CD2A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10294  01CD30  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10295  01CD36  ECB8  F0C3         	call	___fldiv	;wreg free
 10296  01CD3A  0060  F0AB  FFE6   	movff	btemp,postinc1
 10297  01CD40  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 10298  01CD46  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 10299  01CD4C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 10300  01CD52  EC67  F0B8         	call	___flmul	;wreg free
 10301  01CD56  0060  F0A8  F98F   	movff	btemp,_C+144	;volatile
 10302  01CD5C  0060  F0AC  F990   	movff	btemp+1,_C+145	;volatile
 10303  01CD62  0060  F0B0  F991   	movff	btemp+2,_C+146	;volatile
 10304  01CD68  0060  F0B4  F992   	movff	btemp+3,_C+147	;volatile
 10305                           
 10306                           ;bsoc.c: 117:  C.dynamic_ah_adj = C.dynamic_ah;
 10307  01CD6E  EE22  F18F         	lfsr	2,_C+144	;volatile
 10308  01CD72  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
 10309  01CD78  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
 10310  01CD7E  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
 10311  01CD84  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
 10312                           
 10313                           ;bsoc.c: 118:  TMR3_SetInterruptHandler(calc_bsoc);
 10314  01CD8A  0E4C               	movlw	low _calc_bsoc
 10315  01CD8C  6EE6               	movwf	postinc1,c
 10316  01CD8E  0E54               	movlw	high _calc_bsoc
 10317  01CD90  6EE6               	movwf	postinc1,c
 10318  01CD92  0E01               	movlw	low (_calc_bsoc shr (0+16))
 10319  01CD94  6EE6               	movwf	postinc1,c
 10320  01CD96  EC4D  F015         	call	_TMR3_SetInterruptHandler	;wreg free
 10321                           
 10322                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 10323  01CD9A  0012               	return		;funcret
 10324  01CD9C                     __end_of_init_bsoc:
 10325                           	opt callstack 0
 10326                           
 10327 ;; *************** function _Volts_to_SOC *****************
 10328 ;; Defined at:
 10329 ;;		line 175 in file "bsoc.c"
 10330 ;; Parameters:    Size  Location     Type
 10331 ;;  cvoltage        4  [STACK] const unsigned long 
 10332 ;; Auto vars:     Size  Location     Type
 10333 ;;  soc             2  [STACK] unsigned short 
 10334 ;;  slot            1  [STACK] unsigned char 
 10335 ;; Return value:  Size  Location     Type
 10336 ;;                  2  [STACK] unsigned short 
 10337 ;; Registers used:
 10338 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 10339 ;; Tracked objects:
 10340 ;;		On entry : 0/1
 10341 ;;		On exit  : 0/0
 10342 ;;		Unchanged: 0/0
 10343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10348 ;;Total ram usage:        0 bytes
 10349 ;; Hardware stack levels used:    1
 10350 ;; Hardware stack levels required when called:   15
 10351 ;; This function calls:
 10352 ;;		Nothing
 10353 ;; This function is called by:
 10354 ;;		_init_bsoc
 10355 ;; This function uses a reentrant model
 10356 ;;
 10357                           
 10358                           	psect	text24
 10359  000B54                     __ptext24:
 10360                           	opt callstack 0
 10361  000B54                     _Volts_to_SOC:
 10362                           	opt callstack 0
 10363                           
 10364                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10365  000B54  52E6               	movf	postinc1,f,c
 10366  000B56  52E6               	movf	postinc1,f,c
 10367  000B58  52E6               	movf	postinc1,f,c
 10368                           
 10369                           ;bsoc.c: 175: uint16_t Volts_to_SOC(const uint32_t cvoltage);bsoc.c: 176: {;bsoc.c: 177:
      +                            uint8_t slot;;bsoc.c: 178:  uint16_t soc = 0;
 10370                           ;stkvar	_soc @ sp[(-3)+0]
 10371                           
 10372                           ;incstack = 0
 10373  000B5A  0EFD               	movlw	-3
 10374  000B5C  6AE3               	clrf	plusw1,c
 10375  000B5E  0EFE               	movlw	-2
 10376  000B60  6AE3               	clrf	plusw1,c
 10377                           
 10378                           ;bsoc.c: 183:  for (slot = 0; slot < 26; slot++) {
 10379                           ;stkvar	_slot @ sp[(-3)+2]
 10380  000B62  0EFF               	movlw	-1
 10381  000B64  6AE3               	clrf	plusw1,c
 10382  000B66                     l13979:
 10383                           
 10384                           ;bsoc.c: 184:   if (cvoltage > BVSOC_TABLE[slot][0]) {
 10385                           ;stkvar	_cvoltage @ sp[(-3)+-4]
 10386                           ;stkvar	_slot @ sp[(-3)+2]
 10387  000B66  0EFF               	movlw	-1
 10388  000B68  50E3               	movf	plusw1,w,c
 10389  000B6A  0D08               	mullw	8
 10390  000B6C  0E17               	movlw	low _BVSOC_TABLE
 10391  000B6E  24F3               	addwf	243,w,c
 10392  000B70  6EF6               	movwf	tblptrl,c
 10393  000B72  0EF7               	movlw	high _BVSOC_TABLE
 10394  000B74  20F4               	addwfc	244,w,c
 10395  000B76  6EF7               	movwf	tblptrh,c
 10396  000B78                     	if	1	;There are 3 active tblptr bytes
 10397  000B78  6AF8               	clrf	tblptru,c
 10398  000B7A  0E00               	movlw	low (__mediumconst shr (0+16))
 10399  000B7C  22F8               	addwfc	tblptru,f,c
 10400  000B7E                     	endif
 10401  000B7E  0EF9               	movlw	-7
 10402  000B80  50E3               	movf	plusw1,w,c
 10403  000B82  0009               	tblrd		*+
 10404  000B84  5CF5               	subwf	tablat,w,c
 10405  000B86  0EFA               	movlw	-6
 10406  000B88  50E3               	movf	plusw1,w,c
 10407  000B8A  0009               	tblrd		*+
 10408  000B8C  58F5               	subwfb	tablat,w,c
 10409  000B8E  0EFB               	movlw	-5
 10410  000B90  50E3               	movf	plusw1,w,c
 10411  000B92  0009               	tblrd		*+
 10412  000B94  58F5               	subwfb	tablat,w,c
 10413  000B96  0EFC               	movlw	-4
 10414  000B98  50E3               	movf	plusw1,w,c
 10415  000B9A  0009               	tblrd		*+
 10416  000B9C  58F5               	subwfb	tablat,w,c
 10417  000B9E  B0D8               	btfsc	status,0,c
 10418  000BA0  D020               	goto	l13983
 10419                           
 10420                           ;bsoc.c: 185:    soc = BVSOC_TABLE[slot][1];
 10421                           ;stkvar	_slot @ sp[(-3)+2]
 10422  000BA2  0EFF               	movlw	-1
 10423  000BA4  50E3               	movf	plusw1,w,c
 10424  000BA6  0D08               	mullw	8
 10425  000BA8  0E04               	movlw	4
 10426  000BAA  26F3               	addwf	243,f,c
 10427  000BAC  0E00               	movlw	0
 10428  000BAE  22F4               	addwfc	244,f,c
 10429  000BB0  0E17               	movlw	low _BVSOC_TABLE
 10430  000BB2  24F3               	addwf	243,w,c
 10431  000BB4  6EF6               	movwf	tblptrl,c
 10432  000BB6  0EF7               	movlw	high _BVSOC_TABLE
 10433  000BB8  20F4               	addwfc	244,w,c
 10434  000BBA  6EF7               	movwf	tblptrh,c
 10435  000BBC                     	if	1	;There are 3 active tblptr bytes
 10436  000BBC  6AF8               	clrf	tblptru,c
 10437  000BBE  0E00               	movlw	low (__mediumconst shr (0+16))
 10438  000BC0  22F8               	addwfc	tblptru,f,c
 10439  000BC2                     	endif
 10440  000BC2  0009               	tblrd		*+
 10441  000BC4  006F FFD4  F034    	movff	tablat,btemp+10
 10442  000BCA  0009               	tblrd		*+
 10443  000BCC  006F FFD4  F035    	movff	tablat,btemp+11
 10444                           
 10445                           ;stkvar	_soc @ sp[(-3)+0]
 10446  000BD2  0EFD               	movlw	-3
 10447  000BD4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 10448  000BDA  0EFE               	movlw	-2
 10449  000BDC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 10450  000BE2                     l13983:
 10451                           
 10452                           ;bsoc.c: 187:  }
 10453                           ;stkvar	_slot @ sp[(-3)+2]
 10454  000BE2  0EFF               	movlw	-1
 10455  000BE4  2AE3               	incf	plusw1,f,c
 10456                           
 10457                           ;stkvar	_slot @ sp[(-3)+2]
 10458  000BE6  0EFF               	movlw	-1
 10459  000BE8  006F FF8C  F02A    	movff	plusw1,btemp
 10460  000BEE  0E19               	movlw	25
 10461  000BF0  642A               	cpfsgt	btemp^0,c
 10462  000BF2  D7B9               	goto	l13979
 10463                           
 10464                           ;bsoc.c: 188:  return soc;
 10465                           ;stkvar	_soc @ sp[(-3)+0]
 10466  000BF4  0EFD               	movlw	-3
 10467  000BF6  006F FF8C  F02A    	movff	plusw1,btemp
 10468  000BFC  0EFE               	movlw	-2
 10469  000BFE  006F FF8C  F02B    	movff	plusw1,btemp+1
 10470                           
 10471                           ; _Volts_to_SOC: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
 10472  000C04  0EF9               	movlw	249
 10473  000C06  26E1               	addwf	fsr1l,f,c
 10474  000C08  0EFF               	movlw	255
 10475  000C0A  22E2               	addwfc	fsr1h,f,c
 10476  000C0C  0012               	return		;funcret
 10477  000C0E                     __end_of_Volts_to_SOC:
 10478                           	opt callstack 0
 10479                           
 10480 ;; *************** function _hid_display *****************
 10481 ;; Defined at:
 10482 ;;		line 22 in file "hid.c"
 10483 ;; Parameters:    Size  Location     Type
 10484 ;;  h               2  [STACK] PTR struct H_data
 10485 ;;		 -> H(9), 
 10486 ;; Auto vars:     Size  Location     Type
 10487 ;;		None
 10488 ;; Return value:  Size  Location     Type
 10489 ;;                  2  [STACK] PTR struct H_data
 10490 ;; Registers used:
 10491 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
 10492 ;; Tracked objects:
 10493 ;;		On entry : 0/39
 10494 ;;		On exit  : 0/0
 10495 ;;		Unchanged: 0/0
 10496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10501 ;;Total ram usage:        0 bytes
 10502 ;; Hardware stack levels used:    1
 10503 ;; Hardware stack levels required when called:   17
 10504 ;; This function calls:
 10505 ;;		_hid_input
 10506 ;; This function is called by:
 10507 ;;		_main
 10508 ;; This function uses a reentrant model
 10509 ;;
 10510                           
 10511                           	psect	text25
 10512  01D670                     __ptext25:
 10513                           	opt callstack 0
 10514  01D670                     _hid_display:
 10515                           	opt callstack 13
 10516                           
 10517                           ;hid.c: 22: H_data* hid_display(H_data* h);hid.c: 23: {;hid.c: 24:  hid_input(h);
 10518                           ;stkvar	_h @ sp[(0)+-2]
 10519                           
 10520                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10521                           ;incstack = 0
 10522  01D670  0EFE               	movlw	-2
 10523  01D672  006F FF8F FFE6     	movff	plusw1,postinc1
 10524  01D678  006F FF8F FFE6     	movff	plusw1,postinc1
 10525  01D67E  EC3C  F0FC         	call	_hid_input	;wreg free
 10526                           
 10527                           ;hid.c: 26:  switch (h->h_state) {
 10528  01D682  D0E6               	goto	l17551
 10529  01D684                     l17525:
 10530                           
 10531                           ;hid.c: 28:   h->h_state = H_STATE_DISPLAY;
 10532                           ;stkvar	_h @ sp[(0)+-2]
 10533  01D684  0EFE               	movlw	-2
 10534  01D686  006F FF8C  F034    	movff	plusw1,btemp+10
 10535  01D68C  0EFF               	movlw	-1
 10536  01D68E  006F FF8C  F035    	movff	plusw1,btemp+11
 10537  01D694  0E01               	movlw	1
 10538  01D696  2434               	addwf	(btemp+10)^0,w,c
 10539  01D698  6ED9               	movwf	fsr2l,c
 10540  01D69A  0E00               	movlw	0
 10541  01D69C  2035               	addwfc	(btemp+11)^0,w,c
 10542  01D69E  6EDA               	movwf	fsr2h,c
 10543  01D6A0  0E01               	movlw	1
 10544  01D6A2  6EDF               	movwf	indf2,c
 10545                           
 10546                           ;hid.c: 29:   h->hid_display = HID_MAIN;
 10547                           ;stkvar	_h @ sp[(0)+-2]
 10548  01D6A4  0EFE               	movlw	-2
 10549  01D6A6  006F FF8F FFD9     	movff	plusw1,fsr2l
 10550  01D6AC  0EFF               	movlw	-1
 10551  01D6AE  006F FF8F FFDA     	movff	plusw1,fsr2h
 10552  01D6B4  0E00               	movlw	0
 10553  01D6B6  6EDF               	movwf	indf2,c
 10554                           
 10555                           ;hid.c: 30:   h->wait_enter = 1;
 10556                           ;stkvar	_h @ sp[(0)+-2]
 10557  01D6B8  0EFE               	movlw	-2
 10558  01D6BA  006F FF8C  F034    	movff	plusw1,btemp+10
 10559  01D6C0  0EFF               	movlw	-1
 10560  01D6C2  006F FF8C  F035    	movff	plusw1,btemp+11
 10561  01D6C8  0E04               	movlw	4
 10562  01D6CA  2434               	addwf	(btemp+10)^0,w,c
 10563  01D6CC  6ED9               	movwf	fsr2l,c
 10564  01D6CE  0E00               	movlw	0
 10565  01D6D0  2035               	addwfc	(btemp+11)^0,w,c
 10566  01D6D2  6EDA               	movwf	fsr2h,c
 10567  01D6D4  0E01               	movlw	1
 10568  01D6D6  6EDF               	movwf	indf2,c
 10569                           
 10570                           ;hid.c: 31:   h->wait_select = 1;
 10571                           ;stkvar	_h @ sp[(0)+-2]
 10572  01D6D8  0EFE               	movlw	-2
 10573  01D6DA  006F FF8C  F034    	movff	plusw1,btemp+10
 10574  01D6E0  0EFF               	movlw	-1
 10575  01D6E2  006F FF8C  F035    	movff	plusw1,btemp+11
 10576  01D6E8  0E02               	movlw	2
 10577  01D6EA  2434               	addwf	(btemp+10)^0,w,c
 10578  01D6EC  6ED9               	movwf	fsr2l,c
 10579  01D6EE  0E00               	movlw	0
 10580  01D6F0  2035               	addwfc	(btemp+11)^0,w,c
 10581  01D6F2  6EDA               	movwf	fsr2h,c
 10582  01D6F4  0E01               	movlw	1
 10583  01D6F6  6EDF               	movwf	indf2,c
 10584                           
 10585                           ;hid.c: 32:   h->wait_calib = 1;
 10586                           ;stkvar	_h @ sp[(0)+-2]
 10587  01D6F8  0EFE               	movlw	-2
 10588  01D6FA  006F FF8C  F034    	movff	plusw1,btemp+10
 10589  01D700  0EFF               	movlw	-1
 10590  01D702  006F FF8C  F035    	movff	plusw1,btemp+11
 10591  01D708  0E06               	movlw	6
 10592  01D70A  2434               	addwf	(btemp+10)^0,w,c
 10593  01D70C  6ED9               	movwf	fsr2l,c
 10594  01D70E  0E00               	movlw	0
 10595  01D710  2035               	addwfc	(btemp+11)^0,w,c
 10596  01D712  6EDA               	movwf	fsr2h,c
 10597  01D714  0E01               	movlw	1
 10598  01D716  6EDF               	movwf	indf2,c
 10599                           
 10600                           ;hid.c: 33:   h->select_p = SW_OFF;
 10601                           ;stkvar	_h @ sp[(0)+-2]
 10602  01D718  0EFE               	movlw	-2
 10603  01D71A  006F FF8C  F034    	movff	plusw1,btemp+10
 10604  01D720  0EFF               	movlw	-1
 10605  01D722  006F FF8C  F035    	movff	plusw1,btemp+11
 10606  01D728  0E03               	movlw	3
 10607  01D72A  2434               	addwf	(btemp+10)^0,w,c
 10608  01D72C  6ED9               	movwf	fsr2l,c
 10609  01D72E  0E00               	movlw	0
 10610  01D730  2035               	addwfc	(btemp+11)^0,w,c
 10611  01D732  6EDA               	movwf	fsr2h,c
 10612  01D734  0E00               	movlw	0
 10613  01D736  6EDF               	movwf	indf2,c
 10614                           
 10615                           ;hid.c: 34:   h->enter_p = SW_OFF;
 10616                           ;stkvar	_h @ sp[(0)+-2]
 10617  01D738  0EFE               	movlw	-2
 10618  01D73A  006F FF8C  F034    	movff	plusw1,btemp+10
 10619  01D740  0EFF               	movlw	-1
 10620  01D742  006F FF8C  F035    	movff	plusw1,btemp+11
 10621  01D748  0E05               	movlw	5
 10622  01D74A  2434               	addwf	(btemp+10)^0,w,c
 10623  01D74C  6ED9               	movwf	fsr2l,c
 10624  01D74E  0E00               	movlw	0
 10625  01D750  2035               	addwfc	(btemp+11)^0,w,c
 10626  01D752  6EDA               	movwf	fsr2h,c
 10627  01D754  0E00               	movlw	0
 10628  01D756  6EDF               	movwf	indf2,c
 10629                           
 10630                           ;hid.c: 35:   h->calib_p = SW_OFF;
 10631                           ;stkvar	_h @ sp[(0)+-2]
 10632  01D758  0EFE               	movlw	-2
 10633  01D75A  006F FF8C  F034    	movff	plusw1,btemp+10
 10634  01D760  0EFF               	movlw	-1
 10635  01D762  006F FF8C  F035    	movff	plusw1,btemp+11
 10636  01D768  0E07               	movlw	7
 10637  01D76A  2434               	addwf	(btemp+10)^0,w,c
 10638  01D76C  6ED9               	movwf	fsr2l,c
 10639  01D76E  0E00               	movlw	0
 10640  01D770  2035               	addwfc	(btemp+11)^0,w,c
 10641  01D772  6EDA               	movwf	fsr2h,c
 10642  01D774  0E00               	movlw	0
 10643  01D776  D06A               	goto	L6
 10644  01D778                     l17541:
 10645                           
 10646                           ;hid.c: 39:   if (!h->wait_select && (h->select_p == SW_OFF)) {
 10647                           ;stkvar	_h @ sp[(0)+-2]
 10648  01D778  0EFE               	movlw	-2
 10649  01D77A  006F FF8C  F034    	movff	plusw1,btemp+10
 10650  01D780  0EFF               	movlw	-1
 10651  01D782  006F FF8C  F035    	movff	plusw1,btemp+11
 10652  01D788  0E02               	movlw	2
 10653  01D78A  2434               	addwf	(btemp+10)^0,w,c
 10654  01D78C  6ED9               	movwf	fsr2l,c
 10655  01D78E  0E00               	movlw	0
 10656  01D790  2035               	addwfc	(btemp+11)^0,w,c
 10657  01D792  6EDA               	movwf	fsr2h,c
 10658  01D794  50DF               	movf	indf2,w,c
 10659  01D796  A4D8               	btfss	status,2,c
 10660  01D798  D076               	goto	l2301
 10661                           
 10662                           ;stkvar	_h @ sp[(0)+-2]
 10663  01D79A  0EFE               	movlw	-2
 10664  01D79C  006F FF8C  F034    	movff	plusw1,btemp+10
 10665  01D7A2  0EFF               	movlw	-1
 10666  01D7A4  006F FF8C  F035    	movff	plusw1,btemp+11
 10667  01D7AA  0E03               	movlw	3
 10668  01D7AC  2434               	addwf	(btemp+10)^0,w,c
 10669  01D7AE  6ED9               	movwf	fsr2l,c
 10670  01D7B0  0E00               	movlw	0
 10671  01D7B2  2035               	addwfc	(btemp+11)^0,w,c
 10672  01D7B4  6EDA               	movwf	fsr2h,c
 10673  01D7B6  50DF               	movf	indf2,w,c
 10674  01D7B8  A4D8               	btfss	status,2,c
 10675  01D7BA  D065               	goto	l2301
 10676                           
 10677                           ;hid.c: 40:    h->sequence = ++h->sequence & 0x3;
 10678                           ;stkvar	_h @ sp[(0)+-2]
 10679  01D7BC  0EFE               	movlw	-2
 10680  01D7BE  006F FF8C  F034    	movff	plusw1,btemp+10
 10681  01D7C4  0EFF               	movlw	-1
 10682  01D7C6  006F FF8C  F035    	movff	plusw1,btemp+11
 10683  01D7CC  0E08               	movlw	8
 10684  01D7CE  2434               	addwf	(btemp+10)^0,w,c
 10685  01D7D0  6ED9               	movwf	fsr2l,c
 10686  01D7D2  0E00               	movlw	0
 10687  01D7D4  2035               	addwfc	(btemp+11)^0,w,c
 10688  01D7D6  6EDA               	movwf	fsr2h,c
 10689                           
 10690                           ;stkvar	_h @ sp[(0)+-2]
 10691  01D7D8  0EFE               	movlw	-2
 10692  01D7DA  006F FF8C  F034    	movff	plusw1,btemp+10
 10693  01D7E0  0EFF               	movlw	-1
 10694  01D7E2  006F FF8C  F035    	movff	plusw1,btemp+11
 10695  01D7E8  0E08               	movlw	8
 10696  01D7EA  2434               	addwf	(btemp+10)^0,w,c
 10697  01D7EC  6EE9               	movwf	fsr0l,c
 10698  01D7EE  0E00               	movlw	0
 10699  01D7F0  2035               	addwfc	(btemp+11)^0,w,c
 10700  01D7F2  6EEA               	movwf	fsr0h,c
 10701  01D7F4  2AEF               	incf	indf0,f,c
 10702  01D7F6  50EF               	movf	indf0,w,c
 10703  01D7F8  0B03               	andlw	3
 10704  01D7FA  6EDF               	movwf	indf2,c
 10705                           
 10706                           ;hid.c: 41:    h->hid_display = h->sequence;
 10707                           ;stkvar	_h @ sp[(0)+-2]
 10708  01D7FC  0EFE               	movlw	-2
 10709  01D7FE  006F FF8C  F034    	movff	plusw1,btemp+10
 10710  01D804  0EFF               	movlw	-1
 10711  01D806  006F FF8C  F035    	movff	plusw1,btemp+11
 10712  01D80C  0E08               	movlw	8
 10713  01D80E  2434               	addwf	(btemp+10)^0,w,c
 10714  01D810  6ED9               	movwf	fsr2l,c
 10715  01D812  0E00               	movlw	0
 10716  01D814  2035               	addwfc	(btemp+11)^0,w,c
 10717  01D816  6EDA               	movwf	fsr2h,c
 10718                           
 10719                           ;stkvar	_h @ sp[(0)+-2]
 10720  01D818  0EFE               	movlw	-2
 10721  01D81A  006F FF8F FFE9     	movff	plusw1,fsr0l
 10722  01D820  0EFF               	movlw	-1
 10723  01D822  006F FF8F FFEA     	movff	plusw1,fsr0h
 10724  01D828  006F FF7F FFEF     	movff	indf2,indf0
 10725                           
 10726                           ;hid.c: 42:    h->wait_select = 1;
 10727                           ;stkvar	_h @ sp[(0)+-2]
 10728  01D82E  0EFE               	movlw	-2
 10729  01D830  006F FF8C  F034    	movff	plusw1,btemp+10
 10730  01D836  0EFF               	movlw	-1
 10731  01D838  006F FF8C  F035    	movff	plusw1,btemp+11
 10732  01D83E  0E02               	movlw	2
 10733  01D840  2434               	addwf	(btemp+10)^0,w,c
 10734  01D842  6ED9               	movwf	fsr2l,c
 10735  01D844  0E00               	movlw	0
 10736  01D846  2035               	addwfc	(btemp+11)^0,w,c
 10737  01D848  6EDA               	movwf	fsr2h,c
 10738  01D84A  0E01               	movlw	1
 10739  01D84C                     L6:
 10740  01D84C  6EDF               	movwf	indf2,c
 10741  01D84E  D01B               	goto	l2301
 10742  01D850                     l17551:
 10743                           
 10744                           ;stkvar	_h @ sp[(0)+-2]
 10745  01D850  0EFE               	movlw	-2
 10746  01D852  006F FF8C  F034    	movff	plusw1,btemp+10
 10747  01D858  0EFF               	movlw	-1
 10748  01D85A  006F FF8C  F035    	movff	plusw1,btemp+11
 10749  01D860  0E01               	movlw	1
 10750  01D862  2434               	addwf	(btemp+10)^0,w,c
 10751  01D864  6ED9               	movwf	fsr2l,c
 10752  01D866  0E00               	movlw	0
 10753  01D868  2035               	addwfc	(btemp+11)^0,w,c
 10754  01D86A  6EDA               	movwf	fsr2h,c
 10755  01D86C  50DF               	movf	indf2,w,c
 10756  01D86E  6E34               	movwf	(btemp+10)^0,c
 10757  01D870  6A35               	clrf	(btemp+11)^0,c
 10758                           
 10759                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10760                           ; Switch size 1, requested type "simple"
 10761                           ; Number of cases is 1, Range of values is 0 to 0
 10762                           ; switch strategies available:
 10763                           ; Name         Instructions Cycles
 10764                           ; simple_byte            4     3 (average)
 10765                           ;	Chosen strategy is simple_byte
 10766  01D872  5035               	movf	(btemp+11)^0,w,c
 10767  01D874  0A00               	xorlw	0	; case 0
 10768  01D876  A4D8               	btfss	status,2,c
 10769  01D878  D77F               	goto	l17541
 10770                           
 10771                           ; Switch size 1, requested type "simple"
 10772                           ; Number of cases is 2, Range of values is 0 to 1
 10773                           ; switch strategies available:
 10774                           ; Name         Instructions Cycles
 10775                           ; simple_byte            7     4 (average)
 10776                           ;	Chosen strategy is simple_byte
 10777  01D87A  5034               	movf	(btemp+10)^0,w,c
 10778  01D87C  0A00               	xorlw	0	; case 0
 10779  01D87E  B4D8               	btfsc	status,2,c
 10780  01D880  D701               	goto	l17525
 10781  01D882  0A01               	xorlw	1	; case 1
 10782  01D884  D779               	goto	l17541
 10783  01D886                     l2301:
 10784                           
 10785                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
 10786  01D886  52E5               	movf	postdec1,f,c
 10787  01D888  52E5               	movf	postdec1,f,c
 10788  01D88A  0012               	return		;funcret
 10789  01D88C                     __end_of_hid_display:
 10790                           	opt callstack 0
 10791                           
 10792 ;; *************** function _hid_input *****************
 10793 ;; Defined at:
 10794 ;;		line 3 in file "hid.c"
 10795 ;; Parameters:    Size  Location     Type
 10796 ;;  h               2  [STACK] PTR struct H_data
 10797 ;;		 -> H(9), 
 10798 ;; Auto vars:     Size  Location     Type
 10799 ;;		None
 10800 ;; Return value:  Size  Location     Type
 10801 ;;                  2  [STACK] PTR struct H_data
 10802 ;; Registers used:
 10803 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 10804 ;; Tracked objects:
 10805 ;;		On entry : 0/39
 10806 ;;		On exit  : 0/0
 10807 ;;		Unchanged: 0/0
 10808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10813 ;;Total ram usage:        0 bytes
 10814 ;; Hardware stack levels used:    1
 10815 ;; Hardware stack levels required when called:   16
 10816 ;; This function calls:
 10817 ;;		_get_switch
 10818 ;; This function is called by:
 10819 ;;		_hid_display
 10820 ;; This function uses a reentrant model
 10821 ;;
 10822                           
 10823                           	psect	text26
 10824  01F878                     __ptext26:
 10825                           	opt callstack 0
 10826  01F878                     _hid_input:
 10827                           	opt callstack 13
 10828                           
 10829                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
 10830                           
 10831                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10832                           ;incstack = 0
 10833  01F878  0E02               	movlw	2
 10834  01F87A  6EE6               	movwf	postinc1,c
 10835  01F87C  EC6A  F014         	call	_get_switch	;wreg free
 10836  01F880  502A               	movf	btemp^0,w,c
 10837  01F882  B4D8               	btfsc	status,2,c
 10838  01F884  D02C               	goto	l17209
 10839                           
 10840                           ;hid.c: 6:   h->wait_select = 0;
 10841                           ;stkvar	_h @ sp[(0)+-2]
 10842  01F886  0EFE               	movlw	-2
 10843  01F888  006F FF8C  F034    	movff	plusw1,btemp+10
 10844  01F88E  0EFF               	movlw	-1
 10845  01F890  006F FF8C  F035    	movff	plusw1,btemp+11
 10846  01F896  0E02               	movlw	2
 10847  01F898  2434               	addwf	(btemp+10)^0,w,c
 10848  01F89A  6ED9               	movwf	fsr2l,c
 10849  01F89C  0E00               	movlw	0
 10850  01F89E  2035               	addwfc	(btemp+11)^0,w,c
 10851  01F8A0  6EDA               	movwf	fsr2h,c
 10852  01F8A2  0E00               	movlw	0
 10853  01F8A4  6EDF               	movwf	indf2,c
 10854                           
 10855                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
 10856  01F8A6  0E02               	movlw	2
 10857  01F8A8  6EE6               	movwf	postinc1,c
 10858  01F8AA  EC6A  F014         	call	_get_switch	;wreg free
 10859  01F8AE  502A               	movf	btemp^0,w,c
 10860  01F8B0  B4D8               	btfsc	status,2,c
 10861  01F8B2  D003               	goto	u16730
 10862  01F8B4  6A35               	clrf	(btemp+11)^0,c
 10863  01F8B6  2A35               	incf	(btemp+11)^0,f,c
 10864  01F8B8  D001               	goto	u16748
 10865  01F8BA                     u16730:
 10866  01F8BA  6A35               	clrf	(btemp+11)^0,c
 10867  01F8BC                     u16748:
 10868                           
 10869                           ;stkvar	_h @ sp[(0)+-2]
 10870  01F8BC  0EFE               	movlw	-2
 10871  01F8BE  006F FF8C  F032    	movff	plusw1,btemp+8
 10872  01F8C4  0EFF               	movlw	-1
 10873  01F8C6  006F FF8C  F033    	movff	plusw1,btemp+9
 10874  01F8CC  0E03               	movlw	3
 10875  01F8CE  2432               	addwf	(btemp+8)^0,w,c
 10876  01F8D0  6ED9               	movwf	fsr2l,c
 10877  01F8D2  0E00               	movlw	0
 10878  01F8D4  2033               	addwfc	(btemp+9)^0,w,c
 10879  01F8D6  6EDA               	movwf	fsr2h,c
 10880  01F8D8  0060  F0D7  FFDF   	movff	btemp+11,indf2
 10881  01F8DE                     l17209:
 10882                           
 10883                           ;hid.c: 10:  if (get_switch(SENTER)) {
 10884  01F8DE  0E03               	movlw	3
 10885  01F8E0  6EE6               	movwf	postinc1,c
 10886  01F8E2  EC6A  F014         	call	_get_switch	;wreg free
 10887  01F8E6  502A               	movf	btemp^0,w,c
 10888  01F8E8  B4D8               	btfsc	status,2,c
 10889  01F8EA  D02C               	goto	l17215
 10890                           
 10891                           ;hid.c: 11:   h->wait_enter = 0;
 10892                           ;stkvar	_h @ sp[(0)+-2]
 10893  01F8EC  0EFE               	movlw	-2
 10894  01F8EE  006F FF8C  F034    	movff	plusw1,btemp+10
 10895  01F8F4  0EFF               	movlw	-1
 10896  01F8F6  006F FF8C  F035    	movff	plusw1,btemp+11
 10897  01F8FC  0E04               	movlw	4
 10898  01F8FE  2434               	addwf	(btemp+10)^0,w,c
 10899  01F900  6ED9               	movwf	fsr2l,c
 10900  01F902  0E00               	movlw	0
 10901  01F904  2035               	addwfc	(btemp+11)^0,w,c
 10902  01F906  6EDA               	movwf	fsr2h,c
 10903  01F908  0E00               	movlw	0
 10904  01F90A  6EDF               	movwf	indf2,c
 10905                           
 10906                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
 10907  01F90C  0E03               	movlw	3
 10908  01F90E  6EE6               	movwf	postinc1,c
 10909  01F910  EC6A  F014         	call	_get_switch	;wreg free
 10910  01F914  502A               	movf	btemp^0,w,c
 10911  01F916  B4D8               	btfsc	status,2,c
 10912  01F918  D003               	goto	u16760
 10913  01F91A  6A35               	clrf	(btemp+11)^0,c
 10914  01F91C  2A35               	incf	(btemp+11)^0,f,c
 10915  01F91E  D001               	goto	u16778
 10916  01F920                     u16760:
 10917  01F920  6A35               	clrf	(btemp+11)^0,c
 10918  01F922                     u16778:
 10919                           
 10920                           ;stkvar	_h @ sp[(0)+-2]
 10921  01F922  0EFE               	movlw	-2
 10922  01F924  006F FF8C  F032    	movff	plusw1,btemp+8
 10923  01F92A  0EFF               	movlw	-1
 10924  01F92C  006F FF8C  F033    	movff	plusw1,btemp+9
 10925  01F932  0E05               	movlw	5
 10926  01F934  2432               	addwf	(btemp+8)^0,w,c
 10927  01F936  6ED9               	movwf	fsr2l,c
 10928  01F938  0E00               	movlw	0
 10929  01F93A  2033               	addwfc	(btemp+9)^0,w,c
 10930  01F93C  6EDA               	movwf	fsr2h,c
 10931  01F93E  0060  F0D7  FFDF   	movff	btemp+11,indf2
 10932  01F944                     l17215:
 10933                           
 10934                           ;hid.c: 15:  if (get_switch(SCALIB)) {
 10935  01F944  0E04               	movlw	4
 10936  01F946  6EE6               	movwf	postinc1,c
 10937  01F948  EC6A  F014         	call	_get_switch	;wreg free
 10938  01F94C  502A               	movf	btemp^0,w,c
 10939  01F94E  B4D8               	btfsc	status,2,c
 10940  01F950  D02C               	goto	l2292
 10941                           
 10942                           ;hid.c: 16:   h->wait_calib = 0;
 10943                           ;stkvar	_h @ sp[(0)+-2]
 10944  01F952  0EFE               	movlw	-2
 10945  01F954  006F FF8C  F034    	movff	plusw1,btemp+10
 10946  01F95A  0EFF               	movlw	-1
 10947  01F95C  006F FF8C  F035    	movff	plusw1,btemp+11
 10948  01F962  0E06               	movlw	6
 10949  01F964  2434               	addwf	(btemp+10)^0,w,c
 10950  01F966  6ED9               	movwf	fsr2l,c
 10951  01F968  0E00               	movlw	0
 10952  01F96A  2035               	addwfc	(btemp+11)^0,w,c
 10953  01F96C  6EDA               	movwf	fsr2h,c
 10954  01F96E  0E00               	movlw	0
 10955  01F970  6EDF               	movwf	indf2,c
 10956                           
 10957                           ;hid.c: 17:   h->calib_p = get_switch(SCALIB);
 10958  01F972  0E04               	movlw	4
 10959  01F974  6EE6               	movwf	postinc1,c
 10960  01F976  EC6A  F014         	call	_get_switch	;wreg free
 10961  01F97A  502A               	movf	btemp^0,w,c
 10962  01F97C  B4D8               	btfsc	status,2,c
 10963  01F97E  D003               	goto	u16790
 10964  01F980  6A35               	clrf	(btemp+11)^0,c
 10965  01F982  2A35               	incf	(btemp+11)^0,f,c
 10966  01F984  D001               	goto	u16808
 10967  01F986                     u16790:
 10968  01F986  6A35               	clrf	(btemp+11)^0,c
 10969  01F988                     u16808:
 10970                           
 10971                           ;stkvar	_h @ sp[(0)+-2]
 10972  01F988  0EFE               	movlw	-2
 10973  01F98A  006F FF8C  F032    	movff	plusw1,btemp+8
 10974  01F990  0EFF               	movlw	-1
 10975  01F992  006F FF8C  F033    	movff	plusw1,btemp+9
 10976  01F998  0E07               	movlw	7
 10977  01F99A  2432               	addwf	(btemp+8)^0,w,c
 10978  01F99C  6ED9               	movwf	fsr2l,c
 10979  01F99E  0E00               	movlw	0
 10980  01F9A0  2033               	addwfc	(btemp+9)^0,w,c
 10981  01F9A2  6EDA               	movwf	fsr2h,c
 10982  01F9A4  0060  F0D7  FFDF   	movff	btemp+11,indf2
 10983  01F9AA                     l2292:
 10984                           
 10985                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
 10986  01F9AA  52E5               	movf	postdec1,f,c
 10987  01F9AC  52E5               	movf	postdec1,f,c
 10988  01F9AE  0012               	return		;funcret
 10989  01F9B0                     __end_of_hid_input:
 10990                           	opt callstack 0
 10991                           
 10992 ;; *************** function _esr_check *****************
 10993 ;; Defined at:
 10994 ;;		line 197 in file "bsoc.c"
 10995 ;; Parameters:    Size  Location     Type
 10996 ;;  fsm             1  [STACK] const unsigned char 
 10997 ;; Auto vars:     Size  Location     Type
 10998 ;;		None
 10999 ;; Return value:  Size  Location     Type
 11000 ;;                  4  [STACK] float 
 11001 ;; Registers used:
 11002 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 11003 ;; Tracked objects:
 11004 ;;		On entry : 0/0
 11005 ;;		On exit  : 0/0
 11006 ;;		Unchanged: 0/0
 11007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11012 ;;Total ram usage:        0 bytes
 11013 ;; Hardware stack levels used:    1
 11014 ;; Hardware stack levels required when called:   18
 11015 ;; This function calls:
 11016 ;;		_StartTimer
 11017 ;;		_TimerDone
 11018 ;;		___fldiv
 11019 ;;		___flsub
 11020 ;;		_conv_raw_result
 11021 ;;		_fabsf
 11022 ;;		_set_load_relay_one
 11023 ;;		_set_load_relay_two
 11024 ;;		_update_adc_result
 11025 ;; This function is called by:
 11026 ;;		_main
 11027 ;; This function uses a reentrant model
 11028 ;;
 11029                           
 11030                           	psect	text27
 11031  01B972                     __ptext27:
 11032                           	opt callstack 0
 11033  01B972                     _esr_check:
 11034                           	opt callstack 12
 11035                           
 11036                           ;bsoc.c: 197: float esr_check(const uint8_t fsm);bsoc.c: 198: {;bsoc.c: 199:  static uin
      +                          t8_t esr_state = 0;;bsoc.c: 201:  if (fsm) {
 11037                           ;stkvar	_fsm @ sp[(0)+-1]
 11038                           
 11039                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11040                           ;incstack = 0
 11041  01B972  0EFF               	movlw	-1
 11042  01B974  50E3               	movf	plusw1,w,c
 11043  01B976  B4D8               	btfsc	status,2,c
 11044  01B978  D149               	goto	l14407
 11045                           
 11046                           ;bsoc.c: 202:   esr_state = 0;
 11047  01B97A  0100               	movlb	0	; () banked
 11048  01B97C  6BC6               	clrf	esr_check@esr_state& (0+255),b
 11049                           
 11050                           ; BSR set to: 0
 11051                           ;bsoc.c: 203:   return -10.0;
 11052  01B97E  0E00               	movlw	0
 11053  01B980  6E2A               	movwf	btemp^0,c
 11054  01B982  0E00               	movlw	0
 11055  01B984  6E2B               	movwf	(btemp+1)^0,c
 11056  01B986  0E20               	movlw	32
 11057  01B988  6E2C               	movwf	(btemp+2)^0,c
 11058  01B98A  0EC1               	movlw	193
 11059  01B98C  D15B               	goto	L7
 11060  01B98E                     l14339:
 11061                           
 11062                           ; BSR set to: 0
 11063                           ;bsoc.c: 208:   StartTimer(TMR_ESR, 10000);
 11064  01B98E  0E10               	movlw	16
 11065  01B990  6EE6               	movwf	postinc1,c
 11066  01B992  0E27               	movlw	39
 11067  01B994  6EE6               	movwf	postinc1,c
 11068  01B996  0E0C               	movlw	12
 11069  01B998  6EE6               	movwf	postinc1,c
 11070  01B99A  EC49  F012         	call	_StartTimer	;wreg free
 11071  01B99E                     l14341:
 11072                           
 11073                           ;bsoc.c: 209:   esr_state++;
 11074  01B99E  0100               	movlb	0	; () banked
 11075  01B9A0  2BC6               	incf	esr_check@esr_state& (0+255),f,b
 11076                           
 11077                           ;bsoc.c: 210:   break;
 11078  01B9A2  D149               	goto	l14409
 11079  01B9A4                     l14343:
 11080                           
 11081                           ; BSR set to: 0
 11082                           ;bsoc.c: 215:   set_load_relay_one(0);
 11083  01B9A4  0E00               	movlw	0
 11084  01B9A6  6EE6               	movwf	postinc1,c
 11085  01B9A8  EC7D  F017         	call	_set_load_relay_one	;wreg free
 11086                           
 11087                           ;bsoc.c: 216:   set_load_relay_two(0);
 11088  01B9AC  0E00               	movlw	0
 11089  01B9AE  6EE6               	movwf	postinc1,c
 11090  01B9B0  EC75  F017         	call	_set_load_relay_two	;wreg free
 11091                           
 11092                           ;bsoc.c: 217:   if (TimerDone(TMR_ESR)) {
 11093  01B9B4  0E0C               	movlw	12
 11094  01B9B6  6EE6               	movwf	postinc1,c
 11095  01B9B8  ECD5  F014         	call	_TimerDone	;wreg free
 11096  01B9BC  502A               	movf	btemp^0,w,c
 11097  01B9BE  B4D8               	btfsc	status,2,c
 11098  01B9C0  D009               	goto	l14349
 11099                           
 11100                           ;bsoc.c: 218:    StartTimer(TMR_ESR, 10000);
 11101  01B9C2  0E10               	movlw	16
 11102  01B9C4  6EE6               	movwf	postinc1,c
 11103  01B9C6  0E27               	movlw	39
 11104  01B9C8  6EE6               	movwf	postinc1,c
 11105  01B9CA  0E0C               	movlw	12
 11106  01B9CC  6EE6               	movwf	postinc1,c
 11107  01B9CE  EC49  F012         	call	_StartTimer	;wreg free
 11108                           
 11109                           ;bsoc.c: 219:   } else {
 11110  01B9D2  D006               	goto	l14353
 11111  01B9D4                     l14349:
 11112                           
 11113                           ;bsoc.c: 220:    return -2.0;
 11114  01B9D4  0E00               	movlw	0
 11115  01B9D6  6E2A               	movwf	btemp^0,c
 11116  01B9D8  0E00               	movlw	0
 11117  01B9DA  6E2B               	movwf	(btemp+1)^0,c
 11118  01B9DC  0E00               	movlw	0
 11119  01B9DE  D066               	goto	L9
 11120  01B9E0                     l14353:
 11121                           
 11122                           ;bsoc.c: 225:   update_adc_result();
 11123  01B9E0  ECE7  F012         	call	_update_adc_result	;wreg free
 11124                           
 11125                           ;bsoc.c: 226:   C.bv_noload = conv_raw_result(V_BAT, CONV);
 11126  01B9E4  0E00               	movlw	0
 11127  01B9E6  6EE6               	movwf	postinc1,c
 11128  01B9E8  0E04               	movlw	4
 11129  01B9EA  6EE6               	movwf	postinc1,c
 11130  01B9EC  EC00  F0C9         	call	_conv_raw_result	;wreg free
 11131  01B9F0  0060  F0A8  FA21   	movff	btemp,_C+290	;volatile
 11132  01B9F6  0060  F0AC  FA22   	movff	btemp+1,_C+291	;volatile
 11133  01B9FC  0060  F0B0  FA23   	movff	btemp+2,_C+292	;volatile
 11134  01BA02  0060  F0B4  FA24   	movff	btemp+3,_C+293	;volatile
 11135  01BA08  D7CA               	goto	l14341
 11136  01BA0A                     l14359:
 11137                           
 11138                           ; BSR set to: 0
 11139                           ;bsoc.c: 230:   set_load_relay_one(1);
 11140  01BA0A  0E01               	movlw	1
 11141  01BA0C  6EE6               	movwf	postinc1,c
 11142  01BA0E  EC7D  F017         	call	_set_load_relay_one	;wreg free
 11143                           
 11144                           ;bsoc.c: 231:   if (TimerDone(TMR_ESR)) {
 11145  01BA12  0E0C               	movlw	12
 11146  01BA14  6EE6               	movwf	postinc1,c
 11147  01BA16  ECD5  F014         	call	_TimerDone	;wreg free
 11148  01BA1A  502A               	movf	btemp^0,w,c
 11149  01BA1C  B4D8               	btfsc	status,2,c
 11150  01BA1E  D009               	goto	l14365
 11151                           
 11152                           ;bsoc.c: 232:    StartTimer(TMR_ESR, 10000);
 11153  01BA20  0E10               	movlw	16
 11154  01BA22  6EE6               	movwf	postinc1,c
 11155  01BA24  0E27               	movlw	39
 11156  01BA26  6EE6               	movwf	postinc1,c
 11157  01BA28  0E0C               	movlw	12
 11158  01BA2A  6EE6               	movwf	postinc1,c
 11159  01BA2C  EC49  F012         	call	_StartTimer	;wreg free
 11160                           
 11161                           ;bsoc.c: 233:   } else {
 11162  01BA30  D006               	goto	l14369
 11163  01BA32                     l14365:
 11164                           
 11165                           ;bsoc.c: 234:    return -3.0;
 11166  01BA32  0E00               	movlw	0
 11167  01BA34  6E2A               	movwf	btemp^0,c
 11168  01BA36  0E00               	movlw	0
 11169  01BA38  6E2B               	movwf	(btemp+1)^0,c
 11170  01BA3A  0E40               	movlw	64
 11171  01BA3C  D037               	goto	L9
 11172  01BA3E                     l14369:
 11173                           
 11174                           ;bsoc.c: 237:   update_adc_result();
 11175  01BA3E  ECE7  F012         	call	_update_adc_result	;wreg free
 11176                           
 11177                           ;bsoc.c: 238:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
 11178  01BA42  0E00               	movlw	0
 11179  01BA44  6EE6               	movwf	postinc1,c
 11180  01BA46  0E04               	movlw	4
 11181  01BA48  6EE6               	movwf	postinc1,c
 11182  01BA4A  EC00  F0C9         	call	_conv_raw_result	;wreg free
 11183  01BA4E  0060  F0A8  FA25   	movff	btemp,_C+294	;volatile
 11184  01BA54  0060  F0AC  FA26   	movff	btemp+1,_C+295	;volatile
 11185  01BA5A  0060  F0B0  FA27   	movff	btemp+2,_C+296	;volatile
 11186  01BA60  0060  F0B4  FA28   	movff	btemp+3,_C+297	;volatile
 11187                           
 11188                           ;bsoc.c: 239:   C.load_i1 = conv_raw_result(C_BATT, CONV);
 11189  01BA66  0E00               	movlw	0
 11190  01BA68  6EE6               	movwf	postinc1,c
 11191  01BA6A  0E00               	movlw	0
 11192  01BA6C  6EE6               	movwf	postinc1,c
 11193  01BA6E  EC00  F0C9         	call	_conv_raw_result	;wreg free
 11194  01BA72  0060  F0A8  FA19   	movff	btemp,_C+282	;volatile
 11195  01BA78  0060  F0AC  FA1A   	movff	btemp+1,_C+283	;volatile
 11196  01BA7E  0060  F0B0  FA1B   	movff	btemp+2,_C+284	;volatile
 11197  01BA84  0060  F0B4  FA1C   	movff	btemp+3,_C+285	;volatile
 11198  01BA8A  D789               	goto	l14341
 11199  01BA8C                     l14377:
 11200                           
 11201                           ; BSR set to: 0
 11202                           ;bsoc.c: 243:   set_load_relay_two(1);
 11203  01BA8C  0E01               	movlw	1
 11204  01BA8E  6EE6               	movwf	postinc1,c
 11205  01BA90  EC75  F017         	call	_set_load_relay_two	;wreg free
 11206                           
 11207                           ;bsoc.c: 244:   if (!TimerDone(TMR_ESR))
 11208  01BA94  0E0C               	movlw	12
 11209  01BA96  6EE6               	movwf	postinc1,c
 11210  01BA98  ECD5  F014         	call	_TimerDone	;wreg free
 11211  01BA9C  502A               	movf	btemp^0,w,c
 11212  01BA9E  A4D8               	btfss	status,2,c
 11213  01BAA0  D008               	goto	l14385
 11214                           
 11215                           ;bsoc.c: 245:    return -4.0;
 11216  01BAA2  0E00               	movlw	0
 11217  01BAA4  6E2A               	movwf	btemp^0,c
 11218  01BAA6  0E00               	movlw	0
 11219  01BAA8  6E2B               	movwf	(btemp+1)^0,c
 11220  01BAAA  0E80               	movlw	128
 11221  01BAAC                     L9:
 11222  01BAAC  6E2C               	movwf	(btemp+2)^0,c
 11223  01BAAE  0EC0               	movlw	192
 11224  01BAB0  D0C9               	goto	L7
 11225  01BAB2                     l14385:
 11226                           
 11227                           ;bsoc.c: 247:   update_adc_result();
 11228  01BAB2  ECE7  F012         	call	_update_adc_result	;wreg free
 11229                           
 11230                           ;bsoc.c: 248:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
 11231  01BAB6  0E00               	movlw	0
 11232  01BAB8  6EE6               	movwf	postinc1,c
 11233  01BABA  0E04               	movlw	4
 11234  01BABC  6EE6               	movwf	postinc1,c
 11235  01BABE  EC00  F0C9         	call	_conv_raw_result	;wreg free
 11236  01BAC2  0060  F0A8  FA29   	movff	btemp,_C+298	;volatile
 11237  01BAC8  0060  F0AC  FA2A   	movff	btemp+1,_C+299	;volatile
 11238  01BACE  0060  F0B0  FA2B   	movff	btemp+2,_C+300	;volatile
 11239  01BAD4  0060  F0B4  FA2C   	movff	btemp+3,_C+301	;volatile
 11240                           
 11241                           ;bsoc.c: 249:   C.load_i2 = conv_raw_result(C_BATT, CONV);
 11242  01BADA  0E00               	movlw	0
 11243  01BADC  6EE6               	movwf	postinc1,c
 11244  01BADE  0E00               	movlw	0
 11245  01BAE0  6EE6               	movwf	postinc1,c
 11246  01BAE2  EC00  F0C9         	call	_conv_raw_result	;wreg free
 11247  01BAE6  0060  F0A8  FA1D   	movff	btemp,_C+286	;volatile
 11248  01BAEC  0060  F0AC  FA1E   	movff	btemp+1,_C+287	;volatile
 11249  01BAF2  0060  F0B0  FA1F   	movff	btemp+2,_C+288	;volatile
 11250  01BAF8  0060  F0B4  FA20   	movff	btemp+3,_C+289	;volatile
 11251                           
 11252                           ;bsoc.c: 251:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
 11253  01BAFE  EE22  F21D         	lfsr	2,_C+286	;volatile
 11254  01BB02  006F FF7B FFE6     	movff	postinc2,postinc1
 11255  01BB08  006F FF7B FFE6     	movff	postinc2,postinc1
 11256  01BB0E  006F FF7B FFE6     	movff	postinc2,postinc1
 11257  01BB14  006F FF7B FFE6     	movff	postinc2,postinc1
 11258  01BB1A  EE22  F219         	lfsr	2,_C+282	;volatile
 11259  01BB1E  006F FF7B FFE6     	movff	postinc2,postinc1
 11260  01BB24  006F FF7B FFE6     	movff	postinc2,postinc1
 11261  01BB2A  006F FF7B FFE6     	movff	postinc2,postinc1
 11262  01BB30  006F FF7B FFE6     	movff	postinc2,postinc1
 11263  01BB36  ECA3  F011         	call	___flsub	;wreg free
 11264  01BB3A  0060  F0AB  FFE6   	movff	btemp,postinc1
 11265  01BB40  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11266  01BB46  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11267  01BB4C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11268  01BB52  EE22  F229         	lfsr	2,_C+298	;volatile
 11269  01BB56  006F FF7B FFE6     	movff	postinc2,postinc1
 11270  01BB5C  006F FF7B FFE6     	movff	postinc2,postinc1
 11271  01BB62  006F FF7B FFE6     	movff	postinc2,postinc1
 11272  01BB68  006F FF7B FFE6     	movff	postinc2,postinc1
 11273  01BB6E  EE22  F225         	lfsr	2,_C+294	;volatile
 11274  01BB72  006F FF7B FFE6     	movff	postinc2,postinc1
 11275  01BB78  006F FF7B FFE6     	movff	postinc2,postinc1
 11276  01BB7E  006F FF7B FFE6     	movff	postinc2,postinc1
 11277  01BB84  006F FF7B FFE6     	movff	postinc2,postinc1
 11278  01BB8A  ECA3  F011         	call	___flsub	;wreg free
 11279  01BB8E  0060  F0AB  FFE6   	movff	btemp,postinc1
 11280  01BB94  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11281  01BB9A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11282  01BBA0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11283  01BBA6  ECB8  F0C3         	call	___fldiv	;wreg free
 11284  01BBAA  0060  F0AB  FFE6   	movff	btemp,postinc1
 11285  01BBB0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11286  01BBB6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11287  01BBBC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11288  01BBC2  ECBE  F006         	call	_fabsf	;wreg free
 11289  01BBC6  0060  F0A8  F987   	movff	btemp,_C+136	;volatile
 11290  01BBCC  0060  F0AC  F988   	movff	btemp+1,_C+137	;volatile
 11291  01BBD2  0060  F0B0  F989   	movff	btemp+2,_C+138	;volatile
 11292  01BBD8  0060  F0B4  F98A   	movff	btemp+3,_C+139	;volatile
 11293                           
 11294                           ;bsoc.c: 252:   set_load_relay_one(0);
 11295  01BBDE  0E00               	movlw	0
 11296  01BBE0  6EE6               	movwf	postinc1,c
 11297  01BBE2  EC7D  F017         	call	_set_load_relay_one	;wreg free
 11298                           
 11299                           ;bsoc.c: 253:   set_load_relay_two(0);
 11300  01BBE6  0E00               	movlw	0
 11301  01BBE8  6EE6               	movwf	postinc1,c
 11302  01BBEA  EC75  F017         	call	_set_load_relay_two	;wreg free
 11303                           
 11304                           ;bsoc.c: 254:   esr_state = 0;
 11305  01BBEE  0100               	movlb	0	; () banked
 11306  01BBF0  6BC6               	clrf	esr_check@esr_state& (0+255),b
 11307                           
 11308                           ; BSR set to: 0
 11309                           ;bsoc.c: 255:   return C.esr;
 11310  01BBF2  0062  F61C  F02A   	movff	_C+136,btemp	;volatile
 11311  01BBF8  0062  F620  F02B   	movff	_C+137,btemp+1	;volatile
 11312  01BBFE  0062  F624  F02C   	movff	_C+138,btemp+2	;volatile
 11313  01BC04  0062  F628  F02D   	movff	_C+139,btemp+3	;volatile
 11314  01BC0A  D01D               	goto	l2417
 11315  01BC0C                     l14407:
 11316  01BC0C  0100               	movlb	0	; () banked
 11317  01BC0E  51C6               	movf	esr_check@esr_state& (0+255),w,b
 11318  01BC10  6E34               	movwf	(btemp+10)^0,c
 11319  01BC12  6A35               	clrf	(btemp+11)^0,c
 11320                           
 11321                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11322                           ; Switch size 1, requested type "simple"
 11323                           ; Number of cases is 1, Range of values is 0 to 0
 11324                           ; switch strategies available:
 11325                           ; Name         Instructions Cycles
 11326                           ; simple_byte            4     3 (average)
 11327                           ;	Chosen strategy is simple_byte
 11328  01BC14  5035               	movf	(btemp+11)^0,w,c
 11329  01BC16  0A00               	xorlw	0	; case 0
 11330  01BC18  A4D8               	btfss	status,2,c
 11331  01BC1A  D00D               	goto	l14409
 11332                           
 11333                           ; BSR set to: 0
 11334                           ; Switch size 1, requested type "simple"
 11335                           ; Number of cases is 4, Range of values is 0 to 3
 11336                           ; switch strategies available:
 11337                           ; Name         Instructions Cycles
 11338                           ; simple_byte           13     7 (average)
 11339                           ;	Chosen strategy is simple_byte
 11340  01BC1C  5034               	movf	(btemp+10)^0,w,c
 11341  01BC1E  0A00               	xorlw	0	; case 0
 11342  01BC20  B4D8               	btfsc	status,2,c
 11343  01BC22  D6B5               	goto	l14339
 11344  01BC24  0A01               	xorlw	1	; case 1
 11345  01BC26  B4D8               	btfsc	status,2,c
 11346  01BC28  D6BD               	goto	l14343
 11347  01BC2A  0A03               	xorlw	3	; case 2
 11348  01BC2C  B4D8               	btfsc	status,2,c
 11349  01BC2E  D6ED               	goto	l14359
 11350  01BC30  0A01               	xorlw	1	; case 3
 11351  01BC32  B4D8               	btfsc	status,2,c
 11352  01BC34  D72B               	goto	l14377
 11353  01BC36                     l14409:
 11354                           
 11355                           ; BSR set to: 0
 11356                           ;bsoc.c: 260:  return -1.0;
 11357  01BC36  0E00               	movlw	0
 11358  01BC38  6E2A               	movwf	btemp^0,c
 11359  01BC3A  0E00               	movlw	0
 11360  01BC3C  6E2B               	movwf	(btemp+1)^0,c
 11361  01BC3E  0E80               	movlw	128
 11362  01BC40  6E2C               	movwf	(btemp+2)^0,c
 11363  01BC42  0EBF               	movlw	191
 11364  01BC44                     L7:
 11365  01BC44  6E2D               	movwf	(btemp+3)^0,c
 11366  01BC46                     l2417:
 11367                           
 11368                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 11369  01BC46  52E5               	movf	postdec1,f,c
 11370  01BC48  0012               	return		;funcret
 11371  01BC4A                     __end_of_esr_check:
 11372                           	opt callstack 0
 11373                           
 11374 ;; *************** function _update_adc_result *****************
 11375 ;; Defined at:
 11376 ;;		line 111 in file "daq.c"
 11377 ;; Parameters:    Size  Location     Type
 11378 ;;		None
 11379 ;; Auto vars:     Size  Location     Type
 11380 ;;		None
 11381 ;; Return value:  Size  Location     Type
 11382 ;;                  1  [STACK] _Bool 
 11383 ;; Registers used:
 11384 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
 11385 ;; Tracked objects:
 11386 ;;		On entry : 0/0
 11387 ;;		On exit  : 0/0
 11388 ;;		Unchanged: 0/0
 11389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11394 ;;Total ram usage:        0 bytes
 11395 ;; Hardware stack levels used:    1
 11396 ;; Hardware stack levels required when called:   17
 11397 ;; This function calls:
 11398 ;;		_StartTimer
 11399 ;;		_TimerDone
 11400 ;;		_check_adc_scan
 11401 ;;		_clear_adc_scan
 11402 ;;		_start_adc_scan
 11403 ;; This function is called by:
 11404 ;;		_esr_check
 11405 ;; This function uses a reentrant model
 11406 ;;
 11407                           
 11408                           	psect	text28
 11409  0025CE                     __ptext28:
 11410                           	opt callstack 0
 11411  0025CE                     _update_adc_result:
 11412                           	opt callstack 12
 11413                           
 11414                           ;daq.c: 113:  if (R.done) {
 11415                           
 11416                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11417                           ;incstack = 0
 11418  0025CE  0101               	movlb	1	; () banked
 11419  0025D0  5135               	movf	(_R+53)& (0+255),w,b	;volatile
 11420  0025D2  B4D8               	btfsc	status,2,c
 11421  0025D4  0012               	return	
 11422                           
 11423                           ; BSR set to: 1
 11424                           ;daq.c: 114:   clear_adc_scan();
 11425  0025D6  ECF7  F017         	call	_clear_adc_scan	;wreg free
 11426                           
 11427                           ; BSR set to: 1
 11428                           ;daq.c: 115:   start_adc_scan();
 11429  0025DA  EC61  F00E         	call	_start_adc_scan	;wreg free
 11430                           
 11431                           ;daq.c: 116:   StartTimer(TMR_ADC, 200);
 11432  0025DE  0EC8               	movlw	200
 11433  0025E0  6EE6               	movwf	postinc1,c
 11434  0025E2  0E00               	movlw	0
 11435  0025E4  6EE6               	movwf	postinc1,c
 11436  0025E6  0E01               	movlw	1
 11437  0025E8  6EE6               	movwf	postinc1,c
 11438  0025EA  EC49  F012         	call	_StartTimer	;wreg free
 11439  0025EE                     l13767:
 11440  0025EE  0E01               	movlw	1
 11441  0025F0  6EE6               	movwf	postinc1,c
 11442  0025F2  ECD5  F014         	call	_TimerDone	;wreg free
 11443  0025F6  502A               	movf	btemp^0,w,c
 11444  0025F8  A4D8               	btfss	status,2,c
 11445  0025FA  0012               	return	
 11446  0025FC  ECDD  F017         	call	_check_adc_scan	;wreg free
 11447  002600  502A               	movf	btemp^0,w,c
 11448  002602  A4D8               	btfss	status,2,c
 11449  002604  0012               	return	
 11450  002606  D7F3               	goto	l13767
 11451  002608                     __end_of_update_adc_result:
 11452                           	opt callstack 0
 11453                           
 11454 ;; *************** function _check_adc_scan *****************
 11455 ;; Defined at:
 11456 ;;		line 95 in file "daq.c"
 11457 ;; Parameters:    Size  Location     Type
 11458 ;;		None
 11459 ;; Auto vars:     Size  Location     Type
 11460 ;;		None
 11461 ;; Return value:  Size  Location     Type
 11462 ;;                  1  [STACK] _Bool 
 11463 ;; Registers used:
 11464 ;;		btemp
 11465 ;; Tracked objects:
 11466 ;;		On entry : 0/2
 11467 ;;		On exit  : 0/0
 11468 ;;		Unchanged: 0/0
 11469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11474 ;;Total ram usage:        0 bytes
 11475 ;; Hardware stack levels used:    1
 11476 ;; Hardware stack levels required when called:   15
 11477 ;; This function calls:
 11478 ;;		Nothing
 11479 ;; This function is called by:
 11480 ;;		_main
 11481 ;;		_update_adc_result
 11482 ;; This function uses a reentrant model
 11483 ;;
 11484                           
 11485                           	psect	text29
 11486  002FBA                     __ptext29:
 11487                           	opt callstack 0
 11488  002FBA                     _check_adc_scan:
 11489                           	opt callstack 13
 11490                           
 11491                           ;daq.c: 97:  return R.done;
 11492                           
 11493                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11494                           ;incstack = 0
 11495  002FBA  0060  F4D4  F02A   	movff	_R+53,btemp	;volatile
 11496                           
 11497                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 11498  002FC0  0012               	return		;funcret
 11499  002FC2                     __end_of_check_adc_scan:
 11500                           	opt callstack 0
 11501                           
 11502 ;; *************** function _set_load_relay_two *****************
 11503 ;; Defined at:
 11504 ;;		line 131 in file "mbmc.c"
 11505 ;; Parameters:    Size  Location     Type
 11506 ;;  mode            1  [STACK] const _Bool 
 11507 ;; Auto vars:     Size  Location     Type
 11508 ;;		None
 11509 ;; Return value:  Size  Location     Type
 11510 ;;                  1  [STACK] void 
 11511 ;; Registers used:
 11512 ;;		wreg, fsr1l, fsr1h
 11513 ;; Tracked objects:
 11514 ;;		On entry : 0/0
 11515 ;;		On exit  : 0/0
 11516 ;;		Unchanged: 0/0
 11517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11522 ;;Total ram usage:        0 bytes
 11523 ;; Hardware stack levels used:    1
 11524 ;; Hardware stack levels required when called:   15
 11525 ;; This function calls:
 11526 ;;		Nothing
 11527 ;; This function is called by:
 11528 ;;		_main
 11529 ;;		_esr_check
 11530 ;; This function uses a reentrant model
 11531 ;;
 11532                           
 11533                           	psect	text30
 11534  002EEA                     __ptext30:
 11535                           	opt callstack 0
 11536  002EEA                     _set_load_relay_two:
 11537                           	opt callstack 15
 11538                           
 11539                           ;mbmc.c: 131: void set_load_relay_two(const _Bool mode);mbmc.c: 132: {;mbmc.c: 133:  LAT
      +                          Dbits.LATD5 = mode;
 11540                           ;stkvar	_mode @ sp[(0)+-1]
 11541                           
 11542                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11543                           ;incstack = 0
 11544  002EEA  0EFF               	movlw	-1
 11545  002EEC  B0E3               	btfsc	plusw1,0,c
 11546  002EEE  D002               	bra	u12595
 11547  002EF0  9ABD               	bcf	189,5,c	;volatile
 11548  002EF2  D001               	bra	u12596
 11549  002EF4                     u12595:
 11550  002EF4  8ABD               	bsf	189,5,c	;volatile
 11551  002EF6                     u12596:
 11552                           
 11553                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 11554  002EF6  52E5               	movf	postdec1,f,c
 11555  002EF8  0012               	return		;funcret
 11556  002EFA                     __end_of_set_load_relay_two:
 11557                           	opt callstack 0
 11558                           
 11559 ;; *************** function _set_load_relay_one *****************
 11560 ;; Defined at:
 11561 ;;		line 126 in file "mbmc.c"
 11562 ;; Parameters:    Size  Location     Type
 11563 ;;  mode            1  [STACK] const _Bool 
 11564 ;; Auto vars:     Size  Location     Type
 11565 ;;		None
 11566 ;; Return value:  Size  Location     Type
 11567 ;;                  1  [STACK] void 
 11568 ;; Registers used:
 11569 ;;		wreg, fsr1l, fsr1h
 11570 ;; Tracked objects:
 11571 ;;		On entry : 0/0
 11572 ;;		On exit  : 0/0
 11573 ;;		Unchanged: 0/0
 11574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11579 ;;Total ram usage:        0 bytes
 11580 ;; Hardware stack levels used:    1
 11581 ;; Hardware stack levels required when called:   15
 11582 ;; This function calls:
 11583 ;;		Nothing
 11584 ;; This function is called by:
 11585 ;;		_main
 11586 ;;		_esr_check
 11587 ;; This function uses a reentrant model
 11588 ;;
 11589                           
 11590                           	psect	text31
 11591  002EFA                     __ptext31:
 11592                           	opt callstack 0
 11593  002EFA                     _set_load_relay_one:
 11594                           	opt callstack 15
 11595                           
 11596                           ;mbmc.c: 126: void set_load_relay_one(const _Bool mode);mbmc.c: 127: {;mbmc.c: 128:  LAT
      +                          Dbits.LATD4 = mode;
 11597                           ;stkvar	_mode @ sp[(0)+-1]
 11598                           
 11599                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11600                           ;incstack = 0
 11601  002EFA  0EFF               	movlw	-1
 11602  002EFC  B0E3               	btfsc	plusw1,0,c
 11603  002EFE  D002               	bra	u12585
 11604  002F00  98BD               	bcf	189,4,c	;volatile
 11605  002F02  D001               	bra	u12586
 11606  002F04                     u12585:
 11607  002F04  88BD               	bsf	189,4,c	;volatile
 11608  002F06                     u12586:
 11609                           
 11610                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 11611  002F06  52E5               	movf	postdec1,f,c
 11612  002F08  0012               	return		;funcret
 11613  002F0A                     __end_of_set_load_relay_one:
 11614                           	opt callstack 0
 11615                           
 11616 ;; *************** function _eaDogM_WriteCommand *****************
 11617 ;; Defined at:
 11618 ;;		line 384 in file "eadog.c"
 11619 ;; Parameters:    Size  Location     Type
 11620 ;;  cmd             1  [STACK] const unsigned char 
 11621 ;; Auto vars:     Size  Location     Type
 11622 ;;		None
 11623 ;; Return value:  Size  Location     Type
 11624 ;;                  1  [STACK] void 
 11625 ;; Registers used:
 11626 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 11627 ;; Tracked objects:
 11628 ;;		On entry : 3F/3D
 11629 ;;		On exit  : 3F/0
 11630 ;;		Unchanged: 0/0
 11631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11636 ;;Total ram usage:        0 bytes
 11637 ;; Hardware stack levels used:    1
 11638 ;; Hardware stack levels required when called:   19
 11639 ;; This function calls:
 11640 ;;		_send_lcd_cmd_dma
 11641 ;; This function is called by:
 11642 ;;		_main
 11643 ;; This function uses a reentrant model
 11644 ;;
 11645                           
 11646                           	psect	text32
 11647  002F3A                     __ptext32:
 11648                           	opt callstack 0
 11649  002F3A                     _eaDogM_WriteCommand:
 11650                           	opt callstack 11
 11651                           
 11652                           ;eadog.c: 384: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 385: {;eadog.c: 386:
      +                            send_lcd_cmd_dma(cmd);
 11653                           ;stkvar	_cmd @ sp[(0)+-1]
 11654                           
 11655                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11656                           ;incstack = 0
 11657  002F3A  0EFF               	movlw	-1
 11658  002F3C  50E3               	movf	plusw1,w,c
 11659  002F3E  6EE6               	movwf	postinc1,c
 11660  002F40  ECCD  F016         	call	_send_lcd_cmd_dma	;wreg free
 11661                           
 11662                           ; BSR set to: 0
 11663                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
 11664  002F44  52E5               	movf	postdec1,f,c
 11665  002F46  0012               	return		;funcret
 11666  002F48                     __end_of_eaDogM_WriteCommand:
 11667                           	opt callstack 0
 11668                           
 11669 ;; *************** function _display_history *****************
 11670 ;; Defined at:
 11671 ;;		line 619 in file "main.c"
 11672 ;; Parameters:    Size  Location     Type
 11673 ;;		None
 11674 ;; Auto vars:     Size  Location     Type
 11675 ;;		None
 11676 ;; Return value:  Size  Location     Type
 11677 ;;                  1  [STACK] _Bool 
 11678 ;; Registers used:
 11679 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 11680 ;; Tracked objects:
 11681 ;;		On entry : 0/2
 11682 ;;		On exit  : 0/0
 11683 ;;		Unchanged: 0/0
 11684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11689 ;;Total ram usage:        0 bytes
 11690 ;; Hardware stack levels used:    1
 11691 ;; Hardware stack levels required when called:   27
 11692 ;; This function calls:
 11693 ;;		_WaitMs
 11694 ;;		_asctime
 11695 ;;		_get_switch
 11696 ;;		_get_vterm_ptr
 11697 ;;		_localtime
 11698 ;;		_sprintf
 11699 ;;		_time
 11700 ;;		_update_lcd
 11701 ;; This function is called by:
 11702 ;;		_main
 11703 ;; This function uses a reentrant model
 11704 ;;
 11705                           
 11706                           	psect	text33
 11707  01B698                     __ptext33:
 11708                           	opt callstack 0
 11709  01B698                     _display_history:
 11710                           	opt callstack 3
 11711                           
 11712                           ;main.c: 621:  static uint8_t bwait = 0;;main.c: 623:  if (get_switch(SCALIB) && (++bwai
      +                          t > 5)) {
 11713                           
 11714                           ; BSR set to: 0
 11715                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11716                           ;incstack = 0
 11717  01B698  0E04               	movlw	4
 11718  01B69A  6EE6               	movwf	postinc1,c
 11719  01B69C  EC6A  F014         	call	_get_switch	;wreg free
 11720  01B6A0  502A               	movf	btemp^0,w,c
 11721  01B6A2  B4D8               	btfsc	status,2,c
 11722  01B6A4  D15E               	goto	l17599
 11723  01B6A6  2A53               	incf	display_history@bwait^0,f,c
 11724  01B6A8  0E05               	movlw	5
 11725  01B6AA  6453               	cpfsgt	display_history@bwait^0,c
 11726  01B6AC  D15A               	goto	l17599
 11727                           
 11728                           ;main.c: 624:   pclock = time(((void*)0));
 11729  01B6AE  0E00               	movlw	0
 11730  01B6B0  6EE6               	movwf	postinc1,c
 11731  01B6B2  0E00               	movlw	0
 11732  01B6B4  6EE6               	movwf	postinc1,c
 11733  01B6B6  EC25  F00F         	call	_time	;wreg free
 11734  01B6BA  52E5               	movf	postdec1,f,c
 11735  01B6BC  006F FF9C  F041    	movff	indf1,btemp+23
 11736  01B6C2  52E5               	movf	postdec1,f,c
 11737  01B6C4  006F FF9C  F040    	movff	indf1,btemp+22
 11738  01B6CA  52E5               	movf	postdec1,f,c
 11739  01B6CC  006F FF9C  F03F    	movff	indf1,btemp+21
 11740  01B6D2  52E5               	movf	postdec1,f,c
 11741  01B6D4  006F FF9C  F03E    	movff	indf1,btemp+20
 11742  01B6DA  52E5               	movf	postdec1,f,c
 11743  01B6DC  006F FF9C  F03D    	movff	indf1,btemp+19
 11744  01B6E2  52E5               	movf	postdec1,f,c
 11745  01B6E4  006F FF9C  F03C    	movff	indf1,btemp+18
 11746  01B6EA  52E5               	movf	postdec1,f,c
 11747  01B6EC  006F FF9C  F03B    	movff	indf1,btemp+17
 11748  01B6F2  52E5               	movf	postdec1,f,c
 11749  01B6F4  006F FF9C  F03A    	movff	indf1,btemp+16
 11750  01B6FA  0060  F0E8  F0DA   	movff	btemp+16,_pclock
 11751  01B700  0060  F0EC  F0DB   	movff	btemp+17,_pclock+1
 11752  01B706  0060  F0F0  F0DC   	movff	btemp+18,_pclock+2
 11753  01B70C  0060  F0F4  F0DD   	movff	btemp+19,_pclock+3
 11754  01B712  0060  F0F8  F0DE   	movff	btemp+20,_pclock+4
 11755  01B718  0060  F0FC  F0DF   	movff	btemp+21,_pclock+5
 11756  01B71E  0060  F100  F0E0   	movff	btemp+22,_pclock+6
 11757  01B724  0060  F104  F0E1   	movff	btemp+23,_pclock+7
 11758                           
 11759                           ; BSR set to: 57
 11760                           ;main.c: 625:   t_mbmc = localtime(&pclock);
 11761  01B72A  0EDA               	movlw	_pclock& (0+255)
 11762  01B72C  6EE6               	movwf	postinc1,c
 11763  01B72E  EC2D  F017         	call	_localtime	;wreg free
 11764  01B732  0060  F0A8  F0BC   	movff	btemp,_t_mbmc
 11765  01B738  0060  F0AC  F0BD   	movff	btemp+1,_t_mbmc+1
 11766                           
 11767                           ;main.c: 626:   sprintf(get_vterm_ptr(0, 0), "%d %d %d %d                ", C.hist[0].h[
      +                          0], C.hist[0].h[1], C.hist[0].h[2], C.hist[0].h[3]);
 11768  01B73E  EE22  F1E3         	lfsr	2,_C+228	;volatile
 11769  01B742  006F FF78  F034    	movff	postinc2,btemp+10
 11770  01B748  006F FF74  F035    	movff	postdec2,btemp+11
 11771  01B74E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11772  01B754  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11773  01B75A  EE22  F1E1         	lfsr	2,_C+226	;volatile
 11774  01B75E  006F FF78  F034    	movff	postinc2,btemp+10
 11775  01B764  006F FF74  F035    	movff	postdec2,btemp+11
 11776  01B76A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11777  01B770  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11778  01B776  EE22  F1DF         	lfsr	2,_C+224	;volatile
 11779  01B77A  006F FF78  F034    	movff	postinc2,btemp+10
 11780  01B780  006F FF74  F035    	movff	postdec2,btemp+11
 11781  01B786  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11782  01B78C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11783  01B792  EE22  F1DD         	lfsr	2,_C+222	;volatile
 11784  01B796  006F FF78  F034    	movff	postinc2,btemp+10
 11785  01B79C  006F FF74  F035    	movff	postdec2,btemp+11
 11786  01B7A2  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11787  01B7A8  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11788  01B7AE  0E25               	movlw	low STR_78
 11789  01B7B0  6EE6               	movwf	postinc1,c
 11790  01B7B2  0EFA               	movlw	high STR_78
 11791  01B7B4  6EE6               	movwf	postinc1,c
 11792  01B7B6  0E00               	movlw	0
 11793  01B7B8  6EE6               	movwf	postinc1,c
 11794  01B7BA  0E00               	movlw	0
 11795  01B7BC  6EE6               	movwf	postinc1,c
 11796  01B7BE  EC53  F014         	call	_get_vterm_ptr	;wreg free
 11797  01B7C2  0060  F0AB  FFE6   	movff	btemp,postinc1
 11798  01B7C8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11799  01B7CE  0E0C               	movlw	12
 11800  01B7D0  6EE6               	movwf	postinc1,c
 11801  01B7D2  EC5B  F000         	call	_sprintf	;wreg free
 11802                           
 11803                           ; BSR set to: 0
 11804                           ;main.c: 627:   sprintf(get_vterm_ptr(1, 0), "%d %d %d %d                ", C.hist[0].h[
      +                          4], C.hist[0].h[5], C.hist[0].h[6], C.hist[0].h[7]);
 11805  01B7D6  EE22  F1EB         	lfsr	2,_C+236	;volatile
 11806  01B7DA  006F FF78  F034    	movff	postinc2,btemp+10
 11807  01B7E0  006F FF74  F035    	movff	postdec2,btemp+11
 11808  01B7E6  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11809  01B7EC  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11810  01B7F2  EE22  F1E9         	lfsr	2,_C+234	;volatile
 11811  01B7F6  006F FF78  F034    	movff	postinc2,btemp+10
 11812  01B7FC  006F FF74  F035    	movff	postdec2,btemp+11
 11813  01B802  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11814  01B808  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11815  01B80E  EE22  F1E7         	lfsr	2,_C+232	;volatile
 11816  01B812  006F FF78  F034    	movff	postinc2,btemp+10
 11817  01B818  006F FF74  F035    	movff	postdec2,btemp+11
 11818  01B81E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11819  01B824  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11820  01B82A  EE22  F1E5         	lfsr	2,_C+230	;volatile
 11821  01B82E  006F FF78  F034    	movff	postinc2,btemp+10
 11822  01B834  006F FF74  F035    	movff	postdec2,btemp+11
 11823  01B83A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11824  01B840  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11825  01B846  0E25               	movlw	low STR_78
 11826  01B848  6EE6               	movwf	postinc1,c
 11827  01B84A  0EFA               	movlw	high STR_78
 11828  01B84C  6EE6               	movwf	postinc1,c
 11829  01B84E  0E00               	movlw	0
 11830  01B850  6EE6               	movwf	postinc1,c
 11831  01B852  0E01               	movlw	1
 11832  01B854  6EE6               	movwf	postinc1,c
 11833  01B856  EC53  F014         	call	_get_vterm_ptr	;wreg free
 11834  01B85A  0060  F0AB  FFE6   	movff	btemp,postinc1
 11835  01B860  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11836  01B866  0E0C               	movlw	12
 11837  01B868  6EE6               	movwf	postinc1,c
 11838  01B86A  EC5B  F000         	call	_sprintf	;wreg free
 11839                           
 11840                           ; BSR set to: 0
 11841                           ;main.c: 628:   sprintf(get_vterm_ptr(2, 0), "%d %d %d %d                ", C.hist[0].h[
      +                          8], C.hist[0].h[9], C.hist[0].h[10], C.hist[0].h[12]);
 11842  01B86E  EE22  F1F5         	lfsr	2,_C+246	;volatile
 11843  01B872  006F FF78  F034    	movff	postinc2,btemp+10
 11844  01B878  006F FF74  F035    	movff	postdec2,btemp+11
 11845  01B87E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11846  01B884  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11847  01B88A  EE22  F1F1         	lfsr	2,_C+242	;volatile
 11848  01B88E  006F FF78  F034    	movff	postinc2,btemp+10
 11849  01B894  006F FF74  F035    	movff	postdec2,btemp+11
 11850  01B89A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11851  01B8A0  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11852  01B8A6  EE22  F1EF         	lfsr	2,_C+240	;volatile
 11853  01B8AA  006F FF78  F034    	movff	postinc2,btemp+10
 11854  01B8B0  006F FF74  F035    	movff	postdec2,btemp+11
 11855  01B8B6  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11856  01B8BC  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11857  01B8C2  EE22  F1ED         	lfsr	2,_C+238	;volatile
 11858  01B8C6  006F FF78  F034    	movff	postinc2,btemp+10
 11859  01B8CC  006F FF74  F035    	movff	postdec2,btemp+11
 11860  01B8D2  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 11861  01B8D8  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 11862  01B8DE  0E25               	movlw	low STR_78
 11863  01B8E0  6EE6               	movwf	postinc1,c
 11864  01B8E2  0EFA               	movlw	high STR_78
 11865  01B8E4  6EE6               	movwf	postinc1,c
 11866  01B8E6  0E00               	movlw	0
 11867  01B8E8  6EE6               	movwf	postinc1,c
 11868  01B8EA  0E02               	movlw	2
 11869  01B8EC  6EE6               	movwf	postinc1,c
 11870  01B8EE  EC53  F014         	call	_get_vterm_ptr	;wreg free
 11871  01B8F2  0060  F0AB  FFE6   	movff	btemp,postinc1
 11872  01B8F8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11873  01B8FE  0E0C               	movlw	12
 11874  01B900  6EE6               	movwf	postinc1,c
 11875  01B902  EC5B  F000         	call	_sprintf	;wreg free
 11876                           
 11877                           ; BSR set to: 0
 11878                           ;main.c: 629:   sprintf(get_vterm_ptr(3, 0), "%s           ", asctime(t_mbmc));
 11879  01B906  0060  F2F3  FFE6   	movff	_t_mbmc,postinc1
 11880  01B90C  0060  F2F7  FFE6   	movff	_t_mbmc+1,postinc1
 11881  01B912  EC75  F0C6         	call	_asctime	;wreg free
 11882  01B916  0060  F0AB  FFE6   	movff	btemp,postinc1
 11883  01B91C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11884  01B922  0E63               	movlw	low (STR_85+5)
 11885  01B924  6EE6               	movwf	postinc1,c
 11886  01B926  0EFF               	movlw	high (STR_85+5)
 11887  01B928  6EE6               	movwf	postinc1,c
 11888  01B92A  0E00               	movlw	0
 11889  01B92C  6EE6               	movwf	postinc1,c
 11890  01B92E  0E03               	movlw	3
 11891  01B930  6EE6               	movwf	postinc1,c
 11892  01B932  EC53  F014         	call	_get_vterm_ptr	;wreg free
 11893  01B936  0060  F0AB  FFE6   	movff	btemp,postinc1
 11894  01B93C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11895  01B942  0E06               	movlw	6
 11896  01B944  6EE6               	movwf	postinc1,c
 11897  01B946  EC5B  F000         	call	_sprintf	;wreg free
 11898                           
 11899                           ; BSR set to: 0
 11900                           ;main.c: 630:   update_lcd(0);
 11901  01B94A  0E00               	movlw	0
 11902  01B94C  6EE6               	movwf	postinc1,c
 11903  01B94E  EC4B  F0F8         	call	_update_lcd	;wreg free
 11904                           
 11905                           ;main.c: 631:   WaitMs(2000);
 11906  01B952  0ED0               	movlw	208
 11907  01B954  6EE6               	movwf	postinc1,c
 11908  01B956  0E07               	movlw	7
 11909  01B958  6EE6               	movwf	postinc1,c
 11910  01B95A  EC57  F013         	call	_WaitMs	;wreg free
 11911  01B95E                     l17593:
 11912                           
 11913                           ;main.c: 632:   bwait = 0;
 11914  01B95E  6A53               	clrf	display_history@bwait^0,c
 11915  01B960  0012               	return	
 11916  01B962                     l17599:
 11917                           
 11918                           ;main.c: 635:   if (!get_switch(SCALIB))
 11919  01B962  0E04               	movlw	4
 11920  01B964  6EE6               	movwf	postinc1,c
 11921  01B966  EC6A  F014         	call	_get_switch	;wreg free
 11922  01B96A  502A               	movf	btemp^0,w,c
 11923  01B96C  A4D8               	btfss	status,2,c
 11924  01B96E  0012               	return	
 11925  01B970  D7F6               	goto	l17593
 11926  01B972                     __end_of_display_history:
 11927                           	opt callstack 0
 11928                           
 11929 ;; *************** function _time *****************
 11930 ;; Defined at:
 11931 ;;		line 243 in file "mbmc.c"
 11932 ;; Parameters:    Size  Location     Type
 11933 ;;  t               2  [STACK] PTR long long 
 11934 ;;		 -> time@current_time(8), NULL(0), 
 11935 ;; Auto vars:     Size  Location     Type
 11936 ;;		None
 11937 ;; Return value:  Size  Location     Type
 11938 ;;                  8  [STACK] long long 
 11939 ;; Registers used:
 11940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl
 11941 ;; Tracked objects:
 11942 ;;		On entry : 0/1
 11943 ;;		On exit  : 3F/39
 11944 ;;		Unchanged: 0/0
 11945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11950 ;;Total ram usage:        0 bytes
 11951 ;; Hardware stack levels used:    1
 11952 ;; Hardware stack levels required when called:   15
 11953 ;; This function calls:
 11954 ;;		Nothing
 11955 ;; This function is called by:
 11956 ;;		_main
 11957 ;;		_display_history
 11958 ;;		_check_day_time
 11959 ;;		_load_hist_data
 11960 ;; This function uses a reentrant model
 11961 ;;
 11962                           
 11963                           	psect	text34
 11964  001E4A                     __ptext34:
 11965                           	opt callstack 0
 11966  001E4A                     _time:
 11967                           	opt callstack 0
 11968                           
 11969                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 8 argfudge = 6
 11970  001E4A  0E06               	movlw	6
 11971  001E4C  26E1               	addwf	fsr1l,f,c
 11972  001E4E  0E00               	movlw	0
 11973  001E50  22E2               	addwfc	fsr1h,f,c
 11974                           
 11975                           ;mbmc.c: 243: time_t time(time_t * t);mbmc.c: 244: {;mbmc.c: 245:  static time_t current
      +                          _time;;mbmc.c: 246:  PIE8bits.TMR5IE = 0;
 11976                           
 11977                           ;incstack = 0
 11978 ;; hardware stack exceeded
 11979  001E52  0139               	movlb	57	; () banked
 11980  001E54  9D98               	bcf	152,6,b	;volatile
 11981                           
 11982                           ; BSR set to: 57
 11983                           ;mbmc.c: 247:  current_time = V.ticks;
 11984  001E56  0102               	movlb	2	; () banked
 11985  001E58  5188               	movf	(_V+129)& (0+255),w,b	;volatile
 11986  001E5A  0100               	movlb	0	; () banked
 11987  001E5C  6FD2               	movwf	time@current_time& (0+255),b
 11988  001E5E  0102               	movlb	2	; () banked
 11989  001E60  5189               	movf	(_V+130)& (0+255),w,b	;volatile
 11990  001E62  0100               	movlb	0	; () banked
 11991  001E64  6FD3               	movwf	(time@current_time+1)& (0+255),b
 11992  001E66  0102               	movlb	2	; () banked
 11993  001E68  518A               	movf	(_V+131)& (0+255),w,b	;volatile
 11994  001E6A  0100               	movlb	0	; () banked
 11995  001E6C  6FD4               	movwf	(time@current_time+2)& (0+255),b
 11996  001E6E  0102               	movlb	2	; () banked
 11997  001E70  518B               	movf	(_V+132)& (0+255),w,b	;volatile
 11998  001E72  0100               	movlb	0	; () banked
 11999  001E74  6FD5               	movwf	(time@current_time+3)& (0+255),b
 12000  001E76  6BD6               	clrf	(time@current_time+4)& (0+255),b
 12001  001E78  6BD7               	clrf	(time@current_time+5)& (0+255),b
 12002  001E7A  6BD8               	clrf	(time@current_time+6)& (0+255),b
 12003  001E7C  6BD9               	clrf	(time@current_time+7)& (0+255),b
 12004                           
 12005                           ; BSR set to: 0
 12006                           ;mbmc.c: 248:  PIE8bits.TMR5IE = 1;
 12007  001E7E  0139               	movlb	57	; () banked
 12008  001E80  8D98               	bsf	152,6,b	;volatile
 12009                           
 12010                           ; BSR set to: 57
 12011                           ;mbmc.c: 249:  if (t) {
 12012                           ;stkvar	_t @ sp[(0)+-8]
 12013  001E82  0EF8               	movlw	-8
 12014  001E84  006F FF8C  F02A    	movff	plusw1,btemp
 12015  001E8A  0EF9               	movlw	-7
 12016  001E8C  50E3               	movf	plusw1,w,c
 12017  001E8E  102A               	iorwf	btemp^0,w,c
 12018                           
 12019                           ; BSR set to: 57
 12020                           ;mbmc.c: 252:  return current_time;
 12021                           
 12022                           ; BSR set to: 57
 12023  001E90  EE20  F0D2         	lfsr	2,time@current_time
 12024                           
 12025                           ;stkvar	?_time @ sp[(0)+-8]
 12026  001E94  0E08               	movlw	8
 12027  001E96  6E2A               	movwf	btemp^0,c
 12028  001E98  0EF8               	movlw	-8
 12029  001E9A                     us1168999:
 12030  001E9A  006F FF7B FFE3     	movff	postinc2,plusw1
 12031  001EA0  28E8               	incf	wreg,w,c
 12032  001EA2  2E2A               	decfsz	btemp^0,f,c
 12033  001EA4  D7FA               	bra	us1168999
 12034                           
 12035                           ; BSR set to: 57
 12036                           ; _time: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize 
      +                          = 8, vargsize = 0
 12037  001EA6  0012               	return		;funcret
 12038  001EA8                     __end_of_time:
 12039                           	opt callstack 0
 12040                           
 12041 ;; *************** function _localtime *****************
 12042 ;; Defined at:
 12043 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/localtime.c"
 12044 ;; Parameters:    Size  Location     Type
 12045 ;;  t               1  [STACK] PTR const long long 
 12046 ;;		 -> pclock(8), 
 12047 ;; Auto vars:     Size  Location     Type
 12048 ;;		None
 12049 ;; Return value:  Size  Location     Type
 12050 ;;                  2  [STACK] PTR struct tm
 12051 ;; Registers used:
 12052 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 12053 ;; Tracked objects:
 12054 ;;		On entry : 3F/39
 12055 ;;		On exit  : 0/0
 12056 ;;		Unchanged: 0/0
 12057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12062 ;;Total ram usage:        0 bytes
 12063 ;; Hardware stack levels used:    1
 12064 ;; Hardware stack levels required when called:   21
 12065 ;; This function calls:
 12066 ;;		___localtime_r
 12067 ;; This function is called by:
 12068 ;;		_main
 12069 ;;		_display_history
 12070 ;; This function uses a reentrant model
 12071 ;;
 12072                           
 12073                           	psect	text35
 12074  002E5A                     __ptext35:
 12075                           	opt callstack 0
 12076  002E5A                     _localtime:
 12077                           	opt callstack 9
 12078                           
 12079                           ; BSR set to: 57
 12080                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12081                           ;incstack = 0
 12082  002E5A  0EDF               	movlw	low localtime@tm
 12083  002E5C  6EE6               	movwf	postinc1,c
 12084  002E5E  0E03               	movlw	high localtime@tm
 12085  002E60  6EE6               	movwf	postinc1,c
 12086                           
 12087                           ;stkvar	_t @ sp[(-2)+-1]
 12088  002E62  0EFD               	movlw	-3
 12089  002E64  50E3               	movf	plusw1,w,c
 12090  002E66  6EE6               	movwf	postinc1,c
 12091  002E68  ECCE  F0E6         	call	___localtime_r	;wreg free
 12092                           
 12093                           ; _localtime: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 12094  002E6C  52E5               	movf	postdec1,f,c
 12095  002E6E  0012               	return		;funcret
 12096  002E70                     __end_of_localtime:
 12097                           	opt callstack 0
 12098                           
 12099 ;; *************** function ___localtime_r *****************
 12100 ;; Defined at:
 12101 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/localtime_r.c"
 12102 ;; Parameters:    Size  Location     Type
 12103 ;;  t               1  [STACK] PTR const long long 
 12104 ;;		 -> pclock(8), 
 12105 ;;  tm              2  [STACK] PTR struct tm
 12106 ;;		 -> localtime@tm(24), 
 12107 ;; Auto vars:     Size  Location     Type
 12108 ;;		None
 12109 ;; Return value:  Size  Location     Type
 12110 ;;                  2  [STACK] PTR struct tm
 12111 ;; Registers used:
 12112 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 12113 ;; Tracked objects:
 12114 ;;		On entry : 0/39
 12115 ;;		On exit  : 0/0
 12116 ;;		Unchanged: 0/0
 12117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12122 ;;Total ram usage:        0 bytes
 12123 ;; Hardware stack levels used:    1
 12124 ;; Hardware stack levels required when called:   20
 12125 ;; This function calls:
 12126 ;;		___secs_to_tm
 12127 ;;		___secs_to_zone
 12128 ;; This function is called by:
 12129 ;;		_localtime
 12130 ;; This function uses a reentrant model
 12131 ;;
 12132                           
 12133                           	psect	text36
 12134  01CD9C                     __ptext36:
 12135                           	opt callstack 0
 12136  01CD9C                     ___localtime_r:
 12137                           	opt callstack 9
 12138                           
 12139                           ;stkvar	_t @ sp[(0)+-1]
 12140                           
 12141                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12142                           ;incstack = 0
 12143  01CD9C  0EFF               	movlw	-1
 12144  01CD9E  50E3               	movf	plusw1,w,c
 12145  01CDA0  6ED9               	movwf	fsr2l,c
 12146  01CDA2  6ADA               	clrf	fsr2h,c
 12147  01CDA4  0E07               	movlw	7
 12148  01CDA6  AEDB               	btfss	plusw2,7,c
 12149  01CDA8  D010               	goto	u16640
 12150  01CDAA  52DE               	movf	postinc2,f,c
 12151  01CDAC  52DE               	movf	postinc2,f,c
 12152  01CDAE  0E80               	movlw	128
 12153  01CDB0  5CDE               	subwf	postinc2,w,c
 12154  01CDB2  0EBD               	movlw	189
 12155  01CDB4  58DE               	subwfb	postinc2,w,c
 12156  01CDB6  0E0E               	movlw	14
 12157  01CDB8  58DE               	subwfb	postinc2,w,c
 12158  01CDBA  0EFF               	movlw	255
 12159  01CDBC  58DE               	subwfb	postinc2,w,c
 12160  01CDBE  0EFF               	movlw	255
 12161  01CDC0  58DE               	subwfb	postinc2,w,c
 12162  01CDC2  0EFF               	movlw	255
 12163  01CDC4  58DE               	subwfb	postinc2,w,c
 12164  01CDC6  A0D8               	btfss	status,0,c
 12165  01CDC8  D01B               	goto	u16650
 12166  01CDCA                     u16640:
 12167                           
 12168                           ;stkvar	_t @ sp[(0)+-1]
 12169  01CDCA  0EFF               	movlw	-1
 12170  01CDCC  50E3               	movf	plusw1,w,c
 12171  01CDCE  6ED9               	movwf	fsr2l,c
 12172  01CDD0  6ADA               	clrf	fsr2h,c
 12173  01CDD2  0E07               	movlw	7
 12174  01CDD4  BEDB               	btfsc	plusw2,7,c
 12175  01CDD6  D019               	goto	l17063
 12176  01CDD8  0E07               	movlw	7
 12177  01CDDA  50DB               	movf	plusw2,w,c
 12178  01CDDC  E111               	bnz	u16650
 12179  01CDDE  0E06               	movlw	6
 12180  01CDE0  50DB               	movf	plusw2,w,c
 12181  01CDE2  E10E               	bnz	u16650
 12182  01CDE4  0E05               	movlw	5
 12183  01CDE6  50DB               	movf	plusw2,w,c
 12184  01CDE8  E10B               	bnz	u16650
 12185  01CDEA  04DE               	decf	postinc2,w,c
 12186  01CDEC  0E7B               	movlw	123
 12187  01CDEE  58DE               	subwfb	postinc2,w,c
 12188  01CDF0  0E9D               	movlw	157
 12189  01CDF2  58DE               	subwfb	postinc2,w,c
 12190  01CDF4  0E40               	movlw	64
 12191  01CDF6  58DE               	subwfb	postinc2,w,c
 12192  01CDF8  0EF1               	movlw	241
 12193  01CDFA  58DE               	subwfb	postinc2,w,c
 12194  01CDFC  A0D8               	btfss	status,0,c
 12195  01CDFE  D005               	goto	l17063
 12196  01CE00                     u16650:
 12197  01CE00  0E00               	movlw	0
 12198  01CE02  6E2A               	movwf	btemp^0,c
 12199  01CE04  0E00               	movlw	0
 12200  01CE06  6E2B               	movwf	(btemp+1)^0,c
 12201  01CE08  D0E7               	goto	l3526
 12202  01CE0A                     l17063:
 12203                           
 12204                           ;stkvar	_tm @ sp[(0)+-3]
 12205  01CE0A  0EFD               	movlw	-3
 12206  01CE0C  50E3               	movf	plusw1,w,c
 12207  01CE0E  0F16               	addlw	22
 12208  01CE10  6E34               	movwf	(btemp+10)^0,c
 12209  01CE12  0EFE               	movlw	-2
 12210  01CE14  006F FF8C  F035    	movff	plusw1,btemp+11
 12211  01CE1A  0E00               	movlw	0
 12212  01CE1C  2235               	addwfc	(btemp+11)^0,f,c
 12213  01CE1E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12214  01CE24  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12215  01CE2A  0E00               	movlw	0
 12216  01CE2C  6EE6               	movwf	postinc1,c
 12217  01CE2E  0E00               	movlw	0
 12218  01CE30  6EE6               	movwf	postinc1,c
 12219                           
 12220                           ;stkvar	_tm @ sp[(-4)+-3]
 12221  01CE32  0EF9               	movlw	-7
 12222  01CE34  50E3               	movf	plusw1,w,c
 12223  01CE36  0F12               	addlw	18
 12224  01CE38  6E34               	movwf	(btemp+10)^0,c
 12225  01CE3A  0EFA               	movlw	-6
 12226  01CE3C  006F FF8C  F035    	movff	plusw1,btemp+11
 12227  01CE42  0E00               	movlw	0
 12228  01CE44  2235               	addwfc	(btemp+11)^0,f,c
 12229  01CE46  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12230  01CE4C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12231                           
 12232                           ;stkvar	_tm @ sp[(-6)+-3]
 12233  01CE52  0EF7               	movlw	-9
 12234  01CE54  50E3               	movf	plusw1,w,c
 12235  01CE56  0F10               	addlw	16
 12236  01CE58  6E34               	movwf	(btemp+10)^0,c
 12237  01CE5A  0EF8               	movlw	-8
 12238  01CE5C  006F FF8C  F035    	movff	plusw1,btemp+11
 12239  01CE62  0E00               	movlw	0
 12240  01CE64  2235               	addwfc	(btemp+11)^0,f,c
 12241  01CE66  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12242  01CE6C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12243  01CE72  0E00               	movlw	0
 12244  01CE74  6EE6               	movwf	postinc1,c
 12245  01CE76  0E00               	movlw	0
 12246  01CE78  6EE6               	movwf	postinc1,c
 12247                           
 12248                           ;stkvar	_t @ sp[(-10)+-1]
 12249  01CE7A  0EF5               	movlw	-11
 12250  01CE7C  50E3               	movf	plusw1,w,c
 12251  01CE7E  6ED9               	movwf	fsr2l,c
 12252  01CE80  6ADA               	clrf	fsr2h,c
 12253  01CE82  006F FF7B FFE6     	movff	postinc2,postinc1
 12254  01CE88  006F FF7B FFE6     	movff	postinc2,postinc1
 12255  01CE8E  006F FF7B FFE6     	movff	postinc2,postinc1
 12256  01CE94  006F FF7B FFE6     	movff	postinc2,postinc1
 12257  01CE9A  006F FF7B FFE6     	movff	postinc2,postinc1
 12258  01CEA0  006F FF7B FFE6     	movff	postinc2,postinc1
 12259  01CEA6  006F FF7B FFE6     	movff	postinc2,postinc1
 12260  01CEAC  006F FF7B FFE6     	movff	postinc2,postinc1
 12261  01CEB2  EC16  F0B4         	call	___secs_to_zone	;wreg free
 12262                           
 12263                           ;stkvar	_tm @ sp[(0)+-3]
 12264  01CEB6  0EFD               	movlw	-3
 12265  01CEB8  006F FF8F FFE6     	movff	plusw1,postinc1
 12266  01CEBE  006F FF8F FFE6     	movff	plusw1,postinc1
 12267                           
 12268                           ;stkvar	_t @ sp[(-2)+-1]
 12269  01CEC4  0EFD               	movlw	-3
 12270  01CEC6  50E3               	movf	plusw1,w,c
 12271  01CEC8  6ED9               	movwf	fsr2l,c
 12272  01CECA  6ADA               	clrf	fsr2h,c
 12273  01CECC  006F FF78  F03A    	movff	postinc2,btemp+16
 12274  01CED2  006F FF78  F03B    	movff	postinc2,btemp+17
 12275  01CED8  006F FF78  F03C    	movff	postinc2,btemp+18
 12276  01CEDE  006F FF78  F03D    	movff	postinc2,btemp+19
 12277  01CEE4  006F FF78  F03E    	movff	postinc2,btemp+20
 12278  01CEEA  006F FF78  F03F    	movff	postinc2,btemp+21
 12279  01CEF0  006F FF78  F040    	movff	postinc2,btemp+22
 12280  01CEF6  006F FF78  F041    	movff	postinc2,btemp+23
 12281                           
 12282                           ;stkvar	_tm @ sp[(-2)+-3]
 12283  01CEFC  0EFB               	movlw	-5
 12284  01CEFE  006F FF8C  F034    	movff	plusw1,btemp+10
 12285  01CF04  0EFC               	movlw	-4
 12286  01CF06  006F FF8C  F035    	movff	plusw1,btemp+11
 12287  01CF0C  0E12               	movlw	18
 12288  01CF0E  2434               	addwf	(btemp+10)^0,w,c
 12289  01CF10  6ED9               	movwf	fsr2l,c
 12290  01CF12  0E00               	movlw	0
 12291  01CF14  2035               	addwfc	(btemp+11)^0,w,c
 12292  01CF16  6EDA               	movwf	fsr2h,c
 12293  01CF18  006F FF78  F032    	movff	postinc2,btemp+8
 12294  01CF1E  006F FF78  F033    	movff	postinc2,btemp+9
 12295  01CF24  006F FF78  F034    	movff	postinc2,btemp+10
 12296  01CF2A  006F FF78  F035    	movff	postinc2,btemp+11
 12297  01CF30  0060  F0C8  F042   	movff	btemp+8,btemp+24
 12298  01CF36  0060  F0CC  F043   	movff	btemp+9,btemp+25
 12299  01CF3C  0060  F0D0  F044   	movff	btemp+10,btemp+26
 12300  01CF42  0060  F0D4  F045   	movff	btemp+11,btemp+27
 12301  01CF48  6A46               	clrf	(btemp+28)^0,c
 12302  01CF4A  BE45               	btfsc	(btemp+27)^0,7,c
 12303  01CF4C  6846               	setf	(btemp+28)^0,c
 12304  01CF4E  0060  F118  F047   	movff	btemp+28,btemp+29
 12305  01CF54  0060  F118  F048   	movff	btemp+28,btemp+30
 12306  01CF5A  0060  F118  F049   	movff	btemp+28,btemp+31
 12307  01CF60  503A               	movf	(btemp+16)^0,w,c
 12308  01CF62  2442               	addwf	(btemp+24)^0,w,c
 12309  01CF64  6E32               	movwf	(btemp+8)^0,c
 12310  01CF66  503B               	movf	(btemp+17)^0,w,c
 12311  01CF68  2043               	addwfc	(btemp+25)^0,w,c
 12312  01CF6A  6E33               	movwf	(btemp+9)^0,c
 12313  01CF6C  503C               	movf	(btemp+18)^0,w,c
 12314  01CF6E  2044               	addwfc	(btemp+26)^0,w,c
 12315  01CF70  6E34               	movwf	(btemp+10)^0,c
 12316  01CF72  503D               	movf	(btemp+19)^0,w,c
 12317  01CF74  2045               	addwfc	(btemp+27)^0,w,c
 12318  01CF76  6E35               	movwf	(btemp+11)^0,c
 12319  01CF78  503E               	movf	(btemp+20)^0,w,c
 12320  01CF7A  2046               	addwfc	(btemp+28)^0,w,c
 12321  01CF7C  6E36               	movwf	(btemp+12)^0,c
 12322  01CF7E  503F               	movf	(btemp+21)^0,w,c
 12323  01CF80  2047               	addwfc	(btemp+29)^0,w,c
 12324  01CF82  6E37               	movwf	(btemp+13)^0,c
 12325  01CF84  5040               	movf	(btemp+22)^0,w,c
 12326  01CF86  2048               	addwfc	(btemp+30)^0,w,c
 12327  01CF88  6E38               	movwf	(btemp+14)^0,c
 12328  01CF8A  5041               	movf	(btemp+23)^0,w,c
 12329  01CF8C  2049               	addwfc	(btemp+31)^0,w,c
 12330  01CF8E  6E39               	movwf	(btemp+15)^0,c
 12331  01CF90  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 12332  01CF96  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 12333  01CF9C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12334  01CFA2  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12335  01CFA8  0060  F0DB  FFE6   	movff	btemp+12,postinc1
 12336  01CFAE  0060  F0DF  FFE6   	movff	btemp+13,postinc1
 12337  01CFB4  0060  F0E3  FFE6   	movff	btemp+14,postinc1
 12338  01CFBA  0060  F0E7  FFE6   	movff	btemp+15,postinc1
 12339  01CFC0  EC0D  F094         	call	___secs_to_tm	;wreg free
 12340  01CFC4  BE2D               	btfsc	(btemp+3)^0,7,c
 12341  01CFC6  D71C               	goto	u16650
 12342                           
 12343                           ;stkvar	_tm @ sp[(0)+-3]
 12344  01CFC8  0EFD               	movlw	-3
 12345  01CFCA  006F FF8C  F02A    	movff	plusw1,btemp
 12346  01CFD0  0EFE               	movlw	-2
 12347  01CFD2  006F FF8C  F02B    	movff	plusw1,btemp+1
 12348  01CFD8                     l3526:
 12349                           
 12350                           ; ___localtime_r: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3,
      +                           argsize = 3, vargsize = 0
 12351  01CFD8  52E5               	movf	postdec1,f,c
 12352  01CFDA  52E5               	movf	postdec1,f,c
 12353  01CFDC  52E5               	movf	postdec1,f,c
 12354  01CFDE  0012               	return		;funcret
 12355  01CFE0                     __end_of___localtime_r:
 12356                           	opt callstack 0
 12357                           
 12358 ;; *************** function ___secs_to_zone *****************
 12359 ;; Defined at:
 12360 ;;		line 249 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 12361 ;; Parameters:    Size  Location     Type
 12362 ;;  t               8  [STACK] long long 
 12363 ;;  local           2  [STACK] int 
 12364 ;;  isdst           2  [STACK] PTR int 
 12365 ;;		 -> localtime@tm(24), 
 12366 ;;  offset          2  [STACK] PTR long 
 12367 ;;		 -> localtime@tm(24), 
 12368 ;;  oppoff          2  [STACK] PTR long 
 12369 ;;		 -> NULL(0), 
 12370 ;;  zonename        2  [STACK] PTR PTR const unsigned c
 12371 ;;		 -> localtime@tm(24), 
 12372 ;; Auto vars:     Size  Location     Type
 12373 ;;  alt             2  [STACK] unsigned int 
 12374 ;;  i               2    0        unsigned int 
 12375 ;;  y               8  [STACK] long long 
 12376 ;;  t1              8  [STACK] long long 
 12377 ;;  t0              8  [STACK] long long 
 12378 ;; Return value:  Size  Location     Type
 12379 ;;                  1  [STACK] void 
 12380 ;; Registers used:
 12381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, tblptrl, tblptrh, tblptru, prodl, prodh
 12382 ;; Tracked objects:
 12383 ;;		On entry : 0/39
 12384 ;;		On exit  : 0/0
 12385 ;;		Unchanged: 0/0
 12386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12391 ;;Total ram usage:        0 bytes
 12392 ;; Hardware stack levels used:    1
 12393 ;; Hardware stack levels required when called:   19
 12394 ;; This function calls:
 12395 ;;		___aodiv
 12396 ;;		___year_to_secs
 12397 ;;		_do_tzset
 12398 ;;		_rule_to_secs
 12399 ;;		_scan_trans
 12400 ;;		_zi_read32
 12401 ;; This function is called by:
 12402 ;;		___localtime_r
 12403 ;; This function uses a reentrant model
 12404 ;;
 12405                           
 12406                           	psect	text37
 12407  01682C                     __ptext37:
 12408                           	opt callstack 0
 12409  01682C                     ___secs_to_zone:
 12410                           	opt callstack 0
 12411                           
 12412                           ; autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 18, argsize = 18 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 12413  01682C  0E18               	movlw	24
 12414  01682E  26E1               	addwf	fsr1l,f,c
 12415  016830  0E00               	movlw	0
 12416  016832  22E2               	addwfc	fsr1h,f,c
 12417                           
 12418                           ;incstack = 0
 12419  016834  EC84  F0DF         	call	_do_tzset	;wreg free
 12420  016838  0100               	movlb	0	; () banked
 12421  01683A  51B8               	movf	___daylight& (0+255),w,b
 12422  01683C  11B9               	iorwf	(___daylight+1)& (0+255),w,b
 12423  01683E  B4D8               	btfsc	status,2,c
 12424  016840  D356               	goto	u16430
 12425                           
 12426                           ; BSR set to: 0
 12427  016842  0E58               	movlw	88
 12428  016844  6EE6               	movwf	postinc1,c
 12429  016846  0E85               	movlw	133
 12430  016848  6EE6               	movwf	postinc1,c
 12431  01684A  0EE1               	movlw	225
 12432  01684C  6EE6               	movwf	postinc1,c
 12433  01684E  0E01               	movlw	1
 12434  016850  6EE6               	movwf	postinc1,c
 12435  016852  0E00               	movlw	0
 12436  016854  6EE6               	movwf	postinc1,c
 12437  016856  0E00               	movlw	0
 12438  016858  6EE6               	movwf	postinc1,c
 12439  01685A  0E00               	movlw	0
 12440  01685C  6EE6               	movwf	postinc1,c
 12441  01685E  0E00               	movlw	0
 12442  016860  6EE6               	movwf	postinc1,c
 12443                           
 12444                           ;stkvar	_t @ sp[(-32)+-8]
 12445  016862  50E1               	movf	fsr1l,w,c
 12446  016864  0FD8               	addlw	-40
 12447  016866  6ED9               	movwf	fsr2l,c
 12448  016868  50E2               	movf	fsr1h,w,c
 12449  01686A  6EDA               	movwf	fsr2h,c
 12450  01686C  0EFF               	movlw	255
 12451  01686E  22DA               	addwfc	fsr2h,f,c
 12452  016870  006F FF7B FFE6     	movff	postinc2,postinc1
 12453  016876  006F FF7B FFE6     	movff	postinc2,postinc1
 12454  01687C  006F FF7B FFE6     	movff	postinc2,postinc1
 12455  016882  006F FF7B FFE6     	movff	postinc2,postinc1
 12456  016888  006F FF7B FFE6     	movff	postinc2,postinc1
 12457  01688E  006F FF7B FFE6     	movff	postinc2,postinc1
 12458  016894  006F FF7B FFE6     	movff	postinc2,postinc1
 12459  01689A  006F FF7B FFE6     	movff	postinc2,postinc1
 12460  0168A0  EC04  F0E2         	call	___aodiv	;wreg free
 12461  0168A4  52E5               	movf	postdec1,f,c
 12462  0168A6  006F FF9C  F041    	movff	indf1,btemp+23
 12463  0168AC  52E5               	movf	postdec1,f,c
 12464  0168AE  006F FF9C  F040    	movff	indf1,btemp+22
 12465  0168B4  52E5               	movf	postdec1,f,c
 12466  0168B6  006F FF9C  F03F    	movff	indf1,btemp+21
 12467  0168BC  52E5               	movf	postdec1,f,c
 12468  0168BE  006F FF9C  F03E    	movff	indf1,btemp+20
 12469  0168C4  52E5               	movf	postdec1,f,c
 12470  0168C6  006F FF9C  F03D    	movff	indf1,btemp+19
 12471  0168CC  52E5               	movf	postdec1,f,c
 12472  0168CE  006F FF9C  F03C    	movff	indf1,btemp+18
 12473  0168D4  52E5               	movf	postdec1,f,c
 12474  0168D6  006F FF9C  F03B    	movff	indf1,btemp+17
 12475  0168DC  52E5               	movf	postdec1,f,c
 12476  0168DE  006F FF9C  F03A    	movff	indf1,btemp+16
 12477  0168E4  0EF8               	movlw	248
 12478  0168E6  26E1               	addwf	fsr1l,f,c
 12479  0168E8  0EFF               	movlw	255
 12480  0168EA  22E2               	addwfc	fsr1h,f,c
 12481  0168EC  0E46               	movlw	70
 12482  0168EE  243A               	addwf	(btemp+16)^0,w,c
 12483  0168F0  6E42               	movwf	(btemp+24)^0,c
 12484  0168F2  0E00               	movlw	0
 12485  0168F4  203B               	addwfc	(btemp+17)^0,w,c
 12486  0168F6  6E43               	movwf	(btemp+25)^0,c
 12487  0168F8  0E00               	movlw	0
 12488  0168FA  203C               	addwfc	(btemp+18)^0,w,c
 12489  0168FC  6E44               	movwf	(btemp+26)^0,c
 12490  0168FE  0E00               	movlw	0
 12491  016900  203D               	addwfc	(btemp+19)^0,w,c
 12492  016902  6E45               	movwf	(btemp+27)^0,c
 12493  016904  0E00               	movlw	0
 12494  016906  203E               	addwfc	(btemp+20)^0,w,c
 12495  016908  6E46               	movwf	(btemp+28)^0,c
 12496  01690A  0E00               	movlw	0
 12497  01690C  203F               	addwfc	(btemp+21)^0,w,c
 12498  01690E  6E47               	movwf	(btemp+29)^0,c
 12499  016910  0E00               	movlw	0
 12500  016912  2040               	addwfc	(btemp+22)^0,w,c
 12501  016914  6E48               	movwf	(btemp+30)^0,c
 12502  016916  0E00               	movlw	0
 12503  016918  2041               	addwfc	(btemp+23)^0,w,c
 12504  01691A  6E49               	movwf	(btemp+31)^0,c
 12505                           
 12506                           ;stkvar	_y @ sp[(-24)+0]
 12507  01691C  0EE8               	movlw	-24
 12508  01691E  0060  F10B  FFE3   	movff	btemp+24,plusw1
 12509  016924  0EE9               	movlw	-23
 12510  016926  0060  F10F  FFE3   	movff	btemp+25,plusw1
 12511  01692C  0EEA               	movlw	-22
 12512  01692E  0060  F113  FFE3   	movff	btemp+26,plusw1
 12513  016934  0EEB               	movlw	-21
 12514  016936  0060  F117  FFE3   	movff	btemp+27,plusw1
 12515  01693C  0EEC               	movlw	-20
 12516  01693E  0060  F11B  FFE3   	movff	btemp+28,plusw1
 12517  016944  0EED               	movlw	-19
 12518  016946  0060  F11F  FFE3   	movff	btemp+29,plusw1
 12519  01694C  0EEE               	movlw	-18
 12520  01694E  0060  F123  FFE3   	movff	btemp+30,plusw1
 12521  016954  0EEF               	movlw	-17
 12522  016956  0060  F127  FFE3   	movff	btemp+31,plusw1
 12523  01695C  D010               	goto	l16833
 12524  01695E                     l16831:
 12525                           
 12526                           ;stkvar	_y @ sp[(-24)+0]
 12527  01695E  50E1               	movf	fsr1l,w,c
 12528  016960  0FE8               	addlw	-24
 12529  016962  6ED9               	movwf	fsr2l,c
 12530  016964  50E2               	movf	fsr1h,w,c
 12531  016966  6EDA               	movwf	fsr2h,c
 12532  016968  0EFF               	movlw	255
 12533  01696A  22DA               	addwfc	fsr2h,f,c
 12534  01696C  06DE               	decf	postinc2,f,c
 12535  01696E  0E00               	movlw	0
 12536  016970  5ADE               	subwfb	postinc2,f,c
 12537  016972  5ADE               	subwfb	postinc2,f,c
 12538  016974  5ADE               	subwfb	postinc2,f,c
 12539  016976  5ADE               	subwfb	postinc2,f,c
 12540  016978  5ADE               	subwfb	postinc2,f,c
 12541  01697A  5ADE               	subwfb	postinc2,f,c
 12542  01697C  5ADE               	subwfb	postinc2,f,c
 12543  01697E                     l16833:
 12544  01697E  0E00               	movlw	0
 12545  016980  6EE6               	movwf	postinc1,c
 12546  016982  0E00               	movlw	0
 12547  016984  6EE6               	movwf	postinc1,c
 12548                           
 12549                           ;stkvar	_y @ sp[(-26)+0]
 12550  016986  50E1               	movf	fsr1l,w,c
 12551  016988  0FE6               	addlw	-26
 12552  01698A  6ED9               	movwf	fsr2l,c
 12553  01698C  50E2               	movf	fsr1h,w,c
 12554  01698E  6EDA               	movwf	fsr2h,c
 12555  016990  0EFF               	movlw	255
 12556  016992  22DA               	addwfc	fsr2h,f,c
 12557  016994  006F FF7B FFE6     	movff	postinc2,postinc1
 12558  01699A  006F FF7B FFE6     	movff	postinc2,postinc1
 12559  0169A0  006F FF7B FFE6     	movff	postinc2,postinc1
 12560  0169A6  006F FF7B FFE6     	movff	postinc2,postinc1
 12561  0169AC  006F FF7B FFE6     	movff	postinc2,postinc1
 12562  0169B2  006F FF7B FFE6     	movff	postinc2,postinc1
 12563  0169B8  006F FF7B FFE6     	movff	postinc2,postinc1
 12564  0169BE  006F FF7B FFE6     	movff	postinc2,postinc1
 12565  0169C4  EC5D  F0AF         	call	___year_to_secs	;wreg free
 12566  0169C8  52E5               	movf	postdec1,f,c
 12567  0169CA  006F FF9C  F041    	movff	indf1,btemp+23
 12568  0169D0  52E5               	movf	postdec1,f,c
 12569  0169D2  006F FF9C  F040    	movff	indf1,btemp+22
 12570  0169D8  52E5               	movf	postdec1,f,c
 12571  0169DA  006F FF9C  F03F    	movff	indf1,btemp+21
 12572  0169E0  52E5               	movf	postdec1,f,c
 12573  0169E2  006F FF9C  F03E    	movff	indf1,btemp+20
 12574  0169E8  52E5               	movf	postdec1,f,c
 12575  0169EA  006F FF9C  F03D    	movff	indf1,btemp+19
 12576  0169F0  52E5               	movf	postdec1,f,c
 12577  0169F2  006F FF9C  F03C    	movff	indf1,btemp+18
 12578  0169F8  52E5               	movf	postdec1,f,c
 12579  0169FA  006F FF9C  F03B    	movff	indf1,btemp+17
 12580  016A00  52E5               	movf	postdec1,f,c
 12581  016A02  006F FF9C  F03A    	movff	indf1,btemp+16
 12582  016A08  52E5               	movf	postdec1,f,c
 12583  016A0A  52E5               	movf	postdec1,f,c
 12584                           
 12585                           ;stkvar	_t @ sp[(-24)+-8]
 12586  016A0C  0EE0               	movlw	-32
 12587  016A0E  006F FF8C  F02A    	movff	plusw1,btemp
 12588  016A14  503A               	movf	(btemp+16)^0,w,c
 12589  016A16  5C2A               	subwf	btemp^0,w,c
 12590  016A18  0EE1               	movlw	-31
 12591  016A1A  006F FF8C  F02A    	movff	plusw1,btemp
 12592  016A20  503B               	movf	(btemp+17)^0,w,c
 12593  016A22  582A               	subwfb	btemp^0,w,c
 12594  016A24  0EE2               	movlw	-30
 12595  016A26  006F FF8C  F02A    	movff	plusw1,btemp
 12596  016A2C  503C               	movf	(btemp+18)^0,w,c
 12597  016A2E  582A               	subwfb	btemp^0,w,c
 12598  016A30  0EE3               	movlw	-29
 12599  016A32  006F FF8C  F02A    	movff	plusw1,btemp
 12600  016A38  503D               	movf	(btemp+19)^0,w,c
 12601  016A3A  582A               	subwfb	btemp^0,w,c
 12602  016A3C  0EE4               	movlw	-28
 12603  016A3E  006F FF8C  F02A    	movff	plusw1,btemp
 12604  016A44  503E               	movf	(btemp+20)^0,w,c
 12605  016A46  582A               	subwfb	btemp^0,w,c
 12606  016A48  0EE5               	movlw	-27
 12607  016A4A  006F FF8C  F02A    	movff	plusw1,btemp
 12608  016A50  503F               	movf	(btemp+21)^0,w,c
 12609  016A52  582A               	subwfb	btemp^0,w,c
 12610  016A54  0EE6               	movlw	-26
 12611  016A56  006F FF8C  F02A    	movff	plusw1,btemp
 12612  016A5C  5040               	movf	(btemp+22)^0,w,c
 12613  016A5E  582A               	subwfb	btemp^0,w,c
 12614  016A60  0EE7               	movlw	-25
 12615  016A62  50E3               	movf	plusw1,w,c
 12616  016A64  0A80               	xorlw	128
 12617  016A66  6E2A               	movwf	btemp^0,c
 12618  016A68  5041               	movf	(btemp+23)^0,w,c
 12619  016A6A  0A80               	xorlw	128
 12620  016A6C  582A               	subwfb	btemp^0,w,c
 12621  016A6E  B0D8               	btfsc	status,0,c
 12622  016A70  D011               	goto	l16837
 12623  016A72  D775               	goto	l16831
 12624  016A74                     l16835:
 12625                           
 12626                           ;stkvar	_y @ sp[(-24)+0]
 12627  016A74  50E1               	movf	fsr1l,w,c
 12628  016A76  0FE8               	addlw	-24
 12629  016A78  6ED9               	movwf	fsr2l,c
 12630  016A7A  50E2               	movf	fsr1h,w,c
 12631  016A7C  6EDA               	movwf	fsr2h,c
 12632  016A7E  0EFF               	movlw	255
 12633  016A80  22DA               	addwfc	fsr2h,f,c
 12634  016A82  2ADE               	incf	postinc2,f,c
 12635  016A84  0E00               	movlw	0
 12636  016A86  22DE               	addwfc	postinc2,f,c
 12637  016A88  22DE               	addwfc	postinc2,f,c
 12638  016A8A  22DE               	addwfc	postinc2,f,c
 12639  016A8C  22DE               	addwfc	postinc2,f,c
 12640  016A8E  22DE               	addwfc	postinc2,f,c
 12641  016A90  22DE               	addwfc	postinc2,f,c
 12642  016A92  22DE               	addwfc	postinc2,f,c
 12643  016A94                     l16837:
 12644                           
 12645                           ;stkvar	_t @ sp[(-24)+-8]
 12646  016A94  0E00               	movlw	0
 12647  016A96  6EE6               	movwf	postinc1,c
 12648  016A98  0E00               	movlw	0
 12649  016A9A  6EE6               	movwf	postinc1,c
 12650                           
 12651                           ;stkvar	_y @ sp[(-26)+0]
 12652  016A9C  0EE6               	movlw	-26
 12653  016A9E  50E3               	movf	plusw1,w,c
 12654  016AA0  0F01               	addlw	1
 12655  016AA2  6E3A               	movwf	(btemp+16)^0,c
 12656  016AA4  0EE7               	movlw	-25
 12657  016AA6  006F FF8C  F03B    	movff	plusw1,btemp+17
 12658  016AAC  0E00               	movlw	0
 12659  016AAE  223B               	addwfc	(btemp+17)^0,f,c
 12660  016AB0  0EE8               	movlw	-24
 12661  016AB2  006F FF8C  F03C    	movff	plusw1,btemp+18
 12662  016AB8  0E00               	movlw	0
 12663  016ABA  223C               	addwfc	(btemp+18)^0,f,c
 12664  016ABC  0EE9               	movlw	-23
 12665  016ABE  006F FF8C  F03D    	movff	plusw1,btemp+19
 12666  016AC4  0E00               	movlw	0
 12667  016AC6  223D               	addwfc	(btemp+19)^0,f,c
 12668  016AC8  0EEA               	movlw	-22
 12669  016ACA  006F FF8C  F03E    	movff	plusw1,btemp+20
 12670  016AD0  0E00               	movlw	0
 12671  016AD2  223E               	addwfc	(btemp+20)^0,f,c
 12672  016AD4  0EEB               	movlw	-21
 12673  016AD6  006F FF8C  F03F    	movff	plusw1,btemp+21
 12674  016ADC  0E00               	movlw	0
 12675  016ADE  223F               	addwfc	(btemp+21)^0,f,c
 12676  016AE0  0EEC               	movlw	-20
 12677  016AE2  006F FF8C  F040    	movff	plusw1,btemp+22
 12678  016AE8  0E00               	movlw	0
 12679  016AEA  2240               	addwfc	(btemp+22)^0,f,c
 12680  016AEC  0EED               	movlw	-19
 12681  016AEE  006F FF8C  F041    	movff	plusw1,btemp+23
 12682  016AF4  0E00               	movlw	0
 12683  016AF6  2241               	addwfc	(btemp+23)^0,f,c
 12684  016AF8  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 12685  016AFE  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 12686  016B04  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 12687  016B0A  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 12688  016B10  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 12689  016B16  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 12690  016B1C  0060  F103  FFE6   	movff	btemp+22,postinc1
 12691  016B22  0060  F107  FFE6   	movff	btemp+23,postinc1
 12692  016B28  EC5D  F0AF         	call	___year_to_secs	;wreg free
 12693  016B2C  52E5               	movf	postdec1,f,c
 12694  016B2E  006F FF9C  F041    	movff	indf1,btemp+23
 12695  016B34  52E5               	movf	postdec1,f,c
 12696  016B36  006F FF9C  F040    	movff	indf1,btemp+22
 12697  016B3C  52E5               	movf	postdec1,f,c
 12698  016B3E  006F FF9C  F03F    	movff	indf1,btemp+21
 12699  016B44  52E5               	movf	postdec1,f,c
 12700  016B46  006F FF9C  F03E    	movff	indf1,btemp+20
 12701  016B4C  52E5               	movf	postdec1,f,c
 12702  016B4E  006F FF9C  F03D    	movff	indf1,btemp+19
 12703  016B54  52E5               	movf	postdec1,f,c
 12704  016B56  006F FF9C  F03C    	movff	indf1,btemp+18
 12705  016B5C  52E5               	movf	postdec1,f,c
 12706  016B5E  006F FF9C  F03B    	movff	indf1,btemp+17
 12707  016B64  52E5               	movf	postdec1,f,c
 12708  016B66  006F FF9C  F03A    	movff	indf1,btemp+16
 12709  016B6C  52E5               	movf	postdec1,f,c
 12710  016B6E  52E5               	movf	postdec1,f,c
 12711  016B70  0EE0               	movlw	-32
 12712  016B72  50E3               	movf	plusw1,w,c
 12713  016B74  5C3A               	subwf	(btemp+16)^0,w,c
 12714  016B76  0EE1               	movlw	-31
 12715  016B78  50E3               	movf	plusw1,w,c
 12716  016B7A  583B               	subwfb	(btemp+17)^0,w,c
 12717  016B7C  0EE2               	movlw	-30
 12718  016B7E  50E3               	movf	plusw1,w,c
 12719  016B80  583C               	subwfb	(btemp+18)^0,w,c
 12720  016B82  0EE3               	movlw	-29
 12721  016B84  50E3               	movf	plusw1,w,c
 12722  016B86  583D               	subwfb	(btemp+19)^0,w,c
 12723  016B88  0EE4               	movlw	-28
 12724  016B8A  50E3               	movf	plusw1,w,c
 12725  016B8C  583E               	subwfb	(btemp+20)^0,w,c
 12726  016B8E  0EE5               	movlw	-27
 12727  016B90  50E3               	movf	plusw1,w,c
 12728  016B92  583F               	subwfb	(btemp+21)^0,w,c
 12729  016B94  0EE6               	movlw	-26
 12730  016B96  50E3               	movf	plusw1,w,c
 12731  016B98  5840               	subwfb	(btemp+22)^0,w,c
 12732  016B9A  5041               	movf	(btemp+23)^0,w,c
 12733  016B9C  0A80               	xorlw	128
 12734  016B9E  6E2A               	movwf	btemp^0,c
 12735  016BA0  0EE7               	movlw	-25
 12736  016BA2  50E3               	movf	plusw1,w,c
 12737  016BA4  0A80               	xorlw	128
 12738  016BA6  582A               	subwfb	btemp^0,w,c
 12739  016BA8  A0D8               	btfss	status,0,c
 12740  016BAA  D764               	goto	l16835
 12741                           
 12742                           ;stkvar	_y @ sp[(-24)+0]
 12743  016BAC  0EE8               	movlw	-24
 12744  016BAE  006F FF8F FFE6     	movff	plusw1,postinc1
 12745  016BB4  006F FF8F FFE6     	movff	plusw1,postinc1
 12746  016BBA  0EE5               	movlw	low _r0
 12747  016BBC  6EE6               	movwf	postinc1,c
 12748  016BBE  0E01               	movlw	high _r0
 12749  016BC0  6EE6               	movwf	postinc1,c
 12750  016BC2  EC5A  F0C0         	call	_rule_to_secs	;wreg free
 12751  016BC6  52E5               	movf	postdec1,f,c
 12752  016BC8  006F FF9C  F041    	movff	indf1,btemp+23
 12753  016BCE  52E5               	movf	postdec1,f,c
 12754  016BD0  006F FF9C  F040    	movff	indf1,btemp+22
 12755  016BD6  52E5               	movf	postdec1,f,c
 12756  016BD8  006F FF9C  F03F    	movff	indf1,btemp+21
 12757  016BDE  52E5               	movf	postdec1,f,c
 12758  016BE0  006F FF9C  F03E    	movff	indf1,btemp+20
 12759  016BE6  52E5               	movf	postdec1,f,c
 12760  016BE8  006F FF9C  F03D    	movff	indf1,btemp+19
 12761  016BEE  52E5               	movf	postdec1,f,c
 12762  016BF0  006F FF9C  F03C    	movff	indf1,btemp+18
 12763  016BF6  52E5               	movf	postdec1,f,c
 12764  016BF8  006F FF9C  F03B    	movff	indf1,btemp+17
 12765  016BFE  52E5               	movf	postdec1,f,c
 12766  016C00  006F FF9C  F03A    	movff	indf1,btemp+16
 12767                           
 12768                           ;stkvar	_t0 @ sp[(-24)+16]
 12769  016C06  0EF8               	movlw	-8
 12770  016C08  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 12771  016C0E  0EF9               	movlw	-7
 12772  016C10  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 12773  016C16  0EFA               	movlw	-6
 12774  016C18  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 12775  016C1E  0EFB               	movlw	-5
 12776  016C20  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 12777  016C26  0EFC               	movlw	-4
 12778  016C28  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 12779  016C2E  0EFD               	movlw	-3
 12780  016C30  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 12781  016C36  0EFE               	movlw	-2
 12782  016C38  0060  F103  FFE3   	movff	btemp+22,plusw1
 12783  016C3E  0EFF               	movlw	-1
 12784  016C40  0060  F107  FFE3   	movff	btemp+23,plusw1
 12785                           
 12786                           ;stkvar	_y @ sp[(-24)+0]
 12787  016C46  0EE8               	movlw	-24
 12788  016C48  006F FF8F FFE6     	movff	plusw1,postinc1
 12789  016C4E  006F FF8F FFE6     	movff	plusw1,postinc1
 12790  016C54  0EDB               	movlw	low _r1
 12791  016C56  6EE6               	movwf	postinc1,c
 12792  016C58  0E01               	movlw	high _r1
 12793  016C5A  6EE6               	movwf	postinc1,c
 12794  016C5C  EC5A  F0C0         	call	_rule_to_secs	;wreg free
 12795  016C60  52E5               	movf	postdec1,f,c
 12796  016C62  006F FF9C  F041    	movff	indf1,btemp+23
 12797  016C68  52E5               	movf	postdec1,f,c
 12798  016C6A  006F FF9C  F040    	movff	indf1,btemp+22
 12799  016C70  52E5               	movf	postdec1,f,c
 12800  016C72  006F FF9C  F03F    	movff	indf1,btemp+21
 12801  016C78  52E5               	movf	postdec1,f,c
 12802  016C7A  006F FF9C  F03E    	movff	indf1,btemp+20
 12803  016C80  52E5               	movf	postdec1,f,c
 12804  016C82  006F FF9C  F03D    	movff	indf1,btemp+19
 12805  016C88  52E5               	movf	postdec1,f,c
 12806  016C8A  006F FF9C  F03C    	movff	indf1,btemp+18
 12807  016C90  52E5               	movf	postdec1,f,c
 12808  016C92  006F FF9C  F03B    	movff	indf1,btemp+17
 12809  016C98  52E5               	movf	postdec1,f,c
 12810  016C9A  006F FF9C  F03A    	movff	indf1,btemp+16
 12811                           
 12812                           ;stkvar	_t1 @ sp[(-24)+8]
 12813  016CA0  0EF0               	movlw	-16
 12814  016CA2  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 12815  016CA8  0EF1               	movlw	-15
 12816  016CAA  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 12817  016CB0  0EF2               	movlw	-14
 12818  016CB2  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 12819  016CB8  0EF3               	movlw	-13
 12820  016CBA  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 12821  016CC0  0EF4               	movlw	-12
 12822  016CC2  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 12823  016CC8  0EF5               	movlw	-11
 12824  016CCA  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 12825  016CD0  0EF6               	movlw	-10
 12826  016CD2  0060  F103  FFE3   	movff	btemp+22,plusw1
 12827  016CD8  0EF7               	movlw	-9
 12828  016CDA  0060  F107  FFE3   	movff	btemp+23,plusw1
 12829                           
 12830                           ;stkvar	_local @ sp[(-24)+-10]
 12831  016CE0  0EDE               	movlw	-34
 12832  016CE2  006F FF8C  F02A    	movff	plusw1,btemp
 12833  016CE8  0EDF               	movlw	-33
 12834  016CEA  50E3               	movf	plusw1,w,c
 12835  016CEC  102A               	iorwf	btemp^0,w,c
 12836  016CEE  A4D8               	btfss	status,2,c
 12837  016CF0  D044               	goto	l16847
 12838  016CF2  0060  F1C0  F03A   	movff	___timezone,btemp+16
 12839  016CF8  0060  F1C4  F03B   	movff	___timezone+1,btemp+17
 12840  016CFE  0060  F1C8  F03C   	movff	___timezone+2,btemp+18
 12841  016D04  0060  F1CC  F03D   	movff	___timezone+3,btemp+19
 12842  016D0A  6A3E               	clrf	(btemp+20)^0,c
 12843  016D0C  BE3D               	btfsc	(btemp+19)^0,7,c
 12844  016D0E  683E               	setf	(btemp+20)^0,c
 12845  016D10  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 12846  016D16  0060  F0F8  F040   	movff	btemp+20,btemp+22
 12847  016D1C  0060  F0F8  F041   	movff	btemp+20,btemp+23
 12848                           
 12849                           ;stkvar	_t0 @ sp[(-24)+16]
 12850  016D22  50E1               	movf	fsr1l,w,c
 12851  016D24  0FF8               	addlw	-8
 12852  016D26  6ED9               	movwf	fsr2l,c
 12853  016D28  50E2               	movf	fsr1h,w,c
 12854  016D2A  6EDA               	movwf	fsr2h,c
 12855  016D2C  0EFF               	movlw	255
 12856  016D2E  22DA               	addwfc	fsr2h,f,c
 12857  016D30  503A               	movf	(btemp+16)^0,w,c
 12858  016D32  26DE               	addwf	postinc2,f,c
 12859  016D34  503B               	movf	(btemp+17)^0,w,c
 12860  016D36  22DE               	addwfc	postinc2,f,c
 12861  016D38  503C               	movf	(btemp+18)^0,w,c
 12862  016D3A  22DE               	addwfc	postinc2,f,c
 12863  016D3C  503D               	movf	(btemp+19)^0,w,c
 12864  016D3E  22DE               	addwfc	postinc2,f,c
 12865  016D40  503E               	movf	(btemp+20)^0,w,c
 12866  016D42  22DE               	addwfc	postinc2,f,c
 12867  016D44  503F               	movf	(btemp+21)^0,w,c
 12868  016D46  22DE               	addwfc	postinc2,f,c
 12869  016D48  5040               	movf	(btemp+22)^0,w,c
 12870  016D4A  22DE               	addwfc	postinc2,f,c
 12871  016D4C  5041               	movf	(btemp+23)^0,w,c
 12872  016D4E  22DE               	addwfc	postinc2,f,c
 12873                           
 12874                           ;stkvar	_t1 @ sp[(-24)+8]
 12875  016D50  50E1               	movf	fsr1l,w,c
 12876  016D52  0FF0               	addlw	-16
 12877  016D54  6ED9               	movwf	fsr2l,c
 12878  016D56  50E2               	movf	fsr1h,w,c
 12879  016D58  6EDA               	movwf	fsr2h,c
 12880  016D5A  0EFF               	movlw	255
 12881  016D5C  22DA               	addwfc	fsr2h,f,c
 12882  016D5E  0100               	movlb	0	; () banked
 12883  016D60  51B6               	movf	_dst_off& (0+255),w,b
 12884  016D62  26DE               	addwf	postinc2,f,c
 12885  016D64  51B7               	movf	(_dst_off+1)& (0+255),w,b
 12886  016D66  22DE               	addwfc	postinc2,f,c
 12887  016D68  0E00               	movlw	0
 12888  016D6A  BFB7               	btfsc	(_dst_off+1)& (0+255),7,b
 12889  016D6C  0EFF               	movlw	255
 12890  016D6E  22DE               	addwfc	postinc2,f,c
 12891  016D70  22DE               	addwfc	postinc2,f,c
 12892  016D72  22DE               	addwfc	postinc2,f,c
 12893  016D74  22DE               	addwfc	postinc2,f,c
 12894  016D76  22DE               	addwfc	postinc2,f,c
 12895  016D78  22DE               	addwfc	postinc2,f,c
 12896  016D7A                     l16847:
 12897                           
 12898                           ;stkvar	_t1 @ sp[(-24)+8]
 12899                           ;stkvar	_t0 @ sp[(-24)+16]
 12900  016D7A  50E1               	movf	fsr1l,w,c
 12901  016D7C  0FF8               	addlw	-8
 12902  016D7E  6ED9               	movwf	fsr2l,c
 12903  016D80  50E2               	movf	fsr1h,w,c
 12904  016D82  6EDA               	movwf	fsr2h,c
 12905  016D84  0EFF               	movlw	255
 12906  016D86  22DA               	addwfc	fsr2h,f,c
 12907  016D88  0EF0               	movlw	-16
 12908  016D8A  50E3               	movf	plusw1,w,c
 12909  016D8C  5CDE               	subwf	postinc2,w,c
 12910  016D8E  0EF1               	movlw	-15
 12911  016D90  50E3               	movf	plusw1,w,c
 12912  016D92  58DE               	subwfb	postinc2,w,c
 12913  016D94  0EF2               	movlw	-14
 12914  016D96  50E3               	movf	plusw1,w,c
 12915  016D98  58DE               	subwfb	postinc2,w,c
 12916  016D9A  0EF3               	movlw	-13
 12917  016D9C  50E3               	movf	plusw1,w,c
 12918  016D9E  58DE               	subwfb	postinc2,w,c
 12919  016DA0  0EF4               	movlw	-12
 12920  016DA2  50E3               	movf	plusw1,w,c
 12921  016DA4  58DE               	subwfb	postinc2,w,c
 12922  016DA6  0EF5               	movlw	-11
 12923  016DA8  50E3               	movf	plusw1,w,c
 12924  016DAA  58DE               	subwfb	postinc2,w,c
 12925  016DAC  0EF6               	movlw	-10
 12926  016DAE  50E3               	movf	plusw1,w,c
 12927  016DB0  58DE               	subwfb	postinc2,w,c
 12928  016DB2  50DE               	movf	postinc2,w,c
 12929  016DB4  0A80               	xorlw	128
 12930  016DB6  6E2A               	movwf	btemp^0,c
 12931  016DB8  0EF7               	movlw	-9
 12932  016DBA  50E3               	movf	plusw1,w,c
 12933  016DBC  0A80               	xorlw	128
 12934  016DBE  582A               	subwfb	btemp^0,w,c
 12935  016DC0  B0D8               	btfsc	status,0,c
 12936  016DC2  D04B               	goto	l16857
 12937                           
 12938                           ;stkvar	_t0 @ sp[(-24)+16]
 12939                           ;stkvar	_t @ sp[(-24)+-8]
 12940  016DC4  50E1               	movf	fsr1l,w,c
 12941  016DC6  0FE0               	addlw	-32
 12942  016DC8  6ED9               	movwf	fsr2l,c
 12943  016DCA  50E2               	movf	fsr1h,w,c
 12944  016DCC  6EDA               	movwf	fsr2h,c
 12945  016DCE  0EFF               	movlw	255
 12946  016DD0  22DA               	addwfc	fsr2h,f,c
 12947  016DD2  0EF8               	movlw	-8
 12948  016DD4  50E3               	movf	plusw1,w,c
 12949  016DD6  5CDE               	subwf	postinc2,w,c
 12950  016DD8  0EF9               	movlw	-7
 12951  016DDA  50E3               	movf	plusw1,w,c
 12952  016DDC  58DE               	subwfb	postinc2,w,c
 12953  016DDE  0EFA               	movlw	-6
 12954  016DE0  50E3               	movf	plusw1,w,c
 12955  016DE2  58DE               	subwfb	postinc2,w,c
 12956  016DE4  0EFB               	movlw	-5
 12957  016DE6  50E3               	movf	plusw1,w,c
 12958  016DE8  58DE               	subwfb	postinc2,w,c
 12959  016DEA  0EFC               	movlw	-4
 12960  016DEC  50E3               	movf	plusw1,w,c
 12961  016DEE  58DE               	subwfb	postinc2,w,c
 12962  016DF0  0EFD               	movlw	-3
 12963  016DF2  50E3               	movf	plusw1,w,c
 12964  016DF4  58DE               	subwfb	postinc2,w,c
 12965  016DF6  0EFE               	movlw	-2
 12966  016DF8  50E3               	movf	plusw1,w,c
 12967  016DFA  58DE               	subwfb	postinc2,w,c
 12968  016DFC  50DE               	movf	postinc2,w,c
 12969  016DFE  0A80               	xorlw	128
 12970  016E00  6E2A               	movwf	btemp^0,c
 12971  016E02  0EFF               	movlw	-1
 12972  016E04  50E3               	movf	plusw1,w,c
 12973  016E06  0A80               	xorlw	128
 12974  016E08  582A               	subwfb	btemp^0,w,c
 12975  016E0A  A0D8               	btfss	status,0,c
 12976  016E0C  D070               	goto	u16430
 12977                           
 12978                           ;stkvar	_t1 @ sp[(-24)+8]
 12979                           ;stkvar	_t @ sp[(-24)+-8]
 12980  016E0E  50E1               	movf	fsr1l,w,c
 12981  016E10  0FE0               	addlw	-32
 12982  016E12  6ED9               	movwf	fsr2l,c
 12983  016E14  50E2               	movf	fsr1h,w,c
 12984  016E16  6EDA               	movwf	fsr2h,c
 12985  016E18  0EFF               	movlw	255
 12986  016E1A  22DA               	addwfc	fsr2h,f,c
 12987  016E1C  0EF0               	movlw	-16
 12988  016E1E  50E3               	movf	plusw1,w,c
 12989  016E20  5CDE               	subwf	postinc2,w,c
 12990  016E22  0EF1               	movlw	-15
 12991  016E24  50E3               	movf	plusw1,w,c
 12992  016E26  58DE               	subwfb	postinc2,w,c
 12993  016E28  0EF2               	movlw	-14
 12994  016E2A  50E3               	movf	plusw1,w,c
 12995  016E2C  58DE               	subwfb	postinc2,w,c
 12996  016E2E  0EF3               	movlw	-13
 12997  016E30  50E3               	movf	plusw1,w,c
 12998  016E32  58DE               	subwfb	postinc2,w,c
 12999  016E34  0EF4               	movlw	-12
 13000  016E36  50E3               	movf	plusw1,w,c
 13001  016E38  58DE               	subwfb	postinc2,w,c
 13002  016E3A  0EF5               	movlw	-11
 13003  016E3C  50E3               	movf	plusw1,w,c
 13004  016E3E  58DE               	subwfb	postinc2,w,c
 13005  016E40  0EF6               	movlw	-10
 13006  016E42  50E3               	movf	plusw1,w,c
 13007  016E44  58DE               	subwfb	postinc2,w,c
 13008  016E46  50DE               	movf	postinc2,w,c
 13009  016E48  0A80               	xorlw	128
 13010  016E4A  6E2A               	movwf	btemp^0,c
 13011  016E4C  0EF7               	movlw	-9
 13012  016E4E  50E3               	movf	plusw1,w,c
 13013  016E50  0A80               	xorlw	128
 13014  016E52  582A               	subwfb	btemp^0,w,c
 13015  016E54  A0D8               	btfss	status,0,c
 13016  016E56  D0C1               	goto	l16875
 13017  016E58  D04A               	goto	u16430
 13018  016E5A                     l16857:
 13019                           
 13020                           ;stkvar	_t1 @ sp[(-24)+8]
 13021                           ;stkvar	_t @ sp[(-24)+-8]
 13022  016E5A  50E1               	movf	fsr1l,w,c
 13023  016E5C  0FE0               	addlw	-32
 13024  016E5E  6ED9               	movwf	fsr2l,c
 13025  016E60  50E2               	movf	fsr1h,w,c
 13026  016E62  6EDA               	movwf	fsr2h,c
 13027  016E64  0EFF               	movlw	255
 13028  016E66  22DA               	addwfc	fsr2h,f,c
 13029  016E68  0EF0               	movlw	-16
 13030  016E6A  50E3               	movf	plusw1,w,c
 13031  016E6C  5CDE               	subwf	postinc2,w,c
 13032  016E6E  0EF1               	movlw	-15
 13033  016E70  50E3               	movf	plusw1,w,c
 13034  016E72  58DE               	subwfb	postinc2,w,c
 13035  016E74  0EF2               	movlw	-14
 13036  016E76  50E3               	movf	plusw1,w,c
 13037  016E78  58DE               	subwfb	postinc2,w,c
 13038  016E7A  0EF3               	movlw	-13
 13039  016E7C  50E3               	movf	plusw1,w,c
 13040  016E7E  58DE               	subwfb	postinc2,w,c
 13041  016E80  0EF4               	movlw	-12
 13042  016E82  50E3               	movf	plusw1,w,c
 13043  016E84  58DE               	subwfb	postinc2,w,c
 13044  016E86  0EF5               	movlw	-11
 13045  016E88  50E3               	movf	plusw1,w,c
 13046  016E8A  58DE               	subwfb	postinc2,w,c
 13047  016E8C  0EF6               	movlw	-10
 13048  016E8E  50E3               	movf	plusw1,w,c
 13049  016E90  58DE               	subwfb	postinc2,w,c
 13050  016E92  50DE               	movf	postinc2,w,c
 13051  016E94  0A80               	xorlw	128
 13052  016E96  6E2A               	movwf	btemp^0,c
 13053  016E98  0EF7               	movlw	-9
 13054  016E9A  50E3               	movf	plusw1,w,c
 13055  016E9C  0A80               	xorlw	128
 13056  016E9E  582A               	subwfb	btemp^0,w,c
 13057  016EA0  A0D8               	btfss	status,0,c
 13058  016EA2  D09B               	goto	l16875
 13059                           
 13060                           ;stkvar	_t0 @ sp[(-24)+16]
 13061                           ;stkvar	_t @ sp[(-24)+-8]
 13062  016EA4  50E1               	movf	fsr1l,w,c
 13063  016EA6  0FE0               	addlw	-32
 13064  016EA8  6ED9               	movwf	fsr2l,c
 13065  016EAA  50E2               	movf	fsr1h,w,c
 13066  016EAC  6EDA               	movwf	fsr2h,c
 13067  016EAE  0EFF               	movlw	255
 13068  016EB0  22DA               	addwfc	fsr2h,f,c
 13069  016EB2  0EF8               	movlw	-8
 13070  016EB4  50E3               	movf	plusw1,w,c
 13071  016EB6  5CDE               	subwf	postinc2,w,c
 13072  016EB8  0EF9               	movlw	-7
 13073  016EBA  50E3               	movf	plusw1,w,c
 13074  016EBC  58DE               	subwfb	postinc2,w,c
 13075  016EBE  0EFA               	movlw	-6
 13076  016EC0  50E3               	movf	plusw1,w,c
 13077  016EC2  58DE               	subwfb	postinc2,w,c
 13078  016EC4  0EFB               	movlw	-5
 13079  016EC6  50E3               	movf	plusw1,w,c
 13080  016EC8  58DE               	subwfb	postinc2,w,c
 13081  016ECA  0EFC               	movlw	-4
 13082  016ECC  50E3               	movf	plusw1,w,c
 13083  016ECE  58DE               	subwfb	postinc2,w,c
 13084  016ED0  0EFD               	movlw	-3
 13085  016ED2  50E3               	movf	plusw1,w,c
 13086  016ED4  58DE               	subwfb	postinc2,w,c
 13087  016ED6  0EFE               	movlw	-2
 13088  016ED8  50E3               	movf	plusw1,w,c
 13089  016EDA  58DE               	subwfb	postinc2,w,c
 13090  016EDC  50DE               	movf	postinc2,w,c
 13091  016EDE  0A80               	xorlw	128
 13092  016EE0  6E2A               	movwf	btemp^0,c
 13093  016EE2  0EFF               	movlw	-1
 13094  016EE4  50E3               	movf	plusw1,w,c
 13095  016EE6  0A80               	xorlw	128
 13096  016EE8  582A               	subwfb	btemp^0,w,c
 13097  016EEA  B0D8               	btfsc	status,0,c
 13098  016EEC  D076               	goto	l16875
 13099  016EEE                     u16430:
 13100                           
 13101                           ;stkvar	_isdst @ sp[(-24)+-12]
 13102  016EEE  0EDC               	movlw	-36
 13103  016EF0  006F FF8F FFD9     	movff	plusw1,fsr2l
 13104  016EF6  0EDD               	movlw	-35
 13105  016EF8  006F FF8F FFDA     	movff	plusw1,fsr2h
 13106  016EFE  0E00               	movlw	0
 13107  016F00  6EDE               	movwf	postinc2,c
 13108  016F02  0E00               	movlw	0
 13109  016F04  6EDD               	movwf	postdec2,c
 13110  016F06  0060  F1C0  F032   	movff	___timezone,btemp+8
 13111  016F0C  0060  F1C4  F033   	movff	___timezone+1,btemp+9
 13112  016F12  0060  F1C8  F034   	movff	___timezone+2,btemp+10
 13113  016F18  0060  F1CC  F035   	movff	___timezone+3,btemp+11
 13114  016F1E  1E32               	comf	(btemp+8)^0,f,c
 13115  016F20  1E33               	comf	(btemp+9)^0,f,c
 13116  016F22  1E34               	comf	(btemp+10)^0,f,c
 13117  016F24  1E35               	comf	(btemp+11)^0,f,c
 13118  016F26  2A32               	incf	(btemp+8)^0,f,c
 13119  016F28  0E00               	movlw	0
 13120  016F2A  2233               	addwfc	(btemp+9)^0,f,c
 13121  016F2C  2234               	addwfc	(btemp+10)^0,f,c
 13122  016F2E  2235               	addwfc	(btemp+11)^0,f,c
 13123                           
 13124                           ;stkvar	_offset @ sp[(-24)+-14]
 13125  016F30  0EDA               	movlw	-38
 13126  016F32  006F FF8F FFD9     	movff	plusw1,fsr2l
 13127  016F38  0EDB               	movlw	-37
 13128  016F3A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13129  016F40  0060  F0CB  FFDE   	movff	btemp+8,postinc2
 13130  016F46  0060  F0CF  FFDE   	movff	btemp+9,postinc2
 13131  016F4C  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 13132  016F52  0060  F0D7  FFDE   	movff	btemp+11,postinc2
 13133                           
 13134                           ;stkvar	_oppoff @ sp[(-24)+-16]
 13135  016F58  0ED8               	movlw	-40
 13136  016F5A  006F FF8C  F02A    	movff	plusw1,btemp
 13137  016F60  0ED9               	movlw	-39
 13138  016F62  50E3               	movf	plusw1,w,c
 13139  016F64  102A               	iorwf	btemp^0,w,c
 13140  016F66  B4D8               	btfsc	status,2,c
 13141  016F68  D029               	goto	l16871
 13142  016F6A  0060  F2D8  F034   	movff	_dst_off,btemp+10
 13143  016F70  0060  F2DC  F035   	movff	_dst_off+1,btemp+11
 13144  016F76  1E34               	comf	(btemp+10)^0,f,c
 13145  016F78  1E35               	comf	(btemp+11)^0,f,c
 13146  016F7A  4A34               	infsnz	(btemp+10)^0,f,c
 13147  016F7C  2A35               	incf	(btemp+11)^0,f,c
 13148  016F7E  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 13149  016F84  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 13150  016F8A  0E00               	movlw	0
 13151  016F8C  BE2F               	btfsc	(btemp+5)^0,7,c
 13152  016F8E  0EFF               	movlw	255
 13153  016F90  6E30               	movwf	(btemp+6)^0,c
 13154  016F92  6E31               	movwf	(btemp+7)^0,c
 13155                           
 13156                           ;stkvar	_oppoff @ sp[(-24)+-16]
 13157  016F94  0ED8               	movlw	-40
 13158  016F96  006F FF8F FFD9     	movff	plusw1,fsr2l
 13159  016F9C  0ED9               	movlw	-39
 13160  016F9E  006F FF8F FFDA     	movff	plusw1,fsr2h
 13161  016FA4  0060  F0BB  FFDE   	movff	btemp+4,postinc2
 13162  016FAA  0060  F0BF  FFDE   	movff	btemp+5,postinc2
 13163  016FB0  0060  F0C3  FFDE   	movff	btemp+6,postinc2
 13164  016FB6  0060  F0C7  FFDE   	movff	btemp+7,postinc2
 13165  016FBC                     l16871:
 13166                           
 13167                           ;stkvar	_zonename @ sp[(-24)+-18]
 13168  016FBC  0ED6               	movlw	-42
 13169  016FBE  006F FF8F FFD9     	movff	plusw1,fsr2l
 13170  016FC4  0ED7               	movlw	-41
 13171  016FC6  006F FF8F FFDA     	movff	plusw1,fsr2h
 13172  016FCC  0060  F1B3  FFDE   	movff	___tzname,postinc2
 13173  016FD2  0060  F1B7  FFDD   	movff	___tzname+1,postdec2
 13174  016FD8  D075               	goto	l4038
 13175  016FDA                     l16875:
 13176                           
 13177                           ;stkvar	_isdst @ sp[(-24)+-12]
 13178  016FDA  0EDC               	movlw	-36
 13179  016FDC  006F FF8F FFD9     	movff	plusw1,fsr2l
 13180  016FE2  0EDD               	movlw	-35
 13181  016FE4  006F FF8F FFDA     	movff	plusw1,fsr2h
 13182  016FEA  0E01               	movlw	1
 13183  016FEC  6EDE               	movwf	postinc2,c
 13184  016FEE  0E00               	movlw	0
 13185  016FF0  6EDD               	movwf	postdec2,c
 13186  016FF2  0060  F2D8  F034   	movff	_dst_off,btemp+10
 13187  016FF8  0060  F2DC  F035   	movff	_dst_off+1,btemp+11
 13188  016FFE  1E34               	comf	(btemp+10)^0,f,c
 13189  017000  1E35               	comf	(btemp+11)^0,f,c
 13190  017002  4A34               	infsnz	(btemp+10)^0,f,c
 13191  017004  2A35               	incf	(btemp+11)^0,f,c
 13192  017006  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 13193  01700C  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 13194  017012  0E00               	movlw	0
 13195  017014  BE2F               	btfsc	(btemp+5)^0,7,c
 13196  017016  0EFF               	movlw	255
 13197  017018  6E30               	movwf	(btemp+6)^0,c
 13198  01701A  6E31               	movwf	(btemp+7)^0,c
 13199                           
 13200                           ;stkvar	_offset @ sp[(-24)+-14]
 13201  01701C  0EDA               	movlw	-38
 13202  01701E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13203  017024  0EDB               	movlw	-37
 13204  017026  006F FF8F FFDA     	movff	plusw1,fsr2h
 13205  01702C  0060  F0BB  FFDE   	movff	btemp+4,postinc2
 13206  017032  0060  F0BF  FFDE   	movff	btemp+5,postinc2
 13207  017038  0060  F0C3  FFDE   	movff	btemp+6,postinc2
 13208  01703E  0060  F0C7  FFDE   	movff	btemp+7,postinc2
 13209                           
 13210                           ;stkvar	_oppoff @ sp[(-24)+-16]
 13211  017044  0ED8               	movlw	-40
 13212  017046  006F FF8C  F02A    	movff	plusw1,btemp
 13213  01704C  0ED9               	movlw	-39
 13214  01704E  50E3               	movf	plusw1,w,c
 13215  017050  102A               	iorwf	btemp^0,w,c
 13216  017052  B4D8               	btfsc	status,2,c
 13217  017054  D029               	goto	l16883
 13218  017056  0060  F1C0  F032   	movff	___timezone,btemp+8
 13219  01705C  0060  F1C4  F033   	movff	___timezone+1,btemp+9
 13220  017062  0060  F1C8  F034   	movff	___timezone+2,btemp+10
 13221  017068  0060  F1CC  F035   	movff	___timezone+3,btemp+11
 13222  01706E  1E32               	comf	(btemp+8)^0,f,c
 13223  017070  1E33               	comf	(btemp+9)^0,f,c
 13224  017072  1E34               	comf	(btemp+10)^0,f,c
 13225  017074  1E35               	comf	(btemp+11)^0,f,c
 13226  017076  2A32               	incf	(btemp+8)^0,f,c
 13227  017078  0E00               	movlw	0
 13228  01707A  2233               	addwfc	(btemp+9)^0,f,c
 13229  01707C  2234               	addwfc	(btemp+10)^0,f,c
 13230  01707E  2235               	addwfc	(btemp+11)^0,f,c
 13231                           
 13232                           ;stkvar	_oppoff @ sp[(-24)+-16]
 13233  017080  0ED8               	movlw	-40
 13234  017082  006F FF8F FFD9     	movff	plusw1,fsr2l
 13235  017088  0ED9               	movlw	-39
 13236  01708A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13237  017090  0060  F0CB  FFDE   	movff	btemp+8,postinc2
 13238  017096  0060  F0CF  FFDE   	movff	btemp+9,postinc2
 13239  01709C  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 13240  0170A2  0060  F0D7  FFDE   	movff	btemp+11,postinc2
 13241  0170A8                     l16883:
 13242                           
 13243                           ;stkvar	_zonename @ sp[(-24)+-18]
 13244  0170A8  0ED6               	movlw	-42
 13245  0170AA  006F FF8F FFD9     	movff	plusw1,fsr2l
 13246  0170B0  0ED7               	movlw	-41
 13247  0170B2  006F FF8F FFDA     	movff	plusw1,fsr2h
 13248  0170B8  0060  F1BB  FFDE   	movff	___tzname+2,postinc2
 13249  0170BE  0060  F1BF  FFDD   	movff	___tzname+3,postdec2
 13250  0170C4                     l4038:
 13251                           
 13252                           ; ___secs_to_zone: autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          18, argsize = 18, vargsize = 0
 13253  0170C4  0ED6               	movlw	214
 13254  0170C6  26E1               	addwf	fsr1l,f,c
 13255  0170C8  0EFF               	movlw	255
 13256  0170CA  22E2               	addwfc	fsr1h,f,c
 13257  0170CC  0012               	return		;funcret
 13258  0170CE                     __end_of___secs_to_zone:
 13259                           	opt callstack 0
 13260                           
 13261 ;; *************** function _scan_trans *****************
 13262 ;; Defined at:
 13263 ;;		line 145 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 13264 ;; Parameters:    Size  Location     Type
 13265 ;;  t               8  [STACK] long long 
 13266 ;;  local           2  [STACK] int 
 13267 ;;  alt             2  [STACK] PTR unsigned int 
 13268 ;;		 -> alt(2), 
 13269 ;; Auto vars:     Size  Location     Type
 13270 ;;  x               8    0        unsigned long long 
 13271 ;;  a               2    0        unsigned int 
 13272 ;;  scale           2    0        int 
 13273 ;;  n               2    0        unsigned int 
 13274 ;;  m               2    0        unsigned int 
 13275 ;;  off             2    0        int 
 13276 ;; Return value:  Size  Location     Type
 13277 ;;                  2  [STACK] unsigned int 
 13278 ;; Registers used:
 13279 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 13280 ;; Tracked objects:
 13281 ;;		On entry : 0/0
 13282 ;;		On exit  : 0/0
 13283 ;;		Unchanged: 0/0
 13284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13289 ;;Total ram usage:        0 bytes
 13290 ;; Hardware stack levels used:    1
 13291 ;; Hardware stack levels required when called:   16
 13292 ;; This function calls:
 13293 ;;		_zi_read32
 13294 ;; This function is called by:
 13295 ;;		___secs_to_zone
 13296 ;; This function uses a reentrant model
 13297 ;;
 13298                           
 13299                           	psect	text38
 13300  002592                     __ptext38:
 13301                           	opt callstack 0
 13302  002592                     _scan_trans:
 13303                           	opt callstack 11
 13304                           
 13305                           ;stkvar	_alt @ sp[(0)+-12]
 13306                           
 13307                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 12 v
      +                          argsize = 0, retsize = 0 argfudge = 0
 13308                           ;incstack = 0
 13309  002592  0EF4               	movlw	-12
 13310  002594  006F FF8C  F02A    	movff	plusw1,btemp
 13311  00259A  0EF5               	movlw	-11
 13312  00259C  50E3               	movf	plusw1,w,c
 13313  00259E  102A               	iorwf	btemp^0,w,c
 13314  0025A0  B4D8               	btfsc	status,2,c
 13315  0025A2  D00C               	goto	l16611
 13316                           
 13317                           ;stkvar	_alt @ sp[(0)+-12]
 13318  0025A4  0EF4               	movlw	-12
 13319  0025A6  006F FF8F FFD9     	movff	plusw1,fsr2l
 13320  0025AC  0EF5               	movlw	-11
 13321  0025AE  006F FF8F FFDA     	movff	plusw1,fsr2h
 13322  0025B4  0E00               	movlw	0
 13323  0025B6  6EDE               	movwf	postinc2,c
 13324  0025B8  0E00               	movlw	0
 13325  0025BA  6EDD               	movwf	postdec2,c
 13326  0025BC                     l16611:
 13327  0025BC  0E00               	movlw	0
 13328  0025BE  6E2A               	movwf	btemp^0,c
 13329  0025C0  0E00               	movlw	0
 13330  0025C2  6E2B               	movwf	(btemp+1)^0,c
 13331                           
 13332                           ; _scan_trans: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, a
      +                          rgsize = 12, vargsize = 0
 13333  0025C4  0EF4               	movlw	244
 13334  0025C6  26E1               	addwf	fsr1l,f,c
 13335  0025C8  0EFF               	movlw	255
 13336  0025CA  22E2               	addwfc	fsr1h,f,c
 13337  0025CC  0012               	return		;funcret
 13338  0025CE                     __end_of_scan_trans:
 13339                           	opt callstack 0
 13340                           
 13341 ;; *************** function _zi_read32 *****************
 13342 ;; Defined at:
 13343 ;;		line 100 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 13344 ;; Parameters:    Size  Location     Type
 13345 ;;  z               2  [STACK] PTR const unsigned char 
 13346 ;;		 -> NULL(0), 
 13347 ;; Auto vars:     Size  Location     Type
 13348 ;;		None
 13349 ;; Return value:  Size  Location     Type
 13350 ;;                  4  [STACK] unsigned long 
 13351 ;; Registers used:
 13352 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13353 ;; Tracked objects:
 13354 ;;		On entry : 0/0
 13355 ;;		On exit  : 0/0
 13356 ;;		Unchanged: 0/0
 13357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13362 ;;Total ram usage:        0 bytes
 13363 ;; Hardware stack levels used:    1
 13364 ;; Hardware stack levels required when called:   15
 13365 ;; This function calls:
 13366 ;;		Nothing
 13367 ;; This function is called by:
 13368 ;;		_scan_trans
 13369 ;;		___secs_to_zone
 13370 ;; This function uses a reentrant model
 13371 ;;
 13372                           
 13373                           	psect	text39
 13374  0002B8                     __ptext39:
 13375                           	opt callstack 0
 13376  0002B8                     _zi_read32:
 13377                           	opt callstack 12
 13378                           
 13379                           ;stkvar	_z @ sp[(0)+-2]
 13380                           
 13381                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13382                           ;incstack = 0
 13383  0002B8  0EFE               	movlw	-2
 13384  0002BA  006F FF8C  F034    	movff	plusw1,btemp+10
 13385  0002C0  0EFF               	movlw	-1
 13386  0002C2  006F FF8C  F035    	movff	plusw1,btemp+11
 13387  0002C8  0E02               	movlw	2
 13388  0002CA  2434               	addwf	(btemp+10)^0,w,c
 13389  0002CC  6ED9               	movwf	fsr2l,c
 13390  0002CE  0E00               	movlw	0
 13391  0002D0  2035               	addwfc	(btemp+11)^0,w,c
 13392  0002D2  6EDA               	movwf	fsr2h,c
 13393  0002D4  50DF               	movf	indf2,w,c
 13394  0002D6  6E35               	movwf	(btemp+11)^0,c
 13395  0002D8  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 13396  0002DE  6A2F               	clrf	(btemp+5)^0,c
 13397  0002E0  6A30               	clrf	(btemp+6)^0,c
 13398  0002E2  6A31               	clrf	(btemp+7)^0,c
 13399  0002E4  0060  F0C0  F031   	movff	btemp+6,btemp+7
 13400  0002EA  0060  F0BC  F030   	movff	btemp+5,btemp+6
 13401  0002F0  0060  F0B8  F02F   	movff	btemp+4,btemp+5
 13402  0002F6  6A2E               	clrf	(btemp+4)^0,c
 13403                           
 13404                           ;stkvar	_z @ sp[(0)+-2]
 13405  0002F8  0EFE               	movlw	-2
 13406  0002FA  006F FF8C  F034    	movff	plusw1,btemp+10
 13407  000300  0EFF               	movlw	-1
 13408  000302  006F FF8C  F035    	movff	plusw1,btemp+11
 13409  000308  0E01               	movlw	1
 13410  00030A  2434               	addwf	(btemp+10)^0,w,c
 13411  00030C  6ED9               	movwf	fsr2l,c
 13412  00030E  0E00               	movlw	0
 13413  000310  2035               	addwfc	(btemp+11)^0,w,c
 13414  000312  6EDA               	movwf	fsr2h,c
 13415  000314  50DF               	movf	indf2,w,c
 13416  000316  6E35               	movwf	(btemp+11)^0,c
 13417  000318  0060  F0D4  F02A   	movff	btemp+11,btemp
 13418  00031E  6A2B               	clrf	(btemp+1)^0,c
 13419  000320  6A2C               	clrf	(btemp+2)^0,c
 13420  000322  6A2D               	clrf	(btemp+3)^0,c
 13421  000324  0060  F0AC  F02D   	movff	btemp+1,btemp+3
 13422  00032A  0060  F0A8  F02C   	movff	btemp,btemp+2
 13423  000330  6A2B               	clrf	(btemp+1)^0,c
 13424  000332  6A2A               	clrf	btemp^0,c
 13425                           
 13426                           ;stkvar	_z @ sp[(0)+-2]
 13427  000334  0EFE               	movlw	-2
 13428  000336  006F FF8F FFD9     	movff	plusw1,fsr2l
 13429  00033C  0EFF               	movlw	-1
 13430  00033E  006F FF8F FFDA     	movff	plusw1,fsr2h
 13431  000344  50DF               	movf	indf2,w,c
 13432  000346  6E32               	movwf	(btemp+8)^0,c
 13433  000348  6A33               	clrf	(btemp+9)^0,c
 13434  00034A  6A34               	clrf	(btemp+10)^0,c
 13435  00034C  6A35               	clrf	(btemp+11)^0,c
 13436  00034E  0060  F0C8  F035   	movff	btemp+8,btemp+11
 13437  000354  6A34               	clrf	(btemp+10)^0,c
 13438  000356  6A33               	clrf	(btemp+9)^0,c
 13439  000358  6A32               	clrf	(btemp+8)^0,c
 13440  00035A  502A               	movf	btemp^0,w,c
 13441  00035C  1232               	iorwf	(btemp+8)^0,f,c
 13442  00035E  502B               	movf	(btemp+1)^0,w,c
 13443  000360  1233               	iorwf	(btemp+9)^0,f,c
 13444  000362  502C               	movf	(btemp+2)^0,w,c
 13445  000364  1234               	iorwf	(btemp+10)^0,f,c
 13446  000366  502D               	movf	(btemp+3)^0,w,c
 13447  000368  1235               	iorwf	(btemp+11)^0,f,c
 13448  00036A  502E               	movf	(btemp+4)^0,w,c
 13449  00036C  1232               	iorwf	(btemp+8)^0,f,c
 13450  00036E  502F               	movf	(btemp+5)^0,w,c
 13451  000370  1233               	iorwf	(btemp+9)^0,f,c
 13452  000372  5030               	movf	(btemp+6)^0,w,c
 13453  000374  1234               	iorwf	(btemp+10)^0,f,c
 13454  000376  5031               	movf	(btemp+7)^0,w,c
 13455  000378  1235               	iorwf	(btemp+11)^0,f,c
 13456                           
 13457                           ;stkvar	_z @ sp[(0)+-2]
 13458  00037A  0EFE               	movlw	-2
 13459  00037C  006F FF8C  F030    	movff	plusw1,btemp+6
 13460  000382  0EFF               	movlw	-1
 13461  000384  006F FF8C  F031    	movff	plusw1,btemp+7
 13462  00038A  0E03               	movlw	3
 13463  00038C  2430               	addwf	(btemp+6)^0,w,c
 13464  00038E  6ED9               	movwf	fsr2l,c
 13465  000390  0E00               	movlw	0
 13466  000392  2031               	addwfc	(btemp+7)^0,w,c
 13467  000394  6EDA               	movwf	fsr2h,c
 13468  000396  50DF               	movf	indf2,w,c
 13469  000398  1032               	iorwf	(btemp+8)^0,w,c
 13470  00039A  6E2A               	movwf	btemp^0,c
 13471  00039C  5033               	movf	(btemp+9)^0,w,c
 13472  00039E  6E2B               	movwf	(btemp+1)^0,c
 13473  0003A0  5034               	movf	(btemp+10)^0,w,c
 13474  0003A2  6E2C               	movwf	(btemp+2)^0,c
 13475  0003A4  5035               	movf	(btemp+11)^0,w,c
 13476  0003A6  6E2D               	movwf	(btemp+3)^0,c
 13477                           
 13478                           ; _zi_read32: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
 13479  0003A8  52E5               	movf	postdec1,f,c
 13480  0003AA  52E5               	movf	postdec1,f,c
 13481  0003AC  0012               	return		;funcret
 13482  0003AE                     __end_of_zi_read32:
 13483                           	opt callstack 0
 13484                           
 13485 ;; *************** function _rule_to_secs *****************
 13486 ;; Defined at:
 13487 ;;		line 218 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 13488 ;; Parameters:    Size  Location     Type
 13489 ;;  rule            2  [STACK] PTR const int 
 13490 ;;		 -> r1(10), r0(10), 
 13491 ;;  year            2  [STACK] int 
 13492 ;; Auto vars:     Size  Location     Type
 13493 ;;  days            2  [STACK] int 
 13494 ;;  wday            2  [STACK] int 
 13495 ;;  t               8  [STACK] long long 
 13496 ;;  is_leap         2  [STACK] int 
 13497 ;;  n               2  [STACK] int 
 13498 ;;  x               2  [STACK] int 
 13499 ;;  m               2  [STACK] int 
 13500 ;;  d               2  [STACK] int 
 13501 ;; Return value:  Size  Location     Type
 13502 ;;                  8  [STACK] long long 
 13503 ;; Registers used:
 13504 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, tblptrl, tblptrh, tblptru, prodl, prodh
 13505 ;; Tracked objects:
 13506 ;;		On entry : 0/0
 13507 ;;		On exit  : 0/0
 13508 ;;		Unchanged: 0/0
 13509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13514 ;;Total ram usage:        0 bytes
 13515 ;; Hardware stack levels used:    1
 13516 ;; Hardware stack levels required when called:   17
 13517 ;; This function calls:
 13518 ;;		___aldiv
 13519 ;;		___aomod
 13520 ;;		___lmul
 13521 ;;		___month_to_secs
 13522 ;;		___year_to_secs
 13523 ;;		_days_in_month
 13524 ;; This function is called by:
 13525 ;;		___secs_to_zone
 13526 ;; This function uses a reentrant model
 13527 ;;
 13528                           
 13529                           	psect	text40
 13530  0180B4                     __ptext40:
 13531                           	opt callstack 0
 13532  0180B4                     _rule_to_secs:
 13533                           	opt callstack 0
 13534                           
 13535                           ; autosize = 22, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 8 argfudge = 4
 13536  0180B4  0E1A               	movlw	26
 13537  0180B6  26E1               	addwf	fsr1l,f,c
 13538  0180B8  0E00               	movlw	0
 13539  0180BA  22E2               	addwfc	fsr1h,f,c
 13540                           
 13541                           ;stkvar	_is_leap @ sp[(-22)+12]
 13542                           
 13543                           ;incstack = 0
 13544  0180BC  0EF6               	movlw	246
 13545  0180BE  24E1               	addwf	fsr1l,w,c
 13546  0180C0  6E2A               	movwf	btemp^0,c
 13547  0180C2  0EFF               	movlw	255
 13548  0180C4  20E2               	addwfc	fsr1h,w,c
 13549  0180C6  6E2B               	movwf	(btemp+1)^0,c
 13550  0180C8  0060  F0AB  FFE6   	movff	btemp,postinc1
 13551  0180CE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 13552                           
 13553                           ;stkvar	_year @ sp[(-24)+-8]
 13554  0180D4  0EE0               	movlw	-32
 13555  0180D6  006F FF8C  F03A    	movff	plusw1,btemp+16
 13556  0180DC  0EE1               	movlw	-31
 13557  0180DE  006F FF8C  F03B    	movff	plusw1,btemp+17
 13558  0180E4  6A3C               	clrf	(btemp+18)^0,c
 13559  0180E6  BE3B               	btfsc	(btemp+17)^0,7,c
 13560  0180E8  683C               	setf	(btemp+18)^0,c
 13561  0180EA  0060  F0F0  F03D   	movff	btemp+18,btemp+19
 13562  0180F0  0060  F0F0  F03E   	movff	btemp+18,btemp+20
 13563  0180F6  0060  F0F0  F03F   	movff	btemp+18,btemp+21
 13564  0180FC  0060  F0F0  F040   	movff	btemp+18,btemp+22
 13565  018102  0060  F0F0  F041   	movff	btemp+18,btemp+23
 13566  018108  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 13567  01810E  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 13568  018114  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 13569  01811A  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 13570  018120  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 13571  018126  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 13572  01812C  0060  F103  FFE6   	movff	btemp+22,postinc1
 13573  018132  0060  F107  FFE6   	movff	btemp+23,postinc1
 13574  018138  EC5D  F0AF         	call	___year_to_secs	;wreg free
 13575  01813C  52E5               	movf	postdec1,f,c
 13576  01813E  006F FF9C  F041    	movff	indf1,btemp+23
 13577  018144  52E5               	movf	postdec1,f,c
 13578  018146  006F FF9C  F040    	movff	indf1,btemp+22
 13579  01814C  52E5               	movf	postdec1,f,c
 13580  01814E  006F FF9C  F03F    	movff	indf1,btemp+21
 13581  018154  52E5               	movf	postdec1,f,c
 13582  018156  006F FF9C  F03E    	movff	indf1,btemp+20
 13583  01815C  52E5               	movf	postdec1,f,c
 13584  01815E  006F FF9C  F03D    	movff	indf1,btemp+19
 13585  018164  52E5               	movf	postdec1,f,c
 13586  018166  006F FF9C  F03C    	movff	indf1,btemp+18
 13587  01816C  52E5               	movf	postdec1,f,c
 13588  01816E  006F FF9C  F03B    	movff	indf1,btemp+17
 13589  018174  52E5               	movf	postdec1,f,c
 13590  018176  006F FF9C  F03A    	movff	indf1,btemp+16
 13591  01817C  52E5               	movf	postdec1,f,c
 13592  01817E  52E5               	movf	postdec1,f,c
 13593                           
 13594                           ;stkvar	_t @ sp[(-22)+4]
 13595  018180  0EEE               	movlw	-18
 13596  018182  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 13597  018188  0EEF               	movlw	-17
 13598  01818A  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 13599  018190  0EF0               	movlw	-16
 13600  018192  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 13601  018198  0EF1               	movlw	-15
 13602  01819A  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 13603  0181A0  0EF2               	movlw	-14
 13604  0181A2  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 13605  0181A8  0EF3               	movlw	-13
 13606  0181AA  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 13607  0181B0  0EF4               	movlw	-12
 13608  0181B2  0060  F103  FFE3   	movff	btemp+22,plusw1
 13609  0181B8  0EF5               	movlw	-11
 13610  0181BA  0060  F107  FFE3   	movff	btemp+23,plusw1
 13611                           
 13612                           ;stkvar	_rule @ sp[(-22)+-6]
 13613  0181C0  0EE4               	movlw	-28
 13614  0181C2  006F FF8F FFD9     	movff	plusw1,fsr2l
 13615  0181C8  0EE5               	movlw	-27
 13616  0181CA  006F FF8F FFDA     	movff	plusw1,fsr2h
 13617  0181D0  0E4D               	movlw	77
 13618  0181D2  18DE               	xorwf	postinc2,w,c
 13619  0181D4  10DE               	iorwf	postinc2,w,c
 13620  0181D6  B4D8               	btfsc	status,2,c
 13621  0181D8  D074               	goto	l16727
 13622                           
 13623                           ;stkvar	_rule @ sp[(-22)+-6]
 13624  0181DA  0EE4               	movlw	-28
 13625  0181DC  006F FF8C  F034    	movff	plusw1,btemp+10
 13626  0181E2  0EE5               	movlw	-27
 13627  0181E4  006F FF8C  F035    	movff	plusw1,btemp+11
 13628  0181EA  0E02               	movlw	2
 13629  0181EC  2434               	addwf	(btemp+10)^0,w,c
 13630  0181EE  6ED9               	movwf	fsr2l,c
 13631  0181F0  0E00               	movlw	0
 13632  0181F2  2035               	addwfc	(btemp+11)^0,w,c
 13633  0181F4  6EDA               	movwf	fsr2h,c
 13634  0181F6  006F FF78  F034    	movff	postinc2,btemp+10
 13635  0181FC  006F FF74  F035    	movff	postdec2,btemp+11
 13636                           
 13637                           ;stkvar	_x @ sp[(-22)+16]
 13638  018202  0EFA               	movlw	-6
 13639  018204  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13640  01820A  0EFB               	movlw	-5
 13641  01820C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13642                           
 13643                           ;stkvar	_rule @ sp[(-22)+-6]
 13644  018212  0EE4               	movlw	-28
 13645  018214  006F FF8F FFD9     	movff	plusw1,fsr2l
 13646  01821A  0EE5               	movlw	-27
 13647  01821C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13648  018222  0E4A               	movlw	74
 13649  018224  18DE               	xorwf	postinc2,w,c
 13650  018226  10DE               	iorwf	postinc2,w,c
 13651  018228  A4D8               	btfss	status,2,c
 13652  01822A  D021               	goto	l16725
 13653                           
 13654                           ;stkvar	_x @ sp[(-22)+16]
 13655  01822C  0EFB               	movlw	-5
 13656  01822E  BEE3               	btfsc	plusw1,7,c
 13657  018230  D014               	goto	u16260
 13658  018232  0EFB               	movlw	-5
 13659  018234  50E3               	movf	plusw1,w,c
 13660  018236  E108               	bnz	u16250
 13661  018238  0EFA               	movlw	-6
 13662  01823A  006F FF8C  F02A    	movff	plusw1,btemp
 13663  018240  0E3C               	movlw	60
 13664  018242  5E2A               	subwf	btemp^0,f,c
 13665  018244  A0D8               	btfss	status,0,c
 13666  018246  D009               	goto	u16260
 13667  018248                     u16250:
 13668                           
 13669                           ;stkvar	_is_leap @ sp[(-22)+12]
 13670  018248  0EF6               	movlw	-10
 13671  01824A  006F FF8C  F02A    	movff	plusw1,btemp
 13672  018250  0EF7               	movlw	-9
 13673  018252  50E3               	movf	plusw1,w,c
 13674  018254  102A               	iorwf	btemp^0,w,c
 13675  018256  A4D8               	btfss	status,2,c
 13676  018258  D00A               	goto	l16725
 13677  01825A                     u16260:
 13678                           
 13679                           ;stkvar	_x @ sp[(-22)+16]
 13680  01825A  50E1               	movf	fsr1l,w,c
 13681  01825C  0FFA               	addlw	-6
 13682  01825E  6ED9               	movwf	fsr2l,c
 13683  018260  50E2               	movf	fsr1h,w,c
 13684  018262  6EDA               	movwf	fsr2h,c
 13685  018264  0EFF               	movlw	255
 13686  018266  22DA               	addwfc	fsr2h,f,c
 13687  018268  06DE               	decf	postinc2,f,c
 13688  01826A  0E00               	movlw	0
 13689  01826C  5ADD               	subwfb	postdec2,f,c
 13690  01826E                     l16725:
 13691  01826E  0E80               	movlw	128
 13692  018270  6EE6               	movwf	postinc1,c
 13693  018272  0E51               	movlw	81
 13694  018274  6EE6               	movwf	postinc1,c
 13695  018276  0E01               	movlw	1
 13696  018278  6EE6               	movwf	postinc1,c
 13697  01827A  0E00               	movlw	0
 13698  01827C  6EE6               	movwf	postinc1,c
 13699                           
 13700                           ;stkvar	_x @ sp[(-26)+16]
 13701  01827E  0EF6               	movlw	-10
 13702  018280  006F FF8C  F034    	movff	plusw1,btemp+10
 13703  018286  0EF7               	movlw	-9
 13704  018288  006F FF8C  F035    	movff	plusw1,btemp+11
 13705  01828E  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 13706  018294  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 13707  01829A  0E00               	movlw	0
 13708  01829C  BE2F               	btfsc	(btemp+5)^0,7,c
 13709  01829E  0EFF               	movlw	255
 13710  0182A0  6E30               	movwf	(btemp+6)^0,c
 13711  0182A2  6E31               	movwf	(btemp+7)^0,c
 13712  0182A4  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 13713  0182AA  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 13714  0182B0  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 13715  0182B6  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 13716  0182BC  ECB6  F003         	call	___lmul	;wreg free
 13717  0182C0  D1EC               	goto	L10
 13718  0182C2                     l16727:
 13719                           
 13720                           ;stkvar	_rule @ sp[(-22)+-6]
 13721  0182C2  0EE4               	movlw	-28
 13722  0182C4  006F FF8C  F034    	movff	plusw1,btemp+10
 13723  0182CA  0EE5               	movlw	-27
 13724  0182CC  006F FF8C  F035    	movff	plusw1,btemp+11
 13725  0182D2  0E02               	movlw	2
 13726  0182D4  2434               	addwf	(btemp+10)^0,w,c
 13727  0182D6  6ED9               	movwf	fsr2l,c
 13728  0182D8  0E00               	movlw	0
 13729  0182DA  2035               	addwfc	(btemp+11)^0,w,c
 13730  0182DC  6EDA               	movwf	fsr2h,c
 13731  0182DE  006F FF78  F034    	movff	postinc2,btemp+10
 13732  0182E4  006F FF74  F035    	movff	postdec2,btemp+11
 13733                           
 13734                           ;stkvar	_m @ sp[(-22)+18]
 13735  0182EA  0EFC               	movlw	-4
 13736  0182EC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13737  0182F2  0EFD               	movlw	-3
 13738  0182F4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13739                           
 13740                           ;stkvar	_rule @ sp[(-22)+-6]
 13741  0182FA  0EE4               	movlw	-28
 13742  0182FC  006F FF8C  F034    	movff	plusw1,btemp+10
 13743  018302  0EE5               	movlw	-27
 13744  018304  006F FF8C  F035    	movff	plusw1,btemp+11
 13745  01830A  0E04               	movlw	4
 13746  01830C  2434               	addwf	(btemp+10)^0,w,c
 13747  01830E  6ED9               	movwf	fsr2l,c
 13748  018310  0E00               	movlw	0
 13749  018312  2035               	addwfc	(btemp+11)^0,w,c
 13750  018314  6EDA               	movwf	fsr2h,c
 13751  018316  006F FF78  F034    	movff	postinc2,btemp+10
 13752  01831C  006F FF74  F035    	movff	postdec2,btemp+11
 13753                           
 13754                           ;stkvar	_n @ sp[(-22)+14]
 13755  018322  0EF8               	movlw	-8
 13756  018324  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13757  01832A  0EF9               	movlw	-7
 13758  01832C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13759                           
 13760                           ;stkvar	_rule @ sp[(-22)+-6]
 13761  018332  0EE4               	movlw	-28
 13762  018334  006F FF8C  F034    	movff	plusw1,btemp+10
 13763  01833A  0EE5               	movlw	-27
 13764  01833C  006F FF8C  F035    	movff	plusw1,btemp+11
 13765  018342  0E06               	movlw	6
 13766  018344  2434               	addwf	(btemp+10)^0,w,c
 13767  018346  6ED9               	movwf	fsr2l,c
 13768  018348  0E00               	movlw	0
 13769  01834A  2035               	addwfc	(btemp+11)^0,w,c
 13770  01834C  6EDA               	movwf	fsr2h,c
 13771  01834E  006F FF78  F034    	movff	postinc2,btemp+10
 13772  018354  006F FF74  F035    	movff	postdec2,btemp+11
 13773                           
 13774                           ;stkvar	_d @ sp[(-22)+20]
 13775  01835A  0EFE               	movlw	-2
 13776  01835C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13777  018362  0EFF               	movlw	-1
 13778  018364  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13779                           
 13780                           ;stkvar	_is_leap @ sp[(-22)+12]
 13781  01836A  0EF6               	movlw	-10
 13782  01836C  006F FF8F FFE6     	movff	plusw1,postinc1
 13783  018372  006F FF8F FFE6     	movff	plusw1,postinc1
 13784                           
 13785                           ;stkvar	_m @ sp[(-24)+18]
 13786  018378  0EFA               	movlw	-6
 13787  01837A  50E3               	movf	plusw1,w,c
 13788  01837C  0FFF               	addlw	255
 13789  01837E  6E34               	movwf	(btemp+10)^0,c
 13790  018380  0EFB               	movlw	-5
 13791  018382  006F FF8C  F035    	movff	plusw1,btemp+11
 13792  018388  0EFF               	movlw	255
 13793  01838A  2235               	addwfc	(btemp+11)^0,f,c
 13794  01838C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 13795  018392  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 13796  018398  ECCB  F002         	call	___month_to_secs	;wreg free
 13797  01839C  0060  F0A8  F03A   	movff	btemp,btemp+16
 13798  0183A2  0060  F0AC  F03B   	movff	btemp+1,btemp+17
 13799  0183A8  0060  F0B0  F03C   	movff	btemp+2,btemp+18
 13800  0183AE  0060  F0B4  F03D   	movff	btemp+3,btemp+19
 13801  0183B4  6A3E               	clrf	(btemp+20)^0,c
 13802  0183B6  BE3D               	btfsc	(btemp+19)^0,7,c
 13803  0183B8  683E               	setf	(btemp+20)^0,c
 13804  0183BA  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 13805  0183C0  0060  F0F8  F040   	movff	btemp+20,btemp+22
 13806  0183C6  0060  F0F8  F041   	movff	btemp+20,btemp+23
 13807                           
 13808                           ;stkvar	_t @ sp[(-22)+4]
 13809  0183CC  50E1               	movf	fsr1l,w,c
 13810  0183CE  0FEE               	addlw	-18
 13811  0183D0  6ED9               	movwf	fsr2l,c
 13812  0183D2  50E2               	movf	fsr1h,w,c
 13813  0183D4  6EDA               	movwf	fsr2h,c
 13814  0183D6  0EFF               	movlw	255
 13815  0183D8  22DA               	addwfc	fsr2h,f,c
 13816  0183DA  503A               	movf	(btemp+16)^0,w,c
 13817  0183DC  26DE               	addwf	postinc2,f,c
 13818  0183DE  503B               	movf	(btemp+17)^0,w,c
 13819  0183E0  22DE               	addwfc	postinc2,f,c
 13820  0183E2  503C               	movf	(btemp+18)^0,w,c
 13821  0183E4  22DE               	addwfc	postinc2,f,c
 13822  0183E6  503D               	movf	(btemp+19)^0,w,c
 13823  0183E8  22DE               	addwfc	postinc2,f,c
 13824  0183EA  503E               	movf	(btemp+20)^0,w,c
 13825  0183EC  22DE               	addwfc	postinc2,f,c
 13826  0183EE  503F               	movf	(btemp+21)^0,w,c
 13827  0183F0  22DE               	addwfc	postinc2,f,c
 13828  0183F2  5040               	movf	(btemp+22)^0,w,c
 13829  0183F4  22DE               	addwfc	postinc2,f,c
 13830  0183F6  5041               	movf	(btemp+23)^0,w,c
 13831  0183F8  22DE               	addwfc	postinc2,f,c
 13832  0183FA  0E80               	movlw	128
 13833  0183FC  6EE6               	movwf	postinc1,c
 13834  0183FE  0E51               	movlw	81
 13835  018400  6EE6               	movwf	postinc1,c
 13836  018402  0E01               	movlw	1
 13837  018404  6EE6               	movwf	postinc1,c
 13838  018406  0E00               	movlw	0
 13839  018408  6EE6               	movwf	postinc1,c
 13840  01840A  0E80               	movlw	128
 13841  01840C  6EE6               	movwf	postinc1,c
 13842  01840E  0E3A               	movlw	58
 13843  018410  6EE6               	movwf	postinc1,c
 13844  018412  0E09               	movlw	9
 13845  018414  6EE6               	movwf	postinc1,c
 13846  018416  0E00               	movlw	0
 13847  018418  6EE6               	movwf	postinc1,c
 13848  01841A  0E00               	movlw	0
 13849  01841C  6EE6               	movwf	postinc1,c
 13850  01841E  0E00               	movlw	0
 13851  018420  6EE6               	movwf	postinc1,c
 13852  018422  0E00               	movlw	0
 13853  018424  6EE6               	movwf	postinc1,c
 13854  018426  0E00               	movlw	0
 13855  018428  6EE6               	movwf	postinc1,c
 13856                           
 13857                           ;stkvar	_t @ sp[(-34)+4]
 13858  01842A  0EE2               	movlw	-30
 13859  01842C  50E3               	movf	plusw1,w,c
 13860  01842E  0F00               	addlw	0
 13861  018430  6E3A               	movwf	(btemp+16)^0,c
 13862  018432  0EE3               	movlw	-29
 13863  018434  006F FF8C  F03B    	movff	plusw1,btemp+17
 13864  01843A  0E46               	movlw	70
 13865  01843C  223B               	addwfc	(btemp+17)^0,f,c
 13866  01843E  0EE4               	movlw	-28
 13867  018440  006F FF8C  F03C    	movff	plusw1,btemp+18
 13868  018446  0E05               	movlw	5
 13869  018448  223C               	addwfc	(btemp+18)^0,f,c
 13870  01844A  0EE5               	movlw	-27
 13871  01844C  006F FF8C  F03D    	movff	plusw1,btemp+19
 13872  018452  0E00               	movlw	0
 13873  018454  223D               	addwfc	(btemp+19)^0,f,c
 13874  018456  0EE6               	movlw	-26
 13875  018458  006F FF8C  F03E    	movff	plusw1,btemp+20
 13876  01845E  0E00               	movlw	0
 13877  018460  223E               	addwfc	(btemp+20)^0,f,c
 13878  018462  0EE7               	movlw	-25
 13879  018464  006F FF8C  F03F    	movff	plusw1,btemp+21
 13880  01846A  0E00               	movlw	0
 13881  01846C  223F               	addwfc	(btemp+21)^0,f,c
 13882  01846E  0EE8               	movlw	-24
 13883  018470  006F FF8C  F040    	movff	plusw1,btemp+22
 13884  018476  0E00               	movlw	0
 13885  018478  2240               	addwfc	(btemp+22)^0,f,c
 13886  01847A  0EE9               	movlw	-23
 13887  01847C  006F FF8C  F041    	movff	plusw1,btemp+23
 13888  018482  0E00               	movlw	0
 13889  018484  2241               	addwfc	(btemp+23)^0,f,c
 13890  018486  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 13891  01848C  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 13892  018492  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 13893  018498  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 13894  01849E  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 13895  0184A4  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 13896  0184AA  0060  F103  FFE6   	movff	btemp+22,postinc1
 13897  0184B0  0060  F107  FFE6   	movff	btemp+23,postinc1
 13898  0184B6  ECF0  F0E7         	call	___aomod	;wreg free
 13899  0184BA  52E5               	movf	postdec1,f,c
 13900  0184BC  006F FF9C  F041    	movff	indf1,btemp+23
 13901  0184C2  52E5               	movf	postdec1,f,c
 13902  0184C4  006F FF9C  F040    	movff	indf1,btemp+22
 13903  0184CA  52E5               	movf	postdec1,f,c
 13904  0184CC  006F FF9C  F03F    	movff	indf1,btemp+21
 13905  0184D2  52E5               	movf	postdec1,f,c
 13906  0184D4  006F FF9C  F03E    	movff	indf1,btemp+20
 13907  0184DA  52E5               	movf	postdec1,f,c
 13908  0184DC  006F FF9C  F03D    	movff	indf1,btemp+19
 13909  0184E2  52E5               	movf	postdec1,f,c
 13910  0184E4  006F FF9C  F03C    	movff	indf1,btemp+18
 13911  0184EA  52E5               	movf	postdec1,f,c
 13912  0184EC  006F FF9C  F03B    	movff	indf1,btemp+17
 13913  0184F2  52E5               	movf	postdec1,f,c
 13914  0184F4  006F FF9C  F03A    	movff	indf1,btemp+16
 13915  0184FA  0EF8               	movlw	248
 13916  0184FC  26E1               	addwf	fsr1l,f,c
 13917  0184FE  0EFF               	movlw	255
 13918  018500  22E2               	addwfc	fsr1h,f,c
 13919  018502  0060  F0E8  F034   	movff	btemp+16,btemp+10
 13920  018508  0060  F0EC  F035   	movff	btemp+17,btemp+11
 13921  01850E  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 13922  018514  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 13923  01851A  0E00               	movlw	0
 13924  01851C  BE2F               	btfsc	(btemp+5)^0,7,c
 13925  01851E  0EFF               	movlw	255
 13926  018520  6E30               	movwf	(btemp+6)^0,c
 13927  018522  6E31               	movwf	(btemp+7)^0,c
 13928  018524  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 13929  01852A  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 13930  018530  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 13931  018536  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 13932  01853C  ECB0  F0F1         	call	___aldiv	;wreg free
 13933  018540  0060  F0A8  F034   	movff	btemp,btemp+10
 13934  018546  0060  F0AC  F035   	movff	btemp+1,btemp+11
 13935                           
 13936                           ;stkvar	_wday @ sp[(-22)+2]
 13937  01854C  0EEC               	movlw	-20
 13938  01854E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13939  018554  0EED               	movlw	-19
 13940  018556  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13941                           
 13942                           ;stkvar	_wday @ sp[(-22)+2]
 13943                           ;stkvar	_d @ sp[(-22)+20]
 13944  01855C  0EFE               	movlw	-2
 13945  01855E  006F FF8C  F034    	movff	plusw1,btemp+10
 13946  018564  0EFF               	movlw	-1
 13947  018566  006F FF8C  F035    	movff	plusw1,btemp+11
 13948  01856C  0EEC               	movlw	-20
 13949  01856E  50E3               	movf	plusw1,w,c
 13950  018570  5E34               	subwf	(btemp+10)^0,f,c
 13951  018572  0EED               	movlw	-19
 13952  018574  50E3               	movf	plusw1,w,c
 13953  018576  5A35               	subwfb	(btemp+11)^0,f,c
 13954                           
 13955                           ;stkvar	_days @ sp[(-22)+0]
 13956  018578  0EEA               	movlw	-22
 13957  01857A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 13958  018580  0EEB               	movlw	-21
 13959  018582  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 13960                           
 13961                           ;stkvar	_days @ sp[(-22)+0]
 13962  018588  0EEB               	movlw	-21
 13963  01858A  AEE3               	btfss	plusw1,7,c
 13964  01858C  D011               	goto	l4030
 13965                           
 13966                           ;stkvar	_days @ sp[(-22)+0]
 13967  01858E  0EEA               	movlw	-22
 13968  018590  50E3               	movf	plusw1,w,c
 13969  018592  0F07               	addlw	7
 13970  018594  6E2A               	movwf	btemp^0,c
 13971  018596  0EEA               	movlw	-22
 13972  018598  0060  F0AB  FFE3   	movff	btemp,plusw1
 13973  01859E  6A2A               	clrf	btemp^0,c
 13974  0185A0  0EEB               	movlw	-21
 13975  0185A2  50E3               	movf	plusw1,w,c
 13976  0185A4  202A               	addwfc	btemp^0,w,c
 13977  0185A6  6E2A               	movwf	btemp^0,c
 13978  0185A8  0EEB               	movlw	-21
 13979  0185AA  0060  F0AB  FFE3   	movff	btemp,plusw1
 13980  0185B0                     l4030:
 13981                           
 13982                           ;stkvar	_n @ sp[(-22)+14]
 13983  0185B0  0EF8               	movlw	-8
 13984  0185B2  006F FF8C  F02A    	movff	plusw1,btemp
 13985  0185B8  0E05               	movlw	5
 13986  0185BA  182A               	xorwf	btemp^0,w,c
 13987  0185BC  E134               	bnz	l16743
 13988  0185BE  0EF9               	movlw	-7
 13989  0185C0  50E3               	movf	plusw1,w,c
 13990  0185C2  A4D8               	btfss	status,2,c
 13991  0185C4  D030               	goto	l16743
 13992                           
 13993                           ;stkvar	_is_leap @ sp[(-22)+12]
 13994  0185C6  0EF6               	movlw	-10
 13995  0185C8  006F FF8F FFE6     	movff	plusw1,postinc1
 13996  0185CE  006F FF8F FFE6     	movff	plusw1,postinc1
 13997                           
 13998                           ;stkvar	_m @ sp[(-24)+18]
 13999  0185D4  0EFA               	movlw	-6
 14000  0185D6  006F FF8F FFE6     	movff	plusw1,postinc1
 14001  0185DC  006F FF8F FFE6     	movff	plusw1,postinc1
 14002  0185E2  EC2F  F00E         	call	_days_in_month	;wreg free
 14003                           
 14004                           ;stkvar	_days @ sp[(-22)+0]
 14005  0185E6  0EEA               	movlw	-22
 14006  0185E8  50E3               	movf	plusw1,w,c
 14007  0185EA  0F1C               	addlw	28
 14008  0185EC  6E34               	movwf	(btemp+10)^0,c
 14009  0185EE  0EEB               	movlw	-21
 14010  0185F0  006F FF8C  F035    	movff	plusw1,btemp+11
 14011  0185F6  0E00               	movlw	0
 14012  0185F8  2235               	addwfc	(btemp+11)^0,f,c
 14013  0185FA  502A               	movf	btemp^0,w,c
 14014  0185FC  5C34               	subwf	(btemp+10)^0,w,c
 14015  0185FE  5035               	movf	(btemp+11)^0,w,c
 14016  018600  0A80               	xorlw	128
 14017  018602  6E2C               	movwf	(btemp+2)^0,c
 14018  018604  502B               	movf	(btemp+1)^0,w,c
 14019  018606  0A80               	xorlw	128
 14020  018608  582C               	subwfb	(btemp+2)^0,w,c
 14021  01860A  A0D8               	btfss	status,0,c
 14022  01860C  D00C               	goto	l16743
 14023  01860E  0E04               	movlw	4
 14024  018610  6E34               	movwf	(btemp+10)^0,c
 14025  018612  0E00               	movlw	0
 14026  018614  6E35               	movwf	(btemp+11)^0,c
 14027                           
 14028                           ;stkvar	_n @ sp[(-22)+14]
 14029  018616  0EF8               	movlw	-8
 14030  018618  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14031  01861E  0EF9               	movlw	-7
 14032  018620  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14033  018626                     l16743:
 14034  018626  0E80               	movlw	128
 14035  018628  6EE6               	movwf	postinc1,c
 14036  01862A  0E51               	movlw	81
 14037  01862C  6EE6               	movwf	postinc1,c
 14038  01862E  0E01               	movlw	1
 14039  018630  6EE6               	movwf	postinc1,c
 14040  018632  0E00               	movlw	0
 14041  018634  6EE6               	movwf	postinc1,c
 14042                           
 14043                           ;stkvar	_days @ sp[(-26)+0]
 14044                           ;stkvar	_n @ sp[(-26)+14]
 14045  018636  0EF4               	movlw	-12
 14046  018638  006F FF8C  F034    	movff	plusw1,btemp+10
 14047  01863E  0EF5               	movlw	-11
 14048  018640  006F FF8C  F035    	movff	plusw1,btemp+11
 14049  018646  0E07               	movlw	7
 14050  018648  0234               	mulwf	(btemp+10)^0,c
 14051  01864A  006F FFCC  F032    	movff	prodl,btemp+8
 14052  018650  006F FFD0  F033    	movff	prodh,btemp+9
 14053  018656  0235               	mulwf	(btemp+11)^0,c
 14054  018658  50F3               	movf	prodl,w,c
 14055  01865A  2633               	addwf	(btemp+9)^0,f,c
 14056  01865C  0EE6               	movlw	-26
 14057  01865E  50E3               	movf	plusw1,w,c
 14058  018660  2632               	addwf	(btemp+8)^0,f,c
 14059  018662  0EE7               	movlw	-25
 14060  018664  50E3               	movf	plusw1,w,c
 14061  018666  2233               	addwfc	(btemp+9)^0,f,c
 14062  018668  0EF9               	movlw	249
 14063  01866A  2432               	addwf	(btemp+8)^0,w,c
 14064  01866C  6E2E               	movwf	(btemp+4)^0,c
 14065  01866E  0EFF               	movlw	255
 14066  018670  2033               	addwfc	(btemp+9)^0,w,c
 14067  018672  6E2F               	movwf	(btemp+5)^0,c
 14068  018674  6A30               	clrf	(btemp+6)^0,c
 14069  018676  BE2F               	btfsc	(btemp+5)^0,7,c
 14070  018678  0630               	decf	(btemp+6)^0,f,c
 14071  01867A  5030               	movf	(btemp+6)^0,w,c
 14072  01867C  6E31               	movwf	(btemp+7)^0,c
 14073  01867E  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 14074  018684  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 14075  01868A  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 14076  018690  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 14077  018696  ECB6  F003         	call	___lmul	;wreg free
 14078  01869A                     L10:
 14079  01869A  0060  F0A8  F03A   	movff	btemp,btemp+16
 14080  0186A0  0060  F0AC  F03B   	movff	btemp+1,btemp+17
 14081  0186A6  0060  F0B0  F03C   	movff	btemp+2,btemp+18
 14082  0186AC  0060  F0B4  F03D   	movff	btemp+3,btemp+19
 14083  0186B2  6A3E               	clrf	(btemp+20)^0,c
 14084  0186B4  BE3D               	btfsc	(btemp+19)^0,7,c
 14085  0186B6  683E               	setf	(btemp+20)^0,c
 14086  0186B8  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 14087  0186BE  0060  F0F8  F040   	movff	btemp+20,btemp+22
 14088  0186C4  0060  F0F8  F041   	movff	btemp+20,btemp+23
 14089                           
 14090                           ;stkvar	_t @ sp[(-22)+4]
 14091  0186CA  50E1               	movf	fsr1l,w,c
 14092  0186CC  0FEE               	addlw	-18
 14093  0186CE  6ED9               	movwf	fsr2l,c
 14094  0186D0  50E2               	movf	fsr1h,w,c
 14095  0186D2  6EDA               	movwf	fsr2h,c
 14096  0186D4  0EFF               	movlw	255
 14097  0186D6  22DA               	addwfc	fsr2h,f,c
 14098  0186D8  503A               	movf	(btemp+16)^0,w,c
 14099  0186DA  26DE               	addwf	postinc2,f,c
 14100  0186DC  503B               	movf	(btemp+17)^0,w,c
 14101  0186DE  22DE               	addwfc	postinc2,f,c
 14102  0186E0  503C               	movf	(btemp+18)^0,w,c
 14103  0186E2  22DE               	addwfc	postinc2,f,c
 14104  0186E4  503D               	movf	(btemp+19)^0,w,c
 14105  0186E6  22DE               	addwfc	postinc2,f,c
 14106  0186E8  503E               	movf	(btemp+20)^0,w,c
 14107  0186EA  22DE               	addwfc	postinc2,f,c
 14108  0186EC  503F               	movf	(btemp+21)^0,w,c
 14109  0186EE  22DE               	addwfc	postinc2,f,c
 14110  0186F0  5040               	movf	(btemp+22)^0,w,c
 14111  0186F2  22DE               	addwfc	postinc2,f,c
 14112  0186F4  5041               	movf	(btemp+23)^0,w,c
 14113  0186F6  22DE               	addwfc	postinc2,f,c
 14114                           
 14115                           ;stkvar	_rule @ sp[(-22)+-6]
 14116  0186F8  0EE4               	movlw	-28
 14117  0186FA  006F FF8C  F034    	movff	plusw1,btemp+10
 14118  018700  0EE5               	movlw	-27
 14119  018702  006F FF8C  F035    	movff	plusw1,btemp+11
 14120  018708  0E08               	movlw	8
 14121  01870A  2434               	addwf	(btemp+10)^0,w,c
 14122  01870C  6ED9               	movwf	fsr2l,c
 14123  01870E  0E00               	movlw	0
 14124  018710  2035               	addwfc	(btemp+11)^0,w,c
 14125  018712  6EDA               	movwf	fsr2h,c
 14126  018714  006F FF78  F034    	movff	postinc2,btemp+10
 14127  01871A  006F FF74  F035    	movff	postdec2,btemp+11
 14128                           
 14129                           ;stkvar	_t @ sp[(-22)+4]
 14130  018720  50E1               	movf	fsr1l,w,c
 14131  018722  0FEE               	addlw	-18
 14132  018724  6ED9               	movwf	fsr2l,c
 14133  018726  50E2               	movf	fsr1h,w,c
 14134  018728  6EDA               	movwf	fsr2h,c
 14135  01872A  0EFF               	movlw	255
 14136  01872C  22DA               	addwfc	fsr2h,f,c
 14137  01872E  5034               	movf	(btemp+10)^0,w,c
 14138  018730  26DE               	addwf	postinc2,f,c
 14139  018732  5035               	movf	(btemp+11)^0,w,c
 14140  018734  22DE               	addwfc	postinc2,f,c
 14141  018736  0E00               	movlw	0
 14142  018738  BE35               	btfsc	(btemp+11)^0,7,c
 14143  01873A  0EFF               	movlw	255
 14144  01873C  22DE               	addwfc	postinc2,f,c
 14145  01873E  22DE               	addwfc	postinc2,f,c
 14146  018740  22DE               	addwfc	postinc2,f,c
 14147  018742  22DE               	addwfc	postinc2,f,c
 14148  018744  22DE               	addwfc	postinc2,f,c
 14149  018746  22DE               	addwfc	postinc2,f,c
 14150                           
 14151                           ;stkvar	_t @ sp[(-22)+4]
 14152  018748  0EEE               	movlw	238
 14153  01874A  24E1               	addwf	fsr1l,w,c
 14154  01874C  6ED9               	movwf	fsr2l,c
 14155  01874E  0EFF               	movlw	255
 14156  018750  20E2               	addwfc	fsr1h,w,c
 14157  018752  6EDA               	movwf	fsr2h,c
 14158                           
 14159                           ;stkvar	?_rule_to_secs @ sp[(-22)+-8]
 14160  018754  0E08               	movlw	8
 14161  018756  6E2A               	movwf	btemp^0,c
 14162  018758  0EE2               	movlw	-30
 14163  01875A                     us1630999:
 14164  01875A  006F FF7B FFE3     	movff	postinc2,plusw1
 14165  018760  28E8               	incf	wreg,w,c
 14166  018762  2E2A               	decfsz	btemp^0,f,c
 14167  018764  D7FA               	bra	us1630999
 14168                           
 14169                           ; _rule_to_secs: autosize = 22, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8,
      +                           argsize = 8, vargsize = 0
 14170  018766  0EEA               	movlw	234
 14171  018768  26E1               	addwf	fsr1l,f,c
 14172  01876A  0EFF               	movlw	255
 14173  01876C  22E2               	addwfc	fsr1h,f,c
 14174  01876E  0012               	return		;funcret
 14175  018770                     __end_of_rule_to_secs:
 14176                           	opt callstack 0
 14177                           
 14178 ;; *************** function _days_in_month *****************
 14179 ;; Defined at:
 14180 ;;		line 210 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 14181 ;; Parameters:    Size  Location     Type
 14182 ;;  m               2  [STACK] int 
 14183 ;;  is_leap         2  [STACK] int 
 14184 ;; Auto vars:     Size  Location     Type
 14185 ;;		None
 14186 ;; Return value:  Size  Location     Type
 14187 ;;                  2  [STACK] int 
 14188 ;; Registers used:
 14189 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 14190 ;; Tracked objects:
 14191 ;;		On entry : 0/0
 14192 ;;		On exit  : 0/0
 14193 ;;		Unchanged: 0/0
 14194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14199 ;;Total ram usage:        0 bytes
 14200 ;; Hardware stack levels used:    1
 14201 ;; Hardware stack levels required when called:   15
 14202 ;; This function calls:
 14203 ;;		Nothing
 14204 ;; This function is called by:
 14205 ;;		_rule_to_secs
 14206 ;; This function uses a reentrant model
 14207 ;;
 14208                           
 14209                           	psect	text41
 14210  001C5E                     __ptext41:
 14211                           	opt callstack 0
 14212  001C5E                     _days_in_month:
 14213                           	opt callstack 11
 14214                           
 14215                           ;stkvar	_m @ sp[(0)+-2]
 14216                           
 14217                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14218                           ;incstack = 0
 14219  001C5E  0EFE               	movlw	-2
 14220  001C60  006F FF8C  F02A    	movff	plusw1,btemp
 14221  001C66  0E02               	movlw	2
 14222  001C68  182A               	xorwf	btemp^0,w,c
 14223  001C6A  E10D               	bnz	l11721
 14224  001C6C  0EFF               	movlw	-1
 14225  001C6E  50E3               	movf	plusw1,w,c
 14226  001C70  A4D8               	btfss	status,2,c
 14227  001C72  D009               	goto	l11721
 14228                           
 14229                           ;stkvar	_is_leap @ sp[(0)+-4]
 14230  001C74  0EFC               	movlw	-4
 14231  001C76  50E3               	movf	plusw1,w,c
 14232  001C78  0F1C               	addlw	28
 14233  001C7A  6E2A               	movwf	btemp^0,c
 14234  001C7C  0EFD               	movlw	-3
 14235  001C7E  006F FF8C  F02B    	movff	plusw1,btemp+1
 14236  001C84  D017               	goto	L11
 14237  001C86                     l11721:
 14238  001C86  0EFF               	movlw	255
 14239  001C88  6E35               	movwf	(btemp+11)^0,c
 14240                           
 14241                           ;stkvar	_m @ sp[(0)+-2]
 14242  001C8A  0EFE               	movlw	-2
 14243  001C8C  50E3               	movf	plusw1,w,c
 14244  001C8E  2435               	addwf	(btemp+11)^0,w,c
 14245  001C90  6E34               	movwf	(btemp+10)^0,c
 14246  001C92  0ED5               	movlw	213
 14247  001C94  6E2A               	movwf	btemp^0,c
 14248  001C96  0E0A               	movlw	10
 14249  001C98  6E2B               	movwf	(btemp+1)^0,c
 14250  001C9A  2A34               	incf	(btemp+10)^0,f,c
 14251  001C9C  D003               	goto	u10804
 14252  001C9E                     u10805:
 14253  001C9E  342B               	rlcf	(btemp+1)^0,w,c
 14254  001CA0  322B               	rrcf	(btemp+1)^0,f,c
 14255  001CA2  322A               	rrcf	btemp^0,f,c
 14256  001CA4                     u10804:
 14257  001CA4  2E34               	decfsz	(btemp+10)^0,f,c
 14258  001CA6  D7FB               	goto	u10805
 14259  001CA8  0E01               	movlw	1
 14260  001CAA  162A               	andwf	btemp^0,f,c
 14261  001CAC  0E00               	movlw	0
 14262  001CAE  162B               	andwf	(btemp+1)^0,f,c
 14263  001CB0  0E1E               	movlw	30
 14264  001CB2  262A               	addwf	btemp^0,f,c
 14265  001CB4                     L11:
 14266  001CB4  0E00               	movlw	0
 14267  001CB6  222B               	addwfc	(btemp+1)^0,f,c
 14268                           
 14269                           ; _days_in_month: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 14270  001CB8  52E5               	movf	postdec1,f,c
 14271  001CBA  52E5               	movf	postdec1,f,c
 14272  001CBC  52E5               	movf	postdec1,f,c
 14273  001CBE  52E5               	movf	postdec1,f,c
 14274  001CC0  0012               	return		;funcret
 14275  001CC2                     __end_of_days_in_month:
 14276                           	opt callstack 0
 14277                           
 14278 ;; *************** function ___year_to_secs *****************
 14279 ;; Defined at:
 14280 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__year_to_secs.c"
 14281 ;; Parameters:    Size  Location     Type
 14282 ;;  year            8  [STACK] long long 
 14283 ;;  is_leap         2  [STACK] PTR int 
 14284 ;;		 -> F5(2), is_leap(2), NULL(0), 
 14285 ;; Auto vars:     Size  Location     Type
 14286 ;;  y               2  [STACK] int 
 14287 ;;  leaps           2  [STACK] int 
 14288 ;;  rem             2  [STACK] int 
 14289 ;;  5               2  [STACK] int 
 14290 ;;  centuries       2  [STACK] int 
 14291 ;;  leaps           2  [STACK] int 
 14292 ;;  cycles          2  [STACK] int 
 14293 ;; Return value:  Size  Location     Type
 14294 ;;                  8  [STACK] long long 
 14295 ;; Registers used:
 14296 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, prodl, prodh
 14297 ;; Tracked objects:
 14298 ;;		On entry : 0/0
 14299 ;;		On exit  : 0/0
 14300 ;;		Unchanged: 0/0
 14301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14306 ;;Total ram usage:        0 bytes
 14307 ;; Hardware stack levels used:    1
 14308 ;; Hardware stack levels required when called:   16
 14309 ;; This function calls:
 14310 ;;		___aodiv
 14311 ;;		___aomod
 14312 ;;		___lmul
 14313 ;;		___omul
 14314 ;; This function is called by:
 14315 ;;		_rule_to_secs
 14316 ;;		___secs_to_zone
 14317 ;; This function uses a reentrant model
 14318 ;;
 14319                           
 14320                           	psect	text42
 14321  015EBA                     __ptext42:
 14322                           	opt callstack 0
 14323  015EBA                     ___year_to_secs:
 14324                           	opt callstack 0
 14325                           
 14326                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 14327  015EBA  0E0E               	movlw	14
 14328  015EBC  26E1               	addwf	fsr1l,f,c
 14329  015EBE  0E00               	movlw	0
 14330  015EC0  22E2               	addwfc	fsr1h,f,c
 14331                           
 14332                           ;stkvar	_year @ sp[(-14)+-8]
 14333                           
 14334                           ;incstack = 0
 14335  015EC2  0EEA               	movlw	-22
 14336  015EC4  50E3               	movf	plusw1,w,c
 14337  015EC6  0FFE               	addlw	254
 14338  015EC8  6E3A               	movwf	(btemp+16)^0,c
 14339  015ECA  0EEB               	movlw	-21
 14340  015ECC  006F FF8C  F03B    	movff	plusw1,btemp+17
 14341  015ED2  0EFF               	movlw	255
 14342  015ED4  223B               	addwfc	(btemp+17)^0,f,c
 14343  015ED6  0EEC               	movlw	-20
 14344  015ED8  006F FF8C  F03C    	movff	plusw1,btemp+18
 14345  015EDE  0EFF               	movlw	255
 14346  015EE0  223C               	addwfc	(btemp+18)^0,f,c
 14347  015EE2  0EED               	movlw	-19
 14348  015EE4  006F FF8C  F03D    	movff	plusw1,btemp+19
 14349  015EEA  0EFF               	movlw	255
 14350  015EEC  223D               	addwfc	(btemp+19)^0,f,c
 14351  015EEE  0EEE               	movlw	-18
 14352  015EF0  006F FF8C  F03E    	movff	plusw1,btemp+20
 14353  015EF6  0EFF               	movlw	255
 14354  015EF8  223E               	addwfc	(btemp+20)^0,f,c
 14355  015EFA  0EEF               	movlw	-17
 14356  015EFC  006F FF8C  F03F    	movff	plusw1,btemp+21
 14357  015F02  0EFF               	movlw	255
 14358  015F04  223F               	addwfc	(btemp+21)^0,f,c
 14359  015F06  0EF0               	movlw	-16
 14360  015F08  006F FF8C  F040    	movff	plusw1,btemp+22
 14361  015F0E  0EFF               	movlw	255
 14362  015F10  2240               	addwfc	(btemp+22)^0,f,c
 14363  015F12  0EF1               	movlw	-15
 14364  015F14  006F FF8C  F041    	movff	plusw1,btemp+23
 14365  015F1A  0EFF               	movlw	255
 14366  015F1C  2241               	addwfc	(btemp+23)^0,f,c
 14367  015F1E  5041               	movf	(btemp+23)^0,w,c
 14368  015F20  1040               	iorwf	(btemp+22)^0,w,c
 14369  015F22  103F               	iorwf	(btemp+21)^0,w,c
 14370  015F24  103E               	iorwf	(btemp+20)^0,w,c
 14371  015F26  103D               	iorwf	(btemp+19)^0,w,c
 14372  015F28  103C               	iorwf	(btemp+18)^0,w,c
 14373  015F2A  103B               	iorwf	(btemp+17)^0,w,c
 14374  015F2C  E103               	bnz	u10811
 14375  015F2E  0E89               	movlw	137
 14376  015F30  5C3A               	subwf	(btemp+16)^0,w,c
 14377  015F32  B0D8               	btfsc	status,0,c
 14378  015F34                     u10811:
 14379  015F34  D0E7               	goto	l11747
 14380                           
 14381                           ;stkvar	_year @ sp[(-14)+-8]
 14382                           ;stkvar	_y @ sp[(-14)+0]
 14383  015F36  0EEA               	movlw	-22
 14384  015F38  006F FF8C  F02A    	movff	plusw1,btemp
 14385  015F3E  0EF2               	movlw	-14
 14386  015F40  0060  F0AB  FFE3   	movff	btemp,plusw1
 14387  015F46  0EEB               	movlw	-21
 14388  015F48  006F FF8C  F02A    	movff	plusw1,btemp
 14389  015F4E  0EF3               	movlw	-13
 14390  015F50  0060  F0AB  FFE3   	movff	btemp,plusw1
 14391                           
 14392                           ;stkvar	_y @ sp[(-14)+0]
 14393  015F56  0EF2               	movlw	-14
 14394  015F58  50E3               	movf	plusw1,w,c
 14395  015F5A  0FBC               	addlw	188
 14396  015F5C  6E34               	movwf	(btemp+10)^0,c
 14397  015F5E  0EF3               	movlw	-13
 14398  015F60  006F FF8C  F035    	movff	plusw1,btemp+11
 14399  015F66  0EFF               	movlw	255
 14400  015F68  2235               	addwfc	(btemp+11)^0,f,c
 14401  015F6A  3435               	rlcf	(btemp+11)^0,w,c
 14402  015F6C  3235               	rrcf	(btemp+11)^0,f,c
 14403  015F6E  3234               	rrcf	(btemp+10)^0,f,c
 14404  015F70  3435               	rlcf	(btemp+11)^0,w,c
 14405  015F72  3235               	rrcf	(btemp+11)^0,f,c
 14406  015F74  3234               	rrcf	(btemp+10)^0,f,c
 14407                           
 14408                           ;stkvar	_leaps @ sp[(-14)+2]
 14409  015F76  0EF4               	movlw	-12
 14410  015F78  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14411  015F7E  0EF5               	movlw	-11
 14412  015F80  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14413  015F86  0EBC               	movlw	188
 14414  015F88  6E35               	movwf	(btemp+11)^0,c
 14415                           
 14416                           ;stkvar	_y @ sp[(-14)+0]
 14417  015F8A  0EF2               	movlw	-14
 14418  015F8C  50E3               	movf	plusw1,w,c
 14419  015F8E  2435               	addwf	(btemp+11)^0,w,c
 14420  015F90  6E34               	movwf	(btemp+10)^0,c
 14421  015F92  0E03               	movlw	3
 14422  015F94  1634               	andwf	(btemp+10)^0,f,c
 14423  015F96  A4D8               	btfss	status,2,c
 14424  015F98  D01D               	goto	l11739
 14425                           
 14426                           ;stkvar	_leaps @ sp[(-14)+2]
 14427  015F9A  50E1               	movf	fsr1l,w,c
 14428  015F9C  0FF4               	addlw	-12
 14429  015F9E  6ED9               	movwf	fsr2l,c
 14430  015FA0  50E2               	movf	fsr1h,w,c
 14431  015FA2  6EDA               	movwf	fsr2h,c
 14432  015FA4  0EFF               	movlw	255
 14433  015FA6  22DA               	addwfc	fsr2h,f,c
 14434  015FA8  06DE               	decf	postinc2,f,c
 14435  015FAA  0E00               	movlw	0
 14436  015FAC  5ADD               	subwfb	postdec2,f,c
 14437                           
 14438                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14439  015FAE  0EE8               	movlw	-24
 14440  015FB0  006F FF8C  F02A    	movff	plusw1,btemp
 14441  015FB6  0EE9               	movlw	-23
 14442  015FB8  50E3               	movf	plusw1,w,c
 14443  015FBA  102A               	iorwf	btemp^0,w,c
 14444  015FBC  B4D8               	btfsc	status,2,c
 14445  015FBE  D01F               	goto	l11743
 14446                           
 14447                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14448  015FC0  0EE8               	movlw	-24
 14449  015FC2  006F FF8F FFD9     	movff	plusw1,fsr2l
 14450  015FC8  0EE9               	movlw	-23
 14451  015FCA  006F FF8F FFDA     	movff	plusw1,fsr2h
 14452  015FD0  0E01               	movlw	1
 14453  015FD2  D012               	goto	L12
 14454  015FD4                     l11739:
 14455                           
 14456                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14457  015FD4  0EE8               	movlw	-24
 14458  015FD6  006F FF8C  F02A    	movff	plusw1,btemp
 14459  015FDC  0EE9               	movlw	-23
 14460  015FDE  50E3               	movf	plusw1,w,c
 14461  015FE0  102A               	iorwf	btemp^0,w,c
 14462  015FE2  B4D8               	btfsc	status,2,c
 14463  015FE4  D00C               	goto	l11743
 14464                           
 14465                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14466  015FE6  0EE8               	movlw	-24
 14467  015FE8  006F FF8F FFD9     	movff	plusw1,fsr2l
 14468  015FEE  0EE9               	movlw	-23
 14469  015FF0  006F FF8F FFDA     	movff	plusw1,fsr2h
 14470  015FF6  0E00               	movlw	0
 14471  015FF8                     L12:
 14472  015FF8  6EDE               	movwf	postinc2,c
 14473  015FFA  0E00               	movlw	0
 14474  015FFC  6EDD               	movwf	postdec2,c
 14475  015FFE                     l11743:
 14476  015FFE  0E80               	movlw	128
 14477  016000  6EE6               	movwf	postinc1,c
 14478  016002  0E33               	movlw	51
 14479  016004  6EE6               	movwf	postinc1,c
 14480  016006  0EE1               	movlw	225
 14481  016008  6EE6               	movwf	postinc1,c
 14482  01600A  0E01               	movlw	1
 14483  01600C  6EE6               	movwf	postinc1,c
 14484                           
 14485                           ;stkvar	_y @ sp[(-18)+0]
 14486  01600E  0EEE               	movlw	-18
 14487  016010  006F FF8C  F034    	movff	plusw1,btemp+10
 14488  016016  0EEF               	movlw	-17
 14489  016018  006F FF8C  F035    	movff	plusw1,btemp+11
 14490  01601E  0EBA               	movlw	186
 14491  016020  2434               	addwf	(btemp+10)^0,w,c
 14492  016022  6E2E               	movwf	(btemp+4)^0,c
 14493  016024  0EFF               	movlw	255
 14494  016026  2035               	addwfc	(btemp+11)^0,w,c
 14495  016028  6E2F               	movwf	(btemp+5)^0,c
 14496  01602A  6A30               	clrf	(btemp+6)^0,c
 14497  01602C  BE2F               	btfsc	(btemp+5)^0,7,c
 14498  01602E  0630               	decf	(btemp+6)^0,f,c
 14499  016030  5030               	movf	(btemp+6)^0,w,c
 14500  016032  6E31               	movwf	(btemp+7)^0,c
 14501  016034  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 14502  01603A  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 14503  016040  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 14504  016046  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 14505  01604C  ECB6  F003         	call	___lmul	;wreg free
 14506  016050  0060  F0A8  F032   	movff	btemp,btemp+8
 14507  016056  0060  F0AC  F033   	movff	btemp+1,btemp+9
 14508  01605C  0060  F0B0  F034   	movff	btemp+2,btemp+10
 14509  016062  0060  F0B4  F035   	movff	btemp+3,btemp+11
 14510  016068  0E80               	movlw	128
 14511  01606A  6EE6               	movwf	postinc1,c
 14512  01606C  0E51               	movlw	81
 14513  01606E  6EE6               	movwf	postinc1,c
 14514  016070  0E01               	movlw	1
 14515  016072  6EE6               	movwf	postinc1,c
 14516  016074  0E00               	movlw	0
 14517  016076  6EE6               	movwf	postinc1,c
 14518                           
 14519                           ;stkvar	_leaps @ sp[(-18)+2]
 14520  016078  0EF0               	movlw	-16
 14521  01607A  006F FF8C  F030    	movff	plusw1,btemp+6
 14522  016080  0EF1               	movlw	-15
 14523  016082  006F FF8C  F031    	movff	plusw1,btemp+7
 14524  016088  0060  F0C0  F02A   	movff	btemp+6,btemp
 14525  01608E  0060  F0C4  F02B   	movff	btemp+7,btemp+1
 14526  016094  0E00               	movlw	0
 14527  016096  BE2B               	btfsc	(btemp+1)^0,7,c
 14528  016098  0EFF               	movlw	255
 14529  01609A  6E2C               	movwf	(btemp+2)^0,c
 14530  01609C  6E2D               	movwf	(btemp+3)^0,c
 14531  01609E  0060  F0AB  FFE6   	movff	btemp,postinc1
 14532  0160A4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 14533  0160AA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 14534  0160B0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 14535  0160B6  ECB6  F003         	call	___lmul	;wreg free
 14536  0160BA  502A               	movf	btemp^0,w,c
 14537  0160BC  2432               	addwf	(btemp+8)^0,w,c
 14538  0160BE  6E2E               	movwf	(btemp+4)^0,c
 14539  0160C0  502B               	movf	(btemp+1)^0,w,c
 14540  0160C2  2033               	addwfc	(btemp+9)^0,w,c
 14541  0160C4  6E2F               	movwf	(btemp+5)^0,c
 14542  0160C6  502C               	movf	(btemp+2)^0,w,c
 14543  0160C8  2034               	addwfc	(btemp+10)^0,w,c
 14544  0160CA  6E30               	movwf	(btemp+6)^0,c
 14545  0160CC  502D               	movf	(btemp+3)^0,w,c
 14546  0160CE  2035               	addwfc	(btemp+11)^0,w,c
 14547  0160D0  6E31               	movwf	(btemp+7)^0,c
 14548  0160D2  0060  F0B8  F03A   	movff	btemp+4,btemp+16
 14549  0160D8  0060  F0BC  F03B   	movff	btemp+5,btemp+17
 14550  0160DE  0060  F0C0  F03C   	movff	btemp+6,btemp+18
 14551  0160E4  0060  F0C4  F03D   	movff	btemp+7,btemp+19
 14552  0160EA  6A3E               	clrf	(btemp+20)^0,c
 14553  0160EC  BE3D               	btfsc	(btemp+19)^0,7,c
 14554  0160EE  683E               	setf	(btemp+20)^0,c
 14555  0160F0  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 14556  0160F6  0060  F0F8  F040   	movff	btemp+20,btemp+22
 14557  0160FC  0060  F0F8  F041   	movff	btemp+20,btemp+23
 14558  016102  D36F               	goto	L13
 14559  016104                     l11747:
 14560                           
 14561                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14562  016104  0EE8               	movlw	-24
 14563  016106  006F FF8C  F02A    	movff	plusw1,btemp
 14564  01610C  0EE9               	movlw	-23
 14565  01610E  50E3               	movf	plusw1,w,c
 14566  016110  102A               	iorwf	btemp^0,w,c
 14567  016112  A4D8               	btfss	status,2,c
 14568  016114  D012               	goto	l11753
 14569                           
 14570                           ;stkvar	F5 @ sp[(-14)+6]
 14571  016116  0EF8               	movlw	-8
 14572  016118  6AE3               	clrf	plusw1,c
 14573  01611A  0EF9               	movlw	-7
 14574  01611C  6AE3               	clrf	plusw1,c
 14575                           
 14576                           ;stkvar	F5 @ sp[(-14)+6]
 14577  01611E  0EF8               	movlw	248
 14578  016120  24E1               	addwf	fsr1l,w,c
 14579  016122  6E34               	movwf	(btemp+10)^0,c
 14580  016124  0EFF               	movlw	255
 14581  016126  20E2               	addwfc	fsr1h,w,c
 14582  016128  6E35               	movwf	(btemp+11)^0,c
 14583                           
 14584                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14585  01612A  0EE9               	movlw	-23
 14586  01612C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14587  016132  0EE8               	movlw	-24
 14588  016134  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14589  01613A                     l11753:
 14590  01613A  0E90               	movlw	144
 14591  01613C  6EE6               	movwf	postinc1,c
 14592  01613E  0E01               	movlw	1
 14593  016140  6EE6               	movwf	postinc1,c
 14594  016142  0E00               	movlw	0
 14595  016144  6EE6               	movwf	postinc1,c
 14596  016146  0E00               	movlw	0
 14597  016148  6EE6               	movwf	postinc1,c
 14598  01614A  0E00               	movlw	0
 14599  01614C  6EE6               	movwf	postinc1,c
 14600  01614E  0E00               	movlw	0
 14601  016150  6EE6               	movwf	postinc1,c
 14602  016152  0E00               	movlw	0
 14603  016154  6EE6               	movwf	postinc1,c
 14604  016156  0E00               	movlw	0
 14605  016158  6EE6               	movwf	postinc1,c
 14606                           
 14607                           ;stkvar	_year @ sp[(-22)+-8]
 14608  01615A  0EE2               	movlw	-30
 14609  01615C  50E3               	movf	plusw1,w,c
 14610  01615E  0F9C               	addlw	156
 14611  016160  6E3A               	movwf	(btemp+16)^0,c
 14612  016162  0EE3               	movlw	-29
 14613  016164  006F FF8C  F03B    	movff	plusw1,btemp+17
 14614  01616A  0EFF               	movlw	255
 14615  01616C  223B               	addwfc	(btemp+17)^0,f,c
 14616  01616E  0EE4               	movlw	-28
 14617  016170  006F FF8C  F03C    	movff	plusw1,btemp+18
 14618  016176  0EFF               	movlw	255
 14619  016178  223C               	addwfc	(btemp+18)^0,f,c
 14620  01617A  0EE5               	movlw	-27
 14621  01617C  006F FF8C  F03D    	movff	plusw1,btemp+19
 14622  016182  0EFF               	movlw	255
 14623  016184  223D               	addwfc	(btemp+19)^0,f,c
 14624  016186  0EE6               	movlw	-26
 14625  016188  006F FF8C  F03E    	movff	plusw1,btemp+20
 14626  01618E  0EFF               	movlw	255
 14627  016190  223E               	addwfc	(btemp+20)^0,f,c
 14628  016192  0EE7               	movlw	-25
 14629  016194  006F FF8C  F03F    	movff	plusw1,btemp+21
 14630  01619A  0EFF               	movlw	255
 14631  01619C  223F               	addwfc	(btemp+21)^0,f,c
 14632  01619E  0EE8               	movlw	-24
 14633  0161A0  006F FF8C  F040    	movff	plusw1,btemp+22
 14634  0161A6  0EFF               	movlw	255
 14635  0161A8  2240               	addwfc	(btemp+22)^0,f,c
 14636  0161AA  0EE9               	movlw	-23
 14637  0161AC  006F FF8C  F041    	movff	plusw1,btemp+23
 14638  0161B2  0EFF               	movlw	255
 14639  0161B4  2241               	addwfc	(btemp+23)^0,f,c
 14640  0161B6  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 14641  0161BC  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 14642  0161C2  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 14643  0161C8  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 14644  0161CE  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 14645  0161D4  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 14646  0161DA  0060  F103  FFE6   	movff	btemp+22,postinc1
 14647  0161E0  0060  F107  FFE6   	movff	btemp+23,postinc1
 14648  0161E6  EC04  F0E2         	call	___aodiv	;wreg free
 14649  0161EA  52E5               	movf	postdec1,f,c
 14650  0161EC  006F FF9C  F041    	movff	indf1,btemp+23
 14651  0161F2  52E5               	movf	postdec1,f,c
 14652  0161F4  006F FF9C  F040    	movff	indf1,btemp+22
 14653  0161FA  52E5               	movf	postdec1,f,c
 14654  0161FC  006F FF9C  F03F    	movff	indf1,btemp+21
 14655  016202  52E5               	movf	postdec1,f,c
 14656  016204  006F FF9C  F03E    	movff	indf1,btemp+20
 14657  01620A  52E5               	movf	postdec1,f,c
 14658  01620C  006F FF9C  F03D    	movff	indf1,btemp+19
 14659  016212  52E5               	movf	postdec1,f,c
 14660  016214  006F FF9C  F03C    	movff	indf1,btemp+18
 14661  01621A  52E5               	movf	postdec1,f,c
 14662  01621C  006F FF9C  F03B    	movff	indf1,btemp+17
 14663  016222  52E5               	movf	postdec1,f,c
 14664  016224  006F FF9C  F03A    	movff	indf1,btemp+16
 14665  01622A  0EF8               	movlw	248
 14666  01622C  26E1               	addwf	fsr1l,f,c
 14667  01622E  0EFF               	movlw	255
 14668  016230  22E2               	addwfc	fsr1h,f,c
 14669  016232  0060  F0E8  F034   	movff	btemp+16,btemp+10
 14670  016238  0060  F0EC  F035   	movff	btemp+17,btemp+11
 14671                           
 14672                           ;stkvar	_cycles @ sp[(-14)+12]
 14673  01623E  0EFE               	movlw	-2
 14674  016240  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14675  016246  0EFF               	movlw	-1
 14676  016248  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14677  01624E  0E90               	movlw	144
 14678  016250  6EE6               	movwf	postinc1,c
 14679  016252  0E01               	movlw	1
 14680  016254  6EE6               	movwf	postinc1,c
 14681  016256  0E00               	movlw	0
 14682  016258  6EE6               	movwf	postinc1,c
 14683  01625A  0E00               	movlw	0
 14684  01625C  6EE6               	movwf	postinc1,c
 14685  01625E  0E00               	movlw	0
 14686  016260  6EE6               	movwf	postinc1,c
 14687  016262  0E00               	movlw	0
 14688  016264  6EE6               	movwf	postinc1,c
 14689  016266  0E00               	movlw	0
 14690  016268  6EE6               	movwf	postinc1,c
 14691  01626A  0E00               	movlw	0
 14692  01626C  6EE6               	movwf	postinc1,c
 14693                           
 14694                           ;stkvar	_year @ sp[(-22)+-8]
 14695  01626E  0EE2               	movlw	-30
 14696  016270  50E3               	movf	plusw1,w,c
 14697  016272  0F9C               	addlw	156
 14698  016274  6E3A               	movwf	(btemp+16)^0,c
 14699  016276  0EE3               	movlw	-29
 14700  016278  006F FF8C  F03B    	movff	plusw1,btemp+17
 14701  01627E  0EFF               	movlw	255
 14702  016280  223B               	addwfc	(btemp+17)^0,f,c
 14703  016282  0EE4               	movlw	-28
 14704  016284  006F FF8C  F03C    	movff	plusw1,btemp+18
 14705  01628A  0EFF               	movlw	255
 14706  01628C  223C               	addwfc	(btemp+18)^0,f,c
 14707  01628E  0EE5               	movlw	-27
 14708  016290  006F FF8C  F03D    	movff	plusw1,btemp+19
 14709  016296  0EFF               	movlw	255
 14710  016298  223D               	addwfc	(btemp+19)^0,f,c
 14711  01629A  0EE6               	movlw	-26
 14712  01629C  006F FF8C  F03E    	movff	plusw1,btemp+20
 14713  0162A2  0EFF               	movlw	255
 14714  0162A4  223E               	addwfc	(btemp+20)^0,f,c
 14715  0162A6  0EE7               	movlw	-25
 14716  0162A8  006F FF8C  F03F    	movff	plusw1,btemp+21
 14717  0162AE  0EFF               	movlw	255
 14718  0162B0  223F               	addwfc	(btemp+21)^0,f,c
 14719  0162B2  0EE8               	movlw	-24
 14720  0162B4  006F FF8C  F040    	movff	plusw1,btemp+22
 14721  0162BA  0EFF               	movlw	255
 14722  0162BC  2240               	addwfc	(btemp+22)^0,f,c
 14723  0162BE  0EE9               	movlw	-23
 14724  0162C0  006F FF8C  F041    	movff	plusw1,btemp+23
 14725  0162C6  0EFF               	movlw	255
 14726  0162C8  2241               	addwfc	(btemp+23)^0,f,c
 14727  0162CA  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 14728  0162D0  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 14729  0162D6  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 14730  0162DC  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 14731  0162E2  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 14732  0162E8  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 14733  0162EE  0060  F103  FFE6   	movff	btemp+22,postinc1
 14734  0162F4  0060  F107  FFE6   	movff	btemp+23,postinc1
 14735  0162FA  ECF0  F0E7         	call	___aomod	;wreg free
 14736  0162FE  52E5               	movf	postdec1,f,c
 14737  016300  006F FF9C  F041    	movff	indf1,btemp+23
 14738  016306  52E5               	movf	postdec1,f,c
 14739  016308  006F FF9C  F040    	movff	indf1,btemp+22
 14740  01630E  52E5               	movf	postdec1,f,c
 14741  016310  006F FF9C  F03F    	movff	indf1,btemp+21
 14742  016316  52E5               	movf	postdec1,f,c
 14743  016318  006F FF9C  F03E    	movff	indf1,btemp+20
 14744  01631E  52E5               	movf	postdec1,f,c
 14745  016320  006F FF9C  F03D    	movff	indf1,btemp+19
 14746  016326  52E5               	movf	postdec1,f,c
 14747  016328  006F FF9C  F03C    	movff	indf1,btemp+18
 14748  01632E  52E5               	movf	postdec1,f,c
 14749  016330  006F FF9C  F03B    	movff	indf1,btemp+17
 14750  016336  52E5               	movf	postdec1,f,c
 14751  016338  006F FF9C  F03A    	movff	indf1,btemp+16
 14752  01633E  0EF8               	movlw	248
 14753  016340  26E1               	addwf	fsr1l,f,c
 14754  016342  0EFF               	movlw	255
 14755  016344  22E2               	addwfc	fsr1h,f,c
 14756  016346  0060  F0E8  F034   	movff	btemp+16,btemp+10
 14757  01634C  0060  F0EC  F035   	movff	btemp+17,btemp+11
 14758                           
 14759                           ;stkvar	_rem @ sp[(-14)+4]
 14760  016352  0EF6               	movlw	-10
 14761  016354  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14762  01635A  0EF7               	movlw	-9
 14763  01635C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14764                           
 14765                           ;stkvar	_rem @ sp[(-14)+4]
 14766  016362  0EF7               	movlw	-9
 14767  016364  AEE3               	btfss	plusw1,7,c
 14768  016366  D015               	goto	l11763
 14769                           
 14770                           ;stkvar	_cycles @ sp[(-14)+12]
 14771  016368  50E1               	movf	fsr1l,w,c
 14772  01636A  0FFE               	addlw	-2
 14773  01636C  6ED9               	movwf	fsr2l,c
 14774  01636E  50E2               	movf	fsr1h,w,c
 14775  016370  6EDA               	movwf	fsr2h,c
 14776  016372  0EFF               	movlw	255
 14777  016374  22DA               	addwfc	fsr2h,f,c
 14778  016376  06DE               	decf	postinc2,f,c
 14779  016378  0E00               	movlw	0
 14780  01637A  5ADD               	subwfb	postdec2,f,c
 14781                           
 14782                           ;stkvar	_rem @ sp[(-14)+4]
 14783  01637C  50E1               	movf	fsr1l,w,c
 14784  01637E  0FF6               	addlw	-10
 14785  016380  6ED9               	movwf	fsr2l,c
 14786  016382  50E2               	movf	fsr1h,w,c
 14787  016384  6EDA               	movwf	fsr2h,c
 14788  016386  0EFF               	movlw	255
 14789  016388  22DA               	addwfc	fsr2h,f,c
 14790  01638A  0E90               	movlw	144
 14791  01638C  26DE               	addwf	postinc2,f,c
 14792  01638E  0E01               	movlw	1
 14793  016390  22DD               	addwfc	postdec2,f,c
 14794  016392                     l11763:
 14795                           
 14796                           ;stkvar	_rem @ sp[(-14)+4]
 14797  016392  0EF6               	movlw	-10
 14798  016394  006F FF8C  F02A    	movff	plusw1,btemp
 14799  01639A  0EF7               	movlw	-9
 14800  01639C  50E3               	movf	plusw1,w,c
 14801  01639E  102A               	iorwf	btemp^0,w,c
 14802  0163A0  A4D8               	btfss	status,2,c
 14803  0163A2  D015               	goto	l11771
 14804                           
 14805                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14806  0163A4  0EE8               	movlw	-24
 14807  0163A6  006F FF8F FFD9     	movff	plusw1,fsr2l
 14808  0163AC  0EE9               	movlw	-23
 14809  0163AE  006F FF8F FFDA     	movff	plusw1,fsr2h
 14810  0163B4  0E01               	movlw	1
 14811  0163B6  6EDE               	movwf	postinc2,c
 14812  0163B8  0E00               	movlw	0
 14813  0163BA  6EDD               	movwf	postdec2,c
 14814                           
 14815                           ;stkvar	_centuries @ sp[(-14)+8]
 14816  0163BC  0EFA               	movlw	-6
 14817  0163BE  6AE3               	clrf	plusw1,c
 14818  0163C0  0EFB               	movlw	-5
 14819  0163C2  6AE3               	clrf	plusw1,c
 14820  0163C4                     l11769:
 14821                           
 14822                           ;stkvar	_leaps @ sp[(-14)+10]
 14823  0163C4  0EFC               	movlw	-4
 14824  0163C6  6AE3               	clrf	plusw1,c
 14825  0163C8  0EFD               	movlw	-3
 14826  0163CA  6AE3               	clrf	plusw1,c
 14827  0163CC  D0D6               	goto	l11803
 14828  0163CE                     l11771:
 14829                           
 14830                           ;stkvar	_rem @ sp[(-14)+4]
 14831  0163CE  0EF7               	movlw	-9
 14832  0163D0  BEE3               	btfsc	plusw1,7,c
 14833  0163D2  D04A               	goto	l11783
 14834  0163D4  0EF7               	movlw	-9
 14835  0163D6  50E3               	movf	plusw1,w,c
 14836  0163D8  E108               	bnz	u10880
 14837  0163DA  0EF6               	movlw	-10
 14838  0163DC  006F FF8C  F02A    	movff	plusw1,btemp
 14839  0163E2  0EC8               	movlw	200
 14840  0163E4  5E2A               	subwf	btemp^0,f,c
 14841  0163E6  A0D8               	btfss	status,0,c
 14842  0163E8  D03F               	goto	l11783
 14843  0163EA                     u10880:
 14844                           
 14845                           ;stkvar	_rem @ sp[(-14)+4]
 14846  0163EA  0EF7               	movlw	-9
 14847  0163EC  BEE3               	btfsc	plusw1,7,c
 14848  0163EE  D025               	goto	l11779
 14849  0163F0  0EF6               	movlw	-10
 14850  0163F2  006F FF8C  F02A    	movff	plusw1,btemp
 14851  0163F8  0E2C               	movlw	44
 14852  0163FA  5E2A               	subwf	btemp^0,f,c
 14853  0163FC  0EF7               	movlw	-9
 14854  0163FE  006F FF8C  F02A    	movff	plusw1,btemp
 14855  016404  0E01               	movlw	1
 14856  016406  5A2A               	subwfb	btemp^0,f,c
 14857  016408  A0D8               	btfss	status,0,c
 14858  01640A  D017               	goto	l11779
 14859  01640C  0E03               	movlw	3
 14860  01640E  6E34               	movwf	(btemp+10)^0,c
 14861  016410  0E00               	movlw	0
 14862  016412  6E35               	movwf	(btemp+11)^0,c
 14863                           
 14864                           ;stkvar	_centuries @ sp[(-14)+8]
 14865  016414  0EFA               	movlw	-6
 14866  016416  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14867  01641C  0EFB               	movlw	-5
 14868  01641E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14869                           
 14870                           ;stkvar	_rem @ sp[(-14)+4]
 14871  016424  50E1               	movf	fsr1l,w,c
 14872  016426  0FF6               	addlw	-10
 14873  016428  6ED9               	movwf	fsr2l,c
 14874  01642A  50E2               	movf	fsr1h,w,c
 14875  01642C  6EDA               	movwf	fsr2h,c
 14876  01642E  0EFF               	movlw	255
 14877  016430  22DA               	addwfc	fsr2h,f,c
 14878  016432  0ED4               	movlw	212
 14879  016434  26DE               	addwf	postinc2,f,c
 14880  016436  0EFE               	movlw	254
 14881  016438  D015               	goto	L14
 14882  01643A                     l11779:
 14883  01643A  0E02               	movlw	2
 14884  01643C  6E34               	movwf	(btemp+10)^0,c
 14885  01643E  0E00               	movlw	0
 14886  016440  6E35               	movwf	(btemp+11)^0,c
 14887                           
 14888                           ;stkvar	_centuries @ sp[(-14)+8]
 14889  016442  0EFA               	movlw	-6
 14890  016444  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14891  01644A  0EFB               	movlw	-5
 14892  01644C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14893                           
 14894                           ;stkvar	_rem @ sp[(-14)+4]
 14895  016452  50E1               	movf	fsr1l,w,c
 14896  016454  0FF6               	addlw	-10
 14897  016456  6ED9               	movwf	fsr2l,c
 14898  016458  50E2               	movf	fsr1h,w,c
 14899  01645A  6EDA               	movwf	fsr2h,c
 14900  01645C  0EFF               	movlw	255
 14901  01645E  22DA               	addwfc	fsr2h,f,c
 14902  016460  0E38               	movlw	56
 14903  016462  D024               	goto	L15
 14904  016464                     L14:
 14905  016464  22DD               	addwfc	postdec2,f,c
 14906  016466  D029               	goto	l11791
 14907  016468                     l11783:
 14908                           
 14909                           ;stkvar	_rem @ sp[(-14)+4]
 14910  016468  0EF7               	movlw	-9
 14911  01646A  BEE3               	btfsc	plusw1,7,c
 14912  01646C  D022               	goto	l11789
 14913  01646E  0EF7               	movlw	-9
 14914  016470  50E3               	movf	plusw1,w,c
 14915  016472  E108               	bnz	u10900
 14916  016474  0EF6               	movlw	-10
 14917  016476  006F FF8C  F02A    	movff	plusw1,btemp
 14918  01647C  0E64               	movlw	100
 14919  01647E  5E2A               	subwf	btemp^0,f,c
 14920  016480  A0D8               	btfss	status,0,c
 14921  016482  D017               	goto	l11789
 14922  016484                     u10900:
 14923  016484  0E01               	movlw	1
 14924  016486  6E34               	movwf	(btemp+10)^0,c
 14925  016488  0E00               	movlw	0
 14926  01648A  6E35               	movwf	(btemp+11)^0,c
 14927                           
 14928                           ;stkvar	_centuries @ sp[(-14)+8]
 14929  01648C  0EFA               	movlw	-6
 14930  01648E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14931  016494  0EFB               	movlw	-5
 14932  016496  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14933                           
 14934                           ;stkvar	_rem @ sp[(-14)+4]
 14935  01649C  50E1               	movf	fsr1l,w,c
 14936  01649E  0FF6               	addlw	-10
 14937  0164A0  6ED9               	movwf	fsr2l,c
 14938  0164A2  50E2               	movf	fsr1h,w,c
 14939  0164A4  6EDA               	movwf	fsr2h,c
 14940  0164A6  0EFF               	movlw	255
 14941  0164A8  22DA               	addwfc	fsr2h,f,c
 14942  0164AA  0E9C               	movlw	156
 14943  0164AC                     L15:
 14944  0164AC  26DE               	addwf	postinc2,f,c
 14945  0164AE  0EFF               	movlw	255
 14946  0164B0  D7D9               	goto	L14
 14947  0164B2                     l11789:
 14948                           
 14949                           ;stkvar	_centuries @ sp[(-14)+8]
 14950  0164B2  0EFA               	movlw	-6
 14951  0164B4  6AE3               	clrf	plusw1,c
 14952  0164B6  0EFB               	movlw	-5
 14953  0164B8  6AE3               	clrf	plusw1,c
 14954  0164BA                     l11791:
 14955                           
 14956                           ;stkvar	_rem @ sp[(-14)+4]
 14957  0164BA  0EF6               	movlw	-10
 14958  0164BC  006F FF8C  F02A    	movff	plusw1,btemp
 14959  0164C2  0EF7               	movlw	-9
 14960  0164C4  50E3               	movf	plusw1,w,c
 14961  0164C6  102A               	iorwf	btemp^0,w,c
 14962  0164C8  A4D8               	btfss	status,2,c
 14963  0164CA  D00D               	goto	l11797
 14964                           
 14965                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14966  0164CC  0EE8               	movlw	-24
 14967  0164CE  006F FF8F FFD9     	movff	plusw1,fsr2l
 14968  0164D4  0EE9               	movlw	-23
 14969  0164D6  006F FF8F FFDA     	movff	plusw1,fsr2h
 14970  0164DC  0E00               	movlw	0
 14971  0164DE  6EDE               	movwf	postinc2,c
 14972  0164E0  0E00               	movlw	0
 14973  0164E2  6EDD               	movwf	postdec2,c
 14974  0164E4  D76F               	goto	l11769
 14975  0164E6                     l11797:
 14976                           
 14977                           ;stkvar	_rem @ sp[(-14)+4]
 14978  0164E6  0EF6               	movlw	-10
 14979  0164E8  006F FF8C  F034    	movff	plusw1,btemp+10
 14980  0164EE  0EF7               	movlw	-9
 14981  0164F0  006F FF8C  F035    	movff	plusw1,btemp+11
 14982  0164F6  90D8               	bcf	status,0,c
 14983  0164F8  3235               	rrcf	(btemp+11)^0,f,c
 14984  0164FA  3234               	rrcf	(btemp+10)^0,f,c
 14985  0164FC  90D8               	bcf	status,0,c
 14986  0164FE  3235               	rrcf	(btemp+11)^0,f,c
 14987  016500  3234               	rrcf	(btemp+10)^0,f,c
 14988                           
 14989                           ;stkvar	_leaps @ sp[(-14)+10]
 14990  016502  0EFC               	movlw	-4
 14991  016504  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14992  01650A  0EFD               	movlw	-3
 14993  01650C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14994  016512  0E03               	movlw	3
 14995  016514  6E34               	movwf	(btemp+10)^0,c
 14996  016516  0E00               	movlw	0
 14997  016518  6E35               	movwf	(btemp+11)^0,c
 14998                           
 14999                           ;stkvar	_rem @ sp[(-14)+4]
 15000  01651A  0EF6               	movlw	-10
 15001  01651C  006F FF8C  F02A    	movff	plusw1,btemp
 15002  016522  5034               	movf	(btemp+10)^0,w,c
 15003  016524  162A               	andwf	btemp^0,f,c
 15004  016526  0EF6               	movlw	-10
 15005  016528  0060  F0AB  FFE3   	movff	btemp,plusw1
 15006  01652E  0EF7               	movlw	-9
 15007  016530  006F FF8C  F02A    	movff	plusw1,btemp
 15008  016536  5035               	movf	(btemp+11)^0,w,c
 15009  016538  162A               	andwf	btemp^0,f,c
 15010  01653A  0EF7               	movlw	-9
 15011  01653C  0060  F0AB  FFE3   	movff	btemp,plusw1
 15012                           
 15013                           ;stkvar	_rem @ sp[(-14)+4]
 15014  016542  0EF6               	movlw	-10
 15015  016544  006F FF8C  F02A    	movff	plusw1,btemp
 15016  01654A  0EF7               	movlw	-9
 15017  01654C  50E3               	movf	plusw1,w,c
 15018  01654E  102A               	iorwf	btemp^0,w,c
 15019  016550  A4D8               	btfss	status,2,c
 15020  016552  D002               	goto	u10920
 15021  016554  0E01               	movlw	1
 15022  016556  D001               	goto	u10930
 15023  016558                     u10920:
 15024  016558  0E00               	movlw	0
 15025  01655A                     u10930:
 15026  01655A  6E34               	movwf	(btemp+10)^0,c
 15027  01655C  6A35               	clrf	(btemp+11)^0,c
 15028                           
 15029                           ;stkvar	_is_leap @ sp[(-14)+-10]
 15030  01655E  0EE8               	movlw	-24
 15031  016560  006F FF8F FFD9     	movff	plusw1,fsr2l
 15032  016566  0EE9               	movlw	-23
 15033  016568  006F FF8F FFDA     	movff	plusw1,fsr2h
 15034  01656E  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 15035  016574  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 15036  01657A                     l11803:
 15037                           
 15038                           ;stkvar	_is_leap @ sp[(-14)+-10]
 15039  01657A  0EE8               	movlw	-24
 15040  01657C  006F FF8F FFD9     	movff	plusw1,fsr2l
 15041  016582  0EE9               	movlw	-23
 15042  016584  006F FF8F FFDA     	movff	plusw1,fsr2h
 15043  01658A  006F FF78  F034    	movff	postinc2,btemp+10
 15044  016590  006F FF74  F035    	movff	postdec2,btemp+11
 15045                           
 15046                           ;stkvar	_centuries @ sp[(-14)+8]
 15047  016596  0EFA               	movlw	-6
 15048  016598  006F FF8C  F032    	movff	plusw1,btemp+8
 15049  01659E  0EFB               	movlw	-5
 15050  0165A0  006F FF8C  F033    	movff	plusw1,btemp+9
 15051  0165A6  0E18               	movlw	24
 15052  0165A8  0232               	mulwf	(btemp+8)^0,c
 15053  0165AA  006F FFCC  F030    	movff	prodl,btemp+6
 15054  0165B0  006F FFD0  F031    	movff	prodh,btemp+7
 15055  0165B6  0233               	mulwf	(btemp+9)^0,c
 15056  0165B8  50F3               	movf	prodl,w,c
 15057  0165BA  2631               	addwf	(btemp+7)^0,f,c
 15058                           
 15059                           ;stkvar	_cycles @ sp[(-14)+12]
 15060  0165BC  0EFE               	movlw	-2
 15061  0165BE  006F FF8C  F032    	movff	plusw1,btemp+8
 15062  0165C4  0EFF               	movlw	-1
 15063  0165C6  006F FF8C  F033    	movff	plusw1,btemp+9
 15064  0165CC  0E61               	movlw	97
 15065  0165CE  0232               	mulwf	(btemp+8)^0,c
 15066  0165D0  006F FFCC  F02E    	movff	prodl,btemp+4
 15067  0165D6  006F FFD0  F02F    	movff	prodh,btemp+5
 15068  0165DC  0233               	mulwf	(btemp+9)^0,c
 15069  0165DE  50F3               	movf	prodl,w,c
 15070  0165E0  262F               	addwf	(btemp+5)^0,f,c
 15071  0165E2  5030               	movf	(btemp+6)^0,w,c
 15072  0165E4  262E               	addwf	(btemp+4)^0,f,c
 15073  0165E6  5031               	movf	(btemp+7)^0,w,c
 15074  0165E8  222F               	addwfc	(btemp+5)^0,f,c
 15075  0165EA  5034               	movf	(btemp+10)^0,w,c
 15076  0165EC  5E2E               	subwf	(btemp+4)^0,f,c
 15077  0165EE  5035               	movf	(btemp+11)^0,w,c
 15078  0165F0  5A2F               	subwfb	(btemp+5)^0,f,c
 15079                           
 15080                           ;stkvar	_leaps @ sp[(-14)+10]
 15081  0165F2  50E1               	movf	fsr1l,w,c
 15082  0165F4  0FFC               	addlw	-4
 15083  0165F6  6ED9               	movwf	fsr2l,c
 15084  0165F8  50E2               	movf	fsr1h,w,c
 15085  0165FA  6EDA               	movwf	fsr2h,c
 15086  0165FC  0EFF               	movlw	255
 15087  0165FE  22DA               	addwfc	fsr2h,f,c
 15088  016600  502E               	movf	(btemp+4)^0,w,c
 15089  016602  26DE               	addwf	postinc2,f,c
 15090  016604  502F               	movf	(btemp+5)^0,w,c
 15091  016606  22DD               	addwfc	postdec2,f,c
 15092  016608  0E80               	movlw	128
 15093  01660A  6EE6               	movwf	postinc1,c
 15094  01660C  0E51               	movlw	81
 15095  01660E  6EE6               	movwf	postinc1,c
 15096  016610  0E01               	movlw	1
 15097  016612  6EE6               	movwf	postinc1,c
 15098  016614  0E00               	movlw	0
 15099  016616  6EE6               	movwf	postinc1,c
 15100  016618  0E00               	movlw	0
 15101  01661A  6EE6               	movwf	postinc1,c
 15102  01661C  0E00               	movlw	0
 15103  01661E  6EE6               	movwf	postinc1,c
 15104  016620  0E00               	movlw	0
 15105  016622  6EE6               	movwf	postinc1,c
 15106  016624  0E00               	movlw	0
 15107  016626  6EE6               	movwf	postinc1,c
 15108                           
 15109                           ;stkvar	_leaps @ sp[(-22)+10]
 15110  016628  0EF4               	movlw	-12
 15111  01662A  006F FF8C  F03A    	movff	plusw1,btemp+16
 15112  016630  0EF5               	movlw	-11
 15113  016632  006F FF8C  F03B    	movff	plusw1,btemp+17
 15114  016638  6A3C               	clrf	(btemp+18)^0,c
 15115  01663A  BE3B               	btfsc	(btemp+17)^0,7,c
 15116  01663C  683C               	setf	(btemp+18)^0,c
 15117  01663E  0060  F0F0  F03D   	movff	btemp+18,btemp+19
 15118  016644  0060  F0F0  F03E   	movff	btemp+18,btemp+20
 15119  01664A  0060  F0F0  F03F   	movff	btemp+18,btemp+21
 15120  016650  0060  F0F0  F040   	movff	btemp+18,btemp+22
 15121  016656  0060  F0F0  F041   	movff	btemp+18,btemp+23
 15122  01665C  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 15123  016662  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 15124  016668  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 15125  01666E  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 15126  016674  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 15127  01667A  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 15128  016680  0060  F103  FFE6   	movff	btemp+22,postinc1
 15129  016686  0060  F107  FFE6   	movff	btemp+23,postinc1
 15130  01668C  ECFB  F0F8         	call	___omul	;wreg free
 15131  016690  52E5               	movf	postdec1,f,c
 15132  016692  006F FF9C  F041    	movff	indf1,btemp+23
 15133  016698  52E5               	movf	postdec1,f,c
 15134  01669A  006F FF9C  F040    	movff	indf1,btemp+22
 15135  0166A0  52E5               	movf	postdec1,f,c
 15136  0166A2  006F FF9C  F03F    	movff	indf1,btemp+21
 15137  0166A8  52E5               	movf	postdec1,f,c
 15138  0166AA  006F FF9C  F03E    	movff	indf1,btemp+20
 15139  0166B0  52E5               	movf	postdec1,f,c
 15140  0166B2  006F FF9C  F03D    	movff	indf1,btemp+19
 15141  0166B8  52E5               	movf	postdec1,f,c
 15142  0166BA  006F FF9C  F03C    	movff	indf1,btemp+18
 15143  0166C0  52E5               	movf	postdec1,f,c
 15144  0166C2  006F FF9C  F03B    	movff	indf1,btemp+17
 15145  0166C8  52E5               	movf	postdec1,f,c
 15146  0166CA  006F FF9C  F03A    	movff	indf1,btemp+16
 15147  0166D0  0EF8               	movlw	248
 15148  0166D2  26E1               	addwf	fsr1l,f,c
 15149  0166D4  0EFF               	movlw	255
 15150  0166D6  22E2               	addwfc	fsr1h,f,c
 15151  0166D8  0E80               	movlw	128
 15152  0166DA  6EE6               	movwf	postinc1,c
 15153  0166DC  0E33               	movlw	51
 15154  0166DE  6EE6               	movwf	postinc1,c
 15155  0166E0  0EE1               	movlw	225
 15156  0166E2  6EE6               	movwf	postinc1,c
 15157  0166E4  0E01               	movlw	1
 15158  0166E6  6EE6               	movwf	postinc1,c
 15159  0166E8  0E00               	movlw	0
 15160  0166EA  6EE6               	movwf	postinc1,c
 15161  0166EC  0E00               	movlw	0
 15162  0166EE  6EE6               	movwf	postinc1,c
 15163  0166F0  0E00               	movlw	0
 15164  0166F2  6EE6               	movwf	postinc1,c
 15165  0166F4  0E00               	movlw	0
 15166  0166F6  6EE6               	movwf	postinc1,c
 15167                           
 15168                           ;stkvar	_year @ sp[(-22)+-8]
 15169  0166F8  50E1               	movf	fsr1l,w,c
 15170  0166FA  0FE2               	addlw	-30
 15171  0166FC  6ED9               	movwf	fsr2l,c
 15172  0166FE  50E2               	movf	fsr1h,w,c
 15173  016700  6EDA               	movwf	fsr2h,c
 15174  016702  0EFF               	movlw	255
 15175  016704  22DA               	addwfc	fsr2h,f,c
 15176  016706  006F FF7B FFE6     	movff	postinc2,postinc1
 15177  01670C  006F FF7B FFE6     	movff	postinc2,postinc1
 15178  016712  006F FF7B FFE6     	movff	postinc2,postinc1
 15179  016718  006F FF7B FFE6     	movff	postinc2,postinc1
 15180  01671E  006F FF7B FFE6     	movff	postinc2,postinc1
 15181  016724  006F FF7B FFE6     	movff	postinc2,postinc1
 15182  01672A  006F FF7B FFE6     	movff	postinc2,postinc1
 15183  016730  006F FF7B FFE6     	movff	postinc2,postinc1
 15184  016736  ECFB  F0F8         	call	___omul	;wreg free
 15185  01673A  52E5               	movf	postdec1,f,c
 15186  01673C  006F FF9C  F049    	movff	indf1,btemp+31
 15187  016742  52E5               	movf	postdec1,f,c
 15188  016744  006F FF9C  F048    	movff	indf1,btemp+30
 15189  01674A  52E5               	movf	postdec1,f,c
 15190  01674C  006F FF9C  F047    	movff	indf1,btemp+29
 15191  016752  52E5               	movf	postdec1,f,c
 15192  016754  006F FF9C  F046    	movff	indf1,btemp+28
 15193  01675A  52E5               	movf	postdec1,f,c
 15194  01675C  006F FF9C  F045    	movff	indf1,btemp+27
 15195  016762  52E5               	movf	postdec1,f,c
 15196  016764  006F FF9C  F044    	movff	indf1,btemp+26
 15197  01676A  52E5               	movf	postdec1,f,c
 15198  01676C  006F FF9C  F043    	movff	indf1,btemp+25
 15199  016772  52E5               	movf	postdec1,f,c
 15200  016774  006F FF9C  F042    	movff	indf1,btemp+24
 15201  01677A  0EF8               	movlw	248
 15202  01677C  26E1               	addwf	fsr1l,f,c
 15203  01677E  0EFF               	movlw	255
 15204  016780  22E2               	addwfc	fsr1h,f,c
 15205  016782  503A               	movf	(btemp+16)^0,w,c
 15206  016784  2442               	addwf	(btemp+24)^0,w,c
 15207  016786  6E32               	movwf	(btemp+8)^0,c
 15208  016788  503B               	movf	(btemp+17)^0,w,c
 15209  01678A  2043               	addwfc	(btemp+25)^0,w,c
 15210  01678C  6E33               	movwf	(btemp+9)^0,c
 15211  01678E  503C               	movf	(btemp+18)^0,w,c
 15212  016790  2044               	addwfc	(btemp+26)^0,w,c
 15213  016792  6E34               	movwf	(btemp+10)^0,c
 15214  016794  503D               	movf	(btemp+19)^0,w,c
 15215  016796  2045               	addwfc	(btemp+27)^0,w,c
 15216  016798  6E35               	movwf	(btemp+11)^0,c
 15217  01679A  503E               	movf	(btemp+20)^0,w,c
 15218  01679C  2046               	addwfc	(btemp+28)^0,w,c
 15219  01679E  6E36               	movwf	(btemp+12)^0,c
 15220  0167A0  503F               	movf	(btemp+21)^0,w,c
 15221  0167A2  2047               	addwfc	(btemp+29)^0,w,c
 15222  0167A4  6E37               	movwf	(btemp+13)^0,c
 15223  0167A6  5040               	movf	(btemp+22)^0,w,c
 15224  0167A8  2048               	addwfc	(btemp+30)^0,w,c
 15225  0167AA  6E38               	movwf	(btemp+14)^0,c
 15226  0167AC  5041               	movf	(btemp+23)^0,w,c
 15227  0167AE  2049               	addwfc	(btemp+31)^0,w,c
 15228  0167B0  6E39               	movwf	(btemp+15)^0,c
 15229  0167B2  0E00               	movlw	0
 15230  0167B4  2432               	addwf	(btemp+8)^0,w,c
 15231  0167B6  6E3A               	movwf	(btemp+16)^0,c
 15232  0167B8  0E77               	movlw	119
 15233  0167BA  2033               	addwfc	(btemp+9)^0,w,c
 15234  0167BC  6E3B               	movwf	(btemp+17)^0,c
 15235  0167BE  0E76               	movlw	118
 15236  0167C0  2034               	addwfc	(btemp+10)^0,w,c
 15237  0167C2  6E3C               	movwf	(btemp+18)^0,c
 15238  0167C4  0E7C               	movlw	124
 15239  0167C6  2035               	addwfc	(btemp+11)^0,w,c
 15240  0167C8  6E3D               	movwf	(btemp+19)^0,c
 15241  0167CA  0EFF               	movlw	255
 15242  0167CC  2036               	addwfc	(btemp+12)^0,w,c
 15243  0167CE  6E3E               	movwf	(btemp+20)^0,c
 15244  0167D0  0EFF               	movlw	255
 15245  0167D2  2037               	addwfc	(btemp+13)^0,w,c
 15246  0167D4  6E3F               	movwf	(btemp+21)^0,c
 15247  0167D6  0EFF               	movlw	255
 15248  0167D8  2038               	addwfc	(btemp+14)^0,w,c
 15249  0167DA  6E40               	movwf	(btemp+22)^0,c
 15250  0167DC  0EFF               	movlw	255
 15251  0167DE  2039               	addwfc	(btemp+15)^0,w,c
 15252  0167E0  6E41               	movwf	(btemp+23)^0,c
 15253  0167E2                     L13:
 15254                           
 15255                           ;stkvar	?___year_to_secs @ sp[(-14)+-8]
 15256  0167E2  0EEA               	movlw	-22
 15257  0167E4  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 15258  0167EA  0EEB               	movlw	-21
 15259  0167EC  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 15260  0167F2  0EEC               	movlw	-20
 15261  0167F4  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 15262  0167FA  0EED               	movlw	-19
 15263  0167FC  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 15264  016802  0EEE               	movlw	-18
 15265  016804  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 15266  01680A  0EEF               	movlw	-17
 15267  01680C  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 15268  016812  0EF0               	movlw	-16
 15269  016814  0060  F103  FFE3   	movff	btemp+22,plusw1
 15270  01681A  0EF1               	movlw	-15
 15271  01681C  0060  F107  FFE3   	movff	btemp+23,plusw1
 15272                           
 15273                           ; ___year_to_secs: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          10, argsize = 10, vargsize = 0
 15274  016822  0EF2               	movlw	242
 15275  016824  26E1               	addwf	fsr1l,f,c
 15276  016826  0EFF               	movlw	255
 15277  016828  22E2               	addwfc	fsr1h,f,c
 15278  01682A  0012               	return		;funcret
 15279  01682C                     __end_of___year_to_secs:
 15280                           	opt callstack 0
 15281                           
 15282 ;; *************** function ___month_to_secs *****************
 15283 ;; Defined at:
 15284 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__month_to_secs.c"
 15285 ;; Parameters:    Size  Location     Type
 15286 ;;  month           2  [STACK] int 
 15287 ;;  is_leap         2  [STACK] int 
 15288 ;; Auto vars:     Size  Location     Type
 15289 ;;  t               4  [STACK] long 
 15290 ;; Return value:  Size  Location     Type
 15291 ;;                  4  [STACK] long 
 15292 ;; Registers used:
 15293 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl
 15294 ;; Tracked objects:
 15295 ;;		On entry : 0/0
 15296 ;;		On exit  : 0/0
 15297 ;;		Unchanged: 0/0
 15298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15303 ;;Total ram usage:        0 bytes
 15304 ;; Hardware stack levels used:    1
 15305 ;; Hardware stack levels required when called:   15
 15306 ;; This function calls:
 15307 ;;		Nothing
 15308 ;; This function is called by:
 15309 ;;		_rule_to_secs
 15310 ;; This function uses a reentrant model
 15311 ;;
 15312                           
 15313                           	psect	text43
 15314  000596                     __ptext43:
 15315                           	opt callstack 0
 15316  000596                     ___month_to_secs:
 15317                           	opt callstack 0
 15318                           
 15319                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15320  000596  52E6               	movf	postinc1,f,c
 15321  000598  52E6               	movf	postinc1,f,c
 15322  00059A  52E6               	movf	postinc1,f,c
 15323  00059C  52E6               	movf	postinc1,f,c
 15324                           
 15325                           ;stkvar	_month @ sp[(-4)+-2]
 15326                           
 15327                           ;incstack = 0
 15328  00059E  0EFA               	movlw	-6
 15329  0005A0  006F FF8C  F034    	movff	plusw1,btemp+10
 15330  0005A6  0EFB               	movlw	-5
 15331  0005A8  006F FF8C  F035    	movff	plusw1,btemp+11
 15332  0005AE  90D8               	bcf	status,0,c
 15333  0005B0  3634               	rlcf	(btemp+10)^0,f,c
 15334  0005B2  3635               	rlcf	(btemp+11)^0,f,c
 15335  0005B4  90D8               	bcf	status,0,c
 15336  0005B6  3634               	rlcf	(btemp+10)^0,f,c
 15337  0005B8  3635               	rlcf	(btemp+11)^0,f,c
 15338  0005BA  0EE7               	movlw	low ___month_to_secs@secs_through_month
 15339  0005BC  2434               	addwf	(btemp+10)^0,w,c
 15340  0005BE  6EF6               	movwf	tblptrl,c
 15341  0005C0  0EF7               	movlw	high ___month_to_secs@secs_through_month
 15342  0005C2  2035               	addwfc	(btemp+11)^0,w,c
 15343  0005C4  6EF7               	movwf	tblptrh,c
 15344  0005C6                     	if	1	;There are 3 active tblptr bytes
 15345  0005C6  6AF8               	clrf	tblptru,c
 15346  0005C8  0E00               	movlw	low (__mediumconst shr (0+16))
 15347  0005CA  22F8               	addwfc	tblptru,f,c
 15348  0005CC                     	endif
 15349  0005CC  0009               	tblrd		*+
 15350  0005CE  006F FFD4  F032    	movff	tablat,btemp+8
 15351  0005D4  0009               	tblrd		*+
 15352  0005D6  006F FFD4  F033    	movff	tablat,btemp+9
 15353  0005DC  0009               	tblrd		*+
 15354  0005DE  006F FFD4  F034    	movff	tablat,btemp+10
 15355  0005E4  0009               	tblrd		*+
 15356  0005E6  006F FFD4  F035    	movff	tablat,btemp+11
 15357                           
 15358                           ;stkvar	_t @ sp[(-4)+0]
 15359  0005EC  0EFC               	movlw	-4
 15360  0005EE  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 15361  0005F4  0EFD               	movlw	-3
 15362  0005F6  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 15363  0005FC  0EFE               	movlw	-2
 15364  0005FE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15365  000604  0EFF               	movlw	-1
 15366  000606  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15367                           
 15368                           ;stkvar	_is_leap @ sp[(-4)+-4]
 15369  00060C  0EF8               	movlw	-8
 15370  00060E  006F FF8C  F02A    	movff	plusw1,btemp
 15371  000614  0EF9               	movlw	-7
 15372  000616  50E3               	movf	plusw1,w,c
 15373  000618  102A               	iorwf	btemp^0,w,c
 15374  00061A  B4D8               	btfsc	status,2,c
 15375  00061C  D01D               	goto	l11817
 15376                           
 15377                           ;stkvar	_month @ sp[(-4)+-2]
 15378  00061E  0EFB               	movlw	-5
 15379  000620  BEE3               	btfsc	plusw1,7,c
 15380  000622  D01A               	goto	l11817
 15381  000624  0EFB               	movlw	-5
 15382  000626  50E3               	movf	plusw1,w,c
 15383  000628  E108               	bnz	u10950
 15384  00062A  0EFA               	movlw	-6
 15385  00062C  006F FF8C  F02A    	movff	plusw1,btemp
 15386  000632  0E02               	movlw	2
 15387  000634  5E2A               	subwf	btemp^0,f,c
 15388  000636  A0D8               	btfss	status,0,c
 15389  000638  D00F               	goto	l11817
 15390  00063A                     u10950:
 15391                           
 15392                           ;stkvar	_t @ sp[(-4)+0]
 15393  00063A  50E1               	movf	fsr1l,w,c
 15394  00063C  0FFC               	addlw	-4
 15395  00063E  6ED9               	movwf	fsr2l,c
 15396  000640  50E2               	movf	fsr1h,w,c
 15397  000642  6EDA               	movwf	fsr2h,c
 15398  000644  0EFF               	movlw	255
 15399  000646  22DA               	addwfc	fsr2h,f,c
 15400  000648  0E80               	movlw	128
 15401  00064A  26DE               	addwf	postinc2,f,c
 15402  00064C  0E51               	movlw	81
 15403  00064E  22DE               	addwfc	postinc2,f,c
 15404  000650  0E01               	movlw	1
 15405  000652  22DE               	addwfc	postinc2,f,c
 15406  000654  0E00               	movlw	0
 15407  000656  22DE               	addwfc	postinc2,f,c
 15408  000658                     l11817:
 15409                           
 15410                           ;stkvar	_t @ sp[(-4)+0]
 15411  000658  0EFC               	movlw	-4
 15412  00065A  006F FF8C  F02A    	movff	plusw1,btemp
 15413  000660  0EFD               	movlw	-3
 15414  000662  006F FF8C  F02B    	movff	plusw1,btemp+1
 15415  000668  0EFE               	movlw	-2
 15416  00066A  006F FF8C  F02C    	movff	plusw1,btemp+2
 15417  000670  0EFF               	movlw	-1
 15418  000672  006F FF8C  F02D    	movff	plusw1,btemp+3
 15419                           
 15420                           ; ___month_to_secs: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
 15421  000678  0EF8               	movlw	248
 15422  00067A  26E1               	addwf	fsr1l,f,c
 15423  00067C  0EFF               	movlw	255
 15424  00067E  22E2               	addwfc	fsr1h,f,c
 15425  000680  0012               	return		;funcret
 15426  000682                     __end_of___month_to_secs:
 15427                           	opt callstack 0
 15428                           
 15429 ;; *************** function _do_tzset *****************
 15430 ;; Defined at:
 15431 ;;		line 118 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 15432 ;; Parameters:    Size  Location     Type
 15433 ;;		None
 15434 ;; Auto vars:     Size  Location     Type
 15435 ;;  s               2  [STACK] PTR const unsigned char 
 15436 ;;		 -> __gmt(4), 
 15437 ;; Return value:  Size  Location     Type
 15438 ;;                  1  [STACK] void 
 15439 ;; Registers used:
 15440 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15441 ;; Tracked objects:
 15442 ;;		On entry : 0/39
 15443 ;;		On exit  : 0/0
 15444 ;;		Unchanged: 0/0
 15445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15450 ;;Total ram usage:        0 bytes
 15451 ;; Hardware stack levels used:    1
 15452 ;; Hardware stack levels required when called:   18
 15453 ;; This function calls:
 15454 ;;		_getname
 15455 ;;		_getoff
 15456 ;;		_getrule
 15457 ;; This function is called by:
 15458 ;;		___secs_to_zone
 15459 ;; This function uses a reentrant model
 15460 ;;
 15461                           
 15462                           	psect	text44
 15463  01BF08                     __ptext44:
 15464                           	opt callstack 0
 15465  01BF08                     _do_tzset:
 15466                           	opt callstack 0
 15467                           
 15468                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15469  01BF08  52E6               	movf	postinc1,f,c
 15470  01BF0A  52E6               	movf	postinc1,f,c
 15471                           
 15472                           ;stkvar	_s @ sp[(-2)+0]
 15473                           
 15474                           ;incstack = 0
 15475  01BF0C  0EF9               	movlw	high ___gmt
 15476  01BF0E  6E2A               	movwf	btemp^0,c
 15477  01BF10  0EFF               	movlw	-1
 15478  01BF12  0060  F0AB  FFE3   	movff	btemp,plusw1
 15479  01BF18  0E53               	movlw	low ___gmt
 15480  01BF1A  6E2A               	movwf	btemp^0,c
 15481  01BF1C  0EFE               	movlw	-2
 15482  01BF1E  0060  F0AB  FFE3   	movff	btemp,plusw1
 15483                           
 15484                           ;stkvar	_s @ sp[(-2)+0]
 15485  01BF24  0EFE               	movlw	254
 15486  01BF26  24E1               	addwf	fsr1l,w,c
 15487  01BF28  6E2A               	movwf	btemp^0,c
 15488  01BF2A  0EFF               	movlw	255
 15489  01BF2C  20E2               	addwfc	fsr1h,w,c
 15490  01BF2E  6E2B               	movwf	(btemp+1)^0,c
 15491  01BF30  0060  F0AB  FFE6   	movff	btemp,postinc1
 15492  01BF36  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15493  01BF3C  0EF6               	movlw	low _std_name
 15494  01BF3E  6EE6               	movwf	postinc1,c
 15495  01BF40  0E01               	movlw	high _std_name
 15496  01BF42  6EE6               	movwf	postinc1,c
 15497  01BF44  EC58  F0D8         	call	_getname	;wreg free
 15498  01BF48  0EF6               	movlw	low _std_name
 15499  01BF4A  0100               	movlb	0	; () banked
 15500  01BF4C  6F6C               	movwf	___tzname& (0+255),b
 15501  01BF4E  0E01               	movlw	high _std_name
 15502  01BF50  6F6D               	movwf	(___tzname+1)& (0+255),b
 15503                           
 15504                           ; BSR set to: 0
 15505                           ;stkvar	_s @ sp[(-2)+0]
 15506  01BF52  0EFE               	movlw	254
 15507  01BF54  24E1               	addwf	fsr1l,w,c
 15508  01BF56  6E2A               	movwf	btemp^0,c
 15509  01BF58  0EFF               	movlw	255
 15510  01BF5A  20E2               	addwfc	fsr1h,w,c
 15511  01BF5C  6E2B               	movwf	(btemp+1)^0,c
 15512  01BF5E  0060  F0AB  FFE6   	movff	btemp,postinc1
 15513  01BF64  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15514  01BF6A  EC10  F0E9         	call	_getoff	;wreg free
 15515  01BF6E  0060  F0A8  F070   	movff	btemp,___timezone
 15516  01BF74  0060  F0AC  F071   	movff	btemp+1,___timezone+1
 15517  01BF7A  0100               	movlb	0	; () banked
 15518  01BF7C  0E00               	movlw	0
 15519  01BF7E  BF71               	btfsc	(___timezone+1)& (0+255),7,b
 15520  01BF80  0EFF               	movlw	-1
 15521  01BF82  6F72               	movwf	(___timezone+2)& (0+255),b
 15522  01BF84  6F73               	movwf	(___timezone+3)& (0+255),b
 15523                           
 15524                           ; BSR set to: 0
 15525                           ;stkvar	_s @ sp[(-2)+0]
 15526  01BF86  0EFE               	movlw	254
 15527  01BF88  24E1               	addwf	fsr1l,w,c
 15528  01BF8A  6E2A               	movwf	btemp^0,c
 15529  01BF8C  0EFF               	movlw	255
 15530  01BF8E  20E2               	addwfc	fsr1h,w,c
 15531  01BF90  6E2B               	movwf	(btemp+1)^0,c
 15532  01BF92  0060  F0AB  FFE6   	movff	btemp,postinc1
 15533  01BF98  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15534  01BF9E  0EEF               	movlw	low _dst_name
 15535  01BFA0  6EE6               	movwf	postinc1,c
 15536  01BFA2  0E01               	movlw	high _dst_name
 15537  01BFA4  6EE6               	movwf	postinc1,c
 15538  01BFA6  EC58  F0D8         	call	_getname	;wreg free
 15539  01BFAA  0EEF               	movlw	low _dst_name
 15540  01BFAC  0100               	movlb	0	; () banked
 15541  01BFAE  6F6E               	movwf	(___tzname+2)& (0+255),b
 15542  01BFB0  0E01               	movlw	high _dst_name
 15543  01BFB2  6F6F               	movwf	(___tzname+3)& (0+255),b
 15544                           
 15545                           ; BSR set to: 0
 15546  01BFB4  0101               	movlb	1	; () banked
 15547  01BFB6  51EF               	movf	_dst_name& (0+255),w,b
 15548  01BFB8  B4D8               	btfsc	status,2,c
 15549  01BFBA  D070               	goto	l3978
 15550                           
 15551                           ; BSR set to: 1
 15552  01BFBC  0E00               	movlw	0
 15553  01BFBE  0100               	movlb	0	; () banked
 15554  01BFC0  6FB9               	movwf	(___daylight+1)& (0+255),b
 15555  01BFC2  0E01               	movlw	1
 15556  01BFC4  6FB8               	movwf	___daylight& (0+255),b
 15557                           
 15558                           ; BSR set to: 0
 15559                           ;stkvar	_s @ sp[(-2)+0]
 15560  01BFC6  50E1               	movf	fsr1l,w,c
 15561  01BFC8  0FFE               	addlw	-2
 15562  01BFCA  6ED9               	movwf	fsr2l,c
 15563  01BFCC  50E2               	movf	fsr1h,w,c
 15564  01BFCE  6EDA               	movwf	fsr2h,c
 15565  01BFD0  0EFF               	movlw	255
 15566  01BFD2  22DA               	addwfc	fsr2h,f,c
 15567  01BFD4  006F FF7B FFF6     	movff	postinc2,tblptrl
 15568  01BFDA  006F FF77 FFF7     	movff	postdec2,tblptrh
 15569  01BFE0                     	if	0	;tblptru may be non-zero
 15570  01BFE0                     	endif
 15571  01BFE0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15572  01BFE0  0E00               	movlw	low (__mediumconst shr (0+16))
 15573  01BFE2  6EF8               	movwf	tblptru,c
 15574  01BFE4                     	endif
 15575  01BFE4  0008               	tblrd		*
 15576  01BFE6  50F5               	movf	tablat,w,c
 15577  01BFE8  0A2B               	xorlw	43
 15578  01BFEA  B4D8               	btfsc	status,2,c
 15579  01BFEC  D035               	goto	u16190
 15580                           
 15581                           ; BSR set to: 0
 15582                           ;stkvar	_s @ sp[(-2)+0]
 15583  01BFEE  50E1               	movf	fsr1l,w,c
 15584  01BFF0  0FFE               	addlw	-2
 15585  01BFF2  6ED9               	movwf	fsr2l,c
 15586  01BFF4  50E2               	movf	fsr1h,w,c
 15587  01BFF6  6EDA               	movwf	fsr2h,c
 15588  01BFF8  0EFF               	movlw	255
 15589  01BFFA  22DA               	addwfc	fsr2h,f,c
 15590  01BFFC  006F FF7B FFF6     	movff	postinc2,tblptrl
 15591  01C002  006F FF77 FFF7     	movff	postdec2,tblptrh
 15592  01C008                     	if	0	;tblptru may be non-zero
 15593  01C008                     	endif
 15594  01C008                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15595  01C008  0E00               	movlw	low (__mediumconst shr (0+16))
 15596  01C00A  6EF8               	movwf	tblptru,c
 15597  01C00C                     	endif
 15598  01C00C  0008               	tblrd		*
 15599  01C00E  50F5               	movf	tablat,w,c
 15600  01C010  0A2D               	xorlw	45
 15601  01C012  B4D8               	btfsc	status,2,c
 15602  01C014  D021               	goto	u16190
 15603                           
 15604                           ; BSR set to: 0
 15605  01C016  0ED0               	movlw	208
 15606  01C018  6E34               	movwf	(btemp+10)^0,c
 15607  01C01A  0EFF               	movlw	255
 15608  01C01C  6E35               	movwf	(btemp+11)^0,c
 15609                           
 15610                           ;stkvar	_s @ sp[(-2)+0]
 15611  01C01E  50E1               	movf	fsr1l,w,c
 15612  01C020  0FFE               	addlw	-2
 15613  01C022  6ED9               	movwf	fsr2l,c
 15614  01C024  50E2               	movf	fsr1h,w,c
 15615  01C026  6EDA               	movwf	fsr2h,c
 15616  01C028  0EFF               	movlw	255
 15617  01C02A  22DA               	addwfc	fsr2h,f,c
 15618  01C02C  006F FF7B FFF6     	movff	postinc2,tblptrl
 15619  01C032  006F FF77 FFF7     	movff	postdec2,tblptrh
 15620  01C038                     	if	0	;tblptru may be non-zero
 15621  01C038                     	endif
 15622  01C038                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15623  01C038  0E00               	movlw	low (__mediumconst shr (0+16))
 15624  01C03A  6EF8               	movwf	tblptru,c
 15625  01C03C                     	endif
 15626  01C03C  0008               	tblrd		*
 15627  01C03E  50F5               	movf	tablat,w,c
 15628  01C040  6E32               	movwf	(btemp+8)^0,c
 15629  01C042  6A33               	clrf	(btemp+9)^0,c
 15630  01C044  5034               	movf	(btemp+10)^0,w,c
 15631  01C046  2632               	addwf	(btemp+8)^0,f,c
 15632  01C048  5035               	movf	(btemp+11)^0,w,c
 15633  01C04A  2233               	addwfc	(btemp+9)^0,f,c
 15634  01C04C  5033               	movf	(btemp+9)^0,w,c
 15635  01C04E  E119               	bnz	l16583
 15636  01C050  0E0A               	movlw	10
 15637  01C052  5C32               	subwf	(btemp+8)^0,w,c
 15638  01C054  B0D8               	btfsc	status,0,c
 15639  01C056  D015               	goto	l16583
 15640  01C058                     u16190:
 15641                           
 15642                           ; BSR set to: 0
 15643                           ;stkvar	_s @ sp[(-2)+0]
 15644  01C058  0EFE               	movlw	254
 15645  01C05A  24E1               	addwf	fsr1l,w,c
 15646  01C05C  6E2A               	movwf	btemp^0,c
 15647  01C05E  0EFF               	movlw	255
 15648  01C060  20E2               	addwfc	fsr1h,w,c
 15649  01C062  6E2B               	movwf	(btemp+1)^0,c
 15650  01C064  0060  F0AB  FFE6   	movff	btemp,postinc1
 15651  01C06A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15652  01C070  EC10  F0E9         	call	_getoff	;wreg free
 15653  01C074  0060  F0A8  F0B6   	movff	btemp,_dst_off
 15654  01C07A  0060  F0AC  F0B7   	movff	btemp+1,_dst_off+1
 15655  01C080  D012               	goto	l16585
 15656  01C082                     l16583:
 15657                           
 15658                           ; BSR set to: 0
 15659  01C082  0060  F1C0  F034   	movff	___timezone,btemp+10
 15660  01C088  0060  F1C4  F035   	movff	___timezone+1,btemp+11
 15661  01C08E  0EF0               	movlw	240
 15662  01C090  2434               	addwf	(btemp+10)^0,w,c
 15663  01C092  6FB6               	movwf	_dst_off& (0+255),b
 15664  01C094  0EF1               	movlw	241
 15665  01C096  2035               	addwfc	(btemp+11)^0,w,c
 15666  01C098  6FB7               	movwf	(_dst_off+1)& (0+255),b
 15667  01C09A  D005               	goto	l16585
 15668  01C09C                     l3978:
 15669                           
 15670                           ; BSR set to: 1
 15671  01C09C  0100               	movlb	0	; () banked
 15672  01C09E  6BB8               	clrf	___daylight& (0+255),b
 15673  01C0A0  6BB9               	clrf	(___daylight+1)& (0+255),b
 15674  01C0A2  6BB6               	clrf	_dst_off& (0+255),b
 15675  01C0A4  6BB7               	clrf	(_dst_off+1)& (0+255),b
 15676  01C0A6                     l16585:
 15677                           
 15678                           ;stkvar	_s @ sp[(-2)+0]
 15679  01C0A6  50E1               	movf	fsr1l,w,c
 15680  01C0A8  0FFE               	addlw	-2
 15681  01C0AA  6ED9               	movwf	fsr2l,c
 15682  01C0AC  50E2               	movf	fsr1h,w,c
 15683  01C0AE  6EDA               	movwf	fsr2h,c
 15684  01C0B0  0EFF               	movlw	255
 15685  01C0B2  22DA               	addwfc	fsr2h,f,c
 15686  01C0B4  006F FF7B FFF6     	movff	postinc2,tblptrl
 15687  01C0BA  006F FF77 FFF7     	movff	postdec2,tblptrh
 15688  01C0C0                     	if	0	;tblptru may be non-zero
 15689  01C0C0                     	endif
 15690  01C0C0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15691  01C0C0  0E00               	movlw	low (__mediumconst shr (0+16))
 15692  01C0C2  6EF8               	movwf	tblptru,c
 15693  01C0C4                     	endif
 15694  01C0C4  0008               	tblrd		*
 15695  01C0C6  50F5               	movf	tablat,w,c
 15696  01C0C8  0A2C               	xorlw	44
 15697  01C0CA  A4D8               	btfss	status,2,c
 15698  01C0CC  D023               	goto	l16591
 15699                           
 15700                           ;stkvar	_s @ sp[(-2)+0]
 15701  01C0CE  0EFE               	movlw	-2
 15702  01C0D0  50E3               	movf	plusw1,w,c
 15703  01C0D2  0F01               	addlw	1
 15704  01C0D4  6E2A               	movwf	btemp^0,c
 15705  01C0D6  0EFE               	movlw	-2
 15706  01C0D8  0060  F0AB  FFE3   	movff	btemp,plusw1
 15707  01C0DE  6A2A               	clrf	btemp^0,c
 15708  01C0E0  0EFF               	movlw	-1
 15709  01C0E2  50E3               	movf	plusw1,w,c
 15710  01C0E4  202A               	addwfc	btemp^0,w,c
 15711  01C0E6  6E2A               	movwf	btemp^0,c
 15712  01C0E8  0EFF               	movlw	-1
 15713  01C0EA  0060  F0AB  FFE3   	movff	btemp,plusw1
 15714  01C0F0  0EE5               	movlw	low _r0
 15715  01C0F2  6EE6               	movwf	postinc1,c
 15716  01C0F4  0E01               	movlw	high _r0
 15717  01C0F6  6EE6               	movwf	postinc1,c
 15718                           
 15719                           ;stkvar	_s @ sp[(-4)+0]
 15720  01C0F8  0EFC               	movlw	252
 15721  01C0FA  24E1               	addwf	fsr1l,w,c
 15722  01C0FC  6E2A               	movwf	btemp^0,c
 15723  01C0FE  0EFF               	movlw	255
 15724  01C100  20E2               	addwfc	fsr1h,w,c
 15725  01C102  6E2B               	movwf	(btemp+1)^0,c
 15726  01C104  0060  F0AB  FFE6   	movff	btemp,postinc1
 15727  01C10A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15728  01C110  ECC4  F0E0         	call	_getrule	;wreg free
 15729  01C114                     l16591:
 15730                           
 15731                           ;stkvar	_s @ sp[(-2)+0]
 15732  01C114  50E1               	movf	fsr1l,w,c
 15733  01C116  0FFE               	addlw	-2
 15734  01C118  6ED9               	movwf	fsr2l,c
 15735  01C11A  50E2               	movf	fsr1h,w,c
 15736  01C11C  6EDA               	movwf	fsr2h,c
 15737  01C11E  0EFF               	movlw	255
 15738  01C120  22DA               	addwfc	fsr2h,f,c
 15739  01C122  006F FF7B FFF6     	movff	postinc2,tblptrl
 15740  01C128  006F FF77 FFF7     	movff	postdec2,tblptrh
 15741  01C12E                     	if	0	;tblptru may be non-zero
 15742  01C12E                     	endif
 15743  01C12E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15744  01C12E  0E00               	movlw	low (__mediumconst shr (0+16))
 15745  01C130  6EF8               	movwf	tblptru,c
 15746  01C132                     	endif
 15747  01C132  0008               	tblrd		*
 15748  01C134  50F5               	movf	tablat,w,c
 15749  01C136  0A2C               	xorlw	44
 15750  01C138  A4D8               	btfss	status,2,c
 15751  01C13A  D023               	goto	l3986
 15752                           
 15753                           ;stkvar	_s @ sp[(-2)+0]
 15754  01C13C  0EFE               	movlw	-2
 15755  01C13E  50E3               	movf	plusw1,w,c
 15756  01C140  0F01               	addlw	1
 15757  01C142  6E2A               	movwf	btemp^0,c
 15758  01C144  0EFE               	movlw	-2
 15759  01C146  0060  F0AB  FFE3   	movff	btemp,plusw1
 15760  01C14C  6A2A               	clrf	btemp^0,c
 15761  01C14E  0EFF               	movlw	-1
 15762  01C150  50E3               	movf	plusw1,w,c
 15763  01C152  202A               	addwfc	btemp^0,w,c
 15764  01C154  6E2A               	movwf	btemp^0,c
 15765  01C156  0EFF               	movlw	-1
 15766  01C158  0060  F0AB  FFE3   	movff	btemp,plusw1
 15767  01C15E  0EDB               	movlw	low _r1
 15768  01C160  6EE6               	movwf	postinc1,c
 15769  01C162  0E01               	movlw	high _r1
 15770  01C164  6EE6               	movwf	postinc1,c
 15771                           
 15772                           ;stkvar	_s @ sp[(-4)+0]
 15773  01C166  0EFC               	movlw	252
 15774  01C168  24E1               	addwf	fsr1l,w,c
 15775  01C16A  6E2A               	movwf	btemp^0,c
 15776  01C16C  0EFF               	movlw	255
 15777  01C16E  20E2               	addwfc	fsr1h,w,c
 15778  01C170  6E2B               	movwf	(btemp+1)^0,c
 15779  01C172  0060  F0AB  FFE6   	movff	btemp,postinc1
 15780  01C178  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15781  01C17E  ECC4  F0E0         	call	_getrule	;wreg free
 15782  01C182                     l3986:
 15783                           
 15784                           ; _do_tzset: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
 15785  01C182  52E5               	movf	postdec1,f,c
 15786  01C184  52E5               	movf	postdec1,f,c
 15787  01C186  0012               	return		;funcret
 15788  01C188                     __end_of_do_tzset:
 15789                           	opt callstack 0
 15790                           
 15791 ;; *************** function _getrule *****************
 15792 ;; Defined at:
 15793 ;;		line 60 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 15794 ;; Parameters:    Size  Location     Type
 15795 ;;  p               2  [STACK] PTR PTR const unsigned c
 15796 ;;		 -> s(2), 
 15797 ;;  rule            2  [STACK] PTR int 
 15798 ;;		 -> r1(10), r0(10), 
 15799 ;; Auto vars:     Size  Location     Type
 15800 ;;  r               2  [STACK] int 
 15801 ;; Return value:  Size  Location     Type
 15802 ;;                  1  [STACK] void 
 15803 ;; Registers used:
 15804 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15805 ;; Tracked objects:
 15806 ;;		On entry : 0/0
 15807 ;;		On exit  : 0/0
 15808 ;;		Unchanged: 0/0
 15809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15814 ;;Total ram usage:        0 bytes
 15815 ;; Hardware stack levels used:    1
 15816 ;; Hardware stack levels required when called:   17
 15817 ;; This function calls:
 15818 ;;		_getint
 15819 ;;		_getoff
 15820 ;; This function is called by:
 15821 ;;		_do_tzset
 15822 ;; This function uses a reentrant model
 15823 ;;
 15824                           
 15825                           	psect	text45
 15826  01C188                     __ptext45:
 15827                           	opt callstack 0
 15828  01C188                     _getrule:
 15829                           	opt callstack 0
 15830                           
 15831                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15832  01C188  52E6               	movf	postinc1,f,c
 15833  01C18A  52E6               	movf	postinc1,f,c
 15834                           
 15835                           ;stkvar	_p @ sp[(-2)+-2]
 15836                           
 15837                           ;incstack = 0
 15838  01C18C  0EFC               	movlw	-4
 15839  01C18E  006F FF8F FFD9     	movff	plusw1,fsr2l
 15840  01C194  0EFD               	movlw	-3
 15841  01C196  006F FF8F FFDA     	movff	plusw1,fsr2h
 15842  01C19C  006F FF7B FFF6     	movff	postinc2,tblptrl
 15843  01C1A2  006F FF77 FFF7     	movff	postdec2,tblptrh
 15844  01C1A8                     	if	0	;tblptru may be non-zero
 15845  01C1A8                     	endif
 15846  01C1A8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15847  01C1A8  0E00               	movlw	low (__mediumconst shr (0+16))
 15848  01C1AA  6EF8               	movwf	tblptru,c
 15849  01C1AC                     	endif
 15850  01C1AC  0008               	tblrd		*
 15851  01C1AE  50F5               	movf	tablat,w,c
 15852  01C1B0  6E34               	movwf	(btemp+10)^0,c
 15853  01C1B2  6A35               	clrf	(btemp+11)^0,c
 15854                           
 15855                           ;stkvar	_rule @ sp[(-2)+-4]
 15856  01C1B4  0EFA               	movlw	-6
 15857  01C1B6  006F FF8F FFD9     	movff	plusw1,fsr2l
 15858  01C1BC  0EFB               	movlw	-5
 15859  01C1BE  006F FF8F FFDA     	movff	plusw1,fsr2h
 15860  01C1C4  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 15861  01C1CA  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 15862  01C1D0  006F FF78  F034    	movff	postinc2,btemp+10
 15863  01C1D6  006F FF74  F035    	movff	postdec2,btemp+11
 15864                           
 15865                           ;stkvar	_r @ sp[(-2)+0]
 15866  01C1DC  0EFE               	movlw	-2
 15867  01C1DE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15868  01C1E4  0EFF               	movlw	-1
 15869  01C1E6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15870                           
 15871                           ;stkvar	_r @ sp[(-2)+0]
 15872  01C1EC  0EFE               	movlw	-2
 15873  01C1EE  006F FF8C  F02A    	movff	plusw1,btemp
 15874  01C1F4  0E4D               	movlw	77
 15875  01C1F6  182A               	xorwf	btemp^0,w,c
 15876  01C1F8  E104               	bnz	u15770
 15877  01C1FA  0EFF               	movlw	-1
 15878  01C1FC  50E3               	movf	plusw1,w,c
 15879  01C1FE  B4D8               	btfsc	status,2,c
 15880  01C200  D036               	goto	l16281
 15881  01C202                     u15770:
 15882                           
 15883                           ;stkvar	_r @ sp[(-2)+0]
 15884  01C202  0EFE               	movlw	-2
 15885  01C204  006F FF8C  F02A    	movff	plusw1,btemp
 15886  01C20A  0E4A               	movlw	74
 15887  01C20C  182A               	xorwf	btemp^0,w,c
 15888  01C20E  E110               	bnz	l16277
 15889  01C210  0EFF               	movlw	-1
 15890  01C212  50E3               	movf	plusw1,w,c
 15891  01C214  A4D8               	btfss	status,2,c
 15892  01C216  D00C               	goto	l16277
 15893                           
 15894                           ;stkvar	_p @ sp[(-2)+-2]
 15895  01C218  0EFC               	movlw	-4
 15896  01C21A  006F FF8F FFD9     	movff	plusw1,fsr2l
 15897  01C220  0EFD               	movlw	-3
 15898  01C222  006F FF8F FFDA     	movff	plusw1,fsr2h
 15899  01C228  2ADE               	incf	postinc2,f,c
 15900  01C22A  0E00               	movlw	0
 15901  01C22C  22DD               	addwfc	postdec2,f,c
 15902  01C22E  D00C               	goto	l16279
 15903  01C230                     l16277:
 15904                           
 15905                           ;stkvar	_rule @ sp[(-2)+-4]
 15906  01C230  0EFA               	movlw	-6
 15907  01C232  006F FF8F FFD9     	movff	plusw1,fsr2l
 15908  01C238  0EFB               	movlw	-5
 15909  01C23A  006F FF8F FFDA     	movff	plusw1,fsr2h
 15910  01C240  0E00               	movlw	0
 15911  01C242  6EDE               	movwf	postinc2,c
 15912  01C244  0E00               	movlw	0
 15913  01C246  6EDD               	movwf	postdec2,c
 15914  01C248                     l16279:
 15915                           
 15916                           ;stkvar	_p @ sp[(-2)+-2]
 15917  01C248  0EFC               	movlw	-4
 15918  01C24A  006F FF8F FFE6     	movff	plusw1,postinc1
 15919  01C250  006F FF8F FFE6     	movff	plusw1,postinc1
 15920  01C256  EC52  F002         	call	_getint	;wreg free
 15921                           
 15922                           ;stkvar	_rule @ sp[(-2)+-4]
 15923  01C25A  0EFA               	movlw	-6
 15924  01C25C  006F FF8C  F034    	movff	plusw1,btemp+10
 15925  01C262  0EFB               	movlw	-5
 15926  01C264  006F FF8C  F035    	movff	plusw1,btemp+11
 15927  01C26A  0E02               	movlw	2
 15928  01C26C  D06D               	goto	L16
 15929  01C26E                     l16281:
 15930                           
 15931                           ;stkvar	_p @ sp[(-2)+-2]
 15932  01C26E  0EFC               	movlw	-4
 15933  01C270  006F FF8F FFD9     	movff	plusw1,fsr2l
 15934  01C276  0EFD               	movlw	-3
 15935  01C278  006F FF8F FFDA     	movff	plusw1,fsr2h
 15936  01C27E  2ADE               	incf	postinc2,f,c
 15937  01C280  0E00               	movlw	0
 15938  01C282  22DD               	addwfc	postdec2,f,c
 15939                           
 15940                           ;stkvar	_p @ sp[(-2)+-2]
 15941  01C284  0EFC               	movlw	-4
 15942  01C286  006F FF8F FFE6     	movff	plusw1,postinc1
 15943  01C28C  006F FF8F FFE6     	movff	plusw1,postinc1
 15944  01C292  EC52  F002         	call	_getint	;wreg free
 15945                           
 15946                           ;stkvar	_rule @ sp[(-2)+-4]
 15947  01C296  0EFA               	movlw	-6
 15948  01C298  006F FF8C  F034    	movff	plusw1,btemp+10
 15949  01C29E  0EFB               	movlw	-5
 15950  01C2A0  006F FF8C  F035    	movff	plusw1,btemp+11
 15951  01C2A6  0E02               	movlw	2
 15952  01C2A8  2434               	addwf	(btemp+10)^0,w,c
 15953  01C2AA  6ED9               	movwf	fsr2l,c
 15954  01C2AC  0E00               	movlw	0
 15955  01C2AE  2035               	addwfc	(btemp+11)^0,w,c
 15956  01C2B0  6EDA               	movwf	fsr2h,c
 15957  01C2B2  0060  F0AB  FFDE   	movff	btemp,postinc2
 15958  01C2B8  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 15959                           
 15960                           ;stkvar	_p @ sp[(-2)+-2]
 15961  01C2BE  0EFC               	movlw	-4
 15962  01C2C0  006F FF8F FFD9     	movff	plusw1,fsr2l
 15963  01C2C6  0EFD               	movlw	-3
 15964  01C2C8  006F FF8F FFDA     	movff	plusw1,fsr2h
 15965  01C2CE  2ADE               	incf	postinc2,f,c
 15966  01C2D0  0E00               	movlw	0
 15967  01C2D2  22DD               	addwfc	postdec2,f,c
 15968                           
 15969                           ;stkvar	_p @ sp[(-2)+-2]
 15970  01C2D4  0EFC               	movlw	-4
 15971  01C2D6  006F FF8F FFE6     	movff	plusw1,postinc1
 15972  01C2DC  006F FF8F FFE6     	movff	plusw1,postinc1
 15973  01C2E2  EC52  F002         	call	_getint	;wreg free
 15974                           
 15975                           ;stkvar	_rule @ sp[(-2)+-4]
 15976  01C2E6  0EFA               	movlw	-6
 15977  01C2E8  006F FF8C  F034    	movff	plusw1,btemp+10
 15978  01C2EE  0EFB               	movlw	-5
 15979  01C2F0  006F FF8C  F035    	movff	plusw1,btemp+11
 15980  01C2F6  0E04               	movlw	4
 15981  01C2F8  2434               	addwf	(btemp+10)^0,w,c
 15982  01C2FA  6ED9               	movwf	fsr2l,c
 15983  01C2FC  0E00               	movlw	0
 15984  01C2FE  2035               	addwfc	(btemp+11)^0,w,c
 15985  01C300  6EDA               	movwf	fsr2h,c
 15986  01C302  0060  F0AB  FFDE   	movff	btemp,postinc2
 15987  01C308  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 15988                           
 15989                           ;stkvar	_p @ sp[(-2)+-2]
 15990  01C30E  0EFC               	movlw	-4
 15991  01C310  006F FF8F FFD9     	movff	plusw1,fsr2l
 15992  01C316  0EFD               	movlw	-3
 15993  01C318  006F FF8F FFDA     	movff	plusw1,fsr2h
 15994  01C31E  2ADE               	incf	postinc2,f,c
 15995  01C320  0E00               	movlw	0
 15996  01C322  22DD               	addwfc	postdec2,f,c
 15997                           
 15998                           ;stkvar	_p @ sp[(-2)+-2]
 15999  01C324  0EFC               	movlw	-4
 16000  01C326  006F FF8F FFE6     	movff	plusw1,postinc1
 16001  01C32C  006F FF8F FFE6     	movff	plusw1,postinc1
 16002  01C332  EC52  F002         	call	_getint	;wreg free
 16003                           
 16004                           ;stkvar	_rule @ sp[(-2)+-4]
 16005  01C336  0EFA               	movlw	-6
 16006  01C338  006F FF8C  F034    	movff	plusw1,btemp+10
 16007  01C33E  0EFB               	movlw	-5
 16008  01C340  006F FF8C  F035    	movff	plusw1,btemp+11
 16009  01C346  0E06               	movlw	6
 16010  01C348                     L16:
 16011  01C348  2434               	addwf	(btemp+10)^0,w,c
 16012  01C34A  6ED9               	movwf	fsr2l,c
 16013  01C34C  0E00               	movlw	0
 16014  01C34E  2035               	addwfc	(btemp+11)^0,w,c
 16015  01C350  6EDA               	movwf	fsr2h,c
 16016  01C352  0060  F0AB  FFDE   	movff	btemp,postinc2
 16017  01C358  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 16018                           
 16019                           ;stkvar	_p @ sp[(-2)+-2]
 16020  01C35E  0EFC               	movlw	-4
 16021  01C360  006F FF8F FFD9     	movff	plusw1,fsr2l
 16022  01C366  0EFD               	movlw	-3
 16023  01C368  006F FF8F FFDA     	movff	plusw1,fsr2h
 16024  01C36E  006F FF7B FFF6     	movff	postinc2,tblptrl
 16025  01C374  006F FF77 FFF7     	movff	postdec2,tblptrh
 16026  01C37A                     	if	0	;tblptru may be non-zero
 16027  01C37A                     	endif
 16028  01C37A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16029  01C37A  0E00               	movlw	low (__mediumconst shr (0+16))
 16030  01C37C  6EF8               	movwf	tblptru,c
 16031  01C37E                     	endif
 16032  01C37E  0008               	tblrd		*
 16033  01C380  50F5               	movf	tablat,w,c
 16034  01C382  0A2F               	xorlw	47
 16035  01C384  A4D8               	btfss	status,2,c
 16036  01C386  D029               	goto	l16297
 16037                           
 16038                           ;stkvar	_p @ sp[(-2)+-2]
 16039  01C388  0EFC               	movlw	-4
 16040  01C38A  006F FF8F FFD9     	movff	plusw1,fsr2l
 16041  01C390  0EFD               	movlw	-3
 16042  01C392  006F FF8F FFDA     	movff	plusw1,fsr2h
 16043  01C398  2ADE               	incf	postinc2,f,c
 16044  01C39A  0E00               	movlw	0
 16045  01C39C  22DD               	addwfc	postdec2,f,c
 16046                           
 16047                           ;stkvar	_p @ sp[(-2)+-2]
 16048  01C39E  0EFC               	movlw	-4
 16049  01C3A0  006F FF8F FFE6     	movff	plusw1,postinc1
 16050  01C3A6  006F FF8F FFE6     	movff	plusw1,postinc1
 16051  01C3AC  EC10  F0E9         	call	_getoff	;wreg free
 16052                           
 16053                           ;stkvar	_rule @ sp[(-2)+-4]
 16054  01C3B0  0EFA               	movlw	-6
 16055  01C3B2  006F FF8C  F034    	movff	plusw1,btemp+10
 16056  01C3B8  0EFB               	movlw	-5
 16057  01C3BA  006F FF8C  F035    	movff	plusw1,btemp+11
 16058  01C3C0  0E08               	movlw	8
 16059  01C3C2  2434               	addwf	(btemp+10)^0,w,c
 16060  01C3C4  6ED9               	movwf	fsr2l,c
 16061  01C3C6  0E00               	movlw	0
 16062  01C3C8  2035               	addwfc	(btemp+11)^0,w,c
 16063  01C3CA  6EDA               	movwf	fsr2h,c
 16064  01C3CC  0060  F0AB  FFDE   	movff	btemp,postinc2
 16065  01C3D2  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 16066  01C3D8  D012               	goto	l3951
 16067  01C3DA                     l16297:
 16068                           
 16069                           ;stkvar	_rule @ sp[(-2)+-4]
 16070  01C3DA  0EFA               	movlw	-6
 16071  01C3DC  006F FF8C  F034    	movff	plusw1,btemp+10
 16072  01C3E2  0EFB               	movlw	-5
 16073  01C3E4  006F FF8C  F035    	movff	plusw1,btemp+11
 16074  01C3EA  0E08               	movlw	8
 16075  01C3EC  2434               	addwf	(btemp+10)^0,w,c
 16076  01C3EE  6ED9               	movwf	fsr2l,c
 16077  01C3F0  0E00               	movlw	0
 16078  01C3F2  2035               	addwfc	(btemp+11)^0,w,c
 16079  01C3F4  6EDA               	movwf	fsr2h,c
 16080  01C3F6  0E20               	movlw	32
 16081  01C3F8  6EDE               	movwf	postinc2,c
 16082  01C3FA  0E1C               	movlw	28
 16083  01C3FC  6EDD               	movwf	postdec2,c
 16084  01C3FE                     l3951:
 16085                           
 16086                           ; _getrule: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16087  01C3FE  0EFA               	movlw	250
 16088  01C400  26E1               	addwf	fsr1l,f,c
 16089  01C402  0EFF               	movlw	255
 16090  01C404  22E2               	addwfc	fsr1h,f,c
 16091  01C406  0012               	return		;funcret
 16092  01C408                     __end_of_getrule:
 16093                           	opt callstack 0
 16094                           
 16095 ;; *************** function _getoff *****************
 16096 ;; Defined at:
 16097 ;;		line 39 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 16098 ;; Parameters:    Size  Location     Type
 16099 ;;  p               2  [STACK] PTR PTR const unsigned c
 16100 ;;		 -> s(2), 
 16101 ;; Auto vars:     Size  Location     Type
 16102 ;;  off             2  [STACK] int 
 16103 ;;  neg             2  [STACK] int 
 16104 ;; Return value:  Size  Location     Type
 16105 ;;                  2  [STACK] int 
 16106 ;; Registers used:
 16107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 16108 ;; Tracked objects:
 16109 ;;		On entry : 0/0
 16110 ;;		On exit  : 0/0
 16111 ;;		Unchanged: 0/0
 16112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16117 ;;Total ram usage:        0 bytes
 16118 ;; Hardware stack levels used:    1
 16119 ;; Hardware stack levels required when called:   16
 16120 ;; This function calls:
 16121 ;;		_getint
 16122 ;; This function is called by:
 16123 ;;		_getrule
 16124 ;;		_do_tzset
 16125 ;; This function uses a reentrant model
 16126 ;;
 16127                           
 16128                           	psect	text46
 16129  01D220                     __ptext46:
 16130                           	opt callstack 0
 16131  01D220                     _getoff:
 16132                           	opt callstack 0
 16133                           
 16134                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16135  01D220  52E6               	movf	postinc1,f,c
 16136  01D222  52E6               	movf	postinc1,f,c
 16137  01D224  52E6               	movf	postinc1,f,c
 16138  01D226  52E6               	movf	postinc1,f,c
 16139                           
 16140                           ;stkvar	_neg @ sp[(-4)+2]
 16141                           
 16142                           ;incstack = 0
 16143  01D228  0EFE               	movlw	-2
 16144  01D22A  6AE3               	clrf	plusw1,c
 16145  01D22C  0EFF               	movlw	-1
 16146  01D22E  6AE3               	clrf	plusw1,c
 16147                           
 16148                           ;stkvar	_p @ sp[(-4)+-2]
 16149  01D230  0EFA               	movlw	-6
 16150  01D232  006F FF8F FFD9     	movff	plusw1,fsr2l
 16151  01D238  0EFB               	movlw	-5
 16152  01D23A  006F FF8F FFDA     	movff	plusw1,fsr2h
 16153  01D240  006F FF7B FFF6     	movff	postinc2,tblptrl
 16154  01D246  006F FF77 FFF7     	movff	postdec2,tblptrh
 16155  01D24C                     	if	0	;tblptru may be non-zero
 16156  01D24C                     	endif
 16157  01D24C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16158  01D24C  0E00               	movlw	low (__mediumconst shr (0+16))
 16159  01D24E  6EF8               	movwf	tblptru,c
 16160  01D250                     	endif
 16161  01D250  0008               	tblrd		*
 16162  01D252  50F5               	movf	tablat,w,c
 16163  01D254  0A2D               	xorlw	45
 16164  01D256  A4D8               	btfss	status,2,c
 16165  01D258  D018               	goto	l10943
 16166                           
 16167                           ;stkvar	_p @ sp[(-4)+-2]
 16168  01D25A  0EFA               	movlw	-6
 16169  01D25C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16170  01D262  0EFB               	movlw	-5
 16171  01D264  006F FF8F FFDA     	movff	plusw1,fsr2h
 16172  01D26A  2ADE               	incf	postinc2,f,c
 16173  01D26C  0E00               	movlw	0
 16174  01D26E  22DD               	addwfc	postdec2,f,c
 16175  01D270  0E01               	movlw	1
 16176  01D272  6E34               	movwf	(btemp+10)^0,c
 16177  01D274  0E00               	movlw	0
 16178  01D276  6E35               	movwf	(btemp+11)^0,c
 16179                           
 16180                           ;stkvar	_neg @ sp[(-4)+2]
 16181  01D278  0EFE               	movlw	-2
 16182  01D27A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 16183  01D280  0EFF               	movlw	-1
 16184  01D282  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 16185  01D288  D020               	goto	l10947
 16186  01D28A                     l10943:
 16187                           
 16188                           ;stkvar	_p @ sp[(-4)+-2]
 16189  01D28A  0EFA               	movlw	-6
 16190  01D28C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16191  01D292  0EFB               	movlw	-5
 16192  01D294  006F FF8F FFDA     	movff	plusw1,fsr2h
 16193  01D29A  006F FF7B FFF6     	movff	postinc2,tblptrl
 16194  01D2A0  006F FF77 FFF7     	movff	postdec2,tblptrh
 16195  01D2A6                     	if	0	;tblptru may be non-zero
 16196  01D2A6                     	endif
 16197  01D2A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16198  01D2A6  0E00               	movlw	low (__mediumconst shr (0+16))
 16199  01D2A8  6EF8               	movwf	tblptru,c
 16200  01D2AA                     	endif
 16201  01D2AA  0008               	tblrd		*
 16202  01D2AC  50F5               	movf	tablat,w,c
 16203  01D2AE  0A2B               	xorlw	43
 16204  01D2B0  A4D8               	btfss	status,2,c
 16205  01D2B2  D00B               	goto	l10947
 16206                           
 16207                           ;stkvar	_p @ sp[(-4)+-2]
 16208  01D2B4  0EFA               	movlw	-6
 16209  01D2B6  006F FF8F FFD9     	movff	plusw1,fsr2l
 16210  01D2BC  0EFB               	movlw	-5
 16211  01D2BE  006F FF8F FFDA     	movff	plusw1,fsr2h
 16212  01D2C4  2ADE               	incf	postinc2,f,c
 16213  01D2C6  0E00               	movlw	0
 16214  01D2C8  22DD               	addwfc	postdec2,f,c
 16215  01D2CA                     l10947:
 16216                           
 16217                           ;stkvar	_p @ sp[(-4)+-2]
 16218  01D2CA  0EFA               	movlw	-6
 16219  01D2CC  006F FF8F FFE6     	movff	plusw1,postinc1
 16220  01D2D2  006F FF8F FFE6     	movff	plusw1,postinc1
 16221  01D2D8  EC52  F002         	call	_getint	;wreg free
 16222  01D2DC  0060  F0A8  F034   	movff	btemp,btemp+10
 16223  01D2E2  0060  F0AC  F035   	movff	btemp+1,btemp+11
 16224  01D2E8  0E10               	movlw	16
 16225  01D2EA  0234               	mulwf	(btemp+10)^0,c
 16226  01D2EC  006F FFCC  F032    	movff	prodl,btemp+8
 16227  01D2F2  006F FFD0  F033    	movff	prodh,btemp+9
 16228  01D2F8  0235               	mulwf	(btemp+11)^0,c
 16229  01D2FA  50F3               	movf	prodl,w,c
 16230  01D2FC  2633               	addwf	(btemp+9)^0,f,c
 16231  01D2FE  0E0E               	movlw	14
 16232  01D300  0234               	mulwf	(btemp+10)^0,c
 16233  01D302  50F3               	movf	prodl,w,c
 16234  01D304  2633               	addwf	(btemp+9)^0,f,c
 16235                           
 16236                           ;stkvar	_off @ sp[(-4)+0]
 16237  01D306  0EFC               	movlw	-4
 16238  01D308  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 16239  01D30E  0EFD               	movlw	-3
 16240  01D310  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 16241                           
 16242                           ;stkvar	_p @ sp[(-4)+-2]
 16243  01D316  0EFA               	movlw	-6
 16244  01D318  006F FF8F FFD9     	movff	plusw1,fsr2l
 16245  01D31E  0EFB               	movlw	-5
 16246  01D320  006F FF8F FFDA     	movff	plusw1,fsr2h
 16247  01D326  006F FF7B FFF6     	movff	postinc2,tblptrl
 16248  01D32C  006F FF77 FFF7     	movff	postdec2,tblptrh
 16249  01D332                     	if	0	;tblptru may be non-zero
 16250  01D332                     	endif
 16251  01D332                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16252  01D332  0E00               	movlw	low (__mediumconst shr (0+16))
 16253  01D334  6EF8               	movwf	tblptru,c
 16254  01D336                     	endif
 16255  01D336  0008               	tblrd		*
 16256  01D338  50F5               	movf	tablat,w,c
 16257  01D33A  0A3A               	xorlw	58
 16258  01D33C  A4D8               	btfss	status,2,c
 16259  01D33E  D064               	goto	l10961
 16260                           
 16261                           ;stkvar	_p @ sp[(-4)+-2]
 16262  01D340  0EFA               	movlw	-6
 16263  01D342  006F FF8F FFD9     	movff	plusw1,fsr2l
 16264  01D348  0EFB               	movlw	-5
 16265  01D34A  006F FF8F FFDA     	movff	plusw1,fsr2h
 16266  01D350  2ADE               	incf	postinc2,f,c
 16267  01D352  0E00               	movlw	0
 16268  01D354  22DD               	addwfc	postdec2,f,c
 16269                           
 16270                           ;stkvar	_p @ sp[(-4)+-2]
 16271  01D356  0EFA               	movlw	-6
 16272  01D358  006F FF8F FFE6     	movff	plusw1,postinc1
 16273  01D35E  006F FF8F FFE6     	movff	plusw1,postinc1
 16274  01D364  EC52  F002         	call	_getint	;wreg free
 16275  01D368  0060  F0A8  F034   	movff	btemp,btemp+10
 16276  01D36E  0060  F0AC  F035   	movff	btemp+1,btemp+11
 16277  01D374  0E3C               	movlw	60
 16278  01D376  0234               	mulwf	(btemp+10)^0,c
 16279  01D378  006F FFCC  F032    	movff	prodl,btemp+8
 16280  01D37E  006F FFD0  F033    	movff	prodh,btemp+9
 16281  01D384  0235               	mulwf	(btemp+11)^0,c
 16282  01D386  50F3               	movf	prodl,w,c
 16283  01D388  2633               	addwf	(btemp+9)^0,f,c
 16284                           
 16285                           ;stkvar	_off @ sp[(-4)+0]
 16286  01D38A  50E1               	movf	fsr1l,w,c
 16287  01D38C  0FFC               	addlw	-4
 16288  01D38E  6ED9               	movwf	fsr2l,c
 16289  01D390  50E2               	movf	fsr1h,w,c
 16290  01D392  6EDA               	movwf	fsr2h,c
 16291  01D394  0EFF               	movlw	255
 16292  01D396  22DA               	addwfc	fsr2h,f,c
 16293  01D398  5032               	movf	(btemp+8)^0,w,c
 16294  01D39A  26DE               	addwf	postinc2,f,c
 16295  01D39C  5033               	movf	(btemp+9)^0,w,c
 16296  01D39E  22DD               	addwfc	postdec2,f,c
 16297                           
 16298                           ;stkvar	_p @ sp[(-4)+-2]
 16299  01D3A0  0EFA               	movlw	-6
 16300  01D3A2  006F FF8F FFD9     	movff	plusw1,fsr2l
 16301  01D3A8  0EFB               	movlw	-5
 16302  01D3AA  006F FF8F FFDA     	movff	plusw1,fsr2h
 16303  01D3B0  006F FF7B FFF6     	movff	postinc2,tblptrl
 16304  01D3B6  006F FF77 FFF7     	movff	postdec2,tblptrh
 16305  01D3BC                     	if	0	;tblptru may be non-zero
 16306  01D3BC                     	endif
 16307  01D3BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16308  01D3BC  0E00               	movlw	low (__mediumconst shr (0+16))
 16309  01D3BE  6EF8               	movwf	tblptru,c
 16310  01D3C0                     	endif
 16311  01D3C0  0008               	tblrd		*
 16312  01D3C2  50F5               	movf	tablat,w,c
 16313  01D3C4  0A3A               	xorlw	58
 16314  01D3C6  A4D8               	btfss	status,2,c
 16315  01D3C8  D01F               	goto	l10961
 16316                           
 16317                           ;stkvar	_p @ sp[(-4)+-2]
 16318  01D3CA  0EFA               	movlw	-6
 16319  01D3CC  006F FF8F FFD9     	movff	plusw1,fsr2l
 16320  01D3D2  0EFB               	movlw	-5
 16321  01D3D4  006F FF8F FFDA     	movff	plusw1,fsr2h
 16322  01D3DA  2ADE               	incf	postinc2,f,c
 16323  01D3DC  0E00               	movlw	0
 16324  01D3DE  22DD               	addwfc	postdec2,f,c
 16325                           
 16326                           ;stkvar	_p @ sp[(-4)+-2]
 16327  01D3E0  0EFA               	movlw	-6
 16328  01D3E2  006F FF8F FFE6     	movff	plusw1,postinc1
 16329  01D3E8  006F FF8F FFE6     	movff	plusw1,postinc1
 16330  01D3EE  EC52  F002         	call	_getint	;wreg free
 16331                           
 16332                           ;stkvar	_off @ sp[(-4)+0]
 16333  01D3F2  50E1               	movf	fsr1l,w,c
 16334  01D3F4  0FFC               	addlw	-4
 16335  01D3F6  6ED9               	movwf	fsr2l,c
 16336  01D3F8  50E2               	movf	fsr1h,w,c
 16337  01D3FA  6EDA               	movwf	fsr2h,c
 16338  01D3FC  0EFF               	movlw	255
 16339  01D3FE  22DA               	addwfc	fsr2h,f,c
 16340  01D400  502A               	movf	btemp^0,w,c
 16341  01D402  26DE               	addwf	postinc2,f,c
 16342  01D404  502B               	movf	(btemp+1)^0,w,c
 16343  01D406  22DD               	addwfc	postdec2,f,c
 16344  01D408                     l10961:
 16345                           
 16346                           ;stkvar	_neg @ sp[(-4)+2]
 16347  01D408  0EFE               	movlw	-2
 16348  01D40A  006F FF8C  F02A    	movff	plusw1,btemp
 16349  01D410  0EFF               	movlw	-1
 16350  01D412  50E3               	movf	plusw1,w,c
 16351  01D414  102A               	iorwf	btemp^0,w,c
 16352  01D416  A4D8               	btfss	status,2,c
 16353  01D418  D009               	goto	l10965
 16354                           
 16355                           ;stkvar	_off @ sp[(-4)+0]
 16356  01D41A  0EFC               	movlw	-4
 16357  01D41C  006F FF8C  F02A    	movff	plusw1,btemp
 16358  01D422  0EFD               	movlw	-3
 16359  01D424  006F FF8C  F02B    	movff	plusw1,btemp+1
 16360  01D42A  D00D               	goto	l3942
 16361  01D42C                     l10965:
 16362                           
 16363                           ;stkvar	_off @ sp[(-4)+0]
 16364  01D42C  0EFC               	movlw	-4
 16365  01D42E  006F FF8C  F02A    	movff	plusw1,btemp
 16366  01D434  1E2A               	comf	btemp^0,f,c
 16367  01D436  0EFD               	movlw	-3
 16368  01D438  006F FF8C  F02B    	movff	plusw1,btemp+1
 16369  01D43E  1E2B               	comf	(btemp+1)^0,f,c
 16370  01D440  2A2A               	incf	btemp^0,f,c
 16371  01D442  B4D8               	btfsc	status,2,c
 16372  01D444  2A2B               	incf	(btemp+1)^0,f,c
 16373  01D446                     l3942:
 16374                           
 16375                           ; _getoff: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 16376  01D446  0EFA               	movlw	250
 16377  01D448  26E1               	addwf	fsr1l,f,c
 16378  01D44A  0EFF               	movlw	255
 16379  01D44C  22E2               	addwfc	fsr1h,f,c
 16380  01D44E  0012               	return		;funcret
 16381  01D450                     __end_of_getoff:
 16382                           	opt callstack 0
 16383                           
 16384 ;; *************** function _getint *****************
 16385 ;; Defined at:
 16386 ;;		line 32 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 16387 ;; Parameters:    Size  Location     Type
 16388 ;;  p               2  [STACK] PTR PTR const unsigned c
 16389 ;;		 -> s(2), 
 16390 ;; Auto vars:     Size  Location     Type
 16391 ;;  x               2  [STACK] unsigned int 
 16392 ;; Return value:  Size  Location     Type
 16393 ;;                  2  [STACK] int 
 16394 ;; Registers used:
 16395 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 16396 ;; Tracked objects:
 16397 ;;		On entry : 0/0
 16398 ;;		On exit  : 0/0
 16399 ;;		Unchanged: 0/0
 16400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16405 ;;Total ram usage:        0 bytes
 16406 ;; Hardware stack levels used:    1
 16407 ;; Hardware stack levels required when called:   15
 16408 ;; This function calls:
 16409 ;;		Nothing
 16410 ;; This function is called by:
 16411 ;;		_getoff
 16412 ;;		_getrule
 16413 ;; This function uses a reentrant model
 16414 ;;
 16415                           
 16416                           	psect	text47
 16417  0004A4                     __ptext47:
 16418                           	opt callstack 0
 16419  0004A4                     _getint:
 16420                           	opt callstack 0
 16421                           
 16422                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16423  0004A4  52E6               	movf	postinc1,f,c
 16424  0004A6  52E6               	movf	postinc1,f,c
 16425                           
 16426                           ;stkvar	_x @ sp[(-2)+0]
 16427                           
 16428                           ;incstack = 0
 16429  0004A8  0EFE               	movlw	-2
 16430  0004AA  6AE3               	clrf	plusw1,c
 16431  0004AC  0EFF               	movlw	-1
 16432  0004AE  6AE3               	clrf	plusw1,c
 16433  0004B0  D043               	goto	l10099
 16434  0004B2                     l10095:
 16435  0004B2  0ED0               	movlw	208
 16436  0004B4  6E34               	movwf	(btemp+10)^0,c
 16437  0004B6  0EFF               	movlw	255
 16438  0004B8  6E35               	movwf	(btemp+11)^0,c
 16439                           
 16440                           ;stkvar	_x @ sp[(-2)+0]
 16441  0004BA  0EFE               	movlw	-2
 16442  0004BC  006F FF8C  F032    	movff	plusw1,btemp+8
 16443  0004C2  0EFF               	movlw	-1
 16444  0004C4  006F FF8C  F033    	movff	plusw1,btemp+9
 16445  0004CA  0E0A               	movlw	10
 16446  0004CC  0232               	mulwf	(btemp+8)^0,c
 16447  0004CE  006F FFCC  F030    	movff	prodl,btemp+6
 16448  0004D4  006F FFD0  F031    	movff	prodh,btemp+7
 16449  0004DA  0233               	mulwf	(btemp+9)^0,c
 16450  0004DC  50F3               	movf	prodl,w,c
 16451  0004DE  2631               	addwf	(btemp+7)^0,f,c
 16452                           
 16453                           ;stkvar	_p @ sp[(-2)+-2]
 16454  0004E0  0EFC               	movlw	-4
 16455  0004E2  006F FF8F FFD9     	movff	plusw1,fsr2l
 16456  0004E8  0EFD               	movlw	-3
 16457  0004EA  006F FF8F FFDA     	movff	plusw1,fsr2h
 16458  0004F0  006F FF7B FFF6     	movff	postinc2,tblptrl
 16459  0004F6  006F FF77 FFF7     	movff	postdec2,tblptrh
 16460  0004FC                     	if	0	;tblptru may be non-zero
 16461  0004FC                     	endif
 16462  0004FC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16463  0004FC  0E00               	movlw	low (__mediumconst shr (0+16))
 16464  0004FE  6EF8               	movwf	tblptru,c
 16465  000500                     	endif
 16466  000500  0008               	tblrd		*
 16467  000502  50F5               	movf	tablat,w,c
 16468  000504  2630               	addwf	(btemp+6)^0,f,c
 16469  000506  0E00               	movlw	0
 16470  000508  2231               	addwfc	(btemp+7)^0,f,c
 16471  00050A  5034               	movf	(btemp+10)^0,w,c
 16472  00050C  2630               	addwf	(btemp+6)^0,f,c
 16473  00050E  5035               	movf	(btemp+11)^0,w,c
 16474  000510  2231               	addwfc	(btemp+7)^0,f,c
 16475                           
 16476                           ;stkvar	_x @ sp[(-2)+0]
 16477  000512  0EFE               	movlw	-2
 16478  000514  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 16479  00051A  0EFF               	movlw	-1
 16480  00051C  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 16481                           
 16482                           ;stkvar	_p @ sp[(-2)+-2]
 16483  000522  0EFC               	movlw	-4
 16484  000524  006F FF8F FFD9     	movff	plusw1,fsr2l
 16485  00052A  0EFD               	movlw	-3
 16486  00052C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16487  000532  2ADE               	incf	postinc2,f,c
 16488  000534  0E00               	movlw	0
 16489  000536  22DD               	addwfc	postdec2,f,c
 16490  000538                     l10099:
 16491  000538  0ED0               	movlw	208
 16492  00053A  6E34               	movwf	(btemp+10)^0,c
 16493  00053C  0EFF               	movlw	255
 16494  00053E  6E35               	movwf	(btemp+11)^0,c
 16495                           
 16496                           ;stkvar	_p @ sp[(-2)+-2]
 16497  000540  0EFC               	movlw	-4
 16498  000542  006F FF8F FFD9     	movff	plusw1,fsr2l
 16499  000548  0EFD               	movlw	-3
 16500  00054A  006F FF8F FFDA     	movff	plusw1,fsr2h
 16501  000550  006F FF7B FFF6     	movff	postinc2,tblptrl
 16502  000556  006F FF77 FFF7     	movff	postdec2,tblptrh
 16503  00055C                     	if	0	;tblptru may be non-zero
 16504  00055C                     	endif
 16505  00055C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16506  00055C  0E00               	movlw	low (__mediumconst shr (0+16))
 16507  00055E  6EF8               	movwf	tblptru,c
 16508  000560                     	endif
 16509  000560  0008               	tblrd		*
 16510  000562  50F5               	movf	tablat,w,c
 16511  000564  6E32               	movwf	(btemp+8)^0,c
 16512  000566  6A33               	clrf	(btemp+9)^0,c
 16513  000568  5034               	movf	(btemp+10)^0,w,c
 16514  00056A  2632               	addwf	(btemp+8)^0,f,c
 16515  00056C  5035               	movf	(btemp+11)^0,w,c
 16516  00056E  2233               	addwfc	(btemp+9)^0,f,c
 16517  000570  5033               	movf	(btemp+9)^0,w,c
 16518  000572  E104               	bnz	u7730
 16519  000574  0E0A               	movlw	10
 16520  000576  5C32               	subwf	(btemp+8)^0,w,c
 16521  000578  A0D8               	btfss	status,0,c
 16522  00057A  D79B               	goto	l10095
 16523  00057C                     u7730:
 16524                           
 16525                           ;stkvar	_x @ sp[(-2)+0]
 16526  00057C  0EFE               	movlw	-2
 16527  00057E  006F FF8C  F02A    	movff	plusw1,btemp
 16528  000584  0EFF               	movlw	-1
 16529  000586  006F FF8C  F02B    	movff	plusw1,btemp+1
 16530                           
 16531                           ; _getint: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 16532  00058C  52E5               	movf	postdec1,f,c
 16533  00058E  52E5               	movf	postdec1,f,c
 16534  000590  52E5               	movf	postdec1,f,c
 16535  000592  52E5               	movf	postdec1,f,c
 16536  000594  0012               	return		;funcret
 16537  000596                     __end_of_getint:
 16538                           	opt callstack 0
 16539                           
 16540 ;; *************** function _getname *****************
 16541 ;; Defined at:
 16542 ;;		line 82 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 16543 ;; Parameters:    Size  Location     Type
 16544 ;;  d               2  [STACK] PTR unsigned char 
 16545 ;;		 -> dst_name(7), std_name(7), 
 16546 ;;  p               2  [STACK] PTR PTR const unsigned c
 16547 ;;		 -> s(2), 
 16548 ;; Auto vars:     Size  Location     Type
 16549 ;;  i               2  [STACK] int 
 16550 ;; Return value:  Size  Location     Type
 16551 ;;                  1  [STACK] void 
 16552 ;; Registers used:
 16553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11,
      + tblptrl, tblptrh, tblptru
 16554 ;; Tracked objects:
 16555 ;;		On entry : 0/39
 16556 ;;		On exit  : 0/0
 16557 ;;		Unchanged: 0/0
 16558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16563 ;;Total ram usage:        0 bytes
 16564 ;; Hardware stack levels used:    1
 16565 ;; Hardware stack levels required when called:   15
 16566 ;; This function calls:
 16567 ;;		Nothing
 16568 ;; This function is called by:
 16569 ;;		_do_tzset
 16570 ;; This function uses a reentrant model
 16571 ;;
 16572                           
 16573                           	psect	text48
 16574  01B0B0                     __ptext48:
 16575                           	opt callstack 0
 16576  01B0B0                     _getname:
 16577                           	opt callstack 0
 16578                           
 16579                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16580  01B0B0  52E6               	movf	postinc1,f,c
 16581  01B0B2  52E6               	movf	postinc1,f,c
 16582                           
 16583                           ;stkvar	_p @ sp[(-2)+-4]
 16584                           
 16585                           ;incstack = 0
 16586  01B0B4  0EFA               	movlw	-6
 16587  01B0B6  006F FF8F FFD9     	movff	plusw1,fsr2l
 16588  01B0BC  0EFB               	movlw	-5
 16589  01B0BE  006F FF8F FFDA     	movff	plusw1,fsr2h
 16590  01B0C4  006F FF7B FFF6     	movff	postinc2,tblptrl
 16591  01B0CA  006F FF77 FFF7     	movff	postdec2,tblptrh
 16592  01B0D0                     	if	0	;tblptru may be non-zero
 16593  01B0D0                     	endif
 16594  01B0D0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16595  01B0D0  0E00               	movlw	low (__mediumconst shr (0+16))
 16596  01B0D2  6EF8               	movwf	tblptru,c
 16597  01B0D4                     	endif
 16598  01B0D4  0008               	tblrd		*
 16599  01B0D6  50F5               	movf	tablat,w,c
 16600  01B0D8  0A3C               	xorlw	60
 16601  01B0DA  A4D8               	btfss	status,2,c
 16602  01B0DC  D09E               	goto	l16315
 16603                           
 16604                           ;stkvar	_p @ sp[(-2)+-4]
 16605  01B0DE  0EFA               	movlw	-6
 16606  01B0E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 16607  01B0E6  0EFB               	movlw	-5
 16608  01B0E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 16609  01B0EE  2ADE               	incf	postinc2,f,c
 16610  01B0F0  0E00               	movlw	0
 16611  01B0F2  22DD               	addwfc	postdec2,f,c
 16612                           
 16613                           ;stkvar	_i @ sp[(-2)+0]
 16614  01B0F4  0EFE               	movlw	-2
 16615  01B0F6  6AE3               	clrf	plusw1,c
 16616  01B0F8  0EFF               	movlw	-1
 16617  01B0FA  6AE3               	clrf	plusw1,c
 16618  01B0FC  D04D               	goto	l16309
 16619  01B0FE                     l16305:
 16620                           
 16621                           ;stkvar	_i @ sp[(-2)+0]
 16622  01B0FE  0EFE               	movlw	-2
 16623  01B100  006F FF8C  F034    	movff	plusw1,btemp+10
 16624  01B106  0EFF               	movlw	-1
 16625  01B108  006F FF8C  F035    	movff	plusw1,btemp+11
 16626                           
 16627                           ;stkvar	_p @ sp[(-2)+-4]
 16628  01B10E  0EFA               	movlw	-6
 16629  01B110  006F FF8F FFD9     	movff	plusw1,fsr2l
 16630  01B116  0EFB               	movlw	-5
 16631  01B118  006F FF8F FFDA     	movff	plusw1,fsr2h
 16632  01B11E  006F FF78  F032    	movff	postinc2,btemp+8
 16633  01B124  006F FF74  F033    	movff	postdec2,btemp+9
 16634  01B12A  5034               	movf	(btemp+10)^0,w,c
 16635  01B12C  2632               	addwf	(btemp+8)^0,f,c
 16636  01B12E  5035               	movf	(btemp+11)^0,w,c
 16637  01B130  2233               	addwfc	(btemp+9)^0,f,c
 16638  01B132  0060  F0CB  FFF6   	movff	btemp+8,tblptrl
 16639  01B138  0060  F0CF  FFF7   	movff	btemp+9,tblptrh
 16640  01B13E                     	if	0	;tblptru may be non-zero
 16641  01B13E                     	endif
 16642  01B13E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16643  01B13E  0E00               	movlw	low (__mediumconst shr (0+16))
 16644  01B140  6EF8               	movwf	tblptru,c
 16645  01B142                     	endif
 16646                           
 16647                           ;stkvar	_i @ sp[(-2)+0]
 16648  01B142  0EFE               	movlw	-2
 16649  01B144  006F FF8C  F034    	movff	plusw1,btemp+10
 16650  01B14A  0EFF               	movlw	-1
 16651  01B14C  006F FF8C  F035    	movff	plusw1,btemp+11
 16652                           
 16653                           ;stkvar	_d @ sp[(-2)+-2]
 16654  01B152  0EFC               	movlw	-4
 16655  01B154  006F FF8C  F032    	movff	plusw1,btemp+8
 16656  01B15A  0EFD               	movlw	-3
 16657  01B15C  006F FF8C  F033    	movff	plusw1,btemp+9
 16658  01B162  5034               	movf	(btemp+10)^0,w,c
 16659  01B164  2432               	addwf	(btemp+8)^0,w,c
 16660  01B166  6ED9               	movwf	fsr2l,c
 16661  01B168  5035               	movf	(btemp+11)^0,w,c
 16662  01B16A  2033               	addwfc	(btemp+9)^0,w,c
 16663  01B16C  6EDA               	movwf	fsr2h,c
 16664  01B16E  0008               	tblrd		*
 16665  01B170  006F FFD7 FFDF     	movff	tablat,indf2
 16666                           
 16667                           ;stkvar	_i @ sp[(-2)+0]
 16668  01B176  0EFE               	movlw	-2
 16669  01B178  50E3               	movf	plusw1,w,c
 16670  01B17A  0F01               	addlw	1
 16671  01B17C  6E2A               	movwf	btemp^0,c
 16672  01B17E  0EFE               	movlw	-2
 16673  01B180  0060  F0AB  FFE3   	movff	btemp,plusw1
 16674  01B186  6A2A               	clrf	btemp^0,c
 16675  01B188  0EFF               	movlw	-1
 16676  01B18A  50E3               	movf	plusw1,w,c
 16677  01B18C  202A               	addwfc	btemp^0,w,c
 16678  01B18E  6E2A               	movwf	btemp^0,c
 16679  01B190  0EFF               	movlw	-1
 16680  01B192  0060  F0AB  FFE3   	movff	btemp,plusw1
 16681  01B198                     l16309:
 16682                           
 16683                           ;stkvar	_i @ sp[(-2)+0]
 16684  01B198  0EFE               	movlw	-2
 16685  01B19A  006F FF8C  F034    	movff	plusw1,btemp+10
 16686  01B1A0  0EFF               	movlw	-1
 16687  01B1A2  006F FF8C  F035    	movff	plusw1,btemp+11
 16688                           
 16689                           ;stkvar	_p @ sp[(-2)+-4]
 16690  01B1A8  0EFA               	movlw	-6
 16691  01B1AA  006F FF8F FFD9     	movff	plusw1,fsr2l
 16692  01B1B0  0EFB               	movlw	-5
 16693  01B1B2  006F FF8F FFDA     	movff	plusw1,fsr2h
 16694  01B1B8  006F FF78  F032    	movff	postinc2,btemp+8
 16695  01B1BE  006F FF74  F033    	movff	postdec2,btemp+9
 16696  01B1C4  5034               	movf	(btemp+10)^0,w,c
 16697  01B1C6  2632               	addwf	(btemp+8)^0,f,c
 16698  01B1C8  5035               	movf	(btemp+11)^0,w,c
 16699  01B1CA  2233               	addwfc	(btemp+9)^0,f,c
 16700  01B1CC  0060  F0CB  FFF6   	movff	btemp+8,tblptrl
 16701  01B1D2  0060  F0CF  FFF7   	movff	btemp+9,tblptrh
 16702  01B1D8                     	if	0	;tblptru may be non-zero
 16703  01B1D8                     	endif
 16704  01B1D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16705  01B1D8  0E00               	movlw	low (__mediumconst shr (0+16))
 16706  01B1DA  6EF8               	movwf	tblptru,c
 16707  01B1DC                     	endif
 16708  01B1DC  0008               	tblrd		*
 16709  01B1DE  50F5               	movf	tablat,w,c
 16710  01B1E0  0A3E               	xorlw	62
 16711  01B1E2  B4D8               	btfsc	status,2,c
 16712  01B1E4  D00E               	goto	u15820
 16713                           
 16714                           ;stkvar	_i @ sp[(-2)+0]
 16715  01B1E6  0EFF               	movlw	-1
 16716  01B1E8  BEE3               	btfsc	plusw1,7,c
 16717  01B1EA  D789               	goto	l16305
 16718  01B1EC  0EFF               	movlw	-1
 16719  01B1EE  50E3               	movf	plusw1,w,c
 16720  01B1F0  E108               	bnz	u15820
 16721  01B1F2  0EFE               	movlw	-2
 16722  01B1F4  006F FF8C  F02A    	movff	plusw1,btemp
 16723  01B1FA  0E06               	movlw	6
 16724  01B1FC  5E2A               	subwf	btemp^0,f,c
 16725  01B1FE  A0D8               	btfss	status,0,c
 16726  01B200  D77E               	goto	l16305
 16727  01B202                     u15820:
 16728                           
 16729                           ;stkvar	_p @ sp[(-2)+-4]
 16730  01B202  0EFA               	movlw	-6
 16731  01B204  006F FF8F FFD9     	movff	plusw1,fsr2l
 16732  01B20A  0EFB               	movlw	-5
 16733  01B20C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16734  01B212  2ADE               	incf	postinc2,f,c
 16735  01B214  0E00               	movlw	0
 16736  01B216  22DD               	addwfc	postdec2,f,c
 16737  01B218  D098               	goto	u15840
 16738  01B21A                     l16315:
 16739                           
 16740                           ;stkvar	_i @ sp[(-2)+0]
 16741  01B21A  0EFE               	movlw	-2
 16742  01B21C  6AE3               	clrf	plusw1,c
 16743  01B21E  0EFF               	movlw	-1
 16744  01B220  6AE3               	clrf	plusw1,c
 16745  01B222  D04D               	goto	l16321
 16746  01B224                     l16317:
 16747                           
 16748                           ;stkvar	_i @ sp[(-2)+0]
 16749  01B224  0EFE               	movlw	-2
 16750  01B226  006F FF8C  F034    	movff	plusw1,btemp+10
 16751  01B22C  0EFF               	movlw	-1
 16752  01B22E  006F FF8C  F035    	movff	plusw1,btemp+11
 16753                           
 16754                           ;stkvar	_p @ sp[(-2)+-4]
 16755  01B234  0EFA               	movlw	-6
 16756  01B236  006F FF8F FFD9     	movff	plusw1,fsr2l
 16757  01B23C  0EFB               	movlw	-5
 16758  01B23E  006F FF8F FFDA     	movff	plusw1,fsr2h
 16759  01B244  006F FF78  F032    	movff	postinc2,btemp+8
 16760  01B24A  006F FF74  F033    	movff	postdec2,btemp+9
 16761  01B250  5034               	movf	(btemp+10)^0,w,c
 16762  01B252  2632               	addwf	(btemp+8)^0,f,c
 16763  01B254  5035               	movf	(btemp+11)^0,w,c
 16764  01B256  2233               	addwfc	(btemp+9)^0,f,c
 16765  01B258  0060  F0CB  FFF6   	movff	btemp+8,tblptrl
 16766  01B25E  0060  F0CF  FFF7   	movff	btemp+9,tblptrh
 16767  01B264                     	if	0	;tblptru may be non-zero
 16768  01B264                     	endif
 16769  01B264                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16770  01B264  0E00               	movlw	low (__mediumconst shr (0+16))
 16771  01B266  6EF8               	movwf	tblptru,c
 16772  01B268                     	endif
 16773                           
 16774                           ;stkvar	_i @ sp[(-2)+0]
 16775  01B268  0EFE               	movlw	-2
 16776  01B26A  006F FF8C  F034    	movff	plusw1,btemp+10
 16777  01B270  0EFF               	movlw	-1
 16778  01B272  006F FF8C  F035    	movff	plusw1,btemp+11
 16779                           
 16780                           ;stkvar	_d @ sp[(-2)+-2]
 16781  01B278  0EFC               	movlw	-4
 16782  01B27A  006F FF8C  F032    	movff	plusw1,btemp+8
 16783  01B280  0EFD               	movlw	-3
 16784  01B282  006F FF8C  F033    	movff	plusw1,btemp+9
 16785  01B288  5034               	movf	(btemp+10)^0,w,c
 16786  01B28A  2432               	addwf	(btemp+8)^0,w,c
 16787  01B28C  6ED9               	movwf	fsr2l,c
 16788  01B28E  5035               	movf	(btemp+11)^0,w,c
 16789  01B290  2033               	addwfc	(btemp+9)^0,w,c
 16790  01B292  6EDA               	movwf	fsr2h,c
 16791  01B294  0008               	tblrd		*
 16792  01B296  006F FFD7 FFDF     	movff	tablat,indf2
 16793                           
 16794                           ;stkvar	_i @ sp[(-2)+0]
 16795  01B29C  0EFE               	movlw	-2
 16796  01B29E  50E3               	movf	plusw1,w,c
 16797  01B2A0  0F01               	addlw	1
 16798  01B2A2  6E2A               	movwf	btemp^0,c
 16799  01B2A4  0EFE               	movlw	-2
 16800  01B2A6  0060  F0AB  FFE3   	movff	btemp,plusw1
 16801  01B2AC  6A2A               	clrf	btemp^0,c
 16802  01B2AE  0EFF               	movlw	-1
 16803  01B2B0  50E3               	movf	plusw1,w,c
 16804  01B2B2  202A               	addwfc	btemp^0,w,c
 16805  01B2B4  6E2A               	movwf	btemp^0,c
 16806  01B2B6  0EFF               	movlw	-1
 16807  01B2B8  0060  F0AB  FFE3   	movff	btemp,plusw1
 16808  01B2BE                     l16321:
 16809  01B2BE  0E9F               	movlw	159
 16810  01B2C0  6E34               	movwf	(btemp+10)^0,c
 16811  01B2C2  0EFF               	movlw	255
 16812  01B2C4  6E35               	movwf	(btemp+11)^0,c
 16813                           
 16814                           ;stkvar	_i @ sp[(-2)+0]
 16815  01B2C6  0EFE               	movlw	-2
 16816  01B2C8  006F FF8C  F032    	movff	plusw1,btemp+8
 16817  01B2CE  0EFF               	movlw	-1
 16818  01B2D0  006F FF8C  F033    	movff	plusw1,btemp+9
 16819                           
 16820                           ;stkvar	_p @ sp[(-2)+-4]
 16821  01B2D6  0EFA               	movlw	-6
 16822  01B2D8  006F FF8F FFD9     	movff	plusw1,fsr2l
 16823  01B2DE  0EFB               	movlw	-5
 16824  01B2E0  006F FF8F FFDA     	movff	plusw1,fsr2h
 16825  01B2E6  006F FF78  F030    	movff	postinc2,btemp+6
 16826  01B2EC  006F FF74  F031    	movff	postdec2,btemp+7
 16827  01B2F2  5032               	movf	(btemp+8)^0,w,c
 16828  01B2F4  2630               	addwf	(btemp+6)^0,f,c
 16829  01B2F6  5033               	movf	(btemp+9)^0,w,c
 16830  01B2F8  2231               	addwfc	(btemp+7)^0,f,c
 16831  01B2FA  0060  F0C3  FFF6   	movff	btemp+6,tblptrl
 16832  01B300  0060  F0C7  FFF7   	movff	btemp+7,tblptrh
 16833  01B306                     	if	0	;tblptru may be non-zero
 16834  01B306                     	endif
 16835  01B306                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16836  01B306  0E00               	movlw	low (__mediumconst shr (0+16))
 16837  01B308  6EF8               	movwf	tblptru,c
 16838  01B30A                     	endif
 16839  01B30A  0008               	tblrd		*
 16840  01B30C  50F5               	movf	tablat,w,c
 16841  01B30E  6E32               	movwf	(btemp+8)^0,c
 16842  01B310  6A33               	clrf	(btemp+9)^0,c
 16843  01B312  0E20               	movlw	32
 16844  01B314  1232               	iorwf	(btemp+8)^0,f,c
 16845  01B316  0E00               	movlw	0
 16846  01B318  1233               	iorwf	(btemp+9)^0,f,c
 16847  01B31A  5034               	movf	(btemp+10)^0,w,c
 16848  01B31C  2632               	addwf	(btemp+8)^0,f,c
 16849  01B31E  5035               	movf	(btemp+11)^0,w,c
 16850  01B320  2233               	addwfc	(btemp+9)^0,f,c
 16851  01B322  5033               	movf	(btemp+9)^0,w,c
 16852  01B324  E112               	bnz	l16325
 16853  01B326  0E1A               	movlw	26
 16854  01B328  5C32               	subwf	(btemp+8)^0,w,c
 16855  01B32A  B0D8               	btfsc	status,0,c
 16856  01B32C  D00E               	goto	u15840
 16857                           
 16858                           ;stkvar	_i @ sp[(-2)+0]
 16859  01B32E  0EFF               	movlw	-1
 16860  01B330  BEE3               	btfsc	plusw1,7,c
 16861  01B332  D778               	goto	l16317
 16862  01B334  0EFF               	movlw	-1
 16863  01B336  50E3               	movf	plusw1,w,c
 16864  01B338  E108               	bnz	u15840
 16865  01B33A  0EFE               	movlw	-2
 16866  01B33C  006F FF8C  F02A    	movff	plusw1,btemp
 16867  01B342  0E06               	movlw	6
 16868  01B344  5E2A               	subwf	btemp^0,f,c
 16869  01B346  A0D8               	btfss	status,0,c
 16870  01B348  D76D               	goto	l16317
 16871  01B34A                     u15840:
 16872  01B34A                     l16325:
 16873                           
 16874                           ;stkvar	_i @ sp[(-2)+0]
 16875  01B34A  0EFE               	movlw	-2
 16876  01B34C  006F FF8C  F034    	movff	plusw1,btemp+10
 16877  01B352  0EFF               	movlw	-1
 16878  01B354  006F FF8C  F035    	movff	plusw1,btemp+11
 16879                           
 16880                           ;stkvar	_p @ sp[(-2)+-4]
 16881  01B35A  0EFA               	movlw	-6
 16882  01B35C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16883  01B362  0EFB               	movlw	-5
 16884  01B364  006F FF8F FFDA     	movff	plusw1,fsr2h
 16885  01B36A  5034               	movf	(btemp+10)^0,w,c
 16886  01B36C  26DE               	addwf	postinc2,f,c
 16887  01B36E  5035               	movf	(btemp+11)^0,w,c
 16888  01B370  22DD               	addwfc	postdec2,f,c
 16889                           
 16890                           ;stkvar	_i @ sp[(-2)+0]
 16891  01B372  0EFE               	movlw	-2
 16892  01B374  006F FF8C  F034    	movff	plusw1,btemp+10
 16893  01B37A  0EFF               	movlw	-1
 16894  01B37C  006F FF8C  F035    	movff	plusw1,btemp+11
 16895                           
 16896                           ;stkvar	_d @ sp[(-2)+-2]
 16897  01B382  0EFC               	movlw	-4
 16898  01B384  006F FF8C  F032    	movff	plusw1,btemp+8
 16899  01B38A  0EFD               	movlw	-3
 16900  01B38C  006F FF8C  F033    	movff	plusw1,btemp+9
 16901  01B392  5034               	movf	(btemp+10)^0,w,c
 16902  01B394  2432               	addwf	(btemp+8)^0,w,c
 16903  01B396  6ED9               	movwf	fsr2l,c
 16904  01B398  5035               	movf	(btemp+11)^0,w,c
 16905  01B39A  2033               	addwfc	(btemp+9)^0,w,c
 16906  01B39C  6EDA               	movwf	fsr2h,c
 16907  01B39E  0E00               	movlw	0
 16908  01B3A0  6EDF               	movwf	indf2,c
 16909                           
 16910                           ; _getname: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16911  01B3A2  0EFA               	movlw	250
 16912  01B3A4  26E1               	addwf	fsr1l,f,c
 16913  01B3A6  0EFF               	movlw	255
 16914  01B3A8  22E2               	addwfc	fsr1h,f,c
 16915  01B3AA  0012               	return		;funcret
 16916  01B3AC                     __end_of_getname:
 16917                           	opt callstack 0
 16918                           
 16919 ;; *************** function ___secs_to_tm *****************
 16920 ;; Defined at:
 16921 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__secs_to_tm.c"
 16922 ;; Parameters:    Size  Location     Type
 16923 ;;  t               8  [STACK] long long 
 16924 ;;  tm              2  [STACK] PTR struct tm
 16925 ;;		 -> localtime@tm(24), 
 16926 ;; Auto vars:     Size  Location     Type
 16927 ;;  years           8  [STACK] long long 
 16928 ;;  days            8  [STACK] long long 
 16929 ;;  secs            8  [STACK] long long 
 16930 ;;  remdays         4  [STACK] long 
 16931 ;;  q_cycles        4  [STACK] long 
 16932 ;;  c_cycles        4  [STACK] long 
 16933 ;;  remyears        4  [STACK] long 
 16934 ;;  remsecs         4  [STACK] long 
 16935 ;;  qc_cycles       4  [STACK] long 
 16936 ;;  months          2  [STACK] int 
 16937 ;;  leap            2  [STACK] int 
 16938 ;;  yday            2  [STACK] int 
 16939 ;;  wday            2  [STACK] int 
 16940 ;; Return value:  Size  Location     Type
 16941 ;;                  4  [STACK] long 
 16942 ;; Registers used:
 16943 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru
 16944 ;; Tracked objects:
 16945 ;;		On entry : 0/39
 16946 ;;		On exit  : 0/0
 16947 ;;		Unchanged: 0/0
 16948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16953 ;;Total ram usage:        0 bytes
 16954 ;; Hardware stack levels used:    1
 16955 ;; Hardware stack levels required when called:   16
 16956 ;; This function calls:
 16957 ;;		___aldiv
 16958 ;;		___almod
 16959 ;;		___aodiv
 16960 ;;		___aomod
 16961 ;;		___lmul
 16962 ;;		___omul
 16963 ;; This function is called by:
 16964 ;;		___localtime_r
 16965 ;; This function uses a reentrant model
 16966 ;;
 16967                           
 16968                           	psect	text49
 16969  01281A                     __ptext49:
 16970                           	opt callstack 0
 16971  01281A                     ___secs_to_tm:
 16972                           	opt callstack 0
 16973                           
 16974                           ; autosize = 57, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 16975  01281A  0E39               	movlw	57
 16976  01281C  26E1               	addwf	fsr1l,f,c
 16977  01281E  0E00               	movlw	0
 16978  012820  22E2               	addwfc	fsr1h,f,c
 16979                           
 16980                           ;stkvar	_t @ sp[(-57)+-8]
 16981                           
 16982                           ;incstack = 0
 16983  012822  0EC6               	movlw	-58
 16984  012824  AEE3               	btfss	plusw1,7,c
 16985  012826  D026               	goto	u16460
 16986  012828  0EC1               	movlw	-63
 16987  01282A  006F FF8C  F02A    	movff	plusw1,btemp
 16988  012830  0E80               	movlw	128
 16989  012832  5E2A               	subwf	btemp^0,f,c
 16990  012834  0EC2               	movlw	-62
 16991  012836  006F FF8C  F02A    	movff	plusw1,btemp
 16992  01283C  0EBD               	movlw	189
 16993  01283E  5A2A               	subwfb	btemp^0,f,c
 16994  012840  0EC3               	movlw	-61
 16995  012842  006F FF8C  F02A    	movff	plusw1,btemp
 16996  012848  0E0E               	movlw	14
 16997  01284A  5A2A               	subwfb	btemp^0,f,c
 16998  01284C  0EC4               	movlw	-60
 16999  01284E  006F FF8C  F02A    	movff	plusw1,btemp
 17000  012854  0EFF               	movlw	255
 17001  012856  5A2A               	subwfb	btemp^0,f,c
 17002  012858  0EC5               	movlw	-59
 17003  01285A  006F FF8C  F02A    	movff	plusw1,btemp
 17004  012860  0EFF               	movlw	255
 17005  012862  5A2A               	subwfb	btemp^0,f,c
 17006  012864  0EC6               	movlw	-58
 17007  012866  006F FF8C  F02A    	movff	plusw1,btemp
 17008  01286C  0EFF               	movlw	255
 17009  01286E  5A2A               	subwfb	btemp^0,f,c
 17010  012870  A0D8               	btfss	status,0,c
 17011  012872  D028               	goto	u16470
 17012  012874                     u16460:
 17013                           
 17014                           ;stkvar	_t @ sp[(-57)+-8]
 17015  012874  0EC6               	movlw	-58
 17016  012876  BEE3               	btfsc	plusw1,7,c
 17017  012878  D02F               	goto	l16893
 17018  01287A  0EC6               	movlw	-58
 17019  01287C  50E3               	movf	plusw1,w,c
 17020  01287E  E122               	bnz	u16470
 17021  012880  0EC5               	movlw	-59
 17022  012882  50E3               	movf	plusw1,w,c
 17023  012884  E11F               	bnz	u16470
 17024  012886  0EC4               	movlw	-60
 17025  012888  50E3               	movf	plusw1,w,c
 17026  01288A  E11C               	bnz	u16470
 17027  01288C  0EBF               	movlw	-65
 17028  01288E  04E3               	decf	plusw1,w,c
 17029  012890  0EC0               	movlw	-64
 17030  012892  006F FF8C  F02A    	movff	plusw1,btemp
 17031  012898  0E7B               	movlw	123
 17032  01289A  5A2A               	subwfb	btemp^0,f,c
 17033  01289C  0EC1               	movlw	-63
 17034  01289E  006F FF8C  F02A    	movff	plusw1,btemp
 17035  0128A4  0E9D               	movlw	157
 17036  0128A6  5A2A               	subwfb	btemp^0,f,c
 17037  0128A8  0EC2               	movlw	-62
 17038  0128AA  006F FF8C  F02A    	movff	plusw1,btemp
 17039  0128B0  0E40               	movlw	64
 17040  0128B2  5A2A               	subwfb	btemp^0,f,c
 17041  0128B4  0EC3               	movlw	-61
 17042  0128B6  006F FF8C  F02A    	movff	plusw1,btemp
 17043  0128BC  0EF1               	movlw	241
 17044  0128BE  5A2A               	subwfb	btemp^0,f,c
 17045  0128C0  A0D8               	btfss	status,0,c
 17046  0128C2  D00A               	goto	l16893
 17047  0128C4                     u16470:
 17048  0128C4  0EFF               	movlw	255
 17049  0128C6  6E2A               	movwf	btemp^0,c
 17050  0128C8  0EFF               	movlw	255
 17051  0128CA  6E2B               	movwf	(btemp+1)^0,c
 17052  0128CC  0EFF               	movlw	255
 17053  0128CE  6E2C               	movwf	(btemp+2)^0,c
 17054  0128D0  0EFF               	movlw	255
 17055  0128D2  6E2D               	movwf	(btemp+3)^0,c
 17056  0128D4  EF71  F09C         	goto	l3858
 17057  0128D8                     l16893:
 17058                           
 17059                           ;stkvar	_t @ sp[(-57)+-8]
 17060  0128D8  0EBF               	movlw	-65
 17061  0128DA  50E3               	movf	plusw1,w,c
 17062  0128DC  0F80               	addlw	128
 17063  0128DE  6E3A               	movwf	(btemp+16)^0,c
 17064  0128E0  0EC0               	movlw	-64
 17065  0128E2  006F FF8C  F03B    	movff	plusw1,btemp+17
 17066  0128E8  0EA2               	movlw	162
 17067  0128EA  223B               	addwfc	(btemp+17)^0,f,c
 17068  0128EC  0EC1               	movlw	-63
 17069  0128EE  006F FF8C  F03C    	movff	plusw1,btemp+18
 17070  0128F4  0E43               	movlw	67
 17071  0128F6  223C               	addwfc	(btemp+18)^0,f,c
 17072  0128F8  0EC2               	movlw	-62
 17073  0128FA  006F FF8C  F03D    	movff	plusw1,btemp+19
 17074  012900  0EC7               	movlw	199
 17075  012902  223D               	addwfc	(btemp+19)^0,f,c
 17076  012904  0EC3               	movlw	-61
 17077  012906  006F FF8C  F03E    	movff	plusw1,btemp+20
 17078  01290C  0EFF               	movlw	255
 17079  01290E  223E               	addwfc	(btemp+20)^0,f,c
 17080  012910  0EC4               	movlw	-60
 17081  012912  006F FF8C  F03F    	movff	plusw1,btemp+21
 17082  012918  0EFF               	movlw	255
 17083  01291A  223F               	addwfc	(btemp+21)^0,f,c
 17084  01291C  0EC5               	movlw	-59
 17085  01291E  006F FF8C  F040    	movff	plusw1,btemp+22
 17086  012924  0EFF               	movlw	255
 17087  012926  2240               	addwfc	(btemp+22)^0,f,c
 17088  012928  0EC6               	movlw	-58
 17089  01292A  006F FF8C  F041    	movff	plusw1,btemp+23
 17090  012930  0EFF               	movlw	255
 17091  012932  2241               	addwfc	(btemp+23)^0,f,c
 17092                           
 17093                           ;stkvar	_secs @ sp[(-57)+17]
 17094  012934  0ED8               	movlw	-40
 17095  012936  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 17096  01293C  0ED9               	movlw	-39
 17097  01293E  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 17098  012944  0EDA               	movlw	-38
 17099  012946  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 17100  01294C  0EDB               	movlw	-37
 17101  01294E  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 17102  012954  0EDC               	movlw	-36
 17103  012956  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 17104  01295C  0EDD               	movlw	-35
 17105  01295E  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 17106  012964  0EDE               	movlw	-34
 17107  012966  0060  F103  FFE3   	movff	btemp+22,plusw1
 17108  01296C  0EDF               	movlw	-33
 17109  01296E  0060  F107  FFE3   	movff	btemp+23,plusw1
 17110  012974  0E80               	movlw	128
 17111  012976  6EE6               	movwf	postinc1,c
 17112  012978  0E51               	movlw	81
 17113  01297A  6EE6               	movwf	postinc1,c
 17114  01297C  0E01               	movlw	1
 17115  01297E  6EE6               	movwf	postinc1,c
 17116  012980  0E00               	movlw	0
 17117  012982  6EE6               	movwf	postinc1,c
 17118  012984  0E00               	movlw	0
 17119  012986  6EE6               	movwf	postinc1,c
 17120  012988  0E00               	movlw	0
 17121  01298A  6EE6               	movwf	postinc1,c
 17122  01298C  0E00               	movlw	0
 17123  01298E  6EE6               	movwf	postinc1,c
 17124  012990  0E00               	movlw	0
 17125  012992  6EE6               	movwf	postinc1,c
 17126                           
 17127                           ;stkvar	_secs @ sp[(-65)+17]
 17128  012994  50E1               	movf	fsr1l,w,c
 17129  012996  0FD0               	addlw	-48
 17130  012998  6ED9               	movwf	fsr2l,c
 17131  01299A  50E2               	movf	fsr1h,w,c
 17132  01299C  6EDA               	movwf	fsr2h,c
 17133  01299E  0EFF               	movlw	255
 17134  0129A0  22DA               	addwfc	fsr2h,f,c
 17135  0129A2  006F FF7B FFE6     	movff	postinc2,postinc1
 17136  0129A8  006F FF7B FFE6     	movff	postinc2,postinc1
 17137  0129AE  006F FF7B FFE6     	movff	postinc2,postinc1
 17138  0129B4  006F FF7B FFE6     	movff	postinc2,postinc1
 17139  0129BA  006F FF7B FFE6     	movff	postinc2,postinc1
 17140  0129C0  006F FF7B FFE6     	movff	postinc2,postinc1
 17141  0129C6  006F FF7B FFE6     	movff	postinc2,postinc1
 17142  0129CC  006F FF7B FFE6     	movff	postinc2,postinc1
 17143  0129D2  EC04  F0E2         	call	___aodiv	;wreg free
 17144  0129D6  52E5               	movf	postdec1,f,c
 17145  0129D8  006F FF9C  F041    	movff	indf1,btemp+23
 17146  0129DE  52E5               	movf	postdec1,f,c
 17147  0129E0  006F FF9C  F040    	movff	indf1,btemp+22
 17148  0129E6  52E5               	movf	postdec1,f,c
 17149  0129E8  006F FF9C  F03F    	movff	indf1,btemp+21
 17150  0129EE  52E5               	movf	postdec1,f,c
 17151  0129F0  006F FF9C  F03E    	movff	indf1,btemp+20
 17152  0129F6  52E5               	movf	postdec1,f,c
 17153  0129F8  006F FF9C  F03D    	movff	indf1,btemp+19
 17154  0129FE  52E5               	movf	postdec1,f,c
 17155  012A00  006F FF9C  F03C    	movff	indf1,btemp+18
 17156  012A06  52E5               	movf	postdec1,f,c
 17157  012A08  006F FF9C  F03B    	movff	indf1,btemp+17
 17158  012A0E  52E5               	movf	postdec1,f,c
 17159  012A10  006F FF9C  F03A    	movff	indf1,btemp+16
 17160  012A16  0EF8               	movlw	248
 17161  012A18  26E1               	addwf	fsr1l,f,c
 17162  012A1A  0EFF               	movlw	255
 17163  012A1C  22E2               	addwfc	fsr1h,f,c
 17164                           
 17165                           ;stkvar	_days @ sp[(-57)+9]
 17166  012A1E  0ED0               	movlw	-48
 17167  012A20  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 17168  012A26  0ED1               	movlw	-47
 17169  012A28  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 17170  012A2E  0ED2               	movlw	-46
 17171  012A30  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 17172  012A36  0ED3               	movlw	-45
 17173  012A38  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 17174  012A3E  0ED4               	movlw	-44
 17175  012A40  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 17176  012A46  0ED5               	movlw	-43
 17177  012A48  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 17178  012A4E  0ED6               	movlw	-42
 17179  012A50  0060  F103  FFE3   	movff	btemp+22,plusw1
 17180  012A56  0ED7               	movlw	-41
 17181  012A58  0060  F107  FFE3   	movff	btemp+23,plusw1
 17182  012A5E  0E80               	movlw	128
 17183  012A60  6EE6               	movwf	postinc1,c
 17184  012A62  0E51               	movlw	81
 17185  012A64  6EE6               	movwf	postinc1,c
 17186  012A66  0E01               	movlw	1
 17187  012A68  6EE6               	movwf	postinc1,c
 17188  012A6A  0E00               	movlw	0
 17189  012A6C  6EE6               	movwf	postinc1,c
 17190  012A6E  0E00               	movlw	0
 17191  012A70  6EE6               	movwf	postinc1,c
 17192  012A72  0E00               	movlw	0
 17193  012A74  6EE6               	movwf	postinc1,c
 17194  012A76  0E00               	movlw	0
 17195  012A78  6EE6               	movwf	postinc1,c
 17196  012A7A  0E00               	movlw	0
 17197  012A7C  6EE6               	movwf	postinc1,c
 17198                           
 17199                           ;stkvar	_secs @ sp[(-65)+17]
 17200  012A7E  50E1               	movf	fsr1l,w,c
 17201  012A80  0FD0               	addlw	-48
 17202  012A82  6ED9               	movwf	fsr2l,c
 17203  012A84  50E2               	movf	fsr1h,w,c
 17204  012A86  6EDA               	movwf	fsr2h,c
 17205  012A88  0EFF               	movlw	255
 17206  012A8A  22DA               	addwfc	fsr2h,f,c
 17207  012A8C  006F FF7B FFE6     	movff	postinc2,postinc1
 17208  012A92  006F FF7B FFE6     	movff	postinc2,postinc1
 17209  012A98  006F FF7B FFE6     	movff	postinc2,postinc1
 17210  012A9E  006F FF7B FFE6     	movff	postinc2,postinc1
 17211  012AA4  006F FF7B FFE6     	movff	postinc2,postinc1
 17212  012AAA  006F FF7B FFE6     	movff	postinc2,postinc1
 17213  012AB0  006F FF7B FFE6     	movff	postinc2,postinc1
 17214  012AB6  006F FF7B FFE6     	movff	postinc2,postinc1
 17215  012ABC  ECF0  F0E7         	call	___aomod	;wreg free
 17216  012AC0  52E5               	movf	postdec1,f,c
 17217  012AC2  006F FF9C  F041    	movff	indf1,btemp+23
 17218  012AC8  52E5               	movf	postdec1,f,c
 17219  012ACA  006F FF9C  F040    	movff	indf1,btemp+22
 17220  012AD0  52E5               	movf	postdec1,f,c
 17221  012AD2  006F FF9C  F03F    	movff	indf1,btemp+21
 17222  012AD8  52E5               	movf	postdec1,f,c
 17223  012ADA  006F FF9C  F03E    	movff	indf1,btemp+20
 17224  012AE0  52E5               	movf	postdec1,f,c
 17225  012AE2  006F FF9C  F03D    	movff	indf1,btemp+19
 17226  012AE8  52E5               	movf	postdec1,f,c
 17227  012AEA  006F FF9C  F03C    	movff	indf1,btemp+18
 17228  012AF0  52E5               	movf	postdec1,f,c
 17229  012AF2  006F FF9C  F03B    	movff	indf1,btemp+17
 17230  012AF8  52E5               	movf	postdec1,f,c
 17231  012AFA  006F FF9C  F03A    	movff	indf1,btemp+16
 17232  012B00  0EF8               	movlw	248
 17233  012B02  26E1               	addwf	fsr1l,f,c
 17234  012B04  0EFF               	movlw	255
 17235  012B06  22E2               	addwfc	fsr1h,f,c
 17236  012B08  0060  F0E8  F032   	movff	btemp+16,btemp+8
 17237  012B0E  0060  F0EC  F033   	movff	btemp+17,btemp+9
 17238  012B14  0060  F0F0  F034   	movff	btemp+18,btemp+10
 17239  012B1A  0060  F0F4  F035   	movff	btemp+19,btemp+11
 17240                           
 17241                           ;stkvar	_remsecs @ sp[(-57)+41]
 17242  012B20  0EF0               	movlw	-16
 17243  012B22  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 17244  012B28  0EF1               	movlw	-15
 17245  012B2A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 17246  012B30  0EF2               	movlw	-14
 17247  012B32  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17248  012B38  0EF3               	movlw	-13
 17249  012B3A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17250                           
 17251                           ;stkvar	_remsecs @ sp[(-57)+41]
 17252  012B40  0EF3               	movlw	-13
 17253  012B42  AEE3               	btfss	plusw1,7,c
 17254  012B44  D01F               	goto	l16905
 17255                           
 17256                           ;stkvar	_remsecs @ sp[(-57)+41]
 17257  012B46  50E1               	movf	fsr1l,w,c
 17258  012B48  0FF0               	addlw	-16
 17259  012B4A  6ED9               	movwf	fsr2l,c
 17260  012B4C  50E2               	movf	fsr1h,w,c
 17261  012B4E  6EDA               	movwf	fsr2h,c
 17262  012B50  0EFF               	movlw	255
 17263  012B52  22DA               	addwfc	fsr2h,f,c
 17264  012B54  0E80               	movlw	128
 17265  012B56  26DE               	addwf	postinc2,f,c
 17266  012B58  0E51               	movlw	81
 17267  012B5A  22DE               	addwfc	postinc2,f,c
 17268  012B5C  0E01               	movlw	1
 17269  012B5E  22DE               	addwfc	postinc2,f,c
 17270  012B60  0E00               	movlw	0
 17271  012B62  22DE               	addwfc	postinc2,f,c
 17272                           
 17273                           ;stkvar	_days @ sp[(-57)+9]
 17274  012B64  50E1               	movf	fsr1l,w,c
 17275  012B66  0FD0               	addlw	-48
 17276  012B68  6ED9               	movwf	fsr2l,c
 17277  012B6A  50E2               	movf	fsr1h,w,c
 17278  012B6C  6EDA               	movwf	fsr2h,c
 17279  012B6E  0EFF               	movlw	255
 17280  012B70  22DA               	addwfc	fsr2h,f,c
 17281  012B72  06DE               	decf	postinc2,f,c
 17282  012B74  0E00               	movlw	0
 17283  012B76  5ADE               	subwfb	postinc2,f,c
 17284  012B78  5ADE               	subwfb	postinc2,f,c
 17285  012B7A  5ADE               	subwfb	postinc2,f,c
 17286  012B7C  5ADE               	subwfb	postinc2,f,c
 17287  012B7E  5ADE               	subwfb	postinc2,f,c
 17288  012B80  5ADE               	subwfb	postinc2,f,c
 17289  012B82  5ADE               	subwfb	postinc2,f,c
 17290  012B84                     l16905:
 17291  012B84  0E07               	movlw	7
 17292  012B86  6EE6               	movwf	postinc1,c
 17293  012B88  0E00               	movlw	0
 17294  012B8A  6EE6               	movwf	postinc1,c
 17295  012B8C  0E00               	movlw	0
 17296  012B8E  6EE6               	movwf	postinc1,c
 17297  012B90  0E00               	movlw	0
 17298  012B92  6EE6               	movwf	postinc1,c
 17299  012B94  0E00               	movlw	0
 17300  012B96  6EE6               	movwf	postinc1,c
 17301  012B98  0E00               	movlw	0
 17302  012B9A  6EE6               	movwf	postinc1,c
 17303  012B9C  0E00               	movlw	0
 17304  012B9E  6EE6               	movwf	postinc1,c
 17305  012BA0  0E00               	movlw	0
 17306  012BA2  6EE6               	movwf	postinc1,c
 17307                           
 17308                           ;stkvar	_days @ sp[(-65)+9]
 17309  012BA4  0EC8               	movlw	-56
 17310  012BA6  50E3               	movf	plusw1,w,c
 17311  012BA8  0F03               	addlw	3
 17312  012BAA  6E3A               	movwf	(btemp+16)^0,c
 17313  012BAC  0EC9               	movlw	-55
 17314  012BAE  006F FF8C  F03B    	movff	plusw1,btemp+17
 17315  012BB4  0E00               	movlw	0
 17316  012BB6  223B               	addwfc	(btemp+17)^0,f,c
 17317  012BB8  0ECA               	movlw	-54
 17318  012BBA  006F FF8C  F03C    	movff	plusw1,btemp+18
 17319  012BC0  0E00               	movlw	0
 17320  012BC2  223C               	addwfc	(btemp+18)^0,f,c
 17321  012BC4  0ECB               	movlw	-53
 17322  012BC6  006F FF8C  F03D    	movff	plusw1,btemp+19
 17323  012BCC  0E00               	movlw	0
 17324  012BCE  223D               	addwfc	(btemp+19)^0,f,c
 17325  012BD0  0ECC               	movlw	-52
 17326  012BD2  006F FF8C  F03E    	movff	plusw1,btemp+20
 17327  012BD8  0E00               	movlw	0
 17328  012BDA  223E               	addwfc	(btemp+20)^0,f,c
 17329  012BDC  0ECD               	movlw	-51
 17330  012BDE  006F FF8C  F03F    	movff	plusw1,btemp+21
 17331  012BE4  0E00               	movlw	0
 17332  012BE6  223F               	addwfc	(btemp+21)^0,f,c
 17333  012BE8  0ECE               	movlw	-50
 17334  012BEA  006F FF8C  F040    	movff	plusw1,btemp+22
 17335  012BF0  0E00               	movlw	0
 17336  012BF2  2240               	addwfc	(btemp+22)^0,f,c
 17337  012BF4  0ECF               	movlw	-49
 17338  012BF6  006F FF8C  F041    	movff	plusw1,btemp+23
 17339  012BFC  0E00               	movlw	0
 17340  012BFE  2241               	addwfc	(btemp+23)^0,f,c
 17341  012C00  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 17342  012C06  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 17343  012C0C  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 17344  012C12  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 17345  012C18  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 17346  012C1E  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 17347  012C24  0060  F103  FFE6   	movff	btemp+22,postinc1
 17348  012C2A  0060  F107  FFE6   	movff	btemp+23,postinc1
 17349  012C30  ECF0  F0E7         	call	___aomod	;wreg free
 17350  012C34  52E5               	movf	postdec1,f,c
 17351  012C36  006F FF9C  F041    	movff	indf1,btemp+23
 17352  012C3C  52E5               	movf	postdec1,f,c
 17353  012C3E  006F FF9C  F040    	movff	indf1,btemp+22
 17354  012C44  52E5               	movf	postdec1,f,c
 17355  012C46  006F FF9C  F03F    	movff	indf1,btemp+21
 17356  012C4C  52E5               	movf	postdec1,f,c
 17357  012C4E  006F FF9C  F03E    	movff	indf1,btemp+20
 17358  012C54  52E5               	movf	postdec1,f,c
 17359  012C56  006F FF9C  F03D    	movff	indf1,btemp+19
 17360  012C5C  52E5               	movf	postdec1,f,c
 17361  012C5E  006F FF9C  F03C    	movff	indf1,btemp+18
 17362  012C64  52E5               	movf	postdec1,f,c
 17363  012C66  006F FF9C  F03B    	movff	indf1,btemp+17
 17364  012C6C  52E5               	movf	postdec1,f,c
 17365  012C6E  006F FF9C  F03A    	movff	indf1,btemp+16
 17366  012C74  0EF8               	movlw	248
 17367  012C76  26E1               	addwf	fsr1l,f,c
 17368  012C78  0EFF               	movlw	255
 17369  012C7A  22E2               	addwfc	fsr1h,f,c
 17370  012C7C  0060  F0E8  F034   	movff	btemp+16,btemp+10
 17371  012C82  0060  F0EC  F035   	movff	btemp+17,btemp+11
 17372                           
 17373                           ;stkvar	_wday @ sp[(-57)+55]
 17374  012C88  0EFE               	movlw	-2
 17375  012C8A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17376  012C90  0EFF               	movlw	-1
 17377  012C92  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17378                           
 17379                           ;stkvar	_wday @ sp[(-57)+55]
 17380  012C98  0EFF               	movlw	-1
 17381  012C9A  AEE3               	btfss	plusw1,7,c
 17382  012C9C  D011               	goto	l16911
 17383                           
 17384                           ;stkvar	_wday @ sp[(-57)+55]
 17385  012C9E  0EFE               	movlw	-2
 17386  012CA0  50E3               	movf	plusw1,w,c
 17387  012CA2  0F07               	addlw	7
 17388  012CA4  6E2A               	movwf	btemp^0,c
 17389  012CA6  0EFE               	movlw	-2
 17390  012CA8  0060  F0AB  FFE3   	movff	btemp,plusw1
 17391  012CAE  6A2A               	clrf	btemp^0,c
 17392  012CB0  0EFF               	movlw	-1
 17393  012CB2  50E3               	movf	plusw1,w,c
 17394  012CB4  202A               	addwfc	btemp^0,w,c
 17395  012CB6  6E2A               	movwf	btemp^0,c
 17396  012CB8  0EFF               	movlw	-1
 17397  012CBA  0060  F0AB  FFE3   	movff	btemp,plusw1
 17398  012CC0                     l16911:
 17399  012CC0  0EB1               	movlw	177
 17400  012CC2  6EE6               	movwf	postinc1,c
 17401  012CC4  0E3A               	movlw	58
 17402  012CC6  6EE6               	movwf	postinc1,c
 17403  012CC8  0E02               	movlw	2
 17404  012CCA  6EE6               	movwf	postinc1,c
 17405  012CCC  0E00               	movlw	0
 17406  012CCE  6EE6               	movwf	postinc1,c
 17407  012CD0  0E00               	movlw	0
 17408  012CD2  6EE6               	movwf	postinc1,c
 17409  012CD4  0E00               	movlw	0
 17410  012CD6  6EE6               	movwf	postinc1,c
 17411  012CD8  0E00               	movlw	0
 17412  012CDA  6EE6               	movwf	postinc1,c
 17413  012CDC  0E00               	movlw	0
 17414  012CDE  6EE6               	movwf	postinc1,c
 17415                           
 17416                           ;stkvar	_days @ sp[(-65)+9]
 17417  012CE0  50E1               	movf	fsr1l,w,c
 17418  012CE2  0FC8               	addlw	-56
 17419  012CE4  6ED9               	movwf	fsr2l,c
 17420  012CE6  50E2               	movf	fsr1h,w,c
 17421  012CE8  6EDA               	movwf	fsr2h,c
 17422  012CEA  0EFF               	movlw	255
 17423  012CEC  22DA               	addwfc	fsr2h,f,c
 17424  012CEE  006F FF7B FFE6     	movff	postinc2,postinc1
 17425  012CF4  006F FF7B FFE6     	movff	postinc2,postinc1
 17426  012CFA  006F FF7B FFE6     	movff	postinc2,postinc1
 17427  012D00  006F FF7B FFE6     	movff	postinc2,postinc1
 17428  012D06  006F FF7B FFE6     	movff	postinc2,postinc1
 17429  012D0C  006F FF7B FFE6     	movff	postinc2,postinc1
 17430  012D12  006F FF7B FFE6     	movff	postinc2,postinc1
 17431  012D18  006F FF7B FFE6     	movff	postinc2,postinc1
 17432  012D1E  EC04  F0E2         	call	___aodiv	;wreg free
 17433  012D22  52E5               	movf	postdec1,f,c
 17434  012D24  006F FF9C  F041    	movff	indf1,btemp+23
 17435  012D2A  52E5               	movf	postdec1,f,c
 17436  012D2C  006F FF9C  F040    	movff	indf1,btemp+22
 17437  012D32  52E5               	movf	postdec1,f,c
 17438  012D34  006F FF9C  F03F    	movff	indf1,btemp+21
 17439  012D3A  52E5               	movf	postdec1,f,c
 17440  012D3C  006F FF9C  F03E    	movff	indf1,btemp+20
 17441  012D42  52E5               	movf	postdec1,f,c
 17442  012D44  006F FF9C  F03D    	movff	indf1,btemp+19
 17443  012D4A  52E5               	movf	postdec1,f,c
 17444  012D4C  006F FF9C  F03C    	movff	indf1,btemp+18
 17445  012D52  52E5               	movf	postdec1,f,c
 17446  012D54  006F FF9C  F03B    	movff	indf1,btemp+17
 17447  012D5A  52E5               	movf	postdec1,f,c
 17448  012D5C  006F FF9C  F03A    	movff	indf1,btemp+16
 17449  012D62  0EF8               	movlw	248
 17450  012D64  26E1               	addwf	fsr1l,f,c
 17451  012D66  0EFF               	movlw	255
 17452  012D68  22E2               	addwfc	fsr1h,f,c
 17453  012D6A  0060  F0E8  F032   	movff	btemp+16,btemp+8
 17454  012D70  0060  F0EC  F033   	movff	btemp+17,btemp+9
 17455  012D76  0060  F0F0  F034   	movff	btemp+18,btemp+10
 17456  012D7C  0060  F0F4  F035   	movff	btemp+19,btemp+11
 17457                           
 17458                           ;stkvar	_qc_cycles @ sp[(-57)+45]
 17459  012D82  0EF4               	movlw	-12
 17460  012D84  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 17461  012D8A  0EF5               	movlw	-11
 17462  012D8C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 17463  012D92  0EF6               	movlw	-10
 17464  012D94  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17465  012D9A  0EF7               	movlw	-9
 17466  012D9C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17467  012DA2  0EB1               	movlw	177
 17468  012DA4  6EE6               	movwf	postinc1,c
 17469  012DA6  0E3A               	movlw	58
 17470  012DA8  6EE6               	movwf	postinc1,c
 17471  012DAA  0E02               	movlw	2
 17472  012DAC  6EE6               	movwf	postinc1,c
 17473  012DAE  0E00               	movlw	0
 17474  012DB0  6EE6               	movwf	postinc1,c
 17475  012DB2  0E00               	movlw	0
 17476  012DB4  6EE6               	movwf	postinc1,c
 17477  012DB6  0E00               	movlw	0
 17478  012DB8  6EE6               	movwf	postinc1,c
 17479  012DBA  0E00               	movlw	0
 17480  012DBC  6EE6               	movwf	postinc1,c
 17481  012DBE  0E00               	movlw	0
 17482  012DC0  6EE6               	movwf	postinc1,c
 17483                           
 17484                           ;stkvar	_days @ sp[(-65)+9]
 17485  012DC2  50E1               	movf	fsr1l,w,c
 17486  012DC4  0FC8               	addlw	-56
 17487  012DC6  6ED9               	movwf	fsr2l,c
 17488  012DC8  50E2               	movf	fsr1h,w,c
 17489  012DCA  6EDA               	movwf	fsr2h,c
 17490  012DCC  0EFF               	movlw	255
 17491  012DCE  22DA               	addwfc	fsr2h,f,c
 17492  012DD0  006F FF7B FFE6     	movff	postinc2,postinc1
 17493  012DD6  006F FF7B FFE6     	movff	postinc2,postinc1
 17494  012DDC  006F FF7B FFE6     	movff	postinc2,postinc1
 17495  012DE2  006F FF7B FFE6     	movff	postinc2,postinc1
 17496  012DE8  006F FF7B FFE6     	movff	postinc2,postinc1
 17497  012DEE  006F FF7B FFE6     	movff	postinc2,postinc1
 17498  012DF4  006F FF7B FFE6     	movff	postinc2,postinc1
 17499  012DFA  006F FF7B FFE6     	movff	postinc2,postinc1
 17500  012E00  ECF0  F0E7         	call	___aomod	;wreg free
 17501  012E04  52E5               	movf	postdec1,f,c
 17502  012E06  006F FF9C  F041    	movff	indf1,btemp+23
 17503  012E0C  52E5               	movf	postdec1,f,c
 17504  012E0E  006F FF9C  F040    	movff	indf1,btemp+22
 17505  012E14  52E5               	movf	postdec1,f,c
 17506  012E16  006F FF9C  F03F    	movff	indf1,btemp+21
 17507  012E1C  52E5               	movf	postdec1,f,c
 17508  012E1E  006F FF9C  F03E    	movff	indf1,btemp+20
 17509  012E24  52E5               	movf	postdec1,f,c
 17510  012E26  006F FF9C  F03D    	movff	indf1,btemp+19
 17511  012E2C  52E5               	movf	postdec1,f,c
 17512  012E2E  006F FF9C  F03C    	movff	indf1,btemp+18
 17513  012E34  52E5               	movf	postdec1,f,c
 17514  012E36  006F FF9C  F03B    	movff	indf1,btemp+17
 17515  012E3C  52E5               	movf	postdec1,f,c
 17516  012E3E  006F FF9C  F03A    	movff	indf1,btemp+16
 17517  012E44  0EF8               	movlw	248
 17518  012E46  26E1               	addwf	fsr1l,f,c
 17519  012E48  0EFF               	movlw	255
 17520  012E4A  22E2               	addwfc	fsr1h,f,c
 17521  012E4C  0060  F0E8  F032   	movff	btemp+16,btemp+8
 17522  012E52  0060  F0EC  F033   	movff	btemp+17,btemp+9
 17523  012E58  0060  F0F0  F034   	movff	btemp+18,btemp+10
 17524  012E5E  0060  F0F4  F035   	movff	btemp+19,btemp+11
 17525                           
 17526                           ;stkvar	_remdays @ sp[(-57)+25]
 17527  012E64  0EE0               	movlw	-32
 17528  012E66  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 17529  012E6C  0EE1               	movlw	-31
 17530  012E6E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 17531  012E74  0EE2               	movlw	-30
 17532  012E76  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17533  012E7C  0EE3               	movlw	-29
 17534  012E7E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17535                           
 17536                           ;stkvar	_remdays @ sp[(-57)+25]
 17537  012E84  0EE3               	movlw	-29
 17538  012E86  AEE3               	btfss	plusw1,7,c
 17539  012E88  D01B               	goto	l16919
 17540                           
 17541                           ;stkvar	_remdays @ sp[(-57)+25]
 17542  012E8A  50E1               	movf	fsr1l,w,c
 17543  012E8C  0FE0               	addlw	-32
 17544  012E8E  6ED9               	movwf	fsr2l,c
 17545  012E90  50E2               	movf	fsr1h,w,c
 17546  012E92  6EDA               	movwf	fsr2h,c
 17547  012E94  0EFF               	movlw	255
 17548  012E96  22DA               	addwfc	fsr2h,f,c
 17549  012E98  0EB1               	movlw	177
 17550  012E9A  26DE               	addwf	postinc2,f,c
 17551  012E9C  0E3A               	movlw	58
 17552  012E9E  22DE               	addwfc	postinc2,f,c
 17553  012EA0  0E02               	movlw	2
 17554  012EA2  22DE               	addwfc	postinc2,f,c
 17555  012EA4  0E00               	movlw	0
 17556  012EA6  22DE               	addwfc	postinc2,f,c
 17557                           
 17558                           ;stkvar	_qc_cycles @ sp[(-57)+45]
 17559  012EA8  50E1               	movf	fsr1l,w,c
 17560  012EAA  0FF4               	addlw	-12
 17561  012EAC  6ED9               	movwf	fsr2l,c
 17562  012EAE  50E2               	movf	fsr1h,w,c
 17563  012EB0  6EDA               	movwf	fsr2h,c
 17564  012EB2  0EFF               	movlw	255
 17565  012EB4  22DA               	addwfc	fsr2h,f,c
 17566  012EB6  06DE               	decf	postinc2,f,c
 17567  012EB8  0E00               	movlw	0
 17568  012EBA  5ADE               	subwfb	postinc2,f,c
 17569  012EBC  5ADE               	subwfb	postinc2,f,c
 17570  012EBE  5ADE               	subwfb	postinc2,f,c
 17571  012EC0                     l16919:
 17572  012EC0  0EAC               	movlw	172
 17573  012EC2  6EE6               	movwf	postinc1,c
 17574  012EC4  0E8E               	movlw	142
 17575  012EC6  6EE6               	movwf	postinc1,c
 17576  012EC8  0E00               	movlw	0
 17577  012ECA  6EE6               	movwf	postinc1,c
 17578  012ECC  0E00               	movlw	0
 17579  012ECE  6EE6               	movwf	postinc1,c
 17580                           
 17581                           ;stkvar	_remdays @ sp[(-61)+25]
 17582  012ED0  0EDC               	movlw	-36
 17583  012ED2  006F FF8F FFE6     	movff	plusw1,postinc1
 17584  012ED8  006F FF8F FFE6     	movff	plusw1,postinc1
 17585  012EDE  006F FF8F FFE6     	movff	plusw1,postinc1
 17586  012EE4  006F FF8F FFE6     	movff	plusw1,postinc1
 17587  012EEA  ECB0  F0F1         	call	___aldiv	;wreg free
 17588                           
 17589                           ;stkvar	_c_cycles @ sp[(-57)+33]
 17590  012EEE  0EE8               	movlw	-24
 17591  012EF0  0060  F0AB  FFE3   	movff	btemp,plusw1
 17592  012EF6  0EE9               	movlw	-23
 17593  012EF8  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 17594  012EFE  0EEA               	movlw	-22
 17595  012F00  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 17596  012F06  0EEB               	movlw	-21
 17597  012F08  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 17598                           
 17599                           ;stkvar	_c_cycles @ sp[(-57)+33]
 17600  012F0E  0EE8               	movlw	-24
 17601  012F10  006F FF8C  F02A    	movff	plusw1,btemp
 17602  012F16  0E04               	movlw	4
 17603  012F18  182A               	xorwf	btemp^0,w,c
 17604  012F1A  E116               	bnz	l16925
 17605  012F1C  0EE9               	movlw	-23
 17606  012F1E  50E3               	movf	plusw1,w,c
 17607  012F20  E113               	bnz	l16925
 17608  012F22  0EEA               	movlw	-22
 17609  012F24  50E3               	movf	plusw1,w,c
 17610  012F26  E110               	bnz	l16925
 17611  012F28  0EEB               	movlw	-21
 17612  012F2A  50E3               	movf	plusw1,w,c
 17613  012F2C  A4D8               	btfss	status,2,c
 17614  012F2E  D00C               	goto	l16925
 17615                           
 17616                           ;stkvar	_c_cycles @ sp[(-57)+33]
 17617  012F30  50E1               	movf	fsr1l,w,c
 17618  012F32  0FE8               	addlw	-24
 17619  012F34  6ED9               	movwf	fsr2l,c
 17620  012F36  50E2               	movf	fsr1h,w,c
 17621  012F38  6EDA               	movwf	fsr2h,c
 17622  012F3A  0EFF               	movlw	255
 17623  012F3C  22DA               	addwfc	fsr2h,f,c
 17624  012F3E  06DE               	decf	postinc2,f,c
 17625  012F40  0E00               	movlw	0
 17626  012F42  5ADE               	subwfb	postinc2,f,c
 17627  012F44  5ADE               	subwfb	postinc2,f,c
 17628  012F46  5ADE               	subwfb	postinc2,f,c
 17629  012F48                     l16925:
 17630  012F48  0EAC               	movlw	172
 17631  012F4A  6EE6               	movwf	postinc1,c
 17632  012F4C  0E8E               	movlw	142
 17633  012F4E  6EE6               	movwf	postinc1,c
 17634  012F50  0E00               	movlw	0
 17635  012F52  6EE6               	movwf	postinc1,c
 17636  012F54  0E00               	movlw	0
 17637  012F56  6EE6               	movwf	postinc1,c
 17638                           
 17639                           ;stkvar	_c_cycles @ sp[(-61)+33]
 17640  012F58  0EE4               	movlw	-28
 17641  012F5A  006F FF8F FFE6     	movff	plusw1,postinc1
 17642  012F60  006F FF8F FFE6     	movff	plusw1,postinc1
 17643  012F66  006F FF8F FFE6     	movff	plusw1,postinc1
 17644  012F6C  006F FF8F FFE6     	movff	plusw1,postinc1
 17645  012F72  ECB6  F003         	call	___lmul	;wreg free
 17646                           
 17647                           ;stkvar	_remdays @ sp[(-57)+25]
 17648  012F76  50E1               	movf	fsr1l,w,c
 17649  012F78  0FE0               	addlw	-32
 17650  012F7A  6ED9               	movwf	fsr2l,c
 17651  012F7C  50E2               	movf	fsr1h,w,c
 17652  012F7E  6EDA               	movwf	fsr2h,c
 17653  012F80  0EFF               	movlw	255
 17654  012F82  22DA               	addwfc	fsr2h,f,c
 17655  012F84  502A               	movf	btemp^0,w,c
 17656  012F86  5EDE               	subwf	postinc2,f,c
 17657  012F88  502B               	movf	(btemp+1)^0,w,c
 17658  012F8A  5ADE               	subwfb	postinc2,f,c
 17659  012F8C  502C               	movf	(btemp+2)^0,w,c
 17660  012F8E  5ADE               	subwfb	postinc2,f,c
 17661  012F90  502D               	movf	(btemp+3)^0,w,c
 17662  012F92  5ADE               	subwfb	postinc2,f,c
 17663  012F94  0EB5               	movlw	181
 17664  012F96  6EE6               	movwf	postinc1,c
 17665  012F98  0E05               	movlw	5
 17666  012F9A  6EE6               	movwf	postinc1,c
 17667  012F9C  0E00               	movlw	0
 17668  012F9E  6EE6               	movwf	postinc1,c
 17669  012FA0  0E00               	movlw	0
 17670  012FA2  6EE6               	movwf	postinc1,c
 17671                           
 17672                           ;stkvar	_remdays @ sp[(-61)+25]
 17673  012FA4  0EDC               	movlw	-36
 17674  012FA6  006F FF8F FFE6     	movff	plusw1,postinc1
 17675  012FAC  006F FF8F FFE6     	movff	plusw1,postinc1
 17676  012FB2  006F FF8F FFE6     	movff	plusw1,postinc1
 17677  012FB8  006F FF8F FFE6     	movff	plusw1,postinc1
 17678  012FBE  ECB0  F0F1         	call	___aldiv	;wreg free
 17679                           
 17680                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17681  012FC2  0EE4               	movlw	-28
 17682  012FC4  0060  F0AB  FFE3   	movff	btemp,plusw1
 17683  012FCA  0EE5               	movlw	-27
 17684  012FCC  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 17685  012FD2  0EE6               	movlw	-26
 17686  012FD4  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 17687  012FDA  0EE7               	movlw	-25
 17688  012FDC  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 17689                           
 17690                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17691  012FE2  0EE4               	movlw	-28
 17692  012FE4  006F FF8C  F02A    	movff	plusw1,btemp
 17693  012FEA  0E19               	movlw	25
 17694  012FEC  182A               	xorwf	btemp^0,w,c
 17695  012FEE  E116               	bnz	l16933
 17696  012FF0  0EE5               	movlw	-27
 17697  012FF2  50E3               	movf	plusw1,w,c
 17698  012FF4  E113               	bnz	l16933
 17699  012FF6  0EE6               	movlw	-26
 17700  012FF8  50E3               	movf	plusw1,w,c
 17701  012FFA  E110               	bnz	l16933
 17702  012FFC  0EE7               	movlw	-25
 17703  012FFE  50E3               	movf	plusw1,w,c
 17704  013000  A4D8               	btfss	status,2,c
 17705  013002  D00C               	goto	l16933
 17706                           
 17707                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17708  013004  50E1               	movf	fsr1l,w,c
 17709  013006  0FE4               	addlw	-28
 17710  013008  6ED9               	movwf	fsr2l,c
 17711  01300A  50E2               	movf	fsr1h,w,c
 17712  01300C  6EDA               	movwf	fsr2h,c
 17713  01300E  0EFF               	movlw	255
 17714  013010  22DA               	addwfc	fsr2h,f,c
 17715  013012  06DE               	decf	postinc2,f,c
 17716  013014  0E00               	movlw	0
 17717  013016  5ADE               	subwfb	postinc2,f,c
 17718  013018  5ADE               	subwfb	postinc2,f,c
 17719  01301A  5ADE               	subwfb	postinc2,f,c
 17720  01301C                     l16933:
 17721  01301C  0EB5               	movlw	181
 17722  01301E  6EE6               	movwf	postinc1,c
 17723  013020  0E05               	movlw	5
 17724  013022  6EE6               	movwf	postinc1,c
 17725  013024  0E00               	movlw	0
 17726  013026  6EE6               	movwf	postinc1,c
 17727  013028  0E00               	movlw	0
 17728  01302A  6EE6               	movwf	postinc1,c
 17729                           
 17730                           ;stkvar	_q_cycles @ sp[(-61)+29]
 17731  01302C  0EE0               	movlw	-32
 17732  01302E  006F FF8F FFE6     	movff	plusw1,postinc1
 17733  013034  006F FF8F FFE6     	movff	plusw1,postinc1
 17734  01303A  006F FF8F FFE6     	movff	plusw1,postinc1
 17735  013040  006F FF8F FFE6     	movff	plusw1,postinc1
 17736  013046  ECB6  F003         	call	___lmul	;wreg free
 17737                           
 17738                           ;stkvar	_remdays @ sp[(-57)+25]
 17739  01304A  50E1               	movf	fsr1l,w,c
 17740  01304C  0FE0               	addlw	-32
 17741  01304E  6ED9               	movwf	fsr2l,c
 17742  013050  50E2               	movf	fsr1h,w,c
 17743  013052  6EDA               	movwf	fsr2h,c
 17744  013054  0EFF               	movlw	255
 17745  013056  22DA               	addwfc	fsr2h,f,c
 17746  013058  502A               	movf	btemp^0,w,c
 17747  01305A  5EDE               	subwf	postinc2,f,c
 17748  01305C  502B               	movf	(btemp+1)^0,w,c
 17749  01305E  5ADE               	subwfb	postinc2,f,c
 17750  013060  502C               	movf	(btemp+2)^0,w,c
 17751  013062  5ADE               	subwfb	postinc2,f,c
 17752  013064  502D               	movf	(btemp+3)^0,w,c
 17753  013066  5ADE               	subwfb	postinc2,f,c
 17754  013068  0E6D               	movlw	109
 17755  01306A  6EE6               	movwf	postinc1,c
 17756  01306C  0E01               	movlw	1
 17757  01306E  6EE6               	movwf	postinc1,c
 17758  013070  0E00               	movlw	0
 17759  013072  6EE6               	movwf	postinc1,c
 17760  013074  0E00               	movlw	0
 17761  013076  6EE6               	movwf	postinc1,c
 17762                           
 17763                           ;stkvar	_remdays @ sp[(-61)+25]
 17764  013078  0EDC               	movlw	-36
 17765  01307A  006F FF8F FFE6     	movff	plusw1,postinc1
 17766  013080  006F FF8F FFE6     	movff	plusw1,postinc1
 17767  013086  006F FF8F FFE6     	movff	plusw1,postinc1
 17768  01308C  006F FF8F FFE6     	movff	plusw1,postinc1
 17769  013092  ECB0  F0F1         	call	___aldiv	;wreg free
 17770                           
 17771                           ;stkvar	_remyears @ sp[(-57)+37]
 17772  013096  0EEC               	movlw	-20
 17773  013098  0060  F0AB  FFE3   	movff	btemp,plusw1
 17774  01309E  0EED               	movlw	-19
 17775  0130A0  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 17776  0130A6  0EEE               	movlw	-18
 17777  0130A8  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 17778  0130AE  0EEF               	movlw	-17
 17779  0130B0  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 17780                           
 17781                           ;stkvar	_remyears @ sp[(-57)+37]
 17782  0130B6  0EEC               	movlw	-20
 17783  0130B8  006F FF8C  F02A    	movff	plusw1,btemp
 17784  0130BE  0E04               	movlw	4
 17785  0130C0  182A               	xorwf	btemp^0,w,c
 17786  0130C2  E116               	bnz	l16941
 17787  0130C4  0EED               	movlw	-19
 17788  0130C6  50E3               	movf	plusw1,w,c
 17789  0130C8  E113               	bnz	l16941
 17790  0130CA  0EEE               	movlw	-18
 17791  0130CC  50E3               	movf	plusw1,w,c
 17792  0130CE  E110               	bnz	l16941
 17793  0130D0  0EEF               	movlw	-17
 17794  0130D2  50E3               	movf	plusw1,w,c
 17795  0130D4  A4D8               	btfss	status,2,c
 17796  0130D6  D00C               	goto	l16941
 17797                           
 17798                           ;stkvar	_remyears @ sp[(-57)+37]
 17799  0130D8  50E1               	movf	fsr1l,w,c
 17800  0130DA  0FEC               	addlw	-20
 17801  0130DC  6ED9               	movwf	fsr2l,c
 17802  0130DE  50E2               	movf	fsr1h,w,c
 17803  0130E0  6EDA               	movwf	fsr2h,c
 17804  0130E2  0EFF               	movlw	255
 17805  0130E4  22DA               	addwfc	fsr2h,f,c
 17806  0130E6  06DE               	decf	postinc2,f,c
 17807  0130E8  0E00               	movlw	0
 17808  0130EA  5ADE               	subwfb	postinc2,f,c
 17809  0130EC  5ADE               	subwfb	postinc2,f,c
 17810  0130EE  5ADE               	subwfb	postinc2,f,c
 17811  0130F0                     l16941:
 17812  0130F0  0E6D               	movlw	109
 17813  0130F2  6EE6               	movwf	postinc1,c
 17814  0130F4  0E01               	movlw	1
 17815  0130F6  6EE6               	movwf	postinc1,c
 17816  0130F8  0E00               	movlw	0
 17817  0130FA  6EE6               	movwf	postinc1,c
 17818  0130FC  0E00               	movlw	0
 17819  0130FE  6EE6               	movwf	postinc1,c
 17820                           
 17821                           ;stkvar	_remyears @ sp[(-61)+37]
 17822  013100  0EE8               	movlw	-24
 17823  013102  006F FF8F FFE6     	movff	plusw1,postinc1
 17824  013108  006F FF8F FFE6     	movff	plusw1,postinc1
 17825  01310E  006F FF8F FFE6     	movff	plusw1,postinc1
 17826  013114  006F FF8F FFE6     	movff	plusw1,postinc1
 17827  01311A  ECB6  F003         	call	___lmul	;wreg free
 17828                           
 17829                           ;stkvar	_remdays @ sp[(-57)+25]
 17830  01311E  50E1               	movf	fsr1l,w,c
 17831  013120  0FE0               	addlw	-32
 17832  013122  6ED9               	movwf	fsr2l,c
 17833  013124  50E2               	movf	fsr1h,w,c
 17834  013126  6EDA               	movwf	fsr2h,c
 17835  013128  0EFF               	movlw	255
 17836  01312A  22DA               	addwfc	fsr2h,f,c
 17837  01312C  502A               	movf	btemp^0,w,c
 17838  01312E  5EDE               	subwf	postinc2,f,c
 17839  013130  502B               	movf	(btemp+1)^0,w,c
 17840  013132  5ADE               	subwfb	postinc2,f,c
 17841  013134  502C               	movf	(btemp+2)^0,w,c
 17842  013136  5ADE               	subwfb	postinc2,f,c
 17843  013138  502D               	movf	(btemp+3)^0,w,c
 17844  01313A  5ADE               	subwfb	postinc2,f,c
 17845                           
 17846                           ;stkvar	___secs_to_tm$7650 @ sp[(-57)+0]
 17847  01313C  0EC7               	movlw	-57
 17848  01313E  6AE3               	clrf	plusw1,c
 17849                           
 17850                           ;stkvar	_remyears @ sp[(-57)+37]
 17851  013140  0EEC               	movlw	-20
 17852  013142  50E3               	movf	plusw1,w,c
 17853  013144  E127               	bnz	l16953
 17854  013146  0EED               	movlw	-19
 17855  013148  50E3               	movf	plusw1,w,c
 17856  01314A  E124               	bnz	l16953
 17857  01314C  0EEE               	movlw	-18
 17858  01314E  50E3               	movf	plusw1,w,c
 17859  013150  E121               	bnz	l16953
 17860  013152  0EEF               	movlw	-17
 17861  013154  50E3               	movf	plusw1,w,c
 17862  013156  A4D8               	btfss	status,2,c
 17863  013158  D01D               	goto	l16953
 17864                           
 17865                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17866  01315A  0EE4               	movlw	-28
 17867  01315C  50E3               	movf	plusw1,w,c
 17868  01315E  E117               	bnz	l16951
 17869  013160  0EE5               	movlw	-27
 17870  013162  50E3               	movf	plusw1,w,c
 17871  013164  E114               	bnz	l16951
 17872  013166  0EE6               	movlw	-26
 17873  013168  50E3               	movf	plusw1,w,c
 17874  01316A  E111               	bnz	l16951
 17875  01316C  0EE7               	movlw	-25
 17876  01316E  50E3               	movf	plusw1,w,c
 17877  013170  A4D8               	btfss	status,2,c
 17878  013172  D00D               	goto	u16560
 17879                           
 17880                           ;stkvar	_c_cycles @ sp[(-57)+33]
 17881  013174  0EE8               	movlw	-24
 17882  013176  50E3               	movf	plusw1,w,c
 17883  013178  E10D               	bnz	l16953
 17884  01317A  0EE9               	movlw	-23
 17885  01317C  50E3               	movf	plusw1,w,c
 17886  01317E  E10A               	bnz	l16953
 17887  013180  0EEA               	movlw	-22
 17888  013182  50E3               	movf	plusw1,w,c
 17889  013184  E107               	bnz	l16953
 17890  013186  0EEB               	movlw	-21
 17891  013188  50E3               	movf	plusw1,w,c
 17892  01318A  A4D8               	btfss	status,2,c
 17893  01318C  D003               	goto	l16953
 17894  01318E                     u16560:
 17895  01318E                     l16951:
 17896                           
 17897                           ;stkvar	___secs_to_tm$7650 @ sp[(-57)+0]
 17898  01318E  0EC7               	movlw	-57
 17899  013190  6AE3               	clrf	plusw1,c
 17900  013192  2AE3               	incf	plusw1,f,c
 17901  013194                     l16953:
 17902                           
 17903                           ;stkvar	___secs_to_tm$7650 @ sp[(-57)+0]
 17904  013194  0EC7               	movlw	-57
 17905  013196  50E3               	movf	plusw1,w,c
 17906  013198  6E34               	movwf	(btemp+10)^0,c
 17907  01319A  6A35               	clrf	(btemp+11)^0,c
 17908                           
 17909                           ;stkvar	_leap @ sp[(-57)+51]
 17910  01319C  0EFA               	movlw	-6
 17911  01319E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17912  0131A4  0EFB               	movlw	-5
 17913  0131A6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17914                           
 17915                           ;stkvar	_remdays @ sp[(-57)+25]
 17916                           ;stkvar	_leap @ sp[(-57)+51]
 17917  0131AC  0EFA               	movlw	-6
 17918  0131AE  006F FF8C  F034    	movff	plusw1,btemp+10
 17919  0131B4  0EFB               	movlw	-5
 17920  0131B6  006F FF8C  F035    	movff	plusw1,btemp+11
 17921  0131BC  0EE0               	movlw	-32
 17922  0131BE  50E3               	movf	plusw1,w,c
 17923  0131C0  2634               	addwf	(btemp+10)^0,f,c
 17924  0131C2  0EE1               	movlw	-31
 17925  0131C4  50E3               	movf	plusw1,w,c
 17926  0131C6  2235               	addwfc	(btemp+11)^0,f,c
 17927  0131C8  0E3B               	movlw	59
 17928  0131CA  2634               	addwf	(btemp+10)^0,f,c
 17929  0131CC  0E00               	movlw	0
 17930  0131CE  2235               	addwfc	(btemp+11)^0,f,c
 17931                           
 17932                           ;stkvar	_yday @ sp[(-57)+53]
 17933  0131D0  0EFC               	movlw	-4
 17934  0131D2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 17935  0131D8  0EFD               	movlw	-3
 17936  0131DA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 17937                           
 17938                           ;stkvar	_leap @ sp[(-57)+51]
 17939  0131E0  0EFA               	movlw	-6
 17940  0131E2  50E3               	movf	plusw1,w,c
 17941  0131E4  0F6D               	addlw	109
 17942  0131E6  6E34               	movwf	(btemp+10)^0,c
 17943  0131E8  0EFB               	movlw	-5
 17944  0131EA  006F FF8C  F035    	movff	plusw1,btemp+11
 17945  0131F0  0E01               	movlw	1
 17946  0131F2  2235               	addwfc	(btemp+11)^0,f,c
 17947                           
 17948                           ;stkvar	_yday @ sp[(-57)+53]
 17949  0131F4  0EFC               	movlw	-4
 17950  0131F6  006F FF8C  F02A    	movff	plusw1,btemp
 17951  0131FC  5034               	movf	(btemp+10)^0,w,c
 17952  0131FE  5C2A               	subwf	btemp^0,w,c
 17953  013200  0EFD               	movlw	-3
 17954  013202  50E3               	movf	plusw1,w,c
 17955  013204  0A80               	xorlw	128
 17956  013206  6E2A               	movwf	btemp^0,c
 17957  013208  5035               	movf	(btemp+11)^0,w,c
 17958  01320A  0A80               	xorlw	128
 17959  01320C  582A               	subwfb	btemp^0,w,c
 17960  01320E  A0D8               	btfss	status,0,c
 17961  013210  D01E               	goto	l16961
 17962                           
 17963                           ;stkvar	_leap @ sp[(-57)+51]
 17964  013212  0EFA               	movlw	-6
 17965  013214  50E3               	movf	plusw1,w,c
 17966  013216  0F6D               	addlw	109
 17967  013218  6E34               	movwf	(btemp+10)^0,c
 17968  01321A  0EFB               	movlw	-5
 17969  01321C  006F FF8C  F035    	movff	plusw1,btemp+11
 17970  013222  0E01               	movlw	1
 17971  013224  2235               	addwfc	(btemp+11)^0,f,c
 17972                           
 17973                           ;stkvar	_yday @ sp[(-57)+53]
 17974  013226  0EFC               	movlw	-4
 17975  013228  006F FF8C  F02A    	movff	plusw1,btemp
 17976  01322E  5034               	movf	(btemp+10)^0,w,c
 17977  013230  5E2A               	subwf	btemp^0,f,c
 17978  013232  0EFC               	movlw	-4
 17979  013234  0060  F0AB  FFE3   	movff	btemp,plusw1
 17980  01323A  0EFD               	movlw	-3
 17981  01323C  006F FF8C  F02A    	movff	plusw1,btemp
 17982  013242  5035               	movf	(btemp+11)^0,w,c
 17983  013244  5A2A               	subwfb	btemp^0,f,c
 17984  013246  0EFD               	movlw	-3
 17985  013248  0060  F0AB  FFE3   	movff	btemp,plusw1
 17986  01324E                     l16961:
 17987                           
 17988                           ;stkvar	_remyears @ sp[(-57)+37]
 17989                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17990  01324E  0EE4               	movlw	-28
 17991  013250  006F FF8C  F032    	movff	plusw1,btemp+8
 17992  013256  0EE5               	movlw	-27
 17993  013258  006F FF8C  F033    	movff	plusw1,btemp+9
 17994  01325E  0EE6               	movlw	-26
 17995  013260  006F FF8C  F034    	movff	plusw1,btemp+10
 17996  013266  0EE7               	movlw	-25
 17997  013268  006F FF8C  F035    	movff	plusw1,btemp+11
 17998  01326E  0E02               	movlw	2
 17999  013270                     u16585:
 18000  013270  90D8               	bcf	status,0,c
 18001  013272  3632               	rlcf	(btemp+8)^0,f,c
 18002  013274  3633               	rlcf	(btemp+9)^0,f,c
 18003  013276  3634               	rlcf	(btemp+10)^0,f,c
 18004  013278  3635               	rlcf	(btemp+11)^0,f,c
 18005  01327A  2EE8               	decfsz	wreg,f,c
 18006  01327C  D7F9               	goto	u16585
 18007  01327E  0E64               	movlw	100
 18008  013280  6EE6               	movwf	postinc1,c
 18009  013282  0E00               	movlw	0
 18010  013284  6EE6               	movwf	postinc1,c
 18011  013286  0E00               	movlw	0
 18012  013288  6EE6               	movwf	postinc1,c
 18013  01328A  0E00               	movlw	0
 18014  01328C  6EE6               	movwf	postinc1,c
 18015                           
 18016                           ;stkvar	_c_cycles @ sp[(-61)+33]
 18017  01328E  0EE4               	movlw	-28
 18018  013290  006F FF8F FFE6     	movff	plusw1,postinc1
 18019  013296  006F FF8F FFE6     	movff	plusw1,postinc1
 18020  01329C  006F FF8F FFE6     	movff	plusw1,postinc1
 18021  0132A2  006F FF8F FFE6     	movff	plusw1,postinc1
 18022  0132A8  ECB6  F003         	call	___lmul	;wreg free
 18023  0132AC  5032               	movf	(btemp+8)^0,w,c
 18024  0132AE  242A               	addwf	btemp^0,w,c
 18025  0132B0  6E2E               	movwf	(btemp+4)^0,c
 18026  0132B2  5033               	movf	(btemp+9)^0,w,c
 18027  0132B4  202B               	addwfc	(btemp+1)^0,w,c
 18028  0132B6  6E2F               	movwf	(btemp+5)^0,c
 18029  0132B8  5034               	movf	(btemp+10)^0,w,c
 18030  0132BA  202C               	addwfc	(btemp+2)^0,w,c
 18031  0132BC  6E30               	movwf	(btemp+6)^0,c
 18032  0132BE  5035               	movf	(btemp+11)^0,w,c
 18033  0132C0  202D               	addwfc	(btemp+3)^0,w,c
 18034  0132C2  6E31               	movwf	(btemp+7)^0,c
 18035  0132C4  0EEC               	movlw	-20
 18036  0132C6  50E3               	movf	plusw1,w,c
 18037  0132C8  262E               	addwf	(btemp+4)^0,f,c
 18038  0132CA  0EED               	movlw	-19
 18039  0132CC  50E3               	movf	plusw1,w,c
 18040  0132CE  222F               	addwfc	(btemp+5)^0,f,c
 18041  0132D0  0EEE               	movlw	-18
 18042  0132D2  50E3               	movf	plusw1,w,c
 18043  0132D4  2230               	addwfc	(btemp+6)^0,f,c
 18044  0132D6  0EEF               	movlw	-17
 18045  0132D8  50E3               	movf	plusw1,w,c
 18046  0132DA  2231               	addwfc	(btemp+7)^0,f,c
 18047  0132DC  0060  F0B8  F03A   	movff	btemp+4,btemp+16
 18048  0132E2  0060  F0BC  F03B   	movff	btemp+5,btemp+17
 18049  0132E8  0060  F0C0  F03C   	movff	btemp+6,btemp+18
 18050  0132EE  0060  F0C4  F03D   	movff	btemp+7,btemp+19
 18051  0132F4  6A3E               	clrf	(btemp+20)^0,c
 18052  0132F6  BE3D               	btfsc	(btemp+19)^0,7,c
 18053  0132F8  683E               	setf	(btemp+20)^0,c
 18054  0132FA  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 18055  013300  0060  F0F8  F040   	movff	btemp+20,btemp+22
 18056  013306  0060  F0F8  F041   	movff	btemp+20,btemp+23
 18057  01330C  0E90               	movlw	144
 18058  01330E  6EE6               	movwf	postinc1,c
 18059  013310  0E01               	movlw	1
 18060  013312  6EE6               	movwf	postinc1,c
 18061  013314  0E00               	movlw	0
 18062  013316  6EE6               	movwf	postinc1,c
 18063  013318  0E00               	movlw	0
 18064  01331A  6EE6               	movwf	postinc1,c
 18065  01331C  0E00               	movlw	0
 18066  01331E  6EE6               	movwf	postinc1,c
 18067  013320  0E00               	movlw	0
 18068  013322  6EE6               	movwf	postinc1,c
 18069  013324  0E00               	movlw	0
 18070  013326  6EE6               	movwf	postinc1,c
 18071  013328  0E00               	movlw	0
 18072  01332A  6EE6               	movwf	postinc1,c
 18073                           
 18074                           ;stkvar	_qc_cycles @ sp[(-65)+45]
 18075  01332C  0EEC               	movlw	-20
 18076  01332E  006F FF8C  F042    	movff	plusw1,btemp+24
 18077  013334  0EED               	movlw	-19
 18078  013336  006F FF8C  F043    	movff	plusw1,btemp+25
 18079  01333C  0EEE               	movlw	-18
 18080  01333E  006F FF8C  F044    	movff	plusw1,btemp+26
 18081  013344  0EEF               	movlw	-17
 18082  013346  006F FF8C  F045    	movff	plusw1,btemp+27
 18083  01334C  6A46               	clrf	(btemp+28)^0,c
 18084  01334E  BE45               	btfsc	(btemp+27)^0,7,c
 18085  013350  6846               	setf	(btemp+28)^0,c
 18086  013352  0060  F118  F047   	movff	btemp+28,btemp+29
 18087  013358  0060  F118  F048   	movff	btemp+28,btemp+30
 18088  01335E  0060  F118  F049   	movff	btemp+28,btemp+31
 18089  013364  0060  F10B  FFE6   	movff	btemp+24,postinc1
 18090  01336A  0060  F10F  FFE6   	movff	btemp+25,postinc1
 18091  013370  0060  F113  FFE6   	movff	btemp+26,postinc1
 18092  013376  0060  F117  FFE6   	movff	btemp+27,postinc1
 18093  01337C  0060  F11B  FFE6   	movff	btemp+28,postinc1
 18094  013382  0060  F11F  FFE6   	movff	btemp+29,postinc1
 18095  013388  0060  F123  FFE6   	movff	btemp+30,postinc1
 18096  01338E  0060  F127  FFE6   	movff	btemp+31,postinc1
 18097  013394  ECFB  F0F8         	call	___omul	;wreg free
 18098  013398  52E5               	movf	postdec1,f,c
 18099  01339A  006F FF9C  F049    	movff	indf1,btemp+31
 18100  0133A0  52E5               	movf	postdec1,f,c
 18101  0133A2  006F FF9C  F048    	movff	indf1,btemp+30
 18102  0133A8  52E5               	movf	postdec1,f,c
 18103  0133AA  006F FF9C  F047    	movff	indf1,btemp+29
 18104  0133B0  52E5               	movf	postdec1,f,c
 18105  0133B2  006F FF9C  F046    	movff	indf1,btemp+28
 18106  0133B8  52E5               	movf	postdec1,f,c
 18107  0133BA  006F FF9C  F045    	movff	indf1,btemp+27
 18108  0133C0  52E5               	movf	postdec1,f,c
 18109  0133C2  006F FF9C  F044    	movff	indf1,btemp+26
 18110  0133C8  52E5               	movf	postdec1,f,c
 18111  0133CA  006F FF9C  F043    	movff	indf1,btemp+25
 18112  0133D0  52E5               	movf	postdec1,f,c
 18113  0133D2  006F FF9C  F042    	movff	indf1,btemp+24
 18114  0133D8  0EF8               	movlw	248
 18115  0133DA  26E1               	addwf	fsr1l,f,c
 18116  0133DC  0EFF               	movlw	255
 18117  0133DE  22E2               	addwfc	fsr1h,f,c
 18118  0133E0  503A               	movf	(btemp+16)^0,w,c
 18119  0133E2  2442               	addwf	(btemp+24)^0,w,c
 18120  0133E4  6E32               	movwf	(btemp+8)^0,c
 18121  0133E6  503B               	movf	(btemp+17)^0,w,c
 18122  0133E8  2043               	addwfc	(btemp+25)^0,w,c
 18123  0133EA  6E33               	movwf	(btemp+9)^0,c
 18124  0133EC  503C               	movf	(btemp+18)^0,w,c
 18125  0133EE  2044               	addwfc	(btemp+26)^0,w,c
 18126  0133F0  6E34               	movwf	(btemp+10)^0,c
 18127  0133F2  503D               	movf	(btemp+19)^0,w,c
 18128  0133F4  2045               	addwfc	(btemp+27)^0,w,c
 18129  0133F6  6E35               	movwf	(btemp+11)^0,c
 18130  0133F8  503E               	movf	(btemp+20)^0,w,c
 18131  0133FA  2046               	addwfc	(btemp+28)^0,w,c
 18132  0133FC  6E36               	movwf	(btemp+12)^0,c
 18133  0133FE  503F               	movf	(btemp+21)^0,w,c
 18134  013400  2047               	addwfc	(btemp+29)^0,w,c
 18135  013402  6E37               	movwf	(btemp+13)^0,c
 18136  013404  5040               	movf	(btemp+22)^0,w,c
 18137  013406  2048               	addwfc	(btemp+30)^0,w,c
 18138  013408  6E38               	movwf	(btemp+14)^0,c
 18139  01340A  5041               	movf	(btemp+23)^0,w,c
 18140  01340C  2049               	addwfc	(btemp+31)^0,w,c
 18141  01340E  6E39               	movwf	(btemp+15)^0,c
 18142                           
 18143                           ;stkvar	_years @ sp[(-57)+1]
 18144  013410  0EC8               	movlw	-56
 18145  013412  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 18146  013418  0EC9               	movlw	-55
 18147  01341A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 18148  013420  0ECA               	movlw	-54
 18149  013422  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 18150  013428  0ECB               	movlw	-53
 18151  01342A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 18152  013430  0ECC               	movlw	-52
 18153  013432  0060  F0DB  FFE3   	movff	btemp+12,plusw1
 18154  013438  0ECD               	movlw	-51
 18155  01343A  0060  F0DF  FFE3   	movff	btemp+13,plusw1
 18156  013440  0ECE               	movlw	-50
 18157  013442  0060  F0E3  FFE3   	movff	btemp+14,plusw1
 18158  013448  0ECF               	movlw	-49
 18159  01344A  0060  F0E7  FFE3   	movff	btemp+15,plusw1
 18160                           
 18161                           ;stkvar	_months @ sp[(-57)+49]
 18162  013450  0EF8               	movlw	-8
 18163  013452  6AE3               	clrf	plusw1,c
 18164  013454  0EF9               	movlw	-7
 18165  013456  6AE3               	clrf	plusw1,c
 18166  013458  D030               	goto	l16969
 18167  01345A                     l16965:
 18168                           
 18169                           ;stkvar	_remdays @ sp[(-57)+25]
 18170  01345A  50E1               	movf	fsr1l,w,c
 18171  01345C  0FE0               	addlw	-32
 18172  01345E  6ED9               	movwf	fsr2l,c
 18173  013460  50E2               	movf	fsr1h,w,c
 18174  013462  6EDA               	movwf	fsr2h,c
 18175  013464  0EFF               	movlw	255
 18176  013466  22DA               	addwfc	fsr2h,f,c
 18177                           
 18178                           ;stkvar	_months @ sp[(-57)+49]
 18179  013468  0EF8               	movlw	-8
 18180  01346A  006F FF8C  F034    	movff	plusw1,btemp+10
 18181  013470  0EF9               	movlw	-7
 18182  013472  006F FF8C  F035    	movff	plusw1,btemp+11
 18183  013478  0E17               	movlw	low ___secs_to_tm@days_in_month
 18184  01347A  2434               	addwf	(btemp+10)^0,w,c
 18185  01347C  6EF6               	movwf	tblptrl,c
 18186  01347E  0EF8               	movlw	high ___secs_to_tm@days_in_month
 18187  013480  2035               	addwfc	(btemp+11)^0,w,c
 18188  013482  6EF7               	movwf	tblptrh,c
 18189  013484                     	if	1	;There are 3 active tblptr bytes
 18190  013484  6AF8               	clrf	tblptru,c
 18191  013486  0E00               	movlw	low (__mediumconst shr (0+16))
 18192  013488  22F8               	addwfc	tblptru,f,c
 18193  01348A                     	endif
 18194  01348A  0008               	tblrd		*
 18195  01348C  50F5               	movf	tablat,w,c
 18196  01348E  5EDE               	subwf	postinc2,f,c
 18197  013490  0E00               	movlw	0
 18198  013492  5ADE               	subwfb	postinc2,f,c
 18199  013494  5ADE               	subwfb	postinc2,f,c
 18200  013496  5ADE               	subwfb	postinc2,f,c
 18201                           
 18202                           ;stkvar	_months @ sp[(-57)+49]
 18203  013498  0EF8               	movlw	-8
 18204  01349A  50E3               	movf	plusw1,w,c
 18205  01349C  0F01               	addlw	1
 18206  01349E  6E2A               	movwf	btemp^0,c
 18207  0134A0  0EF8               	movlw	-8
 18208  0134A2  0060  F0AB  FFE3   	movff	btemp,plusw1
 18209  0134A8  6A2A               	clrf	btemp^0,c
 18210  0134AA  0EF9               	movlw	-7
 18211  0134AC  50E3               	movf	plusw1,w,c
 18212  0134AE  202A               	addwfc	btemp^0,w,c
 18213  0134B0  6E2A               	movwf	btemp^0,c
 18214  0134B2  0EF9               	movlw	-7
 18215  0134B4  0060  F0AB  FFE3   	movff	btemp,plusw1
 18216  0134BA                     l16969:
 18217                           
 18218                           ;stkvar	_months @ sp[(-57)+49]
 18219  0134BA  0EF8               	movlw	-8
 18220  0134BC  006F FF8C  F034    	movff	plusw1,btemp+10
 18221  0134C2  0EF9               	movlw	-7
 18222  0134C4  006F FF8C  F035    	movff	plusw1,btemp+11
 18223  0134CA  0E17               	movlw	low ___secs_to_tm@days_in_month
 18224  0134CC  2434               	addwf	(btemp+10)^0,w,c
 18225  0134CE  6EF6               	movwf	tblptrl,c
 18226  0134D0  0EF8               	movlw	high ___secs_to_tm@days_in_month
 18227  0134D2  2035               	addwfc	(btemp+11)^0,w,c
 18228  0134D4  6EF7               	movwf	tblptrh,c
 18229  0134D6                     	if	1	;There are 3 active tblptr bytes
 18230  0134D6  6AF8               	clrf	tblptru,c
 18231  0134D8  0E00               	movlw	low (__mediumconst shr (0+16))
 18232  0134DA  22F8               	addwfc	tblptru,f,c
 18233  0134DC                     	endif
 18234  0134DC  0008               	tblrd		*
 18235  0134DE  006F FFD4  F035    	movff	tablat,btemp+11
 18236  0134E4  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 18237  0134EA  6A2F               	clrf	(btemp+5)^0,c
 18238  0134EC  6A30               	clrf	(btemp+6)^0,c
 18239  0134EE  6A31               	clrf	(btemp+7)^0,c
 18240                           
 18241                           ;stkvar	_remdays @ sp[(-57)+25]
 18242  0134F0  0EE0               	movlw	-32
 18243  0134F2  006F FF8C  F02A    	movff	plusw1,btemp
 18244  0134F8  502E               	movf	(btemp+4)^0,w,c
 18245  0134FA  5C2A               	subwf	btemp^0,w,c
 18246  0134FC  0EE1               	movlw	-31
 18247  0134FE  006F FF8C  F02A    	movff	plusw1,btemp
 18248  013504  502F               	movf	(btemp+5)^0,w,c
 18249  013506  582A               	subwfb	btemp^0,w,c
 18250  013508  0EE2               	movlw	-30
 18251  01350A  006F FF8C  F02A    	movff	plusw1,btemp
 18252  013510  5030               	movf	(btemp+6)^0,w,c
 18253  013512  582A               	subwfb	btemp^0,w,c
 18254  013514  0EE3               	movlw	-29
 18255  013516  50E3               	movf	plusw1,w,c
 18256  013518  0A80               	xorlw	128
 18257  01351A  6E2A               	movwf	btemp^0,c
 18258  01351C  5031               	movf	(btemp+7)^0,w,c
 18259  01351E  0A80               	xorlw	128
 18260  013520  582A               	subwfb	btemp^0,w,c
 18261  013522  B0D8               	btfsc	status,0,c
 18262  013524  D79A               	goto	l16965
 18263                           
 18264                           ;stkvar	_months @ sp[(-57)+49]
 18265  013526  0EF9               	movlw	-7
 18266  013528  BEE3               	btfsc	plusw1,7,c
 18267  01352A  D026               	goto	l16977
 18268  01352C  0EF9               	movlw	-7
 18269  01352E  50E3               	movf	plusw1,w,c
 18270  013530  E108               	bnz	u16600
 18271  013532  0EF8               	movlw	-8
 18272  013534  006F FF8C  F02A    	movff	plusw1,btemp
 18273  01353A  0E0A               	movlw	10
 18274  01353C  5E2A               	subwf	btemp^0,f,c
 18275  01353E  A0D8               	btfss	status,0,c
 18276  013540  D01B               	goto	l16977
 18277  013542                     u16600:
 18278                           
 18279                           ;stkvar	_months @ sp[(-57)+49]
 18280  013542  50E1               	movf	fsr1l,w,c
 18281  013544  0FF8               	addlw	-8
 18282  013546  6ED9               	movwf	fsr2l,c
 18283  013548  50E2               	movf	fsr1h,w,c
 18284  01354A  6EDA               	movwf	fsr2h,c
 18285  01354C  0EFF               	movlw	255
 18286  01354E  22DA               	addwfc	fsr2h,f,c
 18287  013550  0EF4               	movlw	244
 18288  013552  26DE               	addwf	postinc2,f,c
 18289  013554  0EFF               	movlw	255
 18290  013556  22DD               	addwfc	postdec2,f,c
 18291                           
 18292                           ;stkvar	_years @ sp[(-57)+1]
 18293  013558  50E1               	movf	fsr1l,w,c
 18294  01355A  0FC8               	addlw	-56
 18295  01355C  6ED9               	movwf	fsr2l,c
 18296  01355E  50E2               	movf	fsr1h,w,c
 18297  013560  6EDA               	movwf	fsr2h,c
 18298  013562  0EFF               	movlw	255
 18299  013564  22DA               	addwfc	fsr2h,f,c
 18300  013566  2ADE               	incf	postinc2,f,c
 18301  013568  0E00               	movlw	0
 18302  01356A  22DE               	addwfc	postinc2,f,c
 18303  01356C  22DE               	addwfc	postinc2,f,c
 18304  01356E  22DE               	addwfc	postinc2,f,c
 18305  013570  22DE               	addwfc	postinc2,f,c
 18306  013572  22DE               	addwfc	postinc2,f,c
 18307  013574  22DE               	addwfc	postinc2,f,c
 18308  013576  22DE               	addwfc	postinc2,f,c
 18309  013578                     l16977:
 18310                           
 18311                           ;stkvar	_years @ sp[(-57)+1]
 18312  013578  0EC8               	movlw	-56
 18313  01357A  50E3               	movf	plusw1,w,c
 18314  01357C  0F64               	addlw	100
 18315  01357E  6E3A               	movwf	(btemp+16)^0,c
 18316  013580  0EC9               	movlw	-55
 18317  013582  006F FF8C  F03B    	movff	plusw1,btemp+17
 18318  013588  0E00               	movlw	0
 18319  01358A  223B               	addwfc	(btemp+17)^0,f,c
 18320  01358C  0ECA               	movlw	-54
 18321  01358E  006F FF8C  F03C    	movff	plusw1,btemp+18
 18322  013594  0E00               	movlw	0
 18323  013596  223C               	addwfc	(btemp+18)^0,f,c
 18324  013598  0ECB               	movlw	-53
 18325  01359A  006F FF8C  F03D    	movff	plusw1,btemp+19
 18326  0135A0  0E00               	movlw	0
 18327  0135A2  223D               	addwfc	(btemp+19)^0,f,c
 18328  0135A4  0ECC               	movlw	-52
 18329  0135A6  006F FF8C  F03E    	movff	plusw1,btemp+20
 18330  0135AC  0E00               	movlw	0
 18331  0135AE  223E               	addwfc	(btemp+20)^0,f,c
 18332  0135B0  0ECD               	movlw	-51
 18333  0135B2  006F FF8C  F03F    	movff	plusw1,btemp+21
 18334  0135B8  0E00               	movlw	0
 18335  0135BA  223F               	addwfc	(btemp+21)^0,f,c
 18336  0135BC  0ECE               	movlw	-50
 18337  0135BE  006F FF8C  F040    	movff	plusw1,btemp+22
 18338  0135C4  0E00               	movlw	0
 18339  0135C6  2240               	addwfc	(btemp+22)^0,f,c
 18340  0135C8  0ECF               	movlw	-49
 18341  0135CA  006F FF8C  F041    	movff	plusw1,btemp+23
 18342  0135D0  0E00               	movlw	0
 18343  0135D2  2241               	addwfc	(btemp+23)^0,f,c
 18344  0135D4  BE41               	btfsc	(btemp+23)^0,7,c
 18345  0135D6  D00C               	goto	u16610
 18346  0135D8  5041               	movf	(btemp+23)^0,w,c
 18347  0135DA  1040               	iorwf	(btemp+22)^0,w,c
 18348  0135DC  103F               	iorwf	(btemp+21)^0,w,c
 18349  0135DE  103E               	iorwf	(btemp+20)^0,w,c
 18350  0135E0  103D               	iorwf	(btemp+19)^0,w,c
 18351  0135E2  103C               	iorwf	(btemp+18)^0,w,c
 18352  0135E4  E103               	bnz	u16611
 18353  0135E6  0E80               	movlw	128
 18354  0135E8  5C3B               	subwf	(btemp+17)^0,w,c
 18355  0135EA  B0D8               	btfsc	status,0,c
 18356  0135EC                     u16611:
 18357  0135EC  EF62  F094         	goto	u16470
 18358  0135F0                     u16610:
 18359                           
 18360                           ;stkvar	_years @ sp[(-57)+1]
 18361  0135F0  0EC8               	movlw	-56
 18362  0135F2  50E3               	movf	plusw1,w,c
 18363  0135F4  0F64               	addlw	100
 18364  0135F6  6E3A               	movwf	(btemp+16)^0,c
 18365  0135F8  0EC9               	movlw	-55
 18366  0135FA  006F FF8C  F03B    	movff	plusw1,btemp+17
 18367  013600  0E00               	movlw	0
 18368  013602  223B               	addwfc	(btemp+17)^0,f,c
 18369  013604  0ECA               	movlw	-54
 18370  013606  006F FF8C  F03C    	movff	plusw1,btemp+18
 18371  01360C  0E00               	movlw	0
 18372  01360E  223C               	addwfc	(btemp+18)^0,f,c
 18373  013610  0ECB               	movlw	-53
 18374  013612  006F FF8C  F03D    	movff	plusw1,btemp+19
 18375  013618  0E00               	movlw	0
 18376  01361A  223D               	addwfc	(btemp+19)^0,f,c
 18377  01361C  0ECC               	movlw	-52
 18378  01361E  006F FF8C  F03E    	movff	plusw1,btemp+20
 18379  013624  0E00               	movlw	0
 18380  013626  223E               	addwfc	(btemp+20)^0,f,c
 18381  013628  0ECD               	movlw	-51
 18382  01362A  006F FF8C  F03F    	movff	plusw1,btemp+21
 18383  013630  0E00               	movlw	0
 18384  013632  223F               	addwfc	(btemp+21)^0,f,c
 18385  013634  0ECE               	movlw	-50
 18386  013636  006F FF8C  F040    	movff	plusw1,btemp+22
 18387  01363C  0E00               	movlw	0
 18388  01363E  2240               	addwfc	(btemp+22)^0,f,c
 18389  013640  0ECF               	movlw	-49
 18390  013642  006F FF8C  F041    	movff	plusw1,btemp+23
 18391  013648  0E00               	movlw	0
 18392  01364A  2241               	addwfc	(btemp+23)^0,f,c
 18393  01364C  AE41               	btfss	(btemp+23)^0,7,c
 18394  01364E  D011               	goto	l16985
 18395  013650  0E80               	movlw	128
 18396  013652  5C3B               	subwf	(btemp+17)^0,w,c
 18397  013654  0EFF               	movlw	255
 18398  013656  583C               	subwfb	(btemp+18)^0,w,c
 18399  013658  0EFF               	movlw	255
 18400  01365A  583D               	subwfb	(btemp+19)^0,w,c
 18401  01365C  0EFF               	movlw	255
 18402  01365E  583E               	subwfb	(btemp+20)^0,w,c
 18403  013660  0EFF               	movlw	255
 18404  013662  583F               	subwfb	(btemp+21)^0,w,c
 18405  013664  0EFF               	movlw	255
 18406  013666  5840               	subwfb	(btemp+22)^0,w,c
 18407  013668  0EFF               	movlw	255
 18408  01366A  5841               	subwfb	(btemp+23)^0,w,c
 18409  01366C  A0D8               	btfss	status,0,c
 18410  01366E  EF62  F094         	goto	u16470
 18411  013672                     l16985:
 18412                           
 18413                           ;stkvar	_years @ sp[(-57)+1]
 18414  013672  0EC8               	movlw	-56
 18415  013674  50E3               	movf	plusw1,w,c
 18416  013676  0F64               	addlw	100
 18417  013678  6E34               	movwf	(btemp+10)^0,c
 18418  01367A  0EC9               	movlw	-55
 18419  01367C  006F FF8C  F035    	movff	plusw1,btemp+11
 18420  013682  0E00               	movlw	0
 18421  013684  2235               	addwfc	(btemp+11)^0,f,c
 18422                           
 18423                           ;stkvar	_tm @ sp[(-57)+-10]
 18424  013686  0EBD               	movlw	-67
 18425  013688  006F FF8C  F032    	movff	plusw1,btemp+8
 18426  01368E  0EBE               	movlw	-66
 18427  013690  006F FF8C  F033    	movff	plusw1,btemp+9
 18428  013696  0E0A               	movlw	10
 18429  013698  2432               	addwf	(btemp+8)^0,w,c
 18430  01369A  6ED9               	movwf	fsr2l,c
 18431  01369C  0E00               	movlw	0
 18432  01369E  2033               	addwfc	(btemp+9)^0,w,c
 18433  0136A0  6EDA               	movwf	fsr2h,c
 18434  0136A2  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18435  0136A8  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18436                           
 18437                           ;stkvar	_months @ sp[(-57)+49]
 18438  0136AE  0EF8               	movlw	-8
 18439  0136B0  50E3               	movf	plusw1,w,c
 18440  0136B2  0F02               	addlw	2
 18441  0136B4  6E34               	movwf	(btemp+10)^0,c
 18442  0136B6  0EF9               	movlw	-7
 18443  0136B8  006F FF8C  F035    	movff	plusw1,btemp+11
 18444  0136BE  0E00               	movlw	0
 18445  0136C0  2235               	addwfc	(btemp+11)^0,f,c
 18446                           
 18447                           ;stkvar	_tm @ sp[(-57)+-10]
 18448  0136C2  0EBD               	movlw	-67
 18449  0136C4  006F FF8C  F032    	movff	plusw1,btemp+8
 18450  0136CA  0EBE               	movlw	-66
 18451  0136CC  006F FF8C  F033    	movff	plusw1,btemp+9
 18452  0136D2  0E08               	movlw	8
 18453  0136D4  2432               	addwf	(btemp+8)^0,w,c
 18454  0136D6  6ED9               	movwf	fsr2l,c
 18455  0136D8  0E00               	movlw	0
 18456  0136DA  2033               	addwfc	(btemp+9)^0,w,c
 18457  0136DC  6EDA               	movwf	fsr2h,c
 18458  0136DE  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18459  0136E4  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18460                           
 18461                           ;stkvar	_remdays @ sp[(-57)+25]
 18462  0136EA  0EE0               	movlw	-32
 18463  0136EC  50E3               	movf	plusw1,w,c
 18464  0136EE  0F01               	addlw	1
 18465  0136F0  6E34               	movwf	(btemp+10)^0,c
 18466  0136F2  0EE1               	movlw	-31
 18467  0136F4  006F FF8C  F035    	movff	plusw1,btemp+11
 18468  0136FA  0E00               	movlw	0
 18469  0136FC  2235               	addwfc	(btemp+11)^0,f,c
 18470                           
 18471                           ;stkvar	_tm @ sp[(-57)+-10]
 18472  0136FE  0EBD               	movlw	-67
 18473  013700  006F FF8C  F032    	movff	plusw1,btemp+8
 18474  013706  0EBE               	movlw	-66
 18475  013708  006F FF8C  F033    	movff	plusw1,btemp+9
 18476  01370E  0E06               	movlw	6
 18477  013710  2432               	addwf	(btemp+8)^0,w,c
 18478  013712  6ED9               	movwf	fsr2l,c
 18479  013714  0E00               	movlw	0
 18480  013716  2033               	addwfc	(btemp+9)^0,w,c
 18481  013718  6EDA               	movwf	fsr2h,c
 18482  01371A  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18483  013720  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18484                           
 18485                           ;stkvar	_wday @ sp[(-57)+55]
 18486  013726  50E1               	movf	fsr1l,w,c
 18487  013728  0FFE               	addlw	-2
 18488  01372A  6ED9               	movwf	fsr2l,c
 18489  01372C  50E2               	movf	fsr1h,w,c
 18490  01372E  6EDA               	movwf	fsr2h,c
 18491  013730  0EFF               	movlw	255
 18492  013732  22DA               	addwfc	fsr2h,f,c
 18493                           
 18494                           ;stkvar	_tm @ sp[(-57)+-10]
 18495  013734  0EBD               	movlw	-67
 18496  013736  006F FF8C  F034    	movff	plusw1,btemp+10
 18497  01373C  0EBE               	movlw	-66
 18498  01373E  006F FF8C  F035    	movff	plusw1,btemp+11
 18499  013744  0E0C               	movlw	12
 18500  013746  2434               	addwf	(btemp+10)^0,w,c
 18501  013748  6EE9               	movwf	fsr0l,c
 18502  01374A  0E00               	movlw	0
 18503  01374C  2035               	addwfc	(btemp+11)^0,w,c
 18504  01374E  6EEA               	movwf	fsr0h,c
 18505  013750  006F FF7B FFEE     	movff	postinc2,postinc0
 18506  013756  006F FF77 FFED     	movff	postdec2,postdec0
 18507                           
 18508                           ;stkvar	_yday @ sp[(-57)+53]
 18509  01375C  50E1               	movf	fsr1l,w,c
 18510  01375E  0FFC               	addlw	-4
 18511  013760  6ED9               	movwf	fsr2l,c
 18512  013762  50E2               	movf	fsr1h,w,c
 18513  013764  6EDA               	movwf	fsr2h,c
 18514  013766  0EFF               	movlw	255
 18515  013768  22DA               	addwfc	fsr2h,f,c
 18516                           
 18517                           ;stkvar	_tm @ sp[(-57)+-10]
 18518  01376A  0EBD               	movlw	-67
 18519  01376C  006F FF8C  F034    	movff	plusw1,btemp+10
 18520  013772  0EBE               	movlw	-66
 18521  013774  006F FF8C  F035    	movff	plusw1,btemp+11
 18522  01377A  0E0E               	movlw	14
 18523  01377C  2434               	addwf	(btemp+10)^0,w,c
 18524  01377E  6EE9               	movwf	fsr0l,c
 18525  013780  0E00               	movlw	0
 18526  013782  2035               	addwfc	(btemp+11)^0,w,c
 18527  013784  6EEA               	movwf	fsr0h,c
 18528  013786  006F FF7B FFEE     	movff	postinc2,postinc0
 18529  01378C  006F FF77 FFED     	movff	postdec2,postdec0
 18530  013792  0E10               	movlw	16
 18531  013794  6EE6               	movwf	postinc1,c
 18532  013796  0E0E               	movlw	14
 18533  013798  6EE6               	movwf	postinc1,c
 18534  01379A  0E00               	movlw	0
 18535  01379C  6EE6               	movwf	postinc1,c
 18536  01379E  0E00               	movlw	0
 18537  0137A0  6EE6               	movwf	postinc1,c
 18538                           
 18539                           ;stkvar	_remsecs @ sp[(-61)+41]
 18540  0137A2  0EEC               	movlw	-20
 18541  0137A4  006F FF8F FFE6     	movff	plusw1,postinc1
 18542  0137AA  006F FF8F FFE6     	movff	plusw1,postinc1
 18543  0137B0  006F FF8F FFE6     	movff	plusw1,postinc1
 18544  0137B6  006F FF8F FFE6     	movff	plusw1,postinc1
 18545  0137BC  ECB0  F0F1         	call	___aldiv	;wreg free
 18546  0137C0  0060  F0A8  F034   	movff	btemp,btemp+10
 18547  0137C6  0060  F0AC  F035   	movff	btemp+1,btemp+11
 18548                           
 18549                           ;stkvar	_tm @ sp[(-57)+-10]
 18550  0137CC  0EBD               	movlw	-67
 18551  0137CE  006F FF8C  F032    	movff	plusw1,btemp+8
 18552  0137D4  0EBE               	movlw	-66
 18553  0137D6  006F FF8C  F033    	movff	plusw1,btemp+9
 18554  0137DC  0E04               	movlw	4
 18555  0137DE  2432               	addwf	(btemp+8)^0,w,c
 18556  0137E0  6ED9               	movwf	fsr2l,c
 18557  0137E2  0E00               	movlw	0
 18558  0137E4  2033               	addwfc	(btemp+9)^0,w,c
 18559  0137E6  6EDA               	movwf	fsr2h,c
 18560  0137E8  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18561  0137EE  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18562  0137F4  0E3C               	movlw	60
 18563  0137F6  6EE6               	movwf	postinc1,c
 18564  0137F8  0E00               	movlw	0
 18565  0137FA  6EE6               	movwf	postinc1,c
 18566  0137FC  0E00               	movlw	0
 18567  0137FE  6EE6               	movwf	postinc1,c
 18568  013800  0E00               	movlw	0
 18569  013802  6EE6               	movwf	postinc1,c
 18570  013804  0E3C               	movlw	60
 18571  013806  6EE6               	movwf	postinc1,c
 18572  013808  0E00               	movlw	0
 18573  01380A  6EE6               	movwf	postinc1,c
 18574  01380C  0E00               	movlw	0
 18575  01380E  6EE6               	movwf	postinc1,c
 18576  013810  0E00               	movlw	0
 18577  013812  6EE6               	movwf	postinc1,c
 18578                           
 18579                           ;stkvar	_remsecs @ sp[(-65)+41]
 18580  013814  0EE8               	movlw	-24
 18581  013816  006F FF8F FFE6     	movff	plusw1,postinc1
 18582  01381C  006F FF8F FFE6     	movff	plusw1,postinc1
 18583  013822  006F FF8F FFE6     	movff	plusw1,postinc1
 18584  013828  006F FF8F FFE6     	movff	plusw1,postinc1
 18585  01382E  ECB0  F0F1         	call	___aldiv	;wreg free
 18586  013832  0060  F0AB  FFE6   	movff	btemp,postinc1
 18587  013838  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 18588  01383E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 18589  013844  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 18590  01384A  EC36  F0F6         	call	___almod	;wreg free
 18591  01384E  0060  F0A8  F034   	movff	btemp,btemp+10
 18592  013854  0060  F0AC  F035   	movff	btemp+1,btemp+11
 18593                           
 18594                           ;stkvar	_tm @ sp[(-57)+-10]
 18595  01385A  0EBD               	movlw	-67
 18596  01385C  006F FF8C  F032    	movff	plusw1,btemp+8
 18597  013862  0EBE               	movlw	-66
 18598  013864  006F FF8C  F033    	movff	plusw1,btemp+9
 18599  01386A  0E02               	movlw	2
 18600  01386C  2432               	addwf	(btemp+8)^0,w,c
 18601  01386E  6ED9               	movwf	fsr2l,c
 18602  013870  0E00               	movlw	0
 18603  013872  2033               	addwfc	(btemp+9)^0,w,c
 18604  013874  6EDA               	movwf	fsr2h,c
 18605  013876  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18606  01387C  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18607  013882  0E3C               	movlw	60
 18608  013884  6EE6               	movwf	postinc1,c
 18609  013886  0E00               	movlw	0
 18610  013888  6EE6               	movwf	postinc1,c
 18611  01388A  0E00               	movlw	0
 18612  01388C  6EE6               	movwf	postinc1,c
 18613  01388E  0E00               	movlw	0
 18614  013890  6EE6               	movwf	postinc1,c
 18615                           
 18616                           ;stkvar	_remsecs @ sp[(-61)+41]
 18617  013892  0EEC               	movlw	-20
 18618  013894  006F FF8F FFE6     	movff	plusw1,postinc1
 18619  01389A  006F FF8F FFE6     	movff	plusw1,postinc1
 18620  0138A0  006F FF8F FFE6     	movff	plusw1,postinc1
 18621  0138A6  006F FF8F FFE6     	movff	plusw1,postinc1
 18622  0138AC  EC36  F0F6         	call	___almod	;wreg free
 18623  0138B0  0060  F0A8  F034   	movff	btemp,btemp+10
 18624  0138B6  0060  F0AC  F035   	movff	btemp+1,btemp+11
 18625                           
 18626                           ;stkvar	_tm @ sp[(-57)+-10]
 18627  0138BC  0EBD               	movlw	-67
 18628  0138BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 18629  0138C4  0EBE               	movlw	-66
 18630  0138C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 18631  0138CC  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 18632  0138D2  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 18633  0138D8  0E00               	movlw	0
 18634  0138DA  6E2A               	movwf	btemp^0,c
 18635  0138DC  6A2B               	clrf	(btemp+1)^0,c
 18636  0138DE  6A2C               	clrf	(btemp+2)^0,c
 18637  0138E0  6A2D               	clrf	(btemp+3)^0,c
 18638  0138E2                     l3858:
 18639                           
 18640                           ; ___secs_to_tm: autosize = 57, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10
      +                          , argsize = 10, vargsize = 0
 18641  0138E2  0EBD               	movlw	189
 18642  0138E4  26E1               	addwf	fsr1l,f,c
 18643  0138E6  0EFF               	movlw	255
 18644  0138E8  22E2               	addwfc	fsr1h,f,c
 18645  0138EA  0012               	return		;funcret
 18646  0138EC                     __end_of___secs_to_tm:
 18647                           	opt callstack 0
 18648                           
 18649 ;; *************** function ___omul *****************
 18650 ;; Defined at:
 18651 ;;		line 91 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul64.c"
 18652 ;; Parameters:    Size  Location     Type
 18653 ;;  multiplier      8  [STACK] unsigned long long 
 18654 ;;  multiplicand    8  [STACK] unsigned long long 
 18655 ;; Auto vars:     Size  Location     Type
 18656 ;;  product         8  [STACK] unsigned long long 
 18657 ;; Return value:  Size  Location     Type
 18658 ;;                  8  [STACK] unsigned long long 
 18659 ;; Registers used:
 18660 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18661 ;; Tracked objects:
 18662 ;;		On entry : 0/0
 18663 ;;		On exit  : 0/0
 18664 ;;		Unchanged: 0/0
 18665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18670 ;;Total ram usage:        0 bytes
 18671 ;; Hardware stack levels used:    1
 18672 ;; Hardware stack levels required when called:   15
 18673 ;; This function calls:
 18674 ;;		Nothing
 18675 ;; This function is called by:
 18676 ;;		___secs_to_tm
 18677 ;;		___year_to_secs
 18678 ;; This function uses a reentrant model
 18679 ;;
 18680                           
 18681                           	psect	text50
 18682  01F1F6                     __ptext50:
 18683                           	opt callstack 0
 18684  01F1F6                     ___omul:
 18685                           	opt callstack 0
 18686                           
 18687                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 18688  01F1F6  0E08               	movlw	8
 18689  01F1F8  26E1               	addwf	fsr1l,f,c
 18690  01F1FA  0E00               	movlw	0
 18691  01F1FC  22E2               	addwfc	fsr1h,f,c
 18692                           
 18693                           ;stkvar	_product @ sp[(-8)+0]
 18694                           
 18695                           ;incstack = 0
 18696  01F1FE  0E07               	movlw	7
 18697  01F200  6E2A               	movwf	btemp^0,c
 18698  01F202  0EF8               	movlw	-8
 18699  01F204                     u8151:
 18700  01F204  6AE3               	clrf	plusw1,c
 18701  01F206  2AE8               	incf	wreg,f,c
 18702  01F208  062A               	decf	btemp^0,f,c
 18703  01F20A  E2FC               	bc	u8151
 18704  01F20C                     l10293:
 18705                           
 18706                           ;stkvar	_multiplier @ sp[(-8)+-8]
 18707  01F20C  0EF0               	movlw	-16
 18708  01F20E  A0E3               	btfss	plusw1,0,c
 18709  01F210  D050               	goto	l10297
 18710                           
 18711                           ;stkvar	_multiplicand @ sp[(-8)+-16]
 18712                           ;stkvar	_product @ sp[(-8)+0]
 18713  01F212  0EF8               	movlw	-8
 18714  01F214  50E3               	movf	plusw1,w,c
 18715  01F216  6E2A               	movwf	btemp^0,c
 18716  01F218  0EE8               	movlw	-24
 18717  01F21A  50E3               	movf	plusw1,w,c
 18718  01F21C  262A               	addwf	btemp^0,f,c
 18719  01F21E  0EF8               	movlw	-8
 18720  01F220  0060  F0AB  FFE3   	movff	btemp,plusw1
 18721  01F226  0EF9               	movlw	-7
 18722  01F228  50E3               	movf	plusw1,w,c
 18723  01F22A  6E2A               	movwf	btemp^0,c
 18724  01F22C  0EE9               	movlw	-23
 18725  01F22E  50E3               	movf	plusw1,w,c
 18726  01F230  222A               	addwfc	btemp^0,f,c
 18727  01F232  0EF9               	movlw	-7
 18728  01F234  0060  F0AB  FFE3   	movff	btemp,plusw1
 18729  01F23A  0EFA               	movlw	-6
 18730  01F23C  50E3               	movf	plusw1,w,c
 18731  01F23E  6E2A               	movwf	btemp^0,c
 18732  01F240  0EEA               	movlw	-22
 18733  01F242  50E3               	movf	plusw1,w,c
 18734  01F244  222A               	addwfc	btemp^0,f,c
 18735  01F246  0EFA               	movlw	-6
 18736  01F248  0060  F0AB  FFE3   	movff	btemp,plusw1
 18737  01F24E  0EFB               	movlw	-5
 18738  01F250  50E3               	movf	plusw1,w,c
 18739  01F252  6E2A               	movwf	btemp^0,c
 18740  01F254  0EEB               	movlw	-21
 18741  01F256  50E3               	movf	plusw1,w,c
 18742  01F258  222A               	addwfc	btemp^0,f,c
 18743  01F25A  0EFB               	movlw	-5
 18744  01F25C  0060  F0AB  FFE3   	movff	btemp,plusw1
 18745  01F262  0EFC               	movlw	-4
 18746  01F264  50E3               	movf	plusw1,w,c
 18747  01F266  6E2A               	movwf	btemp^0,c
 18748  01F268  0EEC               	movlw	-20
 18749  01F26A  50E3               	movf	plusw1,w,c
 18750  01F26C  222A               	addwfc	btemp^0,f,c
 18751  01F26E  0EFC               	movlw	-4
 18752  01F270  0060  F0AB  FFE3   	movff	btemp,plusw1
 18753  01F276  0EFD               	movlw	-3
 18754  01F278  50E3               	movf	plusw1,w,c
 18755  01F27A  6E2A               	movwf	btemp^0,c
 18756  01F27C  0EED               	movlw	-19
 18757  01F27E  50E3               	movf	plusw1,w,c
 18758  01F280  222A               	addwfc	btemp^0,f,c
 18759  01F282  0EFD               	movlw	-3
 18760  01F284  0060  F0AB  FFE3   	movff	btemp,plusw1
 18761  01F28A  0EFE               	movlw	-2
 18762  01F28C  50E3               	movf	plusw1,w,c
 18763  01F28E  6E2A               	movwf	btemp^0,c
 18764  01F290  0EEE               	movlw	-18
 18765  01F292  50E3               	movf	plusw1,w,c
 18766  01F294  222A               	addwfc	btemp^0,f,c
 18767  01F296  0EFE               	movlw	-2
 18768  01F298  0060  F0AB  FFE3   	movff	btemp,plusw1
 18769  01F29E  0EFF               	movlw	-1
 18770  01F2A0  50E3               	movf	plusw1,w,c
 18771  01F2A2  6E2A               	movwf	btemp^0,c
 18772  01F2A4  0EEF               	movlw	-17
 18773  01F2A6  50E3               	movf	plusw1,w,c
 18774  01F2A8  222A               	addwfc	btemp^0,f,c
 18775  01F2AA  0EFF               	movlw	-1
 18776  01F2AC  0060  F0AB  FFE3   	movff	btemp,plusw1
 18777  01F2B2                     l10297:
 18778                           
 18779                           ;stkvar	_multiplicand @ sp[(-8)+-16]
 18780  01F2B2  90D8               	bcf	status,0,c
 18781  01F2B4  0EE8               	movlw	-24
 18782  01F2B6  36E3               	rlcf	plusw1,f,c
 18783  01F2B8  0EE9               	movlw	-23
 18784  01F2BA  36E3               	rlcf	plusw1,f,c
 18785  01F2BC  0EEA               	movlw	-22
 18786  01F2BE  36E3               	rlcf	plusw1,f,c
 18787  01F2C0  0EEB               	movlw	-21
 18788  01F2C2  36E3               	rlcf	plusw1,f,c
 18789  01F2C4  0EEC               	movlw	-20
 18790  01F2C6  36E3               	rlcf	plusw1,f,c
 18791  01F2C8  0EED               	movlw	-19
 18792  01F2CA  36E3               	rlcf	plusw1,f,c
 18793  01F2CC  0EEE               	movlw	-18
 18794  01F2CE  36E3               	rlcf	plusw1,f,c
 18795  01F2D0  0EEF               	movlw	-17
 18796  01F2D2  36E3               	rlcf	plusw1,f,c
 18797                           
 18798                           ;stkvar	_multiplier @ sp[(-8)+-8]
 18799  01F2D4  90D8               	bcf	status,0,c
 18800  01F2D6  0EF7               	movlw	-9
 18801  01F2D8  32E3               	rrcf	plusw1,f,c
 18802  01F2DA  0EF6               	movlw	-10
 18803  01F2DC  32E3               	rrcf	plusw1,f,c
 18804  01F2DE  0EF5               	movlw	-11
 18805  01F2E0  32E3               	rrcf	plusw1,f,c
 18806  01F2E2  0EF4               	movlw	-12
 18807  01F2E4  32E3               	rrcf	plusw1,f,c
 18808  01F2E6  0EF3               	movlw	-13
 18809  01F2E8  32E3               	rrcf	plusw1,f,c
 18810  01F2EA  0EF2               	movlw	-14
 18811  01F2EC  32E3               	rrcf	plusw1,f,c
 18812  01F2EE  0EF1               	movlw	-15
 18813  01F2F0  32E3               	rrcf	plusw1,f,c
 18814  01F2F2  0EF0               	movlw	-16
 18815  01F2F4  32E3               	rrcf	plusw1,f,c
 18816                           
 18817                           ;stkvar	_multiplier @ sp[(-8)+-8]
 18818  01F2F6  0EF0               	movlw	-16
 18819  01F2F8  50E3               	movf	plusw1,w,c
 18820  01F2FA  E188               	bnz	l10293
 18821  01F2FC  0EF1               	movlw	-15
 18822  01F2FE  50E3               	movf	plusw1,w,c
 18823  01F300  E185               	bnz	l10293
 18824  01F302  0EF2               	movlw	-14
 18825  01F304  50E3               	movf	plusw1,w,c
 18826  01F306  E182               	bnz	l10293
 18827  01F308  0EF3               	movlw	-13
 18828  01F30A  50E3               	movf	plusw1,w,c
 18829  01F30C  E10C               	bnz	u8171
 18830  01F30E  0EF4               	movlw	-12
 18831  01F310  50E3               	movf	plusw1,w,c
 18832  01F312  E109               	bnz	u8171
 18833  01F314  0EF5               	movlw	-11
 18834  01F316  50E3               	movf	plusw1,w,c
 18835  01F318  E106               	bnz	u8171
 18836  01F31A  0EF6               	movlw	-10
 18837  01F31C  50E3               	movf	plusw1,w,c
 18838  01F31E  E103               	bnz	u8171
 18839  01F320  0EF7               	movlw	-9
 18840  01F322  50E3               	movf	plusw1,w,c
 18841  01F324  A4D8               	btfss	status,2,c
 18842  01F326                     u8171:
 18843  01F326  D772               	goto	l10293
 18844                           
 18845                           ;stkvar	_product @ sp[(-8)+0]
 18846  01F328  0EF8               	movlw	248
 18847  01F32A  24E1               	addwf	fsr1l,w,c
 18848  01F32C  6ED9               	movwf	fsr2l,c
 18849  01F32E  0EFF               	movlw	255
 18850  01F330  20E2               	addwfc	fsr1h,w,c
 18851  01F332  6EDA               	movwf	fsr2h,c
 18852                           
 18853                           ;stkvar	?___omul @ sp[(-8)+-8]
 18854  01F334  0E08               	movlw	8
 18855  01F336  6E2A               	movwf	btemp^0,c
 18856  01F338  0EF0               	movlw	-16
 18857  01F33A                     us818999:
 18858  01F33A  006F FF7B FFE3     	movff	postinc2,plusw1
 18859  01F340  28E8               	incf	wreg,w,c
 18860  01F342  2E2A               	decfsz	btemp^0,f,c
 18861  01F344  D7FA               	bra	us818999
 18862                           
 18863                           ; ___omul: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsi
      +                          ze = 16, vargsize = 0
 18864  01F346  0EF8               	movlw	248
 18865  01F348  26E1               	addwf	fsr1l,f,c
 18866  01F34A  0EFF               	movlw	255
 18867  01F34C  22E2               	addwfc	fsr1h,f,c
 18868  01F34E  0012               	return		;funcret
 18869  01F350                     __end_of___omul:
 18870                           	opt callstack 0
 18871                           
 18872 ;; *************** function ___lmul *****************
 18873 ;; Defined at:
 18874 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul32.c"
 18875 ;; Parameters:    Size  Location     Type
 18876 ;;  multiplier      4  [STACK] unsigned long 
 18877 ;;  multiplicand    4  [STACK] unsigned long 
 18878 ;; Auto vars:     Size  Location     Type
 18879 ;;  product         4  [STACK] unsigned long 
 18880 ;; Return value:  Size  Location     Type
 18881 ;;                  4  [STACK] unsigned long 
 18882 ;; Registers used:
 18883 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 18884 ;; Tracked objects:
 18885 ;;		On entry : 0/0
 18886 ;;		On exit  : 0/0
 18887 ;;		Unchanged: 0/0
 18888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18893 ;;Total ram usage:        0 bytes
 18894 ;; Hardware stack levels used:    1
 18895 ;; Hardware stack levels required when called:   15
 18896 ;; This function calls:
 18897 ;;		Nothing
 18898 ;; This function is called by:
 18899 ;;		___secs_to_tm
 18900 ;;		_rule_to_secs
 18901 ;;		___year_to_secs
 18902 ;; This function uses a reentrant model
 18903 ;;
 18904                           
 18905                           	psect	text51
 18906  00076C                     __ptext51:
 18907                           	opt callstack 0
 18908  00076C                     ___lmul:
 18909                           	opt callstack 0
 18910                           
 18911                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18912  00076C  52E6               	movf	postinc1,f,c
 18913  00076E  52E6               	movf	postinc1,f,c
 18914  000770  52E6               	movf	postinc1,f,c
 18915  000772  52E6               	movf	postinc1,f,c
 18916                           
 18917                           ;stkvar	_product @ sp[(-4)+0]
 18918                           
 18919                           ;incstack = 0
 18920  000774  0EFC               	movlw	-4
 18921  000776  6AE3               	clrf	plusw1,c
 18922  000778  0EFD               	movlw	-3
 18923  00077A  6AE3               	clrf	plusw1,c
 18924  00077C  0EFE               	movlw	-2
 18925  00077E  6AE3               	clrf	plusw1,c
 18926  000780  0EFF               	movlw	-1
 18927  000782  6AE3               	clrf	plusw1,c
 18928  000784                     l2742:
 18929                           
 18930                           ;stkvar	_multiplier @ sp[(-4)+-4]
 18931  000784  0EF8               	movlw	-8
 18932  000786  A0E3               	btfss	plusw1,0,c
 18933  000788  D028               	goto	l10283
 18934                           
 18935                           ;stkvar	_multiplicand @ sp[(-4)+-8]
 18936                           ;stkvar	_product @ sp[(-4)+0]
 18937  00078A  0EFC               	movlw	-4
 18938  00078C  50E3               	movf	plusw1,w,c
 18939  00078E  6E2A               	movwf	btemp^0,c
 18940  000790  0EF4               	movlw	-12
 18941  000792  50E3               	movf	plusw1,w,c
 18942  000794  262A               	addwf	btemp^0,f,c
 18943  000796  0EFC               	movlw	-4
 18944  000798  0060  F0AB  FFE3   	movff	btemp,plusw1
 18945  00079E  0EFD               	movlw	-3
 18946  0007A0  50E3               	movf	plusw1,w,c
 18947  0007A2  6E2A               	movwf	btemp^0,c
 18948  0007A4  0EF5               	movlw	-11
 18949  0007A6  50E3               	movf	plusw1,w,c
 18950  0007A8  222A               	addwfc	btemp^0,f,c
 18951  0007AA  0EFD               	movlw	-3
 18952  0007AC  0060  F0AB  FFE3   	movff	btemp,plusw1
 18953  0007B2  0EFE               	movlw	-2
 18954  0007B4  50E3               	movf	plusw1,w,c
 18955  0007B6  6E2A               	movwf	btemp^0,c
 18956  0007B8  0EF6               	movlw	-10
 18957  0007BA  50E3               	movf	plusw1,w,c
 18958  0007BC  222A               	addwfc	btemp^0,f,c
 18959  0007BE  0EFE               	movlw	-2
 18960  0007C0  0060  F0AB  FFE3   	movff	btemp,plusw1
 18961  0007C6  0EFF               	movlw	-1
 18962  0007C8  50E3               	movf	plusw1,w,c
 18963  0007CA  6E2A               	movwf	btemp^0,c
 18964  0007CC  0EF7               	movlw	-9
 18965  0007CE  50E3               	movf	plusw1,w,c
 18966  0007D0  222A               	addwfc	btemp^0,f,c
 18967  0007D2  0EFF               	movlw	-1
 18968  0007D4  0060  F0AB  FFE3   	movff	btemp,plusw1
 18969  0007DA                     l10283:
 18970                           
 18971                           ;stkvar	_multiplicand @ sp[(-4)+-8]
 18972  0007DA  90D8               	bcf	status,0,c
 18973  0007DC  0EF4               	movlw	-12
 18974  0007DE  36E3               	rlcf	plusw1,f,c
 18975  0007E0  0EF5               	movlw	-11
 18976  0007E2  36E3               	rlcf	plusw1,f,c
 18977  0007E4  0EF6               	movlw	-10
 18978  0007E6  36E3               	rlcf	plusw1,f,c
 18979  0007E8  0EF7               	movlw	-9
 18980  0007EA  36E3               	rlcf	plusw1,f,c
 18981                           
 18982                           ;stkvar	_multiplier @ sp[(-4)+-4]
 18983  0007EC  90D8               	bcf	status,0,c
 18984  0007EE  0EFB               	movlw	-5
 18985  0007F0  32E3               	rrcf	plusw1,f,c
 18986  0007F2  0EFA               	movlw	-6
 18987  0007F4  32E3               	rrcf	plusw1,f,c
 18988  0007F6  0EF9               	movlw	-7
 18989  0007F8  32E3               	rrcf	plusw1,f,c
 18990  0007FA  0EF8               	movlw	-8
 18991  0007FC  32E3               	rrcf	plusw1,f,c
 18992                           
 18993                           ;stkvar	_multiplier @ sp[(-4)+-4]
 18994  0007FE  0EF8               	movlw	-8
 18995  000800  50E3               	movf	plusw1,w,c
 18996  000802  E1C0               	bnz	l2742
 18997  000804  0EF9               	movlw	-7
 18998  000806  50E3               	movf	plusw1,w,c
 18999  000808  E1BD               	bnz	l2742
 19000  00080A  0EFA               	movlw	-6
 19001  00080C  50E3               	movf	plusw1,w,c
 19002  00080E  E1BA               	bnz	l2742
 19003  000810  0EFB               	movlw	-5
 19004  000812  50E3               	movf	plusw1,w,c
 19005  000814  A4D8               	btfss	status,2,c
 19006  000816  D7B6               	goto	l2742
 19007                           
 19008                           ;stkvar	_product @ sp[(-4)+0]
 19009  000818  0EFC               	movlw	-4
 19010  00081A  006F FF8C  F02A    	movff	plusw1,btemp
 19011  000820  0EFD               	movlw	-3
 19012  000822  006F FF8C  F02B    	movff	plusw1,btemp+1
 19013  000828  0EFE               	movlw	-2
 19014  00082A  006F FF8C  F02C    	movff	plusw1,btemp+2
 19015  000830  0EFF               	movlw	-1
 19016  000832  006F FF8C  F02D    	movff	plusw1,btemp+3
 19017                           
 19018                           ; ___lmul: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 19019  000838  0EF4               	movlw	244
 19020  00083A  26E1               	addwf	fsr1l,f,c
 19021  00083C  0EFF               	movlw	255
 19022  00083E  22E2               	addwfc	fsr1h,f,c
 19023  000840  0012               	return		;funcret
 19024  000842                     __end_of___lmul:
 19025                           	opt callstack 0
 19026                           
 19027 ;; *************** function ___almod *****************
 19028 ;; Defined at:
 19029 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/almod.c"
 19030 ;; Parameters:    Size  Location     Type
 19031 ;;  dividend        4  [STACK] long 
 19032 ;;  divisor         4  [STACK] long 
 19033 ;; Auto vars:     Size  Location     Type
 19034 ;;  sign            1  [STACK] unsigned char 
 19035 ;;  counter         1  [STACK] unsigned char 
 19036 ;; Return value:  Size  Location     Type
 19037 ;;                  4  [STACK] long 
 19038 ;; Registers used:
 19039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 19040 ;; Tracked objects:
 19041 ;;		On entry : 0/39
 19042 ;;		On exit  : 0/0
 19043 ;;		Unchanged: 0/0
 19044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19049 ;;Total ram usage:        0 bytes
 19050 ;; Hardware stack levels used:    1
 19051 ;; Hardware stack levels required when called:   15
 19052 ;; This function calls:
 19053 ;;		Nothing
 19054 ;; This function is called by:
 19055 ;;		___secs_to_tm
 19056 ;; This function uses a reentrant model
 19057 ;;
 19058                           
 19059                           	psect	text52
 19060  01EC6C                     __ptext52:
 19061                           	opt callstack 0
 19062  01EC6C                     ___almod:
 19063                           	opt callstack 0
 19064                           
 19065                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19066  01EC6C  52E6               	movf	postinc1,f,c
 19067  01EC6E  52E6               	movf	postinc1,f,c
 19068                           
 19069                           ;stkvar	_sign @ sp[(-2)+0]
 19070                           
 19071                           ;incstack = 0
 19072  01EC70  0EFE               	movlw	-2
 19073  01EC72  6AE3               	clrf	plusw1,c
 19074                           
 19075                           ;stkvar	_dividend @ sp[(-2)+-4]
 19076  01EC74  0EFD               	movlw	-3
 19077  01EC76  AEE3               	btfss	plusw1,7,c
 19078  01EC78  D014               	goto	l12073
 19079                           
 19080                           ;stkvar	_dividend @ sp[(-2)+-4]
 19081                           ;stkvar	_dividend @ sp[(-2)+-4]
 19082  01EC7A  0EFA               	movlw	-6
 19083  01EC7C  6CE3               	negf	plusw1,c
 19084  01EC7E  0EFB               	movlw	-5
 19085  01EC80  1EE3               	comf	plusw1,f,c
 19086  01EC82  0EFC               	movlw	-4
 19087  01EC84  1EE3               	comf	plusw1,f,c
 19088  01EC86  0EFD               	movlw	-3
 19089  01EC88  1EE3               	comf	plusw1,f,c
 19090  01EC8A  E308               	bnc	u11300
 19091  01EC8C  0EFB               	movlw	-5
 19092  01EC8E  2AE3               	incf	plusw1,f,c
 19093  01EC90  E305               	bnc	u11300
 19094  01EC92  0EFC               	movlw	-4
 19095  01EC94  2AE3               	incf	plusw1,f,c
 19096  01EC96  E302               	bnc	u11300
 19097  01EC98  0EFD               	movlw	-3
 19098  01EC9A  2AE3               	incf	plusw1,f,c
 19099  01EC9C                     u11300:
 19100                           
 19101                           ;stkvar	_sign @ sp[(-2)+0]
 19102  01EC9C  0EFE               	movlw	-2
 19103  01EC9E  6AE3               	clrf	plusw1,c
 19104  01ECA0  2AE3               	incf	plusw1,f,c
 19105  01ECA2                     l12073:
 19106                           
 19107                           ;stkvar	_divisor @ sp[(-2)+-8]
 19108  01ECA2  0EF9               	movlw	-7
 19109  01ECA4  AEE3               	btfss	plusw1,7,c
 19110  01ECA6  D011               	goto	u11320
 19111                           
 19112                           ;stkvar	_divisor @ sp[(-2)+-8]
 19113                           ;stkvar	_divisor @ sp[(-2)+-8]
 19114  01ECA8  0EF6               	movlw	-10
 19115  01ECAA  6CE3               	negf	plusw1,c
 19116  01ECAC  0EF7               	movlw	-9
 19117  01ECAE  1EE3               	comf	plusw1,f,c
 19118  01ECB0  0EF8               	movlw	-8
 19119  01ECB2  1EE3               	comf	plusw1,f,c
 19120  01ECB4  0EF9               	movlw	-7
 19121  01ECB6  1EE3               	comf	plusw1,f,c
 19122  01ECB8  E308               	bnc	u11320
 19123  01ECBA  0EF7               	movlw	-9
 19124  01ECBC  2AE3               	incf	plusw1,f,c
 19125  01ECBE  E305               	bnc	u11320
 19126  01ECC0  0EF8               	movlw	-8
 19127  01ECC2  2AE3               	incf	plusw1,f,c
 19128  01ECC4  E302               	bnc	u11320
 19129  01ECC6  0EF9               	movlw	-7
 19130  01ECC8  2AE3               	incf	plusw1,f,c
 19131  01ECCA                     u11320:
 19132                           
 19133                           ;stkvar	_divisor @ sp[(-2)+-8]
 19134  01ECCA  0EF6               	movlw	-10
 19135  01ECCC  50E3               	movf	plusw1,w,c
 19136  01ECCE  E10A               	bnz	u11330
 19137  01ECD0  0EF7               	movlw	-9
 19138  01ECD2  50E3               	movf	plusw1,w,c
 19139  01ECD4  E107               	bnz	u11330
 19140  01ECD6  0EF8               	movlw	-8
 19141  01ECD8  50E3               	movf	plusw1,w,c
 19142  01ECDA  E104               	bnz	u11330
 19143  01ECDC  0EF9               	movlw	-7
 19144  01ECDE  50E3               	movf	plusw1,w,c
 19145  01ECE0  B4D8               	btfsc	status,2,c
 19146  01ECE2  D04D               	goto	u11360
 19147  01ECE4                     u11330:
 19148                           
 19149                           ;stkvar	_counter @ sp[(-2)+1]
 19150  01ECE4  0EFF               	movlw	-1
 19151  01ECE6  6AE3               	clrf	plusw1,c
 19152  01ECE8  D00A               	goto	L17
 19153  01ECEA                     l12081:
 19154                           
 19155                           ;stkvar	_divisor @ sp[(-2)+-8]
 19156  01ECEA  90D8               	bcf	status,0,c
 19157  01ECEC  0EF6               	movlw	-10
 19158  01ECEE  36E3               	rlcf	plusw1,f,c
 19159  01ECF0  0EF7               	movlw	-9
 19160  01ECF2  36E3               	rlcf	plusw1,f,c
 19161  01ECF4  0EF8               	movlw	-8
 19162  01ECF6  36E3               	rlcf	plusw1,f,c
 19163  01ECF8  0EF9               	movlw	-7
 19164  01ECFA  36E3               	rlcf	plusw1,f,c
 19165                           
 19166                           ;stkvar	_counter @ sp[(-2)+1]
 19167  01ECFC  0EFF               	movlw	-1
 19168  01ECFE                     L17:
 19169  01ECFE  2AE3               	incf	plusw1,f,c
 19170                           
 19171                           ;stkvar	_divisor @ sp[(-2)+-8]
 19172  01ED00  0EF9               	movlw	-7
 19173  01ED02  AEE3               	btfss	plusw1,7,c
 19174  01ED04  D7F2               	goto	l12081
 19175  01ED06                     u11340:
 19176                           
 19177                           ;stkvar	_divisor @ sp[(-2)+-8]
 19178                           ;stkvar	_dividend @ sp[(-2)+-4]
 19179  01ED06  50E1               	movf	fsr1l,w,c
 19180  01ED08  0FFA               	addlw	-6
 19181  01ED0A  6ED9               	movwf	fsr2l,c
 19182  01ED0C  50E2               	movf	fsr1h,w,c
 19183  01ED0E  6EDA               	movwf	fsr2h,c
 19184  01ED10  0EFF               	movlw	255
 19185  01ED12  22DA               	addwfc	fsr2h,f,c
 19186  01ED14  0EF6               	movlw	-10
 19187  01ED16  50E3               	movf	plusw1,w,c
 19188  01ED18  5CDE               	subwf	postinc2,w,c
 19189  01ED1A  0EF7               	movlw	-9
 19190  01ED1C  50E3               	movf	plusw1,w,c
 19191  01ED1E  58DE               	subwfb	postinc2,w,c
 19192  01ED20  0EF8               	movlw	-8
 19193  01ED22  50E3               	movf	plusw1,w,c
 19194  01ED24  58DE               	subwfb	postinc2,w,c
 19195  01ED26  0EF9               	movlw	-7
 19196  01ED28  50E3               	movf	plusw1,w,c
 19197  01ED2A  58DE               	subwfb	postinc2,w,c
 19198  01ED2C  A0D8               	btfss	status,0,c
 19199  01ED2E  D013               	goto	l12089
 19200                           
 19201                           ;stkvar	_divisor @ sp[(-2)+-8]
 19202                           ;stkvar	_dividend @ sp[(-2)+-4]
 19203  01ED30  50E1               	movf	fsr1l,w,c
 19204  01ED32  0FFA               	addlw	-6
 19205  01ED34  6ED9               	movwf	fsr2l,c
 19206  01ED36  50E2               	movf	fsr1h,w,c
 19207  01ED38  6EDA               	movwf	fsr2h,c
 19208  01ED3A  0EFF               	movlw	255
 19209  01ED3C  22DA               	addwfc	fsr2h,f,c
 19210  01ED3E  0EF6               	movlw	-10
 19211  01ED40  50E3               	movf	plusw1,w,c
 19212  01ED42  5EDE               	subwf	postinc2,f,c
 19213  01ED44  0EF7               	movlw	-9
 19214  01ED46  50E3               	movf	plusw1,w,c
 19215  01ED48  5ADE               	subwfb	postinc2,f,c
 19216  01ED4A  0EF8               	movlw	-8
 19217  01ED4C  50E3               	movf	plusw1,w,c
 19218  01ED4E  5ADE               	subwfb	postinc2,f,c
 19219  01ED50  0EF9               	movlw	-7
 19220  01ED52  50E3               	movf	plusw1,w,c
 19221  01ED54  5ADE               	subwfb	postinc2,f,c
 19222  01ED56                     l12089:
 19223                           
 19224                           ;stkvar	_divisor @ sp[(-2)+-8]
 19225  01ED56  90D8               	bcf	status,0,c
 19226  01ED58  0EF9               	movlw	-7
 19227  01ED5A  32E3               	rrcf	plusw1,f,c
 19228  01ED5C  0EF8               	movlw	-8
 19229  01ED5E  32E3               	rrcf	plusw1,f,c
 19230  01ED60  0EF7               	movlw	-9
 19231  01ED62  32E3               	rrcf	plusw1,f,c
 19232  01ED64  0EF6               	movlw	-10
 19233  01ED66  32E3               	rrcf	plusw1,f,c
 19234                           
 19235                           ;stkvar	_counter @ sp[(-2)+1]
 19236  01ED68  0EFF               	movlw	-1
 19237  01ED6A  50E3               	movf	plusw1,w,c
 19238  01ED6C  6E2A               	movwf	btemp^0,c
 19239  01ED6E  0E01               	movlw	1
 19240  01ED70  5E2A               	subwf	btemp^0,f,c
 19241  01ED72  0EFF               	movlw	-1
 19242  01ED74  0060  F0AB  FFE3   	movff	btemp,plusw1
 19243  01ED7A  A4D8               	btfss	status,2,c
 19244  01ED7C  D7C4               	goto	u11340
 19245  01ED7E                     u11360:
 19246                           
 19247                           ;stkvar	_sign @ sp[(-2)+0]
 19248  01ED7E  0EFE               	movlw	-2
 19249  01ED80  50E3               	movf	plusw1,w,c
 19250  01ED82  B4D8               	btfsc	status,2,c
 19251  01ED84  D011               	goto	u11380
 19252                           
 19253                           ;stkvar	_dividend @ sp[(-2)+-4]
 19254                           ;stkvar	_dividend @ sp[(-2)+-4]
 19255  01ED86  0EFA               	movlw	-6
 19256  01ED88  6CE3               	negf	plusw1,c
 19257  01ED8A  0EFB               	movlw	-5
 19258  01ED8C  1EE3               	comf	plusw1,f,c
 19259  01ED8E  0EFC               	movlw	-4
 19260  01ED90  1EE3               	comf	plusw1,f,c
 19261  01ED92  0EFD               	movlw	-3
 19262  01ED94  1EE3               	comf	plusw1,f,c
 19263  01ED96  E308               	bnc	u11380
 19264  01ED98  0EFB               	movlw	-5
 19265  01ED9A  2AE3               	incf	plusw1,f,c
 19266  01ED9C  E305               	bnc	u11380
 19267  01ED9E  0EFC               	movlw	-4
 19268  01EDA0  2AE3               	incf	plusw1,f,c
 19269  01EDA2  E302               	bnc	u11380
 19270  01EDA4  0EFD               	movlw	-3
 19271  01EDA6  2AE3               	incf	plusw1,f,c
 19272  01EDA8                     u11380:
 19273                           
 19274                           ;stkvar	_dividend @ sp[(-2)+-4]
 19275  01EDA8  0EFA               	movlw	-6
 19276  01EDAA  006F FF8C  F02A    	movff	plusw1,btemp
 19277  01EDB0  0EFB               	movlw	-5
 19278  01EDB2  006F FF8C  F02B    	movff	plusw1,btemp+1
 19279  01EDB8  0EFC               	movlw	-4
 19280  01EDBA  006F FF8C  F02C    	movff	plusw1,btemp+2
 19281  01EDC0  0EFD               	movlw	-3
 19282  01EDC2  006F FF8C  F02D    	movff	plusw1,btemp+3
 19283                           
 19284                           ; ___almod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 19285  01EDC8  0EF6               	movlw	246
 19286  01EDCA  26E1               	addwf	fsr1l,f,c
 19287  01EDCC  0EFF               	movlw	255
 19288  01EDCE  22E2               	addwfc	fsr1h,f,c
 19289  01EDD0  0012               	return		;funcret
 19290  01EDD2                     __end_of___almod:
 19291                           	opt callstack 0
 19292                           
 19293 ;; *************** function ___aldiv *****************
 19294 ;; Defined at:
 19295 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aldiv.c"
 19296 ;; Parameters:    Size  Location     Type
 19297 ;;  dividend        4  [STACK] long 
 19298 ;;  divisor         4  [STACK] long 
 19299 ;; Auto vars:     Size  Location     Type
 19300 ;;  quotient        4  [STACK] long 
 19301 ;;  sign            1  [STACK] unsigned char 
 19302 ;;  counter         1  [STACK] unsigned char 
 19303 ;; Return value:  Size  Location     Type
 19304 ;;                  4  [STACK] long 
 19305 ;; Registers used:
 19306 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 19307 ;; Tracked objects:
 19308 ;;		On entry : 0/0
 19309 ;;		On exit  : 0/0
 19310 ;;		Unchanged: 0/0
 19311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19316 ;;Total ram usage:        0 bytes
 19317 ;; Hardware stack levels used:    1
 19318 ;; Hardware stack levels required when called:   15
 19319 ;; This function calls:
 19320 ;;		Nothing
 19321 ;; This function is called by:
 19322 ;;		___secs_to_tm
 19323 ;;		_rule_to_secs
 19324 ;; This function uses a reentrant model
 19325 ;;
 19326                           
 19327                           	psect	text53
 19328  01E360                     __ptext53:
 19329                           	opt callstack 0
 19330  01E360                     ___aldiv:
 19331                           	opt callstack 0
 19332                           
 19333                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19334  01E360  0E06               	movlw	6
 19335  01E362  26E1               	addwf	fsr1l,f,c
 19336  01E364  0E00               	movlw	0
 19337  01E366  22E2               	addwfc	fsr1h,f,c
 19338                           
 19339                           ;stkvar	_sign @ sp[(-6)+4]
 19340                           
 19341                           ;incstack = 0
 19342  01E368  0EFE               	movlw	-2
 19343  01E36A  6AE3               	clrf	plusw1,c
 19344                           
 19345                           ;stkvar	_divisor @ sp[(-6)+-8]
 19346  01E36C  0EF5               	movlw	-11
 19347  01E36E  AEE3               	btfss	plusw1,7,c
 19348  01E370  D014               	goto	l11613
 19349                           
 19350                           ;stkvar	_divisor @ sp[(-6)+-8]
 19351                           ;stkvar	_divisor @ sp[(-6)+-8]
 19352  01E372  0EF2               	movlw	-14
 19353  01E374  6CE3               	negf	plusw1,c
 19354  01E376  0EF3               	movlw	-13
 19355  01E378  1EE3               	comf	plusw1,f,c
 19356  01E37A  0EF4               	movlw	-12
 19357  01E37C  1EE3               	comf	plusw1,f,c
 19358  01E37E  0EF5               	movlw	-11
 19359  01E380  1EE3               	comf	plusw1,f,c
 19360  01E382  E308               	bnc	u10620
 19361  01E384  0EF3               	movlw	-13
 19362  01E386  2AE3               	incf	plusw1,f,c
 19363  01E388  E305               	bnc	u10620
 19364  01E38A  0EF4               	movlw	-12
 19365  01E38C  2AE3               	incf	plusw1,f,c
 19366  01E38E  E302               	bnc	u10620
 19367  01E390  0EF5               	movlw	-11
 19368  01E392  2AE3               	incf	plusw1,f,c
 19369  01E394                     u10620:
 19370                           
 19371                           ;stkvar	_sign @ sp[(-6)+4]
 19372  01E394  0EFE               	movlw	-2
 19373  01E396  6AE3               	clrf	plusw1,c
 19374  01E398  2AE3               	incf	plusw1,f,c
 19375  01E39A                     l11613:
 19376                           
 19377                           ;stkvar	_dividend @ sp[(-6)+-4]
 19378  01E39A  0EF9               	movlw	-7
 19379  01E39C  AEE3               	btfss	plusw1,7,c
 19380  01E39E  D013               	goto	l11619
 19381                           
 19382                           ;stkvar	_dividend @ sp[(-6)+-4]
 19383                           ;stkvar	_dividend @ sp[(-6)+-4]
 19384  01E3A0  0EF6               	movlw	-10
 19385  01E3A2  6CE3               	negf	plusw1,c
 19386  01E3A4  0EF7               	movlw	-9
 19387  01E3A6  1EE3               	comf	plusw1,f,c
 19388  01E3A8  0EF8               	movlw	-8
 19389  01E3AA  1EE3               	comf	plusw1,f,c
 19390  01E3AC  0EF9               	movlw	-7
 19391  01E3AE  1EE3               	comf	plusw1,f,c
 19392  01E3B0  E308               	bnc	u10640
 19393  01E3B2  0EF7               	movlw	-9
 19394  01E3B4  2AE3               	incf	plusw1,f,c
 19395  01E3B6  E305               	bnc	u10640
 19396  01E3B8  0EF8               	movlw	-8
 19397  01E3BA  2AE3               	incf	plusw1,f,c
 19398  01E3BC  E302               	bnc	u10640
 19399  01E3BE  0EF9               	movlw	-7
 19400  01E3C0  2AE3               	incf	plusw1,f,c
 19401  01E3C2                     u10640:
 19402                           
 19403                           ;stkvar	_sign @ sp[(-6)+4]
 19404  01E3C2  0EFE               	movlw	-2
 19405  01E3C4  70E3               	btg	plusw1,0,c
 19406  01E3C6                     l11619:
 19407                           
 19408                           ;stkvar	_quotient @ sp[(-6)+0]
 19409  01E3C6  0EFA               	movlw	-6
 19410  01E3C8  6AE3               	clrf	plusw1,c
 19411  01E3CA  0EFB               	movlw	-5
 19412  01E3CC  6AE3               	clrf	plusw1,c
 19413  01E3CE  0EFC               	movlw	-4
 19414  01E3D0  6AE3               	clrf	plusw1,c
 19415  01E3D2  0EFD               	movlw	-3
 19416  01E3D4  6AE3               	clrf	plusw1,c
 19417                           
 19418                           ;stkvar	_divisor @ sp[(-6)+-8]
 19419  01E3D6  0EF2               	movlw	-14
 19420  01E3D8  50E3               	movf	plusw1,w,c
 19421  01E3DA  E10A               	bnz	u10650
 19422  01E3DC  0EF3               	movlw	-13
 19423  01E3DE  50E3               	movf	plusw1,w,c
 19424  01E3E0  E107               	bnz	u10650
 19425  01E3E2  0EF4               	movlw	-12
 19426  01E3E4  50E3               	movf	plusw1,w,c
 19427  01E3E6  E104               	bnz	u10650
 19428  01E3E8  0EF5               	movlw	-11
 19429  01E3EA  50E3               	movf	plusw1,w,c
 19430  01E3EC  B4D8               	btfsc	status,2,c
 19431  01E3EE  D058               	goto	u10680
 19432  01E3F0                     u10650:
 19433                           
 19434                           ;stkvar	_counter @ sp[(-6)+5]
 19435  01E3F0  0EFF               	movlw	-1
 19436  01E3F2  6AE3               	clrf	plusw1,c
 19437  01E3F4  D00A               	goto	L18
 19438  01E3F6                     l11625:
 19439                           
 19440                           ;stkvar	_divisor @ sp[(-6)+-8]
 19441  01E3F6  90D8               	bcf	status,0,c
 19442  01E3F8  0EF2               	movlw	-14
 19443  01E3FA  36E3               	rlcf	plusw1,f,c
 19444  01E3FC  0EF3               	movlw	-13
 19445  01E3FE  36E3               	rlcf	plusw1,f,c
 19446  01E400  0EF4               	movlw	-12
 19447  01E402  36E3               	rlcf	plusw1,f,c
 19448  01E404  0EF5               	movlw	-11
 19449  01E406  36E3               	rlcf	plusw1,f,c
 19450                           
 19451                           ;stkvar	_counter @ sp[(-6)+5]
 19452  01E408  0EFF               	movlw	-1
 19453  01E40A                     L18:
 19454  01E40A  2AE3               	incf	plusw1,f,c
 19455                           
 19456                           ;stkvar	_divisor @ sp[(-6)+-8]
 19457  01E40C  0EF5               	movlw	-11
 19458  01E40E  AEE3               	btfss	plusw1,7,c
 19459  01E410  D7F2               	goto	l11625
 19460  01E412                     u10660:
 19461                           
 19462                           ;stkvar	_quotient @ sp[(-6)+0]
 19463  01E412  90D8               	bcf	status,0,c
 19464  01E414  0EFA               	movlw	-6
 19465  01E416  36E3               	rlcf	plusw1,f,c
 19466  01E418  0EFB               	movlw	-5
 19467  01E41A  36E3               	rlcf	plusw1,f,c
 19468  01E41C  0EFC               	movlw	-4
 19469  01E41E  36E3               	rlcf	plusw1,f,c
 19470  01E420  0EFD               	movlw	-3
 19471  01E422  36E3               	rlcf	plusw1,f,c
 19472                           
 19473                           ;stkvar	_divisor @ sp[(-6)+-8]
 19474                           ;stkvar	_dividend @ sp[(-6)+-4]
 19475  01E424  50E1               	movf	fsr1l,w,c
 19476  01E426  0FF6               	addlw	-10
 19477  01E428  6ED9               	movwf	fsr2l,c
 19478  01E42A  50E2               	movf	fsr1h,w,c
 19479  01E42C  6EDA               	movwf	fsr2h,c
 19480  01E42E  0EFF               	movlw	255
 19481  01E430  22DA               	addwfc	fsr2h,f,c
 19482  01E432  0EF2               	movlw	-14
 19483  01E434  50E3               	movf	plusw1,w,c
 19484  01E436  5CDE               	subwf	postinc2,w,c
 19485  01E438  0EF3               	movlw	-13
 19486  01E43A  50E3               	movf	plusw1,w,c
 19487  01E43C  58DE               	subwfb	postinc2,w,c
 19488  01E43E  0EF4               	movlw	-12
 19489  01E440  50E3               	movf	plusw1,w,c
 19490  01E442  58DE               	subwfb	postinc2,w,c
 19491  01E444  0EF5               	movlw	-11
 19492  01E446  50E3               	movf	plusw1,w,c
 19493  01E448  58DE               	subwfb	postinc2,w,c
 19494  01E44A  A0D8               	btfss	status,0,c
 19495  01E44C  D015               	goto	l11637
 19496                           
 19497                           ;stkvar	_divisor @ sp[(-6)+-8]
 19498                           ;stkvar	_dividend @ sp[(-6)+-4]
 19499  01E44E  50E1               	movf	fsr1l,w,c
 19500  01E450  0FF6               	addlw	-10
 19501  01E452  6ED9               	movwf	fsr2l,c
 19502  01E454  50E2               	movf	fsr1h,w,c
 19503  01E456  6EDA               	movwf	fsr2h,c
 19504  01E458  0EFF               	movlw	255
 19505  01E45A  22DA               	addwfc	fsr2h,f,c
 19506  01E45C  0EF2               	movlw	-14
 19507  01E45E  50E3               	movf	plusw1,w,c
 19508  01E460  5EDE               	subwf	postinc2,f,c
 19509  01E462  0EF3               	movlw	-13
 19510  01E464  50E3               	movf	plusw1,w,c
 19511  01E466  5ADE               	subwfb	postinc2,f,c
 19512  01E468  0EF4               	movlw	-12
 19513  01E46A  50E3               	movf	plusw1,w,c
 19514  01E46C  5ADE               	subwfb	postinc2,f,c
 19515  01E46E  0EF5               	movlw	-11
 19516  01E470  50E3               	movf	plusw1,w,c
 19517  01E472  5ADE               	subwfb	postinc2,f,c
 19518                           
 19519                           ;stkvar	_quotient @ sp[(-6)+0]
 19520  01E474  0EFA               	movlw	-6
 19521  01E476  80E3               	bsf	plusw1,0,c
 19522  01E478                     l11637:
 19523                           
 19524                           ;stkvar	_divisor @ sp[(-6)+-8]
 19525  01E478  90D8               	bcf	status,0,c
 19526  01E47A  0EF5               	movlw	-11
 19527  01E47C  32E3               	rrcf	plusw1,f,c
 19528  01E47E  0EF4               	movlw	-12
 19529  01E480  32E3               	rrcf	plusw1,f,c
 19530  01E482  0EF3               	movlw	-13
 19531  01E484  32E3               	rrcf	plusw1,f,c
 19532  01E486  0EF2               	movlw	-14
 19533  01E488  32E3               	rrcf	plusw1,f,c
 19534                           
 19535                           ;stkvar	_counter @ sp[(-6)+5]
 19536  01E48A  0EFF               	movlw	-1
 19537  01E48C  50E3               	movf	plusw1,w,c
 19538  01E48E  6E2A               	movwf	btemp^0,c
 19539  01E490  0E01               	movlw	1
 19540  01E492  5E2A               	subwf	btemp^0,f,c
 19541  01E494  0EFF               	movlw	-1
 19542  01E496  0060  F0AB  FFE3   	movff	btemp,plusw1
 19543  01E49C  A4D8               	btfss	status,2,c
 19544  01E49E  D7B9               	goto	u10660
 19545  01E4A0                     u10680:
 19546                           
 19547                           ;stkvar	_sign @ sp[(-6)+4]
 19548  01E4A0  0EFE               	movlw	-2
 19549  01E4A2  50E3               	movf	plusw1,w,c
 19550  01E4A4  B4D8               	btfsc	status,2,c
 19551  01E4A6  D011               	goto	u10700
 19552                           
 19553                           ;stkvar	_quotient @ sp[(-6)+0]
 19554                           ;stkvar	_quotient @ sp[(-6)+0]
 19555  01E4A8  0EFA               	movlw	-6
 19556  01E4AA  6CE3               	negf	plusw1,c
 19557  01E4AC  0EFB               	movlw	-5
 19558  01E4AE  1EE3               	comf	plusw1,f,c
 19559  01E4B0  0EFC               	movlw	-4
 19560  01E4B2  1EE3               	comf	plusw1,f,c
 19561  01E4B4  0EFD               	movlw	-3
 19562  01E4B6  1EE3               	comf	plusw1,f,c
 19563  01E4B8  E308               	bnc	u10700
 19564  01E4BA  0EFB               	movlw	-5
 19565  01E4BC  2AE3               	incf	plusw1,f,c
 19566  01E4BE  E305               	bnc	u10700
 19567  01E4C0  0EFC               	movlw	-4
 19568  01E4C2  2AE3               	incf	plusw1,f,c
 19569  01E4C4  E302               	bnc	u10700
 19570  01E4C6  0EFD               	movlw	-3
 19571  01E4C8  2AE3               	incf	plusw1,f,c
 19572  01E4CA                     u10700:
 19573                           
 19574                           ;stkvar	_quotient @ sp[(-6)+0]
 19575  01E4CA  0EFA               	movlw	-6
 19576  01E4CC  006F FF8C  F02A    	movff	plusw1,btemp
 19577  01E4D2  0EFB               	movlw	-5
 19578  01E4D4  006F FF8C  F02B    	movff	plusw1,btemp+1
 19579  01E4DA  0EFC               	movlw	-4
 19580  01E4DC  006F FF8C  F02C    	movff	plusw1,btemp+2
 19581  01E4E2  0EFD               	movlw	-3
 19582  01E4E4  006F FF8C  F02D    	movff	plusw1,btemp+3
 19583                           
 19584                           ; ___aldiv: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 19585  01E4EA  0EF2               	movlw	242
 19586  01E4EC  26E1               	addwf	fsr1l,f,c
 19587  01E4EE  0EFF               	movlw	255
 19588  01E4F0  22E2               	addwfc	fsr1h,f,c
 19589  01E4F2  0012               	return		;funcret
 19590  01E4F4                     __end_of___aldiv:
 19591                           	opt callstack 0
 19592                           
 19593 ;; *************** function _asctime *****************
 19594 ;; Defined at:
 19595 ;;		line 19 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/asctime.c"
 19596 ;; Parameters:    Size  Location     Type
 19597 ;;  tim             2  [STACK] PTR const struct tm
 19598 ;;		 -> localtime@tm(24), NULL(0), 
 19599 ;; Auto vars:     Size  Location     Type
 19600 ;;  cp              2  [STACK] PTR unsigned char 
 19601 ;;		 -> asctime@buf(27), 
 19602 ;;  s               2  [STACK] PTR const unsigned char 
 19603 ;;		 -> STR_141(37), STR_140(22), 
 19604 ;; Return value:  Size  Location     Type
 19605 ;;                  2  [STACK] PTR unsigned char 
 19606 ;; Registers used:
 19607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 19608 ;; Tracked objects:
 19609 ;;		On entry : 0/39
 19610 ;;		On exit  : 0/0
 19611 ;;		Unchanged: 0/0
 19612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19617 ;;Total ram usage:        0 bytes
 19618 ;; Hardware stack levels used:    1
 19619 ;; Hardware stack levels required when called:   17
 19620 ;; This function calls:
 19621 ;;		___awdiv
 19622 ;;		___awmod
 19623 ;;		_put2d
 19624 ;; This function is called by:
 19625 ;;		_main
 19626 ;;		_display_history
 19627 ;; This function uses a reentrant model
 19628 ;;
 19629                           
 19630                           	psect	text54
 19631  018CEA                     __ptext54:
 19632                           	opt callstack 0
 19633  018CEA                     _asctime:
 19634                           	opt callstack 0
 19635                           
 19636                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19637  018CEA  52E6               	movf	postinc1,f,c
 19638  018CEC  52E6               	movf	postinc1,f,c
 19639  018CEE  52E6               	movf	postinc1,f,c
 19640  018CF0  52E6               	movf	postinc1,f,c
 19641                           
 19642                           ;stkvar	_tim @ sp[(-4)+-2]
 19643                           
 19644                           ;incstack = 0
 19645  018CF2  0EFA               	movlw	-6
 19646  018CF4  006F FF8C  F034    	movff	plusw1,btemp+10
 19647  018CFA  0EFB               	movlw	-5
 19648  018CFC  006F FF8C  F035    	movff	plusw1,btemp+11
 19649  018D02  0E0C               	movlw	12
 19650  018D04  2434               	addwf	(btemp+10)^0,w,c
 19651  018D06  6ED9               	movwf	fsr2l,c
 19652  018D08  0E00               	movlw	0
 19653  018D0A  2035               	addwfc	(btemp+11)^0,w,c
 19654  018D0C  6EDA               	movwf	fsr2h,c
 19655  018D0E  006F FF78  F034    	movff	postinc2,btemp+10
 19656  018D14  006F FF74  F035    	movff	postdec2,btemp+11
 19657  018D1A  0E03               	movlw	3
 19658  018D1C  0234               	mulwf	(btemp+10)^0,c
 19659  018D1E  006F FFCC  F032    	movff	prodl,btemp+8
 19660  018D24  006F FFD0  F033    	movff	prodh,btemp+9
 19661  018D2A  0235               	mulwf	(btemp+11)^0,c
 19662  018D2C  50F3               	movf	prodl,w,c
 19663  018D2E  2633               	addwf	(btemp+9)^0,f,c
 19664  018D30  0E93               	movlw	low STR_140
 19665  018D32  6E34               	movwf	(btemp+10)^0,c
 19666  018D34  0EFC               	movlw	high STR_140
 19667  018D36  6E35               	movwf	(btemp+11)^0,c
 19668  018D38  5032               	movf	(btemp+8)^0,w,c
 19669  018D3A  2634               	addwf	(btemp+10)^0,f,c
 19670  018D3C  5033               	movf	(btemp+9)^0,w,c
 19671  018D3E  2235               	addwfc	(btemp+11)^0,f,c
 19672                           
 19673                           ;stkvar	_s @ sp[(-4)+2]
 19674  018D40  0EFF               	movlw	-1
 19675  018D42  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 19676  018D48  0EFE               	movlw	-2
 19677  018D4A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 19678                           
 19679                           ;stkvar	_cp @ sp[(-4)+0]
 19680  018D50  0E03               	movlw	high asctime@buf
 19681  018D52  6E2A               	movwf	btemp^0,c
 19682  018D54  0EFD               	movlw	-3
 19683  018D56  0060  F0AB  FFE3   	movff	btemp,plusw1
 19684  018D5C  0EC4               	movlw	low asctime@buf
 19685  018D5E  6E2A               	movwf	btemp^0,c
 19686  018D60  0EFC               	movlw	-4
 19687  018D62  0060  F0AB  FFE3   	movff	btemp,plusw1
 19688                           
 19689                           ;stkvar	_s @ sp[(-4)+2]
 19690  018D68  50E1               	movf	fsr1l,w,c
 19691  018D6A  0FFE               	addlw	-2
 19692  018D6C  6ED9               	movwf	fsr2l,c
 19693  018D6E  50E2               	movf	fsr1h,w,c
 19694  018D70  6EDA               	movwf	fsr2h,c
 19695  018D72  0EFF               	movlw	255
 19696  018D74  22DA               	addwfc	fsr2h,f,c
 19697  018D76  006F FF7B FFF6     	movff	postinc2,tblptrl
 19698  018D7C  006F FF77 FFF7     	movff	postdec2,tblptrh
 19699  018D82                     	if	0	;tblptru may be non-zero
 19700  018D82                     	endif
 19701  018D82                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19702  018D82  0E00               	movlw	low (__mediumconst shr (0+16))
 19703  018D84  6EF8               	movwf	tblptru,c
 19704  018D86                     	endif
 19705                           
 19706                           ;stkvar	_cp @ sp[(-4)+0]
 19707  018D86  0EFC               	movlw	-4
 19708  018D88  006F FF8F FFD9     	movff	plusw1,fsr2l
 19709  018D8E  0EFD               	movlw	-3
 19710  018D90  006F FF8F FFDA     	movff	plusw1,fsr2h
 19711  018D96  0008               	tblrd		*
 19712  018D98  006F FFD7 FFDF     	movff	tablat,indf2
 19713                           
 19714                           ;stkvar	_s @ sp[(-4)+2]
 19715  018D9E  0EFE               	movlw	-2
 19716  018DA0  50E3               	movf	plusw1,w,c
 19717  018DA2  0F01               	addlw	1
 19718  018DA4  6E2A               	movwf	btemp^0,c
 19719  018DA6  0EFE               	movlw	-2
 19720  018DA8  0060  F0AB  FFE3   	movff	btemp,plusw1
 19721  018DAE  6A2A               	clrf	btemp^0,c
 19722  018DB0  0EFF               	movlw	-1
 19723  018DB2  50E3               	movf	plusw1,w,c
 19724  018DB4  202A               	addwfc	btemp^0,w,c
 19725  018DB6  6E2A               	movwf	btemp^0,c
 19726  018DB8  0EFF               	movlw	-1
 19727  018DBA  0060  F0AB  FFE3   	movff	btemp,plusw1
 19728                           
 19729                           ;stkvar	_cp @ sp[(-4)+0]
 19730  018DC0  0EFC               	movlw	-4
 19731  018DC2  50E3               	movf	plusw1,w,c
 19732  018DC4  0F01               	addlw	1
 19733  018DC6  6E2A               	movwf	btemp^0,c
 19734  018DC8  0EFC               	movlw	-4
 19735  018DCA  0060  F0AB  FFE3   	movff	btemp,plusw1
 19736  018DD0  6A2A               	clrf	btemp^0,c
 19737  018DD2  0EFD               	movlw	-3
 19738  018DD4  50E3               	movf	plusw1,w,c
 19739  018DD6  202A               	addwfc	btemp^0,w,c
 19740  018DD8  6E2A               	movwf	btemp^0,c
 19741  018DDA  0EFD               	movlw	-3
 19742  018DDC  0060  F0AB  FFE3   	movff	btemp,plusw1
 19743                           
 19744                           ;stkvar	_s @ sp[(-4)+2]
 19745  018DE2  50E1               	movf	fsr1l,w,c
 19746  018DE4  0FFE               	addlw	-2
 19747  018DE6  6ED9               	movwf	fsr2l,c
 19748  018DE8  50E2               	movf	fsr1h,w,c
 19749  018DEA  6EDA               	movwf	fsr2h,c
 19750  018DEC  0EFF               	movlw	255
 19751  018DEE  22DA               	addwfc	fsr2h,f,c
 19752  018DF0  006F FF7B FFF6     	movff	postinc2,tblptrl
 19753  018DF6  006F FF77 FFF7     	movff	postdec2,tblptrh
 19754  018DFC                     	if	0	;tblptru may be non-zero
 19755  018DFC                     	endif
 19756  018DFC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19757  018DFC  0E00               	movlw	low (__mediumconst shr (0+16))
 19758  018DFE  6EF8               	movwf	tblptru,c
 19759  018E00                     	endif
 19760                           
 19761                           ;stkvar	_cp @ sp[(-4)+0]
 19762  018E00  0EFC               	movlw	-4
 19763  018E02  006F FF8F FFD9     	movff	plusw1,fsr2l
 19764  018E08  0EFD               	movlw	-3
 19765  018E0A  006F FF8F FFDA     	movff	plusw1,fsr2h
 19766  018E10  0008               	tblrd		*
 19767  018E12  006F FFD7 FFDF     	movff	tablat,indf2
 19768                           
 19769                           ;stkvar	_s @ sp[(-4)+2]
 19770  018E18  0EFE               	movlw	-2
 19771  018E1A  50E3               	movf	plusw1,w,c
 19772  018E1C  0F01               	addlw	1
 19773  018E1E  6E2A               	movwf	btemp^0,c
 19774  018E20  0EFE               	movlw	-2
 19775  018E22  0060  F0AB  FFE3   	movff	btemp,plusw1
 19776  018E28  6A2A               	clrf	btemp^0,c
 19777  018E2A  0EFF               	movlw	-1
 19778  018E2C  50E3               	movf	plusw1,w,c
 19779  018E2E  202A               	addwfc	btemp^0,w,c
 19780  018E30  6E2A               	movwf	btemp^0,c
 19781  018E32  0EFF               	movlw	-1
 19782  018E34  0060  F0AB  FFE3   	movff	btemp,plusw1
 19783                           
 19784                           ;stkvar	_cp @ sp[(-4)+0]
 19785  018E3A  0EFC               	movlw	-4
 19786  018E3C  50E3               	movf	plusw1,w,c
 19787  018E3E  0F01               	addlw	1
 19788  018E40  6E2A               	movwf	btemp^0,c
 19789  018E42  0EFC               	movlw	-4
 19790  018E44  0060  F0AB  FFE3   	movff	btemp,plusw1
 19791  018E4A  6A2A               	clrf	btemp^0,c
 19792  018E4C  0EFD               	movlw	-3
 19793  018E4E  50E3               	movf	plusw1,w,c
 19794  018E50  202A               	addwfc	btemp^0,w,c
 19795  018E52  6E2A               	movwf	btemp^0,c
 19796  018E54  0EFD               	movlw	-3
 19797  018E56  0060  F0AB  FFE3   	movff	btemp,plusw1
 19798                           
 19799                           ;stkvar	_s @ sp[(-4)+2]
 19800  018E5C  50E1               	movf	fsr1l,w,c
 19801  018E5E  0FFE               	addlw	-2
 19802  018E60  6ED9               	movwf	fsr2l,c
 19803  018E62  50E2               	movf	fsr1h,w,c
 19804  018E64  6EDA               	movwf	fsr2h,c
 19805  018E66  0EFF               	movlw	255
 19806  018E68  22DA               	addwfc	fsr2h,f,c
 19807  018E6A  006F FF7B FFF6     	movff	postinc2,tblptrl
 19808  018E70  006F FF77 FFF7     	movff	postdec2,tblptrh
 19809  018E76                     	if	0	;tblptru may be non-zero
 19810  018E76                     	endif
 19811  018E76                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19812  018E76  0E00               	movlw	low (__mediumconst shr (0+16))
 19813  018E78  6EF8               	movwf	tblptru,c
 19814  018E7A                     	endif
 19815                           
 19816                           ;stkvar	_cp @ sp[(-4)+0]
 19817  018E7A  0EFC               	movlw	-4
 19818  018E7C  006F FF8F FFD9     	movff	plusw1,fsr2l
 19819  018E82  0EFD               	movlw	-3
 19820  018E84  006F FF8F FFDA     	movff	plusw1,fsr2h
 19821  018E8A  0008               	tblrd		*
 19822  018E8C  006F FFD7 FFDF     	movff	tablat,indf2
 19823                           
 19824                           ;stkvar	_cp @ sp[(-4)+0]
 19825  018E92  0EFC               	movlw	-4
 19826  018E94  50E3               	movf	plusw1,w,c
 19827  018E96  0F01               	addlw	1
 19828  018E98  6E2A               	movwf	btemp^0,c
 19829  018E9A  0EFC               	movlw	-4
 19830  018E9C  0060  F0AB  FFE3   	movff	btemp,plusw1
 19831  018EA2  6A2A               	clrf	btemp^0,c
 19832  018EA4  0EFD               	movlw	-3
 19833  018EA6  50E3               	movf	plusw1,w,c
 19834  018EA8  202A               	addwfc	btemp^0,w,c
 19835  018EAA  6E2A               	movwf	btemp^0,c
 19836  018EAC  0EFD               	movlw	-3
 19837  018EAE  0060  F0AB  FFE3   	movff	btemp,plusw1
 19838                           
 19839                           ;stkvar	_cp @ sp[(-4)+0]
 19840  018EB4  0EFC               	movlw	-4
 19841  018EB6  006F FF8F FFD9     	movff	plusw1,fsr2l
 19842  018EBC  0EFD               	movlw	-3
 19843  018EBE  006F FF8F FFDA     	movff	plusw1,fsr2h
 19844  018EC4  0E20               	movlw	32
 19845  018EC6  6EDF               	movwf	indf2,c
 19846                           
 19847                           ;stkvar	_cp @ sp[(-4)+0]
 19848  018EC8  0EFC               	movlw	-4
 19849  018ECA  50E3               	movf	plusw1,w,c
 19850  018ECC  0F01               	addlw	1
 19851  018ECE  6E2A               	movwf	btemp^0,c
 19852  018ED0  0EFC               	movlw	-4
 19853  018ED2  0060  F0AB  FFE3   	movff	btemp,plusw1
 19854  018ED8  6A2A               	clrf	btemp^0,c
 19855  018EDA  0EFD               	movlw	-3
 19856  018EDC  50E3               	movf	plusw1,w,c
 19857  018EDE  202A               	addwfc	btemp^0,w,c
 19858  018EE0  6E2A               	movwf	btemp^0,c
 19859  018EE2  0EFD               	movlw	-3
 19860  018EE4  0060  F0AB  FFE3   	movff	btemp,plusw1
 19861                           
 19862                           ;stkvar	_tim @ sp[(-4)+-2]
 19863  018EEA  0EFA               	movlw	-6
 19864  018EEC  006F FF8C  F034    	movff	plusw1,btemp+10
 19865  018EF2  0EFB               	movlw	-5
 19866  018EF4  006F FF8C  F035    	movff	plusw1,btemp+11
 19867  018EFA  0E08               	movlw	8
 19868  018EFC  2434               	addwf	(btemp+10)^0,w,c
 19869  018EFE  6ED9               	movwf	fsr2l,c
 19870  018F00  0E00               	movlw	0
 19871  018F02  2035               	addwfc	(btemp+11)^0,w,c
 19872  018F04  6EDA               	movwf	fsr2h,c
 19873  018F06  006F FF78  F034    	movff	postinc2,btemp+10
 19874  018F0C  006F FF74  F035    	movff	postdec2,btemp+11
 19875  018F12  0E03               	movlw	3
 19876  018F14  0234               	mulwf	(btemp+10)^0,c
 19877  018F16  006F FFCC  F032    	movff	prodl,btemp+8
 19878  018F1C  006F FFD0  F033    	movff	prodh,btemp+9
 19879  018F22  0235               	mulwf	(btemp+11)^0,c
 19880  018F24  50F3               	movf	prodl,w,c
 19881  018F26  2633               	addwf	(btemp+9)^0,f,c
 19882  018F28  0EE2               	movlw	low STR_141
 19883  018F2A  6E34               	movwf	(btemp+10)^0,c
 19884  018F2C  0EF9               	movlw	high STR_141
 19885  018F2E  6E35               	movwf	(btemp+11)^0,c
 19886  018F30  5032               	movf	(btemp+8)^0,w,c
 19887  018F32  2634               	addwf	(btemp+10)^0,f,c
 19888  018F34  5033               	movf	(btemp+9)^0,w,c
 19889  018F36  2235               	addwfc	(btemp+11)^0,f,c
 19890                           
 19891                           ;stkvar	_s @ sp[(-4)+2]
 19892  018F38  0EFF               	movlw	-1
 19893  018F3A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 19894  018F40  0EFE               	movlw	-2
 19895  018F42  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 19896                           
 19897                           ;stkvar	_s @ sp[(-4)+2]
 19898  018F48  50E1               	movf	fsr1l,w,c
 19899  018F4A  0FFE               	addlw	-2
 19900  018F4C  6ED9               	movwf	fsr2l,c
 19901  018F4E  50E2               	movf	fsr1h,w,c
 19902  018F50  6EDA               	movwf	fsr2h,c
 19903  018F52  0EFF               	movlw	255
 19904  018F54  22DA               	addwfc	fsr2h,f,c
 19905  018F56  006F FF7B FFF6     	movff	postinc2,tblptrl
 19906  018F5C  006F FF77 FFF7     	movff	postdec2,tblptrh
 19907  018F62                     	if	0	;tblptru may be non-zero
 19908  018F62                     	endif
 19909  018F62                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19910  018F62  0E00               	movlw	low (__mediumconst shr (0+16))
 19911  018F64  6EF8               	movwf	tblptru,c
 19912  018F66                     	endif
 19913                           
 19914                           ;stkvar	_cp @ sp[(-4)+0]
 19915  018F66  0EFC               	movlw	-4
 19916  018F68  006F FF8F FFD9     	movff	plusw1,fsr2l
 19917  018F6E  0EFD               	movlw	-3
 19918  018F70  006F FF8F FFDA     	movff	plusw1,fsr2h
 19919  018F76  0008               	tblrd		*
 19920  018F78  006F FFD7 FFDF     	movff	tablat,indf2
 19921                           
 19922                           ;stkvar	_s @ sp[(-4)+2]
 19923  018F7E  0EFE               	movlw	-2
 19924  018F80  50E3               	movf	plusw1,w,c
 19925  018F82  0F01               	addlw	1
 19926  018F84  6E2A               	movwf	btemp^0,c
 19927  018F86  0EFE               	movlw	-2
 19928  018F88  0060  F0AB  FFE3   	movff	btemp,plusw1
 19929  018F8E  6A2A               	clrf	btemp^0,c
 19930  018F90  0EFF               	movlw	-1
 19931  018F92  50E3               	movf	plusw1,w,c
 19932  018F94  202A               	addwfc	btemp^0,w,c
 19933  018F96  6E2A               	movwf	btemp^0,c
 19934  018F98  0EFF               	movlw	-1
 19935  018F9A  0060  F0AB  FFE3   	movff	btemp,plusw1
 19936                           
 19937                           ;stkvar	_cp @ sp[(-4)+0]
 19938  018FA0  0EFC               	movlw	-4
 19939  018FA2  50E3               	movf	plusw1,w,c
 19940  018FA4  0F01               	addlw	1
 19941  018FA6  6E2A               	movwf	btemp^0,c
 19942  018FA8  0EFC               	movlw	-4
 19943  018FAA  0060  F0AB  FFE3   	movff	btemp,plusw1
 19944  018FB0  6A2A               	clrf	btemp^0,c
 19945  018FB2  0EFD               	movlw	-3
 19946  018FB4  50E3               	movf	plusw1,w,c
 19947  018FB6  202A               	addwfc	btemp^0,w,c
 19948  018FB8  6E2A               	movwf	btemp^0,c
 19949  018FBA  0EFD               	movlw	-3
 19950  018FBC  0060  F0AB  FFE3   	movff	btemp,plusw1
 19951                           
 19952                           ;stkvar	_s @ sp[(-4)+2]
 19953  018FC2  50E1               	movf	fsr1l,w,c
 19954  018FC4  0FFE               	addlw	-2
 19955  018FC6  6ED9               	movwf	fsr2l,c
 19956  018FC8  50E2               	movf	fsr1h,w,c
 19957  018FCA  6EDA               	movwf	fsr2h,c
 19958  018FCC  0EFF               	movlw	255
 19959  018FCE  22DA               	addwfc	fsr2h,f,c
 19960  018FD0  006F FF7B FFF6     	movff	postinc2,tblptrl
 19961  018FD6  006F FF77 FFF7     	movff	postdec2,tblptrh
 19962  018FDC                     	if	0	;tblptru may be non-zero
 19963  018FDC                     	endif
 19964  018FDC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19965  018FDC  0E00               	movlw	low (__mediumconst shr (0+16))
 19966  018FDE  6EF8               	movwf	tblptru,c
 19967  018FE0                     	endif
 19968                           
 19969                           ;stkvar	_cp @ sp[(-4)+0]
 19970  018FE0  0EFC               	movlw	-4
 19971  018FE2  006F FF8F FFD9     	movff	plusw1,fsr2l
 19972  018FE8  0EFD               	movlw	-3
 19973  018FEA  006F FF8F FFDA     	movff	plusw1,fsr2h
 19974  018FF0  0008               	tblrd		*
 19975  018FF2  006F FFD7 FFDF     	movff	tablat,indf2
 19976                           
 19977                           ;stkvar	_s @ sp[(-4)+2]
 19978  018FF8  0EFE               	movlw	-2
 19979  018FFA  50E3               	movf	plusw1,w,c
 19980  018FFC  0F01               	addlw	1
 19981  018FFE  6E2A               	movwf	btemp^0,c
 19982  019000  0EFE               	movlw	-2
 19983  019002  0060  F0AB  FFE3   	movff	btemp,plusw1
 19984  019008  6A2A               	clrf	btemp^0,c
 19985  01900A  0EFF               	movlw	-1
 19986  01900C  50E3               	movf	plusw1,w,c
 19987  01900E  202A               	addwfc	btemp^0,w,c
 19988  019010  6E2A               	movwf	btemp^0,c
 19989  019012  0EFF               	movlw	-1
 19990  019014  0060  F0AB  FFE3   	movff	btemp,plusw1
 19991                           
 19992                           ;stkvar	_cp @ sp[(-4)+0]
 19993  01901A  0EFC               	movlw	-4
 19994  01901C  50E3               	movf	plusw1,w,c
 19995  01901E  0F01               	addlw	1
 19996  019020  6E2A               	movwf	btemp^0,c
 19997  019022  0EFC               	movlw	-4
 19998  019024  0060  F0AB  FFE3   	movff	btemp,plusw1
 19999  01902A  6A2A               	clrf	btemp^0,c
 20000  01902C  0EFD               	movlw	-3
 20001  01902E  50E3               	movf	plusw1,w,c
 20002  019030  202A               	addwfc	btemp^0,w,c
 20003  019032  6E2A               	movwf	btemp^0,c
 20004  019034  0EFD               	movlw	-3
 20005  019036  0060  F0AB  FFE3   	movff	btemp,plusw1
 20006                           
 20007                           ;stkvar	_s @ sp[(-4)+2]
 20008  01903C  50E1               	movf	fsr1l,w,c
 20009  01903E  0FFE               	addlw	-2
 20010  019040  6ED9               	movwf	fsr2l,c
 20011  019042  50E2               	movf	fsr1h,w,c
 20012  019044  6EDA               	movwf	fsr2h,c
 20013  019046  0EFF               	movlw	255
 20014  019048  22DA               	addwfc	fsr2h,f,c
 20015  01904A  006F FF7B FFF6     	movff	postinc2,tblptrl
 20016  019050  006F FF77 FFF7     	movff	postdec2,tblptrh
 20017  019056                     	if	0	;tblptru may be non-zero
 20018  019056                     	endif
 20019  019056                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20020  019056  0E00               	movlw	low (__mediumconst shr (0+16))
 20021  019058  6EF8               	movwf	tblptru,c
 20022  01905A                     	endif
 20023                           
 20024                           ;stkvar	_cp @ sp[(-4)+0]
 20025  01905A  0EFC               	movlw	-4
 20026  01905C  006F FF8F FFD9     	movff	plusw1,fsr2l
 20027  019062  0EFD               	movlw	-3
 20028  019064  006F FF8F FFDA     	movff	plusw1,fsr2h
 20029  01906A  0008               	tblrd		*
 20030  01906C  006F FFD7 FFDF     	movff	tablat,indf2
 20031  019072  0E20               	movlw	32
 20032  019074  0103               	movlb	3	; () banked
 20033  019076  6FCB               	movwf	(asctime@buf+7)& (0+255),b
 20034                           
 20035                           ; BSR set to: 3
 20036  019078  0E20               	movlw	32
 20037  01907A  6EE6               	movwf	postinc1,c
 20038  01907C  0E20               	movlw	32
 20039  01907E  6EE6               	movwf	postinc1,c
 20040                           
 20041                           ;stkvar	_tim @ sp[(-6)+-2]
 20042  019080  0EF8               	movlw	-8
 20043  019082  006F FF8C  F034    	movff	plusw1,btemp+10
 20044  019088  0EF9               	movlw	-7
 20045  01908A  006F FF8C  F035    	movff	plusw1,btemp+11
 20046  019090  0E06               	movlw	6
 20047  019092  2434               	addwf	(btemp+10)^0,w,c
 20048  019094  6ED9               	movwf	fsr2l,c
 20049  019096  0E00               	movlw	0
 20050  019098  2035               	addwfc	(btemp+11)^0,w,c
 20051  01909A  6EDA               	movwf	fsr2h,c
 20052  01909C  50DF               	movf	indf2,w,c
 20053  01909E  6EE6               	movwf	postinc1,c
 20054  0190A0  0ECE               	movlw	low (asctime@buf+10)
 20055  0190A2  6EE6               	movwf	postinc1,c
 20056  0190A4  0E03               	movlw	high (asctime@buf+10)
 20057  0190A6  6EE6               	movwf	postinc1,c
 20058  0190A8  EC6A  F0FD         	call	_put2d	;wreg free
 20059  0190AC  0E3A               	movlw	58
 20060  0190AE  6EE6               	movwf	postinc1,c
 20061  0190B0  0E30               	movlw	48
 20062  0190B2  6EE6               	movwf	postinc1,c
 20063                           
 20064                           ;stkvar	_tim @ sp[(-6)+-2]
 20065  0190B4  0EF8               	movlw	-8
 20066  0190B6  006F FF8C  F034    	movff	plusw1,btemp+10
 20067  0190BC  0EF9               	movlw	-7
 20068  0190BE  006F FF8C  F035    	movff	plusw1,btemp+11
 20069  0190C4  0E04               	movlw	4
 20070  0190C6  2434               	addwf	(btemp+10)^0,w,c
 20071  0190C8  6ED9               	movwf	fsr2l,c
 20072  0190CA  0E00               	movlw	0
 20073  0190CC  2035               	addwfc	(btemp+11)^0,w,c
 20074  0190CE  6EDA               	movwf	fsr2h,c
 20075  0190D0  50DF               	movf	indf2,w,c
 20076  0190D2  6EE6               	movwf	postinc1,c
 20077  0190D4  0ED1               	movlw	low (asctime@buf+13)
 20078  0190D6  6EE6               	movwf	postinc1,c
 20079  0190D8  0E03               	movlw	high (asctime@buf+13)
 20080  0190DA  6EE6               	movwf	postinc1,c
 20081  0190DC  EC6A  F0FD         	call	_put2d	;wreg free
 20082  0190E0  0E3A               	movlw	58
 20083  0190E2  6EE6               	movwf	postinc1,c
 20084  0190E4  0E30               	movlw	48
 20085  0190E6  6EE6               	movwf	postinc1,c
 20086                           
 20087                           ;stkvar	_tim @ sp[(-6)+-2]
 20088  0190E8  0EF8               	movlw	-8
 20089  0190EA  006F FF8C  F034    	movff	plusw1,btemp+10
 20090  0190F0  0EF9               	movlw	-7
 20091  0190F2  006F FF8C  F035    	movff	plusw1,btemp+11
 20092  0190F8  0E02               	movlw	2
 20093  0190FA  2434               	addwf	(btemp+10)^0,w,c
 20094  0190FC  6ED9               	movwf	fsr2l,c
 20095  0190FE  0E00               	movlw	0
 20096  019100  2035               	addwfc	(btemp+11)^0,w,c
 20097  019102  6EDA               	movwf	fsr2h,c
 20098  019104  50DF               	movf	indf2,w,c
 20099  019106  6EE6               	movwf	postinc1,c
 20100  019108  0ED4               	movlw	low (asctime@buf+16)
 20101  01910A  6EE6               	movwf	postinc1,c
 20102  01910C  0E03               	movlw	high (asctime@buf+16)
 20103  01910E  6EE6               	movwf	postinc1,c
 20104  019110  EC6A  F0FD         	call	_put2d	;wreg free
 20105  019114  0E20               	movlw	32
 20106  019116  6EE6               	movwf	postinc1,c
 20107  019118  0E30               	movlw	48
 20108  01911A  6EE6               	movwf	postinc1,c
 20109                           
 20110                           ;stkvar	_tim @ sp[(-6)+-2]
 20111  01911C  0EF8               	movlw	-8
 20112  01911E  006F FF8F FFD9     	movff	plusw1,fsr2l
 20113  019124  0EF9               	movlw	-7
 20114  019126  006F FF8F FFDA     	movff	plusw1,fsr2h
 20115  01912C  50DF               	movf	indf2,w,c
 20116  01912E  6EE6               	movwf	postinc1,c
 20117  019130  0ED7               	movlw	low (asctime@buf+19)
 20118  019132  6EE6               	movwf	postinc1,c
 20119  019134  0E03               	movlw	high (asctime@buf+19)
 20120  019136  6EE6               	movwf	postinc1,c
 20121  019138  EC6A  F0FD         	call	_put2d	;wreg free
 20122  01913C  0E00               	movlw	0
 20123  01913E  6EE6               	movwf	postinc1,c
 20124  019140  0E20               	movlw	32
 20125  019142  6EE6               	movwf	postinc1,c
 20126  019144  0E64               	movlw	100
 20127  019146  6EE6               	movwf	postinc1,c
 20128  019148  0E00               	movlw	0
 20129  01914A  6EE6               	movwf	postinc1,c
 20130                           
 20131                           ;stkvar	_tim @ sp[(-8)+-2]
 20132  01914C  0EF6               	movlw	-10
 20133  01914E  006F FF8C  F034    	movff	plusw1,btemp+10
 20134  019154  0EF7               	movlw	-9
 20135  019156  006F FF8C  F035    	movff	plusw1,btemp+11
 20136  01915C  0E0A               	movlw	10
 20137  01915E  2434               	addwf	(btemp+10)^0,w,c
 20138  019160  6ED9               	movwf	fsr2l,c
 20139  019162  0E00               	movlw	0
 20140  019164  2035               	addwfc	(btemp+11)^0,w,c
 20141  019166  6EDA               	movwf	fsr2h,c
 20142  019168  006F FF78  F034    	movff	postinc2,btemp+10
 20143  01916E  006F FF74  F035    	movff	postdec2,btemp+11
 20144  019174  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 20145  01917A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 20146  019180  EC54  F0FA         	call	___awdiv	;wreg free
 20147  019184  502A               	movf	btemp^0,w,c
 20148  019186  0F13               	addlw	19
 20149  019188  6EE6               	movwf	postinc1,c
 20150  01918A  0EDA               	movlw	low (asctime@buf+22)
 20151  01918C  6EE6               	movwf	postinc1,c
 20152  01918E  0E03               	movlw	high (asctime@buf+22)
 20153  019190  6EE6               	movwf	postinc1,c
 20154  019192  EC6A  F0FD         	call	_put2d	;wreg free
 20155  019196  0E0A               	movlw	10
 20156  019198  6EE6               	movwf	postinc1,c
 20157  01919A  0E30               	movlw	48
 20158  01919C  6EE6               	movwf	postinc1,c
 20159  01919E  0E64               	movlw	100
 20160  0191A0  6EE6               	movwf	postinc1,c
 20161  0191A2  0E00               	movlw	0
 20162  0191A4  6EE6               	movwf	postinc1,c
 20163                           
 20164                           ;stkvar	_tim @ sp[(-8)+-2]
 20165  0191A6  0EF6               	movlw	-10
 20166  0191A8  006F FF8C  F034    	movff	plusw1,btemp+10
 20167  0191AE  0EF7               	movlw	-9
 20168  0191B0  006F FF8C  F035    	movff	plusw1,btemp+11
 20169  0191B6  0E0A               	movlw	10
 20170  0191B8  2434               	addwf	(btemp+10)^0,w,c
 20171  0191BA  6ED9               	movwf	fsr2l,c
 20172  0191BC  0E00               	movlw	0
 20173  0191BE  2035               	addwfc	(btemp+11)^0,w,c
 20174  0191C0  6EDA               	movwf	fsr2h,c
 20175  0191C2  006F FF78  F034    	movff	postinc2,btemp+10
 20176  0191C8  006F FF74  F035    	movff	postdec2,btemp+11
 20177  0191CE  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 20178  0191D4  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 20179  0191DA  EC83  F0FE         	call	___awmod	;wreg free
 20180  0191DE  502A               	movf	btemp^0,w,c
 20181  0191E0  6EE6               	movwf	postinc1,c
 20182  0191E2  0EDC               	movlw	low (asctime@buf+24)
 20183  0191E4  6EE6               	movwf	postinc1,c
 20184  0191E6  0E03               	movlw	high (asctime@buf+24)
 20185  0191E8  6EE6               	movwf	postinc1,c
 20186  0191EA  EC6A  F0FD         	call	_put2d	;wreg free
 20187  0191EE  0EC4               	movlw	low asctime@buf
 20188  0191F0  6E2A               	movwf	btemp^0,c
 20189  0191F2  0E03               	movlw	high asctime@buf
 20190  0191F4  6E2B               	movwf	(btemp+1)^0,c
 20191                           
 20192                           ; _asctime: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20193  0191F6  0EFA               	movlw	250
 20194  0191F8  26E1               	addwf	fsr1l,f,c
 20195  0191FA  0EFF               	movlw	255
 20196  0191FC  22E2               	addwfc	fsr1h,f,c
 20197  0191FE  0012               	return		;funcret
 20198  019200                     __end_of_asctime:
 20199                           	opt callstack 0
 20200                           
 20201 ;; *************** function _put2d *****************
 20202 ;; Defined at:
 20203 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/asctime.c"
 20204 ;; Parameters:    Size  Location     Type
 20205 ;;  cp              2  [STACK] PTR unsigned char 
 20206 ;;		 -> asctime@buf(27), 
 20207 ;;  i               1  [STACK] unsigned char 
 20208 ;;  cl              1  [STACK] unsigned char 
 20209 ;;  ct              1  [STACK] unsigned char 
 20210 ;; Auto vars:     Size  Location     Type
 20211 ;;		None
 20212 ;; Return value:  Size  Location     Type
 20213 ;;                  1  [STACK] void 
 20214 ;; Registers used:
 20215 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 20216 ;; Tracked objects:
 20217 ;;		On entry : 0/3
 20218 ;;		On exit  : 0/0
 20219 ;;		Unchanged: 0/0
 20220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20225 ;;Total ram usage:        0 bytes
 20226 ;; Hardware stack levels used:    1
 20227 ;; Hardware stack levels required when called:   16
 20228 ;; This function calls:
 20229 ;;		___awdiv
 20230 ;;		___lbmod
 20231 ;; This function is called by:
 20232 ;;		_asctime
 20233 ;; This function uses a reentrant model
 20234 ;;
 20235                           
 20236                           	psect	text55
 20237  01FAD4                     __ptext55:
 20238                           	opt callstack 0
 20239  01FAD4                     _put2d:
 20240                           	opt callstack 12
 20241                           
 20242                           ;stkvar	_ct @ sp[(0)+-5]
 20243                           ;stkvar	_cp @ sp[(0)+-2]
 20244                           
 20245                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20246                           ;incstack = 0
 20247  01FAD4  0EFE               	movlw	-2
 20248  01FAD6  006F FF8F FFD9     	movff	plusw1,fsr2l
 20249  01FADC  0EFF               	movlw	-1
 20250  01FADE  006F FF8F FFDA     	movff	plusw1,fsr2h
 20251  01FAE4  0EFB               	movlw	-5
 20252  01FAE6  006F FF8F FFDF     	movff	plusw1,indf2
 20253  01FAEC  0E0A               	movlw	10
 20254  01FAEE  6EE6               	movwf	postinc1,c
 20255                           
 20256                           ;stkvar	_i @ sp[(-1)+-3]
 20257  01FAF0  0EFC               	movlw	-4
 20258  01FAF2  50E3               	movf	plusw1,w,c
 20259  01FAF4  6EE6               	movwf	postinc1,c
 20260  01FAF6  ECB6  F008         	call	___lbmod	;wreg free
 20261  01FAFA  0E30               	movlw	48
 20262  01FAFC  262A               	addwf	btemp^0,f,c
 20263                           
 20264                           ;stkvar	_cp @ sp[(0)+-2]
 20265  01FAFE  0EFE               	movlw	-2
 20266  01FB00  006F FF8C  F02B    	movff	plusw1,btemp+1
 20267  01FB06  0E01               	movlw	1
 20268  01FB08  5E2B               	subwf	(btemp+1)^0,f,c
 20269  01FB0A  0EFE               	movlw	-2
 20270  01FB0C  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 20271  01FB12  0EFF               	movlw	-1
 20272  01FB14  006F FF8C  F02B    	movff	plusw1,btemp+1
 20273  01FB1A  0E00               	movlw	0
 20274  01FB1C  5A2B               	subwfb	(btemp+1)^0,f,c
 20275  01FB1E  0EFF               	movlw	-1
 20276  01FB20  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 20277  01FB26  0EFE               	movlw	-2
 20278  01FB28  006F FF8F FFD9     	movff	plusw1,fsr2l
 20279  01FB2E  0EFF               	movlw	-1
 20280  01FB30  006F FF8F FFDA     	movff	plusw1,fsr2h
 20281  01FB36  0060  F0AB  FFDF   	movff	btemp,indf2
 20282  01FB3C  0E0A               	movlw	10
 20283  01FB3E  6EE6               	movwf	postinc1,c
 20284  01FB40  0E00               	movlw	0
 20285  01FB42  6EE6               	movwf	postinc1,c
 20286                           
 20287                           ;stkvar	_i @ sp[(-2)+-3]
 20288  01FB44  0EFB               	movlw	-5
 20289  01FB46  50E3               	movf	plusw1,w,c
 20290  01FB48  6EE6               	movwf	postinc1,c
 20291  01FB4A  0E00               	movlw	0
 20292  01FB4C  6EE6               	movwf	postinc1,c
 20293  01FB4E  EC54  F0FA         	call	___awdiv	;wreg free
 20294                           
 20295                           ;stkvar	_i @ sp[(0)+-3]
 20296  01FB52  0EFD               	movlw	-3
 20297  01FB54  0060  F0AB  FFE3   	movff	btemp,plusw1
 20298  01FB5A  0EFD               	movlw	-3
 20299  01FB5C  50E3               	movf	plusw1,w,c
 20300  01FB5E  B4D8               	btfsc	status,2,c
 20301  01FB60  D021               	goto	l17053
 20302                           
 20303                           ;stkvar	_cp @ sp[(0)+-2]
 20304  01FB62  0EFE               	movlw	-2
 20305  01FB64  006F FF8C  F02A    	movff	plusw1,btemp
 20306  01FB6A  0E01               	movlw	1
 20307  01FB6C  5E2A               	subwf	btemp^0,f,c
 20308  01FB6E  0EFE               	movlw	-2
 20309  01FB70  0060  F0AB  FFE3   	movff	btemp,plusw1
 20310  01FB76  0EFF               	movlw	-1
 20311  01FB78  006F FF8C  F02A    	movff	plusw1,btemp
 20312  01FB7E  0E00               	movlw	0
 20313  01FB80  5A2A               	subwfb	btemp^0,f,c
 20314  01FB82  0EFF               	movlw	-1
 20315  01FB84  0060  F0AB  FFE3   	movff	btemp,plusw1
 20316  01FB8A  0EFE               	movlw	-2
 20317  01FB8C  006F FF8F FFD9     	movff	plusw1,fsr2l
 20318  01FB92  0EFF               	movlw	-1
 20319  01FB94  006F FF8F FFDA     	movff	plusw1,fsr2h
 20320                           
 20321                           ;stkvar	_i @ sp[(0)+-3]
 20322  01FB9A  0EFD               	movlw	-3
 20323  01FB9C  50E3               	movf	plusw1,w,c
 20324  01FB9E  0F30               	addlw	48
 20325  01FBA0  6EDF               	movwf	indf2,c
 20326  01FBA2  D020               	goto	l3427
 20327  01FBA4                     l17053:
 20328                           
 20329                           ;stkvar	_cl @ sp[(0)+-4]
 20330                           ;stkvar	_cp @ sp[(0)+-2]
 20331  01FBA4  0EFE               	movlw	-2
 20332  01FBA6  006F FF8C  F02A    	movff	plusw1,btemp
 20333  01FBAC  0E01               	movlw	1
 20334  01FBAE  5E2A               	subwf	btemp^0,f,c
 20335  01FBB0  0EFE               	movlw	-2
 20336  01FBB2  0060  F0AB  FFE3   	movff	btemp,plusw1
 20337  01FBB8  0EFF               	movlw	-1
 20338  01FBBA  006F FF8C  F02A    	movff	plusw1,btemp
 20339  01FBC0  0E00               	movlw	0
 20340  01FBC2  5A2A               	subwfb	btemp^0,f,c
 20341  01FBC4  0EFF               	movlw	-1
 20342  01FBC6  0060  F0AB  FFE3   	movff	btemp,plusw1
 20343  01FBCC  0EFE               	movlw	-2
 20344  01FBCE  006F FF8F FFD9     	movff	plusw1,fsr2l
 20345  01FBD4  0EFF               	movlw	-1
 20346  01FBD6  006F FF8F FFDA     	movff	plusw1,fsr2h
 20347  01FBDC  0EFC               	movlw	-4
 20348  01FBDE  006F FF8F FFDF     	movff	plusw1,indf2
 20349  01FBE4                     l3427:
 20350                           
 20351                           ; _put2d: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize
      +                           = 5, vargsize = 0
 20352  01FBE4  0EFB               	movlw	251
 20353  01FBE6  26E1               	addwf	fsr1l,f,c
 20354  01FBE8  0EFF               	movlw	255
 20355  01FBEA  22E2               	addwfc	fsr1h,f,c
 20356  01FBEC  0012               	return		;funcret
 20357  01FBEE                     __end_of_put2d:
 20358                           	opt callstack 0
 20359                           
 20360 ;; *************** function ___lbmod *****************
 20361 ;; Defined at:
 20362 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lbmod.c"
 20363 ;; Parameters:    Size  Location     Type
 20364 ;;  dividend        1  [STACK] unsigned char 
 20365 ;;  divisor         1  [STACK] unsigned char 
 20366 ;; Auto vars:     Size  Location     Type
 20367 ;;  rem             1  [STACK] unsigned char 
 20368 ;;  counter         1  [STACK] unsigned char 
 20369 ;; Return value:  Size  Location     Type
 20370 ;;                  1  [STACK] unsigned char 
 20371 ;; Registers used:
 20372 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 20373 ;; Tracked objects:
 20374 ;;		On entry : 0/3
 20375 ;;		On exit  : 0/0
 20376 ;;		Unchanged: 0/0
 20377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20382 ;;Total ram usage:        0 bytes
 20383 ;; Hardware stack levels used:    1
 20384 ;; Hardware stack levels required when called:   15
 20385 ;; This function calls:
 20386 ;;		Nothing
 20387 ;; This function is called by:
 20388 ;;		_put2d
 20389 ;; This function uses a reentrant model
 20390 ;;
 20391                           
 20392                           	psect	text56
 20393  00116C                     __ptext56:
 20394                           	opt callstack 0
 20395  00116C                     ___lbmod:
 20396                           	opt callstack 0
 20397                           
 20398                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20399  00116C  52E6               	movf	postinc1,f,c
 20400  00116E  52E6               	movf	postinc1,f,c
 20401                           
 20402                           ;stkvar	_counter @ sp[(-2)+1]
 20403                           
 20404                           ;incstack = 0
 20405  001170  0EFF               	movlw	-1
 20406  001172  6AE3               	clrf	plusw1,c
 20407  001174  86E3               	bsf	plusw1,3,c
 20408                           
 20409                           ;stkvar	_rem @ sp[(-2)+0]
 20410  001176  0EFE               	movlw	-2
 20411  001178  6AE3               	clrf	plusw1,c
 20412  00117A                     l16793:
 20413                           
 20414                           ;stkvar	_dividend @ sp[(-2)+-1]
 20415  00117A  0EFD               	movlw	-3
 20416  00117C  006F FF8C  F035    	movff	plusw1,btemp+11
 20417                           
 20418                           ;stkvar	_rem @ sp[(-2)+0]
 20419  001182  0EFE               	movlw	-2
 20420  001184  006F FF8C  F034    	movff	plusw1,btemp+10
 20421  00118A  90D8               	bcf	status,0,c
 20422  00118C  3435               	rlcf	(btemp+11)^0,w,c
 20423  00118E  3434               	rlcf	(btemp+10)^0,w,c
 20424  001190  6E35               	movwf	(btemp+11)^0,c
 20425                           
 20426                           ;stkvar	_rem @ sp[(-2)+0]
 20427  001192  0EFE               	movlw	-2
 20428  001194  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 20429                           
 20430                           ;stkvar	_dividend @ sp[(-2)+-1]
 20431  00119A  50E1               	movf	fsr1l,w,c
 20432  00119C  0FFD               	addlw	-3
 20433  00119E  6ED9               	movwf	fsr2l,c
 20434  0011A0  50E2               	movf	fsr1h,w,c
 20435  0011A2  6EDA               	movwf	fsr2h,c
 20436  0011A4  0EFF               	movlw	255
 20437  0011A6  22DA               	addwfc	fsr2h,f,c
 20438  0011A8  90D8               	bcf	status,0,c
 20439  0011AA  36DF               	rlcf	indf2,f,c
 20440                           
 20441                           ;stkvar	_divisor @ sp[(-2)+-2]
 20442                           ;stkvar	_rem @ sp[(-2)+0]
 20443  0011AC  50E1               	movf	fsr1l,w,c
 20444  0011AE  0FFE               	addlw	-2
 20445  0011B0  6ED9               	movwf	fsr2l,c
 20446  0011B2  50E2               	movf	fsr1h,w,c
 20447  0011B4  6EDA               	movwf	fsr2h,c
 20448  0011B6  0EFF               	movlw	255
 20449  0011B8  22DA               	addwfc	fsr2h,f,c
 20450  0011BA  0EFC               	movlw	-4
 20451  0011BC  50E3               	movf	plusw1,w,c
 20452  0011BE  5CDE               	subwf	postinc2,w,c
 20453  0011C0  A0D8               	btfss	status,0,c
 20454  0011C2  D00D               	goto	l16801
 20455                           
 20456                           ;stkvar	_divisor @ sp[(-2)+-2]
 20457  0011C4  0EFC               	movlw	-4
 20458  0011C6  006F FF8C  F035    	movff	plusw1,btemp+11
 20459                           
 20460                           ;stkvar	_rem @ sp[(-2)+0]
 20461  0011CC  50E1               	movf	fsr1l,w,c
 20462  0011CE  0FFE               	addlw	-2
 20463  0011D0  6ED9               	movwf	fsr2l,c
 20464  0011D2  50E2               	movf	fsr1h,w,c
 20465  0011D4  6EDA               	movwf	fsr2h,c
 20466  0011D6  0EFF               	movlw	255
 20467  0011D8  22DA               	addwfc	fsr2h,f,c
 20468  0011DA  5035               	movf	(btemp+11)^0,w,c
 20469  0011DC  5EDF               	subwf	indf2,f,c
 20470  0011DE                     l16801:
 20471                           
 20472                           ;stkvar	_counter @ sp[(-2)+1]
 20473  0011DE  0EFF               	movlw	-1
 20474  0011E0  50E3               	movf	plusw1,w,c
 20475  0011E2  6E2A               	movwf	btemp^0,c
 20476  0011E4  0E01               	movlw	1
 20477  0011E6  5E2A               	subwf	btemp^0,f,c
 20478  0011E8  0EFF               	movlw	-1
 20479  0011EA  0060  F0AB  FFE3   	movff	btemp,plusw1
 20480  0011F0  A4D8               	btfss	status,2,c
 20481  0011F2  D7C3               	goto	l16793
 20482                           
 20483                           ;stkvar	_rem @ sp[(-2)+0]
 20484  0011F4  0EFE               	movlw	-2
 20485  0011F6  006F FF8C  F02A    	movff	plusw1,btemp
 20486                           
 20487                           ; ___lbmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20488  0011FC  52E5               	movf	postdec1,f,c
 20489  0011FE  52E5               	movf	postdec1,f,c
 20490  001200  52E5               	movf	postdec1,f,c
 20491  001202  52E5               	movf	postdec1,f,c
 20492  001204  0012               	return		;funcret
 20493  001206                     __end_of___lbmod:
 20494                           	opt callstack 0
 20495                           
 20496 ;; *************** function _current_sensor_cal *****************
 20497 ;; Defined at:
 20498 ;;		line 510 in file "main.c"
 20499 ;; Parameters:    Size  Location     Type
 20500 ;;		None
 20501 ;; Auto vars:     Size  Location     Type
 20502 ;;  cp              4  [STACK] unsigned long 
 20503 ;;  cb              4  [STACK] unsigned long 
 20504 ;;  cpz             4  [STACK] unsigned long 
 20505 ;;  cbz             4  [STACK] unsigned long 
 20506 ;;  x               1  [STACK] unsigned char 
 20507 ;; Return value:  Size  Location     Type
 20508 ;;                  1  [STACK] _Bool 
 20509 ;; Registers used:
 20510 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 20511 ;; Tracked objects:
 20512 ;;		On entry : 0/2
 20513 ;;		On exit  : 0/0
 20514 ;;		Unchanged: 0/0
 20515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20520 ;;Total ram usage:        0 bytes
 20521 ;; Hardware stack levels used:    1
 20522 ;; Hardware stack levels required when called:   27
 20523 ;; This function calls:
 20524 ;;		_WaitMs
 20525 ;;		___fldiv
 20526 ;;		___xxtofl
 20527 ;;		_cal_current_10A
 20528 ;;		_cal_current_zero
 20529 ;;		_clear_adc_scan
 20530 ;;		_clear_switch
 20531 ;;		_get_raw_result
 20532 ;;		_get_switch
 20533 ;;		_get_vterm_ptr
 20534 ;;		_spinners
 20535 ;;		_sprintf
 20536 ;;		_start_adc_scan
 20537 ;;		_update_lcd
 20538 ;;		_write_cal_data
 20539 ;; This function is called by:
 20540 ;;		_main
 20541 ;; This function uses a reentrant model
 20542 ;;
 20543                           
 20544                           	psect	text57
 20545  014898                     __ptext57:
 20546                           	opt callstack 0
 20547  014898                     _current_sensor_cal:
 20548                           	opt callstack 0
 20549                           
 20550                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 20551  014898  0E11               	movlw	17
 20552  01489A  26E1               	addwf	fsr1l,f,c
 20553  01489C  0E00               	movlw	0
 20554  01489E  22E2               	addwfc	fsr1h,f,c
 20555                           
 20556                           ;main.c: 512:  uint8_t x = 0;
 20557                           ;stkvar	_x @ sp[(-17)+16]
 20558                           
 20559                           ;incstack = 0
 20560  0148A0  0EFF               	movlw	-1
 20561  0148A2  6AE3               	clrf	plusw1,c
 20562                           
 20563                           ;main.c: 513:  uint32_t cb = 0, cp = 0;
 20564                           ;stkvar	_cb @ sp[(-17)+4]
 20565  0148A4  0EF3               	movlw	-13
 20566  0148A6  6AE3               	clrf	plusw1,c
 20567  0148A8  0EF4               	movlw	-12
 20568  0148AA  6AE3               	clrf	plusw1,c
 20569  0148AC  0EF5               	movlw	-11
 20570  0148AE  6AE3               	clrf	plusw1,c
 20571  0148B0  0EF6               	movlw	-10
 20572  0148B2  6AE3               	clrf	plusw1,c
 20573                           
 20574                           ;stkvar	_cp @ sp[(-17)+0]
 20575  0148B4  0EEF               	movlw	-17
 20576  0148B6  6AE3               	clrf	plusw1,c
 20577  0148B8  0EF0               	movlw	-16
 20578  0148BA  6AE3               	clrf	plusw1,c
 20579  0148BC  0EF1               	movlw	-15
 20580  0148BE  6AE3               	clrf	plusw1,c
 20581  0148C0  0EF2               	movlw	-14
 20582  0148C2  6AE3               	clrf	plusw1,c
 20583                           
 20584                           ;main.c: 515:  sprintf(get_vterm_ptr(0, 0), "Battery and PV       ");
 20585  0148C4  0E9B               	movlw	low STR_52
 20586  0148C6  6EE6               	movwf	postinc1,c
 20587  0148C8  0EFD               	movlw	high STR_52
 20588  0148CA  6EE6               	movwf	postinc1,c
 20589  0148CC  0E00               	movlw	0
 20590  0148CE  6EE6               	movwf	postinc1,c
 20591  0148D0  0E00               	movlw	0
 20592  0148D2  6EE6               	movwf	postinc1,c
 20593  0148D4  EC53  F014         	call	_get_vterm_ptr	;wreg free
 20594  0148D8  0060  F0AB  FFE6   	movff	btemp,postinc1
 20595  0148DE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20596  0148E4  0E04               	movlw	4
 20597  0148E6  6EE6               	movwf	postinc1,c
 20598  0148E8  EC5B  F000         	call	_sprintf	;wreg free
 20599                           
 20600                           ; BSR set to: 0
 20601                           ;main.c: 516:  sprintf(get_vterm_ptr(1, 0), "Sensor Zero          ");
 20602  0148EC  0E59               	movlw	low STR_53
 20603  0148EE  6EE6               	movwf	postinc1,c
 20604  0148F0  0EFD               	movlw	high STR_53
 20605  0148F2  6EE6               	movwf	postinc1,c
 20606  0148F4  0E00               	movlw	0
 20607  0148F6  6EE6               	movwf	postinc1,c
 20608  0148F8  0E01               	movlw	1
 20609  0148FA  6EE6               	movwf	postinc1,c
 20610  0148FC  EC53  F014         	call	_get_vterm_ptr	;wreg free
 20611  014900  0060  F0AB  FFE6   	movff	btemp,postinc1
 20612  014906  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20613  01490C  0E04               	movlw	4
 20614  01490E  6EE6               	movwf	postinc1,c
 20615  014910  EC5B  F000         	call	_sprintf	;wreg free
 20616                           
 20617                           ; BSR set to: 0
 20618                           ;main.c: 517:  sprintf(get_vterm_ptr(2, 0), "Calibration          ");
 20619  014914  0E43               	movlw	low STR_54
 20620  014916  6EE6               	movwf	postinc1,c
 20621  014918  0EFD               	movlw	high STR_54
 20622  01491A  6EE6               	movwf	postinc1,c
 20623  01491C  0E00               	movlw	0
 20624  01491E  6EE6               	movwf	postinc1,c
 20625  014920  0E02               	movlw	2
 20626  014922  6EE6               	movwf	postinc1,c
 20627  014924  EC53  F014         	call	_get_vterm_ptr	;wreg free
 20628  014928  0060  F0AB  FFE6   	movff	btemp,postinc1
 20629  01492E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20630  014934  0E04               	movlw	4
 20631  014936  6EE6               	movwf	postinc1,c
 20632  014938  EC5B  F000         	call	_sprintf	;wreg free
 20633                           
 20634                           ; BSR set to: 0
 20635                           ;main.c: 518:  update_lcd(0);
 20636  01493C  0E00               	movlw	0
 20637  01493E  6EE6               	movwf	postinc1,c
 20638  014940  EC4B  F0F8         	call	_update_lcd	;wreg free
 20639                           
 20640                           ;main.c: 519:  WaitMs(2000);
 20641  014944  0ED0               	movlw	208
 20642  014946  6EE6               	movwf	postinc1,c
 20643  014948  0E07               	movlw	7
 20644  01494A  6EE6               	movwf	postinc1,c
 20645  01494C  EC57  F013         	call	_WaitMs	;wreg free
 20646  014950                     l17389:
 20647                           
 20648                           ;main.c: 521:   if (++x > 64)
 20649                           ;stkvar	_x @ sp[(-17)+16]
 20650  014950  0EFF               	movlw	-1
 20651  014952  2AE3               	incf	plusw1,f,c
 20652  014954  0EFF               	movlw	-1
 20653  014956  006F FF8C  F02A    	movff	plusw1,btemp
 20654  01495C  0E40               	movlw	64
 20655  01495E  642A               	cpfsgt	btemp^0,c
 20656  014960  D002               	goto	l17393
 20657  014962  EF21  F0AA         	goto	l1524
 20658  014966                     l17393:
 20659                           
 20660                           ;main.c: 523:   sprintf(get_vterm_ptr(2, 0), "Release button %c   ", spinners(4, 0));
 20661  014966  0E00               	movlw	0
 20662  014968  6EE6               	movwf	postinc1,c
 20663  01496A  0E04               	movlw	4
 20664  01496C  6EE6               	movwf	postinc1,c
 20665  01496E  ECD7  F001         	call	_spinners	;wreg free
 20666  014972  502A               	movf	btemp^0,w,c
 20667  014974  6EE6               	movwf	postinc1,c
 20668  014976  0E00               	movlw	0
 20669  014978  6EE6               	movwf	postinc1,c
 20670  01497A  0E34               	movlw	low STR_55
 20671  01497C  6EE6               	movwf	postinc1,c
 20672  01497E  0EFF               	movlw	high STR_55
 20673  014980  6EE6               	movwf	postinc1,c
 20674  014982  0E00               	movlw	0
 20675  014984  6EE6               	movwf	postinc1,c
 20676  014986  0E02               	movlw	2
 20677  014988  6EE6               	movwf	postinc1,c
 20678  01498A  EC53  F014         	call	_get_vterm_ptr	;wreg free
 20679  01498E  0060  F0AB  FFE6   	movff	btemp,postinc1
 20680  014994  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20681  01499A  0E06               	movlw	6
 20682  01499C  6EE6               	movwf	postinc1,c
 20683  01499E  EC5B  F000         	call	_sprintf	;wreg free
 20684                           
 20685                           ;main.c: 524:   update_lcd(0);
 20686  0149A2  0E00               	movlw	0
 20687  0149A4  6EE6               	movwf	postinc1,c
 20688  0149A6  EC4B  F0F8         	call	_update_lcd	;wreg free
 20689                           
 20690                           ;main.c: 525:   WaitMs(100);
 20691  0149AA  0E64               	movlw	100
 20692  0149AC  6EE6               	movwf	postinc1,c
 20693  0149AE  0E00               	movlw	0
 20694  0149B0  6EE6               	movwf	postinc1,c
 20695  0149B2  EC57  F013         	call	_WaitMs	;wreg free
 20696                           
 20697                           ;main.c: 526:  } while (get_switch(SCALIB));
 20698  0149B6  0E04               	movlw	4
 20699  0149B8  6EE6               	movwf	postinc1,c
 20700  0149BA  EC6A  F014         	call	_get_switch	;wreg free
 20701  0149BE  502A               	movf	btemp^0,w,c
 20702  0149C0  A4D8               	btfss	status,2,c
 20703  0149C2  D7C6               	goto	l17389
 20704                           
 20705                           ;main.c: 528:  x = 0;
 20706                           ;stkvar	_x @ sp[(-17)+16]
 20707  0149C4  0EFF               	movlw	-1
 20708  0149C6  6AE3               	clrf	plusw1,c
 20709  0149C8                     l17401:
 20710                           
 20711                           ;main.c: 530:   cb += get_raw_result(C_BATT);
 20712  0149C8  0E00               	movlw	0
 20713  0149CA  6EE6               	movwf	postinc1,c
 20714  0149CC  EC6B  F016         	call	_get_raw_result	;wreg free
 20715                           
 20716                           ;stkvar	_cb @ sp[(-17)+4]
 20717  0149D0  50E1               	movf	fsr1l,w,c
 20718  0149D2  0FF3               	addlw	-13
 20719  0149D4  6ED9               	movwf	fsr2l,c
 20720  0149D6  50E2               	movf	fsr1h,w,c
 20721  0149D8  6EDA               	movwf	fsr2h,c
 20722  0149DA  0EFF               	movlw	255
 20723  0149DC  22DA               	addwfc	fsr2h,f,c
 20724  0149DE  502A               	movf	btemp^0,w,c
 20725  0149E0  26DE               	addwf	postinc2,f,c
 20726  0149E2  502B               	movf	(btemp+1)^0,w,c
 20727  0149E4  22DE               	addwfc	postinc2,f,c
 20728  0149E6  0E00               	movlw	0
 20729  0149E8  22DE               	addwfc	postinc2,f,c
 20730  0149EA  22DE               	addwfc	postinc2,f,c
 20731                           
 20732                           ;main.c: 531:   cp += get_raw_result(C_PV);
 20733  0149EC  0E01               	movlw	1
 20734  0149EE  6EE6               	movwf	postinc1,c
 20735  0149F0  EC6B  F016         	call	_get_raw_result	;wreg free
 20736                           
 20737                           ;stkvar	_cp @ sp[(-17)+0]
 20738  0149F4  50E1               	movf	fsr1l,w,c
 20739  0149F6  0FEF               	addlw	-17
 20740  0149F8  6ED9               	movwf	fsr2l,c
 20741  0149FA  50E2               	movf	fsr1h,w,c
 20742  0149FC  6EDA               	movwf	fsr2h,c
 20743  0149FE  0EFF               	movlw	255
 20744  014A00  22DA               	addwfc	fsr2h,f,c
 20745  014A02  502A               	movf	btemp^0,w,c
 20746  014A04  26DE               	addwf	postinc2,f,c
 20747  014A06  502B               	movf	(btemp+1)^0,w,c
 20748  014A08  22DE               	addwfc	postinc2,f,c
 20749  014A0A  0E00               	movlw	0
 20750  014A0C  22DE               	addwfc	postinc2,f,c
 20751  014A0E  22DE               	addwfc	postinc2,f,c
 20752                           
 20753                           ;main.c: 532:   sprintf(get_vterm_ptr(0, 0), "Sensor Readings      ");
 20754  014A10  0EDD               	movlw	low STR_56
 20755  014A12  6EE6               	movwf	postinc1,c
 20756  014A14  0EFD               	movlw	high STR_56
 20757  014A16  6EE6               	movwf	postinc1,c
 20758  014A18  0E00               	movlw	0
 20759  014A1A  6EE6               	movwf	postinc1,c
 20760  014A1C  0E00               	movlw	0
 20761  014A1E  6EE6               	movwf	postinc1,c
 20762  014A20  EC53  F014         	call	_get_vterm_ptr	;wreg free
 20763  014A24  0060  F0AB  FFE6   	movff	btemp,postinc1
 20764  014A2A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20765  014A30  0E04               	movlw	4
 20766  014A32  6EE6               	movwf	postinc1,c
 20767  014A34  EC5B  F000         	call	_sprintf	;wreg free
 20768                           
 20769                           ; BSR set to: 0
 20770                           ;main.c: 533:   sprintf(get_vterm_ptr(1, 0), " %d %d               ", get_raw_result(C_B
      +                          ATT), get_raw_result(C_PV));
 20771  014A38  0E01               	movlw	1
 20772  014A3A  6EE6               	movwf	postinc1,c
 20773  014A3C  EC6B  F016         	call	_get_raw_result	;wreg free
 20774  014A40  0060  F0AB  FFE6   	movff	btemp,postinc1
 20775  014A46  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20776  014A4C  0E00               	movlw	0
 20777  014A4E  6EE6               	movwf	postinc1,c
 20778  014A50  EC6B  F016         	call	_get_raw_result	;wreg free
 20779  014A54  0060  F0AB  FFE6   	movff	btemp,postinc1
 20780  014A5A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20781  014A60  0EA9               	movlw	low STR_57
 20782  014A62  6EE6               	movwf	postinc1,c
 20783  014A64  0EFC               	movlw	high STR_57
 20784  014A66  6EE6               	movwf	postinc1,c
 20785  014A68  0E00               	movlw	0
 20786  014A6A  6EE6               	movwf	postinc1,c
 20787  014A6C  0E01               	movlw	1
 20788  014A6E  6EE6               	movwf	postinc1,c
 20789  014A70  EC53  F014         	call	_get_vterm_ptr	;wreg free
 20790  014A74  0060  F0AB  FFE6   	movff	btemp,postinc1
 20791  014A7A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20792  014A80  0E08               	movlw	8
 20793  014A82  6EE6               	movwf	postinc1,c
 20794  014A84  EC5B  F000         	call	_sprintf	;wreg free
 20795                           
 20796                           ; BSR set to: 0
 20797                           ;main.c: 534:   sprintf(get_vterm_ptr(2, 0), "Stability clock %d   ", x);
 20798                           ;stkvar	_x @ sp[(-17)+16]
 20799  014A88  0EFF               	movlw	-1
 20800  014A8A  50E3               	movf	plusw1,w,c
 20801  014A8C  6EE6               	movwf	postinc1,c
 20802  014A8E  0E00               	movlw	0
 20803  014A90  6EE6               	movwf	postinc1,c
 20804  014A92  0E4B               	movlw	low STR_58
 20805  014A94  6EE6               	movwf	postinc1,c
 20806  014A96  0EFE               	movlw	high STR_58
 20807  014A98  6EE6               	movwf	postinc1,c
 20808  014A9A  0E00               	movlw	0
 20809  014A9C  6EE6               	movwf	postinc1,c
 20810  014A9E  0E02               	movlw	2
 20811  014AA0  6EE6               	movwf	postinc1,c
 20812  014AA2  EC53  F014         	call	_get_vterm_ptr	;wreg free
 20813  014AA6  0060  F0AB  FFE6   	movff	btemp,postinc1
 20814  014AAC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20815  014AB2  0E06               	movlw	6
 20816  014AB4  6EE6               	movwf	postinc1,c
 20817  014AB6  EC5B  F000         	call	_sprintf	;wreg free
 20818                           
 20819                           ; BSR set to: 0
 20820                           ;main.c: 535:   update_lcd(0);
 20821  014ABA  0E00               	movlw	0
 20822  014ABC  6EE6               	movwf	postinc1,c
 20823  014ABE  EC4B  F0F8         	call	_update_lcd	;wreg free
 20824                           
 20825                           ;main.c: 536:   clear_adc_scan();
 20826  014AC2  ECF7  F017         	call	_clear_adc_scan	;wreg free
 20827                           
 20828                           ; BSR set to: 1
 20829                           ;main.c: 537:   start_adc_scan();
 20830  014AC6  EC61  F00E         	call	_start_adc_scan	;wreg free
 20831                           
 20832                           ;main.c: 538:   WaitMs(100);
 20833  014ACA  0E64               	movlw	100
 20834  014ACC  6EE6               	movwf	postinc1,c
 20835  014ACE  0E00               	movlw	0
 20836  014AD0  6EE6               	movwf	postinc1,c
 20837  014AD2  EC57  F013         	call	_WaitMs	;wreg free
 20838                           
 20839                           ;main.c: 539:  } while (++x < 64);
 20840                           ;stkvar	_x @ sp[(-17)+16]
 20841  014AD6  0EFF               	movlw	-1
 20842  014AD8  2AE3               	incf	plusw1,f,c
 20843  014ADA  0EFF               	movlw	-1
 20844  014ADC  006F FF8C  F02A    	movff	plusw1,btemp
 20845  014AE2  0E3F               	movlw	63
 20846  014AE4  642A               	cpfsgt	btemp^0,c
 20847  014AE6  D770               	goto	l17401
 20848                           
 20849                           ;main.c: 540:  cb = cb >> 6;
 20850  014AE8  0E06               	movlw	6
 20851  014AEA  6E35               	movwf	(btemp+11)^0,c
 20852                           
 20853                           ;stkvar	_cb @ sp[(-17)+4]
 20854  014AEC  50E1               	movf	fsr1l,w,c
 20855  014AEE  0FF3               	addlw	-13
 20856  014AF0  6ED9               	movwf	fsr2l,c
 20857  014AF2  50E2               	movf	fsr1h,w,c
 20858  014AF4  6EDA               	movwf	fsr2h,c
 20859  014AF6  0EFF               	movlw	255
 20860  014AF8  22DA               	addwfc	fsr2h,f,c
 20861  014AFA  2835               	incf	(btemp+11)^0,w,c
 20862  014AFC  52DE               	movf	postinc2,f,c
 20863  014AFE  D007               	goto	u17000
 20864  014B00                     u17005:
 20865  014B00  52DE               	movf	postinc2,f,c
 20866  014B02  52DE               	movf	postinc2,f,c
 20867  014B04  90D8               	bcf	status,0,c
 20868  014B06  32DD               	rrcf	postdec2,f,c
 20869  014B08  32DD               	rrcf	postdec2,f,c
 20870  014B0A  32DD               	rrcf	postdec2,f,c
 20871  014B0C  32DE               	rrcf	postinc2,f,c
 20872  014B0E                     u17000:
 20873  014B0E  2EE8               	decfsz	wreg,f,c
 20874  014B10  D7F7               	goto	u17005
 20875                           
 20876                           ;main.c: 541:  cp = cp >> 6;
 20877  014B12  0E06               	movlw	6
 20878  014B14  6E35               	movwf	(btemp+11)^0,c
 20879                           
 20880                           ;stkvar	_cp @ sp[(-17)+0]
 20881  014B16  50E1               	movf	fsr1l,w,c
 20882  014B18  0FEF               	addlw	-17
 20883  014B1A  6ED9               	movwf	fsr2l,c
 20884  014B1C  50E2               	movf	fsr1h,w,c
 20885  014B1E  6EDA               	movwf	fsr2h,c
 20886  014B20  0EFF               	movlw	255
 20887  014B22  22DA               	addwfc	fsr2h,f,c
 20888  014B24  2835               	incf	(btemp+11)^0,w,c
 20889  014B26  52DE               	movf	postinc2,f,c
 20890  014B28  D007               	goto	u17010
 20891  014B2A                     u17015:
 20892  014B2A  52DE               	movf	postinc2,f,c
 20893  014B2C  52DE               	movf	postinc2,f,c
 20894  014B2E  90D8               	bcf	status,0,c
 20895  014B30  32DD               	rrcf	postdec2,f,c
 20896  014B32  32DD               	rrcf	postdec2,f,c
 20897  014B34  32DD               	rrcf	postdec2,f,c
 20898  014B36  32DE               	rrcf	postinc2,f,c
 20899  014B38                     u17010:
 20900  014B38  2EE8               	decfsz	wreg,f,c
 20901  014B3A  D7F7               	goto	u17015
 20902                           
 20903                           ;main.c: 543:  if (cal_current_zero(0, cb, cp)) {
 20904                           ;stkvar	_cp @ sp[(-17)+0]
 20905  014B3C  0EEF               	movlw	-17
 20906  014B3E  006F FF8F FFE6     	movff	plusw1,postinc1
 20907  014B44  006F FF8F FFE6     	movff	plusw1,postinc1
 20908                           
 20909                           ;stkvar	_cb @ sp[(-19)+4]
 20910  014B4A  0EF1               	movlw	-15
 20911  014B4C  006F FF8F FFE6     	movff	plusw1,postinc1
 20912  014B52  006F FF8F FFE6     	movff	plusw1,postinc1
 20913  014B58  0E00               	movlw	0
 20914  014B5A  6EE6               	movwf	postinc1,c
 20915  014B5C  EC4F  F009         	call	_cal_current_zero	;wreg free
 20916  014B60  502A               	movf	btemp^0,w,c
 20917  014B62  B4D8               	btfsc	status,2,c
 20918  014B64  D075               	goto	l17439
 20919                           
 20920                           ;main.c: 544:   cal_current_zero(1, cb, cp);
 20921                           ;stkvar	_cp @ sp[(-17)+0]
 20922  014B66  0EEF               	movlw	-17
 20923  014B68  006F FF8F FFE6     	movff	plusw1,postinc1
 20924  014B6E  006F FF8F FFE6     	movff	plusw1,postinc1
 20925                           
 20926                           ;stkvar	_cb @ sp[(-19)+4]
 20927  014B74  0EF1               	movlw	-15
 20928  014B76  006F FF8F FFE6     	movff	plusw1,postinc1
 20929  014B7C  006F FF8F FFE6     	movff	plusw1,postinc1
 20930  014B82  0E01               	movlw	1
 20931  014B84  6EE6               	movwf	postinc1,c
 20932  014B86  EC4F  F009         	call	_cal_current_zero	;wreg free
 20933                           
 20934                           ;main.c: 545:   sprintf(get_vterm_ptr(0, 0), "Battery and PV       ");
 20935  014B8A  0E9B               	movlw	low STR_52
 20936  014B8C  6EE6               	movwf	postinc1,c
 20937  014B8E  0EFD               	movlw	high STR_52
 20938  014B90  6EE6               	movwf	postinc1,c
 20939  014B92  0E00               	movlw	0
 20940  014B94  6EE6               	movwf	postinc1,c
 20941  014B96  0E00               	movlw	0
 20942  014B98  6EE6               	movwf	postinc1,c
 20943  014B9A  EC53  F014         	call	_get_vterm_ptr	;wreg free
 20944  014B9E  0060  F0AB  FFE6   	movff	btemp,postinc1
 20945  014BA4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20946  014BAA  0E04               	movlw	4
 20947  014BAC  6EE6               	movwf	postinc1,c
 20948  014BAE  EC5B  F000         	call	_sprintf	;wreg free
 20949                           
 20950                           ; BSR set to: 0
 20951                           ;main.c: 546:   sprintf(get_vterm_ptr(1, 0), " %ld %ld             ", cb, cp);
 20952                           ;stkvar	_cp @ sp[(-17)+0]
 20953  014BB2  0EEF               	movlw	-17
 20954  014BB4  006F FF8F FFE6     	movff	plusw1,postinc1
 20955  014BBA  006F FF8F FFE6     	movff	plusw1,postinc1
 20956  014BC0  006F FF8F FFE6     	movff	plusw1,postinc1
 20957  014BC6  006F FF8F FFE6     	movff	plusw1,postinc1
 20958                           
 20959                           ;stkvar	_cb @ sp[(-21)+4]
 20960  014BCC  0EEF               	movlw	-17
 20961  014BCE  006F FF8F FFE6     	movff	plusw1,postinc1
 20962  014BD4  006F FF8F FFE6     	movff	plusw1,postinc1
 20963  014BDA  006F FF8F FFE6     	movff	plusw1,postinc1
 20964  014BE0  006F FF8F FFE6     	movff	plusw1,postinc1
 20965  014BE6  0ED5               	movlw	low STR_60
 20966  014BE8  6EE6               	movwf	postinc1,c
 20967  014BEA  0EFC               	movlw	high STR_60
 20968  014BEC  6EE6               	movwf	postinc1,c
 20969  014BEE  0E00               	movlw	0
 20970  014BF0  6EE6               	movwf	postinc1,c
 20971  014BF2  0E01               	movlw	1
 20972  014BF4  6EE6               	movwf	postinc1,c
 20973  014BF6  EC53  F014         	call	_get_vterm_ptr	;wreg free
 20974  014BFA  0060  F0AB  FFE6   	movff	btemp,postinc1
 20975  014C00  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20976  014C06  0E0C               	movlw	12
 20977  014C08  6EE6               	movwf	postinc1,c
 20978  014C0A  EC5B  F000         	call	_sprintf	;wreg free
 20979                           
 20980                           ; BSR set to: 0
 20981                           ;main.c: 547:   sprintf(get_vterm_ptr(2, 0), "Zero Cal Set         ");
 20982  014C0E  0E85               	movlw	low STR_61
 20983  014C10  6EE6               	movwf	postinc1,c
 20984  014C12  0EFD               	movlw	high STR_61
 20985  014C14  6EE6               	movwf	postinc1,c
 20986  014C16  0E00               	movlw	0
 20987  014C18  6EE6               	movwf	postinc1,c
 20988  014C1A  0E02               	movlw	2
 20989  014C1C  6EE6               	movwf	postinc1,c
 20990  014C1E  EC53  F014         	call	_get_vterm_ptr	;wreg free
 20991  014C22  0060  F0AB  FFE6   	movff	btemp,postinc1
 20992  014C28  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 20993  014C2E  0E04               	movlw	4
 20994  014C30  6EE6               	movwf	postinc1,c
 20995  014C32  EC5B  F000         	call	_sprintf	;wreg free
 20996                           
 20997                           ; BSR set to: 0
 20998                           ;main.c: 548:   update_lcd(0);
 20999  014C36  0E00               	movlw	0
 21000  014C38  6EE6               	movwf	postinc1,c
 21001  014C3A  EC4B  F0F8         	call	_update_lcd	;wreg free
 21002                           
 21003                           ;main.c: 549:   WaitMs(2000);
 21004  014C3E  0ED0               	movlw	208
 21005  014C40  6EE6               	movwf	postinc1,c
 21006  014C42  0E07               	movlw	7
 21007  014C44  6EE6               	movwf	postinc1,c
 21008  014C46  EC57  F013         	call	_WaitMs	;wreg free
 21009                           
 21010                           ;main.c: 550:   write_cal_data();
 21011  014C4A  ECA8  F0F9         	call	_write_cal_data	;wreg free
 21012                           
 21013                           ;main.c: 551:  } else {
 21014  014C4E  D05B               	goto	l17445
 21015  014C50                     l17439:
 21016                           
 21017                           ;main.c: 552:   sprintf(get_vterm_ptr(0, 0), "Battery and PV       ");
 21018  014C50  0E9B               	movlw	low STR_52
 21019  014C52  6EE6               	movwf	postinc1,c
 21020  014C54  0EFD               	movlw	high STR_52
 21021  014C56  6EE6               	movwf	postinc1,c
 21022  014C58  0E00               	movlw	0
 21023  014C5A  6EE6               	movwf	postinc1,c
 21024  014C5C  0E00               	movlw	0
 21025  014C5E  6EE6               	movwf	postinc1,c
 21026  014C60  EC53  F014         	call	_get_vterm_ptr	;wreg free
 21027  014C64  0060  F0AB  FFE6   	movff	btemp,postinc1
 21028  014C6A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21029  014C70  0E04               	movlw	4
 21030  014C72  6EE6               	movwf	postinc1,c
 21031  014C74  EC5B  F000         	call	_sprintf	;wreg free
 21032                           
 21033                           ;main.c: 553:   sprintf(get_vterm_ptr(1, 0), " %ld %ld             ", get_raw_result(C_B
      +                          ATT), get_raw_result(C_PV));
 21034  014C78  0E01               	movlw	1
 21035  014C7A  6EE6               	movwf	postinc1,c
 21036  014C7C  EC6B  F016         	call	_get_raw_result	;wreg free
 21037  014C80  0060  F0AB  FFE6   	movff	btemp,postinc1
 21038  014C86  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21039  014C8C  0E00               	movlw	0
 21040  014C8E  6EE6               	movwf	postinc1,c
 21041  014C90  EC6B  F016         	call	_get_raw_result	;wreg free
 21042  014C94  0060  F0AB  FFE6   	movff	btemp,postinc1
 21043  014C9A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21044  014CA0  0ED5               	movlw	low STR_60
 21045  014CA2  6EE6               	movwf	postinc1,c
 21046  014CA4  0EFC               	movlw	high STR_60
 21047  014CA6  6EE6               	movwf	postinc1,c
 21048  014CA8  0E00               	movlw	0
 21049  014CAA  6EE6               	movwf	postinc1,c
 21050  014CAC  0E01               	movlw	1
 21051  014CAE  6EE6               	movwf	postinc1,c
 21052  014CB0  EC53  F014         	call	_get_vterm_ptr	;wreg free
 21053  014CB4  0060  F0AB  FFE6   	movff	btemp,postinc1
 21054  014CBA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21055  014CC0  0E08               	movlw	8
 21056  014CC2  6EE6               	movwf	postinc1,c
 21057  014CC4  EC5B  F000         	call	_sprintf	;wreg free
 21058                           
 21059                           ;main.c: 554:   sprintf(get_vterm_ptr(2, 0), "Zero Out Of Range    ");
 21060  014CC8  0E1F               	movlw	low STR_64
 21061  014CCA  6EE6               	movwf	postinc1,c
 21062  014CCC  0EFE               	movlw	high STR_64
 21063  014CCE  6EE6               	movwf	postinc1,c
 21064  014CD0  0E00               	movlw	0
 21065  014CD2  6EE6               	movwf	postinc1,c
 21066  014CD4  0E02               	movlw	2
 21067  014CD6  6EE6               	movwf	postinc1,c
 21068  014CD8  EC53  F014         	call	_get_vterm_ptr	;wreg free
 21069  014CDC  0060  F0AB  FFE6   	movff	btemp,postinc1
 21070  014CE2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21071  014CE8  0E04               	movlw	4
 21072  014CEA  6EE6               	movwf	postinc1,c
 21073  014CEC  EC5B  F000         	call	_sprintf	;wreg free
 21074                           
 21075                           ;main.c: 555:   update_lcd(0);
 21076  014CF0  0E00               	movlw	0
 21077  014CF2  6EE6               	movwf	postinc1,c
 21078  014CF4  EC4B  F0F8         	call	_update_lcd	;wreg free
 21079  014CF8                     l17441:
 21080                           
 21081                           ;main.c: 556:   WaitMs(2000);
 21082  014CF8  0ED0               	movlw	208
 21083  014CFA  6EE6               	movwf	postinc1,c
 21084  014CFC  0E07               	movlw	7
 21085  014CFE  6EE6               	movwf	postinc1,c
 21086  014D00  EC57  F013         	call	_WaitMs	;wreg free
 21087  014D04  D39E               	goto	l1524
 21088  014D06                     l17445:
 21089                           
 21090                           ;main.c: 561:  uint32_t cbz, cpz;;main.c: 563:  clear_switch(SCALIB);
 21091  014D06  0E04               	movlw	4
 21092  014D08  6EE6               	movwf	postinc1,c
 21093  014D0A  EC58  F010         	call	_clear_switch	;wreg free
 21094                           
 21095                           ;main.c: 564:  sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 21096  014D0E  0E0A               	movlw	low STR_65
 21097  014D10  6EE6               	movwf	postinc1,c
 21098  014D12  0EFF               	movlw	high STR_65
 21099  014D14  6EE6               	movwf	postinc1,c
 21100  014D16  0E00               	movlw	0
 21101  014D18  6EE6               	movwf	postinc1,c
 21102  014D1A  0E00               	movlw	0
 21103  014D1C  6EE6               	movwf	postinc1,c
 21104  014D1E  EC53  F014         	call	_get_vterm_ptr	;wreg free
 21105  014D22  0060  F0AB  FFE6   	movff	btemp,postinc1
 21106  014D28  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21107  014D2E  0E04               	movlw	4
 21108  014D30  6EE6               	movwf	postinc1,c
 21109  014D32  EC5B  F000         	call	_sprintf	;wreg free
 21110                           
 21111                           ; BSR set to: 0
 21112                           ;main.c: 565:  sprintf(get_vterm_ptr(1, 0), "10 Amp Sensor       ");
 21113  014D36  0EE0               	movlw	low STR_66
 21114  014D38  6EE6               	movwf	postinc1,c
 21115  014D3A  0EFE               	movlw	high STR_66
 21116  014D3C  6EE6               	movwf	postinc1,c
 21117  014D3E  0E00               	movlw	0
 21118  014D40  6EE6               	movwf	postinc1,c
 21119  014D42  0E01               	movlw	1
 21120  014D44  6EE6               	movwf	postinc1,c
 21121  014D46  EC53  F014         	call	_get_vterm_ptr	;wreg free
 21122  014D4A  0060  F0AB  FFE6   	movff	btemp,postinc1
 21123  014D50  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21124  014D56  0E04               	movlw	4
 21125  014D58  6EE6               	movwf	postinc1,c
 21126  014D5A  EC5B  F000         	call	_sprintf	;wreg free
 21127                           
 21128                           ; BSR set to: 0
 21129                           ;main.c: 566:  sprintf(get_vterm_ptr(2, 0), "Calibration         ");
 21130  014D5E  0EB6               	movlw	low STR_67
 21131  014D60  6EE6               	movwf	postinc1,c
 21132  014D62  0EFE               	movlw	high STR_67
 21133  014D64  6EE6               	movwf	postinc1,c
 21134  014D66  0E00               	movlw	0
 21135  014D68  6EE6               	movwf	postinc1,c
 21136  014D6A  0E02               	movlw	2
 21137  014D6C  6EE6               	movwf	postinc1,c
 21138  014D6E  EC53  F014         	call	_get_vterm_ptr	;wreg free
 21139  014D72  0060  F0AB  FFE6   	movff	btemp,postinc1
 21140  014D78  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21141  014D7E  0E04               	movlw	4
 21142  014D80  6EE6               	movwf	postinc1,c
 21143  014D82  EC5B  F000         	call	_sprintf	;wreg free
 21144                           
 21145                           ; BSR set to: 0
 21146                           ;main.c: 567:  update_lcd(0);
 21147  014D86  0E00               	movlw	0
 21148  014D88  6EE6               	movwf	postinc1,c
 21149  014D8A  EC4B  F0F8         	call	_update_lcd	;wreg free
 21150                           
 21151                           ;main.c: 568:  WaitMs(2000);
 21152  014D8E  0ED0               	movlw	208
 21153  014D90  6EE6               	movwf	postinc1,c
 21154  014D92  0E07               	movlw	7
 21155  014D94  6EE6               	movwf	postinc1,c
 21156  014D96  EC57  F013         	call	_WaitMs	;wreg free
 21157                           
 21158                           ;main.c: 569:  x = 0;
 21159                           ;stkvar	_x @ sp[(-17)+16]
 21160  014D9A  0EFF               	movlw	-1
 21161  014D9C  6AE3               	clrf	plusw1,c
 21162  014D9E                     l17459:
 21163                           
 21164                           ;main.c: 571:   if (++x > 64)
 21165                           ;stkvar	_x @ sp[(-17)+16]
 21166  014D9E  0EFF               	movlw	-1
 21167  014DA0  2AE3               	incf	plusw1,f,c
 21168  014DA2  0EFF               	movlw	-1
 21169  014DA4  006F FF8C  F02A    	movff	plusw1,btemp
 21170  014DAA  0E40               	movlw	64
 21171  014DAC  642A               	cpfsgt	btemp^0,c
 21172  014DAE  D001               	goto	l17463
 21173  014DB0  D348               	goto	l1524
 21174  014DB2                     l17463:
 21175                           
 21176                           ;main.c: 573:   sprintf(get_vterm_ptr(2, 0), "Press button %c   ", spinners(4, 0));
 21177  014DB2  0E00               	movlw	0
 21178  014DB4  6EE6               	movwf	postinc1,c
 21179  014DB6  0E04               	movlw	4
 21180  014DB8  6EE6               	movwf	postinc1,c
 21181  014DBA  ECD7  F001         	call	_spinners	;wreg free
 21182  014DBE  502A               	movf	btemp^0,w,c
 21183  014DC0  6EE6               	movwf	postinc1,c
 21184  014DC2  0E00               	movlw	0
 21185  014DC4  6EE6               	movwf	postinc1,c
 21186  014DC6  0E71               	movlw	low STR_68
 21187  014DC8  6EE6               	movwf	postinc1,c
 21188  014DCA  0EFF               	movlw	high STR_68
 21189  014DCC  6EE6               	movwf	postinc1,c
 21190  014DCE  0E00               	movlw	0
 21191  014DD0  6EE6               	movwf	postinc1,c
 21192  014DD2  0E02               	movlw	2
 21193  014DD4  6EE6               	movwf	postinc1,c
 21194  014DD6  EC53  F014         	call	_get_vterm_ptr	;wreg free
 21195  014DDA  0060  F0AB  FFE6   	movff	btemp,postinc1
 21196  014DE0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21197  014DE6  0E06               	movlw	6
 21198  014DE8  6EE6               	movwf	postinc1,c
 21199  014DEA  EC5B  F000         	call	_sprintf	;wreg free
 21200                           
 21201                           ;main.c: 574:   update_lcd(0);
 21202  014DEE  0E00               	movlw	0
 21203  014DF0  6EE6               	movwf	postinc1,c
 21204  014DF2  EC4B  F0F8         	call	_update_lcd	;wreg free
 21205                           
 21206                           ;main.c: 575:   WaitMs(100);
 21207  014DF6  0E64               	movlw	100
 21208  014DF8  6EE6               	movwf	postinc1,c
 21209  014DFA  0E00               	movlw	0
 21210  014DFC  6EE6               	movwf	postinc1,c
 21211  014DFE  EC57  F013         	call	_WaitMs	;wreg free
 21212                           
 21213                           ;main.c: 576:  } while (!get_switch(SCALIB));
 21214  014E02  0E04               	movlw	4
 21215  014E04  6EE6               	movwf	postinc1,c
 21216  014E06  EC6A  F014         	call	_get_switch	;wreg free
 21217  014E0A  502A               	movf	btemp^0,w,c
 21218  014E0C  B4D8               	btfsc	status,2,c
 21219  014E0E  D7C7               	goto	l17459
 21220                           
 21221                           ;main.c: 578:  x = 0;
 21222                           ;stkvar	_x @ sp[(-17)+16]
 21223  014E10  0EFF               	movlw	-1
 21224  014E12  6AE3               	clrf	plusw1,c
 21225                           
 21226                           ;main.c: 579:  cbz = cb;
 21227                           ;stkvar	_cb @ sp[(-17)+4]
 21228  014E14  0EF3               	movlw	-13
 21229  014E16  006F FF8C  F032    	movff	plusw1,btemp+8
 21230  014E1C  0EF4               	movlw	-12
 21231  014E1E  006F FF8C  F033    	movff	plusw1,btemp+9
 21232  014E24  0EF5               	movlw	-11
 21233  014E26  006F FF8C  F034    	movff	plusw1,btemp+10
 21234  014E2C  0EF6               	movlw	-10
 21235  014E2E  006F FF8C  F035    	movff	plusw1,btemp+11
 21236                           
 21237                           ;stkvar	_cbz @ sp[(-17)+12]
 21238  014E34  0EFB               	movlw	-5
 21239  014E36  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 21240  014E3C  0EFC               	movlw	-4
 21241  014E3E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 21242  014E44  0EFD               	movlw	-3
 21243  014E46  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 21244  014E4C  0EFE               	movlw	-2
 21245  014E4E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 21246                           
 21247                           ;main.c: 580:  cpz = cp;
 21248                           ;stkvar	_cp @ sp[(-17)+0]
 21249  014E54  0EEF               	movlw	-17
 21250  014E56  006F FF8C  F032    	movff	plusw1,btemp+8
 21251  014E5C  0EF0               	movlw	-16
 21252  014E5E  006F FF8C  F033    	movff	plusw1,btemp+9
 21253  014E64  0EF1               	movlw	-15
 21254  014E66  006F FF8C  F034    	movff	plusw1,btemp+10
 21255  014E6C  0EF2               	movlw	-14
 21256  014E6E  006F FF8C  F035    	movff	plusw1,btemp+11
 21257                           
 21258                           ;stkvar	_cpz @ sp[(-17)+8]
 21259  014E74  0EF7               	movlw	-9
 21260  014E76  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 21261  014E7C  0EF8               	movlw	-8
 21262  014E7E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 21263  014E84  0EF9               	movlw	-7
 21264  014E86  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 21265  014E8C  0EFA               	movlw	-6
 21266  014E8E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 21267                           
 21268                           ;main.c: 581:  cb = 0;
 21269                           ;stkvar	_cb @ sp[(-17)+4]
 21270  014E94  0EF3               	movlw	-13
 21271  014E96  6AE3               	clrf	plusw1,c
 21272  014E98  0EF4               	movlw	-12
 21273  014E9A  6AE3               	clrf	plusw1,c
 21274  014E9C  0EF5               	movlw	-11
 21275  014E9E  6AE3               	clrf	plusw1,c
 21276  014EA0  0EF6               	movlw	-10
 21277  014EA2  6AE3               	clrf	plusw1,c
 21278                           
 21279                           ;main.c: 582:  cp = 0;
 21280                           ;stkvar	_cp @ sp[(-17)+0]
 21281  014EA4  0EEF               	movlw	-17
 21282  014EA6  6AE3               	clrf	plusw1,c
 21283  014EA8  0EF0               	movlw	-16
 21284  014EAA  6AE3               	clrf	plusw1,c
 21285  014EAC  0EF1               	movlw	-15
 21286  014EAE  6AE3               	clrf	plusw1,c
 21287  014EB0  0EF2               	movlw	-14
 21288  014EB2  6AE3               	clrf	plusw1,c
 21289  014EB4                     l17479:
 21290                           
 21291                           ;main.c: 584:   cb += get_raw_result(C_BATT);
 21292  014EB4  0E00               	movlw	0
 21293  014EB6  6EE6               	movwf	postinc1,c
 21294  014EB8  EC6B  F016         	call	_get_raw_result	;wreg free
 21295                           
 21296                           ;stkvar	_cb @ sp[(-17)+4]
 21297  014EBC  50E1               	movf	fsr1l,w,c
 21298  014EBE  0FF3               	addlw	-13
 21299  014EC0  6ED9               	movwf	fsr2l,c
 21300  014EC2  50E2               	movf	fsr1h,w,c
 21301  014EC4  6EDA               	movwf	fsr2h,c
 21302  014EC6  0EFF               	movlw	255
 21303  014EC8  22DA               	addwfc	fsr2h,f,c
 21304  014ECA  502A               	movf	btemp^0,w,c
 21305  014ECC  26DE               	addwf	postinc2,f,c
 21306  014ECE  502B               	movf	(btemp+1)^0,w,c
 21307  014ED0  22DE               	addwfc	postinc2,f,c
 21308  014ED2  0E00               	movlw	0
 21309  014ED4  22DE               	addwfc	postinc2,f,c
 21310  014ED6  22DE               	addwfc	postinc2,f,c
 21311                           
 21312                           ;main.c: 585:   cp += get_raw_result(C_PV);
 21313  014ED8  0E01               	movlw	1
 21314  014EDA  6EE6               	movwf	postinc1,c
 21315  014EDC  EC6B  F016         	call	_get_raw_result	;wreg free
 21316                           
 21317                           ;stkvar	_cp @ sp[(-17)+0]
 21318  014EE0  50E1               	movf	fsr1l,w,c
 21319  014EE2  0FEF               	addlw	-17
 21320  014EE4  6ED9               	movwf	fsr2l,c
 21321  014EE6  50E2               	movf	fsr1h,w,c
 21322  014EE8  6EDA               	movwf	fsr2h,c
 21323  014EEA  0EFF               	movlw	255
 21324  014EEC  22DA               	addwfc	fsr2h,f,c
 21325  014EEE  502A               	movf	btemp^0,w,c
 21326  014EF0  26DE               	addwf	postinc2,f,c
 21327  014EF2  502B               	movf	(btemp+1)^0,w,c
 21328  014EF4  22DE               	addwfc	postinc2,f,c
 21329  014EF6  0E00               	movlw	0
 21330  014EF8  22DE               	addwfc	postinc2,f,c
 21331  014EFA  22DE               	addwfc	postinc2,f,c
 21332                           
 21333                           ;main.c: 586:   sprintf(get_vterm_ptr(0, 0), "Sensor Readings      ");
 21334  014EFC  0EDD               	movlw	low STR_56
 21335  014EFE  6EE6               	movwf	postinc1,c
 21336  014F00  0EFD               	movlw	high STR_56
 21337  014F02  6EE6               	movwf	postinc1,c
 21338  014F04  0E00               	movlw	0
 21339  014F06  6EE6               	movwf	postinc1,c
 21340  014F08  0E00               	movlw	0
 21341  014F0A  6EE6               	movwf	postinc1,c
 21342  014F0C  EC53  F014         	call	_get_vterm_ptr	;wreg free
 21343  014F10  0060  F0AB  FFE6   	movff	btemp,postinc1
 21344  014F16  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21345  014F1C  0E04               	movlw	4
 21346  014F1E  6EE6               	movwf	postinc1,c
 21347  014F20  EC5B  F000         	call	_sprintf	;wreg free
 21348                           
 21349                           ; BSR set to: 0
 21350                           ;main.c: 587:   sprintf(get_vterm_ptr(1, 0), " %d %d               ", get_raw_result(C_B
      +                          ATT), get_raw_result(C_PV));
 21351  014F24  0E01               	movlw	1
 21352  014F26  6EE6               	movwf	postinc1,c
 21353  014F28  EC6B  F016         	call	_get_raw_result	;wreg free
 21354  014F2C  0060  F0AB  FFE6   	movff	btemp,postinc1
 21355  014F32  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21356  014F38  0E00               	movlw	0
 21357  014F3A  6EE6               	movwf	postinc1,c
 21358  014F3C  EC6B  F016         	call	_get_raw_result	;wreg free
 21359  014F40  0060  F0AB  FFE6   	movff	btemp,postinc1
 21360  014F46  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21361  014F4C  0EA9               	movlw	low STR_57
 21362  014F4E  6EE6               	movwf	postinc1,c
 21363  014F50  0EFC               	movlw	high STR_57
 21364  014F52  6EE6               	movwf	postinc1,c
 21365  014F54  0E00               	movlw	0
 21366  014F56  6EE6               	movwf	postinc1,c
 21367  014F58  0E01               	movlw	1
 21368  014F5A  6EE6               	movwf	postinc1,c
 21369  014F5C  EC53  F014         	call	_get_vterm_ptr	;wreg free
 21370  014F60  0060  F0AB  FFE6   	movff	btemp,postinc1
 21371  014F66  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21372  014F6C  0E08               	movlw	8
 21373  014F6E  6EE6               	movwf	postinc1,c
 21374  014F70  EC5B  F000         	call	_sprintf	;wreg free
 21375                           
 21376                           ; BSR set to: 0
 21377                           ;main.c: 588:   sprintf(get_vterm_ptr(2, 0), "Stability clock %d   ", x);
 21378                           ;stkvar	_x @ sp[(-17)+16]
 21379  014F74  0EFF               	movlw	-1
 21380  014F76  50E3               	movf	plusw1,w,c
 21381  014F78  6EE6               	movwf	postinc1,c
 21382  014F7A  0E00               	movlw	0
 21383  014F7C  6EE6               	movwf	postinc1,c
 21384  014F7E  0E4B               	movlw	low STR_58
 21385  014F80  6EE6               	movwf	postinc1,c
 21386  014F82  0EFE               	movlw	high STR_58
 21387  014F84  6EE6               	movwf	postinc1,c
 21388  014F86  0E00               	movlw	0
 21389  014F88  6EE6               	movwf	postinc1,c
 21390  014F8A  0E02               	movlw	2
 21391  014F8C  6EE6               	movwf	postinc1,c
 21392  014F8E  EC53  F014         	call	_get_vterm_ptr	;wreg free
 21393  014F92  0060  F0AB  FFE6   	movff	btemp,postinc1
 21394  014F98  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21395  014F9E  0E06               	movlw	6
 21396  014FA0  6EE6               	movwf	postinc1,c
 21397  014FA2  EC5B  F000         	call	_sprintf	;wreg free
 21398                           
 21399                           ; BSR set to: 0
 21400                           ;main.c: 589:   update_lcd(0);
 21401  014FA6  0E00               	movlw	0
 21402  014FA8  6EE6               	movwf	postinc1,c
 21403  014FAA  EC4B  F0F8         	call	_update_lcd	;wreg free
 21404                           
 21405                           ;main.c: 590:   clear_adc_scan();
 21406  014FAE  ECF7  F017         	call	_clear_adc_scan	;wreg free
 21407                           
 21408                           ; BSR set to: 1
 21409                           ;main.c: 591:   start_adc_scan();
 21410  014FB2  EC61  F00E         	call	_start_adc_scan	;wreg free
 21411                           
 21412                           ;main.c: 592:   WaitMs(100);
 21413  014FB6  0E64               	movlw	100
 21414  014FB8  6EE6               	movwf	postinc1,c
 21415  014FBA  0E00               	movlw	0
 21416  014FBC  6EE6               	movwf	postinc1,c
 21417  014FBE  EC57  F013         	call	_WaitMs	;wreg free
 21418                           
 21419                           ;main.c: 593:  } while (++x < 64);
 21420                           ;stkvar	_x @ sp[(-17)+16]
 21421  014FC2  0EFF               	movlw	-1
 21422  014FC4  2AE3               	incf	plusw1,f,c
 21423  014FC6  0EFF               	movlw	-1
 21424  014FC8  006F FF8C  F02A    	movff	plusw1,btemp
 21425  014FCE  0E3F               	movlw	63
 21426  014FD0  642A               	cpfsgt	btemp^0,c
 21427  014FD2  D770               	goto	l17479
 21428                           
 21429                           ;main.c: 594:  cb = cb >> 6;
 21430  014FD4  0E06               	movlw	6
 21431  014FD6  6E35               	movwf	(btemp+11)^0,c
 21432                           
 21433                           ;stkvar	_cb @ sp[(-17)+4]
 21434  014FD8  50E1               	movf	fsr1l,w,c
 21435  014FDA  0FF3               	addlw	-13
 21436  014FDC  6ED9               	movwf	fsr2l,c
 21437  014FDE  50E2               	movf	fsr1h,w,c
 21438  014FE0  6EDA               	movwf	fsr2h,c
 21439  014FE2  0EFF               	movlw	255
 21440  014FE4  22DA               	addwfc	fsr2h,f,c
 21441  014FE6  2835               	incf	(btemp+11)^0,w,c
 21442  014FE8  52DE               	movf	postinc2,f,c
 21443  014FEA  D007               	goto	u17060
 21444  014FEC                     u17065:
 21445  014FEC  52DE               	movf	postinc2,f,c
 21446  014FEE  52DE               	movf	postinc2,f,c
 21447  014FF0  90D8               	bcf	status,0,c
 21448  014FF2  32DD               	rrcf	postdec2,f,c
 21449  014FF4  32DD               	rrcf	postdec2,f,c
 21450  014FF6  32DD               	rrcf	postdec2,f,c
 21451  014FF8  32DE               	rrcf	postinc2,f,c
 21452  014FFA                     u17060:
 21453  014FFA  2EE8               	decfsz	wreg,f,c
 21454  014FFC  D7F7               	goto	u17065
 21455                           
 21456                           ;main.c: 595:  cp = cp >> 6;
 21457  014FFE  0E06               	movlw	6
 21458  015000  6E35               	movwf	(btemp+11)^0,c
 21459                           
 21460                           ;stkvar	_cp @ sp[(-17)+0]
 21461  015002  50E1               	movf	fsr1l,w,c
 21462  015004  0FEF               	addlw	-17
 21463  015006  6ED9               	movwf	fsr2l,c
 21464  015008  50E2               	movf	fsr1h,w,c
 21465  01500A  6EDA               	movwf	fsr2h,c
 21466  01500C  0EFF               	movlw	255
 21467  01500E  22DA               	addwfc	fsr2h,f,c
 21468  015010  2835               	incf	(btemp+11)^0,w,c
 21469  015012  52DE               	movf	postinc2,f,c
 21470  015014  D007               	goto	u17070
 21471  015016                     u17075:
 21472  015016  52DE               	movf	postinc2,f,c
 21473  015018  52DE               	movf	postinc2,f,c
 21474  01501A  90D8               	bcf	status,0,c
 21475  01501C  32DD               	rrcf	postdec2,f,c
 21476  01501E  32DD               	rrcf	postdec2,f,c
 21477  015020  32DD               	rrcf	postdec2,f,c
 21478  015022  32DE               	rrcf	postinc2,f,c
 21479  015024                     u17070:
 21480  015024  2EE8               	decfsz	wreg,f,c
 21481  015026  D7F7               	goto	u17075
 21482                           
 21483                           ;main.c: 597:  if (cal_current_10A(0, cb, cp, 0.0, 0.0)) {
 21484  015028  0E00               	movlw	0
 21485  01502A  6EE6               	movwf	postinc1,c
 21486  01502C  0E00               	movlw	0
 21487  01502E  6EE6               	movwf	postinc1,c
 21488  015030  0E00               	movlw	0
 21489  015032  6EE6               	movwf	postinc1,c
 21490  015034  0E00               	movlw	0
 21491  015036  6EE6               	movwf	postinc1,c
 21492  015038  0E00               	movlw	0
 21493  01503A  6EE6               	movwf	postinc1,c
 21494  01503C  0E00               	movlw	0
 21495  01503E  6EE6               	movwf	postinc1,c
 21496  015040  0E00               	movlw	0
 21497  015042  6EE6               	movwf	postinc1,c
 21498  015044  0E00               	movlw	0
 21499  015046  6EE6               	movwf	postinc1,c
 21500                           
 21501                           ;stkvar	_cp @ sp[(-25)+0]
 21502  015048  0EE7               	movlw	-25
 21503  01504A  006F FF8F FFE6     	movff	plusw1,postinc1
 21504  015050  006F FF8F FFE6     	movff	plusw1,postinc1
 21505                           
 21506                           ;stkvar	_cb @ sp[(-27)+4]
 21507  015056  0EE9               	movlw	-23
 21508  015058  006F FF8F FFE6     	movff	plusw1,postinc1
 21509  01505E  006F FF8F FFE6     	movff	plusw1,postinc1
 21510  015064  0E00               	movlw	0
 21511  015066  6EE6               	movwf	postinc1,c
 21512  015068  ECED  F004         	call	_cal_current_10A	;wreg free
 21513  01506C  502A               	movf	btemp^0,w,c
 21514  01506E  B4D8               	btfsc	status,2,c
 21515  015070  D193               	goto	l17517
 21516                           
 21517                           ;main.c: 598:   cal_current_10A(1, cb, cp, 10.0 / (float) (cb - cbz), 10.0 / (float) (cp
      +                           - cpz));
 21518                           ;stkvar	_cpz @ sp[(-17)+8]
 21519                           ;stkvar	_cp @ sp[(-17)+0]
 21520  015072  0EEF               	movlw	-17
 21521  015074  006F FF8C  F032    	movff	plusw1,btemp+8
 21522  01507A  0EF0               	movlw	-16
 21523  01507C  006F FF8C  F033    	movff	plusw1,btemp+9
 21524  015082  0EF1               	movlw	-15
 21525  015084  006F FF8C  F034    	movff	plusw1,btemp+10
 21526  01508A  0EF2               	movlw	-14
 21527  01508C  006F FF8C  F035    	movff	plusw1,btemp+11
 21528  015092  0EF7               	movlw	-9
 21529  015094  50E3               	movf	plusw1,w,c
 21530  015096  5E32               	subwf	(btemp+8)^0,f,c
 21531  015098  0EF8               	movlw	-8
 21532  01509A  50E3               	movf	plusw1,w,c
 21533  01509C  5A33               	subwfb	(btemp+9)^0,f,c
 21534  01509E  0EF9               	movlw	-7
 21535  0150A0  50E3               	movf	plusw1,w,c
 21536  0150A2  5A34               	subwfb	(btemp+10)^0,f,c
 21537  0150A4  0EFA               	movlw	-6
 21538  0150A6  50E3               	movf	plusw1,w,c
 21539  0150A8  5A35               	subwfb	(btemp+11)^0,f,c
 21540  0150AA  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 21541  0150B0  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 21542  0150B6  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 21543  0150BC  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 21544  0150C2  0E00               	movlw	0
 21545  0150C4  6EE6               	movwf	postinc1,c
 21546  0150C6  EC4F  F0ED         	call	___xxtofl	;wreg free
 21547  0150CA  0060  F0AB  FFE6   	movff	btemp,postinc1
 21548  0150D0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21549  0150D6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 21550  0150DC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 21551  0150E2  0E00               	movlw	0
 21552  0150E4  6EE6               	movwf	postinc1,c
 21553  0150E6  0E00               	movlw	0
 21554  0150E8  6EE6               	movwf	postinc1,c
 21555  0150EA  0E20               	movlw	32
 21556  0150EC  6EE6               	movwf	postinc1,c
 21557  0150EE  0E41               	movlw	65
 21558  0150F0  6EE6               	movwf	postinc1,c
 21559  0150F2  ECB8  F0C3         	call	___fldiv	;wreg free
 21560  0150F6  0060  F0AB  FFE6   	movff	btemp,postinc1
 21561  0150FC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21562  015102  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 21563  015108  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 21564                           
 21565                           ;stkvar	_cbz @ sp[(-21)+12]
 21566                           ;stkvar	_cb @ sp[(-21)+4]
 21567  01510E  0EEF               	movlw	-17
 21568  015110  006F FF8C  F032    	movff	plusw1,btemp+8
 21569  015116  0EF0               	movlw	-16
 21570  015118  006F FF8C  F033    	movff	plusw1,btemp+9
 21571  01511E  0EF1               	movlw	-15
 21572  015120  006F FF8C  F034    	movff	plusw1,btemp+10
 21573  015126  0EF2               	movlw	-14
 21574  015128  006F FF8C  F035    	movff	plusw1,btemp+11
 21575  01512E  0EF7               	movlw	-9
 21576  015130  50E3               	movf	plusw1,w,c
 21577  015132  5E32               	subwf	(btemp+8)^0,f,c
 21578  015134  0EF8               	movlw	-8
 21579  015136  50E3               	movf	plusw1,w,c
 21580  015138  5A33               	subwfb	(btemp+9)^0,f,c
 21581  01513A  0EF9               	movlw	-7
 21582  01513C  50E3               	movf	plusw1,w,c
 21583  01513E  5A34               	subwfb	(btemp+10)^0,f,c
 21584  015140  0EFA               	movlw	-6
 21585  015142  50E3               	movf	plusw1,w,c
 21586  015144  5A35               	subwfb	(btemp+11)^0,f,c
 21587  015146  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 21588  01514C  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 21589  015152  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 21590  015158  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 21591  01515E  0E00               	movlw	0
 21592  015160  6EE6               	movwf	postinc1,c
 21593  015162  EC4F  F0ED         	call	___xxtofl	;wreg free
 21594  015166  0060  F0AB  FFE6   	movff	btemp,postinc1
 21595  01516C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21596  015172  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 21597  015178  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 21598  01517E  0E00               	movlw	0
 21599  015180  6EE6               	movwf	postinc1,c
 21600  015182  0E00               	movlw	0
 21601  015184  6EE6               	movwf	postinc1,c
 21602  015186  0E20               	movlw	32
 21603  015188  6EE6               	movwf	postinc1,c
 21604  01518A  0E41               	movlw	65
 21605  01518C  6EE6               	movwf	postinc1,c
 21606  01518E  ECB8  F0C3         	call	___fldiv	;wreg free
 21607  015192  0060  F0AB  FFE6   	movff	btemp,postinc1
 21608  015198  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21609  01519E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 21610  0151A4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 21611                           
 21612                           ;stkvar	_cp @ sp[(-25)+0]
 21613  0151AA  0EE7               	movlw	-25
 21614  0151AC  006F FF8F FFE6     	movff	plusw1,postinc1
 21615  0151B2  006F FF8F FFE6     	movff	plusw1,postinc1
 21616                           
 21617                           ;stkvar	_cb @ sp[(-27)+4]
 21618  0151B8  0EE9               	movlw	-23
 21619  0151BA  006F FF8F FFE6     	movff	plusw1,postinc1
 21620  0151C0  006F FF8F FFE6     	movff	plusw1,postinc1
 21621  0151C6  0E01               	movlw	1
 21622  0151C8  6EE6               	movwf	postinc1,c
 21623  0151CA  ECED  F004         	call	_cal_current_10A	;wreg free
 21624                           
 21625                           ;main.c: 599:   sprintf(get_vterm_ptr(0, 0), "Battery and PV       ");
 21626  0151CE  0E9B               	movlw	low STR_52
 21627  0151D0  6EE6               	movwf	postinc1,c
 21628  0151D2  0EFD               	movlw	high STR_52
 21629  0151D4  6EE6               	movwf	postinc1,c
 21630  0151D6  0E00               	movlw	0
 21631  0151D8  6EE6               	movwf	postinc1,c
 21632  0151DA  0E00               	movlw	0
 21633  0151DC  6EE6               	movwf	postinc1,c
 21634  0151DE  EC53  F014         	call	_get_vterm_ptr	;wreg free
 21635  0151E2  0060  F0AB  FFE6   	movff	btemp,postinc1
 21636  0151E8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21637  0151EE  0E04               	movlw	4
 21638  0151F0  6EE6               	movwf	postinc1,c
 21639  0151F2  EC5B  F000         	call	_sprintf	;wreg free
 21640                           
 21641                           ; BSR set to: 0
 21642                           ;main.c: 600:   sprintf(get_vterm_ptr(1, 0), " %f %f               ", 10.0 / (float) (cb
      +                           - cbz), 10.0 / (float) (cp - cpz));
 21643                           ;stkvar	_cpz @ sp[(-17)+8]
 21644                           ;stkvar	_cp @ sp[(-17)+0]
 21645  0151F6  0EEF               	movlw	-17
 21646  0151F8  006F FF8C  F032    	movff	plusw1,btemp+8
 21647  0151FE  0EF0               	movlw	-16
 21648  015200  006F FF8C  F033    	movff	plusw1,btemp+9
 21649  015206  0EF1               	movlw	-15
 21650  015208  006F FF8C  F034    	movff	plusw1,btemp+10
 21651  01520E  0EF2               	movlw	-14
 21652  015210  006F FF8C  F035    	movff	plusw1,btemp+11
 21653  015216  0EF7               	movlw	-9
 21654  015218  50E3               	movf	plusw1,w,c
 21655  01521A  5E32               	subwf	(btemp+8)^0,f,c
 21656  01521C  0EF8               	movlw	-8
 21657  01521E  50E3               	movf	plusw1,w,c
 21658  015220  5A33               	subwfb	(btemp+9)^0,f,c
 21659  015222  0EF9               	movlw	-7
 21660  015224  50E3               	movf	plusw1,w,c
 21661  015226  5A34               	subwfb	(btemp+10)^0,f,c
 21662  015228  0EFA               	movlw	-6
 21663  01522A  50E3               	movf	plusw1,w,c
 21664  01522C  5A35               	subwfb	(btemp+11)^0,f,c
 21665  01522E  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 21666  015234  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 21667  01523A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 21668  015240  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 21669  015246  0E00               	movlw	0
 21670  015248  6EE6               	movwf	postinc1,c
 21671  01524A  EC4F  F0ED         	call	___xxtofl	;wreg free
 21672  01524E  0060  F0AB  FFE6   	movff	btemp,postinc1
 21673  015254  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21674  01525A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 21675  015260  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 21676  015266  0E00               	movlw	0
 21677  015268  6EE6               	movwf	postinc1,c
 21678  01526A  0E00               	movlw	0
 21679  01526C  6EE6               	movwf	postinc1,c
 21680  01526E  0E20               	movlw	32
 21681  015270  6EE6               	movwf	postinc1,c
 21682  015272  0E41               	movlw	65
 21683  015274  6EE6               	movwf	postinc1,c
 21684  015276  ECB8  F0C3         	call	___fldiv	;wreg free
 21685  01527A  0060  F0AB  FFE6   	movff	btemp,postinc1
 21686  015280  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21687  015286  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 21688  01528C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 21689                           
 21690                           ;stkvar	_cbz @ sp[(-21)+12]
 21691                           ;stkvar	_cb @ sp[(-21)+4]
 21692  015292  0EEF               	movlw	-17
 21693  015294  006F FF8C  F032    	movff	plusw1,btemp+8
 21694  01529A  0EF0               	movlw	-16
 21695  01529C  006F FF8C  F033    	movff	plusw1,btemp+9
 21696  0152A2  0EF1               	movlw	-15
 21697  0152A4  006F FF8C  F034    	movff	plusw1,btemp+10
 21698  0152AA  0EF2               	movlw	-14
 21699  0152AC  006F FF8C  F035    	movff	plusw1,btemp+11
 21700  0152B2  0EF7               	movlw	-9
 21701  0152B4  50E3               	movf	plusw1,w,c
 21702  0152B6  5E32               	subwf	(btemp+8)^0,f,c
 21703  0152B8  0EF8               	movlw	-8
 21704  0152BA  50E3               	movf	plusw1,w,c
 21705  0152BC  5A33               	subwfb	(btemp+9)^0,f,c
 21706  0152BE  0EF9               	movlw	-7
 21707  0152C0  50E3               	movf	plusw1,w,c
 21708  0152C2  5A34               	subwfb	(btemp+10)^0,f,c
 21709  0152C4  0EFA               	movlw	-6
 21710  0152C6  50E3               	movf	plusw1,w,c
 21711  0152C8  5A35               	subwfb	(btemp+11)^0,f,c
 21712  0152CA  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 21713  0152D0  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 21714  0152D6  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 21715  0152DC  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 21716  0152E2  0E00               	movlw	0
 21717  0152E4  6EE6               	movwf	postinc1,c
 21718  0152E6  EC4F  F0ED         	call	___xxtofl	;wreg free
 21719  0152EA  0060  F0AB  FFE6   	movff	btemp,postinc1
 21720  0152F0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21721  0152F6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 21722  0152FC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 21723  015302  0E00               	movlw	0
 21724  015304  6EE6               	movwf	postinc1,c
 21725  015306  0E00               	movlw	0
 21726  015308  6EE6               	movwf	postinc1,c
 21727  01530A  0E20               	movlw	32
 21728  01530C  6EE6               	movwf	postinc1,c
 21729  01530E  0E41               	movlw	65
 21730  015310  6EE6               	movwf	postinc1,c
 21731  015312  ECB8  F0C3         	call	___fldiv	;wreg free
 21732  015316  0060  F0AB  FFE6   	movff	btemp,postinc1
 21733  01531C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21734  015322  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 21735  015328  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 21736  01532E  0EBF               	movlw	low STR_73
 21737  015330  6EE6               	movwf	postinc1,c
 21738  015332  0EFC               	movlw	high STR_73
 21739  015334  6EE6               	movwf	postinc1,c
 21740  015336  0E00               	movlw	0
 21741  015338  6EE6               	movwf	postinc1,c
 21742  01533A  0E01               	movlw	1
 21743  01533C  6EE6               	movwf	postinc1,c
 21744  01533E  EC53  F014         	call	_get_vterm_ptr	;wreg free
 21745  015342  0060  F0AB  FFE6   	movff	btemp,postinc1
 21746  015348  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21747  01534E  0E0C               	movlw	12
 21748  015350  6EE6               	movwf	postinc1,c
 21749  015352  EC5B  F000         	call	_sprintf	;wreg free
 21750                           
 21751                           ; BSR set to: 0
 21752                           ;main.c: 601:   sprintf(get_vterm_ptr(2, 0), "10A Cal Set          ");
 21753  015356  0E6F               	movlw	low STR_74
 21754  015358  6EE6               	movwf	postinc1,c
 21755  01535A  0EFD               	movlw	high STR_74
 21756  01535C  6EE6               	movwf	postinc1,c
 21757  01535E  0E00               	movlw	0
 21758  015360  6EE6               	movwf	postinc1,c
 21759  015362  0E02               	movlw	2
 21760  015364  6EE6               	movwf	postinc1,c
 21761  015366  EC53  F014         	call	_get_vterm_ptr	;wreg free
 21762  01536A  0060  F0AB  FFE6   	movff	btemp,postinc1
 21763  015370  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21764  015376  0E04               	movlw	4
 21765  015378  6EE6               	movwf	postinc1,c
 21766  01537A  EC5B  F000         	call	_sprintf	;wreg free
 21767                           
 21768                           ; BSR set to: 0
 21769                           ;main.c: 602:   update_lcd(0);
 21770  01537E  0E00               	movlw	0
 21771  015380  6EE6               	movwf	postinc1,c
 21772  015382  EC4B  F0F8         	call	_update_lcd	;wreg free
 21773                           
 21774                           ;main.c: 603:   WaitMs(5000);
 21775  015386  0E88               	movlw	136
 21776  015388  6EE6               	movwf	postinc1,c
 21777  01538A  0E13               	movlw	19
 21778  01538C  6EE6               	movwf	postinc1,c
 21779  01538E  EC57  F013         	call	_WaitMs	;wreg free
 21780                           
 21781                           ;main.c: 604:   write_cal_data();
 21782  015392  ECA8  F0F9         	call	_write_cal_data	;wreg free
 21783                           
 21784                           ;main.c: 605:  } else {
 21785  015396  D055               	goto	l1524
 21786  015398                     l17517:
 21787                           
 21788                           ;main.c: 606:   sprintf(get_vterm_ptr(0, 0), "Battery and PV       ");
 21789  015398  0E9B               	movlw	low STR_52
 21790  01539A  6EE6               	movwf	postinc1,c
 21791  01539C  0EFD               	movlw	high STR_52
 21792  01539E  6EE6               	movwf	postinc1,c
 21793  0153A0  0E00               	movlw	0
 21794  0153A2  6EE6               	movwf	postinc1,c
 21795  0153A4  0E00               	movlw	0
 21796  0153A6  6EE6               	movwf	postinc1,c
 21797  0153A8  EC53  F014         	call	_get_vterm_ptr	;wreg free
 21798  0153AC  0060  F0AB  FFE6   	movff	btemp,postinc1
 21799  0153B2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21800  0153B8  0E04               	movlw	4
 21801  0153BA  6EE6               	movwf	postinc1,c
 21802  0153BC  EC5B  F000         	call	_sprintf	;wreg free
 21803                           
 21804                           ;main.c: 607:   sprintf(get_vterm_ptr(1, 0), " %ld %ld             ", get_raw_result(C_B
      +                          ATT), get_raw_result(C_PV));
 21805  0153C0  0E01               	movlw	1
 21806  0153C2  6EE6               	movwf	postinc1,c
 21807  0153C4  EC6B  F016         	call	_get_raw_result	;wreg free
 21808  0153C8  0060  F0AB  FFE6   	movff	btemp,postinc1
 21809  0153CE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21810  0153D4  0E00               	movlw	0
 21811  0153D6  6EE6               	movwf	postinc1,c
 21812  0153D8  EC6B  F016         	call	_get_raw_result	;wreg free
 21813  0153DC  0060  F0AB  FFE6   	movff	btemp,postinc1
 21814  0153E2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21815  0153E8  0ED5               	movlw	low STR_60
 21816  0153EA  6EE6               	movwf	postinc1,c
 21817  0153EC  0EFC               	movlw	high STR_60
 21818  0153EE  6EE6               	movwf	postinc1,c
 21819  0153F0  0E00               	movlw	0
 21820  0153F2  6EE6               	movwf	postinc1,c
 21821  0153F4  0E01               	movlw	1
 21822  0153F6  6EE6               	movwf	postinc1,c
 21823  0153F8  EC53  F014         	call	_get_vterm_ptr	;wreg free
 21824  0153FC  0060  F0AB  FFE6   	movff	btemp,postinc1
 21825  015402  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21826  015408  0E08               	movlw	8
 21827  01540A  6EE6               	movwf	postinc1,c
 21828  01540C  EC5B  F000         	call	_sprintf	;wreg free
 21829                           
 21830                           ;main.c: 608:   sprintf(get_vterm_ptr(2, 0), "10A Out Of Range     ");
 21831  015410  0EF3               	movlw	low STR_77
 21832  015412  6EE6               	movwf	postinc1,c
 21833  015414  0EFD               	movlw	high STR_77
 21834  015416  6EE6               	movwf	postinc1,c
 21835  015418  0E00               	movlw	0
 21836  01541A  6EE6               	movwf	postinc1,c
 21837  01541C  0E02               	movlw	2
 21838  01541E  6EE6               	movwf	postinc1,c
 21839  015420  EC53  F014         	call	_get_vterm_ptr	;wreg free
 21840  015424  0060  F0AB  FFE6   	movff	btemp,postinc1
 21841  01542A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21842  015430  0E04               	movlw	4
 21843  015432  6EE6               	movwf	postinc1,c
 21844  015434  EC5B  F000         	call	_sprintf	;wreg free
 21845                           
 21846                           ;main.c: 609:   update_lcd(0);
 21847  015438  0E00               	movlw	0
 21848  01543A  6EE6               	movwf	postinc1,c
 21849  01543C  EC4B  F0F8         	call	_update_lcd	;wreg free
 21850  015440  D45B               	goto	l17441
 21851  015442                     l1524:
 21852                           
 21853                           ; _current_sensor_cal: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 0, argsize = 0, vargsize = 0
 21854  015442  0EEF               	movlw	239
 21855  015444  26E1               	addwf	fsr1l,f,c
 21856  015446  0EFF               	movlw	255
 21857  015448  22E2               	addwfc	fsr1h,f,c
 21858  01544A  0012               	return		;funcret
 21859  01544C                     __end_of_current_sensor_cal:
 21860                           	opt callstack 0
 21861                           
 21862 ;; *************** function _write_cal_data *****************
 21863 ;; Defined at:
 21864 ;;		line 408 in file "daq.c"
 21865 ;; Parameters:    Size  Location     Type
 21866 ;;		None
 21867 ;; Auto vars:     Size  Location     Type
 21868 ;;  x               2  [STACK] unsigned short 
 21869 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
 21870 ;;		 -> R(155), 
 21871 ;;  y               2  [STACK] unsigned short 
 21872 ;;  crcVal          1  [STACK] unsigned char 
 21873 ;; Return value:  Size  Location     Type
 21874 ;;                  1  [STACK] void 
 21875 ;; Registers used:
 21876 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
 21877 ;; Tracked objects:
 21878 ;;		On entry : 0/39
 21879 ;;		On exit  : 0/0
 21880 ;;		Unchanged: 0/0
 21881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21886 ;;Total ram usage:        0 bytes
 21887 ;; Hardware stack levels used:    1
 21888 ;; Hardware stack levels required when called:   17
 21889 ;; This function calls:
 21890 ;;		_CRC_8BitDataWrite
 21891 ;;		_CRC_CalculatedResultGet
 21892 ;;		_CRC_Initialize
 21893 ;;		_CRC_IsBusy
 21894 ;;		_CRC_Start
 21895 ;;		_DATAEE_WriteByte
 21896 ;; This function is called by:
 21897 ;;		_main
 21898 ;;		_current_sensor_cal
 21899 ;; This function uses a reentrant model
 21900 ;;
 21901                           
 21902                           	psect	text58
 21903  01F350                     __ptext58:
 21904                           	opt callstack 0
 21905  01F350                     _write_cal_data:
 21906                           	opt callstack 0
 21907                           
 21908                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21909  01F350  0E07               	movlw	7
 21910  01F352  26E1               	addwf	fsr1l,f,c
 21911  01F354  0E00               	movlw	0
 21912  01F356  22E2               	addwfc	fsr1h,f,c
 21913                           
 21914                           ;daq.c: 410:  uint16_t x = 0, y;
 21915                           ;stkvar	_x @ sp[(-7)+0]
 21916                           
 21917                           ;incstack = 0
 21918  01F358  0EF9               	movlw	-7
 21919  01F35A  6AE3               	clrf	plusw1,c
 21920  01F35C  0EFA               	movlw	-6
 21921  01F35E  6AE3               	clrf	plusw1,c
 21922                           
 21923                           ;daq.c: 411:  uint8_t *r_cal_ptr, crcVal;;daq.c: 413:  y = sizeof(R);
 21924  01F360  0E9B               	movlw	155
 21925  01F362  6E34               	movwf	(btemp+10)^0,c
 21926  01F364  0E00               	movlw	0
 21927  01F366  6E35               	movwf	(btemp+11)^0,c
 21928                           
 21929                           ;stkvar	_y @ sp[(-7)+4]
 21930  01F368  0EFD               	movlw	-3
 21931  01F36A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 21932  01F370  0EFE               	movlw	-2
 21933  01F372  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 21934                           
 21935                           ;daq.c: 414:  R.crc = 0x42;
 21936  01F378  0E42               	movlw	66
 21937  01F37A  0101               	movlb	1	; () banked
 21938  01F37C  6F9A               	movwf	(_R+154)& (0+255),b	;volatile
 21939                           
 21940                           ; BSR set to: 1
 21941                           ;daq.c: 415:  r_cal_ptr = (uint8_t*) & R;
 21942                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 21943  01F37E  0E01               	movlw	high _R
 21944  01F380  6E2A               	movwf	btemp^0,c
 21945  01F382  0EFC               	movlw	-4
 21946  01F384  0060  F0AB  FFE3   	movff	btemp,plusw1
 21947  01F38A  0E00               	movlw	low _R
 21948  01F38C  6E2A               	movwf	btemp^0,c
 21949  01F38E  0EFB               	movlw	-5
 21950  01F390  0060  F0AB  FFE3   	movff	btemp,plusw1
 21951                           
 21952                           ; BSR set to: 1
 21953                           ;daq.c: 416:  R.checkmark = 0x1957;
 21954  01F396  0E19               	movlw	25
 21955  01F398  6F99               	movwf	(_R+153)& (0+255),b	;volatile
 21956  01F39A  0E57               	movlw	87
 21957  01F39C  6F98               	movwf	(_R+152)& (0+255),b	;volatile
 21958                           
 21959                           ; BSR set to: 1
 21960                           ;daq.c: 418:  CRC_Initialize();
 21961  01F39E  EC73  F00A         	call	_CRC_Initialize	;wreg free
 21962                           
 21963                           ; BSR set to: 0
 21964                           ;daq.c: 421:  CRC_Start();
 21965  01F3A2  ECF4  F017         	call	_CRC_Start	;wreg free
 21966  01F3A6                     l13593:
 21967                           
 21968                           ;daq.c: 424:   DATAEE_WriteByte(x, r_cal_ptr[x]);
 21969                           ;stkvar	_x @ sp[(-7)+0]
 21970  01F3A6  0EF9               	movlw	-7
 21971  01F3A8  006F FF8C  F034    	movff	plusw1,btemp+10
 21972  01F3AE  0EFA               	movlw	-6
 21973  01F3B0  006F FF8C  F035    	movff	plusw1,btemp+11
 21974                           
 21975                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 21976  01F3B6  0EFB               	movlw	-5
 21977  01F3B8  006F FF8C  F032    	movff	plusw1,btemp+8
 21978  01F3BE  0EFC               	movlw	-4
 21979  01F3C0  006F FF8C  F033    	movff	plusw1,btemp+9
 21980  01F3C6  5034               	movf	(btemp+10)^0,w,c
 21981  01F3C8  2432               	addwf	(btemp+8)^0,w,c
 21982  01F3CA  6ED9               	movwf	fsr2l,c
 21983  01F3CC  5035               	movf	(btemp+11)^0,w,c
 21984  01F3CE  2033               	addwfc	(btemp+9)^0,w,c
 21985  01F3D0  6EDA               	movwf	fsr2h,c
 21986  01F3D2  50DF               	movf	indf2,w,c
 21987  01F3D4  6EE6               	movwf	postinc1,c
 21988                           
 21989                           ;stkvar	_x @ sp[(-8)+0]
 21990  01F3D6  0EF8               	movlw	-8
 21991  01F3D8  006F FF8F FFE6     	movff	plusw1,postinc1
 21992  01F3DE  006F FF8F FFE6     	movff	plusw1,postinc1
 21993  01F3E4  EC95  F00D         	call	_DATAEE_WriteByte	;wreg free
 21994                           
 21995                           ;daq.c: 425:   CRC_8BitDataWrite(r_cal_ptr[x]);
 21996                           ;stkvar	_x @ sp[(-7)+0]
 21997  01F3E8  0EF9               	movlw	-7
 21998  01F3EA  006F FF8C  F034    	movff	plusw1,btemp+10
 21999  01F3F0  0EFA               	movlw	-6
 22000  01F3F2  006F FF8C  F035    	movff	plusw1,btemp+11
 22001                           
 22002                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 22003  01F3F8  0EFB               	movlw	-5
 22004  01F3FA  006F FF8C  F032    	movff	plusw1,btemp+8
 22005  01F400  0EFC               	movlw	-4
 22006  01F402  006F FF8C  F033    	movff	plusw1,btemp+9
 22007  01F408  5034               	movf	(btemp+10)^0,w,c
 22008  01F40A  2432               	addwf	(btemp+8)^0,w,c
 22009  01F40C  6ED9               	movwf	fsr2l,c
 22010  01F40E  5035               	movf	(btemp+11)^0,w,c
 22011  01F410  2033               	addwfc	(btemp+9)^0,w,c
 22012  01F412  6EDA               	movwf	fsr2h,c
 22013  01F414  50DF               	movf	indf2,w,c
 22014  01F416  6EE6               	movwf	postinc1,c
 22015  01F418  EC63  F017         	call	_CRC_8BitDataWrite	;wreg free
 22016  01F41C                     l13597:
 22017  01F41C  EC85  F017         	call	_CRC_IsBusy	;wreg free
 22018  01F420  502A               	movf	btemp^0,w,c
 22019  01F422  A4D8               	btfss	status,2,c
 22020  01F424  D7FB               	goto	l13597
 22021                           
 22022                           ;daq.c: 427:  } while (++x < y);
 22023                           ;stkvar	_y @ sp[(-7)+4]
 22024  01F426  0EFD               	movlw	-3
 22025  01F428  006F FF8C  F034    	movff	plusw1,btemp+10
 22026  01F42E  0EFE               	movlw	-2
 22027  01F430  006F FF8C  F035    	movff	plusw1,btemp+11
 22028                           
 22029                           ;stkvar	_x @ sp[(-7)+0]
 22030  01F436  0EF9               	movlw	-7
 22031  01F438  50E3               	movf	plusw1,w,c
 22032  01F43A  0F01               	addlw	1
 22033  01F43C  6E2A               	movwf	btemp^0,c
 22034  01F43E  0EF9               	movlw	-7
 22035  01F440  0060  F0AB  FFE3   	movff	btemp,plusw1
 22036  01F446  6A2A               	clrf	btemp^0,c
 22037  01F448  0EFA               	movlw	-6
 22038  01F44A  50E3               	movf	plusw1,w,c
 22039  01F44C  202A               	addwfc	btemp^0,w,c
 22040  01F44E  6E2A               	movwf	btemp^0,c
 22041  01F450  0EFA               	movlw	-6
 22042  01F452  0060  F0AB  FFE3   	movff	btemp,plusw1
 22043  01F458  0EF9               	movlw	-7
 22044  01F45A  006F FF8C  F032    	movff	plusw1,btemp+8
 22045  01F460  0EFA               	movlw	-6
 22046  01F462  006F FF8C  F033    	movff	plusw1,btemp+9
 22047  01F468  5034               	movf	(btemp+10)^0,w,c
 22048  01F46A  5C32               	subwf	(btemp+8)^0,w,c
 22049  01F46C  5035               	movf	(btemp+11)^0,w,c
 22050  01F46E  5833               	subwfb	(btemp+9)^0,w,c
 22051  01F470  A0D8               	btfss	status,0,c
 22052  01F472  D799               	goto	l13593
 22053                           
 22054                           ;daq.c: 429:  crcVal = CRC_CalculatedResultGet(0, 0x00);
 22055  01F474  0E00               	movlw	0
 22056  01F476  6EE6               	movwf	postinc1,c
 22057  01F478  0E00               	movlw	0
 22058  01F47A  6EE6               	movwf	postinc1,c
 22059  01F47C  0E00               	movlw	0
 22060  01F47E  6EE6               	movwf	postinc1,c
 22061  01F480  ECC4  F0F4         	call	_CRC_CalculatedResultGet	;wreg free
 22062                           
 22063                           ;stkvar	_crcVal @ sp[(-7)+6]
 22064  01F484  0EFF               	movlw	-1
 22065  01F486  0060  F0AB  FFE3   	movff	btemp,plusw1
 22066                           
 22067                           ;daq.c: 431:  DATAEE_WriteByte(sizeof(R) - 1, crcVal);
 22068                           ;stkvar	_crcVal @ sp[(-7)+6]
 22069  01F48C  0EFF               	movlw	-1
 22070  01F48E  50E3               	movf	plusw1,w,c
 22071  01F490  6EE6               	movwf	postinc1,c
 22072  01F492  0E9A               	movlw	154
 22073  01F494  6EE6               	movwf	postinc1,c
 22074  01F496  0E00               	movlw	0
 22075  01F498  6EE6               	movwf	postinc1,c
 22076  01F49A  EC95  F00D         	call	_DATAEE_WriteByte	;wreg free
 22077                           
 22078                           ; _write_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22079  01F49E  0EF9               	movlw	249
 22080  01F4A0  26E1               	addwf	fsr1l,f,c
 22081  01F4A2  0EFF               	movlw	255
 22082  01F4A4  22E2               	addwfc	fsr1h,f,c
 22083  01F4A6  0012               	return		;funcret
 22084  01F4A8                     __end_of_write_cal_data:
 22085                           	opt callstack 0
 22086                           
 22087 ;; *************** function _DATAEE_WriteByte *****************
 22088 ;; Defined at:
 22089 ;;		line 172 in file "mcc_generated_files/memory.c"
 22090 ;; Parameters:    Size  Location     Type
 22091 ;;  bAdd            2  [STACK] unsigned short 
 22092 ;;  bData           1  [STACK] unsigned char 
 22093 ;; Auto vars:     Size  Location     Type
 22094 ;;  GIEBitValue     1  [STACK] unsigned char 
 22095 ;; Return value:  Size  Location     Type
 22096 ;;                  1  [STACK] void 
 22097 ;; Registers used:
 22098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 22099 ;; Tracked objects:
 22100 ;;		On entry : 0/39
 22101 ;;		On exit  : 0/0
 22102 ;;		Unchanged: 0/0
 22103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22108 ;;Total ram usage:        0 bytes
 22109 ;; Hardware stack levels used:    1
 22110 ;; Hardware stack levels required when called:   15
 22111 ;; This function calls:
 22112 ;;		Nothing
 22113 ;; This function is called by:
 22114 ;;		_write_cal_data
 22115 ;; This function uses a reentrant model
 22116 ;;
 22117                           
 22118                           	psect	text59
 22119  001B2A                     __ptext59:
 22120                           	opt callstack 0
 22121  001B2A                     _DATAEE_WriteByte:
 22122                           	opt callstack 0
 22123                           
 22124                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22125  001B2A  52E6               	movf	postinc1,f,c
 22126                           
 22127                           ;mcc_generated_files/memory.c: 172: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 173: {;mcc_generated_files/memory.c: 174:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 22128                           
 22129                           ;incstack = 0
 22130  001B2C  AED2               	btfss	210,7,c	;volatile
 22131  001B2E  D003               	goto	u12160
 22132  001B30  6A35               	clrf	(btemp+11)^0,c
 22133  001B32  2A35               	incf	(btemp+11)^0,f,c
 22134  001B34  D001               	goto	u12168
 22135  001B36                     u12160:
 22136  001B36  6A35               	clrf	(btemp+11)^0,c
 22137  001B38                     u12168:
 22138                           
 22139                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 22140  001B38  0EFF               	movlw	-1
 22141  001B3A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 22142                           
 22143                           ;mcc_generated_files/memory.c: 176:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 22144                           ;stkvar	_bAdd @ sp[(-1)+-2]
 22145  001B40  0EFE               	movlw	254
 22146  001B42  24E1               	addwf	fsr1l,w,c
 22147  001B44  6ED9               	movwf	fsr2l,c
 22148  001B46  0EFF               	movlw	255
 22149  001B48  20E2               	addwfc	fsr1h,w,c
 22150  001B4A  6EDA               	movwf	fsr2h,c
 22151  001B4C  50DF               	movf	indf2,w,c
 22152  001B4E  0B03               	andlw	3
 22153  001B50  0139               	movlb	57	; () banked
 22154  001B52  6FE1               	movwf	225,b	;volatile
 22155                           
 22156                           ; BSR set to: 57
 22157                           ;mcc_generated_files/memory.c: 177:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 22158                           ;stkvar	_bAdd @ sp[(-1)+-2]
 22159  001B54  0EFD               	movlw	-3
 22160  001B56  006F FF8F F9E0     	movff	plusw1,14816	;volatile
 22161                           
 22162                           ; BSR set to: 57
 22163                           ;mcc_generated_files/memory.c: 178:     NVMDAT = bData;
 22164                           ;stkvar	_bData @ sp[(-1)+-3]
 22165  001B5C  0EFC               	movlw	-4
 22166  001B5E  006F FF8F F9E3     	movff	plusw1,14819	;volatile
 22167                           
 22168                           ; BSR set to: 57
 22169                           ;mcc_generated_files/memory.c: 179:     NVMCON1bits.NVMREG = 0;
 22170  001B64  0E3F               	movlw	-193
 22171  001B66  17E5               	andwf	229,f,b	;volsfr
 22172                           
 22173                           ; BSR set to: 57
 22174                           ;mcc_generated_files/memory.c: 180:     NVMCON1bits.WREN = 1;
 22175  001B68  85E5               	bsf	229,2,b	;volsfr
 22176                           
 22177                           ; BSR set to: 57
 22178                           ;mcc_generated_files/memory.c: 181:     INTCON0bits.GIE = 0;
 22179  001B6A  9ED2               	bcf	210,7,c	;volatile
 22180                           
 22181                           ; BSR set to: 57
 22182                           ;mcc_generated_files/memory.c: 182:     NVMCON2 = 0x55;
 22183  001B6C  0E55               	movlw	85
 22184  001B6E  6FE6               	movwf	230,b	;volsfr
 22185                           
 22186                           ; BSR set to: 57
 22187                           ;mcc_generated_files/memory.c: 183:     NVMCON2 = 0xAA;
 22188  001B70  0EAA               	movlw	170
 22189  001B72  6FE6               	movwf	230,b	;volsfr
 22190                           
 22191                           ; BSR set to: 57
 22192                           ;mcc_generated_files/memory.c: 184:     NVMCON1bits.WR = 1;
 22193  001B74  83E5               	bsf	229,1,b	;volsfr
 22194  001B76                     l942:
 22195                           
 22196                           ; BSR set to: 57
 22197                           ;mcc_generated_files/memory.c: 186:     while (NVMCON1bits.WR)
 22198  001B76  B3E5               	btfsc	229,1,b	;volsfr
 22199  001B78  D7FE               	goto	l942
 22200                           
 22201                           ; BSR set to: 57
 22202                           ;mcc_generated_files/memory.c: 190:     NVMCON1bits.WREN = 0;
 22203  001B7A  95E5               	bcf	229,2,b	;volsfr
 22204                           
 22205                           ; BSR set to: 57
 22206                           ;mcc_generated_files/memory.c: 191:     INTCON0bits.GIE = GIEBitValue;
 22207                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 22208  001B7C  0EFF               	movlw	-1
 22209  001B7E  B0E3               	btfsc	plusw1,0,c
 22210  001B80  D002               	bra	u12185
 22211  001B82  9ED2               	bcf	210,7,c	;volatile
 22212  001B84  D001               	bra	u12186
 22213  001B86                     u12185:
 22214  001B86  8ED2               	bsf	210,7,c	;volatile
 22215  001B88                     u12186:
 22216                           
 22217                           ; _DATAEE_WriteByte: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 22218  001B88  52E5               	movf	postdec1,f,c
 22219  001B8A  52E5               	movf	postdec1,f,c
 22220  001B8C  52E5               	movf	postdec1,f,c
 22221  001B8E  52E5               	movf	postdec1,f,c
 22222  001B90  0012               	return		;funcret
 22223  001B92                     __end_of_DATAEE_WriteByte:
 22224                           	opt callstack 0
 22225                           
 22226 ;; *************** function _CRC_Start *****************
 22227 ;; Defined at:
 22228 ;;		line 119 in file "mcc_generated_files/crc.c"
 22229 ;; Parameters:    Size  Location     Type
 22230 ;;		None
 22231 ;; Auto vars:     Size  Location     Type
 22232 ;;		None
 22233 ;; Return value:  Size  Location     Type
 22234 ;;                  1  [STACK] void 
 22235 ;; Registers used:
 22236 ;;		None
 22237 ;; Tracked objects:
 22238 ;;		On entry : 3F/0
 22239 ;;		On exit  : 3F/39
 22240 ;;		Unchanged: 0/0
 22241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22246 ;;Total ram usage:        0 bytes
 22247 ;; Hardware stack levels used:    1
 22248 ;; Hardware stack levels required when called:   15
 22249 ;; This function calls:
 22250 ;;		Nothing
 22251 ;; This function is called by:
 22252 ;;		_read_cal_data
 22253 ;;		_write_cal_data
 22254 ;; This function uses a reentrant model
 22255 ;;
 22256                           
 22257                           	psect	text60
 22258  002FE8                     __ptext60:
 22259                           	opt callstack 0
 22260  002FE8                     _CRC_Start:
 22261                           	opt callstack 14
 22262                           
 22263                           ;mcc_generated_files/crc.c: 122:     CRCCON0bits.CRCGO = 1;
 22264                           
 22265                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22266                           ;incstack = 0
 22267  002FE8  0139               	movlb	57	; () banked
 22268  002FEA  8D68               	bsf	104,6,b	;volatile
 22269                           
 22270                           ; BSR set to: 57
 22271                           ; _CRC_Start: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 22272  002FEC  0012               	return		;funcret
 22273  002FEE                     __end_of_CRC_Start:
 22274                           	opt callstack 0
 22275                           
 22276 ;; *************** function _CRC_IsBusy *****************
 22277 ;; Defined at:
 22278 ;;		line 201 in file "mcc_generated_files/crc.c"
 22279 ;; Parameters:    Size  Location     Type
 22280 ;;		None
 22281 ;; Auto vars:     Size  Location     Type
 22282 ;;		None
 22283 ;; Return value:  Size  Location     Type
 22284 ;;                  1  [STACK] _Bool 
 22285 ;; Registers used:
 22286 ;;		btemp
 22287 ;; Tracked objects:
 22288 ;;		On entry : 0/39
 22289 ;;		On exit  : 0/0
 22290 ;;		Unchanged: 0/0
 22291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22296 ;;Total ram usage:        0 bytes
 22297 ;; Hardware stack levels used:    1
 22298 ;; Hardware stack levels required when called:   15
 22299 ;; This function calls:
 22300 ;;		Nothing
 22301 ;; This function is called by:
 22302 ;;		_read_cal_data
 22303 ;;		_write_cal_data
 22304 ;; This function uses a reentrant model
 22305 ;;
 22306                           
 22307                           	psect	text61
 22308  002F0A                     __ptext61:
 22309                           	opt callstack 0
 22310  002F0A                     _CRC_IsBusy:
 22311                           	opt callstack 14
 22312                           
 22313                           ;mcc_generated_files/crc.c: 204:     return(CRCCON0bits.BUSY);
 22314                           
 22315                           ; BSR set to: 57
 22316                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22317                           ;incstack = 0
 22318  002F0A  0139               	movlb	57	; () banked
 22319  002F0C  AB68               	btfss	104,5,b	;volatile
 22320  002F0E  D003               	goto	u12390
 22321  002F10  6A2A               	clrf	btemp^0,c
 22322  002F12  2A2A               	incf	btemp^0,f,c
 22323  002F14  0012               	return	
 22324  002F16                     u12390:
 22325  002F16  6A2A               	clrf	btemp^0,c
 22326                           
 22327                           ; _CRC_IsBusy: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 22328  002F18  0012               	return		;funcret
 22329  002F1A                     __end_of_CRC_IsBusy:
 22330                           	opt callstack 0
 22331                           
 22332 ;; *************** function _CRC_CalculatedResultGet *****************
 22333 ;; Defined at:
 22334 ;;		line 159 in file "mcc_generated_files/crc.c"
 22335 ;; Parameters:    Size  Location     Type
 22336 ;;  reverse         1  [STACK] _Bool 
 22337 ;;  xorValue        2  [STACK] unsigned short 
 22338 ;; Auto vars:     Size  Location     Type
 22339 ;;  result          2  [STACK] unsigned short 
 22340 ;;  mask            2  [STACK] unsigned short 
 22341 ;; Return value:  Size  Location     Type
 22342 ;;                  2  [STACK] unsigned short 
 22343 ;; Registers used:
 22344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+9, btemp+10, btemp+11,
      + prodl
 22345 ;; Tracked objects:
 22346 ;;		On entry : 0/39
 22347 ;;		On exit  : 0/0
 22348 ;;		Unchanged: 0/0
 22349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22354 ;;Total ram usage:        0 bytes
 22355 ;; Hardware stack levels used:    1
 22356 ;; Hardware stack levels required when called:   16
 22357 ;; This function calls:
 22358 ;;		_CRC_ReverseValue
 22359 ;; This function is called by:
 22360 ;;		_read_cal_data
 22361 ;;		_write_cal_data
 22362 ;; This function uses a reentrant model
 22363 ;;
 22364                           
 22365                           	psect	text62
 22366  01E988                     __ptext62:
 22367                           	opt callstack 0
 22368  01E988                     _CRC_CalculatedResultGet:
 22369                           	opt callstack 0
 22370                           
 22371                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22372  01E988  52E6               	movf	postinc1,f,c
 22373  01E98A  52E6               	movf	postinc1,f,c
 22374  01E98C  52E6               	movf	postinc1,f,c
 22375  01E98E  52E6               	movf	postinc1,f,c
 22376                           
 22377                           ;mcc_generated_files/crc.c: 159: uint16_t CRC_CalculatedResultGet(_Bool reverse, uint16_
      +                          t xorValue);mcc_generated_files/crc.c: 160: {;mcc_generated_files/crc.c: 161:     uint16
      +                          _t result,mask;;mcc_generated_files/crc.c: 164:      CRCCON0bits.CRCGO = 0;
 22378                           
 22379                           ;incstack = 0
 22380  01E990  0139               	movlb	57	; () banked
 22381  01E992  9D68               	bcf	104,6,b	;volatile
 22382                           
 22383                           ;mcc_generated_files/crc.c: 165:      PIR0bits.CRCIF = 0;
 22384  01E994  9DA0               	bcf	160,6,b	;volatile
 22385                           
 22386                           ; BSR set to: 57
 22387                           ;mcc_generated_files/crc.c: 166:      CRCCON1bits.DLEN= CRCCON1bits.PLEN;
 22388  01E996  5169               	movf	105,w,b	;volatile
 22389  01E998  0B0F               	andlw	15
 22390  01E99A  6E35               	movwf	(btemp+11)^0,c
 22391  01E99C  3A35               	swapf	(btemp+11)^0,f,c
 22392  01E99E  5169               	movf	105,w,b	;volatile
 22393  01E9A0  1835               	xorwf	(btemp+11)^0,w,c
 22394  01E9A2  0B0F               	andlw	-241
 22395  01E9A4  1835               	xorwf	(btemp+11)^0,w,c
 22396  01E9A6  6F69               	movwf	105,b	;volatile
 22397                           
 22398                           ; BSR set to: 57
 22399                           ;mcc_generated_files/crc.c: 168:      if(crcObj.polyWidth > 8)
 22400  01E9A8  0E08               	movlw	8
 22401  01E9AA  0100               	movlb	0	; () banked
 22402  01E9AC  65E3               	cpfsgt	(_crcObj+1)& (0+255),b
 22403  01E9AE  D003               	goto	l1282
 22404                           
 22405                           ; BSR set to: 0
 22406                           ;mcc_generated_files/crc.c: 169:      {;mcc_generated_files/crc.c: 170:          CRCDATH
      +                           = 0;
 22407  01E9B0  0139               	movlb	57	; () banked
 22408  01E9B2  6B61               	clrf	97,b	;volatile
 22409  01E9B4  D001               	goto	L19
 22410  01E9B6                     l1282:
 22411                           
 22412                           ; BSR set to: 0
 22413                           ;mcc_generated_files/crc.c: 174:      {;mcc_generated_files/crc.c: 175:          CRCDATL
      +                           = 0;
 22414  01E9B6  0139               	movlb	57	; () banked
 22415  01E9B8                     L19:
 22416  01E9B8  6B60               	clrf	96,b	;volatile
 22417                           
 22418                           ; BSR set to: 57
 22419                           ;mcc_generated_files/crc.c: 178:      CRCCON0bits.CRCGO = 1;
 22420                           
 22421                           ;mcc_generated_files/crc.c: 176:      }
 22422  01E9BA  8D68               	bsf	104,6,b	;volatile
 22423  01E9BC                     l1284:
 22424                           
 22425                           ; BSR set to: 57
 22426  01E9BC  ADA0               	btfss	160,6,b	;volatile
 22427  01E9BE  D7FE               	goto	l1284
 22428                           
 22429                           ; BSR set to: 57
 22430                           ;mcc_generated_files/crc.c: 180:      PIR0bits.CRCIF = 0;
 22431  01E9C0  9DA0               	bcf	160,6,b	;volatile
 22432                           
 22433                           ;mcc_generated_files/crc.c: 182:      CRCCON0bits.CRCGO = 0;
 22434  01E9C2  9D68               	bcf	104,6,b	;volatile
 22435                           
 22436                           ; BSR set to: 57
 22437                           ;mcc_generated_files/crc.c: 183:      CRCCON1bits.DLEN = (uint8_t)(crcObj.dataWidth - 1)
      +                          ;
 22438  01E9C4  0060  F388  F035   	movff	_crcObj,btemp+11
 22439  01E9CA  0EFF               	movlw	255
 22440  01E9CC  2635               	addwf	(btemp+11)^0,f,c
 22441  01E9CE  3A35               	swapf	(btemp+11)^0,f,c
 22442  01E9D0  5169               	movf	105,w,b	;volatile
 22443  01E9D2  1835               	xorwf	(btemp+11)^0,w,c
 22444  01E9D4  0B0F               	andlw	-241
 22445  01E9D6  1835               	xorwf	(btemp+11)^0,w,c
 22446  01E9D8  6F69               	movwf	105,b	;volatile
 22447                           
 22448                           ; BSR set to: 57
 22449                           ;mcc_generated_files/crc.c: 185:      result = ((uint16_t)CRCACCH << 8)|CRCACCL;
 22450  01E9DA  5162               	movf	98,w,b	;volatile
 22451  01E9DC  006E F58C  F02A    	movff	14691,btemp	;volatile
 22452  01E9E2  6A2B               	clrf	(btemp+1)^0,c
 22453  01E9E4  0060  F0A8  F02B   	movff	btemp,btemp+1
 22454  01E9EA  6A2A               	clrf	btemp^0,c
 22455  01E9EC  122A               	iorwf	btemp^0,f,c
 22456  01E9EE  0E00               	movlw	0
 22457  01E9F0  122B               	iorwf	(btemp+1)^0,f,c
 22458                           
 22459                           ;stkvar	_result @ sp[(-4)+0]
 22460  01E9F2  0EFC               	movlw	-4
 22461  01E9F4  0060  F0AB  FFE3   	movff	btemp,plusw1
 22462  01E9FA  0EFD               	movlw	-3
 22463  01E9FC  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 22464                           
 22465                           ; BSR set to: 57
 22466                           ;mcc_generated_files/crc.c: 186:      if(crcObj.polyWidth < 16)
 22467  01EA02  0E10               	movlw	16
 22468  01EA04  0100               	movlb	0	; () banked
 22469  01EA06  61E3               	cpfslt	(_crcObj+1)& (0+255),b
 22470  01EA08  D03A               	goto	l12879
 22471                           
 22472                           ; BSR set to: 0
 22473                           ;mcc_generated_files/crc.c: 187:      {;mcc_generated_files/crc.c: 189:         mask = (
      +                          uint16_t)((1 << crcObj.polyWidth) - 1);
 22474  01EA0A  0EFF               	movlw	255
 22475  01EA0C  6E34               	movwf	(btemp+10)^0,c
 22476  01EA0E  0EFF               	movlw	255
 22477  01EA10  6E35               	movwf	(btemp+11)^0,c
 22478  01EA12  0060  F38C  F033   	movff	_crcObj+1,btemp+9
 22479  01EA18  0E01               	movlw	1
 22480  01EA1A  6E30               	movwf	(btemp+6)^0,c
 22481  01EA1C  0E00               	movlw	0
 22482  01EA1E  6E31               	movwf	(btemp+7)^0,c
 22483  01EA20  2A33               	incf	(btemp+9)^0,f,c
 22484  01EA22  D003               	goto	u12374
 22485  01EA24                     u12375:
 22486  01EA24  90D8               	bcf	status,0,c
 22487  01EA26  3630               	rlcf	(btemp+6)^0,f,c
 22488  01EA28  3631               	rlcf	(btemp+7)^0,f,c
 22489  01EA2A                     u12374:
 22490  01EA2A  2E33               	decfsz	(btemp+9)^0,f,c
 22491  01EA2C  D7FB               	goto	u12375
 22492  01EA2E  5034               	movf	(btemp+10)^0,w,c
 22493  01EA30  2630               	addwf	(btemp+6)^0,f,c
 22494  01EA32  5035               	movf	(btemp+11)^0,w,c
 22495  01EA34  2231               	addwfc	(btemp+7)^0,f,c
 22496                           
 22497                           ;stkvar	_mask @ sp[(-4)+2]
 22498  01EA36  0EFE               	movlw	-2
 22499  01EA38  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 22500  01EA3E  0EFF               	movlw	-1
 22501  01EA40  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 22502                           
 22503                           ;mcc_generated_files/crc.c: 190:         result &= mask;
 22504                           ;stkvar	_mask @ sp[(-4)+2]
 22505  01EA46  0EFE               	movlw	-2
 22506  01EA48  006F FF8C  F034    	movff	plusw1,btemp+10
 22507  01EA4E  0EFF               	movlw	-1
 22508  01EA50  006F FF8C  F035    	movff	plusw1,btemp+11
 22509                           
 22510                           ;stkvar	_result @ sp[(-4)+0]
 22511  01EA56  0EFC               	movlw	-4
 22512  01EA58  006F FF8C  F02A    	movff	plusw1,btemp
 22513  01EA5E  5034               	movf	(btemp+10)^0,w,c
 22514  01EA60  162A               	andwf	btemp^0,f,c
 22515  01EA62  0EFC               	movlw	-4
 22516  01EA64  0060  F0AB  FFE3   	movff	btemp,plusw1
 22517  01EA6A  0EFD               	movlw	-3
 22518  01EA6C  006F FF8C  F02A    	movff	plusw1,btemp
 22519  01EA72  5035               	movf	(btemp+11)^0,w,c
 22520  01EA74  162A               	andwf	btemp^0,f,c
 22521  01EA76  0EFD               	movlw	-3
 22522  01EA78  0060  F0AB  FFE3   	movff	btemp,plusw1
 22523  01EA7E                     l12879:
 22524                           
 22525                           ;mcc_generated_files/crc.c: 193:     if(reverse)
 22526                           ;stkvar	_reverse @ sp[(-4)+-1]
 22527  01EA7E  0EFB               	movlw	-5
 22528  01EA80  50E3               	movf	plusw1,w,c
 22529  01EA82  B4D8               	btfsc	status,2,c
 22530  01EA84  D011               	goto	l12883
 22531                           
 22532                           ;mcc_generated_files/crc.c: 194:         result = CRC_ReverseValue(result);
 22533                           ;stkvar	_result @ sp[(-4)+0]
 22534  01EA86  0EFC               	movlw	-4
 22535  01EA88  006F FF8F FFE6     	movff	plusw1,postinc1
 22536  01EA8E  006F FF8F FFE6     	movff	plusw1,postinc1
 22537  01EA94  EC99  F0FF         	call	_CRC_ReverseValue	;wreg free
 22538                           
 22539                           ;stkvar	_result @ sp[(-4)+0]
 22540  01EA98  0EFC               	movlw	-4
 22541  01EA9A  0060  F0AB  FFE3   	movff	btemp,plusw1
 22542  01EAA0  0EFD               	movlw	-3
 22543  01EAA2  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 22544  01EAA8                     l12883:
 22545                           
 22546                           ;mcc_generated_files/crc.c: 196:     result ^= xorValue;
 22547                           ;stkvar	_xorValue @ sp[(-4)+-3]
 22548  01EAA8  0EF9               	movlw	-7
 22549  01EAAA  006F FF8C  F034    	movff	plusw1,btemp+10
 22550  01EAB0  0EFA               	movlw	-6
 22551  01EAB2  006F FF8C  F035    	movff	plusw1,btemp+11
 22552                           
 22553                           ;stkvar	_result @ sp[(-4)+0]
 22554  01EAB8  0EFC               	movlw	-4
 22555  01EABA  006F FF8C  F02A    	movff	plusw1,btemp
 22556  01EAC0  5034               	movf	(btemp+10)^0,w,c
 22557  01EAC2  1A2A               	xorwf	btemp^0,f,c
 22558  01EAC4  0EFC               	movlw	-4
 22559  01EAC6  0060  F0AB  FFE3   	movff	btemp,plusw1
 22560  01EACC  0EFD               	movlw	-3
 22561  01EACE  006F FF8C  F02A    	movff	plusw1,btemp
 22562  01EAD4  5035               	movf	(btemp+11)^0,w,c
 22563  01EAD6  1A2A               	xorwf	btemp^0,f,c
 22564  01EAD8  0EFD               	movlw	-3
 22565  01EADA  0060  F0AB  FFE3   	movff	btemp,plusw1
 22566                           
 22567                           ;mcc_generated_files/crc.c: 198:     return result;
 22568                           ;stkvar	_result @ sp[(-4)+0]
 22569  01EAE0  0EFC               	movlw	-4
 22570  01EAE2  006F FF8C  F02A    	movff	plusw1,btemp
 22571  01EAE8  0EFD               	movlw	-3
 22572  01EAEA  006F FF8C  F02B    	movff	plusw1,btemp+1
 22573                           
 22574                           ; _CRC_CalculatedResultGet: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
 22575  01EAF0  0EF9               	movlw	249
 22576  01EAF2  26E1               	addwf	fsr1l,f,c
 22577  01EAF4  0EFF               	movlw	255
 22578  01EAF6  22E2               	addwfc	fsr1h,f,c
 22579  01EAF8  0012               	return		;funcret
 22580  01EAFA                     __end_of_CRC_CalculatedResultGet:
 22581                           	opt callstack 0
 22582                           
 22583 ;; *************** function _CRC_ReverseValue *****************
 22584 ;; Defined at:
 22585 ;;		line 138 in file "mcc_generated_files/crc.c"
 22586 ;; Parameters:    Size  Location     Type
 22587 ;;  crc             2  [STACK] unsigned short 
 22588 ;; Auto vars:     Size  Location     Type
 22589 ;;  mask            2  [STACK] unsigned short 
 22590 ;;  reverse         2  [STACK] unsigned short 
 22591 ;; Return value:  Size  Location     Type
 22592 ;;                  2  [STACK] unsigned short 
 22593 ;; Registers used:
 22594 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 22595 ;; Tracked objects:
 22596 ;;		On entry : 0/0
 22597 ;;		On exit  : 0/0
 22598 ;;		Unchanged: 0/0
 22599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22604 ;;Total ram usage:        0 bytes
 22605 ;; Hardware stack levels used:    1
 22606 ;; Hardware stack levels required when called:   15
 22607 ;; This function calls:
 22608 ;;		Nothing
 22609 ;; This function is called by:
 22610 ;;		_CRC_CalculatedResultGet
 22611 ;; This function uses a reentrant model
 22612 ;;
 22613                           
 22614                           	psect	text63
 22615  01FF32                     __ptext63:
 22616                           	opt callstack 0
 22617  01FF32                     _CRC_ReverseValue:
 22618                           	opt callstack 0
 22619                           
 22620                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22621  01FF32  52E6               	movf	postinc1,f,c
 22622  01FF34  52E6               	movf	postinc1,f,c
 22623  01FF36  52E6               	movf	postinc1,f,c
 22624  01FF38  52E6               	movf	postinc1,f,c
 22625                           
 22626                           ;mcc_generated_files/crc.c: 138: static uint16_t CRC_ReverseValue(uint16_t crc);mcc_gene
      +                          rated_files/crc.c: 139: {;mcc_generated_files/crc.c: 140:     uint16_t mask;;mcc_generat
      +                          ed_files/crc.c: 141:     uint16_t reverse;;mcc_generated_files/crc.c: 143:     mask = 1;
 22627                           
 22628                           ;incstack = 0
 22629  01FF3A  0E01               	movlw	1
 22630  01FF3C  6E34               	movwf	(btemp+10)^0,c
 22631  01FF3E  0E00               	movlw	0
 22632  01FF40  6E35               	movwf	(btemp+11)^0,c
 22633                           
 22634                           ;stkvar	_mask @ sp[(-4)+0]
 22635  01FF42  0EFC               	movlw	-4
 22636  01FF44  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 22637  01FF4A  0EFD               	movlw	-3
 22638  01FF4C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 22639                           
 22640                           ;mcc_generated_files/crc.c: 144:     mask <<= crcObj.polyWidth - 1;
 22641  01FF52  0060  F38C  F035   	movff	_crcObj+1,btemp+11
 22642  01FF58  0EFF               	movlw	255
 22643  01FF5A  2635               	addwf	(btemp+11)^0,f,c
 22644                           
 22645                           ;stkvar	_mask @ sp[(-4)+0]
 22646  01FF5C  50E1               	movf	fsr1l,w,c
 22647  01FF5E  0FFC               	addlw	-4
 22648  01FF60  6ED9               	movwf	fsr2l,c
 22649  01FF62  50E2               	movf	fsr1h,w,c
 22650  01FF64  6EDA               	movwf	fsr2h,c
 22651  01FF66  0EFF               	movlw	255
 22652  01FF68  22DA               	addwfc	fsr2h,f,c
 22653  01FF6A  2835               	incf	(btemp+11)^0,w,c
 22654  01FF6C  D003               	goto	u11640
 22655  01FF6E                     u11645:
 22656  01FF6E  90D8               	bcf	status,0,c
 22657  01FF70  36DE               	rlcf	postinc2,f,c
 22658  01FF72  36DD               	rlcf	postdec2,f,c
 22659  01FF74                     u11640:
 22660  01FF74  2EE8               	decfsz	wreg,f,c
 22661  01FF76  D7FB               	goto	u11645
 22662                           
 22663                           ;mcc_generated_files/crc.c: 145:     reverse = 0;
 22664                           ;stkvar	_reverse @ sp[(-4)+2]
 22665  01FF78  0EFE               	movlw	-2
 22666  01FF7A  6AE3               	clrf	plusw1,c
 22667  01FF7C  0EFF               	movlw	-1
 22668  01FF7E  6AE3               	clrf	plusw1,c
 22669                           
 22670                           ;mcc_generated_files/crc.c: 147:     while(crc)
 22671  01FF80  D029               	goto	l12363
 22672  01FF82                     l12355:
 22673                           
 22674                           ;mcc_generated_files/crc.c: 148:     {;mcc_generated_files/crc.c: 149:         if(crc & 
      +                          0x01)
 22675                           ;stkvar	_crc @ sp[(-4)+-2]
 22676  01FF82  0EFA               	movlw	-6
 22677  01FF84  A0E3               	btfss	plusw1,0,c
 22678  01FF86  D01C               	goto	l12359
 22679                           
 22680                           ;mcc_generated_files/crc.c: 150:         {;mcc_generated_files/crc.c: 151:             r
      +                          everse |= mask;
 22681                           ;stkvar	_mask @ sp[(-4)+0]
 22682  01FF88  0EFC               	movlw	-4
 22683  01FF8A  006F FF8C  F034    	movff	plusw1,btemp+10
 22684  01FF90  0EFD               	movlw	-3
 22685  01FF92  006F FF8C  F035    	movff	plusw1,btemp+11
 22686                           
 22687                           ;stkvar	_reverse @ sp[(-4)+2]
 22688  01FF98  0EFE               	movlw	-2
 22689  01FF9A  006F FF8C  F02A    	movff	plusw1,btemp
 22690  01FFA0  5034               	movf	(btemp+10)^0,w,c
 22691  01FFA2  122A               	iorwf	btemp^0,f,c
 22692  01FFA4  0EFE               	movlw	-2
 22693  01FFA6  0060  F0AB  FFE3   	movff	btemp,plusw1
 22694  01FFAC  0EFF               	movlw	-1
 22695  01FFAE  006F FF8C  F02A    	movff	plusw1,btemp
 22696  01FFB4  5035               	movf	(btemp+11)^0,w,c
 22697  01FFB6  122A               	iorwf	btemp^0,f,c
 22698  01FFB8  0EFF               	movlw	-1
 22699  01FFBA  0060  F0AB  FFE3   	movff	btemp,plusw1
 22700  01FFC0                     l12359:
 22701                           
 22702                           ;mcc_generated_files/crc.c: 153:         mask >>= 1;
 22703                           ;stkvar	_mask @ sp[(-4)+0]
 22704  01FFC0  90D8               	bcf	status,0,c
 22705  01FFC2  0EFD               	movlw	-3
 22706  01FFC4  32E3               	rrcf	plusw1,f,c
 22707  01FFC6  0EFC               	movlw	-4
 22708  01FFC8  32E3               	rrcf	plusw1,f,c
 22709                           
 22710                           ;mcc_generated_files/crc.c: 154:         crc >>= 1;
 22711                           ;stkvar	_crc @ sp[(-4)+-2]
 22712  01FFCA  90D8               	bcf	status,0,c
 22713  01FFCC  0EFB               	movlw	-5
 22714  01FFCE  32E3               	rrcf	plusw1,f,c
 22715  01FFD0  0EFA               	movlw	-6
 22716  01FFD2  32E3               	rrcf	plusw1,f,c
 22717  01FFD4                     l12363:
 22718                           
 22719                           ;mcc_generated_files/crc.c: 147:     while(crc)
 22720                           ;stkvar	_crc @ sp[(-4)+-2]
 22721  01FFD4  0EFA               	movlw	-6
 22722  01FFD6  006F FF8C  F02A    	movff	plusw1,btemp
 22723  01FFDC  0EFB               	movlw	-5
 22724  01FFDE  50E3               	movf	plusw1,w,c
 22725  01FFE0  102A               	iorwf	btemp^0,w,c
 22726  01FFE2  A4D8               	btfss	status,2,c
 22727  01FFE4  D7CE               	goto	l12355
 22728                           
 22729                           ;mcc_generated_files/crc.c: 156:     return reverse;
 22730                           ;stkvar	_reverse @ sp[(-4)+2]
 22731  01FFE6  0EFE               	movlw	-2
 22732  01FFE8  006F FF8C  F02A    	movff	plusw1,btemp
 22733  01FFEE  0EFF               	movlw	-1
 22734  01FFF0  006F FF8C  F02B    	movff	plusw1,btemp+1
 22735                           
 22736                           ; _CRC_ReverseValue: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 22737  01FFF6  0EFA               	movlw	250
 22738  01FFF8  26E1               	addwf	fsr1l,f,c
 22739  01FFFA  0EFF               	movlw	255
 22740  01FFFC  22E2               	addwfc	fsr1h,f,c
 22741  01FFFE  0012               	return		;funcret
 22742  020000                     __end_of_CRC_ReverseValue:
 22743                           	opt callstack 0
 22744                           
 22745 ;; *************** function _CRC_8BitDataWrite *****************
 22746 ;; Defined at:
 22747 ;;		line 125 in file "mcc_generated_files/crc.c"
 22748 ;; Parameters:    Size  Location     Type
 22749 ;;  data            1  [STACK] unsigned char 
 22750 ;; Auto vars:     Size  Location     Type
 22751 ;;		None
 22752 ;; Return value:  Size  Location     Type
 22753 ;;                  1  [STACK] _Bool 
 22754 ;; Registers used:
 22755 ;;		fsr1l, fsr1h
 22756 ;; Tracked objects:
 22757 ;;		On entry : 0/4
 22758 ;;		On exit  : 3F/39
 22759 ;;		Unchanged: 0/0
 22760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22765 ;;Total ram usage:        0 bytes
 22766 ;; Hardware stack levels used:    1
 22767 ;; Hardware stack levels required when called:   15
 22768 ;; This function calls:
 22769 ;;		Nothing
 22770 ;; This function is called by:
 22771 ;;		_read_cal_data
 22772 ;;		_write_cal_data
 22773 ;; This function uses a reentrant model
 22774 ;;
 22775                           
 22776                           	psect	text64
 22777  002EC6                     __ptext64:
 22778                           	opt callstack 0
 22779  002EC6                     _CRC_8BitDataWrite:
 22780                           	opt callstack 14
 22781                           
 22782                           ;mcc_generated_files/crc.c: 125: _Bool CRC_8BitDataWrite(uint8_t data);mcc_generated_fil
      +                          es/crc.c: 126: {;mcc_generated_files/crc.c: 127:     if(!CRCCON0bits.FULL)
 22783                           
 22784                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22785                           ;incstack = 0
 22786  002EC6  0139               	movlb	57	; () banked
 22787  002EC8  B168               	btfsc	104,0,b	;volatile
 22788  002ECA  D004               	goto	l1271
 22789                           
 22790                           ; BSR set to: 57
 22791                           ;mcc_generated_files/crc.c: 128:     {;mcc_generated_files/crc.c: 129:         CRCDATL =
      +                           data;
 22792                           ;stkvar	_data @ sp[(0)+-1]
 22793  002ECC  0EFF               	movlw	-1
 22794  002ECE  006F FF8F F960     	movff	plusw1,14688	;volatile
 22795  002ED4                     l1271:
 22796                           
 22797                           ; BSR set to: 57
 22798                           ; _CRC_8BitDataWrite: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 22799  002ED4  52E5               	movf	postdec1,f,c
 22800  002ED6  0012               	return		;funcret
 22801  002ED8                     __end_of_CRC_8BitDataWrite:
 22802                           	opt callstack 0
 22803                           
 22804 ;; *************** function _start_adc_scan *****************
 22805 ;; Defined at:
 22806 ;;		line 72 in file "daq.c"
 22807 ;; Parameters:    Size  Location     Type
 22808 ;;		None
 22809 ;; Auto vars:     Size  Location     Type
 22810 ;;		None
 22811 ;; Return value:  Size  Location     Type
 22812 ;;                  1  [STACK] _Bool 
 22813 ;; Registers used:
 22814 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 22815 ;; Tracked objects:
 22816 ;;		On entry : 0/0
 22817 ;;		On exit  : 0/0
 22818 ;;		Unchanged: 0/0
 22819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22824 ;;Total ram usage:        0 bytes
 22825 ;; Hardware stack levels used:    1
 22826 ;; Hardware stack levels required when called:   16
 22827 ;; This function calls:
 22828 ;;		_ADCC_DischargeSampleCapacitor
 22829 ;;		_ADCC_SetADIInterruptHandler
 22830 ;;		_ADCC_SetADTIInterruptHandler
 22831 ;;		_ADCC_StartConversion
 22832 ;; This function is called by:
 22833 ;;		_main
 22834 ;;		_current_sensor_cal
 22835 ;;		_update_adc_result
 22836 ;; This function uses a reentrant model
 22837 ;;
 22838                           
 22839                           	psect	text65
 22840  001CC2                     __ptext65:
 22841                           	opt callstack 0
 22842  001CC2                     _start_adc_scan:
 22843                           	opt callstack 14
 22844                           
 22845                           ;daq.c: 74:  if (R.done)
 22846                           
 22847                           ; BSR set to: 57
 22848                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22849                           ;incstack = 0
 22850  001CC2  0101               	movlb	1	; () banked
 22851  001CC4  5135               	movf	(_R+53)& (0+255),w,b	;volatile
 22852  001CC6  A4D8               	btfss	status,2,c
 22853  001CC8  0012               	return	
 22854                           
 22855                           ; BSR set to: 1
 22856                           ;daq.c: 77:  R.scan_index = 0;
 22857  001CCA  6B32               	clrf	(_R+50)& (0+255),b	;volatile
 22858                           
 22859                           ; BSR set to: 1
 22860                           ;daq.c: 78:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
 22861  001CCC  013A               	movlb	58	; () banked
 22862  001CCE  5140               	movf	64,w,b	;volatile
 22863  001CD0  006E F940  F02A    	movff	14928,btemp	;volatile
 22864  001CD6  6A2B               	clrf	(btemp+1)^0,c
 22865  001CD8  0060  F0A8  F02B   	movff	btemp,btemp+1
 22866  001CDE  6A2A               	clrf	btemp^0,c
 22867  001CE0  262A               	addwf	btemp^0,f,c
 22868  001CE2  0E00               	movlw	0
 22869  001CE4  222B               	addwfc	(btemp+1)^0,f,c
 22870  001CE6  0E77               	movlw	119
 22871  001CE8  142A               	andwf	btemp^0,w,c
 22872  001CEA  0101               	movlb	1	; () banked
 22873  001CEC  6F33               	movwf	(_R+51)& (0+255),b	;volatile
 22874  001CEE  0E3C               	movlw	60
 22875  001CF0  142B               	andwf	(btemp+1)^0,w,c
 22876  001CF2  6F34               	movwf	(_R+52)& (0+255),b	;volatile
 22877                           
 22878                           ; BSR set to: 1
 22879                           ;daq.c: 79:  ADCC_SetADIInterruptHandler(adc_int_handler);
 22880  001CF4  0E16               	movlw	low _adc_int_handler
 22881  001CF6  6EE6               	movwf	postinc1,c
 22882  001CF8  0E30               	movlw	high _adc_int_handler
 22883  001CFA  6EE6               	movwf	postinc1,c
 22884  001CFC  0E00               	movlw	low (_adc_int_handler shr (0+16))
 22885  001CFE  6EE6               	movwf	postinc1,c
 22886  001D00  EC9D  F015         	call	_ADCC_SetADIInterruptHandler	;wreg free
 22887                           
 22888                           ;daq.c: 80:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
 22889  001D04  0E08               	movlw	low _adc_int_t_handler
 22890  001D06  6EE6               	movwf	postinc1,c
 22891  001D08  0E17               	movlw	high _adc_int_t_handler
 22892  001D0A  6EE6               	movwf	postinc1,c
 22893  001D0C  0E00               	movlw	low (_adc_int_t_handler shr (0+16))
 22894  001D0E  6EE6               	movwf	postinc1,c
 22895  001D10  EC89  F015         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 22896                           
 22897                           ;daq.c: 81:  ADCC_DischargeSampleCapacitor();
 22898  001D14  ECE1  F017         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 22899                           
 22900                           ; BSR set to: 62
 22901                           ;daq.c: 82:  ADCC_StartConversion(R.scan_index & 0xf);
 22902  001D18  0101               	movlb	1	; () banked
 22903  001D1A  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 22904  001D1C  0B0F               	andlw	15
 22905  001D1E  6EE6               	movwf	postinc1,c
 22906  001D20  EC6C  F017         	call	_ADCC_StartConversion	;wreg free
 22907                           
 22908                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22909  001D24  0012               	return		;funcret
 22910  001D26                     __end_of_start_adc_scan:
 22911                           	opt callstack 0
 22912                           
 22913 ;; *************** function _ADCC_StartConversion *****************
 22914 ;; Defined at:
 22915 ;;		line 128 in file "mcc_generated_files/adcc.c"
 22916 ;; Parameters:    Size  Location     Type
 22917 ;;  channel         1  [STACK] enum E16136
 22918 ;; Auto vars:     Size  Location     Type
 22919 ;;		None
 22920 ;; Return value:  Size  Location     Type
 22921 ;;                  1  [STACK] void 
 22922 ;; Registers used:
 22923 ;;		fsr1l, fsr1h
 22924 ;; Tracked objects:
 22925 ;;		On entry : 3F/1
 22926 ;;		On exit  : 3F/3E
 22927 ;;		Unchanged: 0/0
 22928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22933 ;;Total ram usage:        0 bytes
 22934 ;; Hardware stack levels used:    1
 22935 ;; Hardware stack levels required when called:   15
 22936 ;; This function calls:
 22937 ;;		Nothing
 22938 ;; This function is called by:
 22939 ;;		_start_adc_scan
 22940 ;;		_adc_int_t_handler
 22941 ;; This function uses a reentrant model
 22942 ;;
 22943                           
 22944                           	psect	text66
 22945  002ED8                     __ptext66:
 22946                           	opt callstack 0
 22947  002ED8                     _ADCC_StartConversion:
 22948                           	opt callstack 0
 22949                           
 22950                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
 22951                           ;stkvar	_channel @ sp[(0)+-1]
 22952                           
 22953                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22954                           ;incstack = 0
 22955 ;; hardware stack exceeded
 22956  002ED8  0EFF               	movlw	-1
 22957  002EDA  006F FF8F FEF1     	movff	plusw1,16113	;volatile
 22958                           
 22959                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
 22960  002EE0  013E               	movlb	62	; () banked
 22961  002EE2  8FF8               	bsf	248,7,b	;volatile
 22962                           
 22963                           ; BSR set to: 62
 22964                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
 22965  002EE4  81F8               	bsf	248,0,b	;volatile
 22966                           
 22967                           ; BSR set to: 62
 22968                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 22969  002EE6  52E5               	movf	postdec1,f,c
 22970  002EE8  0012               	return		;funcret
 22971  002EEA                     __end_of_ADCC_StartConversion:
 22972                           	opt callstack 0
 22973                           
 22974 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 22975 ;; Defined at:
 22976 ;;		line 189 in file "mcc_generated_files/adcc.c"
 22977 ;; Parameters:    Size  Location     Type
 22978 ;;		None
 22979 ;; Auto vars:     Size  Location     Type
 22980 ;;		None
 22981 ;; Return value:  Size  Location     Type
 22982 ;;                  1  [STACK] void 
 22983 ;; Registers used:
 22984 ;;		wreg, status,2
 22985 ;; Tracked objects:
 22986 ;;		On entry : 0/1
 22987 ;;		On exit  : 3F/3E
 22988 ;;		Unchanged: 0/0
 22989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22994 ;;Total ram usage:        0 bytes
 22995 ;; Hardware stack levels used:    1
 22996 ;; Hardware stack levels required when called:   15
 22997 ;; This function calls:
 22998 ;;		Nothing
 22999 ;; This function is called by:
 23000 ;;		_start_adc_scan
 23001 ;;		_adc_int_t_handler
 23002 ;; This function uses a reentrant model
 23003 ;;
 23004                           
 23005                           	psect	text67
 23006  002FC2                     __ptext67:
 23007                           	opt callstack 0
 23008  002FC2                     _ADCC_DischargeSampleCapacitor:
 23009                           	opt callstack 0
 23010                           
 23011                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
 23012                           
 23013                           ; BSR set to: 62
 23014                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23015                           ;incstack = 0
 23016 ;; hardware stack exceeded
 23017  002FC2  0E3B               	movlw	59
 23018  002FC4  013E               	movlb	62	; () banked
 23019  002FC6  6FF1               	movwf	241,b	;volatile
 23020                           
 23021                           ; BSR set to: 62
 23022                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
 23023  002FC8  0012               	return		;funcret
 23024  002FCA                     __end_of_ADCC_DischargeSampleCapacitor:
 23025                           	opt callstack 0
 23026                           
 23027 ;; *************** function _spinners *****************
 23028 ;; Defined at:
 23029 ;;		line 147 in file "mbmc.c"
 23030 ;; Parameters:    Size  Location     Type
 23031 ;;  shape           1  [STACK] unsigned char 
 23032 ;;  reset           1  [STACK] const unsigned char 
 23033 ;; Auto vars:     Size  Location     Type
 23034 ;;  c               1  [STACK] unsigned char 
 23035 ;; Return value:  Size  Location     Type
 23036 ;;                  1  [STACK] unsigned char 
 23037 ;; Registers used:
 23038 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
 23039 ;; Tracked objects:
 23040 ;;		On entry : 0/0
 23041 ;;		On exit  : 0/0
 23042 ;;		Unchanged: 0/0
 23043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23048 ;;Total ram usage:        0 bytes
 23049 ;; Hardware stack levels used:    1
 23050 ;; Hardware stack levels required when called:   16
 23051 ;; This function calls:
 23052 ;;		_strlen
 23053 ;; This function is called by:
 23054 ;;		_main
 23055 ;;		_current_sensor_cal
 23056 ;; This function uses a reentrant model
 23057 ;;
 23058                           
 23059                           	psect	text68
 23060  0003AE                     __ptext68:
 23061                           	opt callstack 0
 23062  0003AE                     _spinners:
 23063                           	opt callstack 0
 23064                           
 23065                           ; BSR set to: 62
 23066                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23067  0003AE  52E6               	movf	postinc1,f,c
 23068                           
 23069                           ;mbmc.c: 147: char spinners(uint8_t shape, const uint8_t reset);mbmc.c: 148: {;mbmc.c: 1
      +                          49:  static uint8_t s[6];;mbmc.c: 150:  char c;;mbmc.c: 152:  if (shape > (6 - 1))
 23070                           ;stkvar	_shape @ sp[(-1)+-1]
 23071                           
 23072                           ;incstack = 0
 23073  0003B0  0EFE               	movlw	-2
 23074  0003B2  006F FF8C  F02A    	movff	plusw1,btemp
 23075  0003B8  0E05               	movlw	5
 23076  0003BA  642A               	cpfsgt	btemp^0,c
 23077  0003BC  D002               	goto	l2195
 23078                           
 23079                           ;mbmc.c: 153:   shape = 0;
 23080                           ;stkvar	_shape @ sp[(-1)+-1]
 23081  0003BE  0EFE               	movlw	-2
 23082  0003C0  6AE3               	clrf	plusw1,c
 23083  0003C2                     l2195:
 23084                           
 23085                           ;mbmc.c: 154:  if (reset)
 23086                           ;stkvar	_reset @ sp[(-1)+-2]
 23087  0003C2  0EFD               	movlw	-3
 23088  0003C4  50E3               	movf	plusw1,w,c
 23089  0003C6  B4D8               	btfsc	status,2,c
 23090  0003C8  D00C               	goto	l17109
 23091                           
 23092                           ;mbmc.c: 155:   s[shape] = 0;
 23093                           ;stkvar	_shape @ sp[(-1)+-1]
 23094  0003CA  0EFE               	movlw	-2
 23095  0003CC  50E3               	movf	plusw1,w,c
 23096  0003CE  6E34               	movwf	(btemp+10)^0,c
 23097  0003D0  6A35               	clrf	(btemp+11)^0,c
 23098  0003D2  0ECD               	movlw	low spinners@s
 23099  0003D4  2434               	addwf	(btemp+10)^0,w,c
 23100  0003D6  6ED9               	movwf	fsr2l,c
 23101  0003D8  0E01               	movlw	high spinners@s
 23102  0003DA  2035               	addwfc	(btemp+11)^0,w,c
 23103  0003DC  6EDA               	movwf	fsr2h,c
 23104  0003DE  0E00               	movlw	0
 23105  0003E0  6EDF               	movwf	indf2,c
 23106  0003E2                     l17109:
 23107                           
 23108                           ;mbmc.c: 156:  c = spin[shape][s[shape]];
 23109                           ;stkvar	_shape @ sp[(-1)+-1]
 23110  0003E2  0EFE               	movlw	-2
 23111  0003E4  50E3               	movf	plusw1,w,c
 23112  0003E6  0D14               	mullw	20
 23113  0003E8  0ED3               	movlw	low _spin
 23114  0003EA  6E34               	movwf	(btemp+10)^0,c
 23115  0003EC  0EF8               	movlw	high _spin
 23116  0003EE  6E35               	movwf	(btemp+11)^0,c
 23117  0003F0  50F3               	movf	243,w,c
 23118  0003F2  2634               	addwf	(btemp+10)^0,f,c
 23119  0003F4  50F4               	movf	244,w,c
 23120  0003F6  2235               	addwfc	(btemp+11)^0,f,c
 23121                           
 23122                           ;stkvar	_shape @ sp[(-1)+-1]
 23123  0003F8  0EFE               	movlw	-2
 23124  0003FA  50E3               	movf	plusw1,w,c
 23125  0003FC  6E32               	movwf	(btemp+8)^0,c
 23126  0003FE  6A33               	clrf	(btemp+9)^0,c
 23127  000400  0ECD               	movlw	low spinners@s
 23128  000402  2432               	addwf	(btemp+8)^0,w,c
 23129  000404  6ED9               	movwf	fsr2l,c
 23130  000406  0E01               	movlw	high spinners@s
 23131  000408  2033               	addwfc	(btemp+9)^0,w,c
 23132  00040A  6EDA               	movwf	fsr2h,c
 23133  00040C  50DF               	movf	indf2,w,c
 23134  00040E  2634               	addwf	(btemp+10)^0,f,c
 23135  000410  0E00               	movlw	0
 23136  000412  2235               	addwfc	(btemp+11)^0,f,c
 23137  000414  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 23138  00041A  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 23139  000420                     	if	0	;tblptru may be non-zero
 23140  000420                     	endif
 23141  000420                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23142  000420  0E00               	movlw	low (__mediumconst shr (0+16))
 23143  000422  6EF8               	movwf	tblptru,c
 23144  000424                     	endif
 23145                           
 23146                           ;stkvar	_c @ sp[(-1)+0]
 23147  000424  0008               	tblrd		*
 23148  000426  0EFF               	movlw	-1
 23149  000428  006F FFD7 FFE3     	movff	tablat,plusw1
 23150                           
 23151                           ;mbmc.c: 157:  if (++s[shape] >= strlen(spin[shape]))
 23152                           ;stkvar	_shape @ sp[(-1)+-1]
 23153  00042E  0EFE               	movlw	-2
 23154  000430  50E3               	movf	plusw1,w,c
 23155  000432  0D14               	mullw	20
 23156  000434  0ED3               	movlw	low _spin
 23157  000436  6E34               	movwf	(btemp+10)^0,c
 23158  000438  0EF8               	movlw	high _spin
 23159  00043A  6E35               	movwf	(btemp+11)^0,c
 23160  00043C  50F3               	movf	243,w,c
 23161  00043E  2634               	addwf	(btemp+10)^0,f,c
 23162  000440  50F4               	movf	244,w,c
 23163  000442  2235               	addwfc	(btemp+11)^0,f,c
 23164  000444  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 23165  00044A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 23166  000450  EC65  F008         	call	_strlen	;wreg free
 23167                           
 23168                           ;stkvar	_shape @ sp[(-1)+-1]
 23169  000454  0EFE               	movlw	-2
 23170  000456  50E3               	movf	plusw1,w,c
 23171  000458  6E34               	movwf	(btemp+10)^0,c
 23172  00045A  6A35               	clrf	(btemp+11)^0,c
 23173  00045C  0ECD               	movlw	low spinners@s
 23174  00045E  2434               	addwf	(btemp+10)^0,w,c
 23175  000460  6ED9               	movwf	fsr2l,c
 23176  000462  0E01               	movlw	high spinners@s
 23177  000464  2035               	addwfc	(btemp+11)^0,w,c
 23178  000466  6EDA               	movwf	fsr2h,c
 23179  000468  2ADF               	incf	indf2,f,c
 23180  00046A  50DF               	movf	indf2,w,c
 23181  00046C  6E34               	movwf	(btemp+10)^0,c
 23182  00046E  6A35               	clrf	(btemp+11)^0,c
 23183  000470  502A               	movf	btemp^0,w,c
 23184  000472  5C34               	subwf	(btemp+10)^0,w,c
 23185  000474  502B               	movf	(btemp+1)^0,w,c
 23186  000476  5835               	subwfb	(btemp+11)^0,w,c
 23187  000478  A0D8               	btfss	status,0,c
 23188  00047A  D00C               	goto	l17115
 23189                           
 23190                           ;mbmc.c: 158:   s[shape] = 0;
 23191                           ;stkvar	_shape @ sp[(-1)+-1]
 23192  00047C  0EFE               	movlw	-2
 23193  00047E  50E3               	movf	plusw1,w,c
 23194  000480  6E34               	movwf	(btemp+10)^0,c
 23195  000482  6A35               	clrf	(btemp+11)^0,c
 23196  000484  0ECD               	movlw	low spinners@s
 23197  000486  2434               	addwf	(btemp+10)^0,w,c
 23198  000488  6ED9               	movwf	fsr2l,c
 23199  00048A  0E01               	movlw	high spinners@s
 23200  00048C  2035               	addwfc	(btemp+11)^0,w,c
 23201  00048E  6EDA               	movwf	fsr2h,c
 23202  000490  0E00               	movlw	0
 23203  000492  6EDF               	movwf	indf2,c
 23204  000494                     l17115:
 23205                           
 23206                           ;mbmc.c: 159:  return c;
 23207                           ;stkvar	_c @ sp[(-1)+0]
 23208  000494  0EFF               	movlw	-1
 23209  000496  006F FF8C  F02A    	movff	plusw1,btemp
 23210                           
 23211                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
 23212  00049C  52E5               	movf	postdec1,f,c
 23213  00049E  52E5               	movf	postdec1,f,c
 23214  0004A0  52E5               	movf	postdec1,f,c
 23215  0004A2  0012               	return		;funcret
 23216  0004A4                     __end_of_spinners:
 23217                           	opt callstack 0
 23218                           
 23219 ;; *************** function _get_switch *****************
 23220 ;; Defined at:
 23221 ;;		line 18 in file "dio.c"
 23222 ;; Parameters:    Size  Location     Type
 23223 ;;  i               1  [STACK] const unsigned char 
 23224 ;; Auto vars:     Size  Location     Type
 23225 ;;		None
 23226 ;; Return value:  Size  Location     Type
 23227 ;;                  1  [STACK] enum E17187
 23228 ;; Registers used:
 23229 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 23230 ;; Tracked objects:
 23231 ;;		On entry : 0/0
 23232 ;;		On exit  : 0/0
 23233 ;;		Unchanged: 0/0
 23234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23239 ;;Total ram usage:        0 bytes
 23240 ;; Hardware stack levels used:    1
 23241 ;; Hardware stack levels required when called:   15
 23242 ;; This function calls:
 23243 ;;		Nothing
 23244 ;; This function is called by:
 23245 ;;		_main
 23246 ;;		_current_sensor_cal
 23247 ;;		_display_history
 23248 ;;		_hid_input
 23249 ;; This function uses a reentrant model
 23250 ;;
 23251                           
 23252                           	psect	text69
 23253  0028D4                     __ptext69:
 23254                           	opt callstack 0
 23255  0028D4                     _get_switch:
 23256                           	opt callstack 13
 23257                           
 23258                           ;dio.c: 18: SW_STATES get_switch(const uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 6)
 23259                           ;stkvar	_i @ sp[(0)+-1]
 23260                           
 23261                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23262                           ;incstack = 0
 23263  0028D4  0EFF               	movlw	-1
 23264  0028D6  006F FF8C  F02A    	movff	plusw1,btemp
 23265  0028DC  0E05               	movlw	5
 23266  0028DE  642A               	cpfsgt	btemp^0,c
 23267  0028E0  D002               	goto	l12949
 23268                           
 23269                           ;dio.c: 21:   return SW_OFF;
 23270  0028E2  0E00               	movlw	0
 23271  0028E4  D00A               	goto	L20
 23272  0028E6                     l12949:
 23273                           
 23274                           ;dio.c: 23:  return S.button[i].sw;
 23275                           ;stkvar	_i @ sp[(0)+-1]
 23276  0028E6  0EFF               	movlw	-1
 23277  0028E8  50E3               	movf	plusw1,w,c
 23278  0028EA  0D05               	mullw	5
 23279  0028EC  0EA4               	movlw	low _S
 23280  0028EE  24F3               	addwf	243,w,c
 23281  0028F0  6ED9               	movwf	fsr2l,c
 23282  0028F2  0E01               	movlw	high _S
 23283  0028F4  20F4               	addwfc	prodh,w,c
 23284  0028F6  6EDA               	movwf	fsr2h,c
 23285  0028F8  50DF               	movf	indf2,w,c
 23286  0028FA                     L20:
 23287  0028FA  6E2A               	movwf	btemp^0,c
 23288                           
 23289                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 23290  0028FC  52E5               	movf	postdec1,f,c
 23291  0028FE  0012               	return		;funcret
 23292  002900                     __end_of_get_switch:
 23293                           	opt callstack 0
 23294                           
 23295 ;; *************** function _clear_switch *****************
 23296 ;; Defined at:
 23297 ;;		line 49 in file "dio.c"
 23298 ;; Parameters:    Size  Location     Type
 23299 ;;  i               1  [STACK] const unsigned char 
 23300 ;; Auto vars:     Size  Location     Type
 23301 ;;		None
 23302 ;; Return value:  Size  Location     Type
 23303 ;;                  1  [STACK] void 
 23304 ;; Registers used:
 23305 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 23306 ;; Tracked objects:
 23307 ;;		On entry : 0/0
 23308 ;;		On exit  : 0/0
 23309 ;;		Unchanged: 0/0
 23310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23315 ;;Total ram usage:        0 bytes
 23316 ;; Hardware stack levels used:    1
 23317 ;; Hardware stack levels required when called:   15
 23318 ;; This function calls:
 23319 ;;		Nothing
 23320 ;; This function is called by:
 23321 ;;		_current_sensor_cal
 23322 ;; This function uses a reentrant model
 23323 ;;
 23324                           
 23325                           	psect	text70
 23326  0020B0                     __ptext70:
 23327                           	opt callstack 0
 23328  0020B0                     _clear_switch:
 23329                           	opt callstack 14
 23330                           
 23331                           ;dio.c: 49: void clear_switch(const uint8_t i);dio.c: 50: {;dio.c: 51:  if (i >= 6)
 23332                           ;stkvar	_i @ sp[(0)+-1]
 23333                           
 23334                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23335                           ;incstack = 0
 23336  0020B0  0EFF               	movlw	-1
 23337  0020B2  006F FF8C  F02A    	movff	plusw1,btemp
 23338  0020B8  0E05               	movlw	5
 23339  0020BA  642A               	cpfsgt	btemp^0,c
 23340  0020BC  D001               	goto	l13659
 23341  0020BE  D01D               	goto	l2260
 23342  0020C0                     l13659:
 23343                           
 23344                           ;dio.c: 54:  S.button[i].count = 0;
 23345                           ;stkvar	_i @ sp[(0)+-1]
 23346  0020C0  0EFF               	movlw	-1
 23347  0020C2  50E3               	movf	plusw1,w,c
 23348  0020C4  0D05               	mullw	5
 23349  0020C6  0EA5               	movlw	low (_S+1)
 23350  0020C8  24F3               	addwf	243,w,c
 23351  0020CA  6ED9               	movwf	fsr2l,c
 23352  0020CC  0E01               	movlw	high (_S+1)
 23353  0020CE  20F4               	addwfc	prodh,w,c
 23354  0020D0  6EDA               	movwf	fsr2h,c
 23355  0020D2  6ADE               	clrf	postinc2,c
 23356  0020D4  6ADE               	clrf	postinc2,c
 23357  0020D6  6ADE               	clrf	postinc2,c
 23358  0020D8  6ADD               	clrf	postdec2,c
 23359                           
 23360                           ;dio.c: 55:  S.sw_bitmap &= ~(1 << i);
 23361                           ;stkvar	_i @ sp[(0)+-1]
 23362  0020DA  0EFF               	movlw	-1
 23363  0020DC  006F FF8C  F035    	movff	plusw1,btemp+11
 23364  0020E2  0E01               	movlw	1
 23365  0020E4  6E34               	movwf	(btemp+10)^0,c
 23366  0020E6  2A35               	incf	(btemp+11)^0,f,c
 23367  0020E8  D002               	goto	u12754
 23368  0020EA                     u12755:
 23369  0020EA  90D8               	bcf	status,0,c
 23370  0020EC  3634               	rlcf	(btemp+10)^0,f,c
 23371  0020EE                     u12754:
 23372  0020EE  2E35               	decfsz	(btemp+11)^0,f,c
 23373  0020F0  D7FC               	goto	u12755
 23374  0020F2  5034               	movf	(btemp+10)^0,w,c
 23375  0020F4  0AFF               	xorlw	255
 23376  0020F6  0101               	movlb	1	; () banked
 23377  0020F8  17CC               	andwf	(_S+40)& (0+255),f,b	;volatile
 23378  0020FA                     l2260:
 23379                           
 23380                           ; _clear_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
 23381  0020FA  52E5               	movf	postdec1,f,c
 23382  0020FC  0012               	return		;funcret
 23383  0020FE                     __end_of_clear_switch:
 23384                           	opt callstack 0
 23385                           
 23386 ;; *************** function _clear_adc_scan *****************
 23387 ;; Defined at:
 23388 ;;		line 103 in file "daq.c"
 23389 ;; Parameters:    Size  Location     Type
 23390 ;;		None
 23391 ;; Auto vars:     Size  Location     Type
 23392 ;;		None
 23393 ;; Return value:  Size  Location     Type
 23394 ;;                  1  [STACK] void 
 23395 ;; Registers used:
 23396 ;;		None
 23397 ;; Tracked objects:
 23398 ;;		On entry : 0/0
 23399 ;;		On exit  : 3F/1
 23400 ;;		Unchanged: 0/0
 23401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23406 ;;Total ram usage:        0 bytes
 23407 ;; Hardware stack levels used:    1
 23408 ;; Hardware stack levels required when called:   15
 23409 ;; This function calls:
 23410 ;;		Nothing
 23411 ;; This function is called by:
 23412 ;;		_main
 23413 ;;		_current_sensor_cal
 23414 ;;		_update_adc_result
 23415 ;; This function uses a reentrant model
 23416 ;;
 23417                           
 23418                           	psect	text71
 23419  002FEE                     __ptext71:
 23420                           	opt callstack 0
 23421  002FEE                     _clear_adc_scan:
 23422                           	opt callstack 13
 23423                           
 23424                           ;daq.c: 105:  R.done = 0;
 23425                           
 23426                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23427                           ;incstack = 0
 23428  002FEE  0101               	movlb	1	; () banked
 23429  002FF0  6B35               	clrf	(_R+53)& (0+255),b	;volatile
 23430                           
 23431                           ; BSR set to: 1
 23432                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 23433  002FF2  0012               	return		;funcret
 23434  002FF4                     __end_of_clear_adc_scan:
 23435                           	opt callstack 0
 23436                           
 23437 ;; *************** function _cal_current_zero *****************
 23438 ;; Defined at:
 23439 ;;		line 329 in file "daq.c"
 23440 ;; Parameters:    Size  Location     Type
 23441 ;;  mode            1  [STACK] const _Bool 
 23442 ;;  cb              2  [STACK] const short 
 23443 ;;  cp              2  [STACK] const short 
 23444 ;; Auto vars:     Size  Location     Type
 23445 ;;		None
 23446 ;; Return value:  Size  Location     Type
 23447 ;;                  1  [STACK] _Bool 
 23448 ;; Registers used:
 23449 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23450 ;; Tracked objects:
 23451 ;;		On entry : 0/1
 23452 ;;		On exit  : 0/0
 23453 ;;		Unchanged: 0/0
 23454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23459 ;;Total ram usage:        0 bytes
 23460 ;; Hardware stack levels used:    1
 23461 ;; Hardware stack levels required when called:   16
 23462 ;; This function calls:
 23463 ;;		_check_range
 23464 ;; This function is called by:
 23465 ;;		_current_sensor_cal
 23466 ;; This function uses a reentrant model
 23467 ;;
 23468                           
 23469                           	psect	text72
 23470  00129E                     __ptext72:
 23471                           	opt callstack 0
 23472  00129E                     _cal_current_zero:
 23473                           	opt callstack 13
 23474                           
 23475                           ;daq.c: 329: _Bool cal_current_zero(const _Bool mode, const int16_t cb, const int16_t cp
      +                          );daq.c: 330: {;daq.c: 332:  if (!check_range(cb, 100, 4000))
 23476                           
 23477                           ; BSR set to: 1
 23478                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23479                           ;incstack = 0
 23480  00129E  0EA0               	movlw	160
 23481  0012A0  6EE6               	movwf	postinc1,c
 23482  0012A2  0E0F               	movlw	15
 23483  0012A4  6EE6               	movwf	postinc1,c
 23484  0012A6  0E64               	movlw	100
 23485  0012A8  6EE6               	movwf	postinc1,c
 23486  0012AA  0E00               	movlw	0
 23487  0012AC  6EE6               	movwf	postinc1,c
 23488                           
 23489                           ;stkvar	_cb @ sp[(-4)+-3]
 23490  0012AE  0EF9               	movlw	-7
 23491  0012B0  006F FF8F FFE6     	movff	plusw1,postinc1
 23492  0012B6  006F FF8F FFE6     	movff	plusw1,postinc1
 23493  0012BC  ECC5  F00B         	call	_check_range	;wreg free
 23494  0012C0  502A               	movf	btemp^0,w,c
 23495  0012C2  A4D8               	btfss	status,2,c
 23496  0012C4  D002               	goto	l13635
 23497  0012C6                     u12710:
 23498                           
 23499                           ;daq.c: 333:   return 0;
 23500  0012C6  0E00               	movlw	0
 23501  0012C8  D019               	goto	L21
 23502  0012CA                     l13635:
 23503                           
 23504                           ;daq.c: 335:  if (!check_range(cp, 100, 4000))
 23505  0012CA  0EA0               	movlw	160
 23506  0012CC  6EE6               	movwf	postinc1,c
 23507  0012CE  0E0F               	movlw	15
 23508  0012D0  6EE6               	movwf	postinc1,c
 23509  0012D2  0E64               	movlw	100
 23510  0012D4  6EE6               	movwf	postinc1,c
 23511  0012D6  0E00               	movlw	0
 23512  0012D8  6EE6               	movwf	postinc1,c
 23513                           
 23514                           ;stkvar	_cp @ sp[(-4)+-5]
 23515  0012DA  0EF7               	movlw	-9
 23516  0012DC  006F FF8F FFE6     	movff	plusw1,postinc1
 23517  0012E2  006F FF8F FFE6     	movff	plusw1,postinc1
 23518  0012E8  ECC5  F00B         	call	_check_range	;wreg free
 23519  0012EC  502A               	movf	btemp^0,w,c
 23520  0012EE  B4D8               	btfsc	status,2,c
 23521  0012F0  D7EA               	goto	u12710
 23522                           
 23523                           ;daq.c: 338:  if (!mode)
 23524                           ;stkvar	_mode @ sp[(0)+-1]
 23525  0012F2  0EFF               	movlw	-1
 23526  0012F4  50E3               	movf	plusw1,w,c
 23527  0012F6  A4D8               	btfss	status,2,c
 23528  0012F8  D003               	goto	l13647
 23529  0012FA                     u12730:
 23530                           
 23531                           ;daq.c: 339:   return 1;
 23532  0012FA  0E01               	movlw	1
 23533  0012FC                     L21:
 23534  0012FC  6E2A               	movwf	btemp^0,c
 23535  0012FE  D013               	goto	l2069
 23536  001300                     l13647:
 23537                           
 23538                           ;daq.c: 341:  R.n_offset[0] = cb;
 23539                           ;stkvar	_cb @ sp[(0)+-3]
 23540  001300  0EFD               	movlw	-3
 23541  001302  006F FF8C  F126    	movff	plusw1,_R+38	;volatile
 23542  001308  0EFE               	movlw	-2
 23543  00130A  006F FF8C  F127    	movff	plusw1,_R+39	;volatile
 23544                           
 23545                           ;daq.c: 342:  R.n_offset[1] = cp;
 23546                           ;stkvar	_cp @ sp[(0)+-5]
 23547  001310  0EFB               	movlw	-5
 23548  001312  006F FF8C  F128    	movff	plusw1,_R+40	;volatile
 23549  001318  0EFC               	movlw	-4
 23550  00131A  006F FF8C  F129    	movff	plusw1,_R+41	;volatile
 23551                           
 23552                           ;daq.c: 343:  R.c_zero_cal = 1;
 23553  001320  0101               	movlb	1	; () banked
 23554  001322  8597               	bsf	(_R+151)& (0+255),2,b	;volatile
 23555  001324  D7EA               	goto	u12730
 23556  001326                     l2069:
 23557                           
 23558                           ; _cal_current_zero: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           5, argsize = 5, vargsize = 0
 23559  001326  0EFB               	movlw	251
 23560  001328  26E1               	addwf	fsr1l,f,c
 23561  00132A  0EFF               	movlw	255
 23562  00132C  22E2               	addwfc	fsr1h,f,c
 23563  00132E  0012               	return		;funcret
 23564  001330                     __end_of_cal_current_zero:
 23565                           	opt callstack 0
 23566                           
 23567 ;; *************** function _cal_current_10A *****************
 23568 ;; Defined at:
 23569 ;;		line 350 in file "daq.c"
 23570 ;; Parameters:    Size  Location     Type
 23571 ;;  mode            1  [STACK] const _Bool 
 23572 ;;  cb              2  [STACK] const short 
 23573 ;;  cp              2  [STACK] const short 
 23574 ;;  scaleb          4  [STACK] const float 
 23575 ;;  scalep          4  [STACK] const float 
 23576 ;; Auto vars:     Size  Location     Type
 23577 ;;		None
 23578 ;; Return value:  Size  Location     Type
 23579 ;;                  1  [STACK] _Bool 
 23580 ;; Registers used:
 23581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 23582 ;; Tracked objects:
 23583 ;;		On entry : 0/1
 23584 ;;		On exit  : 0/0
 23585 ;;		Unchanged: 0/0
 23586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23591 ;;Total ram usage:        0 bytes
 23592 ;; Hardware stack levels used:    1
 23593 ;; Hardware stack levels required when called:   16
 23594 ;; This function calls:
 23595 ;;		_check_range
 23596 ;; This function is called by:
 23597 ;;		_current_sensor_cal
 23598 ;; This function uses a reentrant model
 23599 ;;
 23600                           
 23601                           	psect	text73
 23602  0009DA                     __ptext73:
 23603                           	opt callstack 0
 23604  0009DA                     _cal_current_10A:
 23605                           	opt callstack 13
 23606                           
 23607                           ;daq.c: 350: _Bool cal_current_10A(const _Bool mode, const int16_t cb, const int16_t cp,
      +                           const float scaleb, const float scalep);daq.c: 351: {;daq.c: 352:  if (!check_range(cb,
      +                           100, 4050))
 23608                           
 23609                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 13, argsize = 13 v
      +                          argsize = 0, retsize = 0 argfudge = 0
 23610                           ;incstack = 0
 23611  0009DA  0ED2               	movlw	210
 23612  0009DC  6EE6               	movwf	postinc1,c
 23613  0009DE  0E0F               	movlw	15
 23614  0009E0  6EE6               	movwf	postinc1,c
 23615  0009E2  0E64               	movlw	100
 23616  0009E4  6EE6               	movwf	postinc1,c
 23617  0009E6  0E00               	movlw	0
 23618  0009E8  6EE6               	movwf	postinc1,c
 23619                           
 23620                           ;stkvar	_cb @ sp[(-4)+-3]
 23621  0009EA  0EF9               	movlw	-7
 23622  0009EC  006F FF8F FFE6     	movff	plusw1,postinc1
 23623  0009F2  006F FF8F FFE6     	movff	plusw1,postinc1
 23624  0009F8  ECC5  F00B         	call	_check_range	;wreg free
 23625  0009FC  502A               	movf	btemp^0,w,c
 23626  0009FE  A4D8               	btfss	status,2,c
 23627  000A00  D002               	goto	l13669
 23628  000A02                     u12760:
 23629                           
 23630                           ;daq.c: 353:   return 0;
 23631  000A02  0E00               	movlw	0
 23632  000A04  D019               	goto	L22
 23633  000A06                     l13669:
 23634                           
 23635                           ;daq.c: 355:  if (!check_range(cp, 100, 4278))
 23636  000A06  0EB6               	movlw	182
 23637  000A08  6EE6               	movwf	postinc1,c
 23638  000A0A  0E10               	movlw	16
 23639  000A0C  6EE6               	movwf	postinc1,c
 23640  000A0E  0E64               	movlw	100
 23641  000A10  6EE6               	movwf	postinc1,c
 23642  000A12  0E00               	movlw	0
 23643  000A14  6EE6               	movwf	postinc1,c
 23644                           
 23645                           ;stkvar	_cp @ sp[(-4)+-5]
 23646  000A16  0EF7               	movlw	-9
 23647  000A18  006F FF8F FFE6     	movff	plusw1,postinc1
 23648  000A1E  006F FF8F FFE6     	movff	plusw1,postinc1
 23649  000A24  ECC5  F00B         	call	_check_range	;wreg free
 23650  000A28  502A               	movf	btemp^0,w,c
 23651  000A2A  B4D8               	btfsc	status,2,c
 23652  000A2C  D7EA               	goto	u12760
 23653                           
 23654                           ;daq.c: 358:  if (!mode)
 23655                           ;stkvar	_mode @ sp[(0)+-1]
 23656  000A2E  0EFF               	movlw	-1
 23657  000A30  50E3               	movf	plusw1,w,c
 23658  000A32  A4D8               	btfss	status,2,c
 23659  000A34  D003               	goto	l13681
 23660  000A36                     u12780:
 23661                           
 23662                           ;daq.c: 359:   return 1;
 23663  000A36  0E01               	movlw	1
 23664  000A38                     L22:
 23665  000A38  6E2A               	movwf	btemp^0,c
 23666  000A3A  D029               	goto	l2075
 23667  000A3C                     l13681:
 23668                           
 23669                           ;daq.c: 361:  R.n_scalar[0] = scaleb;
 23670                           ;stkvar	_scaleb @ sp[(0)+-9]
 23671  000A3C  50E1               	movf	fsr1l,w,c
 23672  000A3E  0FF7               	addlw	-9
 23673  000A40  6ED9               	movwf	fsr2l,c
 23674  000A42  50E2               	movf	fsr1h,w,c
 23675  000A44  6EDA               	movwf	fsr2h,c
 23676  000A46  0EFF               	movlw	255
 23677  000A48  22DA               	addwfc	fsr2h,f,c
 23678  000A4A  006F FF78  F12A    	movff	postinc2,_R+42	;volatile
 23679  000A50  006F FF78  F12B    	movff	postinc2,_R+43	;volatile
 23680  000A56  006F FF78  F12C    	movff	postinc2,_R+44	;volatile
 23681  000A5C  006F FF78  F12D    	movff	postinc2,_R+45	;volatile
 23682                           
 23683                           ;daq.c: 362:  R.n_scalar[1] = scalep;
 23684                           ;stkvar	_scalep @ sp[(0)+-13]
 23685  000A62  50E1               	movf	fsr1l,w,c
 23686  000A64  0FF3               	addlw	-13
 23687  000A66  6ED9               	movwf	fsr2l,c
 23688  000A68  50E2               	movf	fsr1h,w,c
 23689  000A6A  6EDA               	movwf	fsr2h,c
 23690  000A6C  0EFF               	movlw	255
 23691  000A6E  22DA               	addwfc	fsr2h,f,c
 23692  000A70  006F FF78  F12E    	movff	postinc2,_R+46	;volatile
 23693  000A76  006F FF78  F12F    	movff	postinc2,_R+47	;volatile
 23694  000A7C  006F FF78  F130    	movff	postinc2,_R+48	;volatile
 23695  000A82  006F FF78  F131    	movff	postinc2,_R+49	;volatile
 23696                           
 23697                           ;daq.c: 363:  R.c_scale_cal = 1;
 23698  000A88  0101               	movlb	1	; () banked
 23699  000A8A  8797               	bsf	(_R+151)& (0+255),3,b	;volatile
 23700  000A8C  D7D4               	goto	u12780
 23701  000A8E                     l2075:
 23702                           
 23703                           ; _cal_current_10A: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          13, argsize = 13, vargsize = 0
 23704  000A8E  0EF3               	movlw	243
 23705  000A90  26E1               	addwf	fsr1l,f,c
 23706  000A92  0EFF               	movlw	255
 23707  000A94  22E2               	addwfc	fsr1h,f,c
 23708  000A96  0012               	return		;funcret
 23709  000A98                     __end_of_cal_current_10A:
 23710                           	opt callstack 0
 23711                           
 23712 ;; *************** function _check_range *****************
 23713 ;; Defined at:
 23714 ;;		line 317 in file "daq.c"
 23715 ;; Parameters:    Size  Location     Type
 23716 ;;  value           2  [STACK] const short 
 23717 ;;  window          2  [STACK] const short 
 23718 ;;  standard        2  [STACK] const short 
 23719 ;; Auto vars:     Size  Location     Type
 23720 ;;		None
 23721 ;; Return value:  Size  Location     Type
 23722 ;;                  1  [STACK] _Bool 
 23723 ;; Registers used:
 23724 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23725 ;; Tracked objects:
 23726 ;;		On entry : 0/1
 23727 ;;		On exit  : 0/0
 23728 ;;		Unchanged: 0/0
 23729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23734 ;;Total ram usage:        0 bytes
 23735 ;; Hardware stack levels used:    1
 23736 ;; Hardware stack levels required when called:   15
 23737 ;; This function calls:
 23738 ;;		Nothing
 23739 ;; This function is called by:
 23740 ;;		_cal_current_zero
 23741 ;;		_cal_current_10A
 23742 ;; This function uses a reentrant model
 23743 ;;
 23744                           
 23745                           	psect	text74
 23746  00178A                     __ptext74:
 23747                           	opt callstack 0
 23748  00178A                     _check_range:
 23749                           	opt callstack 13
 23750                           
 23751                           ;daq.c: 317: static _Bool check_range(const int16_t value, const int16_t window, const i
      +                          nt16_t standard);daq.c: 318: {;daq.c: 319:  if (value > (standard + window))
 23752                           ;stkvar	_value @ sp[(0)+-2]
 23753                           ;stkvar	_window @ sp[(0)+-4]
 23754                           ;stkvar	_standard @ sp[(0)+-6]
 23755                           
 23756                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23757                           ;incstack = 0
 23758  00178A  0EFA               	movlw	-6
 23759  00178C  006F FF8C  F034    	movff	plusw1,btemp+10
 23760  001792  0EFB               	movlw	-5
 23761  001794  006F FF8C  F035    	movff	plusw1,btemp+11
 23762  00179A  0EFC               	movlw	-4
 23763  00179C  50E3               	movf	plusw1,w,c
 23764  00179E  2634               	addwf	(btemp+10)^0,f,c
 23765  0017A0  0EFD               	movlw	-3
 23766  0017A2  50E3               	movf	plusw1,w,c
 23767  0017A4  2235               	addwfc	(btemp+11)^0,f,c
 23768  0017A6  0EFE               	movlw	-2
 23769  0017A8  50E3               	movf	plusw1,w,c
 23770  0017AA  5C34               	subwf	(btemp+10)^0,w,c
 23771  0017AC  5035               	movf	(btemp+11)^0,w,c
 23772  0017AE  0A80               	xorlw	128
 23773  0017B0  6E2A               	movwf	btemp^0,c
 23774  0017B2  0EFF               	movlw	-1
 23775  0017B4  50E3               	movf	plusw1,w,c
 23776  0017B6  0A80               	xorlw	128
 23777  0017B8  582A               	subwfb	btemp^0,w,c
 23778  0017BA  B0D8               	btfsc	status,0,c
 23779  0017BC  D002               	goto	l13007
 23780  0017BE                     u12440:
 23781                           
 23782                           ;daq.c: 320:   return 0;
 23783  0017BE  0E00               	movlw	0
 23784  0017C0  D01E               	goto	L23
 23785  0017C2                     l13007:
 23786                           
 23787                           ;daq.c: 321:  if (value < (standard - window))
 23788                           ;stkvar	_window @ sp[(0)+-4]
 23789                           ;stkvar	_standard @ sp[(0)+-6]
 23790  0017C2  0EFA               	movlw	-6
 23791  0017C4  006F FF8C  F034    	movff	plusw1,btemp+10
 23792  0017CA  0EFB               	movlw	-5
 23793  0017CC  006F FF8C  F035    	movff	plusw1,btemp+11
 23794  0017D2  0EFC               	movlw	-4
 23795  0017D4  50E3               	movf	plusw1,w,c
 23796  0017D6  5E34               	subwf	(btemp+10)^0,f,c
 23797  0017D8  0EFD               	movlw	-3
 23798  0017DA  50E3               	movf	plusw1,w,c
 23799  0017DC  5A35               	subwfb	(btemp+11)^0,f,c
 23800                           
 23801                           ;stkvar	_value @ sp[(0)+-2]
 23802  0017DE  0EFE               	movlw	-2
 23803  0017E0  006F FF8C  F02A    	movff	plusw1,btemp
 23804  0017E6  5034               	movf	(btemp+10)^0,w,c
 23805  0017E8  5C2A               	subwf	btemp^0,w,c
 23806  0017EA  0EFF               	movlw	-1
 23807  0017EC  50E3               	movf	plusw1,w,c
 23808  0017EE  0A80               	xorlw	128
 23809  0017F0  6E2A               	movwf	btemp^0,c
 23810  0017F2  5035               	movf	(btemp+11)^0,w,c
 23811  0017F4  0A80               	xorlw	128
 23812  0017F6  582A               	subwfb	btemp^0,w,c
 23813  0017F8  A0D8               	btfss	status,0,c
 23814  0017FA  D7E1               	goto	u12440
 23815                           
 23816                           ;daq.c: 323:  return 1;
 23817  0017FC  0E01               	movlw	1
 23818  0017FE                     L23:
 23819  0017FE  6E2A               	movwf	btemp^0,c
 23820                           
 23821                           ; _check_range: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
 23822  001800  0EFA               	movlw	250
 23823  001802  26E1               	addwf	fsr1l,f,c
 23824  001804  0EFF               	movlw	255
 23825  001806  22E2               	addwfc	fsr1h,f,c
 23826  001808  0012               	return		;funcret
 23827  00180A                     __end_of_check_range:
 23828                           	opt callstack 0
 23829                           
 23830 ;; *************** function _convert_adc_data *****************
 23831 ;; Defined at:
 23832 ;;		line 51 in file "mbmc.c"
 23833 ;; Parameters:    Size  Location     Type
 23834 ;;		None
 23835 ;; Auto vars:     Size  Location     Type
 23836 ;;  i               1  [STACK] unsigned char 
 23837 ;; Return value:  Size  Location     Type
 23838 ;;                  1  [STACK] void 
 23839 ;; Registers used:
 23840 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23841 ;; Tracked objects:
 23842 ;;		On entry : 0/2
 23843 ;;		On exit  : 0/0
 23844 ;;		Unchanged: 0/0
 23845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23850 ;;Total ram usage:        0 bytes
 23851 ;; Hardware stack levels used:    1
 23852 ;; Hardware stack levels required when called:   18
 23853 ;; This function calls:
 23854 ;;		_conv_raw_result
 23855 ;;		_lp_filter
 23856 ;; This function is called by:
 23857 ;;		_main
 23858 ;; This function uses a reentrant model
 23859 ;;
 23860                           
 23861                           	psect	text75
 23862  000C0E                     __ptext75:
 23863                           	opt callstack 0
 23864  000C0E                     _convert_adc_data:
 23865                           	opt callstack 0
 23866                           
 23867                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23868  000C0E  52E6               	movf	postinc1,f,c
 23869                           
 23870                           ;mbmc.c: 53:  uint8_t i = 0;
 23871                           ;stkvar	_i @ sp[(-1)+0]
 23872                           
 23873                           ;incstack = 0
 23874  000C10  0EFF               	movlw	-1
 23875  000C12  6AE3               	clrf	plusw1,c
 23876  000C14                     l14569:
 23877                           
 23878                           ;mbmc.c: 56:   if (V.calib) {
 23879  000C14  0102               	movlb	2	; () banked
 23880  000C16  51B0               	movf	(_V+169)& (0+255),w,b	;volatile
 23881  000C18  B4D8               	btfsc	status,2,c
 23882  000C1A  D01B               	goto	l14573
 23883                           
 23884                           ; BSR set to: 2
 23885                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
 23886  000C1C  0E01               	movlw	1
 23887  000C1E  6EE6               	movwf	postinc1,c
 23888                           
 23889                           ;stkvar	_i @ sp[(-2)+0]
 23890  000C20  0EFE               	movlw	-2
 23891  000C22  50E3               	movf	plusw1,w,c
 23892  000C24  6EE6               	movwf	postinc1,c
 23893  000C26  0E01               	movlw	1
 23894  000C28  6EE6               	movwf	postinc1,c
 23895                           
 23896                           ;stkvar	_i @ sp[(-4)+0]
 23897  000C2A  0EFC               	movlw	-4
 23898  000C2C  50E3               	movf	plusw1,w,c
 23899  000C2E  6EE6               	movwf	postinc1,c
 23900  000C30  EC00  F0C9         	call	_conv_raw_result	;wreg free
 23901  000C34  0060  F0AB  FFE6   	movff	btemp,postinc1
 23902  000C3A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23903  000C40  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 23904  000C46  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 23905  000C4C  EC36  F0EF         	call	_lp_filter	;wreg free
 23906  000C50  D01A               	goto	L24
 23907  000C52                     l14573:
 23908                           
 23909                           ; BSR set to: 2
 23910                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
 23911  000C52  0E00               	movlw	0
 23912  000C54  6EE6               	movwf	postinc1,c
 23913                           
 23914                           ;stkvar	_i @ sp[(-2)+0]
 23915  000C56  0EFE               	movlw	-2
 23916  000C58  50E3               	movf	plusw1,w,c
 23917  000C5A  6EE6               	movwf	postinc1,c
 23918  000C5C  0E00               	movlw	0
 23919  000C5E  6EE6               	movwf	postinc1,c
 23920                           
 23921                           ;stkvar	_i @ sp[(-4)+0]
 23922  000C60  0EFC               	movlw	-4
 23923  000C62  50E3               	movf	plusw1,w,c
 23924  000C64  6EE6               	movwf	postinc1,c
 23925  000C66  EC00  F0C9         	call	_conv_raw_result	;wreg free
 23926  000C6A  0060  F0AB  FFE6   	movff	btemp,postinc1
 23927  000C70  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23928  000C76  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 23929  000C7C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 23930  000C82  EC36  F0EF         	call	_lp_filter	;wreg free
 23931  000C86                     L24:
 23932                           
 23933                           ;stkvar	_i @ sp[(-1)+0]
 23934  000C86  0EFF               	movlw	-1
 23935  000C88  50E3               	movf	plusw1,w,c
 23936  000C8A  0D04               	mullw	4
 23937  000C8C  0EFF               	movlw	low _C
 23938  000C8E  24F3               	addwf	243,w,c
 23939  000C90  6ED9               	movwf	fsr2l,c
 23940  000C92  0E08               	movlw	high _C
 23941  000C94  20F4               	addwfc	prodh,w,c
 23942  000C96  6EDA               	movwf	fsr2h,c
 23943  000C98  0060  F0AB  FFDE   	movff	btemp,postinc2
 23944  000C9E  0060  F0AF  FFDE   	movff	btemp+1,postinc2
 23945  000CA4  0060  F0B3  FFDE   	movff	btemp+2,postinc2
 23946  000CAA  0060  F0B7  FFDE   	movff	btemp+3,postinc2
 23947                           
 23948                           ;mbmc.c: 61:  } while (++i < 16);
 23949                           ;stkvar	_i @ sp[(-1)+0]
 23950  000CB0  0EFF               	movlw	-1
 23951  000CB2  2AE3               	incf	plusw1,f,c
 23952  000CB4  0EFF               	movlw	-1
 23953  000CB6  006F FF8C  F02A    	movff	plusw1,btemp
 23954  000CBC  0E0F               	movlw	15
 23955  000CBE  642A               	cpfsgt	btemp^0,c
 23956  000CC0  D7A9               	goto	l14569
 23957                           
 23958                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23959  000CC2  52E5               	movf	postdec1,f,c
 23960  000CC4  0012               	return		;funcret
 23961  000CC6                     __end_of_convert_adc_data:
 23962                           	opt callstack 0
 23963                           
 23964 ;; *************** function _clear_hid_pflags *****************
 23965 ;; Defined at:
 23966 ;;		line 67 in file "hid.c"
 23967 ;; Parameters:    Size  Location     Type
 23968 ;;  h               2  [STACK] PTR struct H_data
 23969 ;;		 -> H(9), 
 23970 ;; Auto vars:     Size  Location     Type
 23971 ;;		None
 23972 ;; Return value:  Size  Location     Type
 23973 ;;                  1  [STACK] void 
 23974 ;; Registers used:
 23975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 23976 ;; Tracked objects:
 23977 ;;		On entry : 3E/0
 23978 ;;		On exit  : 0/0
 23979 ;;		Unchanged: 0/0
 23980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23985 ;;Total ram usage:        0 bytes
 23986 ;; Hardware stack levels used:    1
 23987 ;; Hardware stack levels required when called:   15
 23988 ;; This function calls:
 23989 ;;		Nothing
 23990 ;; This function is called by:
 23991 ;;		_main
 23992 ;; This function uses a reentrant model
 23993 ;;
 23994                           
 23995                           	psect	text76
 23996  001B92                     __ptext76:
 23997                           	opt callstack 0
 23998  001B92                     _clear_hid_pflags:
 23999                           	opt callstack 15
 24000                           
 24001                           ;hid.c: 67: void clear_hid_pflags(H_data* h);hid.c: 68: {;hid.c: 69:  h->select_p = SW_O
      +                          FF;
 24002                           ;stkvar	_h @ sp[(0)+-2]
 24003                           
 24004                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24005                           ;incstack = 0
 24006  001B92  0EFE               	movlw	-2
 24007  001B94  006F FF8C  F034    	movff	plusw1,btemp+10
 24008  001B9A  0EFF               	movlw	-1
 24009  001B9C  006F FF8C  F035    	movff	plusw1,btemp+11
 24010  001BA2  0E03               	movlw	3
 24011  001BA4  2434               	addwf	(btemp+10)^0,w,c
 24012  001BA6  6ED9               	movwf	fsr2l,c
 24013  001BA8  0E00               	movlw	0
 24014  001BAA  2035               	addwfc	(btemp+11)^0,w,c
 24015  001BAC  6EDA               	movwf	fsr2h,c
 24016  001BAE  0E00               	movlw	0
 24017  001BB0  6EDF               	movwf	indf2,c
 24018                           
 24019                           ;hid.c: 70:  h->enter_p = SW_OFF;
 24020                           ;stkvar	_h @ sp[(0)+-2]
 24021  001BB2  0EFE               	movlw	-2
 24022  001BB4  006F FF8C  F034    	movff	plusw1,btemp+10
 24023  001BBA  0EFF               	movlw	-1
 24024  001BBC  006F FF8C  F035    	movff	plusw1,btemp+11
 24025  001BC2  0E05               	movlw	5
 24026  001BC4  2434               	addwf	(btemp+10)^0,w,c
 24027  001BC6  6ED9               	movwf	fsr2l,c
 24028  001BC8  0E00               	movlw	0
 24029  001BCA  2035               	addwfc	(btemp+11)^0,w,c
 24030  001BCC  6EDA               	movwf	fsr2h,c
 24031  001BCE  0E00               	movlw	0
 24032  001BD0  6EDF               	movwf	indf2,c
 24033                           
 24034                           ;hid.c: 71:  h->calib_p = SW_OFF;
 24035                           ;stkvar	_h @ sp[(0)+-2]
 24036  001BD2  0EFE               	movlw	-2
 24037  001BD4  006F FF8C  F034    	movff	plusw1,btemp+10
 24038  001BDA  0EFF               	movlw	-1
 24039  001BDC  006F FF8C  F035    	movff	plusw1,btemp+11
 24040  001BE2  0E07               	movlw	7
 24041  001BE4  2434               	addwf	(btemp+10)^0,w,c
 24042  001BE6  6ED9               	movwf	fsr2l,c
 24043  001BE8  0E00               	movlw	0
 24044  001BEA  2035               	addwfc	(btemp+11)^0,w,c
 24045  001BEC  6EDA               	movwf	fsr2h,c
 24046  001BEE  0E00               	movlw	0
 24047  001BF0  6EDF               	movwf	indf2,c
 24048                           
 24049                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 24050  001BF2  52E5               	movf	postdec1,f,c
 24051  001BF4  52E5               	movf	postdec1,f,c
 24052  001BF6  0012               	return		;funcret
 24053  001BF8                     __end_of_clear_hid_pflags:
 24054                           	opt callstack 0
 24055                           
 24056 ;; *************** function _check_help *****************
 24057 ;; Defined at:
 24058 ;;		line 40 in file "mconfig.c"
 24059 ;; Parameters:    Size  Location     Type
 24060 ;;  flipper         1  [STACK] const _Bool 
 24061 ;; Auto vars:     Size  Location     Type
 24062 ;;  estatus         1    0        _Bool 
 24063 ;; Return value:  Size  Location     Type
 24064 ;;                  1  [STACK] _Bool 
 24065 ;; Registers used:
 24066 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24067 ;; Tracked objects:
 24068 ;;		On entry : 3F/2
 24069 ;;		On exit  : 0/0
 24070 ;;		Unchanged: 0/0
 24071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24076 ;;Total ram usage:        0 bytes
 24077 ;; Hardware stack levels used:    1
 24078 ;; Hardware stack levels required when called:   27
 24079 ;; This function calls:
 24080 ;;		_StartTimer
 24081 ;;		_TimerDone
 24082 ;;		_display_help
 24083 ;;		_display_info
 24084 ;;		_get_vterm_ptr
 24085 ;;		_help_button
 24086 ;;		_mode_lamp_bright
 24087 ;;		_mode_lamp_dim
 24088 ;;		_set_display_info
 24089 ;;		_set_temp_display_help
 24090 ;;		_set_vterm
 24091 ;;		_sprintf
 24092 ;;		_update_lcd
 24093 ;;		_vterm_dump
 24094 ;; This function is called by:
 24095 ;;		_main
 24096 ;; This function uses a reentrant model
 24097 ;;
 24098                           
 24099                           	psect	text77
 24100  01D88C                     __ptext77:
 24101                           	opt callstack 0
 24102  01D88C                     _check_help:
 24103                           	opt callstack 3
 24104                           
 24105                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
 24106                           
 24107                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24108                           ;incstack = 0
 24109  01D88C  EC04  F013         	call	_help_button	;wreg free
 24110  01D890  502A               	movf	btemp^0,w,c
 24111  01D892  B4D8               	btfsc	status,2,c
 24112  01D894  D0D0               	goto	l17639
 24113  01D896  ECE5  F017         	call	_display_info	;wreg free
 24114  01D89A  042A               	decf	btemp^0,w,c
 24115  01D89C  B4D8               	btfsc	status,2,c
 24116  01D89E  D0CB               	goto	l17639
 24117                           
 24118                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
 24119  01D8A0  0EDC               	movlw	220
 24120  01D8A2  6EE6               	movwf	postinc1,c
 24121  01D8A4  0E05               	movlw	5
 24122  01D8A6  6EE6               	movwf	postinc1,c
 24123  01D8A8  0E0B               	movlw	11
 24124  01D8AA  6EE6               	movwf	postinc1,c
 24125  01D8AC  EC49  F012         	call	_StartTimer	;wreg free
 24126                           
 24127                           ;mconfig.c: 48:   if (V.debug)
 24128  01D8B0  0102               	movlb	2	; () banked
 24129  01D8B2  B39F               	btfsc	(_V+152)& (0+255),1,b	;volatile
 24130                           
 24131                           ; BSR set to: 2
 24132                           ;mconfig.c: 49:    vterm_dump();
 24133  01D8B4  EC7A  F0F2         	call	_vterm_dump	;wreg free
 24134                           
 24135                           ;mconfig.c: 51:   set_vterm(1);
 24136  01D8B8  0E01               	movlw	1
 24137  01D8BA  6EE6               	movwf	postinc1,c
 24138  01D8BC  ECDC  F016         	call	_set_vterm	;wreg free
 24139                           
 24140                           ;mconfig.c: 52:   set_temp_display_help(display_info());
 24141  01D8C0  ECE5  F017         	call	_display_info	;wreg free
 24142  01D8C4  502A               	movf	btemp^0,w,c
 24143  01D8C6  6EE6               	movwf	postinc1,c
 24144  01D8C8  EC8D  F017         	call	_set_temp_display_help	;wreg free
 24145                           
 24146                           ; BSR set to: 2
 24147                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
 24148  01D8CC  0E01               	movlw	1
 24149  01D8CE  6EE6               	movwf	postinc1,c
 24150  01D8D0  ECEB  F016         	call	_set_display_info	;wreg free
 24151                           
 24152                           ;mconfig.c: 54:   if (flipper) {
 24153                           ;stkvar	_flipper @ sp[(0)+-1]
 24154  01D8D4  0EFF               	movlw	-1
 24155  01D8D6  50E3               	movf	plusw1,w,c
 24156  01D8D8  B4D8               	btfsc	status,2,c
 24157  01D8DA  D019               	goto	l17625
 24158                           
 24159                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
 24160  01D8DC  0EB6               	movlw	low STR_83
 24161  01D8DE  6EE6               	movwf	postinc1,c
 24162  01D8E0  0EFF               	movlw	high STR_83
 24163  01D8E2  6EE6               	movwf	postinc1,c
 24164  01D8E4  0E5E               	movlw	low STR_85
 24165  01D8E6  6EE6               	movwf	postinc1,c
 24166  01D8E8  0EFF               	movlw	high STR_85
 24167  01D8EA  6EE6               	movwf	postinc1,c
 24168  01D8EC  0E01               	movlw	1
 24169  01D8EE  6EE6               	movwf	postinc1,c
 24170  01D8F0  0E00               	movlw	0
 24171  01D8F2  6EE6               	movwf	postinc1,c
 24172  01D8F4  EC53  F014         	call	_get_vterm_ptr	;wreg free
 24173  01D8F8  0060  F0AB  FFE6   	movff	btemp,postinc1
 24174  01D8FE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24175  01D904  0E06               	movlw	6
 24176  01D906  6EE6               	movwf	postinc1,c
 24177  01D908  EC5B  F000         	call	_sprintf	;wreg free
 24178                           
 24179                           ;mconfig.c: 56:   } else {
 24180  01D90C  D018               	goto	l1840
 24181  01D90E                     l17625:
 24182                           
 24183                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
 24184  01D90E  0ECC               	movlw	low STR_84
 24185  01D910  6EE6               	movwf	postinc1,c
 24186  01D912  0EFF               	movlw	high STR_84
 24187  01D914  6EE6               	movwf	postinc1,c
 24188  01D916  0E5E               	movlw	low STR_85
 24189  01D918  6EE6               	movwf	postinc1,c
 24190  01D91A  0EFF               	movlw	high STR_85
 24191  01D91C  6EE6               	movwf	postinc1,c
 24192  01D91E  0E01               	movlw	1
 24193  01D920  6EE6               	movwf	postinc1,c
 24194  01D922  0E00               	movlw	0
 24195  01D924  6EE6               	movwf	postinc1,c
 24196  01D926  EC53  F014         	call	_get_vterm_ptr	;wreg free
 24197  01D92A  0060  F0AB  FFE6   	movff	btemp,postinc1
 24198  01D930  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24199  01D936  0E06               	movlw	6
 24200  01D938  6EE6               	movwf	postinc1,c
 24201  01D93A  EC5B  F000         	call	_sprintf	;wreg free
 24202  01D93E                     l1840:
 24203                           
 24204                           ; BSR set to: 0
 24205                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
 24206  01D93E  0102               	movlb	2	; () banked
 24207  01D940  399F               	swapf	(_V+152)& (0+255),w,b	;volatile
 24208  01D942  32E8               	rrcf	wreg,f,c
 24209  01D944  32E8               	rrcf	wreg,f,c
 24210  01D946  0B03               	andlw	3
 24211  01D948  0D2C               	mullw	44
 24212  01D94A  0E16               	movlw	22
 24213  01D94C  26F3               	addwf	243,f,c
 24214  01D94E  0E00               	movlw	0
 24215  01D950  22F4               	addwfc	244,f,c
 24216  01D952  0E23               	movlw	low _T
 24217  01D954  6E34               	movwf	(btemp+10)^0,c
 24218  01D956  0EF8               	movlw	high _T
 24219  01D958  6E35               	movwf	(btemp+11)^0,c
 24220  01D95A  50F3               	movf	243,w,c
 24221  01D95C  2634               	addwf	(btemp+10)^0,f,c
 24222  01D95E  50F4               	movf	244,w,c
 24223  01D960  2235               	addwfc	(btemp+11)^0,f,c
 24224  01D962  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 24225  01D968  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 24226  01D96E  0EC2               	movlw	low STR_87
 24227  01D970  6EE6               	movwf	postinc1,c
 24228  01D972  0EFF               	movlw	high STR_87
 24229  01D974  6EE6               	movwf	postinc1,c
 24230  01D976  0E01               	movlw	1
 24231  01D978  6EE6               	movwf	postinc1,c
 24232  01D97A  0E01               	movlw	1
 24233  01D97C  6EE6               	movwf	postinc1,c
 24234  01D97E  EC53  F014         	call	_get_vterm_ptr	;wreg free
 24235  01D982  0060  F0AB  FFE6   	movff	btemp,postinc1
 24236  01D988  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24237  01D98E  0E06               	movlw	6
 24238  01D990  6EE6               	movwf	postinc1,c
 24239  01D992  EC5B  F000         	call	_sprintf	;wreg free
 24240                           
 24241                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
 24242  01D996  0102               	movlb	2	; () banked
 24243  01D998  399F               	swapf	(_V+152)& (0+255),w,b	;volatile
 24244  01D99A  32E8               	rrcf	wreg,f,c
 24245  01D99C  32E8               	rrcf	wreg,f,c
 24246  01D99E  0B03               	andlw	3
 24247  01D9A0  0D2C               	mullw	44
 24248  01D9A2  0E23               	movlw	low _T
 24249  01D9A4  6E34               	movwf	(btemp+10)^0,c
 24250  01D9A6  0EF8               	movlw	high _T
 24251  01D9A8  6E35               	movwf	(btemp+11)^0,c
 24252  01D9AA  50F3               	movf	243,w,c
 24253  01D9AC  2634               	addwf	(btemp+10)^0,f,c
 24254  01D9AE  50F4               	movf	244,w,c
 24255  01D9B0  2235               	addwfc	(btemp+11)^0,f,c
 24256  01D9B2  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 24257  01D9B8  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 24258  01D9BE  0EC2               	movlw	low STR_87
 24259  01D9C0  6EE6               	movwf	postinc1,c
 24260  01D9C2  0EFF               	movlw	high STR_87
 24261  01D9C4  6EE6               	movwf	postinc1,c
 24262  01D9C6  0E01               	movlw	1
 24263  01D9C8  6EE6               	movwf	postinc1,c
 24264  01D9CA  0E02               	movlw	2
 24265  01D9CC  6EE6               	movwf	postinc1,c
 24266  01D9CE  EC53  F014         	call	_get_vterm_ptr	;wreg free
 24267  01D9D2  0060  F0AB  FFE6   	movff	btemp,postinc1
 24268  01D9D8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24269  01D9DE  0E06               	movlw	6
 24270  01D9E0  6EE6               	movwf	postinc1,c
 24271  01D9E2  EC5B  F000         	call	_sprintf	;wreg free
 24272                           
 24273                           ; BSR set to: 0
 24274                           ;mconfig.c: 61:   V.help_id++;
 24275  01D9E6  EE20  F29F         	lfsr	2,_V+152	;volatile
 24276  01D9EA  38DF               	swapf	223,w,c
 24277  01D9EC  6E35               	movwf	(btemp+11)^0,c
 24278  01D9EE  3235               	rrcf	(btemp+11)^0,f,c
 24279  01D9F0  3035               	rrcf	(btemp+11)^0,w,c
 24280  01D9F2  0B03               	andlw	3
 24281  01D9F4  6E35               	movwf	(btemp+11)^0,c
 24282  01D9F6  2A35               	incf	(btemp+11)^0,f,c
 24283  01D9F8  3A35               	swapf	(btemp+11)^0,f,c
 24284  01D9FA  3635               	rlcf	(btemp+11)^0,f,c
 24285  01D9FC  3635               	rlcf	(btemp+11)^0,f,c
 24286  01D9FE  50DF               	movf	223,w,c
 24287  01DA00  1835               	xorwf	(btemp+11)^0,w,c
 24288  01DA02  0B3F               	andlw	-193
 24289  01DA04  1835               	xorwf	(btemp+11)^0,w,c
 24290  01DA06  6EDF               	movwf	223,c
 24291                           
 24292                           ; BSR set to: 0
 24293                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
 24294  01DA08  0EB8               	movlw	184
 24295  01DA0A  6EE6               	movwf	postinc1,c
 24296  01DA0C  0E0B               	movlw	11
 24297  01DA0E  6EE6               	movwf	postinc1,c
 24298  01DA10  0E09               	movlw	9
 24299  01DA12  6EE6               	movwf	postinc1,c
 24300  01DA14  EC49  F012         	call	_StartTimer	;wreg free
 24301                           
 24302                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
 24303  01DA18  0EB8               	movlw	184
 24304  01DA1A  6EE6               	movwf	postinc1,c
 24305  01DA1C  0E0B               	movlw	11
 24306  01DA1E  6EE6               	movwf	postinc1,c
 24307  01DA20  0E07               	movlw	7
 24308  01DA22  6EE6               	movwf	postinc1,c
 24309  01DA24  EC49  F012         	call	_StartTimer	;wreg free
 24310                           
 24311                           ;mconfig.c: 64:   mode_lamp_bright();
 24312  01DA28  ECA4  F017         	call	_mode_lamp_bright	;wreg free
 24313                           
 24314                           ;mconfig.c: 65:   update_lcd(1);
 24315  01DA2C  0E01               	movlw	1
 24316  01DA2E  6EE6               	movwf	postinc1,c
 24317  01DA30  EC4B  F0F8         	call	_update_lcd	;wreg free
 24318                           
 24319                           ;mconfig.c: 67:  } else {
 24320  01DA34  D032               	goto	l1841
 24321  01DA36                     l17639:
 24322                           
 24323                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
 24324  01DA36  0E09               	movlw	9
 24325  01DA38  6EE6               	movwf	postinc1,c
 24326  01DA3A  ECD5  F014         	call	_TimerDone	;wreg free
 24327  01DA3E  502A               	movf	btemp^0,w,c
 24328  01DA40  B4D8               	btfsc	status,2,c
 24329  01DA42  D02B               	goto	l1841
 24330                           
 24331                           ;mconfig.c: 69:    set_vterm(0);
 24332  01DA44  0E00               	movlw	0
 24333  01DA46  6EE6               	movwf	postinc1,c
 24334  01DA48  ECDC  F016         	call	_set_vterm	;wreg free
 24335                           
 24336                           ;mconfig.c: 70:    V.help = 0;
 24337  01DA4C  0102               	movlb	2	; () banked
 24338  01DA4E  959F               	bcf	(_V+152)& (0+255),2,b	;volatile
 24339                           
 24340                           ; BSR set to: 2
 24341                           ;mconfig.c: 71:    set_display_info(display_help());
 24342  01DA50  ECE9  F017         	call	_display_help	;wreg free
 24343  01DA54  502A               	movf	btemp^0,w,c
 24344  01DA56  6EE6               	movwf	postinc1,c
 24345  01DA58  ECEB  F016         	call	_set_display_info	;wreg free
 24346                           
 24347                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
 24348  01DA5C  0060  FA67  FFE6   	movff	_V+146,postinc1
 24349  01DA62  0060  FA6B  FFE6   	movff	_V+147,postinc1
 24350  01DA68  EC15  F017         	call	_mode_lamp_dim	;wreg free
 24351                           
 24352                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
 24353  01DA6C  0E0B               	movlw	11
 24354  01DA6E  6EE6               	movwf	postinc1,c
 24355  01DA70  ECD5  F014         	call	_TimerDone	;wreg free
 24356  01DA74  502A               	movf	btemp^0,w,c
 24357  01DA76  B4D8               	btfsc	status,2,c
 24358  01DA78  D010               	goto	l1841
 24359                           
 24360                           ;mconfig.c: 74:     V.flipper = !V.flipper;
 24361  01DA7A  0102               	movlb	2	; () banked
 24362  01DA7C  51AF               	movf	(_V+168)& (0+255),w,b	;volatile
 24363  01DA7E  A4D8               	btfss	status,2,c
 24364  01DA80  D002               	goto	u17220
 24365  01DA82  0E01               	movlw	1
 24366  01DA84  D001               	goto	u17230
 24367  01DA86                     u17220:
 24368  01DA86  0E00               	movlw	0
 24369  01DA88                     u17230:
 24370  01DA88  6FAF               	movwf	(_V+168)& (0+255),b	;volatile
 24371                           
 24372                           ; BSR set to: 2
 24373                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
 24374  01DA8A  0EDC               	movlw	220
 24375  01DA8C  6EE6               	movwf	postinc1,c
 24376  01DA8E  0E05               	movlw	5
 24377  01DA90  6EE6               	movwf	postinc1,c
 24378  01DA92  0E0B               	movlw	11
 24379  01DA94  6EE6               	movwf	postinc1,c
 24380  01DA96  EC49  F012         	call	_StartTimer	;wreg free
 24381  01DA9A                     l1841:
 24382                           
 24383                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 24384  01DA9A  52E5               	movf	postdec1,f,c
 24385  01DA9C  0012               	return		;funcret
 24386  01DA9E                     __end_of_check_help:
 24387                           	opt callstack 0
 24388                           
 24389 ;; *************** function _vterm_dump *****************
 24390 ;; Defined at:
 24391 ;;		line 124 in file "mconfig.c"
 24392 ;; Parameters:    Size  Location     Type
 24393 ;;		None
 24394 ;; Auto vars:     Size  Location     Type
 24395 ;;		None
 24396 ;; Return value:  Size  Location     Type
 24397 ;;                  1  [STACK] void 
 24398 ;; Registers used:
 24399 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24400 ;; Tracked objects:
 24401 ;;		On entry : 3F/2
 24402 ;;		On exit  : 0/0
 24403 ;;		Unchanged: 0/0
 24404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24409 ;;Total ram usage:        0 bytes
 24410 ;; Hardware stack levels used:    1
 24411 ;; Hardware stack levels required when called:   26
 24412 ;; This function calls:
 24413 ;;		_WaitMs
 24414 ;;		_eaDogM_WriteStringAtPos
 24415 ;;		_get_vterm_ptr
 24416 ;;		_sprintf
 24417 ;;		_wait_lcd_done
 24418 ;; This function is called by:
 24419 ;;		_check_help
 24420 ;; This function uses a reentrant model
 24421 ;;
 24422                           
 24423                           	psect	text78
 24424  01E4F4                     __ptext78:
 24425                           	opt callstack 0
 24426  01E4F4                     _vterm_dump:
 24427                           	opt callstack 3
 24428                           
 24429                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
 24430                           
 24431                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24432                           ;incstack = 0
 24433  01E4F4  0E01               	movlw	1
 24434  01E4F6  6EE6               	movwf	postinc1,c
 24435  01E4F8  0E00               	movlw	0
 24436  01E4FA  6EE6               	movwf	postinc1,c
 24437  01E4FC  EC53  F014         	call	_get_vterm_ptr	;wreg free
 24438  01E500  0060  F0AB  FFE6   	movff	btemp,postinc1
 24439  01E506  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24440  01E50C  0E00               	movlw	0
 24441  01E50E  6EE6               	movwf	postinc1,c
 24442  01E510  0E00               	movlw	0
 24443  01E512  6EE6               	movwf	postinc1,c
 24444  01E514  EC53  F014         	call	_get_vterm_ptr	;wreg free
 24445  01E518  0060  F0AB  FFE6   	movff	btemp,postinc1
 24446  01E51E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24447  01E524  0EA7               	movlw	low STR_89
 24448  01E526  6EE6               	movwf	postinc1,c
 24449  01E528  0EFF               	movlw	high STR_89
 24450  01E52A  6EE6               	movwf	postinc1,c
 24451  01E52C  0E08               	movlw	low (_V+1)
 24452  01E52E  6EE6               	movwf	postinc1,c
 24453  01E530  0E02               	movlw	high (_V+1)
 24454  01E532  6EE6               	movwf	postinc1,c
 24455  01E534  0E08               	movlw	8
 24456  01E536  6EE6               	movwf	postinc1,c
 24457  01E538  EC5B  F000         	call	_sprintf	;wreg free
 24458                           
 24459                           ; BSR set to: 0
 24460                           ;mconfig.c: 127:  wait_lcd_done();
 24461  01E53C  EC5A  F016         	call	_wait_lcd_done	;wreg free
 24462                           
 24463                           ; BSR set to: 0
 24464                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 24465  01E540  0E08               	movlw	low (_V+1)
 24466  01E542  6EE6               	movwf	postinc1,c
 24467  01E544  0E02               	movlw	high (_V+1)
 24468  01E546  6EE6               	movwf	postinc1,c
 24469  01E548  0E00               	movlw	0
 24470  01E54A  6EE6               	movwf	postinc1,c
 24471  01E54C  0E00               	movlw	0
 24472  01E54E  6EE6               	movwf	postinc1,c
 24473  01E550  EC98  F009         	call	_eaDogM_WriteStringAtPos	;wreg free
 24474                           
 24475                           ; BSR set to: 59
 24476                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
 24477  01E554  0E01               	movlw	1
 24478  01E556  6EE6               	movwf	postinc1,c
 24479  01E558  0E01               	movlw	1
 24480  01E55A  6EE6               	movwf	postinc1,c
 24481  01E55C  EC53  F014         	call	_get_vterm_ptr	;wreg free
 24482  01E560  0060  F0AB  FFE6   	movff	btemp,postinc1
 24483  01E566  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24484  01E56C  0E00               	movlw	0
 24485  01E56E  6EE6               	movwf	postinc1,c
 24486  01E570  0E01               	movlw	1
 24487  01E572  6EE6               	movwf	postinc1,c
 24488  01E574  EC53  F014         	call	_get_vterm_ptr	;wreg free
 24489  01E578  0060  F0AB  FFE6   	movff	btemp,postinc1
 24490  01E57E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24491  01E584  0EA7               	movlw	low STR_89
 24492  01E586  6EE6               	movwf	postinc1,c
 24493  01E588  0EFF               	movlw	high STR_89
 24494  01E58A  6EE6               	movwf	postinc1,c
 24495  01E58C  0E08               	movlw	low (_V+1)
 24496  01E58E  6EE6               	movwf	postinc1,c
 24497  01E590  0E02               	movlw	high (_V+1)
 24498  01E592  6EE6               	movwf	postinc1,c
 24499  01E594  0E08               	movlw	8
 24500  01E596  6EE6               	movwf	postinc1,c
 24501  01E598  EC5B  F000         	call	_sprintf	;wreg free
 24502                           
 24503                           ; BSR set to: 0
 24504                           ;mconfig.c: 130:  wait_lcd_done();
 24505  01E59C  EC5A  F016         	call	_wait_lcd_done	;wreg free
 24506                           
 24507                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 24508  01E5A0  0E08               	movlw	low (_V+1)
 24509  01E5A2  6EE6               	movwf	postinc1,c
 24510  01E5A4  0E02               	movlw	high (_V+1)
 24511  01E5A6  6EE6               	movwf	postinc1,c
 24512  01E5A8  0E00               	movlw	0
 24513  01E5AA  6EE6               	movwf	postinc1,c
 24514  01E5AC  0E01               	movlw	1
 24515  01E5AE  6EE6               	movwf	postinc1,c
 24516  01E5B0  EC98  F009         	call	_eaDogM_WriteStringAtPos	;wreg free
 24517                           
 24518                           ;mconfig.c: 132:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
 24519  01E5B4  0E01               	movlw	1
 24520  01E5B6  6EE6               	movwf	postinc1,c
 24521  01E5B8  0E02               	movlw	2
 24522  01E5BA  6EE6               	movwf	postinc1,c
 24523  01E5BC  EC53  F014         	call	_get_vterm_ptr	;wreg free
 24524  01E5C0  0060  F0AB  FFE6   	movff	btemp,postinc1
 24525  01E5C6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24526  01E5CC  0E00               	movlw	0
 24527  01E5CE  6EE6               	movwf	postinc1,c
 24528  01E5D0  0E02               	movlw	2
 24529  01E5D2  6EE6               	movwf	postinc1,c
 24530  01E5D4  EC53  F014         	call	_get_vterm_ptr	;wreg free
 24531  01E5D8  0060  F0AB  FFE6   	movff	btemp,postinc1
 24532  01E5DE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24533  01E5E4  0EA7               	movlw	low STR_89
 24534  01E5E6  6EE6               	movwf	postinc1,c
 24535  01E5E8  0EFF               	movlw	high STR_89
 24536  01E5EA  6EE6               	movwf	postinc1,c
 24537  01E5EC  0E08               	movlw	low (_V+1)
 24538  01E5EE  6EE6               	movwf	postinc1,c
 24539  01E5F0  0E02               	movlw	high (_V+1)
 24540  01E5F2  6EE6               	movwf	postinc1,c
 24541  01E5F4  0E08               	movlw	8
 24542  01E5F6  6EE6               	movwf	postinc1,c
 24543  01E5F8  EC5B  F000         	call	_sprintf	;wreg free
 24544                           
 24545                           ; BSR set to: 0
 24546                           ;mconfig.c: 133:  wait_lcd_done();
 24547  01E5FC  EC5A  F016         	call	_wait_lcd_done	;wreg free
 24548                           
 24549                           ; BSR set to: 0
 24550                           ;mconfig.c: 134:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 24551  01E600  0E08               	movlw	low (_V+1)
 24552  01E602  6EE6               	movwf	postinc1,c
 24553  01E604  0E02               	movlw	high (_V+1)
 24554  01E606  6EE6               	movwf	postinc1,c
 24555  01E608  0E00               	movlw	0
 24556  01E60A  6EE6               	movwf	postinc1,c
 24557  01E60C  0E02               	movlw	2
 24558  01E60E  6EE6               	movwf	postinc1,c
 24559  01E610  EC98  F009         	call	_eaDogM_WriteStringAtPos	;wreg free
 24560                           
 24561                           ; BSR set to: 59
 24562                           ;mconfig.c: 135:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(3, 0), get_vterm_ptr(3,
      +                           1));
 24563  01E614  0E01               	movlw	1
 24564  01E616  6EE6               	movwf	postinc1,c
 24565  01E618  0E03               	movlw	3
 24566  01E61A  6EE6               	movwf	postinc1,c
 24567  01E61C  EC53  F014         	call	_get_vterm_ptr	;wreg free
 24568  01E620  0060  F0AB  FFE6   	movff	btemp,postinc1
 24569  01E626  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24570  01E62C  0E00               	movlw	0
 24571  01E62E  6EE6               	movwf	postinc1,c
 24572  01E630  0E03               	movlw	3
 24573  01E632  6EE6               	movwf	postinc1,c
 24574  01E634  EC53  F014         	call	_get_vterm_ptr	;wreg free
 24575  01E638  0060  F0AB  FFE6   	movff	btemp,postinc1
 24576  01E63E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24577  01E644  0EA7               	movlw	low STR_89
 24578  01E646  6EE6               	movwf	postinc1,c
 24579  01E648  0EFF               	movlw	high STR_89
 24580  01E64A  6EE6               	movwf	postinc1,c
 24581  01E64C  0E08               	movlw	low (_V+1)
 24582  01E64E  6EE6               	movwf	postinc1,c
 24583  01E650  0E02               	movlw	high (_V+1)
 24584  01E652  6EE6               	movwf	postinc1,c
 24585  01E654  0E08               	movlw	8
 24586  01E656  6EE6               	movwf	postinc1,c
 24587  01E658  EC5B  F000         	call	_sprintf	;wreg free
 24588                           
 24589                           ; BSR set to: 0
 24590                           ;mconfig.c: 136:  wait_lcd_done();
 24591  01E65C  EC5A  F016         	call	_wait_lcd_done	;wreg free
 24592                           
 24593                           ;mconfig.c: 137:  eaDogM_WriteStringAtPos(3, 0, V.buf);
 24594  01E660  0E08               	movlw	low (_V+1)
 24595  01E662  6EE6               	movwf	postinc1,c
 24596  01E664  0E02               	movlw	high (_V+1)
 24597  01E666  6EE6               	movwf	postinc1,c
 24598  01E668  0E00               	movlw	0
 24599  01E66A  6EE6               	movwf	postinc1,c
 24600  01E66C  0E03               	movlw	3
 24601  01E66E  6EE6               	movwf	postinc1,c
 24602  01E670  EC98  F009         	call	_eaDogM_WriteStringAtPos	;wreg free
 24603                           
 24604                           ; BSR set to: 59
 24605                           ;mconfig.c: 138:  WaitMs(3000);
 24606  01E674  0EB8               	movlw	184
 24607  01E676  6EE6               	movwf	postinc1,c
 24608  01E678  0E0B               	movlw	11
 24609  01E67A  6EE6               	movwf	postinc1,c
 24610  01E67C  EC57  F013         	call	_WaitMs	;wreg free
 24611                           
 24612                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 24613  01E680  0012               	return		;funcret
 24614  01E682                     __end_of_vterm_dump:
 24615                           	opt callstack 0
 24616                           
 24617 ;; *************** function _sprintf *****************
 24618 ;; Defined at:
 24619 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 24620 ;; Parameters:    Size  Location     Type
 24621 ;;  s               2  [STACK] PTR unsigned char 
 24622 ;;		 -> D.lcd(640), D(642), port_data(512), V(181), 
 24623 ;;  fmt             2  [STACK] PTR const unsigned char 
 24624 ;;		 -> STR_103(127), STR_101(3), STR_100(3), STR_99(21), 
 24625 ;;		 -> STR_98(21), STR_97(21), STR_96(21), STR_95(21), 
 24626 ;;		 -> STR_94(21), STR_93(26), STR_92(15), STR_91(15), 
 24627 ;;		 -> STR_90(15), STR_89(15), STR_88(10), STR_87(10), 
 24628 ;;		 -> STR_86(19), STR_85(19), STR_81(14), STR_80(28), 
 24629 ;;		 -> STR_79(28), STR_78(28), STR_77(22), STR_76(22), 
 24630 ;;		 -> STR_75(22), STR_74(22), STR_73(22), STR_72(22), 
 24631 ;;		 -> STR_71(22), STR_70(22), STR_69(22), STR_68(19), 
 24632 ;;		 -> STR_67(21), STR_66(21), STR_65(21), STR_64(22), 
 24633 ;;		 -> STR_63(22), STR_62(22), STR_61(22), STR_60(22), 
 24634 ;;		 -> STR_59(22), STR_58(22), STR_57(22), STR_56(22), 
 24635 ;;		 -> STR_55(21), STR_54(22), STR_53(22), STR_52(22), 
 24636 ;;		 -> STR_51(22), STR_50(22), STR_49(22), STR_48(24), 
 24637 ;;		 -> STR_47(24), STR_46(24), STR_45(30), STR_44(24), 
 24638 ;;		 -> STR_43(24), STR_42(23), STR_41(23), STR_40(23), 
 24639 ;;		 -> STR_39(23), STR_38(23), STR_37(23), STR_36(23), 
 24640 ;;		 -> STR_35(23), STR_34(23), STR_33(23), STR_32(23), 
 24641 ;;		 -> STR_31(23), STR_30(18), STR_29(17), STR_28(17), 
 24642 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(14), 
 24643 ;;		 -> STR_23(27), STR_22(27), STR_21(23), STR_20(22), 
 24644 ;;		 -> STR_19(22), STR_18(22), STR_17(22), STR_16(23), 
 24645 ;;		 -> STR_15(23), STR_14(23), STR_13(26), STR_12(22), 
 24646 ;;		 -> STR_11(21), STR_10(21), STR_9(21), STR_8(21), 
 24647 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 24648 ;;		 -> STR_2(21), STR_1(21), 
 24649 ;; Auto vars:     Size  Location     Type
 24650 ;;  f               6  [STACK] struct _IO_FILE
 24651 ;;  ap              2  [STACK] PTR void [1]
 24652 ;;		 -> ?_printf(2), ?_sprintf(2), 
 24653 ;;  ret             2    0        int 
 24654 ;; Return value:  Size  Location     Type
 24655 ;;                  2  [STACK] int 
 24656 ;; Registers used:
 24657 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24658 ;; Tracked objects:
 24659 ;;		On entry : 0/2
 24660 ;;		On exit  : 3F/0
 24661 ;;		Unchanged: 0/0
 24662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24667 ;;Total ram usage:        0 bytes
 24668 ;; Hardware stack levels used:    1
 24669 ;; Hardware stack levels required when called:   23
 24670 ;; This function calls:
 24671 ;;		_vfprintf
 24672 ;; This function is called by:
 24673 ;;		_main
 24674 ;;		_current_sensor_cal
 24675 ;;		_display_history
 24676 ;;		_check_help
 24677 ;;		_vterm_dump
 24678 ;;		_calc_bsoc
 24679 ;; This function uses a reentrant model
 24680 ;;
 24681                           
 24682                           	psect	text79
 24683  0000B6                     __ptext79:
 24684                           	opt callstack 0
 24685  0000B6                     _sprintf:
 24686                           	opt callstack 0
 24687                           
 24688                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 24689  0000B6  0E08               	movlw	8
 24690  0000B8  26E1               	addwf	fsr1l,f,c
 24691  0000BA  0E00               	movlw	0
 24692  0000BC  22E2               	addwfc	fsr1h,f,c
 24693                           
 24694                           ;incstack = 0
 24695 ;; hardware stack exceeded
 24696  0000BE  0EFE               	movlw	254
 24697  0000C0  6E34               	movwf	(btemp+10)^0,c
 24698  0000C2  0EFF               	movlw	255
 24699  0000C4  6E35               	movwf	(btemp+11)^0,c
 24700                           
 24701                           ;stkvar	?_sprintf @ sp[(-8)+-3]
 24702  0000C6  0EF5               	movlw	245
 24703  0000C8  24E1               	addwf	fsr1l,w,c
 24704  0000CA  6E32               	movwf	(btemp+8)^0,c
 24705  0000CC  0EFF               	movlw	255
 24706  0000CE  20E2               	addwfc	fsr1h,w,c
 24707  0000D0  6E33               	movwf	(btemp+9)^0,c
 24708  0000D2  5034               	movf	(btemp+10)^0,w,c
 24709  0000D4  2632               	addwf	(btemp+8)^0,f,c
 24710  0000D6  5035               	movf	(btemp+11)^0,w,c
 24711  0000D8  2233               	addwfc	(btemp+9)^0,f,c
 24712                           
 24713                           ;stkvar	_ap @ sp[(-8)+6]
 24714  0000DA  0EFF               	movlw	-1
 24715  0000DC  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 24716  0000E2  0EFE               	movlw	-2
 24717  0000E4  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 24718                           
 24719                           ;stkvar	_s @ sp[(-8)+-3]
 24720  0000EA  0EF5               	movlw	-11
 24721  0000EC  006F FF8C  F034    	movff	plusw1,btemp+10
 24722  0000F2  0EF6               	movlw	-10
 24723  0000F4  006F FF8C  F035    	movff	plusw1,btemp+11
 24724                           
 24725                           ;stkvar	_f @ sp[(-8)+0]
 24726  0000FA  0EF9               	movlw	-7
 24727  0000FC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 24728  000102  0EF8               	movlw	-8
 24729  000104  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 24730                           
 24731                           ;stkvar	_f @ sp[(-8)+0]
 24732  00010A  0EFA               	movlw	250
 24733  00010C  24E1               	addwf	fsr1l,w,c
 24734  00010E  6ED9               	movwf	fsr2l,c
 24735  000110  0EFF               	movlw	255
 24736  000112  20E2               	addwfc	fsr1h,w,c
 24737  000114  6EDA               	movwf	fsr2h,c
 24738  000116  0E00               	movlw	0
 24739  000118  6EDE               	movwf	postinc2,c
 24740  00011A  0E00               	movlw	0
 24741  00011C  6EDD               	movwf	postdec2,c
 24742                           
 24743                           ;stkvar	_f @ sp[(-8)+0]
 24744  00011E  0EFC               	movlw	252
 24745  000120  24E1               	addwf	fsr1l,w,c
 24746  000122  6ED9               	movwf	fsr2l,c
 24747  000124  0EFF               	movlw	255
 24748  000126  20E2               	addwfc	fsr1h,w,c
 24749  000128  6EDA               	movwf	fsr2h,c
 24750  00012A  0E00               	movlw	0
 24751  00012C  6EDE               	movwf	postinc2,c
 24752  00012E  0E00               	movlw	0
 24753  000130  6EDD               	movwf	postdec2,c
 24754                           
 24755                           ;stkvar	_ap @ sp[(-8)+6]
 24756  000132  0EFE               	movlw	254
 24757  000134  24E1               	addwf	fsr1l,w,c
 24758  000136  6E2A               	movwf	btemp^0,c
 24759  000138  0EFF               	movlw	255
 24760  00013A  20E2               	addwfc	fsr1h,w,c
 24761  00013C  6E2B               	movwf	(btemp+1)^0,c
 24762  00013E  0060  F0AB  FFE6   	movff	btemp,postinc1
 24763  000144  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24764                           
 24765                           ;stkvar	_fmt @ sp[(-10)+-5]
 24766  00014A  0EF1               	movlw	-15
 24767  00014C  006F FF8F FFE6     	movff	plusw1,postinc1
 24768  000152  006F FF8F FFE6     	movff	plusw1,postinc1
 24769                           
 24770                           ;stkvar	_f @ sp[(-12)+0]
 24771  000158  0EF4               	movlw	244
 24772  00015A  24E1               	addwf	fsr1l,w,c
 24773  00015C  6E2A               	movwf	btemp^0,c
 24774  00015E  0EFF               	movlw	255
 24775  000160  20E2               	addwfc	fsr1h,w,c
 24776  000162  6E2B               	movwf	(btemp+1)^0,c
 24777  000164  0060  F0AB  FFE6   	movff	btemp,postinc1
 24778  00016A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24779  000170  EC15  F007         	call	_vfprintf	;wreg free
 24780                           
 24781                           ; BSR set to: 0
 24782                           ;stkvar	_f @ sp[(-8)+0]
 24783  000174  0EFA               	movlw	250
 24784  000176  24E1               	addwf	fsr1l,w,c
 24785  000178  6ED9               	movwf	fsr2l,c
 24786  00017A  0EFF               	movlw	255
 24787  00017C  20E2               	addwfc	fsr1h,w,c
 24788  00017E  6EDA               	movwf	fsr2h,c
 24789  000180  006F FF78  F034    	movff	postinc2,btemp+10
 24790  000186  006F FF74  F035    	movff	postdec2,btemp+11
 24791                           
 24792                           ;stkvar	_s @ sp[(-8)+-3]
 24793  00018C  0EF5               	movlw	-11
 24794  00018E  006F FF8C  F032    	movff	plusw1,btemp+8
 24795  000194  0EF6               	movlw	-10
 24796  000196  006F FF8C  F033    	movff	plusw1,btemp+9
 24797  00019C  5034               	movf	(btemp+10)^0,w,c
 24798  00019E  2432               	addwf	(btemp+8)^0,w,c
 24799  0001A0  6ED9               	movwf	fsr2l,c
 24800  0001A2  5035               	movf	(btemp+11)^0,w,c
 24801  0001A4  2033               	addwfc	(btemp+9)^0,w,c
 24802  0001A6  6EDA               	movwf	fsr2h,c
 24803  0001A8  0E00               	movlw	0
 24804  0001AA  6EDF               	movwf	indf2,c
 24805                           
 24806                           ; BSR set to: 0
 24807                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, args
      +                          ize = 4, vargsize = 0
 24808  0001AC  0EF8               	movlw	248
 24809  0001AE  26E1               	addwf	fsr1l,f,c
 24810  0001B0  0EFF               	movlw	255
 24811  0001B2  22E2               	addwfc	fsr1h,f,c
 24812  0001B4  52E5               	movf	postdec1,f,c
 24813  0001B6  50E7               	movf	indf1,w,c
 24814  0001B8  5EE1               	subwf	fsr1l,f,c
 24815  0001BA  0E00               	movlw	0
 24816  0001BC  5AE2               	subwfb	fsr1h,f,c
 24817  0001BE  0012               	return		;funcret
 24818  0001C0                     __end_of_sprintf:
 24819                           	opt callstack 0
 24820                           
 24821 ;; *************** function _get_vterm_ptr *****************
 24822 ;; Defined at:
 24823 ;;		line 119 in file "mconfig.c"
 24824 ;; Parameters:    Size  Location     Type
 24825 ;;  line            1  [STACK] const unsigned char 
 24826 ;;  vterm           1  [STACK] const unsigned char 
 24827 ;; Auto vars:     Size  Location     Type
 24828 ;;		None
 24829 ;; Return value:  Size  Location     Type
 24830 ;;                  2  [STACK] PTR unsigned char 
 24831 ;; Registers used:
 24832 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
 24833 ;; Tracked objects:
 24834 ;;		On entry : 0/2
 24835 ;;		On exit  : 0/0
 24836 ;;		Unchanged: 0/0
 24837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24842 ;;Total ram usage:        0 bytes
 24843 ;; Hardware stack levels used:    1
 24844 ;; Hardware stack levels required when called:   15
 24845 ;; This function calls:
 24846 ;;		Nothing
 24847 ;; This function is called by:
 24848 ;;		_main
 24849 ;;		_current_sensor_cal
 24850 ;;		_display_history
 24851 ;;		_check_help
 24852 ;;		_vterm_dump
 24853 ;; This function uses a reentrant model
 24854 ;;
 24855                           
 24856                           	psect	text80
 24857  0028A6                     __ptext80:
 24858                           	opt callstack 0
 24859  0028A6                     _get_vterm_ptr:
 24860                           	opt callstack 15
 24861                           
 24862                           ;mconfig.c: 119: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 120: {;mconfig.c: 121:  return D.lcd[vterm & 0x03][line & 0x03];
 24863                           ;stkvar	_vterm @ sp[(0)+-2]
 24864                           
 24865                           ; BSR set to: 0
 24866                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24867                           ;incstack = 0
 24868  0028A6  0EFE               	movlw	-2
 24869  0028A8  50E3               	movf	plusw1,w,c
 24870  0028AA  0B03               	andlw	3
 24871  0028AC  0DA0               	mullw	160
 24872  0028AE  0E3F               	movlw	low _D
 24873  0028B0  6E2A               	movwf	btemp^0,c
 24874  0028B2  0E0A               	movlw	high _D
 24875  0028B4  6E2B               	movwf	(btemp+1)^0,c
 24876  0028B6  50F3               	movf	243,w,c
 24877  0028B8  262A               	addwf	btemp^0,f,c
 24878  0028BA  50F4               	movf	244,w,c
 24879  0028BC  222B               	addwfc	(btemp+1)^0,f,c
 24880                           
 24881                           ;stkvar	_line @ sp[(0)+-1]
 24882  0028BE  0EFF               	movlw	-1
 24883  0028C0  50E3               	movf	plusw1,w,c
 24884  0028C2  0B03               	andlw	3
 24885  0028C4  0D28               	mullw	40
 24886  0028C6  50F3               	movf	243,w,c
 24887  0028C8  262A               	addwf	btemp^0,f,c
 24888  0028CA  50F4               	movf	244,w,c
 24889  0028CC  222B               	addwfc	(btemp+1)^0,f,c
 24890                           
 24891                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 24892  0028CE  52E5               	movf	postdec1,f,c
 24893  0028D0  52E5               	movf	postdec1,f,c
 24894  0028D2  0012               	return		;funcret
 24895  0028D4                     __end_of_get_vterm_ptr:
 24896                           	opt callstack 0
 24897                           
 24898 ;; *************** function _WaitMs *****************
 24899 ;; Defined at:
 24900 ;;		line 32 in file "timers.c"
 24901 ;; Parameters:    Size  Location     Type
 24902 ;;  numMilliseco    2  [STACK] const unsigned short 
 24903 ;; Auto vars:     Size  Location     Type
 24904 ;;		None
 24905 ;; Return value:  Size  Location     Type
 24906 ;;                  1  [STACK] void 
 24907 ;; Registers used:
 24908 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24909 ;; Tracked objects:
 24910 ;;		On entry : 0/2
 24911 ;;		On exit  : 0/0
 24912 ;;		Unchanged: 0/0
 24913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24918 ;;Total ram usage:        0 bytes
 24919 ;; Hardware stack levels used:    1
 24920 ;; Hardware stack levels required when called:   16
 24921 ;; This function calls:
 24922 ;;		_StartTimer
 24923 ;;		_TimerDone
 24924 ;; This function is called by:
 24925 ;;		_main
 24926 ;;		_current_sensor_cal
 24927 ;;		_display_history
 24928 ;;		_vterm_dump
 24929 ;; This function uses a reentrant model
 24930 ;;
 24931                           
 24932                           	psect	text81
 24933  0026AE                     __ptext81:
 24934                           	opt callstack 0
 24935  0026AE                     _WaitMs:
 24936                           	opt callstack 13
 24937                           
 24938                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 24939                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 24940                           
 24941                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24942                           ;incstack = 0
 24943  0026AE  0EFE               	movlw	-2
 24944  0026B0  006F FF8F FFE6     	movff	plusw1,postinc1
 24945  0026B6  006F FF8F FFE6     	movff	plusw1,postinc1
 24946  0026BC  0E00               	movlw	0
 24947  0026BE  6EE6               	movwf	postinc1,c
 24948  0026C0  EC49  F012         	call	_StartTimer	;wreg free
 24949                           
 24950                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 24951  0026C4  D005               	goto	l12895
 24952  0026C6                     l1772:
 24953                           
 24954                           ;timers.c: 36:   __nop();
 24955  0026C6  F000               	nop	
 24956                           
 24957                           ;timers.c: 37:   __nop();
 24958  0026C8  F000               	nop	
 24959                           
 24960                           ;timers.c: 38:   __nop();
 24961  0026CA  F000               	nop	
 24962                           
 24963                           ;timers.c: 39:   __nop();
 24964  0026CC  F000               	nop	
 24965  0026CE  0004               	clrwdt		;# 
 24966  0026D0                     l12895:
 24967                           
 24968                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 24969  0026D0  0E00               	movlw	0
 24970  0026D2  6EE6               	movwf	postinc1,c
 24971  0026D4  ECD5  F014         	call	_TimerDone	;wreg free
 24972  0026D8  502A               	movf	btemp^0,w,c
 24973  0026DA  B4D8               	btfsc	status,2,c
 24974  0026DC  D7F4               	goto	l1772
 24975                           
 24976                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 24977  0026DE  52E5               	movf	postdec1,f,c
 24978  0026E0  52E5               	movf	postdec1,f,c
 24979  0026E2  0012               	return		;funcret
 24980  0026E4                     __end_of_WaitMs:
 24981                           	opt callstack 0
 24982                           
 24983 ;; *************** function _update_lcd *****************
 24984 ;; Defined at:
 24985 ;;		line 85 in file "mconfig.c"
 24986 ;; Parameters:    Size  Location     Type
 24987 ;;  vterm           1  [STACK] unsigned char 
 24988 ;; Auto vars:     Size  Location     Type
 24989 ;;		None
 24990 ;; Return value:  Size  Location     Type
 24991 ;;                  1  [STACK] unsigned char 
 24992 ;; Registers used:
 24993 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24994 ;; Tracked objects:
 24995 ;;		On entry : 0/0
 24996 ;;		On exit  : 0/0
 24997 ;;		Unchanged: 0/0
 24998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25003 ;;Total ram usage:        0 bytes
 25004 ;; Hardware stack levels used:    1
 25005 ;; Hardware stack levels required when called:   26
 25006 ;; This function calls:
 25007 ;;		_eaDogM_WriteStringAtPos
 25008 ;;		_wait_lcd_done
 25009 ;; This function is called by:
 25010 ;;		_main
 25011 ;;		_current_sensor_cal
 25012 ;;		_display_history
 25013 ;;		_check_help
 25014 ;; This function uses a reentrant model
 25015 ;;
 25016                           
 25017                           	psect	text82
 25018  01F096                     __ptext82:
 25019                           	opt callstack 0
 25020  01F096                     _update_lcd:
 25021                           	opt callstack 4
 25022                           
 25023                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
 25024                           ;stkvar	_vterm @ sp[(0)+-1]
 25025                           
 25026                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25027                           ;incstack = 0
 25028  01F096  0EFF               	movlw	-1
 25029  01F098  006F FF8C  F02A    	movff	plusw1,btemp
 25030  01F09E  0E03               	movlw	3
 25031  01F0A0  162A               	andwf	btemp^0,f,c
 25032  01F0A2  0EFF               	movlw	-1
 25033  01F0A4  0060  F0AB  FFE3   	movff	btemp,plusw1
 25034                           
 25035                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
 25036  01F0AA  EE23  F0BF         	lfsr	2,_D+640
 25037  01F0AE  A0DF               	btfss	indf2,0,c
 25038  01F0B0  D004               	goto	l17083
 25039                           
 25040                           ;stkvar	_vterm @ sp[(0)+-1]
 25041  01F0B2  0EFF               	movlw	-1
 25042  01F0B4  50E3               	movf	plusw1,w,c
 25043  01F0B6  B4D8               	btfsc	status,2,c
 25044  01F0B8  D09C               	goto	l1848
 25045  01F0BA                     l17083:
 25046                           
 25047                           ;mconfig.c: 92:  D.lcd[vterm][0][20] = 0;
 25048                           ;stkvar	_vterm @ sp[(0)+-1]
 25049  01F0BA  0EFF               	movlw	-1
 25050  01F0BC  50E3               	movf	plusw1,w,c
 25051  01F0BE  0DA0               	mullw	160
 25052  01F0C0  0E53               	movlw	low (_D+20)
 25053  01F0C2  24F3               	addwf	243,w,c
 25054  01F0C4  6ED9               	movwf	fsr2l,c
 25055  01F0C6  0E0A               	movlw	high (_D+20)
 25056  01F0C8  20F4               	addwfc	prodh,w,c
 25057  01F0CA  6EDA               	movwf	fsr2h,c
 25058  01F0CC  0E00               	movlw	0
 25059  01F0CE  6EDF               	movwf	indf2,c
 25060                           
 25061                           ;mconfig.c: 93:  D.lcd[vterm][1][20] = 0;
 25062                           ;stkvar	_vterm @ sp[(0)+-1]
 25063  01F0D0  0EFF               	movlw	-1
 25064  01F0D2  50E3               	movf	plusw1,w,c
 25065  01F0D4  0DA0               	mullw	160
 25066  01F0D6  0E7B               	movlw	low (_D+60)
 25067  01F0D8  24F3               	addwf	243,w,c
 25068  01F0DA  6ED9               	movwf	fsr2l,c
 25069  01F0DC  0E0A               	movlw	high (_D+60)
 25070  01F0DE  20F4               	addwfc	prodh,w,c
 25071  01F0E0  6EDA               	movwf	fsr2h,c
 25072  01F0E2  0E00               	movlw	0
 25073  01F0E4  6EDF               	movwf	indf2,c
 25074                           
 25075                           ;mconfig.c: 94:  D.lcd[vterm][2][20] = 0;
 25076                           ;stkvar	_vterm @ sp[(0)+-1]
 25077  01F0E6  0EFF               	movlw	-1
 25078  01F0E8  50E3               	movf	plusw1,w,c
 25079  01F0EA  0DA0               	mullw	160
 25080  01F0EC  0EA3               	movlw	low (_D+100)
 25081  01F0EE  24F3               	addwf	243,w,c
 25082  01F0F0  6ED9               	movwf	fsr2l,c
 25083  01F0F2  0E0A               	movlw	high (_D+100)
 25084  01F0F4  20F4               	addwfc	prodh,w,c
 25085  01F0F6  6EDA               	movwf	fsr2h,c
 25086  01F0F8  0E00               	movlw	0
 25087  01F0FA  6EDF               	movwf	indf2,c
 25088                           
 25089                           ;mconfig.c: 95:  D.lcd[vterm][3][20] = 0;
 25090                           ;stkvar	_vterm @ sp[(0)+-1]
 25091  01F0FC  0EFF               	movlw	-1
 25092  01F0FE  50E3               	movf	plusw1,w,c
 25093  01F100  0DA0               	mullw	160
 25094  01F102  0ECB               	movlw	low (_D+140)
 25095  01F104  24F3               	addwf	243,w,c
 25096  01F106  6ED9               	movwf	fsr2l,c
 25097  01F108  0E0A               	movlw	high (_D+140)
 25098  01F10A  20F4               	addwfc	prodh,w,c
 25099  01F10C  6EDA               	movwf	fsr2h,c
 25100  01F10E  0E00               	movlw	0
 25101  01F110  6EDF               	movwf	indf2,c
 25102                           
 25103                           ;mconfig.c: 96:  wait_lcd_done();
 25104  01F112  EC5A  F016         	call	_wait_lcd_done	;wreg free
 25105                           
 25106                           ; BSR set to: 0
 25107                           ;mconfig.c: 97:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 25108                           ;stkvar	_vterm @ sp[(0)+-1]
 25109  01F116  0EFF               	movlw	-1
 25110  01F118  50E3               	movf	plusw1,w,c
 25111  01F11A  0DA0               	mullw	160
 25112  01F11C  0E3F               	movlw	low _D
 25113  01F11E  6E34               	movwf	(btemp+10)^0,c
 25114  01F120  0E0A               	movlw	high _D
 25115  01F122  6E35               	movwf	(btemp+11)^0,c
 25116  01F124  50F3               	movf	243,w,c
 25117  01F126  2634               	addwf	(btemp+10)^0,f,c
 25118  01F128  50F4               	movf	244,w,c
 25119  01F12A  2235               	addwfc	(btemp+11)^0,f,c
 25120  01F12C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 25121  01F132  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 25122  01F138  0E00               	movlw	0
 25123  01F13A  6EE6               	movwf	postinc1,c
 25124  01F13C  0E00               	movlw	0
 25125  01F13E  6EE6               	movwf	postinc1,c
 25126  01F140  EC98  F009         	call	_eaDogM_WriteStringAtPos	;wreg free
 25127                           
 25128                           ; BSR set to: 59
 25129                           ;mconfig.c: 98:  wait_lcd_done();
 25130  01F144  EC5A  F016         	call	_wait_lcd_done	;wreg free
 25131                           
 25132                           ; BSR set to: 0
 25133                           ;mconfig.c: 99:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 25134                           ;stkvar	_vterm @ sp[(0)+-1]
 25135  01F148  0EFF               	movlw	-1
 25136  01F14A  50E3               	movf	plusw1,w,c
 25137  01F14C  0DA0               	mullw	160
 25138  01F14E  0E3F               	movlw	low _D
 25139  01F150  6E34               	movwf	(btemp+10)^0,c
 25140  01F152  0E0A               	movlw	high _D
 25141  01F154  6E35               	movwf	(btemp+11)^0,c
 25142  01F156  0E28               	movlw	40
 25143  01F158  2634               	addwf	(btemp+10)^0,f,c
 25144  01F15A  0E00               	movlw	0
 25145  01F15C  2235               	addwfc	(btemp+11)^0,f,c
 25146  01F15E  50F3               	movf	243,w,c
 25147  01F160  2634               	addwf	(btemp+10)^0,f,c
 25148  01F162  50F4               	movf	244,w,c
 25149  01F164  2235               	addwfc	(btemp+11)^0,f,c
 25150  01F166  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 25151  01F16C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 25152  01F172  0E00               	movlw	0
 25153  01F174  6EE6               	movwf	postinc1,c
 25154  01F176  0E01               	movlw	1
 25155  01F178  6EE6               	movwf	postinc1,c
 25156  01F17A  EC98  F009         	call	_eaDogM_WriteStringAtPos	;wreg free
 25157                           
 25158                           ; BSR set to: 59
 25159                           ;mconfig.c: 100:  wait_lcd_done();
 25160  01F17E  EC5A  F016         	call	_wait_lcd_done	;wreg free
 25161                           
 25162                           ; BSR set to: 0
 25163                           ;mconfig.c: 101:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 25164                           ;stkvar	_vterm @ sp[(0)+-1]
 25165  01F182  0EFF               	movlw	-1
 25166  01F184  50E3               	movf	plusw1,w,c
 25167  01F186  0DA0               	mullw	160
 25168  01F188  0E3F               	movlw	low _D
 25169  01F18A  6E34               	movwf	(btemp+10)^0,c
 25170  01F18C  0E0A               	movlw	high _D
 25171  01F18E  6E35               	movwf	(btemp+11)^0,c
 25172  01F190  0E50               	movlw	80
 25173  01F192  2634               	addwf	(btemp+10)^0,f,c
 25174  01F194  0E00               	movlw	0
 25175  01F196  2235               	addwfc	(btemp+11)^0,f,c
 25176  01F198  50F3               	movf	243,w,c
 25177  01F19A  2634               	addwf	(btemp+10)^0,f,c
 25178  01F19C  50F4               	movf	244,w,c
 25179  01F19E  2235               	addwfc	(btemp+11)^0,f,c
 25180  01F1A0  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 25181  01F1A6  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 25182  01F1AC  0E00               	movlw	0
 25183  01F1AE  6EE6               	movwf	postinc1,c
 25184  01F1B0  0E02               	movlw	2
 25185  01F1B2  6EE6               	movwf	postinc1,c
 25186  01F1B4  EC98  F009         	call	_eaDogM_WriteStringAtPos	;wreg free
 25187                           
 25188                           ; BSR set to: 59
 25189                           ;mconfig.c: 102:  wait_lcd_done();
 25190  01F1B8  EC5A  F016         	call	_wait_lcd_done	;wreg free
 25191                           
 25192                           ; BSR set to: 0
 25193                           ;mconfig.c: 103:  eaDogM_WriteStringAtPos(3, 0, D.lcd[vterm][3]);
 25194                           ;stkvar	_vterm @ sp[(0)+-1]
 25195  01F1BC  0EFF               	movlw	-1
 25196  01F1BE  50E3               	movf	plusw1,w,c
 25197  01F1C0  0DA0               	mullw	160
 25198  01F1C2  0E3F               	movlw	low _D
 25199  01F1C4  6E34               	movwf	(btemp+10)^0,c
 25200  01F1C6  0E0A               	movlw	high _D
 25201  01F1C8  6E35               	movwf	(btemp+11)^0,c
 25202  01F1CA  0E78               	movlw	120
 25203  01F1CC  2634               	addwf	(btemp+10)^0,f,c
 25204  01F1CE  0E00               	movlw	0
 25205  01F1D0  2235               	addwfc	(btemp+11)^0,f,c
 25206  01F1D2  50F3               	movf	243,w,c
 25207  01F1D4  2634               	addwf	(btemp+10)^0,f,c
 25208  01F1D6  50F4               	movf	244,w,c
 25209  01F1D8  2235               	addwfc	(btemp+11)^0,f,c
 25210  01F1DA  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 25211  01F1E0  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 25212  01F1E6  0E00               	movlw	0
 25213  01F1E8  6EE6               	movwf	postinc1,c
 25214  01F1EA  0E03               	movlw	3
 25215  01F1EC  6EE6               	movwf	postinc1,c
 25216  01F1EE  EC98  F009         	call	_eaDogM_WriteStringAtPos	;wreg free
 25217  01F1F2                     l1848:
 25218                           
 25219                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 25220  01F1F2  52E5               	movf	postdec1,f,c
 25221  01F1F4  0012               	return		;funcret
 25222  01F1F6                     __end_of_update_lcd:
 25223                           	opt callstack 0
 25224                           
 25225 ;; *************** function _eaDogM_WriteStringAtPos *****************
 25226 ;; Defined at:
 25227 ;;		line 195 in file "eadog.c"
 25228 ;; Parameters:    Size  Location     Type
 25229 ;;  r               1  [STACK] const unsigned char 
 25230 ;;  c               1  [STACK] const unsigned char 
 25231 ;;  strPtr          2  [STACK] PTR unsigned char 
 25232 ;;		 -> D.lcd(640), D(642), V(181), 
 25233 ;; Auto vars:     Size  Location     Type
 25234 ;;  row             1  [STACK] unsigned char 
 25235 ;; Return value:  Size  Location     Type
 25236 ;;                  1  [STACK] void 
 25237 ;; Registers used:
 25238 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 25239 ;; Tracked objects:
 25240 ;;		On entry : 3F/0
 25241 ;;		On exit  : 3F/3B
 25242 ;;		Unchanged: 0/0
 25243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25248 ;;Total ram usage:        0 bytes
 25249 ;; Hardware stack levels used:    1
 25250 ;; Hardware stack levels required when called:   25
 25251 ;; This function calls:
 25252 ;;		_eaDogM_WriteString
 25253 ;;		_send_lcd_cmd_dma
 25254 ;;		_send_lcd_data_dma
 25255 ;;		_wait_lcd_done
 25256 ;; This function is called by:
 25257 ;;		_update_lcd
 25258 ;;		_vterm_dump
 25259 ;; This function uses a reentrant model
 25260 ;;
 25261                           
 25262                           	psect	text83
 25263  001330                     __ptext83:
 25264                           	opt callstack 0
 25265  001330                     _eaDogM_WriteStringAtPos:
 25266                           	opt callstack 0
 25267                           
 25268                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25269  001330  52E6               	movf	postinc1,f,c
 25270                           
 25271                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 25272                           
 25273                           ;incstack = 0
 25274  001332  D013               	goto	l17029
 25275  001334                     l17017:
 25276                           
 25277                           ;eadog.c: 201:   row = 0x40;
 25278                           ;stkvar	_row @ sp[(-1)+0]
 25279  001334  0EFF               	movlw	-1
 25280  001336  6AE3               	clrf	plusw1,c
 25281  001338  8CE3               	bsf	plusw1,6,c
 25282                           
 25283                           ;eadog.c: 202:   break;
 25284  00133A  D025               	goto	l17031
 25285  00133C                     l17019:
 25286                           
 25287                           ;eadog.c: 204:   row = 0x14;
 25288                           ;stkvar	_row @ sp[(-1)+0]
 25289  00133C  0EFF               	movlw	-1
 25290  00133E  6AE3               	clrf	plusw1,c
 25291  001340  84E3               	bsf	plusw1,2,c
 25292  001342  88E3               	bsf	plusw1,4,c	;indir
 25293                           
 25294                           ;eadog.c: 205:   break;
 25295  001344  D020               	goto	l17031
 25296  001346                     l17021:
 25297                           
 25298                           ;eadog.c: 207:   row = 0x54;
 25299  001346  0E54               	movlw	84
 25300  001348  6E35               	movwf	(btemp+11)^0,c
 25301                           
 25302                           ;stkvar	_row @ sp[(-1)+0]
 25303  00134A  0EFF               	movlw	-1
 25304  00134C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25305                           
 25306                           ;eadog.c: 208:   break;
 25307  001352  D019               	goto	l17031
 25308  001354                     l17023:
 25309                           
 25310                           ;eadog.c: 210:   row = 0x00;
 25311                           ;stkvar	_row @ sp[(-1)+0]
 25312  001354  0EFF               	movlw	-1
 25313  001356  6AE3               	clrf	plusw1,c
 25314                           
 25315                           ;eadog.c: 211:   break;
 25316  001358  D016               	goto	l17031
 25317  00135A                     l17029:
 25318                           
 25319                           ;stkvar	_r @ sp[(-1)+-1]
 25320  00135A  0EFE               	movlw	-2
 25321  00135C  50E3               	movf	plusw1,w,c
 25322  00135E  6E34               	movwf	(btemp+10)^0,c
 25323  001360  6A35               	clrf	(btemp+11)^0,c
 25324                           
 25325                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25326                           ; Switch size 1, requested type "simple"
 25327                           ; Number of cases is 1, Range of values is 0 to 0
 25328                           ; switch strategies available:
 25329                           ; Name         Instructions Cycles
 25330                           ; simple_byte            4     3 (average)
 25331                           ;	Chosen strategy is simple_byte
 25332  001362  5035               	movf	(btemp+11)^0,w,c
 25333  001364  0A00               	xorlw	0	; case 0
 25334  001366  A4D8               	btfss	status,2,c
 25335  001368  D7E5               	goto	l17017
 25336                           
 25337                           ; Switch size 1, requested type "simple"
 25338                           ; Number of cases is 4, Range of values is 0 to 3
 25339                           ; switch strategies available:
 25340                           ; Name         Instructions Cycles
 25341                           ; simple_byte           13     7 (average)
 25342                           ;	Chosen strategy is simple_byte
 25343  00136A  5034               	movf	(btemp+10)^0,w,c
 25344  00136C  0A00               	xorlw	0	; case 0
 25345  00136E  B4D8               	btfsc	status,2,c
 25346  001370  D7E1               	goto	l17017
 25347  001372  0A01               	xorlw	1	; case 1
 25348  001374  B4D8               	btfsc	status,2,c
 25349  001376  D7E2               	goto	l17019
 25350  001378  0A03               	xorlw	3	; case 2
 25351  00137A  B4D8               	btfsc	status,2,c
 25352  00137C  D7E4               	goto	l17021
 25353  00137E  0A01               	xorlw	1	; case 3
 25354  001380  B4D8               	btfsc	status,2,c
 25355  001382  D7E8               	goto	l17023
 25356  001384  D7D7               	goto	l17017
 25357  001386                     l17031:
 25358                           
 25359                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 25360  001386  0E45               	movlw	69
 25361  001388  6EE6               	movwf	postinc1,c
 25362  00138A  ECCD  F016         	call	_send_lcd_cmd_dma	;wreg free
 25363                           
 25364                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 25365                           ;stkvar	_c @ sp[(-1)+-2]
 25366  00138E  0EFD               	movlw	-3
 25367  001390  006F FF8C  F035    	movff	plusw1,btemp+11
 25368                           
 25369                           ;stkvar	_row @ sp[(-1)+0]
 25370  001396  0EFF               	movlw	-1
 25371  001398  50E3               	movf	plusw1,w,c
 25372  00139A  2435               	addwf	(btemp+11)^0,w,c
 25373  00139C  6EE6               	movwf	postinc1,c
 25374  00139E  EC5D  F011         	call	_send_lcd_data_dma	;wreg free
 25375                           
 25376                           ; BSR set to: 59
 25377                           ;eadog.c: 218:  wait_lcd_done();
 25378  0013A2  EC5A  F016         	call	_wait_lcd_done	;wreg free
 25379                           
 25380                           ; BSR set to: 0
 25381                           ;eadog.c: 219:  eaDogM_WriteString(strPtr);
 25382                           ;stkvar	_strPtr @ sp[(-1)+-4]
 25383  0013A6  0EFB               	movlw	-5
 25384  0013A8  006F FF8F FFE6     	movff	plusw1,postinc1
 25385  0013AE  006F FF8F FFE6     	movff	plusw1,postinc1
 25386  0013B4  ECC0  F007         	call	_eaDogM_WriteString	;wreg free
 25387                           
 25388                           ; BSR set to: 59
 25389                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 25390  0013B8  0EFB               	movlw	251
 25391  0013BA  26E1               	addwf	fsr1l,f,c
 25392  0013BC  0EFF               	movlw	255
 25393  0013BE  22E2               	addwfc	fsr1h,f,c
 25394  0013C0  0012               	return		;funcret
 25395  0013C2                     __end_of_eaDogM_WriteStringAtPos:
 25396                           	opt callstack 0
 25397                           
 25398 ;; *************** function _send_lcd_cmd_dma *****************
 25399 ;; Defined at:
 25400 ;;		line 171 in file "eadog.c"
 25401 ;; Parameters:    Size  Location     Type
 25402 ;;  strPtr          1  [STACK] const unsigned char 
 25403 ;; Auto vars:     Size  Location     Type
 25404 ;;		None
 25405 ;; Return value:  Size  Location     Type
 25406 ;;                  1  [STACK] void 
 25407 ;; Registers used:
 25408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 25409 ;; Tracked objects:
 25410 ;;		On entry : 0/3D
 25411 ;;		On exit  : 3F/0
 25412 ;;		Unchanged: 0/0
 25413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25418 ;;Total ram usage:        0 bytes
 25419 ;; Hardware stack levels used:    1
 25420 ;; Hardware stack levels required when called:   18
 25421 ;; This function calls:
 25422 ;;		_send_lcd_data_dma
 25423 ;;		_wait_lcd_done
 25424 ;; This function is called by:
 25425 ;;		_eaDogM_WriteStringAtPos
 25426 ;;		_eaDogM_WriteCommand
 25427 ;; This function uses a reentrant model
 25428 ;;
 25429                           
 25430                           	psect	text84
 25431  002D9A                     __ptext84:
 25432                           	opt callstack 0
 25433  002D9A                     _send_lcd_cmd_dma:
 25434                           	opt callstack 10
 25435                           
 25436                           ;eadog.c: 171: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:
      +                            send_lcd_data_dma(0xFE);
 25437                           
 25438                           ; BSR set to: 59
 25439                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25440                           ;incstack = 0
 25441  002D9A  0EFE               	movlw	254
 25442  002D9C  6EE6               	movwf	postinc1,c
 25443  002D9E  EC5D  F011         	call	_send_lcd_data_dma	;wreg free
 25444                           
 25445                           ; BSR set to: 59
 25446                           ;eadog.c: 174:  wait_lcd_done();
 25447  002DA2  EC5A  F016         	call	_wait_lcd_done	;wreg free
 25448                           
 25449                           ; BSR set to: 0
 25450                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 25451                           ;stkvar	_strPtr @ sp[(0)+-1]
 25452  002DA6  0EFF               	movlw	-1
 25453  002DA8  50E3               	movf	plusw1,w,c
 25454  002DAA  6EE6               	movwf	postinc1,c
 25455  002DAC  EC5D  F011         	call	_send_lcd_data_dma	;wreg free
 25456                           
 25457                           ;eadog.c: 176:  wait_lcd_done();
 25458  002DB0  EC5A  F016         	call	_wait_lcd_done	;wreg free
 25459                           
 25460                           ; BSR set to: 0
 25461                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 25462  002DB4  52E5               	movf	postdec1,f,c
 25463  002DB6  0012               	return		;funcret
 25464  002DB8                     __end_of_send_lcd_cmd_dma:
 25465                           	opt callstack 0
 25466                           
 25467 ;; *************** function _wait_lcd_done *****************
 25468 ;; Defined at:
 25469 ;;		line 443 in file "eadog.c"
 25470 ;; Parameters:    Size  Location     Type
 25471 ;;		None
 25472 ;; Auto vars:     Size  Location     Type
 25473 ;;		None
 25474 ;; Return value:  Size  Location     Type
 25475 ;;                  1  [STACK] void 
 25476 ;; Registers used:
 25477 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 25478 ;; Tracked objects:
 25479 ;;		On entry : 0/2
 25480 ;;		On exit  : 3F/0
 25481 ;;		Unchanged: 0/0
 25482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25487 ;;Total ram usage:        0 bytes
 25488 ;; Hardware stack levels used:    1
 25489 ;; Hardware stack levels required when called:   16
 25490 ;; This function calls:
 25491 ;;		_wdtdelay
 25492 ;; This function is called by:
 25493 ;;		_main
 25494 ;;		_send_lcd_cmd_dma
 25495 ;;		_eaDogM_WriteStringAtPos
 25496 ;;		_update_lcd
 25497 ;;		_vterm_dump
 25498 ;; This function uses a reentrant model
 25499 ;;
 25500                           
 25501                           	psect	text85
 25502  002CB4                     __ptext85:
 25503                           	opt callstack 0
 25504  002CB4                     _wait_lcd_done:
 25505                           	opt callstack 14
 25506                           
 25507                           ;eadog.c: 445:  while (spi_link.LCD_DATA);
 25508                           
 25509                           ; BSR set to: 0
 25510                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25511                           ;incstack = 0
 25512  002CB4  0100               	movlb	0	; () banked
 25513  002CB6  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
 25514  002CB8  D7FD               	goto	_wait_lcd_done
 25515  002CBA                     u10960:
 25516  002CBA  013D               	movlb	61	; () banked
 25517  002CBC  AB17               	btfss	23,5,b	;volatile
 25518  002CBE  D7FD               	goto	u10960
 25519                           
 25520                           ; BSR set to: 61
 25521                           ;eadog.c: 447:  wdtdelay(50);
 25522  002CC0  0E32               	movlw	50
 25523  002CC2  6EE6               	movwf	postinc1,c
 25524  002CC4  0E00               	movlw	0
 25525  002CC6  6EE6               	movwf	postinc1,c
 25526  002CC8  0E00               	movlw	0
 25527  002CCA  6EE6               	movwf	postinc1,c
 25528  002CCC  0E00               	movlw	0
 25529  002CCE  6EE6               	movwf	postinc1,c
 25530  002CD0  EC81  F00F         	call	_wdtdelay	;wreg free
 25531                           
 25532                           ; BSR set to: 0
 25533                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 25534  002CD4  0012               	return		;funcret
 25535  002CD6                     __end_of_wait_lcd_done:
 25536                           	opt callstack 0
 25537                           
 25538 ;; *************** function _wdtdelay *****************
 25539 ;; Defined at:
 25540 ;;		line 23 in file "eadog.c"
 25541 ;; Parameters:    Size  Location     Type
 25542 ;;  delay           4  [STACK] const unsigned long 
 25543 ;; Auto vars:     Size  Location     Type
 25544 ;;		None
 25545 ;; Return value:  Size  Location     Type
 25546 ;;                  1  [STACK] void 
 25547 ;; Registers used:
 25548 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 25549 ;; Tracked objects:
 25550 ;;		On entry : 2/3D
 25551 ;;		On exit  : 3F/0
 25552 ;;		Unchanged: 0/0
 25553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25558 ;;Total ram usage:        0 bytes
 25559 ;; Hardware stack levels used:    1
 25560 ;; Hardware stack levels required when called:   15
 25561 ;; This function calls:
 25562 ;;		Nothing
 25563 ;; This function is called by:
 25564 ;;		_init_display
 25565 ;;		_send_lcd_data
 25566 ;;		_send_lcd_cmd
 25567 ;;		_send_lcd_cmd_long
 25568 ;;		_wait_lcd_done
 25569 ;; This function uses a reentrant model
 25570 ;;
 25571                           
 25572                           	psect	text86
 25573  001F02                     __ptext86:
 25574                           	opt callstack 0
 25575  001F02                     _wdtdelay:
 25576                           	opt callstack 14
 25577                           
 25578                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 25579                           
 25580                           ; BSR set to: 0
 25581                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25582                           ;incstack = 0
 25583  001F02  0100               	movlb	0	; () banked
 25584  001F04  6B90               	clrf	wdtdelay@dcount& (0+255),b
 25585  001F06  6B91               	clrf	(wdtdelay@dcount+1)& (0+255),b
 25586  001F08  6B92               	clrf	(wdtdelay@dcount+2)& (0+255),b
 25587  001F0A  6B93               	clrf	(wdtdelay@dcount+3)& (0+255),b
 25588  001F0C                     l1625:
 25589                           
 25590                           ; BSR set to: 0
 25591                           ;eadog.c: 28:   __nop();
 25592  001F0C  F000               	nop	
 25593  001F0E  0004               	clrwdt		;# 
 25594                           
 25595                           ;eadog.c: 30:  };
 25596  001F10  0E01               	movlw	1
 25597  001F12  0100               	movlb	0	; () banked
 25598  001F14  2790               	addwf	wdtdelay@dcount& (0+255),f,b
 25599  001F16  0E00               	movlw	0
 25600  001F18  2391               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 25601  001F1A  2392               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 25602  001F1C  2393               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 25603                           
 25604                           ; BSR set to: 0
 25605                           ;stkvar	_delay @ sp[(0)+-4]
 25606  001F1E  0EFC               	movlw	-4
 25607  001F20  006F FF8C  F02A    	movff	plusw1,btemp
 25608  001F26  5190               	movf	wdtdelay@dcount& (0+255),w,b
 25609  001F28  5C2A               	subwf	btemp^0,w,c
 25610  001F2A  0EFD               	movlw	-3
 25611  001F2C  006F FF8C  F02A    	movff	plusw1,btemp
 25612  001F32  5191               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 25613  001F34  582A               	subwfb	btemp^0,w,c
 25614  001F36  0EFE               	movlw	-2
 25615  001F38  006F FF8C  F02A    	movff	plusw1,btemp
 25616  001F3E  5192               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 25617  001F40  582A               	subwfb	btemp^0,w,c
 25618  001F42  0EFF               	movlw	-1
 25619  001F44  006F FF8C  F02A    	movff	plusw1,btemp
 25620  001F4A  5193               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 25621  001F4C  582A               	subwfb	btemp^0,w,c
 25622  001F4E  B0D8               	btfsc	status,0,c
 25623  001F50  D7DD               	goto	l1625
 25624                           
 25625                           ; BSR set to: 0
 25626                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 25627  001F52  52E5               	movf	postdec1,f,c
 25628  001F54  52E5               	movf	postdec1,f,c
 25629  001F56  52E5               	movf	postdec1,f,c
 25630  001F58  52E5               	movf	postdec1,f,c
 25631  001F5A  0012               	return		;funcret
 25632  001F5C                     __end_of_wdtdelay:
 25633                           	opt callstack 0
 25634                           
 25635 ;; *************** function _send_lcd_data_dma *****************
 25636 ;; Defined at:
 25637 ;;		line 182 in file "eadog.c"
 25638 ;; Parameters:    Size  Location     Type
 25639 ;;  strPtr          1  [STACK] const unsigned char 
 25640 ;; Auto vars:     Size  Location     Type
 25641 ;;		None
 25642 ;; Return value:  Size  Location     Type
 25643 ;;                  1  [STACK] void 
 25644 ;; Registers used:
 25645 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 25646 ;; Tracked objects:
 25647 ;;		On entry : 0/0
 25648 ;;		On exit  : 3F/3B
 25649 ;;		Unchanged: 0/0
 25650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25655 ;;Total ram usage:        0 bytes
 25656 ;; Hardware stack levels used:    1
 25657 ;; Hardware stack levels required when called:   17
 25658 ;; This function calls:
 25659 ;;		_ringBufS_flush
 25660 ;;		_ringBufS_put_dma
 25661 ;;		_start_lcd
 25662 ;;		_wait_lcd_set
 25663 ;; This function is called by:
 25664 ;;		_send_lcd_cmd_dma
 25665 ;;		_eaDogM_WriteStringAtPos
 25666 ;; This function uses a reentrant model
 25667 ;;
 25668                           
 25669                           	psect	text87
 25670  0022BA                     __ptext87:
 25671                           	opt callstack 0
 25672  0022BA                     _send_lcd_data_dma:
 25673                           	opt callstack 11
 25674                           
 25675                           ;eadog.c: 182: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 183: {;eadog.c: 184
      +                          :  wait_lcd_set();
 25676                           
 25677                           ; BSR set to: 0
 25678                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25679                           ;incstack = 0
 25680  0022BA  ECFA  F017         	call	_wait_lcd_set	;wreg free
 25681                           
 25682                           ; BSR set to: 0
 25683                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 25684  0022BE  0E00               	movlw	0
 25685  0022C0  6EE6               	movwf	postinc1,c
 25686  0022C2  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 25687  0022C8  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 25688  0022CE  ECE1  F009         	call	_ringBufS_flush	;wreg free
 25689  0022D2  94BC               	bcf	188,2,c	;volatile
 25690                           
 25691                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 25692  0022D4  013B               	movlb	59	; () banked
 25693  0022D6  9FFC               	bcf	252,7,b	;volatile
 25694                           
 25695                           ; BSR set to: 59
 25696                           ;eadog.c: 189:  DMA1SSZ = 1;
 25697  0022D8  0E00               	movlw	0
 25698  0022DA  6FF8               	movwf	248,b	;volatile
 25699  0022DC  0E01               	movlw	1
 25700  0022DE  6FF7               	movwf	247,b	;volatile
 25701                           
 25702                           ; BSR set to: 59
 25703                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 25704  0022E0  8FFC               	bsf	252,7,b	;volatile
 25705                           
 25706                           ; BSR set to: 59
 25707                           ;eadog.c: 191:  ringBufS_put_dma(spi_link.tx1a, strPtr);
 25708                           ;stkvar	_strPtr @ sp[(0)+-1]
 25709  0022E2  0EFF               	movlw	-1
 25710  0022E4  50E3               	movf	plusw1,w,c
 25711  0022E6  6EE6               	movwf	postinc1,c
 25712  0022E8  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 25713  0022EE  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 25714  0022F4  EC6B  F007         	call	_ringBufS_put_dma	;wreg free
 25715                           
 25716                           ;eadog.c: 192:  start_lcd();
 25717  0022F8  ECFD  F017         	call	_start_lcd	;wreg free
 25718                           
 25719                           ; BSR set to: 59
 25720                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 25721  0022FC  52E5               	movf	postdec1,f,c
 25722  0022FE  0012               	return		;funcret
 25723  002300                     __end_of_send_lcd_data_dma:
 25724                           	opt callstack 0
 25725                           
 25726 ;; *************** function _eaDogM_WriteString *****************
 25727 ;; Defined at:
 25728 ;;		line 151 in file "eadog.c"
 25729 ;; Parameters:    Size  Location     Type
 25730 ;;  strPtr          2  [STACK] PTR unsigned char 
 25731 ;;		 -> D.lcd(640), D(642), V(181), 
 25732 ;; Auto vars:     Size  Location     Type
 25733 ;;		None
 25734 ;; Return value:  Size  Location     Type
 25735 ;;                  1  [STACK] void 
 25736 ;; Registers used:
 25737 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 25738 ;; Tracked objects:
 25739 ;;		On entry : 3F/0
 25740 ;;		On exit  : 3F/3B
 25741 ;;		Unchanged: 0/0
 25742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25747 ;;Total ram usage:        0 bytes
 25748 ;; Hardware stack levels used:    1
 25749 ;; Hardware stack levels required when called:   24
 25750 ;; This function calls:
 25751 ;;		_printf
 25752 ;;		_ringBufS_flush
 25753 ;;		_start_lcd
 25754 ;;		_strlen
 25755 ;;		_wait_lcd_set
 25756 ;; This function is called by:
 25757 ;;		_eaDogM_WriteStringAtPos
 25758 ;; This function uses a reentrant model
 25759 ;;
 25760                           
 25761                           	psect	text88
 25762  000F80                     __ptext88:
 25763                           	opt callstack 0
 25764  000F80                     _eaDogM_WriteString:
 25765                           	opt callstack 4
 25766                           
 25767                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 25768                           
 25769                           ; BSR set to: 59
 25770                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25771                           ;incstack = 0
 25772  000F80  ECFA  F017         	call	_wait_lcd_set	;wreg free
 25773                           
 25774                           ; BSR set to: 0
 25775                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 25776  000F84  0E00               	movlw	0
 25777  000F86  6EE6               	movwf	postinc1,c
 25778  000F88  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 25779  000F8E  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 25780  000F94  ECE1  F009         	call	_ringBufS_flush	;wreg free
 25781  000F98  94BC               	bcf	188,2,c	;volatile
 25782                           
 25783                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 25784                           ;stkvar	_strPtr @ sp[(0)+-2]
 25785  000F9A  0EFE               	movlw	-2
 25786  000F9C  006F FF8F FFE6     	movff	plusw1,postinc1
 25787  000FA2  006F FF8F FFE6     	movff	plusw1,postinc1
 25788  000FA8  EC65  F008         	call	_strlen	;wreg free
 25789  000FAC  502B               	movf	(btemp+1)^0,w,c
 25790  000FAE  E104               	bnz	u16310
 25791  000FB0  0E41               	movlw	65
 25792  000FB2  5C2A               	subwf	btemp^0,w,c
 25793  000FB4  A0D8               	btfss	status,0,c
 25794  000FB6  D010               	goto	l16761
 25795  000FB8                     u16310:
 25796                           
 25797                           ;stkvar	_strPtr @ sp[(0)+-2]
 25798  000FB8  0EFE               	movlw	-2
 25799  000FBA  006F FF8C  F034    	movff	plusw1,btemp+10
 25800  000FC0  0EFF               	movlw	-1
 25801  000FC2  006F FF8C  F035    	movff	plusw1,btemp+11
 25802  000FC8  0E40               	movlw	64
 25803  000FCA  2434               	addwf	(btemp+10)^0,w,c
 25804  000FCC  6ED9               	movwf	fsr2l,c
 25805  000FCE  0E00               	movlw	0
 25806  000FD0  2035               	addwfc	(btemp+11)^0,w,c
 25807  000FD2  6EDA               	movwf	fsr2h,c
 25808  000FD4  0E00               	movlw	0
 25809  000FD6  6EDF               	movwf	indf2,c
 25810  000FD8                     l16761:
 25811                           
 25812                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 25813  000FD8  013B               	movlb	59	; () banked
 25814  000FDA  9FFC               	bcf	252,7,b	;volatile
 25815                           
 25816                           ; BSR set to: 59
 25817                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 25818                           ;stkvar	_strPtr @ sp[(0)+-2]
 25819  000FDC  0EFE               	movlw	-2
 25820  000FDE  006F FF8F FFE6     	movff	plusw1,postinc1
 25821  000FE4  006F FF8F FFE6     	movff	plusw1,postinc1
 25822  000FEA  EC65  F008         	call	_strlen	;wreg free
 25823  000FEE  0060  F0AB  FBF7   	movff	btemp,15351	;volatile
 25824  000FF4  0060  F0AF  FBF8   	movff	btemp+1,15352	;volatile
 25825                           
 25826                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 25827  000FFA  013B               	movlb	59	; () banked
 25828  000FFC  8FFC               	bsf	252,7,b	;volatile
 25829                           
 25830                           ; BSR set to: 59
 25831                           ;eadog.c: 161:  printf("%s", strPtr);
 25832                           ;stkvar	_strPtr @ sp[(0)+-2]
 25833  000FFE  0EFE               	movlw	-2
 25834  001000  006F FF8F FFE6     	movff	plusw1,postinc1
 25835  001006  006F FF8F FFE6     	movff	plusw1,postinc1
 25836  00100C  0EFC               	movlw	low STR_82
 25837  00100E  6EE6               	movwf	postinc1,c
 25838  001010  0EFF               	movlw	high STR_82
 25839  001012  6EE6               	movwf	postinc1,c
 25840  001014  0E04               	movlw	4
 25841  001016  6EE6               	movwf	postinc1,c
 25842  001018  EC93  F00E         	call	_printf	;wreg free
 25843                           
 25844                           ; BSR set to: 0
 25845                           ;eadog.c: 162:  start_lcd();
 25846  00101C  ECFD  F017         	call	_start_lcd	;wreg free
 25847                           
 25848                           ; BSR set to: 59
 25849                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 25850  001020  52E5               	movf	postdec1,f,c
 25851  001022  52E5               	movf	postdec1,f,c
 25852  001024  0012               	return		;funcret
 25853  001026                     __end_of_eaDogM_WriteString:
 25854                           	opt callstack 0
 25855                           
 25856 ;; *************** function _wait_lcd_set *****************
 25857 ;; Defined at:
 25858 ;;		line 433 in file "eadog.c"
 25859 ;; Parameters:    Size  Location     Type
 25860 ;;		None
 25861 ;; Auto vars:     Size  Location     Type
 25862 ;;		None
 25863 ;; Return value:  Size  Location     Type
 25864 ;;                  1  [STACK] void 
 25865 ;; Registers used:
 25866 ;;		None
 25867 ;; Tracked objects:
 25868 ;;		On entry : 0/0
 25869 ;;		On exit  : 3F/0
 25870 ;;		Unchanged: 0/0
 25871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25876 ;;Total ram usage:        0 bytes
 25877 ;; Hardware stack levels used:    1
 25878 ;; Hardware stack levels required when called:   15
 25879 ;; This function calls:
 25880 ;;		Nothing
 25881 ;; This function is called by:
 25882 ;;		_eaDogM_WriteString
 25883 ;;		_send_lcd_data_dma
 25884 ;; This function uses a reentrant model
 25885 ;;
 25886                           
 25887                           	psect	text89
 25888  002FF4                     __ptext89:
 25889                           	opt callstack 0
 25890  002FF4                     _wait_lcd_set:
 25891                           	opt callstack 12
 25892                           
 25893                           ;eadog.c: 435:  spi_link.LCD_DATA = 1;
 25894                           
 25895                           ; BSR set to: 59
 25896                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25897                           ;incstack = 0
 25898  002FF4  0100               	movlb	0	; () banked
 25899  002FF6  8760               	bsf	_spi_link& (0+255),3,b	;volatile
 25900                           
 25901                           ; BSR set to: 0
 25902                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 25903  002FF8  0012               	return		;funcret
 25904  002FFA                     __end_of_wait_lcd_set:
 25905                           	opt callstack 0
 25906                           
 25907 ;; *************** function _start_lcd *****************
 25908 ;; Defined at:
 25909 ;;		line 428 in file "eadog.c"
 25910 ;; Parameters:    Size  Location     Type
 25911 ;;		None
 25912 ;; Auto vars:     Size  Location     Type
 25913 ;;		None
 25914 ;; Return value:  Size  Location     Type
 25915 ;;                  1  [STACK] void 
 25916 ;; Registers used:
 25917 ;;		None
 25918 ;; Tracked objects:
 25919 ;;		On entry : 0/3B
 25920 ;;		On exit  : 3F/3B
 25921 ;;		Unchanged: 0/0
 25922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25927 ;;Total ram usage:        0 bytes
 25928 ;; Hardware stack levels used:    1
 25929 ;; Hardware stack levels required when called:   15
 25930 ;; This function calls:
 25931 ;;		Nothing
 25932 ;; This function is called by:
 25933 ;;		_eaDogM_WriteString
 25934 ;;		_send_lcd_data_dma
 25935 ;; This function uses a reentrant model
 25936 ;;
 25937                           
 25938                           	psect	text90
 25939  002FFA                     __ptext90:
 25940                           	opt callstack 0
 25941  002FFA                     _start_lcd:
 25942                           	opt callstack 12
 25943                           
 25944                           ;eadog.c: 430:  DMA1CON0bits.DMA1SIRQEN = 1;
 25945                           
 25946                           ; BSR set to: 0
 25947                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25948                           ;incstack = 0
 25949  002FFA  013B               	movlb	59	; () banked
 25950  002FFC  8DFC               	bsf	252,6,b	;volatile
 25951                           
 25952                           ; BSR set to: 59
 25953                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 25954  002FFE  0012               	return		;funcret
 25955  003000                     __end_of_start_lcd:
 25956                           	opt callstack 0
 25957                           
 25958 ;; *************** function _ringBufS_flush *****************
 25959 ;; Defined at:
 25960 ;;		line 76 in file "ringbufs.c"
 25961 ;; Parameters:    Size  Location     Type
 25962 ;;  _this           2  [STACK] PTR struct ringBufS_t
 25963 ;;		 -> ring_buf1(67), 
 25964 ;;  clearBuffer     1  [STACK] const char 
 25965 ;; Auto vars:     Size  Location     Type
 25966 ;;		None
 25967 ;; Return value:  Size  Location     Type
 25968 ;;                  1  [STACK] void 
 25969 ;; Registers used:
 25970 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 25971 ;; Tracked objects:
 25972 ;;		On entry : 3F/0
 25973 ;;		On exit  : 0/0
 25974 ;;		Unchanged: 0/0
 25975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25980 ;;Total ram usage:        0 bytes
 25981 ;; Hardware stack levels used:    1
 25982 ;; Hardware stack levels required when called:   16
 25983 ;; This function calls:
 25984 ;;		_memset
 25985 ;; This function is called by:
 25986 ;;		_eaDogM_WriteString
 25987 ;;		_send_lcd_data_dma
 25988 ;; This function uses a reentrant model
 25989 ;;
 25990                           
 25991                           	psect	text91
 25992  0013C2                     __ptext91:
 25993                           	opt callstack 0
 25994  0013C2                     _ringBufS_flush:
 25995                           	opt callstack 11
 25996                           
 25997                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 25998                           ;stkvar	__this @ sp[(0)+-2]
 25999                           
 26000                           ; BSR set to: 59
 26001                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26002                           ;incstack = 0
 26003  0013C2  0EFE               	movlw	-2
 26004  0013C4  006F FF8C  F034    	movff	plusw1,btemp+10
 26005  0013CA  0EFF               	movlw	-1
 26006  0013CC  006F FF8C  F035    	movff	plusw1,btemp+11
 26007  0013D2  0E42               	movlw	66
 26008  0013D4  2434               	addwf	(btemp+10)^0,w,c
 26009  0013D6  6ED9               	movwf	fsr2l,c
 26010  0013D8  0E00               	movlw	0
 26011  0013DA  2035               	addwfc	(btemp+11)^0,w,c
 26012  0013DC  6EDA               	movwf	fsr2h,c
 26013  0013DE  0E00               	movlw	0
 26014  0013E0  6EDF               	movwf	indf2,c
 26015                           
 26016                           ;ringbufs.c: 79:  _this->head = 0;
 26017                           ;stkvar	__this @ sp[(0)+-2]
 26018  0013E2  0EFE               	movlw	-2
 26019  0013E4  006F FF8C  F034    	movff	plusw1,btemp+10
 26020  0013EA  0EFF               	movlw	-1
 26021  0013EC  006F FF8C  F035    	movff	plusw1,btemp+11
 26022  0013F2  0E40               	movlw	64
 26023  0013F4  2434               	addwf	(btemp+10)^0,w,c
 26024  0013F6  6ED9               	movwf	fsr2l,c
 26025  0013F8  0E00               	movlw	0
 26026  0013FA  2035               	addwfc	(btemp+11)^0,w,c
 26027  0013FC  6EDA               	movwf	fsr2h,c
 26028  0013FE  0E00               	movlw	0
 26029  001400  6EDF               	movwf	indf2,c
 26030                           
 26031                           ;ringbufs.c: 80:  _this->tail = 0;
 26032                           ;stkvar	__this @ sp[(0)+-2]
 26033  001402  0EFE               	movlw	-2
 26034  001404  006F FF8C  F034    	movff	plusw1,btemp+10
 26035  00140A  0EFF               	movlw	-1
 26036  00140C  006F FF8C  F035    	movff	plusw1,btemp+11
 26037  001412  0E41               	movlw	65
 26038  001414  2434               	addwf	(btemp+10)^0,w,c
 26039  001416  6ED9               	movwf	fsr2l,c
 26040  001418  0E00               	movlw	0
 26041  00141A  2035               	addwfc	(btemp+11)^0,w,c
 26042  00141C  6EDA               	movwf	fsr2h,c
 26043  00141E  0E00               	movlw	0
 26044  001420  6EDF               	movwf	indf2,c
 26045                           
 26046                           ;ringbufs.c: 81:  if (clearBuffer) {
 26047                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 26048  001422  0EFD               	movlw	-3
 26049  001424  50E3               	movf	plusw1,w,c
 26050  001426  B4D8               	btfsc	status,2,c
 26051  001428  D011               	goto	l1757
 26052                           
 26053                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 26054  00142A  0E40               	movlw	64
 26055  00142C  6EE6               	movwf	postinc1,c
 26056  00142E  0E00               	movlw	0
 26057  001430  6EE6               	movwf	postinc1,c
 26058  001432  0E00               	movlw	0
 26059  001434  6EE6               	movwf	postinc1,c
 26060  001436  0E00               	movlw	0
 26061  001438  6EE6               	movwf	postinc1,c
 26062                           
 26063                           ;stkvar	__this @ sp[(-4)+-2]
 26064  00143A  0EFA               	movlw	-6
 26065  00143C  006F FF8F FFE6     	movff	plusw1,postinc1
 26066  001442  006F FF8F FFE6     	movff	plusw1,postinc1
 26067  001448  ECD6  F0D9         	call	_memset	;wreg free
 26068  00144C                     l1757:
 26069                           
 26070                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 26071  00144C  52E5               	movf	postdec1,f,c
 26072  00144E  52E5               	movf	postdec1,f,c
 26073  001450  52E5               	movf	postdec1,f,c
 26074  001452  0012               	return		;funcret
 26075  001454                     __end_of_ringBufS_flush:
 26076                           	opt callstack 0
 26077                           
 26078 ;; *************** function _memset *****************
 26079 ;; Defined at:
 26080 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 26081 ;; Parameters:    Size  Location     Type
 26082 ;;  dest            2  [STACK] PTR void 
 26083 ;;		 -> ring_buf2(67), ring_buf1(67), 
 26084 ;;  c               2  [STACK] int 
 26085 ;;  n               2  [STACK] unsigned int 
 26086 ;; Auto vars:     Size  Location     Type
 26087 ;;  s               2  [STACK] PTR unsigned char 
 26088 ;;		 -> ring_buf2(67), ring_buf1(67), 
 26089 ;;  k               2  [STACK] unsigned int 
 26090 ;; Return value:  Size  Location     Type
 26091 ;;                  2  [STACK] PTR void 
 26092 ;; Registers used:
 26093 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 26094 ;; Tracked objects:
 26095 ;;		On entry : 0/0
 26096 ;;		On exit  : 0/0
 26097 ;;		Unchanged: 0/0
 26098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26103 ;;Total ram usage:        0 bytes
 26104 ;; Hardware stack levels used:    1
 26105 ;; Hardware stack levels required when called:   15
 26106 ;; This function calls:
 26107 ;;		Nothing
 26108 ;; This function is called by:
 26109 ;;		_ringBufS_init
 26110 ;;		_ringBufS_flush
 26111 ;; This function uses a reentrant model
 26112 ;;
 26113                           
 26114                           	psect	text92
 26115  01B3AC                     __ptext92:
 26116                           	opt callstack 0
 26117  01B3AC                     _memset:
 26118                           	opt callstack 0
 26119                           
 26120                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26121  01B3AC  52E6               	movf	postinc1,f,c
 26122  01B3AE  52E6               	movf	postinc1,f,c
 26123  01B3B0  52E6               	movf	postinc1,f,c
 26124  01B3B2  52E6               	movf	postinc1,f,c
 26125                           
 26126                           ;stkvar	_dest @ sp[(-4)+-2]
 26127                           
 26128                           ;incstack = 0
 26129  01B3B4  0EFA               	movlw	-6
 26130  01B3B6  006F FF8C  F034    	movff	plusw1,btemp+10
 26131  01B3BC  0EFB               	movlw	-5
 26132  01B3BE  006F FF8C  F035    	movff	plusw1,btemp+11
 26133                           
 26134                           ;stkvar	_s @ sp[(-4)+0]
 26135  01B3C4  0EFD               	movlw	-3
 26136  01B3C6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26137  01B3CC  0EFC               	movlw	-4
 26138  01B3CE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26139                           
 26140                           ;stkvar	_n @ sp[(-4)+-6]
 26141  01B3D4  0EF6               	movlw	-10
 26142  01B3D6  006F FF8C  F02A    	movff	plusw1,btemp
 26143  01B3DC  0EF7               	movlw	-9
 26144  01B3DE  50E3               	movf	plusw1,w,c
 26145  01B3E0  102A               	iorwf	btemp^0,w,c
 26146  01B3E2  B4D8               	btfsc	status,2,c
 26147  01B3E4  D154               	goto	u14490
 26148                           
 26149                           ;stkvar	_c @ sp[(-4)+-4]
 26150                           ;stkvar	_s @ sp[(-4)+0]
 26151  01B3E6  0EFC               	movlw	-4
 26152  01B3E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 26153  01B3EE  0EFD               	movlw	-3
 26154  01B3F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 26155  01B3F6  0EF8               	movlw	-8
 26156  01B3F8  006F FF8F FFDF     	movff	plusw1,indf2
 26157                           
 26158                           ;stkvar	_c @ sp[(-4)+-4]
 26159                           ;stkvar	_n @ sp[(-4)+-6]
 26160                           ;stkvar	_s @ sp[(-4)+0]
 26161  01B3FE  0EFC               	movlw	-4
 26162  01B400  006F FF8C  F034    	movff	plusw1,btemp+10
 26163  01B406  0EFD               	movlw	-3
 26164  01B408  006F FF8C  F035    	movff	plusw1,btemp+11
 26165  01B40E  0EF6               	movlw	-10
 26166  01B410  50E3               	movf	plusw1,w,c
 26167  01B412  2634               	addwf	(btemp+10)^0,f,c
 26168  01B414  0EF7               	movlw	-9
 26169  01B416  50E3               	movf	plusw1,w,c
 26170  01B418  2235               	addwfc	(btemp+11)^0,f,c
 26171  01B41A  0EFF               	movlw	255
 26172  01B41C  2434               	addwf	(btemp+10)^0,w,c
 26173  01B41E  6ED9               	movwf	fsr2l,c
 26174  01B420  0EFF               	movlw	255
 26175  01B422  2035               	addwfc	(btemp+11)^0,w,c
 26176  01B424  6EDA               	movwf	fsr2h,c
 26177  01B426  0EF8               	movlw	-8
 26178  01B428  006F FF8F FFDF     	movff	plusw1,indf2
 26179                           
 26180                           ;stkvar	_n @ sp[(-4)+-6]
 26181  01B42E  0EF7               	movlw	-9
 26182  01B430  50E3               	movf	plusw1,w,c
 26183  01B432  E108               	bnz	l15577
 26184  01B434  0EF6               	movlw	-10
 26185  01B436  006F FF8C  F02A    	movff	plusw1,btemp
 26186  01B43C  0E03               	movlw	3
 26187  01B43E  5E2A               	subwf	btemp^0,f,c
 26188  01B440  A0D8               	btfss	status,0,c
 26189  01B442  D125               	goto	u14490
 26190  01B444                     l15577:
 26191                           
 26192                           ;stkvar	_c @ sp[(-4)+-4]
 26193                           ;stkvar	_s @ sp[(-4)+0]
 26194  01B444  0EFC               	movlw	-4
 26195  01B446  006F FF8C  F034    	movff	plusw1,btemp+10
 26196  01B44C  0EFD               	movlw	-3
 26197  01B44E  006F FF8C  F035    	movff	plusw1,btemp+11
 26198  01B454  0E01               	movlw	1
 26199  01B456  2434               	addwf	(btemp+10)^0,w,c
 26200  01B458  6ED9               	movwf	fsr2l,c
 26201  01B45A  0E00               	movlw	0
 26202  01B45C  2035               	addwfc	(btemp+11)^0,w,c
 26203  01B45E  6EDA               	movwf	fsr2h,c
 26204  01B460  0EF8               	movlw	-8
 26205  01B462  006F FF8F FFDF     	movff	plusw1,indf2
 26206                           
 26207                           ;stkvar	_c @ sp[(-4)+-4]
 26208                           ;stkvar	_s @ sp[(-4)+0]
 26209  01B468  0EFC               	movlw	-4
 26210  01B46A  006F FF8C  F034    	movff	plusw1,btemp+10
 26211  01B470  0EFD               	movlw	-3
 26212  01B472  006F FF8C  F035    	movff	plusw1,btemp+11
 26213  01B478  0E02               	movlw	2
 26214  01B47A  2434               	addwf	(btemp+10)^0,w,c
 26215  01B47C  6ED9               	movwf	fsr2l,c
 26216  01B47E  0E00               	movlw	0
 26217  01B480  2035               	addwfc	(btemp+11)^0,w,c
 26218  01B482  6EDA               	movwf	fsr2h,c
 26219  01B484  0EF8               	movlw	-8
 26220  01B486  006F FF8F FFDF     	movff	plusw1,indf2
 26221                           
 26222                           ;stkvar	_c @ sp[(-4)+-4]
 26223                           ;stkvar	_n @ sp[(-4)+-6]
 26224                           ;stkvar	_s @ sp[(-4)+0]
 26225  01B48C  0EFC               	movlw	-4
 26226  01B48E  006F FF8C  F034    	movff	plusw1,btemp+10
 26227  01B494  0EFD               	movlw	-3
 26228  01B496  006F FF8C  F035    	movff	plusw1,btemp+11
 26229  01B49C  0EF6               	movlw	-10
 26230  01B49E  50E3               	movf	plusw1,w,c
 26231  01B4A0  2634               	addwf	(btemp+10)^0,f,c
 26232  01B4A2  0EF7               	movlw	-9
 26233  01B4A4  50E3               	movf	plusw1,w,c
 26234  01B4A6  2235               	addwfc	(btemp+11)^0,f,c
 26235  01B4A8  0EFE               	movlw	254
 26236  01B4AA  2434               	addwf	(btemp+10)^0,w,c
 26237  01B4AC  6ED9               	movwf	fsr2l,c
 26238  01B4AE  0EFF               	movlw	255
 26239  01B4B0  2035               	addwfc	(btemp+11)^0,w,c
 26240  01B4B2  6EDA               	movwf	fsr2h,c
 26241  01B4B4  0EF8               	movlw	-8
 26242  01B4B6  006F FF8F FFDF     	movff	plusw1,indf2
 26243                           
 26244                           ;stkvar	_c @ sp[(-4)+-4]
 26245                           ;stkvar	_n @ sp[(-4)+-6]
 26246                           ;stkvar	_s @ sp[(-4)+0]
 26247  01B4BC  0EFC               	movlw	-4
 26248  01B4BE  006F FF8C  F034    	movff	plusw1,btemp+10
 26249  01B4C4  0EFD               	movlw	-3
 26250  01B4C6  006F FF8C  F035    	movff	plusw1,btemp+11
 26251  01B4CC  0EF6               	movlw	-10
 26252  01B4CE  50E3               	movf	plusw1,w,c
 26253  01B4D0  2634               	addwf	(btemp+10)^0,f,c
 26254  01B4D2  0EF7               	movlw	-9
 26255  01B4D4  50E3               	movf	plusw1,w,c
 26256  01B4D6  2235               	addwfc	(btemp+11)^0,f,c
 26257  01B4D8  0EFD               	movlw	253
 26258  01B4DA  2434               	addwf	(btemp+10)^0,w,c
 26259  01B4DC  6ED9               	movwf	fsr2l,c
 26260  01B4DE  0EFF               	movlw	255
 26261  01B4E0  2035               	addwfc	(btemp+11)^0,w,c
 26262  01B4E2  6EDA               	movwf	fsr2h,c
 26263  01B4E4  0EF8               	movlw	-8
 26264  01B4E6  006F FF8F FFDF     	movff	plusw1,indf2
 26265                           
 26266                           ;stkvar	_n @ sp[(-4)+-6]
 26267  01B4EC  0EF7               	movlw	-9
 26268  01B4EE  50E3               	movf	plusw1,w,c
 26269  01B4F0  E108               	bnz	l15583
 26270  01B4F2  0EF6               	movlw	-10
 26271  01B4F4  006F FF8C  F02A    	movff	plusw1,btemp
 26272  01B4FA  0E07               	movlw	7
 26273  01B4FC  5E2A               	subwf	btemp^0,f,c
 26274  01B4FE  A0D8               	btfss	status,0,c
 26275  01B500  D0C6               	goto	u14490
 26276  01B502                     l15583:
 26277                           
 26278                           ;stkvar	_c @ sp[(-4)+-4]
 26279                           ;stkvar	_s @ sp[(-4)+0]
 26280  01B502  0EFC               	movlw	-4
 26281  01B504  006F FF8C  F034    	movff	plusw1,btemp+10
 26282  01B50A  0EFD               	movlw	-3
 26283  01B50C  006F FF8C  F035    	movff	plusw1,btemp+11
 26284  01B512  0E03               	movlw	3
 26285  01B514  2434               	addwf	(btemp+10)^0,w,c
 26286  01B516  6ED9               	movwf	fsr2l,c
 26287  01B518  0E00               	movlw	0
 26288  01B51A  2035               	addwfc	(btemp+11)^0,w,c
 26289  01B51C  6EDA               	movwf	fsr2h,c
 26290  01B51E  0EF8               	movlw	-8
 26291  01B520  006F FF8F FFDF     	movff	plusw1,indf2
 26292                           
 26293                           ;stkvar	_c @ sp[(-4)+-4]
 26294                           ;stkvar	_n @ sp[(-4)+-6]
 26295                           ;stkvar	_s @ sp[(-4)+0]
 26296  01B526  0EFC               	movlw	-4
 26297  01B528  006F FF8C  F034    	movff	plusw1,btemp+10
 26298  01B52E  0EFD               	movlw	-3
 26299  01B530  006F FF8C  F035    	movff	plusw1,btemp+11
 26300  01B536  0EF6               	movlw	-10
 26301  01B538  50E3               	movf	plusw1,w,c
 26302  01B53A  2634               	addwf	(btemp+10)^0,f,c
 26303  01B53C  0EF7               	movlw	-9
 26304  01B53E  50E3               	movf	plusw1,w,c
 26305  01B540  2235               	addwfc	(btemp+11)^0,f,c
 26306  01B542  0EFC               	movlw	252
 26307  01B544  2434               	addwf	(btemp+10)^0,w,c
 26308  01B546  6ED9               	movwf	fsr2l,c
 26309  01B548  0EFF               	movlw	255
 26310  01B54A  2035               	addwfc	(btemp+11)^0,w,c
 26311  01B54C  6EDA               	movwf	fsr2h,c
 26312  01B54E  0EF8               	movlw	-8
 26313  01B550  006F FF8F FFDF     	movff	plusw1,indf2
 26314                           
 26315                           ;stkvar	_n @ sp[(-4)+-6]
 26316  01B556  0EF7               	movlw	-9
 26317  01B558  50E3               	movf	plusw1,w,c
 26318  01B55A  E108               	bnz	l15589
 26319  01B55C  0EF6               	movlw	-10
 26320  01B55E  006F FF8C  F02A    	movff	plusw1,btemp
 26321  01B564  0E09               	movlw	9
 26322  01B566  5E2A               	subwf	btemp^0,f,c
 26323  01B568  A0D8               	btfss	status,0,c
 26324  01B56A  D091               	goto	u14490
 26325  01B56C                     l15589:
 26326                           
 26327                           ;stkvar	_s @ sp[(-4)+0]
 26328  01B56C  0EFC               	movlw	-4
 26329  01B56E  006F FF8C  F034    	movff	plusw1,btemp+10
 26330  01B574  1E34               	comf	(btemp+10)^0,f,c
 26331  01B576  0EFD               	movlw	-3
 26332  01B578  006F FF8C  F035    	movff	plusw1,btemp+11
 26333  01B57E  1E35               	comf	(btemp+11)^0,f,c
 26334  01B580  2A34               	incf	(btemp+10)^0,f,c
 26335  01B582  B4D8               	btfsc	status,2,c
 26336  01B584  2A35               	incf	(btemp+11)^0,f,c
 26337  01B586  0E03               	movlw	3
 26338  01B588  1634               	andwf	(btemp+10)^0,f,c
 26339  01B58A  0E00               	movlw	0
 26340  01B58C  1635               	andwf	(btemp+11)^0,f,c
 26341                           
 26342                           ;stkvar	_k @ sp[(-4)+2]
 26343  01B58E  0EFE               	movlw	-2
 26344  01B590  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26345  01B596  0EFF               	movlw	-1
 26346  01B598  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26347                           
 26348                           ;stkvar	_k @ sp[(-4)+2]
 26349                           ;stkvar	_s @ sp[(-4)+0]
 26350  01B59E  0EFC               	movlw	-4
 26351  01B5A0  50E3               	movf	plusw1,w,c
 26352  01B5A2  6E2A               	movwf	btemp^0,c
 26353  01B5A4  0EFE               	movlw	-2
 26354  01B5A6  50E3               	movf	plusw1,w,c
 26355  01B5A8  262A               	addwf	btemp^0,f,c
 26356  01B5AA  0EFC               	movlw	-4
 26357  01B5AC  0060  F0AB  FFE3   	movff	btemp,plusw1
 26358  01B5B2  0EFD               	movlw	-3
 26359  01B5B4  50E3               	movf	plusw1,w,c
 26360  01B5B6  6E2A               	movwf	btemp^0,c
 26361  01B5B8  0EFF               	movlw	-1
 26362  01B5BA  50E3               	movf	plusw1,w,c
 26363  01B5BC  222A               	addwfc	btemp^0,f,c
 26364  01B5BE  0EFD               	movlw	-3
 26365  01B5C0  0060  F0AB  FFE3   	movff	btemp,plusw1
 26366                           
 26367                           ;stkvar	_k @ sp[(-4)+2]
 26368                           ;stkvar	_n @ sp[(-4)+-6]
 26369  01B5C6  0EF6               	movlw	-10
 26370  01B5C8  50E3               	movf	plusw1,w,c
 26371  01B5CA  6E2A               	movwf	btemp^0,c
 26372  01B5CC  0EFE               	movlw	-2
 26373  01B5CE  50E3               	movf	plusw1,w,c
 26374  01B5D0  5E2A               	subwf	btemp^0,f,c
 26375  01B5D2  0EF6               	movlw	-10
 26376  01B5D4  0060  F0AB  FFE3   	movff	btemp,plusw1
 26377  01B5DA  0EF7               	movlw	-9
 26378  01B5DC  50E3               	movf	plusw1,w,c
 26379  01B5DE  6E2A               	movwf	btemp^0,c
 26380  01B5E0  0EFF               	movlw	-1
 26381  01B5E2  50E3               	movf	plusw1,w,c
 26382  01B5E4  5A2A               	subwfb	btemp^0,f,c
 26383  01B5E6  0EF7               	movlw	-9
 26384  01B5E8  0060  F0AB  FFE3   	movff	btemp,plusw1
 26385  01B5EE  0EFC               	movlw	252
 26386  01B5F0  6E34               	movwf	(btemp+10)^0,c
 26387  01B5F2  0EFF               	movlw	255
 26388  01B5F4  6E35               	movwf	(btemp+11)^0,c
 26389                           
 26390                           ;stkvar	_n @ sp[(-4)+-6]
 26391  01B5F6  0EF6               	movlw	-10
 26392  01B5F8  006F FF8C  F02A    	movff	plusw1,btemp
 26393  01B5FE  5034               	movf	(btemp+10)^0,w,c
 26394  01B600  162A               	andwf	btemp^0,f,c
 26395  01B602  0EF6               	movlw	-10
 26396  01B604  0060  F0AB  FFE3   	movff	btemp,plusw1
 26397  01B60A  0EF7               	movlw	-9
 26398  01B60C  006F FF8C  F02A    	movff	plusw1,btemp
 26399  01B612  5035               	movf	(btemp+11)^0,w,c
 26400  01B614  162A               	andwf	btemp^0,f,c
 26401  01B616  0EF7               	movlw	-9
 26402  01B618  D02E               	goto	L25
 26403  01B61A                     l15597:
 26404                           
 26405                           ;stkvar	_c @ sp[(-4)+-4]
 26406                           ;stkvar	_s @ sp[(-4)+0]
 26407  01B61A  0EFC               	movlw	-4
 26408  01B61C  006F FF8F FFD9     	movff	plusw1,fsr2l
 26409  01B622  0EFD               	movlw	-3
 26410  01B624  006F FF8F FFDA     	movff	plusw1,fsr2h
 26411  01B62A  0EF8               	movlw	-8
 26412  01B62C  006F FF8F FFDF     	movff	plusw1,indf2
 26413                           
 26414                           ;stkvar	_n @ sp[(-4)+-6]
 26415  01B632  0EF6               	movlw	-10
 26416  01B634  006F FF8C  F02A    	movff	plusw1,btemp
 26417  01B63A  0E01               	movlw	1
 26418  01B63C  5E2A               	subwf	btemp^0,f,c
 26419  01B63E  0EF6               	movlw	-10
 26420  01B640  0060  F0AB  FFE3   	movff	btemp,plusw1
 26421  01B646  0EF7               	movlw	-9
 26422  01B648  006F FF8C  F02A    	movff	plusw1,btemp
 26423  01B64E  0E00               	movlw	0
 26424  01B650  5A2A               	subwfb	btemp^0,f,c
 26425  01B652  0EF7               	movlw	-9
 26426  01B654  0060  F0AB  FFE3   	movff	btemp,plusw1
 26427                           
 26428                           ;stkvar	_s @ sp[(-4)+0]
 26429  01B65A  0EFC               	movlw	-4
 26430  01B65C  50E3               	movf	plusw1,w,c
 26431  01B65E  0F01               	addlw	1
 26432  01B660  6E2A               	movwf	btemp^0,c
 26433  01B662  0EFC               	movlw	-4
 26434  01B664  0060  F0AB  FFE3   	movff	btemp,plusw1
 26435  01B66A  6A2A               	clrf	btemp^0,c
 26436  01B66C  0EFD               	movlw	-3
 26437  01B66E  50E3               	movf	plusw1,w,c
 26438  01B670  202A               	addwfc	btemp^0,w,c
 26439  01B672  6E2A               	movwf	btemp^0,c
 26440  01B674  0EFD               	movlw	-3
 26441  01B676                     L25:
 26442  01B676  0060  F0AB  FFE3   	movff	btemp,plusw1
 26443                           
 26444                           ;stkvar	_n @ sp[(-4)+-6]
 26445  01B67C  0EF6               	movlw	-10
 26446  01B67E  006F FF8C  F02A    	movff	plusw1,btemp
 26447  01B684  0EF7               	movlw	-9
 26448  01B686  50E3               	movf	plusw1,w,c
 26449  01B688  102A               	iorwf	btemp^0,w,c
 26450  01B68A  A4D8               	btfss	status,2,c
 26451  01B68C  D7C6               	goto	l15597
 26452  01B68E                     u14490:
 26453                           
 26454                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 26455  01B68E  0EF6               	movlw	246
 26456  01B690  26E1               	addwf	fsr1l,f,c
 26457  01B692  0EFF               	movlw	255
 26458  01B694  22E2               	addwfc	fsr1h,f,c
 26459  01B696  0012               	return		;funcret
 26460  01B698                     __end_of_memset:
 26461                           	opt callstack 0
 26462                           
 26463 ;; *************** function _printf *****************
 26464 ;; Defined at:
 26465 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 26466 ;; Parameters:    Size  Location     Type
 26467 ;;  fmt             2  [STACK] PTR const unsigned char 
 26468 ;;		 -> STR_82(3), 
 26469 ;; Auto vars:     Size  Location     Type
 26470 ;;  ap              2  [STACK] PTR void [1]
 26471 ;;		 -> ?_printf(2), ?_sprintf(2), 
 26472 ;;  ret             2    0        int 
 26473 ;; Return value:  Size  Location     Type
 26474 ;;                  2  [STACK] int 
 26475 ;; Registers used:
 26476 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 26477 ;; Tracked objects:
 26478 ;;		On entry : 3F/3B
 26479 ;;		On exit  : 3F/0
 26480 ;;		Unchanged: 0/0
 26481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26486 ;;Total ram usage:        0 bytes
 26487 ;; Hardware stack levels used:    1
 26488 ;; Hardware stack levels required when called:   23
 26489 ;; This function calls:
 26490 ;;		_vfprintf
 26491 ;; This function is called by:
 26492 ;;		_eaDogM_WriteString
 26493 ;; This function uses a reentrant model
 26494 ;;
 26495                           
 26496                           	psect	text93
 26497  001D26                     __ptext93:
 26498                           	opt callstack 0
 26499  001D26                     _printf:
 26500                           	opt callstack 0
 26501                           
 26502                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26503  001D26  52E6               	movf	postinc1,f,c
 26504  001D28  52E6               	movf	postinc1,f,c
 26505                           
 26506                           ;stkvar	?_printf @ sp[(-2)+-3]
 26507                           
 26508                           ;incstack = 0
 26509  001D2A  0EFB               	movlw	251
 26510  001D2C  24E1               	addwf	fsr1l,w,c
 26511  001D2E  6E34               	movwf	(btemp+10)^0,c
 26512  001D30  0EFF               	movlw	255
 26513  001D32  20E2               	addwfc	fsr1h,w,c
 26514  001D34  6E35               	movwf	(btemp+11)^0,c
 26515                           
 26516                           ;stkvar	_ap @ sp[(-2)+0]
 26517  001D36  0EFF               	movlw	-1
 26518  001D38  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26519  001D3E  0EFE               	movlw	-2
 26520  001D40  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26521                           
 26522                           ;stkvar	_ap @ sp[(-2)+0]
 26523  001D46  0EFE               	movlw	254
 26524  001D48  24E1               	addwf	fsr1l,w,c
 26525  001D4A  6E2A               	movwf	btemp^0,c
 26526  001D4C  0EFF               	movlw	255
 26527  001D4E  20E2               	addwfc	fsr1h,w,c
 26528  001D50  6E2B               	movwf	(btemp+1)^0,c
 26529  001D52  0060  F0AB  FFE6   	movff	btemp,postinc1
 26530  001D58  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 26531                           
 26532                           ;stkvar	_fmt @ sp[(-4)+-3]
 26533  001D5E  0EF9               	movlw	-7
 26534  001D60  006F FF8F FFE6     	movff	plusw1,postinc1
 26535  001D66  006F FF8F FFE6     	movff	plusw1,postinc1
 26536  001D6C  0E00               	movlw	0
 26537  001D6E  6EE6               	movwf	postinc1,c
 26538  001D70  0E00               	movlw	0
 26539  001D72  6EE6               	movwf	postinc1,c
 26540  001D74  EC15  F007         	call	_vfprintf	;wreg free
 26541                           
 26542                           ; BSR set to: 0
 26543                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 26544  001D78  52E5               	movf	postdec1,f,c
 26545  001D7A  52E5               	movf	postdec1,f,c
 26546  001D7C  52E5               	movf	postdec1,f,c
 26547  001D7E  50E7               	movf	indf1,w,c
 26548  001D80  5EE1               	subwf	fsr1l,f,c
 26549  001D82  0E00               	movlw	0
 26550  001D84  5AE2               	subwfb	fsr1h,f,c
 26551  001D86  0012               	return		;funcret
 26552  001D88                     __end_of_printf:
 26553                           	opt callstack 0
 26554                           
 26555 ;; *************** function _vfprintf *****************
 26556 ;; Defined at:
 26557 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 26558 ;; Parameters:    Size  Location     Type
 26559 ;;  fp              2  [STACK] PTR struct _IO_FILE
 26560 ;;		 -> f(6), NULL(0), 
 26561 ;;  fmt             2  [STACK] PTR const unsigned char 
 26562 ;;		 -> STR_103(127), STR_101(3), STR_100(3), STR_99(21), 
 26563 ;;		 -> STR_98(21), STR_97(21), STR_96(21), STR_95(21), 
 26564 ;;		 -> STR_94(21), STR_93(26), STR_92(15), STR_91(15), 
 26565 ;;		 -> STR_90(15), STR_89(15), STR_88(10), STR_87(10), 
 26566 ;;		 -> STR_86(19), STR_85(19), STR_82(3), STR_81(14), 
 26567 ;;		 -> STR_80(28), STR_79(28), STR_78(28), STR_77(22), 
 26568 ;;		 -> STR_76(22), STR_75(22), STR_74(22), STR_73(22), 
 26569 ;;		 -> STR_72(22), STR_71(22), STR_70(22), STR_69(22), 
 26570 ;;		 -> STR_68(19), STR_67(21), STR_66(21), STR_65(21), 
 26571 ;;		 -> STR_64(22), STR_63(22), STR_62(22), STR_61(22), 
 26572 ;;		 -> STR_60(22), STR_59(22), STR_58(22), STR_57(22), 
 26573 ;;		 -> STR_56(22), STR_55(21), STR_54(22), STR_53(22), 
 26574 ;;		 -> STR_52(22), STR_51(22), STR_50(22), STR_49(22), 
 26575 ;;		 -> STR_48(24), STR_47(24), STR_46(24), STR_45(30), 
 26576 ;;		 -> STR_44(24), STR_43(24), STR_42(23), STR_41(23), 
 26577 ;;		 -> STR_40(23), STR_39(23), STR_38(23), STR_37(23), 
 26578 ;;		 -> STR_36(23), STR_35(23), STR_34(23), STR_33(23), 
 26579 ;;		 -> STR_32(23), STR_31(23), STR_30(18), STR_29(17), 
 26580 ;;		 -> STR_28(17), STR_27(22), STR_26(22), STR_25(22), 
 26581 ;;		 -> STR_24(14), STR_23(27), STR_22(27), STR_21(23), 
 26582 ;;		 -> STR_20(22), STR_19(22), STR_18(22), STR_17(22), 
 26583 ;;		 -> STR_16(23), STR_15(23), STR_14(23), STR_13(26), 
 26584 ;;		 -> STR_12(22), STR_11(21), STR_10(21), STR_9(21), 
 26585 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 26586 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 26587 ;;  ap              2  [STACK] PTR PTR void 
 26588 ;;		 -> ap(2), ap(2), 
 26589 ;; Auto vars:     Size  Location     Type
 26590 ;;  cfmt            2  [STACK] PTR unsigned char 
 26591 ;;		 -> STR_103(127), STR_101(3), STR_100(3), STR_99(21), 
 26592 ;;		 -> STR_98(21), STR_97(21), STR_96(21), STR_95(21), 
 26593 ;;		 -> STR_94(21), STR_93(26), STR_92(15), STR_91(15), 
 26594 ;;		 -> STR_90(15), STR_89(15), STR_88(10), STR_87(10), 
 26595 ;;		 -> STR_86(19), STR_85(19), STR_82(3), STR_81(14), 
 26596 ;;		 -> STR_80(28), STR_79(28), STR_78(28), STR_77(22), 
 26597 ;;		 -> STR_76(22), STR_75(22), STR_74(22), STR_73(22), 
 26598 ;;		 -> STR_72(22), STR_71(22), STR_70(22), STR_69(22), 
 26599 ;;		 -> STR_68(19), STR_67(21), STR_66(21), STR_65(21), 
 26600 ;;		 -> STR_64(22), STR_63(22), STR_62(22), STR_61(22), 
 26601 ;;		 -> STR_60(22), STR_59(22), STR_58(22), STR_57(22), 
 26602 ;;		 -> STR_56(22), STR_55(21), STR_54(22), STR_53(22), 
 26603 ;;		 -> STR_52(22), STR_51(22), STR_50(22), STR_49(22), 
 26604 ;;		 -> STR_48(24), STR_47(24), STR_46(24), STR_45(30), 
 26605 ;;		 -> STR_44(24), STR_43(24), STR_42(23), STR_41(23), 
 26606 ;;		 -> STR_40(23), STR_39(23), STR_38(23), STR_37(23), 
 26607 ;;		 -> STR_36(23), STR_35(23), STR_34(23), STR_33(23), 
 26608 ;;		 -> STR_32(23), STR_31(23), STR_30(18), STR_29(17), 
 26609 ;;		 -> STR_28(17), STR_27(22), STR_26(22), STR_25(22), 
 26610 ;;		 -> STR_24(14), STR_23(27), STR_22(27), STR_21(23), 
 26611 ;;		 -> STR_20(22), STR_19(22), STR_18(22), STR_17(22), 
 26612 ;;		 -> STR_16(23), STR_15(23), STR_14(23), STR_13(26), 
 26613 ;;		 -> STR_12(22), STR_11(21), STR_10(21), STR_9(21), 
 26614 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 26615 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 26616 ;; Return value:  Size  Location     Type
 26617 ;;                  2  [STACK] int 
 26618 ;; Registers used:
 26619 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 26620 ;; Tracked objects:
 26621 ;;		On entry : 0/2
 26622 ;;		On exit  : 3F/0
 26623 ;;		Unchanged: 0/0
 26624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26629 ;;Total ram usage:        0 bytes
 26630 ;; Hardware stack levels used:    1
 26631 ;; Hardware stack levels required when called:   22
 26632 ;; This function calls:
 26633 ;;		_vfpfcnvrt
 26634 ;; This function is called by:
 26635 ;;		_sprintf
 26636 ;;		_printf
 26637 ;; This function uses a reentrant model
 26638 ;;
 26639                           
 26640                           	psect	text94
 26641  000E2A                     __ptext94:
 26642                           	opt callstack 0
 26643  000E2A                     _vfprintf:
 26644                           	opt callstack 0
 26645                           
 26646                           ; BSR set to: 0
 26647                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26648  000E2A  52E6               	movf	postinc1,f,c
 26649  000E2C  52E6               	movf	postinc1,f,c
 26650                           
 26651                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 26652                           ;stkvar	_fmt @ sp[(-2)+-4]
 26653                           
 26654                           ;incstack = 0
 26655 ;; hardware stack exceeded
 26656  000E2E  0EFA               	movlw	-6
 26657  000E30  006F FF8C  F034    	movff	plusw1,btemp+10
 26658  000E36  0EFB               	movlw	-5
 26659  000E38  006F FF8C  F035    	movff	plusw1,btemp+11
 26660                           
 26661                           ;stkvar	_cfmt @ sp[(-2)+0]
 26662  000E3E  0EFF               	movlw	-1
 26663  000E40  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26664  000E46  0EFE               	movlw	-2
 26665  000E48  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26666                           
 26667                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 26668  000E4E  0100               	movlb	0	; () banked
 26669  000E50  6BBA               	clrf	_nout& (0+255),b
 26670  000E52  6BBB               	clrf	(_nout+1)& (0+255),b
 26671                           
 26672                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 26673  000E54  D021               	goto	l16783
 26674  000E56                     l16781:
 26675                           
 26676                           ; BSR set to: 0
 26677                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 26678                           ;stkvar	_ap @ sp[(-2)+-6]
 26679  000E56  0EF8               	movlw	-8
 26680  000E58  006F FF8F FFE6     	movff	plusw1,postinc1
 26681  000E5E  006F FF8F FFE6     	movff	plusw1,postinc1
 26682                           
 26683                           ;stkvar	_cfmt @ sp[(-4)+0]
 26684  000E64  0EFC               	movlw	252
 26685  000E66  24E1               	addwf	fsr1l,w,c
 26686  000E68  6E2A               	movwf	btemp^0,c
 26687  000E6A  0EFF               	movlw	255
 26688  000E6C  20E2               	addwfc	fsr1h,w,c
 26689  000E6E  6E2B               	movwf	(btemp+1)^0,c
 26690  000E70  0060  F0AB  FFE6   	movff	btemp,postinc1
 26691  000E76  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 26692                           
 26693                           ;stkvar	_fp @ sp[(-6)+-2]
 26694  000E7C  0EF8               	movlw	-8
 26695  000E7E  006F FF8F FFE6     	movff	plusw1,postinc1
 26696  000E84  006F FF8F FFE6     	movff	plusw1,postinc1
 26697  000E8A  EC76  F09C         	call	_vfpfcnvrt	;wreg free
 26698  000E8E  502A               	movf	btemp^0,w,c
 26699  000E90  0100               	movlb	0	; () banked
 26700  000E92  27BA               	addwf	_nout& (0+255),f,b
 26701  000E94  502B               	movf	(btemp+1)^0,w,c
 26702  000E96  23BB               	addwfc	(_nout+1)& (0+255),f,b
 26703  000E98                     l16783:
 26704                           
 26705                           ; BSR set to: 0
 26706                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 26707                           ;stkvar	_cfmt @ sp[(-2)+0]
 26708  000E98  50E1               	movf	fsr1l,w,c
 26709  000E9A  0FFE               	addlw	-2
 26710  000E9C  6ED9               	movwf	fsr2l,c
 26711  000E9E  50E2               	movf	fsr1h,w,c
 26712  000EA0  6EDA               	movwf	fsr2h,c
 26713  000EA2  0EFF               	movlw	255
 26714  000EA4  22DA               	addwfc	fsr2h,f,c
 26715  000EA6  006F FF7B FFF6     	movff	postinc2,tblptrl
 26716  000EAC  006F FF77 FFF7     	movff	postdec2,tblptrh
 26717  000EB2                     	if	0	;tblptru may be non-zero
 26718  000EB2                     	endif
 26719  000EB2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26720  000EB2  0E00               	movlw	low (__mediumconst shr (0+16))
 26721  000EB4  6EF8               	movwf	tblptru,c
 26722  000EB6                     	endif
 26723  000EB6  0008               	tblrd		*
 26724  000EB8  50F5               	movf	tablat,w,c
 26725  000EBA  0900               	iorlw	0
 26726  000EBC  A4D8               	btfss	status,2,c
 26727  000EBE  D7CB               	goto	l16781
 26728                           
 26729                           ; BSR set to: 0
 26730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 26731  000EC0  0060  F2E8  F02A   	movff	_nout,btemp
 26732  000EC6  0060  F2EC  F02B   	movff	_nout+1,btemp+1
 26733                           
 26734                           ; BSR set to: 0
 26735                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 26736  000ECC  0EF8               	movlw	248
 26737  000ECE  26E1               	addwf	fsr1l,f,c
 26738  000ED0  0EFF               	movlw	255
 26739  000ED2  22E2               	addwfc	fsr1h,f,c
 26740  000ED4  0012               	return		;funcret
 26741  000ED6                     __end_of_vfprintf:
 26742                           	opt callstack 0
 26743                           
 26744 ;; *************** function _vfpfcnvrt *****************
 26745 ;; Defined at:
 26746 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 26747 ;; Parameters:    Size  Location     Type
 26748 ;;  fp              2  [STACK] PTR struct _IO_FILE
 26749 ;;		 -> f(6), NULL(0), 
 26750 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 26751 ;;		 -> cfmt(2), 
 26752 ;;  ap              2  [STACK] PTR PTR void 
 26753 ;;		 -> ap(2), ap(2), 
 26754 ;; Auto vars:     Size  Location     Type
 26755 ;;  llu             8  [STACK] unsigned long long 
 26756 ;;  ll              8  [STACK] long long 
 26757 ;;  f               4  [STACK] long long 
 26758 ;;  ct              3  [STACK] unsigned char [3]
 26759 ;;  vp              3    0        PTR void 
 26760 ;;  cp              2  [STACK] PTR unsigned char 
 26761 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), STR_84(9), 
 26762 ;;		 -> STR_83(12), D.lcd(640), D(642), T(176), 
 26763 ;;		 -> cp(4), cb(4), STR_3(5), V(181), 
 26764 ;;  i               2    0        int 
 26765 ;;  done            2    0        int 
 26766 ;;  c               1  [STACK] unsigned char 
 26767 ;; Return value:  Size  Location     Type
 26768 ;;                  2  [STACK] int 
 26769 ;; Registers used:
 26770 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 26771 ;; Tracked objects:
 26772 ;;		On entry : 0/0
 26773 ;;		On exit  : 0/0
 26774 ;;		Unchanged: 0/0
 26775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26780 ;;Total ram usage:        0 bytes
 26781 ;; Hardware stack levels used:    1
 26782 ;; Hardware stack levels required when called:   21
 26783 ;; This function calls:
 26784 ;;		_atoi
 26785 ;;		_ctoa
 26786 ;;		_dtoa
 26787 ;;		_efgtoa
 26788 ;;		_fputc
 26789 ;;		_isdigit
 26790 ;;		_isupper
 26791 ;;		_stoa
 26792 ;;		_strncmp
 26793 ;;		_tolower
 26794 ;;		_utoa
 26795 ;;		_xtoa
 26796 ;; This function is called by:
 26797 ;;		_vfprintf
 26798 ;; This function uses a reentrant model
 26799 ;;
 26800                           
 26801                           	psect	text95
 26802  0138EC                     __ptext95:
 26803                           	opt callstack 0
 26804  0138EC                     _vfpfcnvrt:
 26805                           	opt callstack 0
 26806                           
 26807                           ; BSR set to: 0
 26808                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 26809  0138EC  0E20               	movlw	32
 26810  0138EE  26E1               	addwf	fsr1l,f,c
 26811  0138F0  0E00               	movlw	0
 26812  0138F2  22E2               	addwfc	fsr1h,f,c
 26813                           
 26814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 26815                           ;stkvar	_fmt @ sp[(-32)+-4]
 26816                           
 26817                           ;incstack = 0
 26818 ;; hardware stack exceeded
 26819  0138F4  0EDC               	movlw	-36
 26820  0138F6  006F FF8F FFD9     	movff	plusw1,fsr2l
 26821  0138FC  0EDD               	movlw	-35
 26822  0138FE  006F FF8F FFDA     	movff	plusw1,fsr2h
 26823  013904  006F FF7B FFF6     	movff	postinc2,tblptrl
 26824  01390A  006F FF77 FFF7     	movff	postdec2,tblptrh
 26825  013910                     	if	0	;tblptru may be non-zero
 26826  013910                     	endif
 26827  013910                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26828  013910  0E00               	movlw	low (__mediumconst shr (0+16))
 26829  013912  6EF8               	movwf	tblptru,c
 26830  013914                     	endif
 26831  013914  0008               	tblrd		*
 26832  013916  50F5               	movf	tablat,w,c
 26833  013918  0A25               	xorlw	37
 26834  01391A  A4D8               	btfss	status,2,c
 26835  01391C  EF1D  F0A4         	goto	l16551
 26836                           
 26837                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 26838                           ;stkvar	_fmt @ sp[(-32)+-4]
 26839  013920  0EDC               	movlw	-36
 26840  013922  006F FF8F FFD9     	movff	plusw1,fsr2l
 26841  013928  0EDD               	movlw	-35
 26842  01392A  006F FF8F FFDA     	movff	plusw1,fsr2h
 26843  013930  2ADE               	incf	postinc2,f,c
 26844  013932  0E00               	movlw	0
 26845  013934  22DD               	addwfc	postdec2,f,c
 26846                           
 26847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 26848  013936  6A4A               	clrf	_width^0,c
 26849  013938  6A4B               	clrf	(_width+1)^0,c
 26850  01393A  6A4E               	clrf	_flags^0,c
 26851  01393C  6A4F               	clrf	(_flags+1)^0,c
 26852                           
 26853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 26854  01393E  684C               	setf	_prec^0,c
 26855  013940  684D               	setf	(_prec+1)^0,c
 26856                           
 26857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 26858                           ;stkvar	_fmt @ sp[(-32)+-4]
 26859  013942  0EDC               	movlw	-36
 26860  013944  006F FF8F FFD9     	movff	plusw1,fsr2l
 26861  01394A  0EDD               	movlw	-35
 26862  01394C  006F FF8F FFDA     	movff	plusw1,fsr2h
 26863  013952  006F FF7B FFF6     	movff	postinc2,tblptrl
 26864  013958  006F FF77 FFF7     	movff	postdec2,tblptrh
 26865  01395E                     	if	0	;tblptru may be non-zero
 26866  01395E                     	endif
 26867  01395E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26868  01395E  0E00               	movlw	low (__mediumconst shr (0+16))
 26869  013960  6EF8               	movwf	tblptru,c
 26870  013962                     	endif
 26871  013962  0008               	tblrd		*
 26872  013964  50F5               	movf	tablat,w,c
 26873  013966  0A2A               	xorlw	42
 26874  013968  A4D8               	btfss	status,2,c
 26875  01396A  D031               	goto	l16369
 26876                           
 26877                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 26878                           ;stkvar	_fmt @ sp[(-32)+-4]
 26879  01396C  0EDC               	movlw	-36
 26880  01396E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26881  013974  0EDD               	movlw	-35
 26882  013976  006F FF8F FFDA     	movff	plusw1,fsr2h
 26883  01397C  2ADE               	incf	postinc2,f,c
 26884  01397E  0E00               	movlw	0
 26885  013980  22DD               	addwfc	postdec2,f,c
 26886                           
 26887                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 26888                           ;stkvar	_ap @ sp[(-32)+-6]
 26889  013982  0EDA               	movlw	-38
 26890  013984  006F FF8F FFD9     	movff	plusw1,fsr2l
 26891  01398A  0EDB               	movlw	-37
 26892  01398C  006F FF8F FFDA     	movff	plusw1,fsr2h
 26893  013992  0E02               	movlw	2
 26894  013994  5EDE               	subwf	postinc2,f,c
 26895  013996  0E00               	movlw	0
 26896  013998  5ADD               	subwfb	postdec2,f,c
 26897  01399A  006F FF78  F034    	movff	postinc2,btemp+10
 26898  0139A0  006F FF74  F035    	movff	postdec2,btemp+11
 26899  0139A6  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26900  0139AC  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26901  0139B2  006F FF78  F04A    	movff	postinc2,_width
 26902  0139B8  006F FF74  F04B    	movff	postdec2,_width+1
 26903                           
 26904                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 26905  0139BE  AE4B               	btfss	(_width+1)^0,7,c
 26906  0139C0  D066               	goto	u15900
 26907                           
 26908                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 26909  0139C2  804E               	bsf	_flags^0,0,c
 26910                           
 26911                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 26912  0139C4  6C4A               	negf	_width^0,c
 26913  0139C6  1E4B               	comf	(_width+1)^0,f,c
 26914  0139C8  B0D8               	btfsc	status,0,c
 26915  0139CA  2A4B               	incf	(_width+1)^0,f,c
 26916  0139CC  D060               	goto	u15900
 26917  0139CE                     l16369:
 26918                           
 26919                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 26920                           ;stkvar	_fmt @ sp[(-32)+-4]
 26921  0139CE  0EDC               	movlw	-36
 26922  0139D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 26923  0139D6  0EDD               	movlw	-35
 26924  0139D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 26925  0139DE  006F FF78  F034    	movff	postinc2,btemp+10
 26926  0139E4  006F FF74  F035    	movff	postdec2,btemp+11
 26927  0139EA  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 26928  0139F0  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 26929  0139F6  EC44  F0E3         	call	_atoi	;wreg free
 26930  0139FA  0060  F0A8  F04A   	movff	btemp,_width
 26931  013A00  0060  F0AC  F04B   	movff	btemp+1,_width+1
 26932                           
 26933                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 26934  013A06  D00B               	goto	l16373
 26935  013A08                     l16371:
 26936                           
 26937                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 26938                           ;stkvar	_fmt @ sp[(-32)+-4]
 26939  013A08  0EDC               	movlw	-36
 26940  013A0A  006F FF8F FFD9     	movff	plusw1,fsr2l
 26941  013A10  0EDD               	movlw	-35
 26942  013A12  006F FF8F FFDA     	movff	plusw1,fsr2h
 26943  013A18  2ADE               	incf	postinc2,f,c
 26944  013A1A  0E00               	movlw	0
 26945  013A1C  22DD               	addwfc	postdec2,f,c
 26946  013A1E                     l16373:
 26947  013A1E  0ED0               	movlw	208
 26948  013A20  6E34               	movwf	(btemp+10)^0,c
 26949  013A22  0EFF               	movlw	255
 26950  013A24  6E35               	movwf	(btemp+11)^0,c
 26951                           
 26952                           ;stkvar	_fmt @ sp[(-32)+-4]
 26953  013A26  0EDC               	movlw	-36
 26954  013A28  006F FF8F FFD9     	movff	plusw1,fsr2l
 26955  013A2E  0EDD               	movlw	-35
 26956  013A30  006F FF8F FFDA     	movff	plusw1,fsr2h
 26957  013A36  006F FF7B FFF6     	movff	postinc2,tblptrl
 26958  013A3C  006F FF77 FFF7     	movff	postdec2,tblptrh
 26959  013A42                     	if	0	;tblptru may be non-zero
 26960  013A42                     	endif
 26961  013A42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26962  013A42  0E00               	movlw	low (__mediumconst shr (0+16))
 26963  013A44  6EF8               	movwf	tblptru,c
 26964  013A46                     	endif
 26965  013A46  0008               	tblrd		*
 26966  013A48  50F5               	movf	tablat,w,c
 26967  013A4A  6E32               	movwf	(btemp+8)^0,c
 26968  013A4C  6A33               	clrf	(btemp+9)^0,c
 26969  013A4E  5034               	movf	(btemp+10)^0,w,c
 26970  013A50  2632               	addwf	(btemp+8)^0,f,c
 26971  013A52  5035               	movf	(btemp+11)^0,w,c
 26972  013A54  2233               	addwfc	(btemp+9)^0,f,c
 26973  013A56  5033               	movf	(btemp+9)^0,w,c
 26974  013A58  E106               	bnz	u15880
 26975  013A5A  0E0A               	movlw	10
 26976  013A5C  5C32               	subwf	(btemp+8)^0,w,c
 26977  013A5E  B0D8               	btfsc	status,0,c
 26978  013A60  D002               	goto	u15880
 26979  013A62  0E01               	movlw	1
 26980  013A64  D001               	goto	u15890
 26981  013A66                     u15880:
 26982  013A66  0E00               	movlw	0
 26983  013A68                     u15890:
 26984  013A68  6E34               	movwf	(btemp+10)^0,c
 26985  013A6A  6A35               	clrf	(btemp+11)^0,c
 26986                           
 26987                           ;stkvar	_vfpfcnvrt$6690 @ sp[(-32)+4]
 26988  013A6C  0EE4               	movlw	-28
 26989  013A6E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26990  013A74  0EE5               	movlw	-27
 26991  013A76  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26992                           
 26993                           ;stkvar	_vfpfcnvrt$6690 @ sp[(-32)+4]
 26994  013A7C  0EE4               	movlw	-28
 26995  013A7E  006F FF8C  F02A    	movff	plusw1,btemp
 26996  013A84  0EE5               	movlw	-27
 26997  013A86  50E3               	movf	plusw1,w,c
 26998  013A88  102A               	iorwf	btemp^0,w,c
 26999  013A8A  A4D8               	btfss	status,2,c
 27000  013A8C  D7BD               	goto	l16371
 27001  013A8E                     u15900:
 27002                           
 27003                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 27004                           ;stkvar	_fmt @ sp[(-32)+-4]
 27005  013A8E  0EDC               	movlw	-36
 27006  013A90  006F FF8F FFD9     	movff	plusw1,fsr2l
 27007  013A96  0EDD               	movlw	-35
 27008  013A98  006F FF8F FFDA     	movff	plusw1,fsr2h
 27009  013A9E  006F FF7B FFF6     	movff	postinc2,tblptrl
 27010  013AA4  006F FF77 FFF7     	movff	postdec2,tblptrh
 27011  013AAA                     	if	0	;tblptru may be non-zero
 27012  013AAA                     	endif
 27013  013AAA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27014  013AAA  0E00               	movlw	low (__mediumconst shr (0+16))
 27015  013AAC  6EF8               	movwf	tblptru,c
 27016  013AAE                     	endif
 27017  013AAE  0008               	tblrd		*
 27018  013AB0  50F5               	movf	tablat,w,c
 27019  013AB2  0A2E               	xorlw	46
 27020  013AB4  A4D8               	btfss	status,2,c
 27021  013AB6  D0AC               	goto	u15950
 27022                           
 27023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 27024  013AB8  6A4C               	clrf	_prec^0,c
 27025  013ABA  6A4D               	clrf	(_prec+1)^0,c
 27026                           
 27027                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 27028                           ;stkvar	_fmt @ sp[(-32)+-4]
 27029  013ABC  0EDC               	movlw	-36
 27030  013ABE  006F FF8F FFD9     	movff	plusw1,fsr2l
 27031  013AC4  0EDD               	movlw	-35
 27032  013AC6  006F FF8F FFDA     	movff	plusw1,fsr2h
 27033  013ACC  2ADE               	incf	postinc2,f,c
 27034  013ACE  0E00               	movlw	0
 27035  013AD0  22DD               	addwfc	postdec2,f,c
 27036                           
 27037                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 27038                           ;stkvar	_fmt @ sp[(-32)+-4]
 27039  013AD2  0EDC               	movlw	-36
 27040  013AD4  006F FF8F FFD9     	movff	plusw1,fsr2l
 27041  013ADA  0EDD               	movlw	-35
 27042  013ADC  006F FF8F FFDA     	movff	plusw1,fsr2h
 27043  013AE2  006F FF7B FFF6     	movff	postinc2,tblptrl
 27044  013AE8  006F FF77 FFF7     	movff	postdec2,tblptrh
 27045  013AEE                     	if	0	;tblptru may be non-zero
 27046  013AEE                     	endif
 27047  013AEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27048  013AEE  0E00               	movlw	low (__mediumconst shr (0+16))
 27049  013AF0  6EF8               	movwf	tblptru,c
 27050  013AF2                     	endif
 27051  013AF2  0008               	tblrd		*
 27052  013AF4  50F5               	movf	tablat,w,c
 27053  013AF6  0A2A               	xorlw	42
 27054  013AF8  A4D8               	btfss	status,2,c
 27055  013AFA  D02A               	goto	l16391
 27056                           
 27057                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 27058                           ;stkvar	_fmt @ sp[(-32)+-4]
 27059  013AFC  0EDC               	movlw	-36
 27060  013AFE  006F FF8F FFD9     	movff	plusw1,fsr2l
 27061  013B04  0EDD               	movlw	-35
 27062  013B06  006F FF8F FFDA     	movff	plusw1,fsr2h
 27063  013B0C  2ADE               	incf	postinc2,f,c
 27064  013B0E  0E00               	movlw	0
 27065  013B10  22DD               	addwfc	postdec2,f,c
 27066                           
 27067                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 27068                           ;stkvar	_ap @ sp[(-32)+-6]
 27069  013B12  0EDA               	movlw	-38
 27070  013B14  006F FF8F FFD9     	movff	plusw1,fsr2l
 27071  013B1A  0EDB               	movlw	-37
 27072  013B1C  006F FF8F FFDA     	movff	plusw1,fsr2h
 27073  013B22  0E02               	movlw	2
 27074  013B24  5EDE               	subwf	postinc2,f,c
 27075  013B26  0E00               	movlw	0
 27076  013B28  5ADD               	subwfb	postdec2,f,c
 27077  013B2A  006F FF78  F034    	movff	postinc2,btemp+10
 27078  013B30  006F FF74  F035    	movff	postdec2,btemp+11
 27079  013B36  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27080  013B3C  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27081  013B42  006F FF78  F04C    	movff	postinc2,_prec
 27082  013B48  006F FF74  F04D    	movff	postdec2,_prec+1
 27083                           
 27084                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 27085  013B4E  D060               	goto	u15950
 27086  013B50                     l16391:
 27087                           
 27088                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 27089                           ;stkvar	_fmt @ sp[(-32)+-4]
 27090  013B50  0EDC               	movlw	-36
 27091  013B52  006F FF8F FFD9     	movff	plusw1,fsr2l
 27092  013B58  0EDD               	movlw	-35
 27093  013B5A  006F FF8F FFDA     	movff	plusw1,fsr2h
 27094  013B60  006F FF78  F034    	movff	postinc2,btemp+10
 27095  013B66  006F FF74  F035    	movff	postdec2,btemp+11
 27096  013B6C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27097  013B72  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27098  013B78  EC44  F0E3         	call	_atoi	;wreg free
 27099  013B7C  0060  F0A8  F04C   	movff	btemp,_prec
 27100  013B82  0060  F0AC  F04D   	movff	btemp+1,_prec+1
 27101                           
 27102                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 27103  013B88  D00B               	goto	l16395
 27104  013B8A                     l16393:
 27105                           
 27106                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 27107                           ;stkvar	_fmt @ sp[(-32)+-4]
 27108  013B8A  0EDC               	movlw	-36
 27109  013B8C  006F FF8F FFD9     	movff	plusw1,fsr2l
 27110  013B92  0EDD               	movlw	-35
 27111  013B94  006F FF8F FFDA     	movff	plusw1,fsr2h
 27112  013B9A  2ADE               	incf	postinc2,f,c
 27113  013B9C  0E00               	movlw	0
 27114  013B9E  22DD               	addwfc	postdec2,f,c
 27115  013BA0                     l16395:
 27116  013BA0  0ED0               	movlw	208
 27117  013BA2  6E34               	movwf	(btemp+10)^0,c
 27118  013BA4  0EFF               	movlw	255
 27119  013BA6  6E35               	movwf	(btemp+11)^0,c
 27120                           
 27121                           ;stkvar	_fmt @ sp[(-32)+-4]
 27122  013BA8  0EDC               	movlw	-36
 27123  013BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
 27124  013BB0  0EDD               	movlw	-35
 27125  013BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
 27126  013BB8  006F FF7B FFF6     	movff	postinc2,tblptrl
 27127  013BBE  006F FF77 FFF7     	movff	postdec2,tblptrh
 27128  013BC4                     	if	0	;tblptru may be non-zero
 27129  013BC4                     	endif
 27130  013BC4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27131  013BC4  0E00               	movlw	low (__mediumconst shr (0+16))
 27132  013BC6  6EF8               	movwf	tblptru,c
 27133  013BC8                     	endif
 27134  013BC8  0008               	tblrd		*
 27135  013BCA  50F5               	movf	tablat,w,c
 27136  013BCC  6E32               	movwf	(btemp+8)^0,c
 27137  013BCE  6A33               	clrf	(btemp+9)^0,c
 27138  013BD0  5034               	movf	(btemp+10)^0,w,c
 27139  013BD2  2632               	addwf	(btemp+8)^0,f,c
 27140  013BD4  5035               	movf	(btemp+11)^0,w,c
 27141  013BD6  2233               	addwfc	(btemp+9)^0,f,c
 27142  013BD8  5033               	movf	(btemp+9)^0,w,c
 27143  013BDA  E106               	bnz	u15930
 27144  013BDC  0E0A               	movlw	10
 27145  013BDE  5C32               	subwf	(btemp+8)^0,w,c
 27146  013BE0  B0D8               	btfsc	status,0,c
 27147  013BE2  D002               	goto	u15930
 27148  013BE4  0E01               	movlw	1
 27149  013BE6  D001               	goto	u15940
 27150  013BE8                     u15930:
 27151  013BE8  0E00               	movlw	0
 27152  013BEA                     u15940:
 27153  013BEA  6E34               	movwf	(btemp+10)^0,c
 27154  013BEC  6A35               	clrf	(btemp+11)^0,c
 27155                           
 27156                           ;stkvar	_vfpfcnvrt$6691 @ sp[(-32)+0]
 27157  013BEE  0EE0               	movlw	-32
 27158  013BF0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27159  013BF6  0EE1               	movlw	-31
 27160  013BF8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27161                           
 27162                           ;stkvar	_vfpfcnvrt$6691 @ sp[(-32)+0]
 27163  013BFE  0EE0               	movlw	-32
 27164  013C00  006F FF8C  F02A    	movff	plusw1,btemp
 27165  013C06  0EE1               	movlw	-31
 27166  013C08  50E3               	movf	plusw1,w,c
 27167  013C0A  102A               	iorwf	btemp^0,w,c
 27168  013C0C  A4D8               	btfss	status,2,c
 27169  013C0E  D7BD               	goto	l16393
 27170  013C10                     u15950:
 27171                           
 27172                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 27173                           ;stkvar	_fmt @ sp[(-32)+-4]
 27174  013C10  0EDC               	movlw	-36
 27175  013C12  006F FF8F FFD9     	movff	plusw1,fsr2l
 27176  013C18  0EDD               	movlw	-35
 27177  013C1A  006F FF8F FFDA     	movff	plusw1,fsr2h
 27178  013C20  006F FF7B FFF6     	movff	postinc2,tblptrl
 27179  013C26  006F FF77 FFF7     	movff	postdec2,tblptrh
 27180  013C2C                     	if	0	;tblptru may be non-zero
 27181  013C2C                     	endif
 27182  013C2C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27183  013C2C  0E00               	movlw	low (__mediumconst shr (0+16))
 27184  013C2E  6EF8               	movwf	tblptru,c
 27185  013C30                     	endif
 27186  013C30  0008               	tblrd		*
 27187  013C32  50F5               	movf	tablat,w,c
 27188  013C34  6EE6               	movwf	postinc1,c
 27189  013C36  0E00               	movlw	0
 27190  013C38  6EE6               	movwf	postinc1,c
 27191  013C3A  EC42  F00B         	call	_tolower	;wreg free
 27192                           
 27193                           ;stkvar	_ct @ sp[(-32)+26]
 27194  013C3E  0EFA               	movlw	-6
 27195  013C40  0060  F0AB  FFE3   	movff	btemp,plusw1
 27196                           
 27197                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 27198                           ;stkvar	_ct @ sp[(-32)+26]
 27199  013C46  0EFA               	movlw	-6
 27200  013C48  50E3               	movf	plusw1,w,c
 27201  013C4A  B4D8               	btfsc	status,2,c
 27202  013C4C  D05B               	goto	l16411
 27203                           
 27204                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 27205                           ;stkvar	_ct @ sp[(-32)+26]
 27206  013C4E  0EFB               	movlw	251
 27207  013C50  24E1               	addwf	fsr1l,w,c
 27208  013C52  6ED9               	movwf	fsr2l,c
 27209  013C54  0EFF               	movlw	255
 27210  013C56  20E2               	addwfc	fsr1h,w,c
 27211  013C58  6EDA               	movwf	fsr2h,c
 27212                           
 27213                           ;stkvar	_fmt @ sp[(-32)+-4]
 27214  013C5A  0EDC               	movlw	-36
 27215  013C5C  006F FF8F FFE9     	movff	plusw1,fsr0l
 27216  013C62  0EDD               	movlw	-35
 27217  013C64  006F FF8F FFEA     	movff	plusw1,fsr0h
 27218  013C6A  006F FFB8  F034    	movff	postinc0,btemp+10
 27219  013C70  006F FFB4  F035    	movff	postdec0,btemp+11
 27220  013C76  0E01               	movlw	1
 27221  013C78  2634               	addwf	(btemp+10)^0,f,c
 27222  013C7A  0E00               	movlw	0
 27223  013C7C  2235               	addwfc	(btemp+11)^0,f,c
 27224  013C7E  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 27225  013C84  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 27226  013C8A                     	if	0	;tblptru may be non-zero
 27227  013C8A                     	endif
 27228  013C8A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27229  013C8A  0E00               	movlw	low (__mediumconst shr (0+16))
 27230  013C8C  6EF8               	movwf	tblptru,c
 27231  013C8E                     	endif
 27232  013C8E  0008               	tblrd		*
 27233  013C90  50F5               	movf	tablat,w,c
 27234  013C92  6EE6               	movwf	postinc1,c
 27235  013C94  0E00               	movlw	0
 27236  013C96  6EE6               	movwf	postinc1,c
 27237  013C98  EC42  F00B         	call	_tolower	;wreg free
 27238  013C9C  502A               	movf	btemp^0,w,c
 27239  013C9E  6EDF               	movwf	indf2,c
 27240                           
 27241                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 27242                           ;stkvar	_ct @ sp[(-32)+26]
 27243  013CA0  0EFB               	movlw	251
 27244  013CA2  24E1               	addwf	fsr1l,w,c
 27245  013CA4  6ED9               	movwf	fsr2l,c
 27246  013CA6  0EFF               	movlw	255
 27247  013CA8  20E2               	addwfc	fsr1h,w,c
 27248  013CAA  6EDA               	movwf	fsr2h,c
 27249  013CAC  50DF               	movf	indf2,w,c
 27250  013CAE  B4D8               	btfsc	status,2,c
 27251  013CB0  D029               	goto	l16411
 27252                           
 27253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 27254                           ;stkvar	_ct @ sp[(-32)+26]
 27255  013CB2  0EFC               	movlw	252
 27256  013CB4  24E1               	addwf	fsr1l,w,c
 27257  013CB6  6ED9               	movwf	fsr2l,c
 27258  013CB8  0EFF               	movlw	255
 27259  013CBA  20E2               	addwfc	fsr1h,w,c
 27260  013CBC  6EDA               	movwf	fsr2h,c
 27261                           
 27262                           ;stkvar	_fmt @ sp[(-32)+-4]
 27263  013CBE  0EDC               	movlw	-36
 27264  013CC0  006F FF8F FFE9     	movff	plusw1,fsr0l
 27265  013CC6  0EDD               	movlw	-35
 27266  013CC8  006F FF8F FFEA     	movff	plusw1,fsr0h
 27267  013CCE  006F FFB8  F034    	movff	postinc0,btemp+10
 27268  013CD4  006F FFB4  F035    	movff	postdec0,btemp+11
 27269  013CDA  0E02               	movlw	2
 27270  013CDC  2634               	addwf	(btemp+10)^0,f,c
 27271  013CDE  0E00               	movlw	0
 27272  013CE0  2235               	addwfc	(btemp+11)^0,f,c
 27273  013CE2  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 27274  013CE8  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 27275  013CEE                     	if	0	;tblptru may be non-zero
 27276  013CEE                     	endif
 27277  013CEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27278  013CEE  0E00               	movlw	low (__mediumconst shr (0+16))
 27279  013CF0  6EF8               	movwf	tblptru,c
 27280  013CF2                     	endif
 27281  013CF2  0008               	tblrd		*
 27282  013CF4  50F5               	movf	tablat,w,c
 27283  013CF6  6EE6               	movwf	postinc1,c
 27284  013CF8  0E00               	movlw	0
 27285  013CFA  6EE6               	movwf	postinc1,c
 27286  013CFC  EC42  F00B         	call	_tolower	;wreg free
 27287  013D00  502A               	movf	btemp^0,w,c
 27288  013D02  6EDF               	movwf	indf2,c
 27289  013D04                     l16411:
 27290                           
 27291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 27292                           ;stkvar	_fmt @ sp[(-32)+-4]
 27293  013D04  0EDC               	movlw	-36
 27294  013D06  006F FF8F FFD9     	movff	plusw1,fsr2l
 27295  013D0C  0EDD               	movlw	-35
 27296  013D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
 27297  013D14  006F FF7B FFF6     	movff	postinc2,tblptrl
 27298  013D1A  006F FF77 FFF7     	movff	postdec2,tblptrh
 27299  013D20                     	if	0	;tblptru may be non-zero
 27300  013D20                     	endif
 27301  013D20                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27302  013D20  0E00               	movlw	low (__mediumconst shr (0+16))
 27303  013D22  6EF8               	movwf	tblptru,c
 27304  013D24                     	endif
 27305  013D24  0008               	tblrd		*
 27306  013D26  50F5               	movf	tablat,w,c
 27307  013D28  0A63               	xorlw	99
 27308  013D2A  A4D8               	btfss	status,2,c
 27309  013D2C  D037               	goto	l16421
 27310                           
 27311                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 27312                           ;stkvar	_fmt @ sp[(-32)+-4]
 27313  013D2E  0EDC               	movlw	-36
 27314  013D30  006F FF8F FFD9     	movff	plusw1,fsr2l
 27315  013D36  0EDD               	movlw	-35
 27316  013D38  006F FF8F FFDA     	movff	plusw1,fsr2h
 27317  013D3E  2ADE               	incf	postinc2,f,c
 27318  013D40  0E00               	movlw	0
 27319  013D42  22DD               	addwfc	postdec2,f,c
 27320                           
 27321                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 27322                           ;stkvar	_ap @ sp[(-32)+-6]
 27323  013D44  0EDA               	movlw	-38
 27324  013D46  006F FF8F FFD9     	movff	plusw1,fsr2l
 27325  013D4C  0EDB               	movlw	-37
 27326  013D4E  006F FF8F FFDA     	movff	plusw1,fsr2h
 27327  013D54  0E02               	movlw	2
 27328  013D56  5EDE               	subwf	postinc2,f,c
 27329  013D58  0E00               	movlw	0
 27330  013D5A  5ADD               	subwfb	postdec2,f,c
 27331  013D5C  006F FF78  F034    	movff	postinc2,btemp+10
 27332  013D62  006F FF74  F035    	movff	postdec2,btemp+11
 27333  013D68  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27334  013D6E  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27335  013D74  50DF               	movf	indf2,w,c
 27336  013D76  6E35               	movwf	(btemp+11)^0,c
 27337                           
 27338                           ;stkvar	_c @ sp[(-32)+31]
 27339  013D78  0EFF               	movlw	-1
 27340  013D7A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27341                           
 27342                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 27343                           ;stkvar	_c @ sp[(-32)+31]
 27344  013D80  0EFF               	movlw	-1
 27345  013D82  50E3               	movf	plusw1,w,c
 27346  013D84  6EE6               	movwf	postinc1,c
 27347                           
 27348                           ;stkvar	_fp @ sp[(-33)+-2]
 27349  013D86  0EDD               	movlw	-35
 27350  013D88  006F FF8F FFE6     	movff	plusw1,postinc1
 27351  013D8E  006F FF8F FFE6     	movff	plusw1,postinc1
 27352  013D94  ECBC  F00A         	call	_ctoa	;wreg free
 27353  013D98  EF47  F0A4         	goto	l2700
 27354  013D9C                     l16421:
 27355                           
 27356                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 27357                           ;stkvar	_fmt @ sp[(-32)+-4]
 27358  013D9C  0EDC               	movlw	-36
 27359  013D9E  006F FF8F FFD9     	movff	plusw1,fsr2l
 27360  013DA4  0EDD               	movlw	-35
 27361  013DA6  006F FF8F FFDA     	movff	plusw1,fsr2h
 27362  013DAC  006F FF7B FFF6     	movff	postinc2,tblptrl
 27363  013DB2  006F FF77 FFF7     	movff	postdec2,tblptrh
 27364  013DB8                     	if	0	;tblptru may be non-zero
 27365  013DB8                     	endif
 27366  013DB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27367  013DB8  0E00               	movlw	low (__mediumconst shr (0+16))
 27368  013DBA  6EF8               	movwf	tblptru,c
 27369  013DBC                     	endif
 27370  013DBC  0008               	tblrd		*
 27371  013DBE  50F5               	movf	tablat,w,c
 27372  013DC0  0A64               	xorlw	100
 27373  013DC2  B4D8               	btfsc	status,2,c
 27374  013DC4  D015               	goto	u16000
 27375                           
 27376                           ;stkvar	_fmt @ sp[(-32)+-4]
 27377  013DC6  0EDC               	movlw	-36
 27378  013DC8  006F FF8F FFD9     	movff	plusw1,fsr2l
 27379  013DCE  0EDD               	movlw	-35
 27380  013DD0  006F FF8F FFDA     	movff	plusw1,fsr2h
 27381  013DD6  006F FF7B FFF6     	movff	postinc2,tblptrl
 27382  013DDC  006F FF77 FFF7     	movff	postdec2,tblptrh
 27383  013DE2                     	if	0	;tblptru may be non-zero
 27384  013DE2                     	endif
 27385  013DE2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27386  013DE2  0E00               	movlw	low (__mediumconst shr (0+16))
 27387  013DE4  6EF8               	movwf	tblptru,c
 27388  013DE6                     	endif
 27389  013DE6  0008               	tblrd		*
 27390  013DE8  50F5               	movf	tablat,w,c
 27391  013DEA  0A69               	xorlw	105
 27392  013DEC  A4D8               	btfss	status,2,c
 27393  013DEE  D076               	goto	l16433
 27394  013DF0                     u16000:
 27395                           
 27396                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 27397                           ;stkvar	_fmt @ sp[(-32)+-4]
 27398  013DF0  0EDC               	movlw	-36
 27399  013DF2  006F FF8F FFD9     	movff	plusw1,fsr2l
 27400  013DF8  0EDD               	movlw	-35
 27401  013DFA  006F FF8F FFDA     	movff	plusw1,fsr2h
 27402  013E00  2ADE               	incf	postinc2,f,c
 27403  013E02  0E00               	movlw	0
 27404  013E04  22DD               	addwfc	postdec2,f,c
 27405                           
 27406                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 27407                           ;stkvar	_ap @ sp[(-32)+-6]
 27408  013E06  0EDA               	movlw	-38
 27409  013E08  006F FF8F FFD9     	movff	plusw1,fsr2l
 27410  013E0E  0EDB               	movlw	-37
 27411  013E10  006F FF8F FFDA     	movff	plusw1,fsr2h
 27412  013E16  0E02               	movlw	2
 27413  013E18  5EDE               	subwf	postinc2,f,c
 27414  013E1A  0E00               	movlw	0
 27415  013E1C  5ADD               	subwfb	postdec2,f,c
 27416  013E1E  006F FF78  F034    	movff	postinc2,btemp+10
 27417  013E24  006F FF74  F035    	movff	postdec2,btemp+11
 27418  013E2A  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27419  013E30  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27420  013E36  006F FF78  F034    	movff	postinc2,btemp+10
 27421  013E3C  006F FF74  F035    	movff	postdec2,btemp+11
 27422                           
 27423                           ;stkvar	_ll @ sp[(-32)+14]
 27424  013E42  0EEE               	movlw	-18
 27425  013E44  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27426  013E4A  0EEF               	movlw	-17
 27427  013E4C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27428  013E52  6A2A               	clrf	btemp^0,c
 27429  013E54  BEE3               	btfsc	plusw1,7,c
 27430  013E56  682A               	setf	btemp^0,c
 27431  013E58  0EF0               	movlw	-16
 27432  013E5A  0060  F0AB  FFE3   	movff	btemp,plusw1
 27433  013E60  0EF1               	movlw	-15
 27434  013E62  0060  F0AB  FFE3   	movff	btemp,plusw1
 27435  013E68  0EF2               	movlw	-14
 27436  013E6A  0060  F0AB  FFE3   	movff	btemp,plusw1
 27437  013E70  0EF3               	movlw	-13
 27438  013E72  0060  F0AB  FFE3   	movff	btemp,plusw1
 27439  013E78  0EF4               	movlw	-12
 27440  013E7A  0060  F0AB  FFE3   	movff	btemp,plusw1
 27441  013E80  0EF5               	movlw	-11
 27442  013E82  0060  F0AB  FFE3   	movff	btemp,plusw1
 27443  013E88                     l16429:
 27444                           
 27445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 27446                           ;stkvar	_ll @ sp[(-32)+14]
 27447  013E88  50E1               	movf	fsr1l,w,c
 27448  013E8A  0FEE               	addlw	-18
 27449  013E8C  6ED9               	movwf	fsr2l,c
 27450  013E8E  50E2               	movf	fsr1h,w,c
 27451  013E90  6EDA               	movwf	fsr2h,c
 27452  013E92  0EFF               	movlw	255
 27453  013E94  22DA               	addwfc	fsr2h,f,c
 27454  013E96  006F FF7B FFE6     	movff	postinc2,postinc1
 27455  013E9C  006F FF7B FFE6     	movff	postinc2,postinc1
 27456  013EA2  006F FF7B FFE6     	movff	postinc2,postinc1
 27457  013EA8  006F FF7B FFE6     	movff	postinc2,postinc1
 27458  013EAE  006F FF7B FFE6     	movff	postinc2,postinc1
 27459  013EB4  006F FF7B FFE6     	movff	postinc2,postinc1
 27460  013EBA  006F FF7B FFE6     	movff	postinc2,postinc1
 27461  013EC0  006F FF7B FFE6     	movff	postinc2,postinc1
 27462                           
 27463                           ;stkvar	_fp @ sp[(-40)+-2]
 27464  013EC6  0ED6               	movlw	-42
 27465  013EC8  006F FF8F FFE6     	movff	plusw1,postinc1
 27466  013ECE  006F FF8F FFE6     	movff	plusw1,postinc1
 27467  013ED4  EC5E  F0CB         	call	_dtoa	;wreg free
 27468  013ED8  EF47  F0A4         	goto	l2700
 27469  013EDC                     l16433:
 27470                           
 27471                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 27472  013EDC  0E02               	movlw	2
 27473  013EDE  6EE6               	movwf	postinc1,c
 27474  013EE0  0E00               	movlw	0
 27475  013EE2  6EE6               	movwf	postinc1,c
 27476  013EE4  0EED               	movlw	low STR_112
 27477  013EE6  6EE6               	movwf	postinc1,c
 27478  013EE8  0EFF               	movlw	high STR_112
 27479  013EEA  6EE6               	movwf	postinc1,c
 27480                           
 27481                           ;stkvar	_fmt @ sp[(-36)+-4]
 27482  013EEC  0ED8               	movlw	-40
 27483  013EEE  006F FF8F FFD9     	movff	plusw1,fsr2l
 27484  013EF4  0ED9               	movlw	-39
 27485  013EF6  006F FF8F FFDA     	movff	plusw1,fsr2h
 27486  013EFC  006F FF78  F034    	movff	postinc2,btemp+10
 27487  013F02  006F FF74  F035    	movff	postdec2,btemp+11
 27488  013F08  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27489  013F0E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27490  013F14  EC28  F0EA         	call	_strncmp	;wreg free
 27491  013F18  502A               	movf	btemp^0,w,c
 27492  013F1A  102B               	iorwf	(btemp+1)^0,w,c
 27493  013F1C  B4D8               	btfsc	status,2,c
 27494  013F1E  D022               	goto	u16020
 27495  013F20  0E02               	movlw	2
 27496  013F22  6EE6               	movwf	postinc1,c
 27497  013F24  0E00               	movlw	0
 27498  013F26  6EE6               	movwf	postinc1,c
 27499  013F28  0EF3               	movlw	low STR_116
 27500  013F2A  6EE6               	movwf	postinc1,c
 27501  013F2C  0EFF               	movlw	high STR_116
 27502  013F2E  6EE6               	movwf	postinc1,c
 27503                           
 27504                           ;stkvar	_fmt @ sp[(-36)+-4]
 27505  013F30  0ED8               	movlw	-40
 27506  013F32  006F FF8F FFD9     	movff	plusw1,fsr2l
 27507  013F38  0ED9               	movlw	-39
 27508  013F3A  006F FF8F FFDA     	movff	plusw1,fsr2h
 27509  013F40  006F FF78  F034    	movff	postinc2,btemp+10
 27510  013F46  006F FF74  F035    	movff	postdec2,btemp+11
 27511  013F4C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27512  013F52  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27513  013F58  EC28  F0EA         	call	_strncmp	;wreg free
 27514  013F5C  502A               	movf	btemp^0,w,c
 27515  013F5E  102B               	iorwf	(btemp+1)^0,w,c
 27516  013F60  A4D8               	btfss	status,2,c
 27517  013F62  D069               	goto	l16445
 27518  013F64                     u16020:
 27519                           
 27520                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 27521                           ;stkvar	_fmt @ sp[(-32)+-4]
 27522  013F64  0EDC               	movlw	-36
 27523  013F66  006F FF8F FFD9     	movff	plusw1,fsr2l
 27524  013F6C  0EDD               	movlw	-35
 27525  013F6E  006F FF8F FFDA     	movff	plusw1,fsr2h
 27526  013F74  0E02               	movlw	2
 27527  013F76  26DE               	addwf	postinc2,f,c
 27528  013F78  0E00               	movlw	0
 27529  013F7A  22DD               	addwfc	postdec2,f,c
 27530                           
 27531                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 27532                           ;stkvar	_ap @ sp[(-32)+-6]
 27533  013F7C  0EDA               	movlw	-38
 27534  013F7E  006F FF8F FFD9     	movff	plusw1,fsr2l
 27535  013F84  0EDB               	movlw	-37
 27536  013F86  006F FF8F FFDA     	movff	plusw1,fsr2h
 27537  013F8C  0E04               	movlw	4
 27538  013F8E  5EDE               	subwf	postinc2,f,c
 27539  013F90  0E00               	movlw	0
 27540  013F92  5ADD               	subwfb	postdec2,f,c
 27541  013F94  006F FF78  F034    	movff	postinc2,btemp+10
 27542  013F9A  006F FF74  F035    	movff	postdec2,btemp+11
 27543  013FA0  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27544  013FA6  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27545  013FAC  006F FF78  F032    	movff	postinc2,btemp+8
 27546  013FB2  006F FF78  F033    	movff	postinc2,btemp+9
 27547  013FB8  006F FF78  F034    	movff	postinc2,btemp+10
 27548  013FBE  006F FF78  F035    	movff	postinc2,btemp+11
 27549  013FC4  0060  F0C8  F03A   	movff	btemp+8,btemp+16
 27550  013FCA  0060  F0CC  F03B   	movff	btemp+9,btemp+17
 27551  013FD0  0060  F0D0  F03C   	movff	btemp+10,btemp+18
 27552  013FD6  0060  F0D4  F03D   	movff	btemp+11,btemp+19
 27553  013FDC  6A3E               	clrf	(btemp+20)^0,c
 27554  013FDE  BE3D               	btfsc	(btemp+19)^0,7,c
 27555  013FE0  683E               	setf	(btemp+20)^0,c
 27556  013FE2  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 27557  013FE8  0060  F0F8  F040   	movff	btemp+20,btemp+22
 27558  013FEE  0060  F0F8  F041   	movff	btemp+20,btemp+23
 27559                           
 27560                           ;stkvar	_ll @ sp[(-32)+14]
 27561  013FF4  0EEE               	movlw	-18
 27562  013FF6  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 27563  013FFC  0EEF               	movlw	-17
 27564  013FFE  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 27565  014004  0EF0               	movlw	-16
 27566  014006  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 27567  01400C  0EF1               	movlw	-15
 27568  01400E  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 27569  014014  0EF2               	movlw	-14
 27570  014016  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 27571  01401C  0EF3               	movlw	-13
 27572  01401E  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 27573  014024  0EF4               	movlw	-12
 27574  014026  0060  F103  FFE3   	movff	btemp+22,plusw1
 27575  01402C  0EF5               	movlw	-11
 27576  01402E  0060  F107  FFE3   	movff	btemp+23,plusw1
 27577  014034  D729               	goto	l16429
 27578  014036                     l16445:
 27579                           
 27580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 27581                           ;stkvar	_ct @ sp[(-32)+26]
 27582  014036  0EFA               	movlw	-6
 27583  014038  006F FF8C  F02A    	movff	plusw1,btemp
 27584  01403E  0E66               	movlw	102
 27585  014040  182A               	xorwf	btemp^0,w,c
 27586  014042  A4D8               	btfss	status,2,c
 27587  014044  D06E               	goto	l16457
 27588                           
 27589                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 27590                           ;stkvar	_fmt @ sp[(-32)+-4]
 27591  014046  0EDC               	movlw	-36
 27592  014048  006F FF8F FFD9     	movff	plusw1,fsr2l
 27593  01404E  0EDD               	movlw	-35
 27594  014050  006F FF8F FFDA     	movff	plusw1,fsr2h
 27595  014056  006F FF7B FFF6     	movff	postinc2,tblptrl
 27596  01405C  006F FF77 FFF7     	movff	postdec2,tblptrh
 27597  014062                     	if	0	;tblptru may be non-zero
 27598  014062                     	endif
 27599  014062                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27600  014062  0E00               	movlw	low (__mediumconst shr (0+16))
 27601  014064  6EF8               	movwf	tblptru,c
 27602  014066                     	endif
 27603                           
 27604                           ;stkvar	_c @ sp[(-32)+31]
 27605  014066  0008               	tblrd		*
 27606  014068  0EFF               	movlw	-1
 27607  01406A  006F FFD7 FFE3     	movff	tablat,plusw1
 27608                           
 27609                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 27610                           ;stkvar	_fmt @ sp[(-32)+-4]
 27611  014070  0EDC               	movlw	-36
 27612  014072  006F FF8F FFD9     	movff	plusw1,fsr2l
 27613  014078  0EDD               	movlw	-35
 27614  01407A  006F FF8F FFDA     	movff	plusw1,fsr2h
 27615  014080  2ADE               	incf	postinc2,f,c
 27616  014082  0E00               	movlw	0
 27617  014084  22DD               	addwfc	postdec2,f,c
 27618                           
 27619                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 27620                           ;stkvar	_ap @ sp[(-32)+-6]
 27621  014086  0EDA               	movlw	-38
 27622  014088  006F FF8F FFD9     	movff	plusw1,fsr2l
 27623  01408E  0EDB               	movlw	-37
 27624  014090  006F FF8F FFDA     	movff	plusw1,fsr2h
 27625  014096  0E04               	movlw	4
 27626  014098  5EDE               	subwf	postinc2,f,c
 27627  01409A  0E00               	movlw	0
 27628  01409C  5ADD               	subwfb	postdec2,f,c
 27629  01409E  006F FF78  F034    	movff	postinc2,btemp+10
 27630  0140A4  006F FF74  F035    	movff	postdec2,btemp+11
 27631  0140AA  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27632  0140B0  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27633  0140B6  006F FF78  F032    	movff	postinc2,btemp+8
 27634  0140BC  006F FF78  F033    	movff	postinc2,btemp+9
 27635  0140C2  006F FF78  F034    	movff	postinc2,btemp+10
 27636  0140C8  006F FF78  F035    	movff	postinc2,btemp+11
 27637                           
 27638                           ;stkvar	_f @ sp[(-32)+22]
 27639  0140CE  0EF6               	movlw	-10
 27640  0140D0  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 27641  0140D6  0EF7               	movlw	-9
 27642  0140D8  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 27643  0140DE  0EF8               	movlw	-8
 27644  0140E0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27645  0140E6  0EF9               	movlw	-7
 27646  0140E8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27647  0140EE                     l16453:
 27648                           
 27649                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 27650                           ;stkvar	_c @ sp[(-32)+31]
 27651  0140EE  0EFF               	movlw	-1
 27652  0140F0  50E3               	movf	plusw1,w,c
 27653  0140F2  6EE6               	movwf	postinc1,c
 27654                           
 27655                           ;stkvar	_f @ sp[(-33)+22]
 27656  0140F4  0EF5               	movlw	-11
 27657  0140F6  006F FF8F FFE6     	movff	plusw1,postinc1
 27658  0140FC  006F FF8F FFE6     	movff	plusw1,postinc1
 27659  014102  006F FF8F FFE6     	movff	plusw1,postinc1
 27660  014108  006F FF8F FFE6     	movff	plusw1,postinc1
 27661                           
 27662                           ;stkvar	_fp @ sp[(-37)+-2]
 27663  01410E  0ED9               	movlw	-39
 27664  014110  006F FF8F FFE6     	movff	plusw1,postinc1
 27665  014116  006F FF8F FFE6     	movff	plusw1,postinc1
 27666  01411C  ECEB  F08A         	call	_efgtoa	;wreg free
 27667  014120  D3B6               	goto	l2700
 27668  014122                     l16457:
 27669                           
 27670                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 27671  014122  0E02               	movlw	2
 27672  014124  6EE6               	movwf	postinc1,c
 27673  014126  0E00               	movlw	0
 27674  014128  6EE6               	movwf	postinc1,c
 27675  01412A  0EF0               	movlw	low STR_121
 27676  01412C  6EE6               	movwf	postinc1,c
 27677  01412E  0EFF               	movlw	high STR_121
 27678  014130  6EE6               	movwf	postinc1,c
 27679                           
 27680                           ;stkvar	_ct @ sp[(-36)+26]
 27681  014132  0EF6               	movlw	246
 27682  014134  24E1               	addwf	fsr1l,w,c
 27683  014136  6E2A               	movwf	btemp^0,c
 27684  014138  0EFF               	movlw	255
 27685  01413A  20E2               	addwfc	fsr1h,w,c
 27686  01413C  6E2B               	movwf	(btemp+1)^0,c
 27687  01413E  0060  F0AB  FFE6   	movff	btemp,postinc1
 27688  014144  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 27689  01414A  EC28  F0EA         	call	_strncmp	;wreg free
 27690  01414E  502A               	movf	btemp^0,w,c
 27691  014150  102B               	iorwf	(btemp+1)^0,w,c
 27692  014152  A4D8               	btfss	status,2,c
 27693  014154  D096               	goto	l16477
 27694                           
 27695                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 27696                           ;stkvar	_fmt @ sp[(-32)+-4]
 27697  014156  0EDC               	movlw	-36
 27698  014158  006F FF8F FFD9     	movff	plusw1,fsr2l
 27699  01415E  0EDD               	movlw	-35
 27700  014160  006F FF8F FFDA     	movff	plusw1,fsr2h
 27701  014166  006F FF78  F034    	movff	postinc2,btemp+10
 27702  01416C  006F FF74  F035    	movff	postdec2,btemp+11
 27703  014172  0E01               	movlw	1
 27704  014174  2634               	addwf	(btemp+10)^0,f,c
 27705  014176  0E00               	movlw	0
 27706  014178  2235               	addwfc	(btemp+11)^0,f,c
 27707  01417A  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 27708  014180  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 27709  014186                     	if	0	;tblptru may be non-zero
 27710  014186                     	endif
 27711  014186                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27712  014186  0E00               	movlw	low (__mediumconst shr (0+16))
 27713  014188  6EF8               	movwf	tblptru,c
 27714  01418A                     	endif
 27715                           
 27716                           ;stkvar	_c @ sp[(-32)+31]
 27717  01418A  0008               	tblrd		*
 27718  01418C  0EFF               	movlw	-1
 27719  01418E  006F FFD7 FFE3     	movff	tablat,plusw1
 27720  014194  0EBF               	movlw	191
 27721  014196  6E34               	movwf	(btemp+10)^0,c
 27722  014198  0EFF               	movlw	255
 27723  01419A  6E35               	movwf	(btemp+11)^0,c
 27724                           
 27725                           ;stkvar	_fmt @ sp[(-32)+-4]
 27726  01419C  0EDC               	movlw	-36
 27727  01419E  006F FF8F FFD9     	movff	plusw1,fsr2l
 27728  0141A4  0EDD               	movlw	-35
 27729  0141A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 27730  0141AC  006F FF7B FFF6     	movff	postinc2,tblptrl
 27731  0141B2  006F FF77 FFF7     	movff	postdec2,tblptrh
 27732  0141B8                     	if	0	;tblptru may be non-zero
 27733  0141B8                     	endif
 27734  0141B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27735  0141B8  0E00               	movlw	low (__mediumconst shr (0+16))
 27736  0141BA  6EF8               	movwf	tblptru,c
 27737  0141BC                     	endif
 27738  0141BC  0008               	tblrd		*
 27739  0141BE  50F5               	movf	tablat,w,c
 27740  0141C0  6E32               	movwf	(btemp+8)^0,c
 27741  0141C2  6A33               	clrf	(btemp+9)^0,c
 27742  0141C4  5034               	movf	(btemp+10)^0,w,c
 27743  0141C6  2632               	addwf	(btemp+8)^0,f,c
 27744  0141C8  5035               	movf	(btemp+11)^0,w,c
 27745  0141CA  2233               	addwfc	(btemp+9)^0,f,c
 27746  0141CC  5033               	movf	(btemp+9)^0,w,c
 27747  0141CE  E106               	bnz	u16050
 27748  0141D0  0E1A               	movlw	26
 27749  0141D2  5C32               	subwf	(btemp+8)^0,w,c
 27750  0141D4  B0D8               	btfsc	status,0,c
 27751  0141D6  D002               	goto	u16050
 27752  0141D8  0E01               	movlw	1
 27753  0141DA  D001               	goto	u16060
 27754  0141DC                     u16050:
 27755  0141DC  0E00               	movlw	0
 27756  0141DE                     u16060:
 27757  0141DE  6E34               	movwf	(btemp+10)^0,c
 27758  0141E0  6A35               	clrf	(btemp+11)^0,c
 27759                           
 27760                           ;stkvar	_vfpfcnvrt$6702 @ sp[(-32)+2]
 27761  0141E2  0EE2               	movlw	-30
 27762  0141E4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27763  0141EA  0EE3               	movlw	-29
 27764  0141EC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27765                           
 27766                           ;stkvar	_vfpfcnvrt$6702 @ sp[(-32)+2]
 27767  0141F2  0EE2               	movlw	-30
 27768  0141F4  006F FF8C  F02A    	movff	plusw1,btemp
 27769  0141FA  0EE3               	movlw	-29
 27770  0141FC  50E3               	movf	plusw1,w,c
 27771  0141FE  102A               	iorwf	btemp^0,w,c
 27772                           
 27773                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 27774                           ;stkvar	_ap @ sp[(-32)+-6]
 27775                           
 27776                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 27777                           
 27778                           ;stkvar	_f @ sp[(-32)+22]
 27779                           
 27780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 27781                           ;stkvar	_ap @ sp[(-32)+-6]
 27782  014200  0EDA               	movlw	-38
 27783  014202  006F FF8F FFD9     	movff	plusw1,fsr2l
 27784  014208  0EDB               	movlw	-37
 27785  01420A  006F FF8F FFDA     	movff	plusw1,fsr2h
 27786  014210  0E04               	movlw	4
 27787  014212  5EDE               	subwf	postinc2,f,c
 27788  014214  0E00               	movlw	0
 27789  014216  5ADD               	subwfb	postdec2,f,c
 27790  014218  006F FF78  F034    	movff	postinc2,btemp+10
 27791  01421E  006F FF74  F035    	movff	postdec2,btemp+11
 27792  014224  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27793  01422A  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27794  014230  006F FF78  F032    	movff	postinc2,btemp+8
 27795  014236  006F FF78  F033    	movff	postinc2,btemp+9
 27796  01423C  006F FF78  F034    	movff	postinc2,btemp+10
 27797  014242  006F FF78  F035    	movff	postinc2,btemp+11
 27798                           
 27799                           ;stkvar	_f @ sp[(-32)+22]
 27800  014248  0EF6               	movlw	-10
 27801  01424A  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 27802  014250  0EF7               	movlw	-9
 27803  014252  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 27804  014258  0EF8               	movlw	-8
 27805  01425A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27806  014260  0EF9               	movlw	-7
 27807  014262  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27808                           
 27809                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 27810                           ;stkvar	_fmt @ sp[(-32)+-4]
 27811  014268  0EDC               	movlw	-36
 27812  01426A  006F FF8F FFD9     	movff	plusw1,fsr2l
 27813  014270  0EDD               	movlw	-35
 27814  014272  006F FF8F FFDA     	movff	plusw1,fsr2h
 27815  014278  0E02               	movlw	2
 27816  01427A  26DE               	addwf	postinc2,f,c
 27817  01427C  0E00               	movlw	0
 27818  01427E  22DD               	addwfc	postdec2,f,c
 27819  014280  D736               	goto	l16453
 27820  014282                     l16477:
 27821                           
 27822                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 27823                           ;stkvar	_fmt @ sp[(-32)+-4]
 27824  014282  0EDC               	movlw	-36
 27825  014284  006F FF8F FFD9     	movff	plusw1,fsr2l
 27826  01428A  0EDD               	movlw	-35
 27827  01428C  006F FF8F FFDA     	movff	plusw1,fsr2h
 27828  014292  006F FF7B FFF6     	movff	postinc2,tblptrl
 27829  014298  006F FF77 FFF7     	movff	postdec2,tblptrh
 27830  01429E                     	if	0	;tblptru may be non-zero
 27831  01429E                     	endif
 27832  01429E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27833  01429E  0E00               	movlw	low (__mediumconst shr (0+16))
 27834  0142A0  6EF8               	movwf	tblptru,c
 27835  0142A2                     	endif
 27836  0142A2  0008               	tblrd		*
 27837  0142A4  50F5               	movf	tablat,w,c
 27838  0142A6  0A73               	xorlw	115
 27839  0142A8  A4D8               	btfss	status,2,c
 27840  0142AA  D042               	goto	l16487
 27841                           
 27842                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 27843                           ;stkvar	_fmt @ sp[(-32)+-4]
 27844  0142AC  0EDC               	movlw	-36
 27845  0142AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 27846  0142B4  0EDD               	movlw	-35
 27847  0142B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 27848  0142BC  2ADE               	incf	postinc2,f,c
 27849  0142BE  0E00               	movlw	0
 27850  0142C0  22DD               	addwfc	postdec2,f,c
 27851                           
 27852                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 27853                           ;stkvar	_ap @ sp[(-32)+-6]
 27854  0142C2  0EDA               	movlw	-38
 27855  0142C4  006F FF8F FFD9     	movff	plusw1,fsr2l
 27856  0142CA  0EDB               	movlw	-37
 27857  0142CC  006F FF8F FFDA     	movff	plusw1,fsr2h
 27858  0142D2  0E02               	movlw	2
 27859  0142D4  5EDE               	subwf	postinc2,f,c
 27860  0142D6  0E00               	movlw	0
 27861  0142D8  5ADD               	subwfb	postdec2,f,c
 27862  0142DA  006F FF78  F034    	movff	postinc2,btemp+10
 27863  0142E0  006F FF74  F035    	movff	postdec2,btemp+11
 27864  0142E6  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27865  0142EC  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27866  0142F2  006F FF78  F034    	movff	postinc2,btemp+10
 27867  0142F8  006F FF74  F035    	movff	postdec2,btemp+11
 27868                           
 27869                           ;stkvar	_cp @ sp[(-32)+29]
 27870  0142FE  0EFE               	movlw	-2
 27871  014300  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27872  014306  0EFD               	movlw	-3
 27873  014308  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27874                           
 27875                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 27876                           ;stkvar	_cp @ sp[(-32)+29]
 27877  01430E  0EFD               	movlw	-3
 27878  014310  006F FF8F FFE6     	movff	plusw1,postinc1
 27879  014316  006F FF8F FFE6     	movff	plusw1,postinc1
 27880                           
 27881                           ;stkvar	_fp @ sp[(-34)+-2]
 27882  01431C  0EDC               	movlw	-36
 27883  01431E  006F FF8F FFE6     	movff	plusw1,postinc1
 27884  014324  006F FF8F FFE6     	movff	plusw1,postinc1
 27885  01432A  EC25  F0DE         	call	_stoa	;wreg free
 27886  01432E  D2AF               	goto	l2700
 27887  014330                     l16487:
 27888                           
 27889                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 27890                           ;stkvar	_fmt @ sp[(-32)+-4]
 27891  014330  0EDC               	movlw	-36
 27892  014332  006F FF8F FFD9     	movff	plusw1,fsr2l
 27893  014338  0EDD               	movlw	-35
 27894  01433A  006F FF8F FFDA     	movff	plusw1,fsr2h
 27895  014340  006F FF7B FFF6     	movff	postinc2,tblptrl
 27896  014346  006F FF77 FFF7     	movff	postdec2,tblptrh
 27897  01434C                     	if	0	;tblptru may be non-zero
 27898  01434C                     	endif
 27899  01434C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27900  01434C  0E00               	movlw	low (__mediumconst shr (0+16))
 27901  01434E  6EF8               	movwf	tblptru,c
 27902  014350                     	endif
 27903  014350  0008               	tblrd		*
 27904  014352  50F5               	movf	tablat,w,c
 27905  014354  0A75               	xorlw	117
 27906  014356  A4D8               	btfss	status,2,c
 27907  014358  D07C               	goto	l16497
 27908                           
 27909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 27910                           ;stkvar	_fmt @ sp[(-32)+-4]
 27911  01435A  0EDC               	movlw	-36
 27912  01435C  006F FF8F FFD9     	movff	plusw1,fsr2l
 27913  014362  0EDD               	movlw	-35
 27914  014364  006F FF8F FFDA     	movff	plusw1,fsr2h
 27915  01436A  2ADE               	incf	postinc2,f,c
 27916  01436C  0E00               	movlw	0
 27917  01436E  22DD               	addwfc	postdec2,f,c
 27918                           
 27919                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 27920                           ;stkvar	_ap @ sp[(-32)+-6]
 27921  014370  0EDA               	movlw	-38
 27922  014372  006F FF8F FFD9     	movff	plusw1,fsr2l
 27923  014378  0EDB               	movlw	-37
 27924  01437A  006F FF8F FFDA     	movff	plusw1,fsr2h
 27925  014380  0E02               	movlw	2
 27926  014382  5EDE               	subwf	postinc2,f,c
 27927  014384  0E00               	movlw	0
 27928  014386  5ADD               	subwfb	postdec2,f,c
 27929  014388  006F FF78  F034    	movff	postinc2,btemp+10
 27930  01438E  006F FF74  F035    	movff	postdec2,btemp+11
 27931  014394  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27932  01439A  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27933  0143A0  006F FF78  F034    	movff	postinc2,btemp+10
 27934  0143A6  006F FF74  F035    	movff	postdec2,btemp+11
 27935  0143AC  5034               	movf	(btemp+10)^0,w,c
 27936  0143AE  6E3A               	movwf	(btemp+16)^0,c
 27937  0143B0  5035               	movf	(btemp+11)^0,w,c
 27938  0143B2  6E3B               	movwf	(btemp+17)^0,c
 27939  0143B4  6A3C               	clrf	(btemp+18)^0,c
 27940  0143B6  6A3D               	clrf	(btemp+19)^0,c
 27941  0143B8  6A3E               	clrf	(btemp+20)^0,c
 27942  0143BA  6A3F               	clrf	(btemp+21)^0,c
 27943  0143BC  6A40               	clrf	(btemp+22)^0,c
 27944  0143BE  6A41               	clrf	(btemp+23)^0,c
 27945                           
 27946                           ;stkvar	_llu @ sp[(-32)+6]
 27947  0143C0  0EE6               	movlw	-26
 27948  0143C2  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 27949  0143C8  0EE7               	movlw	-25
 27950  0143CA  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 27951  0143D0  0EE8               	movlw	-24
 27952  0143D2  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 27953  0143D8  0EE9               	movlw	-23
 27954  0143DA  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 27955  0143E0  0EEA               	movlw	-22
 27956  0143E2  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 27957  0143E8  0EEB               	movlw	-21
 27958  0143EA  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 27959  0143F0  0EEC               	movlw	-20
 27960  0143F2  0060  F103  FFE3   	movff	btemp+22,plusw1
 27961  0143F8  0EED               	movlw	-19
 27962  0143FA  0060  F107  FFE3   	movff	btemp+23,plusw1
 27963                           
 27964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 27965                           ;stkvar	_llu @ sp[(-32)+6]
 27966  014400  50E1               	movf	fsr1l,w,c
 27967  014402  0FE6               	addlw	-26
 27968  014404  6ED9               	movwf	fsr2l,c
 27969  014406  50E2               	movf	fsr1h,w,c
 27970  014408  6EDA               	movwf	fsr2h,c
 27971  01440A  0EFF               	movlw	255
 27972  01440C  22DA               	addwfc	fsr2h,f,c
 27973  01440E  006F FF7B FFE6     	movff	postinc2,postinc1
 27974  014414  006F FF7B FFE6     	movff	postinc2,postinc1
 27975  01441A  006F FF7B FFE6     	movff	postinc2,postinc1
 27976  014420  006F FF7B FFE6     	movff	postinc2,postinc1
 27977  014426  006F FF7B FFE6     	movff	postinc2,postinc1
 27978  01442C  006F FF7B FFE6     	movff	postinc2,postinc1
 27979  014432  006F FF7B FFE6     	movff	postinc2,postinc1
 27980  014438  006F FF7B FFE6     	movff	postinc2,postinc1
 27981                           
 27982                           ;stkvar	_fp @ sp[(-40)+-2]
 27983  01443E  0ED6               	movlw	-42
 27984  014440  006F FF8F FFE6     	movff	plusw1,postinc1
 27985  014446  006F FF8F FFE6     	movff	plusw1,postinc1
 27986  01444C  ECB8  F0D6         	call	_utoa	;wreg free
 27987  014450  D21E               	goto	l2700
 27988  014452                     l16497:
 27989                           
 27990                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 27991  014452  0E02               	movlw	2
 27992  014454  6EE6               	movwf	postinc1,c
 27993  014456  0E00               	movlw	0
 27994  014458  6EE6               	movwf	postinc1,c
 27995  01445A  0EF6               	movlw	low STR_126
 27996  01445C  6EE6               	movwf	postinc1,c
 27997  01445E  0EFF               	movlw	high STR_126
 27998  014460  6EE6               	movwf	postinc1,c
 27999                           
 28000                           ;stkvar	_fmt @ sp[(-36)+-4]
 28001  014462  0ED8               	movlw	-40
 28002  014464  006F FF8F FFD9     	movff	plusw1,fsr2l
 28003  01446A  0ED9               	movlw	-39
 28004  01446C  006F FF8F FFDA     	movff	plusw1,fsr2h
 28005  014472  006F FF78  F034    	movff	postinc2,btemp+10
 28006  014478  006F FF74  F035    	movff	postdec2,btemp+11
 28007  01447E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 28008  014484  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 28009  01448A  EC28  F0EA         	call	_strncmp	;wreg free
 28010  01448E  502A               	movf	btemp^0,w,c
 28011  014490  102B               	iorwf	(btemp+1)^0,w,c
 28012  014492  A4D8               	btfss	status,2,c
 28013  014494  D039               	goto	l16507
 28014                           
 28015                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 28016                           ;stkvar	_fmt @ sp[(-32)+-4]
 28017  014496  0EDC               	movlw	-36
 28018  014498  006F FF8F FFD9     	movff	plusw1,fsr2l
 28019  01449E  0EDD               	movlw	-35
 28020  0144A0  006F FF8F FFDA     	movff	plusw1,fsr2h
 28021  0144A6  0E02               	movlw	2
 28022  0144A8  26DE               	addwf	postinc2,f,c
 28023  0144AA  0E00               	movlw	0
 28024  0144AC  22DD               	addwfc	postdec2,f,c
 28025                           
 28026                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 28027                           ;stkvar	_ap @ sp[(-32)+-6]
 28028  0144AE  0EDA               	movlw	-38
 28029  0144B0  006F FF8F FFD9     	movff	plusw1,fsr2l
 28030  0144B6  0EDB               	movlw	-37
 28031  0144B8  006F FF8F FFDA     	movff	plusw1,fsr2h
 28032  0144BE  0E04               	movlw	4
 28033  0144C0  5EDE               	subwf	postinc2,f,c
 28034  0144C2  0E00               	movlw	0
 28035  0144C4  5ADD               	subwfb	postdec2,f,c
 28036  0144C6  006F FF78  F034    	movff	postinc2,btemp+10
 28037  0144CC  006F FF74  F035    	movff	postdec2,btemp+11
 28038  0144D2  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 28039  0144D8  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 28040  0144DE  006F FF78  F032    	movff	postinc2,btemp+8
 28041  0144E4  006F FF78  F033    	movff	postinc2,btemp+9
 28042  0144EA  006F FF78  F034    	movff	postinc2,btemp+10
 28043  0144F0  006F FF78  F035    	movff	postinc2,btemp+11
 28044  0144F6  5032               	movf	(btemp+8)^0,w,c
 28045  0144F8  6E3A               	movwf	(btemp+16)^0,c
 28046  0144FA  5033               	movf	(btemp+9)^0,w,c
 28047  0144FC  6E3B               	movwf	(btemp+17)^0,c
 28048  0144FE  5034               	movf	(btemp+10)^0,w,c
 28049  014500  6E3C               	movwf	(btemp+18)^0,c
 28050  014502  5035               	movf	(btemp+11)^0,w,c
 28051  014504  6E3D               	movwf	(btemp+19)^0,c
 28052  014506  D758               	goto	L26
 28053  014508                     l16507:
 28054                           
 28055                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 28056                           ;stkvar	_fmt @ sp[(-32)+-4]
 28057  014508  0EDC               	movlw	-36
 28058  01450A  006F FF8F FFD9     	movff	plusw1,fsr2l
 28059  014510  0EDD               	movlw	-35
 28060  014512  006F FF8F FFDA     	movff	plusw1,fsr2h
 28061  014518  006F FF7B FFF6     	movff	postinc2,tblptrl
 28062  01451E  006F FF77 FFF7     	movff	postdec2,tblptrh
 28063  014524                     	if	0	;tblptru may be non-zero
 28064  014524                     	endif
 28065  014524                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28066  014524  0E00               	movlw	low (__mediumconst shr (0+16))
 28067  014526  6EF8               	movwf	tblptru,c
 28068  014528                     	endif
 28069  014528  0008               	tblrd		*
 28070  01452A  50F5               	movf	tablat,w,c
 28071  01452C  0A78               	xorlw	120
 28072  01452E  B4D8               	btfsc	status,2,c
 28073  014530  D015               	goto	u16120
 28074                           
 28075                           ;stkvar	_fmt @ sp[(-32)+-4]
 28076  014532  0EDC               	movlw	-36
 28077  014534  006F FF8F FFD9     	movff	plusw1,fsr2l
 28078  01453A  0EDD               	movlw	-35
 28079  01453C  006F FF8F FFDA     	movff	plusw1,fsr2h
 28080  014542  006F FF7B FFF6     	movff	postinc2,tblptrl
 28081  014548  006F FF77 FFF7     	movff	postdec2,tblptrh
 28082  01454E                     	if	0	;tblptru may be non-zero
 28083  01454E                     	endif
 28084  01454E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28085  01454E  0E00               	movlw	low (__mediumconst shr (0+16))
 28086  014550  6EF8               	movwf	tblptru,c
 28087  014552                     	endif
 28088  014552  0008               	tblrd		*
 28089  014554  50F5               	movf	tablat,w,c
 28090  014556  0A58               	xorlw	88
 28091  014558  A4D8               	btfss	status,2,c
 28092  01455A  D094               	goto	l16521
 28093  01455C                     u16120:
 28094                           
 28095                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 28096                           ;stkvar	_fmt @ sp[(-32)+-4]
 28097  01455C  0EDC               	movlw	-36
 28098  01455E  006F FF8F FFD9     	movff	plusw1,fsr2l
 28099  014564  0EDD               	movlw	-35
 28100  014566  006F FF8F FFDA     	movff	plusw1,fsr2h
 28101  01456C  006F FF7B FFF6     	movff	postinc2,tblptrl
 28102  014572  006F FF77 FFF7     	movff	postdec2,tblptrh
 28103  014578                     	if	0	;tblptru may be non-zero
 28104  014578                     	endif
 28105  014578                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28106  014578  0E00               	movlw	low (__mediumconst shr (0+16))
 28107  01457A  6EF8               	movwf	tblptru,c
 28108  01457C                     	endif
 28109                           
 28110                           ;stkvar	_c @ sp[(-32)+31]
 28111  01457C  0008               	tblrd		*
 28112  01457E  0EFF               	movlw	-1
 28113  014580  006F FFD7 FFE3     	movff	tablat,plusw1
 28114                           
 28115                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 28116                           ;stkvar	_fmt @ sp[(-32)+-4]
 28117  014586  0EDC               	movlw	-36
 28118  014588  006F FF8F FFD9     	movff	plusw1,fsr2l
 28119  01458E  0EDD               	movlw	-35
 28120  014590  006F FF8F FFDA     	movff	plusw1,fsr2h
 28121  014596  2ADE               	incf	postinc2,f,c
 28122  014598  0E00               	movlw	0
 28123  01459A  22DD               	addwfc	postdec2,f,c
 28124                           
 28125                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 28126                           ;stkvar	_ap @ sp[(-32)+-6]
 28127  01459C  0EDA               	movlw	-38
 28128  01459E  006F FF8F FFD9     	movff	plusw1,fsr2l
 28129  0145A4  0EDB               	movlw	-37
 28130  0145A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 28131  0145AC  0E02               	movlw	2
 28132  0145AE  5EDE               	subwf	postinc2,f,c
 28133  0145B0  0E00               	movlw	0
 28134  0145B2  5ADD               	subwfb	postdec2,f,c
 28135  0145B4  006F FF78  F034    	movff	postinc2,btemp+10
 28136  0145BA  006F FF74  F035    	movff	postdec2,btemp+11
 28137  0145C0  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 28138  0145C6  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 28139  0145CC  006F FF78  F034    	movff	postinc2,btemp+10
 28140  0145D2  006F FF74  F035    	movff	postdec2,btemp+11
 28141  0145D8  5034               	movf	(btemp+10)^0,w,c
 28142  0145DA  6E3A               	movwf	(btemp+16)^0,c
 28143  0145DC  5035               	movf	(btemp+11)^0,w,c
 28144  0145DE  6E3B               	movwf	(btemp+17)^0,c
 28145  0145E0  6A3C               	clrf	(btemp+18)^0,c
 28146  0145E2  6A3D               	clrf	(btemp+19)^0,c
 28147  0145E4  6A3E               	clrf	(btemp+20)^0,c
 28148  0145E6  6A3F               	clrf	(btemp+21)^0,c
 28149  0145E8  6A40               	clrf	(btemp+22)^0,c
 28150  0145EA  6A41               	clrf	(btemp+23)^0,c
 28151                           
 28152                           ;stkvar	_llu @ sp[(-32)+6]
 28153  0145EC  0EE6               	movlw	-26
 28154  0145EE  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 28155  0145F4  0EE7               	movlw	-25
 28156  0145F6  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 28157  0145FC  0EE8               	movlw	-24
 28158  0145FE  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 28159  014604  0EE9               	movlw	-23
 28160  014606  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 28161  01460C  0EEA               	movlw	-22
 28162  01460E  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 28163  014614  0EEB               	movlw	-21
 28164  014616  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 28165  01461C  0EEC               	movlw	-20
 28166  01461E  0060  F103  FFE3   	movff	btemp+22,plusw1
 28167  014624  0EED               	movlw	-19
 28168  014626  0060  F107  FFE3   	movff	btemp+23,plusw1
 28169                           
 28170                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 28171                           ;stkvar	_c @ sp[(-32)+31]
 28172  01462C  0EFF               	movlw	-1
 28173  01462E  50E3               	movf	plusw1,w,c
 28174  014630  6EE6               	movwf	postinc1,c
 28175                           
 28176                           ;stkvar	_llu @ sp[(-33)+6]
 28177  014632  50E1               	movf	fsr1l,w,c
 28178  014634  0FE5               	addlw	-27
 28179  014636  6ED9               	movwf	fsr2l,c
 28180  014638  50E2               	movf	fsr1h,w,c
 28181  01463A  6EDA               	movwf	fsr2h,c
 28182  01463C  0EFF               	movlw	255
 28183  01463E  22DA               	addwfc	fsr2h,f,c
 28184  014640  006F FF7B FFE6     	movff	postinc2,postinc1
 28185  014646  006F FF7B FFE6     	movff	postinc2,postinc1
 28186  01464C  006F FF7B FFE6     	movff	postinc2,postinc1
 28187  014652  006F FF7B FFE6     	movff	postinc2,postinc1
 28188  014658  006F FF7B FFE6     	movff	postinc2,postinc1
 28189  01465E  006F FF7B FFE6     	movff	postinc2,postinc1
 28190  014664  006F FF7B FFE6     	movff	postinc2,postinc1
 28191  01466A  006F FF7B FFE6     	movff	postinc2,postinc1
 28192                           
 28193                           ;stkvar	_fp @ sp[(-41)+-2]
 28194  014670  0ED5               	movlw	-43
 28195  014672  006F FF8F FFE6     	movff	plusw1,postinc1
 28196  014678  006F FF8F FFE6     	movff	plusw1,postinc1
 28197  01467E  ECCB  F0CF         	call	_xtoa	;wreg free
 28198  014682  D105               	goto	l2700
 28199  014684                     l16521:
 28200                           
 28201                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 28202  014684  0E02               	movlw	2
 28203  014686  6EE6               	movwf	postinc1,c
 28204  014688  0E00               	movlw	0
 28205  01468A  6EE6               	movwf	postinc1,c
 28206  01468C  0EF9               	movlw	low STR_131
 28207  01468E  6EE6               	movwf	postinc1,c
 28208  014690  0EFF               	movlw	high STR_131
 28209  014692  6EE6               	movwf	postinc1,c
 28210                           
 28211                           ;stkvar	_fmt @ sp[(-36)+-4]
 28212  014694  0ED8               	movlw	-40
 28213  014696  006F FF8F FFD9     	movff	plusw1,fsr2l
 28214  01469C  0ED9               	movlw	-39
 28215  01469E  006F FF8F FFDA     	movff	plusw1,fsr2h
 28216  0146A4  006F FF78  F034    	movff	postinc2,btemp+10
 28217  0146AA  006F FF74  F035    	movff	postdec2,btemp+11
 28218  0146B0  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 28219  0146B6  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 28220  0146BC  EC28  F0EA         	call	_strncmp	;wreg free
 28221  0146C0  502A               	movf	btemp^0,w,c
 28222  0146C2  102B               	iorwf	(btemp+1)^0,w,c
 28223  0146C4  B4D8               	btfsc	status,2,c
 28224  0146C6  D022               	goto	u16140
 28225  0146C8  0E02               	movlw	2
 28226  0146CA  6EE6               	movwf	postinc1,c
 28227  0146CC  0E00               	movlw	0
 28228  0146CE  6EE6               	movwf	postinc1,c
 28229  0146D0  0EEA               	movlw	low STR_135
 28230  0146D2  6EE6               	movwf	postinc1,c
 28231  0146D4  0EFF               	movlw	high STR_135
 28232  0146D6  6EE6               	movwf	postinc1,c
 28233                           
 28234                           ;stkvar	_fmt @ sp[(-36)+-4]
 28235  0146D8  0ED8               	movlw	-40
 28236  0146DA  006F FF8F FFD9     	movff	plusw1,fsr2l
 28237  0146E0  0ED9               	movlw	-39
 28238  0146E2  006F FF8F FFDA     	movff	plusw1,fsr2h
 28239  0146E8  006F FF78  F034    	movff	postinc2,btemp+10
 28240  0146EE  006F FF74  F035    	movff	postdec2,btemp+11
 28241  0146F4  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 28242  0146FA  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 28243  014700  EC28  F0EA         	call	_strncmp	;wreg free
 28244  014704  502A               	movf	btemp^0,w,c
 28245  014706  102B               	iorwf	(btemp+1)^0,w,c
 28246  014708  A4D8               	btfss	status,2,c
 28247  01470A  D058               	goto	l16535
 28248  01470C                     u16140:
 28249                           
 28250                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 28251                           ;stkvar	_fmt @ sp[(-32)+-4]
 28252  01470C  0EDC               	movlw	-36
 28253  01470E  006F FF8F FFD9     	movff	plusw1,fsr2l
 28254  014714  0EDD               	movlw	-35
 28255  014716  006F FF8F FFDA     	movff	plusw1,fsr2h
 28256  01471C  006F FF78  F034    	movff	postinc2,btemp+10
 28257  014722  006F FF74  F035    	movff	postdec2,btemp+11
 28258  014728  0E01               	movlw	1
 28259  01472A  2634               	addwf	(btemp+10)^0,f,c
 28260  01472C  0E00               	movlw	0
 28261  01472E  2235               	addwfc	(btemp+11)^0,f,c
 28262  014730  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 28263  014736  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 28264  01473C                     	if	0	;tblptru may be non-zero
 28265  01473C                     	endif
 28266  01473C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28267  01473C  0E00               	movlw	low (__mediumconst shr (0+16))
 28268  01473E  6EF8               	movwf	tblptru,c
 28269  014740                     	endif
 28270                           
 28271                           ;stkvar	_c @ sp[(-32)+31]
 28272  014740  0008               	tblrd		*
 28273  014742  0EFF               	movlw	-1
 28274  014744  006F FFD7 FFE3     	movff	tablat,plusw1
 28275                           
 28276                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 28277                           ;stkvar	_fmt @ sp[(-32)+-4]
 28278  01474A  0EDC               	movlw	-36
 28279  01474C  006F FF8F FFD9     	movff	plusw1,fsr2l
 28280  014752  0EDD               	movlw	-35
 28281  014754  006F FF8F FFDA     	movff	plusw1,fsr2h
 28282  01475A  0E02               	movlw	2
 28283  01475C  26DE               	addwf	postinc2,f,c
 28284  01475E  0E00               	movlw	0
 28285  014760  22DD               	addwfc	postdec2,f,c
 28286                           
 28287                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 28288                           ;stkvar	_ap @ sp[(-32)+-6]
 28289  014762  0EDA               	movlw	-38
 28290  014764  006F FF8F FFD9     	movff	plusw1,fsr2l
 28291  01476A  0EDB               	movlw	-37
 28292  01476C  006F FF8F FFDA     	movff	plusw1,fsr2h
 28293  014772  0E04               	movlw	4
 28294  014774  5EDE               	subwf	postinc2,f,c
 28295  014776  0E00               	movlw	0
 28296  014778  5ADD               	subwfb	postdec2,f,c
 28297  01477A  006F FF78  F034    	movff	postinc2,btemp+10
 28298  014780  006F FF74  F035    	movff	postdec2,btemp+11
 28299  014786  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 28300  01478C  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 28301  014792  006F FF78  F032    	movff	postinc2,btemp+8
 28302  014798  006F FF78  F033    	movff	postinc2,btemp+9
 28303  01479E  006F FF78  F034    	movff	postinc2,btemp+10
 28304  0147A4  006F FF78  F035    	movff	postinc2,btemp+11
 28305  0147AA  5032               	movf	(btemp+8)^0,w,c
 28306  0147AC  6E3A               	movwf	(btemp+16)^0,c
 28307  0147AE  5033               	movf	(btemp+9)^0,w,c
 28308  0147B0  6E3B               	movwf	(btemp+17)^0,c
 28309  0147B2  5034               	movf	(btemp+10)^0,w,c
 28310  0147B4  6E3C               	movwf	(btemp+18)^0,c
 28311  0147B6  5035               	movf	(btemp+11)^0,w,c
 28312  0147B8  6E3D               	movwf	(btemp+19)^0,c
 28313  0147BA  D714               	goto	L27
 28314  0147BC                     l16535:
 28315                           
 28316                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 28317                           ;stkvar	_fmt @ sp[(-32)+-4]
 28318  0147BC  0EDC               	movlw	-36
 28319  0147BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 28320  0147C4  0EDD               	movlw	-35
 28321  0147C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 28322  0147CC  006F FF7B FFF6     	movff	postinc2,tblptrl
 28323  0147D2  006F FF77 FFF7     	movff	postdec2,tblptrh
 28324  0147D8                     	if	0	;tblptru may be non-zero
 28325  0147D8                     	endif
 28326  0147D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28327  0147D8  0E00               	movlw	low (__mediumconst shr (0+16))
 28328  0147DA  6EF8               	movwf	tblptru,c
 28329  0147DC                     	endif
 28330  0147DC  0008               	tblrd		*
 28331  0147DE  50F5               	movf	tablat,w,c
 28332  0147E0  0A25               	xorlw	37
 28333  0147E2  A4D8               	btfss	status,2,c
 28334  0147E4  D01A               	goto	l16545
 28335                           
 28336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 28337                           ;stkvar	_fmt @ sp[(-32)+-4]
 28338  0147E6  0EDC               	movlw	-36
 28339  0147E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 28340  0147EE  0EDD               	movlw	-35
 28341  0147F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 28342  0147F6  2ADE               	incf	postinc2,f,c
 28343  0147F8  0E00               	movlw	0
 28344  0147FA  22DD               	addwfc	postdec2,f,c
 28345                           
 28346                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 28347                           ;stkvar	_fp @ sp[(-32)+-2]
 28348  0147FC  0EDE               	movlw	-34
 28349  0147FE  006F FF8F FFE6     	movff	plusw1,postinc1
 28350  014804  006F FF8F FFE6     	movff	plusw1,postinc1
 28351  01480A  0E25               	movlw	37
 28352  01480C  6EE6               	movwf	postinc1,c
 28353  01480E  0E00               	movlw	0
 28354  014810  6EE6               	movwf	postinc1,c
 28355  014812  ECD8  F0FC         	call	_fputc	;wreg free
 28356  014816                     l16541:
 28357                           
 28358                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 28359  014816  0E01               	movlw	1
 28360  014818  D00C               	goto	L28
 28361  01481A                     l16545:
 28362                           
 28363                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 28364                           ;stkvar	_fmt @ sp[(-32)+-4]
 28365  01481A  0EDC               	movlw	-36
 28366  01481C  006F FF8F FFD9     	movff	plusw1,fsr2l
 28367  014822  0EDD               	movlw	-35
 28368  014824  006F FF8F FFDA     	movff	plusw1,fsr2h
 28369  01482A  2ADE               	incf	postinc2,f,c
 28370  01482C  0E00               	movlw	0
 28371  01482E  22DD               	addwfc	postdec2,f,c
 28372                           
 28373                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 28374  014830  0E00               	movlw	0
 28375  014832                     L28:
 28376  014832  6E2A               	movwf	btemp^0,c
 28377  014834  0E00               	movlw	0
 28378  014836  6E2B               	movwf	(btemp+1)^0,c
 28379  014838  D02A               	goto	l2700
 28380  01483A                     l16551:
 28381                           
 28382                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 28383                           ;stkvar	_fp @ sp[(-32)+-2]
 28384  01483A  0EDE               	movlw	-34
 28385  01483C  006F FF8F FFE6     	movff	plusw1,postinc1
 28386  014842  006F FF8F FFE6     	movff	plusw1,postinc1
 28387                           
 28388                           ;stkvar	_fmt @ sp[(-34)+-4]
 28389  014848  0EDA               	movlw	-38
 28390  01484A  006F FF8F FFD9     	movff	plusw1,fsr2l
 28391  014850  0EDB               	movlw	-37
 28392  014852  006F FF8F FFDA     	movff	plusw1,fsr2h
 28393  014858  006F FF7B FFF6     	movff	postinc2,tblptrl
 28394  01485E  006F FF77 FFF7     	movff	postdec2,tblptrh
 28395  014864                     	if	0	;tblptru may be non-zero
 28396  014864                     	endif
 28397  014864                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28398  014864  0E00               	movlw	low (__mediumconst shr (0+16))
 28399  014866  6EF8               	movwf	tblptru,c
 28400  014868                     	endif
 28401  014868  0008               	tblrd		*
 28402  01486A  50F5               	movf	tablat,w,c
 28403  01486C  6EE6               	movwf	postinc1,c
 28404  01486E  0E00               	movlw	0
 28405  014870  6EE6               	movwf	postinc1,c
 28406  014872  ECD8  F0FC         	call	_fputc	;wreg free
 28407                           
 28408                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 28409                           ;stkvar	_fmt @ sp[(-32)+-4]
 28410  014876  0EDC               	movlw	-36
 28411  014878  006F FF8F FFD9     	movff	plusw1,fsr2l
 28412  01487E  0EDD               	movlw	-35
 28413  014880  006F FF8F FFDA     	movff	plusw1,fsr2h
 28414  014886  2ADE               	incf	postinc2,f,c
 28415  014888  0E00               	movlw	0
 28416  01488A  22DD               	addwfc	postdec2,f,c
 28417  01488C  D7C4               	goto	l16541
 28418  01488E                     l2700:
 28419                           
 28420                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 28421  01488E  0EDA               	movlw	218
 28422  014890  26E1               	addwf	fsr1l,f,c
 28423  014892  0EFF               	movlw	255
 28424  014894  22E2               	addwfc	fsr1h,f,c
 28425  014896  0012               	return		;funcret
 28426  014898                     __end_of_vfpfcnvrt:
 28427                           	opt callstack 0
 28428                           
 28429 ;; *************** function _xtoa *****************
 28430 ;; Defined at:
 28431 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 28432 ;; Parameters:    Size  Location     Type
 28433 ;;  fp              2  [STACK] PTR struct _IO_FILE
 28434 ;;		 -> f(6), NULL(0), 
 28435 ;;  d               8  [STACK] unsigned long long 
 28436 ;;  x               1  [STACK] unsigned char 
 28437 ;; Auto vars:     Size  Location     Type
 28438 ;;  n               8  [STACK] unsigned long long 
 28439 ;;  c               2  [STACK] int 
 28440 ;;  i               2  [STACK] int 
 28441 ;;  w               2  [STACK] int 
 28442 ;;  p               2  [STACK] int 
 28443 ;; Return value:  Size  Location     Type
 28444 ;;                  2  [STACK] int 
 28445 ;; Registers used:
 28446 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 28447 ;; Tracked objects:
 28448 ;;		On entry : 0/0
 28449 ;;		On exit  : 0/0
 28450 ;;		Unchanged: 0/0
 28451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28456 ;;Total ram usage:        0 bytes
 28457 ;; Hardware stack levels used:    1
 28458 ;; Hardware stack levels required when called:   20
 28459 ;; This function calls:
 28460 ;;		_isalpha
 28461 ;;		_isupper
 28462 ;;		_pad
 28463 ;;		_toupper
 28464 ;; This function is called by:
 28465 ;;		_vfpfcnvrt
 28466 ;; This function uses a reentrant model
 28467 ;;
 28468                           
 28469                           	psect	text96
 28470  019F96                     __ptext96:
 28471                           	opt callstack 0
 28472  019F96                     _xtoa:
 28473                           	opt callstack 0
 28474                           
 28475                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 28476  019F96  0E14               	movlw	20
 28477  019F98  26E1               	addwf	fsr1l,f,c
 28478  019F9A  0E00               	movlw	0
 28479  019F9C  22E2               	addwfc	fsr1h,f,c
 28480                           
 28481                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 28482                           
 28483                           ;incstack = 0
 28484 ;; hardware stack exceeded
 28485  019F9E  AE4D               	btfss	(_prec+1)^0,7,c
 28486                           
 28487                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 28488  019FA0  924E               	bcf	_flags^0,1,c
 28489                           
 28490                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 28491  019FA2  BE4D               	btfsc	(_prec+1)^0,7,c
 28492  019FA4  D005               	goto	u15600
 28493  019FA6  504D               	movf	(_prec+1)^0,w,c
 28494  019FA8  E110               	bnz	l16205
 28495  019FAA  044C               	decf	_prec^0,w,c
 28496  019FAC  B0D8               	btfsc	status,0,c
 28497  019FAE  D00D               	goto	l16205
 28498  019FB0                     u15600:
 28499  019FB0  0E01               	movlw	1
 28500  019FB2  6E34               	movwf	(btemp+10)^0,c
 28501  019FB4  0E00               	movlw	0
 28502  019FB6  6E35               	movwf	(btemp+11)^0,c
 28503                           
 28504                           ;stkvar	_p @ sp[(-20)+18]
 28505  019FB8  0EFE               	movlw	-2
 28506  019FBA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28507  019FC0  0EFF               	movlw	-1
 28508  019FC2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28509  019FC8  D008               	goto	l2650
 28510  019FCA                     l16205:
 28511                           
 28512                           ;stkvar	_p @ sp[(-20)+18]
 28513  019FCA  0EFE               	movlw	-2
 28514  019FCC  0060  F133  FFE3   	movff	_prec,plusw1
 28515  019FD2  0EFF               	movlw	-1
 28516  019FD4  0060  F137  FFE3   	movff	_prec+1,plusw1
 28517  019FDA                     l2650:
 28518                           
 28519                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 28520                           ;stkvar	_w @ sp[(-20)+16]
 28521  019FDA  0EFC               	movlw	-4
 28522  019FDC  0060  F12B  FFE3   	movff	_width,plusw1
 28523  019FE2  0EFD               	movlw	-3
 28524  019FE4  0060  F12F  FFE3   	movff	_width+1,plusw1
 28525                           
 28526                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 28527  019FEA  A84E               	btfss	_flags^0,4,c
 28528  019FEC  D00B               	goto	l16211
 28529                           
 28530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 28531                           ;stkvar	_w @ sp[(-20)+16]
 28532  019FEE  50E1               	movf	fsr1l,w,c
 28533  019FF0  0FFC               	addlw	-4
 28534  019FF2  6ED9               	movwf	fsr2l,c
 28535  019FF4  50E2               	movf	fsr1h,w,c
 28536  019FF6  6EDA               	movwf	fsr2h,c
 28537  019FF8  0EFF               	movlw	255
 28538  019FFA  22DA               	addwfc	fsr2h,f,c
 28539  019FFC  0EFE               	movlw	254
 28540  019FFE  26DE               	addwf	postinc2,f,c
 28541  01A000  0EFF               	movlw	255
 28542  01A002  22DD               	addwfc	postdec2,f,c
 28543  01A004                     l16211:
 28544                           
 28545                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 28546                           ;stkvar	_d @ sp[(-20)+-10]
 28547  01A004  0EE2               	movlw	226
 28548  01A006  24E1               	addwf	fsr1l,w,c
 28549  01A008  6ED9               	movwf	fsr2l,c
 28550  01A00A  0EFF               	movlw	255
 28551  01A00C  20E2               	addwfc	fsr1h,w,c
 28552  01A00E  6EDA               	movwf	fsr2h,c
 28553                           
 28554                           ;stkvar	_n @ sp[(-20)+4]
 28555  01A010  0E08               	movlw	8
 28556  01A012  6E2A               	movwf	btemp^0,c
 28557  01A014  0EF0               	movlw	-16
 28558  01A016                     us1562999:
 28559  01A016  006F FF7B FFE3     	movff	postinc2,plusw1
 28560  01A01C  28E8               	incf	wreg,w,c
 28561  01A01E  2E2A               	decfsz	btemp^0,f,c
 28562  01A020  D7FA               	bra	us1562999
 28563                           
 28564                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 28565  01A022  0E4F               	movlw	79
 28566  01A024  6E34               	movwf	(btemp+10)^0,c
 28567  01A026  0E00               	movlw	0
 28568  01A028  6E35               	movwf	(btemp+11)^0,c
 28569                           
 28570                           ;stkvar	_i @ sp[(-20)+14]
 28571  01A02A  0EFA               	movlw	-6
 28572  01A02C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28573  01A032  0EFB               	movlw	-5
 28574  01A034  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28575                           
 28576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 28577  01A03A  0103               	movlb	3	; () banked
 28578  01A03C  6BA3               	clrf	(_dbuf+79)& (0+255),b
 28579                           
 28580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 28581  01A03E  D0EE               	goto	l16249
 28582  01A040                     l16217:
 28583                           
 28584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 28585                           ;stkvar	_i @ sp[(-20)+14]
 28586  01A040  50E1               	movf	fsr1l,w,c
 28587  01A042  0FFA               	addlw	-6
 28588  01A044  6ED9               	movwf	fsr2l,c
 28589  01A046  50E2               	movf	fsr1h,w,c
 28590  01A048  6EDA               	movwf	fsr2h,c
 28591  01A04A  0EFF               	movlw	255
 28592  01A04C  22DA               	addwfc	fsr2h,f,c
 28593  01A04E  06DE               	decf	postinc2,f,c
 28594  01A050  0E00               	movlw	0
 28595  01A052  5ADD               	subwfb	postdec2,f,c
 28596                           
 28597                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 28598                           ;stkvar	_n @ sp[(-20)+4]
 28599  01A054  0EF0               	movlw	-16
 28600  01A056  006F FF8C  F034    	movff	plusw1,btemp+10
 28601  01A05C  0EF1               	movlw	-15
 28602  01A05E  006F FF8C  F035    	movff	plusw1,btemp+11
 28603  01A064  0E0F               	movlw	15
 28604  01A066  1634               	andwf	(btemp+10)^0,f,c
 28605  01A068  0E00               	movlw	0
 28606  01A06A  1635               	andwf	(btemp+11)^0,f,c
 28607                           
 28608                           ;stkvar	_c @ sp[(-20)+12]
 28609  01A06C  0EF8               	movlw	-8
 28610  01A06E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28611  01A074  0EF9               	movlw	-7
 28612  01A076  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28613                           
 28614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 28615                           ;stkvar	_c @ sp[(-20)+12]
 28616  01A07C  0EF9               	movlw	-7
 28617  01A07E  BEE3               	btfsc	plusw1,7,c
 28618  01A080  D00F               	goto	l16225
 28619  01A082  0EF9               	movlw	-7
 28620  01A084  50E3               	movf	plusw1,w,c
 28621  01A086  E108               	bnz	u15630
 28622  01A088  0EF8               	movlw	-8
 28623  01A08A  006F FF8C  F02A    	movff	plusw1,btemp
 28624  01A090  0E0A               	movlw	10
 28625  01A092  5E2A               	subwf	btemp^0,f,c
 28626  01A094  A0D8               	btfss	status,0,c
 28627  01A096  D004               	goto	l16225
 28628  01A098                     u15630:
 28629                           
 28630                           ;stkvar	_c @ sp[(-20)+12]
 28631  01A098  0EF8               	movlw	-8
 28632  01A09A  50E3               	movf	plusw1,w,c
 28633  01A09C  0F57               	addlw	87
 28634  01A09E  D003               	goto	L29
 28635  01A0A0                     l16225:
 28636                           
 28637                           ;stkvar	_c @ sp[(-20)+12]
 28638  01A0A0  0EF8               	movlw	-8
 28639  01A0A2  50E3               	movf	plusw1,w,c
 28640  01A0A4  0F30               	addlw	48
 28641  01A0A6                     L29:
 28642  01A0A6  6E34               	movwf	(btemp+10)^0,c
 28643  01A0A8  0EF9               	movlw	-7
 28644  01A0AA  006F FF8C  F035    	movff	plusw1,btemp+11
 28645  01A0B0  0E00               	movlw	0
 28646  01A0B2  2235               	addwfc	(btemp+11)^0,f,c
 28647                           
 28648                           ;stkvar	_c @ sp[(-20)+12]
 28649  01A0B4  0EF8               	movlw	-8
 28650  01A0B6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28651  01A0BC  0EF9               	movlw	-7
 28652  01A0BE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28653  01A0C4  0EBF               	movlw	191
 28654  01A0C6  6E34               	movwf	(btemp+10)^0,c
 28655  01A0C8  0EFF               	movlw	255
 28656  01A0CA  6E35               	movwf	(btemp+11)^0,c
 28657                           
 28658                           ;stkvar	_x @ sp[(-20)+-11]
 28659  01A0CC  0EE1               	movlw	-31
 28660  01A0CE  50E3               	movf	plusw1,w,c
 28661  01A0D0  6E32               	movwf	(btemp+8)^0,c
 28662  01A0D2  6A33               	clrf	(btemp+9)^0,c
 28663  01A0D4  5034               	movf	(btemp+10)^0,w,c
 28664  01A0D6  2632               	addwf	(btemp+8)^0,f,c
 28665  01A0D8  5035               	movf	(btemp+11)^0,w,c
 28666  01A0DA  2233               	addwfc	(btemp+9)^0,f,c
 28667  01A0DC  5033               	movf	(btemp+9)^0,w,c
 28668  01A0DE  E106               	bnz	u15640
 28669  01A0E0  0E1A               	movlw	26
 28670  01A0E2  5C32               	subwf	(btemp+8)^0,w,c
 28671  01A0E4  B0D8               	btfsc	status,0,c
 28672  01A0E6  D002               	goto	u15640
 28673  01A0E8  0E01               	movlw	1
 28674  01A0EA  D001               	goto	u15650
 28675  01A0EC                     u15640:
 28676  01A0EC  0E00               	movlw	0
 28677  01A0EE                     u15650:
 28678  01A0EE  6E34               	movwf	(btemp+10)^0,c
 28679  01A0F0  6A35               	clrf	(btemp+11)^0,c
 28680                           
 28681                           ;stkvar	_xtoa$6675 @ sp[(-20)+2]
 28682  01A0F2  0EEE               	movlw	-18
 28683  01A0F4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28684  01A0FA  0EEF               	movlw	-17
 28685  01A0FC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28686                           
 28687                           ;stkvar	_xtoa$6675 @ sp[(-20)+2]
 28688  01A102  0EEE               	movlw	-18
 28689  01A104  006F FF8C  F02A    	movff	plusw1,btemp
 28690  01A10A  0EEF               	movlw	-17
 28691  01A10C  50E3               	movf	plusw1,w,c
 28692  01A10E  102A               	iorwf	btemp^0,w,c
 28693  01A110  B4D8               	btfsc	status,2,c
 28694  01A112  D041               	goto	l16241
 28695  01A114  0E9F               	movlw	159
 28696  01A116  6E34               	movwf	(btemp+10)^0,c
 28697  01A118  0EFF               	movlw	255
 28698  01A11A  6E35               	movwf	(btemp+11)^0,c
 28699                           
 28700                           ;stkvar	_c @ sp[(-20)+12]
 28701  01A11C  0EF8               	movlw	-8
 28702  01A11E  006F FF8C  F032    	movff	plusw1,btemp+8
 28703  01A124  0EF9               	movlw	-7
 28704  01A126  006F FF8C  F033    	movff	plusw1,btemp+9
 28705  01A12C  0E20               	movlw	32
 28706  01A12E  1232               	iorwf	(btemp+8)^0,f,c
 28707  01A130  0E00               	movlw	0
 28708  01A132  1233               	iorwf	(btemp+9)^0,f,c
 28709  01A134  5034               	movf	(btemp+10)^0,w,c
 28710  01A136  2632               	addwf	(btemp+8)^0,f,c
 28711  01A138  5035               	movf	(btemp+11)^0,w,c
 28712  01A13A  2233               	addwfc	(btemp+9)^0,f,c
 28713  01A13C  5033               	movf	(btemp+9)^0,w,c
 28714  01A13E  E106               	bnz	u15670
 28715  01A140  0E1A               	movlw	26
 28716  01A142  5C32               	subwf	(btemp+8)^0,w,c
 28717  01A144  B0D8               	btfsc	status,0,c
 28718  01A146  D002               	goto	u15670
 28719  01A148  0E01               	movlw	1
 28720  01A14A  D001               	goto	u15680
 28721  01A14C                     u15670:
 28722  01A14C  0E00               	movlw	0
 28723  01A14E                     u15680:
 28724  01A14E  6E34               	movwf	(btemp+10)^0,c
 28725  01A150  6A35               	clrf	(btemp+11)^0,c
 28726                           
 28727                           ;stkvar	_xtoa$6676 @ sp[(-20)+0]
 28728  01A152  0EEC               	movlw	-20
 28729  01A154  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28730  01A15A  0EED               	movlw	-19
 28731  01A15C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28732                           
 28733                           ;stkvar	_xtoa$6676 @ sp[(-20)+0]
 28734  01A162  0EEC               	movlw	-20
 28735  01A164  006F FF8C  F02A    	movff	plusw1,btemp
 28736  01A16A  0EED               	movlw	-19
 28737  01A16C  50E3               	movf	plusw1,w,c
 28738  01A16E  102A               	iorwf	btemp^0,w,c
 28739  01A170  B4D8               	btfsc	status,2,c
 28740  01A172  D011               	goto	l16241
 28741                           
 28742                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 28743                           ;stkvar	_c @ sp[(-20)+12]
 28744  01A174  0EF8               	movlw	-8
 28745  01A176  006F FF8F FFE6     	movff	plusw1,postinc1
 28746  01A17C  006F FF8F FFE6     	movff	plusw1,postinc1
 28747  01A182  EC00  F00B         	call	_toupper	;wreg free
 28748                           
 28749                           ;stkvar	_c @ sp[(-20)+12]
 28750  01A186  0EF8               	movlw	-8
 28751  01A188  0060  F0AB  FFE3   	movff	btemp,plusw1
 28752  01A18E  0EF9               	movlw	-7
 28753  01A190  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 28754  01A196                     l16241:
 28755                           
 28756                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 28757                           ;stkvar	_c @ sp[(-20)+12]
 28758                           ;stkvar	_i @ sp[(-20)+14]
 28759  01A196  0EFA               	movlw	-6
 28760  01A198  006F FF8C  F034    	movff	plusw1,btemp+10
 28761  01A19E  0EFB               	movlw	-5
 28762  01A1A0  006F FF8C  F035    	movff	plusw1,btemp+11
 28763  01A1A6  0E54               	movlw	low _dbuf
 28764  01A1A8  2434               	addwf	(btemp+10)^0,w,c
 28765  01A1AA  6ED9               	movwf	fsr2l,c
 28766  01A1AC  0E03               	movlw	high _dbuf
 28767  01A1AE  2035               	addwfc	(btemp+11)^0,w,c
 28768  01A1B0  6EDA               	movwf	fsr2h,c
 28769  01A1B2  0EF8               	movlw	-8
 28770  01A1B4  006F FF8F FFDF     	movff	plusw1,indf2
 28771                           
 28772                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 28773                           ;stkvar	_p @ sp[(-20)+18]
 28774  01A1BA  50E1               	movf	fsr1l,w,c
 28775  01A1BC  0FFE               	addlw	-2
 28776  01A1BE  6ED9               	movwf	fsr2l,c
 28777  01A1C0  50E2               	movf	fsr1h,w,c
 28778  01A1C2  6EDA               	movwf	fsr2h,c
 28779  01A1C4  0EFF               	movlw	255
 28780  01A1C6  22DA               	addwfc	fsr2h,f,c
 28781  01A1C8  06DE               	decf	postinc2,f,c
 28782  01A1CA  0E00               	movlw	0
 28783  01A1CC  5ADD               	subwfb	postdec2,f,c
 28784                           
 28785                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 28786                           ;stkvar	_w @ sp[(-20)+16]
 28787  01A1CE  50E1               	movf	fsr1l,w,c
 28788  01A1D0  0FFC               	addlw	-4
 28789  01A1D2  6ED9               	movwf	fsr2l,c
 28790  01A1D4  50E2               	movf	fsr1h,w,c
 28791  01A1D6  6EDA               	movwf	fsr2h,c
 28792  01A1D8  0EFF               	movlw	255
 28793  01A1DA  22DA               	addwfc	fsr2h,f,c
 28794  01A1DC  06DE               	decf	postinc2,f,c
 28795  01A1DE  0E00               	movlw	0
 28796  01A1E0  5ADD               	subwfb	postdec2,f,c
 28797                           
 28798                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 28799  01A1E2  0E04               	movlw	4
 28800  01A1E4  6E35               	movwf	(btemp+11)^0,c
 28801                           
 28802                           ;stkvar	_n @ sp[(-20)+4]
 28803  01A1E6  50E1               	movf	fsr1l,w,c
 28804  01A1E8  0FF0               	addlw	-16
 28805  01A1EA  6ED9               	movwf	fsr2l,c
 28806  01A1EC  50E2               	movf	fsr1h,w,c
 28807  01A1EE  6EDA               	movwf	fsr2h,c
 28808  01A1F0  0EFF               	movlw	255
 28809  01A1F2  22DA               	addwfc	fsr2h,f,c
 28810  01A1F4  2835               	incf	(btemp+11)^0,w,c
 28811  01A1F6  52DE               	movf	postinc2,f,c
 28812  01A1F8  D00F               	goto	u15700
 28813  01A1FA                     u15705:
 28814  01A1FA  52DE               	movf	postinc2,f,c
 28815  01A1FC  52DE               	movf	postinc2,f,c
 28816  01A1FE  52DE               	movf	postinc2,f,c
 28817  01A200  52DE               	movf	postinc2,f,c
 28818  01A202  52DE               	movf	postinc2,f,c
 28819  01A204  52DE               	movf	postinc2,f,c
 28820  01A206  90D8               	bcf	status,0,c
 28821  01A208  32DD               	rrcf	postdec2,f,c
 28822  01A20A  32DD               	rrcf	postdec2,f,c
 28823  01A20C  32DD               	rrcf	postdec2,f,c
 28824  01A20E  32DD               	rrcf	postdec2,f,c
 28825  01A210  32DD               	rrcf	postdec2,f,c
 28826  01A212  32DD               	rrcf	postdec2,f,c
 28827  01A214  32DD               	rrcf	postdec2,f,c
 28828  01A216  32DE               	rrcf	postinc2,f,c
 28829  01A218                     u15700:
 28830  01A218  2EE8               	decfsz	wreg,f,c
 28831  01A21A  D7EF               	goto	u15705
 28832  01A21C                     l16249:
 28833                           
 28834                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 28835                           ;stkvar	_i @ sp[(-20)+14]
 28836  01A21C  0EFB               	movlw	-5
 28837  01A21E  BEE3               	btfsc	plusw1,7,c
 28838  01A220  D03A               	goto	u15750
 28839  01A222  0EFB               	movlw	-5
 28840  01A224  50E3               	movf	plusw1,w,c
 28841  01A226  E108               	bnz	u15710
 28842  01A228  0EFA               	movlw	-6
 28843  01A22A  006F FF8C  F02A    	movff	plusw1,btemp
 28844  01A230  0E02               	movlw	2
 28845  01A232  5E2A               	subwf	btemp^0,f,c
 28846  01A234  A0D8               	btfss	status,0,c
 28847  01A236  D02F               	goto	u15750
 28848  01A238                     u15710:
 28849                           
 28850                           ;stkvar	_n @ sp[(-20)+4]
 28851  01A238  0EF0               	movlw	-16
 28852  01A23A  50E3               	movf	plusw1,w,c
 28853  01A23C  E115               	bnz	u15721
 28854  01A23E  0EF1               	movlw	-15
 28855  01A240  50E3               	movf	plusw1,w,c
 28856  01A242  E112               	bnz	u15721
 28857  01A244  0EF2               	movlw	-14
 28858  01A246  50E3               	movf	plusw1,w,c
 28859  01A248  E10F               	bnz	u15721
 28860  01A24A  0EF3               	movlw	-13
 28861  01A24C  50E3               	movf	plusw1,w,c
 28862  01A24E  E10C               	bnz	u15721
 28863  01A250  0EF4               	movlw	-12
 28864  01A252  50E3               	movf	plusw1,w,c
 28865  01A254  E109               	bnz	u15721
 28866  01A256  0EF5               	movlw	-11
 28867  01A258  50E3               	movf	plusw1,w,c
 28868  01A25A  E106               	bnz	u15721
 28869  01A25C  0EF6               	movlw	-10
 28870  01A25E  50E3               	movf	plusw1,w,c
 28871  01A260  E103               	bnz	u15721
 28872  01A262  0EF7               	movlw	-9
 28873  01A264  50E3               	movf	plusw1,w,c
 28874  01A266  A4D8               	btfss	status,2,c
 28875  01A268                     u15721:
 28876  01A268  D6EB               	goto	l16217
 28877                           
 28878                           ;stkvar	_p @ sp[(-20)+18]
 28879  01A26A  0EFF               	movlw	-1
 28880  01A26C  BEE3               	btfsc	plusw1,7,c
 28881  01A26E  D007               	goto	u15730
 28882  01A270  0EFF               	movlw	-1
 28883  01A272  50E3               	movf	plusw1,w,c
 28884  01A274  E103               	bnz	u15731
 28885  01A276  0EFE               	movlw	-2
 28886  01A278  04E3               	decf	plusw1,w,c
 28887  01A27A  B0D8               	btfsc	status,0,c
 28888  01A27C                     u15731:
 28889  01A27C  D6E1               	goto	l16217
 28890  01A27E                     u15730:
 28891                           
 28892                           ;stkvar	_w @ sp[(-20)+16]
 28893  01A27E  0EFD               	movlw	-3
 28894  01A280  BEE3               	btfsc	plusw1,7,c
 28895  01A282  D009               	goto	u15750
 28896  01A284  0EFD               	movlw	-3
 28897  01A286  50E3               	movf	plusw1,w,c
 28898  01A288  E104               	bnz	u15740
 28899  01A28A  0EFC               	movlw	-4
 28900  01A28C  04E3               	decf	plusw1,w,c
 28901  01A28E  A0D8               	btfss	status,0,c
 28902  01A290  D002               	goto	u15750
 28903  01A292                     u15740:
 28904  01A292  B24E               	btfsc	_flags^0,1,c
 28905  01A294  D6D5               	goto	l16217
 28906  01A296                     u15750:
 28907                           
 28908                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 28909  01A296  A84E               	btfss	_flags^0,4,c
 28910  01A298  D036               	goto	l16265
 28911                           
 28912                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 28913                           ;stkvar	_i @ sp[(-20)+14]
 28914  01A29A  50E1               	movf	fsr1l,w,c
 28915  01A29C  0FFA               	addlw	-6
 28916  01A29E  6ED9               	movwf	fsr2l,c
 28917  01A2A0  50E2               	movf	fsr1h,w,c
 28918  01A2A2  6EDA               	movwf	fsr2h,c
 28919  01A2A4  0EFF               	movlw	255
 28920  01A2A6  22DA               	addwfc	fsr2h,f,c
 28921  01A2A8  06DE               	decf	postinc2,f,c
 28922  01A2AA  0E00               	movlw	0
 28923  01A2AC  5ADD               	subwfb	postdec2,f,c
 28924                           
 28925                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 28926                           ;stkvar	_x @ sp[(-20)+-11]
 28927                           ;stkvar	_i @ sp[(-20)+14]
 28928  01A2AE  0EFA               	movlw	-6
 28929  01A2B0  006F FF8C  F034    	movff	plusw1,btemp+10
 28930  01A2B6  0EFB               	movlw	-5
 28931  01A2B8  006F FF8C  F035    	movff	plusw1,btemp+11
 28932  01A2BE  0E54               	movlw	low _dbuf
 28933  01A2C0  2434               	addwf	(btemp+10)^0,w,c
 28934  01A2C2  6ED9               	movwf	fsr2l,c
 28935  01A2C4  0E03               	movlw	high _dbuf
 28936  01A2C6  2035               	addwfc	(btemp+11)^0,w,c
 28937  01A2C8  6EDA               	movwf	fsr2h,c
 28938  01A2CA  0EE1               	movlw	-31
 28939  01A2CC  006F FF8F FFDF     	movff	plusw1,indf2
 28940                           
 28941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 28942                           ;stkvar	_i @ sp[(-20)+14]
 28943  01A2D2  50E1               	movf	fsr1l,w,c
 28944  01A2D4  0FFA               	addlw	-6
 28945  01A2D6  6ED9               	movwf	fsr2l,c
 28946  01A2D8  50E2               	movf	fsr1h,w,c
 28947  01A2DA  6EDA               	movwf	fsr2h,c
 28948  01A2DC  0EFF               	movlw	255
 28949  01A2DE  22DA               	addwfc	fsr2h,f,c
 28950  01A2E0  06DE               	decf	postinc2,f,c
 28951  01A2E2  0E00               	movlw	0
 28952  01A2E4  5ADD               	subwfb	postdec2,f,c
 28953                           
 28954                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 28955                           ;stkvar	_i @ sp[(-20)+14]
 28956  01A2E6  0EFA               	movlw	-6
 28957  01A2E8  006F FF8C  F034    	movff	plusw1,btemp+10
 28958  01A2EE  0EFB               	movlw	-5
 28959  01A2F0  006F FF8C  F035    	movff	plusw1,btemp+11
 28960  01A2F6  0E54               	movlw	low _dbuf
 28961  01A2F8  2434               	addwf	(btemp+10)^0,w,c
 28962  01A2FA  6ED9               	movwf	fsr2l,c
 28963  01A2FC  0E03               	movlw	high _dbuf
 28964  01A2FE  2035               	addwfc	(btemp+11)^0,w,c
 28965  01A300  6EDA               	movwf	fsr2h,c
 28966  01A302  0E30               	movlw	48
 28967  01A304  6EDF               	movwf	indf2,c
 28968  01A306                     l16265:
 28969                           
 28970                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 28971                           ;stkvar	_w @ sp[(-20)+16]
 28972  01A306  0EFC               	movlw	-4
 28973  01A308  006F FF8F FFE6     	movff	plusw1,postinc1
 28974  01A30E  006F FF8F FFE6     	movff	plusw1,postinc1
 28975                           
 28976                           ;stkvar	_i @ sp[(-22)+14]
 28977  01A314  0E54               	movlw	low _dbuf
 28978  01A316  6E34               	movwf	(btemp+10)^0,c
 28979  01A318  0E03               	movlw	high _dbuf
 28980  01A31A  6E35               	movwf	(btemp+11)^0,c
 28981  01A31C  0EF8               	movlw	-8
 28982  01A31E  50E3               	movf	plusw1,w,c
 28983  01A320  2634               	addwf	(btemp+10)^0,f,c
 28984  01A322  0EF9               	movlw	-7
 28985  01A324  50E3               	movf	plusw1,w,c
 28986  01A326  2235               	addwfc	(btemp+11)^0,f,c
 28987  01A328  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 28988  01A32E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 28989                           
 28990                           ;stkvar	_fp @ sp[(-24)+-2]
 28991  01A334  0EE6               	movlw	-26
 28992  01A336  006F FF8F FFE6     	movff	plusw1,postinc1
 28993  01A33C  006F FF8F FFE6     	movff	plusw1,postinc1
 28994  01A342  EC0F  F0FF         	call	_pad	;wreg free
 28995                           
 28996                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 28997  01A346  0EE1               	movlw	225
 28998  01A348  26E1               	addwf	fsr1l,f,c
 28999  01A34A  0EFF               	movlw	255
 29000  01A34C  22E2               	addwfc	fsr1h,f,c
 29001  01A34E  0012               	return		;funcret
 29002  01A350                     __end_of_xtoa:
 29003                           	opt callstack 0
 29004                           
 29005 ;; *************** function _toupper *****************
 29006 ;; Defined at:
 29007 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 29008 ;; Parameters:    Size  Location     Type
 29009 ;;  c               2  [STACK] int 
 29010 ;; Auto vars:     Size  Location     Type
 29011 ;;		None
 29012 ;; Return value:  Size  Location     Type
 29013 ;;                  2  [STACK] int 
 29014 ;; Registers used:
 29015 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 29016 ;; Tracked objects:
 29017 ;;		On entry : 0/3
 29018 ;;		On exit  : 0/0
 29019 ;;		Unchanged: 0/0
 29020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29025 ;;Total ram usage:        0 bytes
 29026 ;; Hardware stack levels used:    1
 29027 ;; Hardware stack levels required when called:   16
 29028 ;; This function calls:
 29029 ;;		_islower
 29030 ;; This function is called by:
 29031 ;;		_xtoa
 29032 ;; This function uses a reentrant model
 29033 ;;
 29034                           
 29035                           	psect	text97
 29036  001600                     __ptext97:
 29037                           	opt callstack 0
 29038  001600                     _toupper:
 29039                           	opt callstack 0
 29040                           
 29041                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29042  001600  52E6               	movf	postinc1,f,c
 29043  001602  52E6               	movf	postinc1,f,c
 29044                           
 29045                           ;stkvar	_c @ sp[(-2)+-2]
 29046                           
 29047                           ;incstack = 0
 29048 ;; hardware stack exceeded
 29049  001604  0EFC               	movlw	-4
 29050  001606  50E3               	movf	plusw1,w,c
 29051  001608  0F9F               	addlw	159
 29052  00160A  6E34               	movwf	(btemp+10)^0,c
 29053  00160C  0EFD               	movlw	-3
 29054  00160E  006F FF8C  F035    	movff	plusw1,btemp+11
 29055  001614  0EFF               	movlw	255
 29056  001616  2235               	addwfc	(btemp+11)^0,f,c
 29057  001618  5035               	movf	(btemp+11)^0,w,c
 29058  00161A  E106               	bnz	u8080
 29059  00161C  0E1A               	movlw	26
 29060  00161E  5C34               	subwf	(btemp+10)^0,w,c
 29061  001620  B0D8               	btfsc	status,0,c
 29062  001622  D002               	goto	u8080
 29063  001624  0E01               	movlw	1
 29064  001626  D001               	goto	u8090
 29065  001628                     u8080:
 29066  001628  0E00               	movlw	0
 29067  00162A                     u8090:
 29068  00162A  6E34               	movwf	(btemp+10)^0,c
 29069  00162C  6A35               	clrf	(btemp+11)^0,c
 29070                           
 29071                           ;stkvar	_toupper$7617 @ sp[(-2)+0]
 29072  00162E  0EFE               	movlw	-2
 29073  001630  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29074  001636  0EFF               	movlw	-1
 29075  001638  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29076                           
 29077                           ;stkvar	_toupper$7617 @ sp[(-2)+0]
 29078  00163E  0EFE               	movlw	-2
 29079  001640  006F FF8C  F02A    	movff	plusw1,btemp
 29080  001646  0EFF               	movlw	-1
 29081  001648  50E3               	movf	plusw1,w,c
 29082  00164A  102A               	iorwf	btemp^0,w,c
 29083  00164C  B4D8               	btfsc	status,2,c
 29084  00164E  D00D               	goto	l10271
 29085                           
 29086                           ;stkvar	_c @ sp[(-2)+-2]
 29087  001650  0EFC               	movlw	-4
 29088  001652  006F FF8C  F02A    	movff	plusw1,btemp
 29089  001658  0EFD               	movlw	-3
 29090  00165A  006F FF8C  F02B    	movff	plusw1,btemp+1
 29091  001660  0E5F               	movlw	95
 29092  001662  162A               	andwf	btemp^0,f,c
 29093  001664  0E00               	movlw	0
 29094  001666  162B               	andwf	(btemp+1)^0,f,c
 29095  001668  D008               	goto	l3847
 29096  00166A                     l10271:
 29097                           
 29098                           ;stkvar	_c @ sp[(-2)+-2]
 29099  00166A  0EFC               	movlw	-4
 29100  00166C  006F FF8C  F02A    	movff	plusw1,btemp
 29101  001672  0EFD               	movlw	-3
 29102  001674  006F FF8C  F02B    	movff	plusw1,btemp+1
 29103  00167A                     l3847:
 29104                           
 29105                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 29106  00167A  52E5               	movf	postdec1,f,c
 29107  00167C  52E5               	movf	postdec1,f,c
 29108  00167E  52E5               	movf	postdec1,f,c
 29109  001680  52E5               	movf	postdec1,f,c
 29110  001682  0012               	return		;funcret
 29111  001684                     __end_of_toupper:
 29112                           	opt callstack 0
 29113                           
 29114 ;; *************** function _islower *****************
 29115 ;; Defined at:
 29116 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 29117 ;; Parameters:    Size  Location     Type
 29118 ;;  c               2  [STACK] int 
 29119 ;; Auto vars:     Size  Location     Type
 29120 ;;		None
 29121 ;; Return value:  Size  Location     Type
 29122 ;;                  2  [STACK] int 
 29123 ;; Registers used:
 29124 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 29125 ;; Tracked objects:
 29126 ;;		On entry : 0/0
 29127 ;;		On exit  : 0/0
 29128 ;;		Unchanged: 0/0
 29129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29134 ;;Total ram usage:        0 bytes
 29135 ;; Hardware stack levels used:    1
 29136 ;; Hardware stack levels required when called:   15
 29137 ;; This function calls:
 29138 ;;		Nothing
 29139 ;; This function is called by:
 29140 ;;		_toupper
 29141 ;; This function uses a reentrant model
 29142 ;;
 29143                           
 29144                           	psect	text98
 29145  002816                     __ptext98:
 29146                           	opt callstack 0
 29147  002816                     _islower:
 29148                           	opt callstack 0
 29149                           
 29150                           ;stkvar	_c @ sp[(0)+-2]
 29151                           
 29152                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29153                           ;incstack = 0
 29154 ;; hardware stack exceeded
 29155  002816  0EFE               	movlw	-2
 29156  002818  50E3               	movf	plusw1,w,c
 29157  00281A  0F9F               	addlw	159
 29158  00281C  6E34               	movwf	(btemp+10)^0,c
 29159  00281E  0EFF               	movlw	-1
 29160  002820  006F FF8C  F035    	movff	plusw1,btemp+11
 29161  002826  0EFF               	movlw	255
 29162  002828  2235               	addwfc	(btemp+11)^0,f,c
 29163  00282A  5035               	movf	(btemp+11)^0,w,c
 29164  00282C  E106               	bnz	u7710
 29165  00282E  0E1A               	movlw	26
 29166  002830  5C34               	subwf	(btemp+10)^0,w,c
 29167  002832  B0D8               	btfsc	status,0,c
 29168  002834  D002               	goto	u7710
 29169  002836  0E01               	movlw	1
 29170  002838  D001               	goto	u7720
 29171  00283A                     u7710:
 29172  00283A  0E00               	movlw	0
 29173  00283C                     u7720:
 29174  00283C  6E2A               	movwf	btemp^0,c
 29175  00283E  6A2B               	clrf	(btemp+1)^0,c
 29176                           
 29177                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 29178  002840  52E5               	movf	postdec1,f,c
 29179  002842  52E5               	movf	postdec1,f,c
 29180  002844  0012               	return		;funcret
 29181  002846                     __end_of_islower:
 29182                           	opt callstack 0
 29183                           
 29184 ;; *************** function _isalpha *****************
 29185 ;; Defined at:
 29186 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 29187 ;; Parameters:    Size  Location     Type
 29188 ;;  c               2  [STACK] int 
 29189 ;; Auto vars:     Size  Location     Type
 29190 ;;		None
 29191 ;; Return value:  Size  Location     Type
 29192 ;;                  2  [STACK] int 
 29193 ;; Registers used:
 29194 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 29195 ;; Tracked objects:
 29196 ;;		On entry : 0/0
 29197 ;;		On exit  : 0/0
 29198 ;;		Unchanged: 0/0
 29199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29204 ;;Total ram usage:        0 bytes
 29205 ;; Hardware stack levels used:    1
 29206 ;; Hardware stack levels required when called:   15
 29207 ;; This function calls:
 29208 ;;		Nothing
 29209 ;; This function is called by:
 29210 ;;		_xtoa
 29211 ;; This function uses a reentrant model
 29212 ;;
 29213                           
 29214                           	psect	text99
 29215  00238C                     __ptext99:
 29216                           	opt callstack 0
 29217  00238C                     _isalpha:
 29218                           	opt callstack 0
 29219                           
 29220                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29221                           ;incstack = 0
 29222 ;; hardware stack exceeded
 29223  00238C  0E9F               	movlw	159
 29224  00238E  6E34               	movwf	(btemp+10)^0,c
 29225  002390  0EFF               	movlw	255
 29226  002392  6E35               	movwf	(btemp+11)^0,c
 29227                           
 29228                           ;stkvar	_c @ sp[(0)+-2]
 29229  002394  0EFE               	movlw	-2
 29230  002396  006F FF8C  F032    	movff	plusw1,btemp+8
 29231  00239C  0EFF               	movlw	-1
 29232  00239E  006F FF8C  F033    	movff	plusw1,btemp+9
 29233  0023A4  0E20               	movlw	32
 29234  0023A6  1232               	iorwf	(btemp+8)^0,f,c
 29235  0023A8  0E00               	movlw	0
 29236  0023AA  1233               	iorwf	(btemp+9)^0,f,c
 29237  0023AC  5034               	movf	(btemp+10)^0,w,c
 29238  0023AE  2632               	addwf	(btemp+8)^0,f,c
 29239  0023B0  5035               	movf	(btemp+11)^0,w,c
 29240  0023B2  2233               	addwfc	(btemp+9)^0,f,c
 29241  0023B4  5033               	movf	(btemp+9)^0,w,c
 29242  0023B6  E106               	bnz	u8060
 29243  0023B8  0E1A               	movlw	26
 29244  0023BA  5C32               	subwf	(btemp+8)^0,w,c
 29245  0023BC  B0D8               	btfsc	status,0,c
 29246  0023BE  D002               	goto	u8060
 29247  0023C0  0E01               	movlw	1
 29248  0023C2  D001               	goto	u8070
 29249  0023C4                     u8060:
 29250  0023C4  0E00               	movlw	0
 29251  0023C6                     u8070:
 29252  0023C6  6E2A               	movwf	btemp^0,c
 29253  0023C8  6A2B               	clrf	(btemp+1)^0,c
 29254                           
 29255                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 29256  0023CA  52E5               	movf	postdec1,f,c
 29257  0023CC  52E5               	movf	postdec1,f,c
 29258  0023CE  0012               	return		;funcret
 29259  0023D0                     __end_of_isalpha:
 29260                           	opt callstack 0
 29261                           
 29262 ;; *************** function _utoa *****************
 29263 ;; Defined at:
 29264 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 29265 ;; Parameters:    Size  Location     Type
 29266 ;;  fp              2  [STACK] PTR struct _IO_FILE
 29267 ;;		 -> f(6), NULL(0), 
 29268 ;;  d               8  [STACK] unsigned long long 
 29269 ;; Auto vars:     Size  Location     Type
 29270 ;;  n               8  [STACK] unsigned long long 
 29271 ;;  i               2  [STACK] int 
 29272 ;;  w               2  [STACK] int 
 29273 ;;  p               2  [STACK] int 
 29274 ;; Return value:  Size  Location     Type
 29275 ;;                  2  [STACK] int 
 29276 ;; Registers used:
 29277 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 29278 ;; Tracked objects:
 29279 ;;		On entry : 0/0
 29280 ;;		On exit  : 0/0
 29281 ;;		Unchanged: 0/0
 29282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29287 ;;Total ram usage:        0 bytes
 29288 ;; Hardware stack levels used:    1
 29289 ;; Hardware stack levels required when called:   20
 29290 ;; This function calls:
 29291 ;;		___lodiv
 29292 ;;		___lomod
 29293 ;;		_pad
 29294 ;; This function is called by:
 29295 ;;		_vfpfcnvrt
 29296 ;; This function uses a reentrant model
 29297 ;;
 29298                           
 29299                           	psect	text100
 29300  01AD70                     __ptext100:
 29301                           	opt callstack 0
 29302  01AD70                     _utoa:
 29303                           	opt callstack 0
 29304                           
 29305                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 29306  01AD70  0E0E               	movlw	14
 29307  01AD72  26E1               	addwf	fsr1l,f,c
 29308  01AD74  0E00               	movlw	0
 29309  01AD76  22E2               	addwfc	fsr1h,f,c
 29310                           
 29311                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 29312                           
 29313                           ;incstack = 0
 29314 ;; hardware stack exceeded
 29315  01AD78  AE4D               	btfss	(_prec+1)^0,7,c
 29316                           
 29317                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 29318  01AD7A  924E               	bcf	_flags^0,1,c
 29319                           
 29320                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 29321  01AD7C  BE4D               	btfsc	(_prec+1)^0,7,c
 29322  01AD7E  D005               	goto	u15520
 29323  01AD80  504D               	movf	(_prec+1)^0,w,c
 29324  01AD82  E110               	bnz	l16165
 29325  01AD84  044C               	decf	_prec^0,w,c
 29326  01AD86  B0D8               	btfsc	status,0,c
 29327  01AD88  D00D               	goto	l16165
 29328  01AD8A                     u15520:
 29329  01AD8A  0E01               	movlw	1
 29330  01AD8C  6E34               	movwf	(btemp+10)^0,c
 29331  01AD8E  0E00               	movlw	0
 29332  01AD90  6E35               	movwf	(btemp+11)^0,c
 29333                           
 29334                           ;stkvar	_p @ sp[(-14)+12]
 29335  01AD92  0EFE               	movlw	-2
 29336  01AD94  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29337  01AD9A  0EFF               	movlw	-1
 29338  01AD9C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29339  01ADA2  D008               	goto	l2635
 29340  01ADA4                     l16165:
 29341                           
 29342                           ;stkvar	_p @ sp[(-14)+12]
 29343  01ADA4  0EFE               	movlw	-2
 29344  01ADA6  0060  F133  FFE3   	movff	_prec,plusw1
 29345  01ADAC  0EFF               	movlw	-1
 29346  01ADAE  0060  F137  FFE3   	movff	_prec+1,plusw1
 29347  01ADB4                     l2635:
 29348                           
 29349                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 29350                           ;stkvar	_w @ sp[(-14)+10]
 29351  01ADB4  0EFC               	movlw	-4
 29352  01ADB6  0060  F12B  FFE3   	movff	_width,plusw1
 29353  01ADBC  0EFD               	movlw	-3
 29354  01ADBE  0060  F12F  FFE3   	movff	_width+1,plusw1
 29355                           
 29356                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 29357                           ;stkvar	_d @ sp[(-14)+-10]
 29358  01ADC4  0EE8               	movlw	232
 29359  01ADC6  24E1               	addwf	fsr1l,w,c
 29360  01ADC8  6ED9               	movwf	fsr2l,c
 29361  01ADCA  0EFF               	movlw	255
 29362  01ADCC  20E2               	addwfc	fsr1h,w,c
 29363  01ADCE  6EDA               	movwf	fsr2h,c
 29364                           
 29365                           ;stkvar	_n @ sp[(-14)+0]
 29366  01ADD0  0E08               	movlw	8
 29367  01ADD2  6E2A               	movwf	btemp^0,c
 29368  01ADD4  0EF2               	movlw	-14
 29369  01ADD6                     us1553999:
 29370  01ADD6  006F FF7B FFE3     	movff	postinc2,plusw1
 29371  01ADDC  28E8               	incf	wreg,w,c
 29372  01ADDE  2E2A               	decfsz	btemp^0,f,c
 29373  01ADE0  D7FA               	bra	us1553999
 29374                           
 29375                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 29376  01ADE2  0E4F               	movlw	79
 29377  01ADE4  6E34               	movwf	(btemp+10)^0,c
 29378  01ADE6  0E00               	movlw	0
 29379  01ADE8  6E35               	movwf	(btemp+11)^0,c
 29380                           
 29381                           ;stkvar	_i @ sp[(-14)+8]
 29382  01ADEA  0EFA               	movlw	-6
 29383  01ADEC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29384  01ADF2  0EFB               	movlw	-5
 29385  01ADF4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29386                           
 29387                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 29388  01ADFA  0103               	movlb	3	; () banked
 29389  01ADFC  6BA3               	clrf	(_dbuf+79)& (0+255),b
 29390                           
 29391                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 29392  01ADFE  D0FB               	goto	l16183
 29393  01AE00                     l16173:
 29394                           
 29395                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 29396                           ;stkvar	_i @ sp[(-14)+8]
 29397  01AE00  50E1               	movf	fsr1l,w,c
 29398  01AE02  0FFA               	addlw	-6
 29399  01AE04  6ED9               	movwf	fsr2l,c
 29400  01AE06  50E2               	movf	fsr1h,w,c
 29401  01AE08  6EDA               	movwf	fsr2h,c
 29402  01AE0A  0EFF               	movlw	255
 29403  01AE0C  22DA               	addwfc	fsr2h,f,c
 29404  01AE0E  06DE               	decf	postinc2,f,c
 29405  01AE10  0E00               	movlw	0
 29406  01AE12  5ADD               	subwfb	postdec2,f,c
 29407                           
 29408                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 29409  01AE14  0E0A               	movlw	10
 29410  01AE16  6EE6               	movwf	postinc1,c
 29411  01AE18  0E00               	movlw	0
 29412  01AE1A  6EE6               	movwf	postinc1,c
 29413  01AE1C  0E00               	movlw	0
 29414  01AE1E  6EE6               	movwf	postinc1,c
 29415  01AE20  0E00               	movlw	0
 29416  01AE22  6EE6               	movwf	postinc1,c
 29417  01AE24  0E00               	movlw	0
 29418  01AE26  6EE6               	movwf	postinc1,c
 29419  01AE28  0E00               	movlw	0
 29420  01AE2A  6EE6               	movwf	postinc1,c
 29421  01AE2C  0E00               	movlw	0
 29422  01AE2E  6EE6               	movwf	postinc1,c
 29423  01AE30  0E00               	movlw	0
 29424  01AE32  6EE6               	movwf	postinc1,c
 29425                           
 29426                           ;stkvar	_n @ sp[(-22)+0]
 29427  01AE34  50E1               	movf	fsr1l,w,c
 29428  01AE36  0FEA               	addlw	-22
 29429  01AE38  6ED9               	movwf	fsr2l,c
 29430  01AE3A  50E2               	movf	fsr1h,w,c
 29431  01AE3C  6EDA               	movwf	fsr2h,c
 29432  01AE3E  0EFF               	movlw	255
 29433  01AE40  22DA               	addwfc	fsr2h,f,c
 29434  01AE42  006F FF7B FFE6     	movff	postinc2,postinc1
 29435  01AE48  006F FF7B FFE6     	movff	postinc2,postinc1
 29436  01AE4E  006F FF7B FFE6     	movff	postinc2,postinc1
 29437  01AE54  006F FF7B FFE6     	movff	postinc2,postinc1
 29438  01AE5A  006F FF7B FFE6     	movff	postinc2,postinc1
 29439  01AE60  006F FF7B FFE6     	movff	postinc2,postinc1
 29440  01AE66  006F FF7B FFE6     	movff	postinc2,postinc1
 29441  01AE6C  006F FF7B FFE6     	movff	postinc2,postinc1
 29442  01AE72  EC9C  F0FB         	call	___lomod	;wreg free
 29443  01AE76  52E5               	movf	postdec1,f,c
 29444  01AE78  006F FF9C  F041    	movff	indf1,btemp+23
 29445  01AE7E  52E5               	movf	postdec1,f,c
 29446  01AE80  006F FF9C  F040    	movff	indf1,btemp+22
 29447  01AE86  52E5               	movf	postdec1,f,c
 29448  01AE88  006F FF9C  F03F    	movff	indf1,btemp+21
 29449  01AE8E  52E5               	movf	postdec1,f,c
 29450  01AE90  006F FF9C  F03E    	movff	indf1,btemp+20
 29451  01AE96  52E5               	movf	postdec1,f,c
 29452  01AE98  006F FF9C  F03D    	movff	indf1,btemp+19
 29453  01AE9E  52E5               	movf	postdec1,f,c
 29454  01AEA0  006F FF9C  F03C    	movff	indf1,btemp+18
 29455  01AEA6  52E5               	movf	postdec1,f,c
 29456  01AEA8  006F FF9C  F03B    	movff	indf1,btemp+17
 29457  01AEAE  52E5               	movf	postdec1,f,c
 29458  01AEB0  006F FF9C  F03A    	movff	indf1,btemp+16
 29459  01AEB6  0EF8               	movlw	248
 29460  01AEB8  26E1               	addwf	fsr1l,f,c
 29461  01AEBA  0EFF               	movlw	255
 29462  01AEBC  22E2               	addwfc	fsr1h,f,c
 29463  01AEBE  0E30               	movlw	48
 29464  01AEC0  263A               	addwf	(btemp+16)^0,f,c
 29465                           
 29466                           ;stkvar	_i @ sp[(-14)+8]
 29467  01AEC2  0EFA               	movlw	-6
 29468  01AEC4  006F FF8C  F034    	movff	plusw1,btemp+10
 29469  01AECA  0EFB               	movlw	-5
 29470  01AECC  006F FF8C  F035    	movff	plusw1,btemp+11
 29471  01AED2  0E54               	movlw	low _dbuf
 29472  01AED4  2434               	addwf	(btemp+10)^0,w,c
 29473  01AED6  6ED9               	movwf	fsr2l,c
 29474  01AED8  0E03               	movlw	high _dbuf
 29475  01AEDA  2035               	addwfc	(btemp+11)^0,w,c
 29476  01AEDC  6EDA               	movwf	fsr2h,c
 29477  01AEDE  0060  F0EB  FFDF   	movff	btemp+16,indf2
 29478                           
 29479                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 29480                           ;stkvar	_p @ sp[(-14)+12]
 29481  01AEE4  50E1               	movf	fsr1l,w,c
 29482  01AEE6  0FFE               	addlw	-2
 29483  01AEE8  6ED9               	movwf	fsr2l,c
 29484  01AEEA  50E2               	movf	fsr1h,w,c
 29485  01AEEC  6EDA               	movwf	fsr2h,c
 29486  01AEEE  0EFF               	movlw	255
 29487  01AEF0  22DA               	addwfc	fsr2h,f,c
 29488  01AEF2  06DE               	decf	postinc2,f,c
 29489  01AEF4  0E00               	movlw	0
 29490  01AEF6  5ADD               	subwfb	postdec2,f,c
 29491                           
 29492                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 29493                           ;stkvar	_w @ sp[(-14)+10]
 29494  01AEF8  50E1               	movf	fsr1l,w,c
 29495  01AEFA  0FFC               	addlw	-4
 29496  01AEFC  6ED9               	movwf	fsr2l,c
 29497  01AEFE  50E2               	movf	fsr1h,w,c
 29498  01AF00  6EDA               	movwf	fsr2h,c
 29499  01AF02  0EFF               	movlw	255
 29500  01AF04  22DA               	addwfc	fsr2h,f,c
 29501  01AF06  06DE               	decf	postinc2,f,c
 29502  01AF08  0E00               	movlw	0
 29503  01AF0A  5ADD               	subwfb	postdec2,f,c
 29504                           
 29505                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 29506  01AF0C  0E0A               	movlw	10
 29507  01AF0E  6EE6               	movwf	postinc1,c
 29508  01AF10  0E00               	movlw	0
 29509  01AF12  6EE6               	movwf	postinc1,c
 29510  01AF14  0E00               	movlw	0
 29511  01AF16  6EE6               	movwf	postinc1,c
 29512  01AF18  0E00               	movlw	0
 29513  01AF1A  6EE6               	movwf	postinc1,c
 29514  01AF1C  0E00               	movlw	0
 29515  01AF1E  6EE6               	movwf	postinc1,c
 29516  01AF20  0E00               	movlw	0
 29517  01AF22  6EE6               	movwf	postinc1,c
 29518  01AF24  0E00               	movlw	0
 29519  01AF26  6EE6               	movwf	postinc1,c
 29520  01AF28  0E00               	movlw	0
 29521  01AF2A  6EE6               	movwf	postinc1,c
 29522                           
 29523                           ;stkvar	_n @ sp[(-22)+0]
 29524  01AF2C  50E1               	movf	fsr1l,w,c
 29525  01AF2E  0FEA               	addlw	-22
 29526  01AF30  6ED9               	movwf	fsr2l,c
 29527  01AF32  50E2               	movf	fsr1h,w,c
 29528  01AF34  6EDA               	movwf	fsr2h,c
 29529  01AF36  0EFF               	movlw	255
 29530  01AF38  22DA               	addwfc	fsr2h,f,c
 29531  01AF3A  006F FF7B FFE6     	movff	postinc2,postinc1
 29532  01AF40  006F FF7B FFE6     	movff	postinc2,postinc1
 29533  01AF46  006F FF7B FFE6     	movff	postinc2,postinc1
 29534  01AF4C  006F FF7B FFE6     	movff	postinc2,postinc1
 29535  01AF52  006F FF7B FFE6     	movff	postinc2,postinc1
 29536  01AF58  006F FF7B FFE6     	movff	postinc2,postinc1
 29537  01AF5E  006F FF7B FFE6     	movff	postinc2,postinc1
 29538  01AF64  006F FF7B FFE6     	movff	postinc2,postinc1
 29539  01AF6A  EC04  F0F4         	call	___lodiv	;wreg free
 29540  01AF6E  52E5               	movf	postdec1,f,c
 29541  01AF70  006F FF9C  F041    	movff	indf1,btemp+23
 29542  01AF76  52E5               	movf	postdec1,f,c
 29543  01AF78  006F FF9C  F040    	movff	indf1,btemp+22
 29544  01AF7E  52E5               	movf	postdec1,f,c
 29545  01AF80  006F FF9C  F03F    	movff	indf1,btemp+21
 29546  01AF86  52E5               	movf	postdec1,f,c
 29547  01AF88  006F FF9C  F03E    	movff	indf1,btemp+20
 29548  01AF8E  52E5               	movf	postdec1,f,c
 29549  01AF90  006F FF9C  F03D    	movff	indf1,btemp+19
 29550  01AF96  52E5               	movf	postdec1,f,c
 29551  01AF98  006F FF9C  F03C    	movff	indf1,btemp+18
 29552  01AF9E  52E5               	movf	postdec1,f,c
 29553  01AFA0  006F FF9C  F03B    	movff	indf1,btemp+17
 29554  01AFA6  52E5               	movf	postdec1,f,c
 29555  01AFA8  006F FF9C  F03A    	movff	indf1,btemp+16
 29556  01AFAE  0EF8               	movlw	248
 29557  01AFB0  26E1               	addwf	fsr1l,f,c
 29558  01AFB2  0EFF               	movlw	255
 29559  01AFB4  22E2               	addwfc	fsr1h,f,c
 29560                           
 29561                           ;stkvar	_n @ sp[(-14)+0]
 29562  01AFB6  0EF2               	movlw	-14
 29563  01AFB8  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 29564  01AFBE  0EF3               	movlw	-13
 29565  01AFC0  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 29566  01AFC6  0EF4               	movlw	-12
 29567  01AFC8  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 29568  01AFCE  0EF5               	movlw	-11
 29569  01AFD0  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 29570  01AFD6  0EF6               	movlw	-10
 29571  01AFD8  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 29572  01AFDE  0EF7               	movlw	-9
 29573  01AFE0  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 29574  01AFE6  0EF8               	movlw	-8
 29575  01AFE8  0060  F103  FFE3   	movff	btemp+22,plusw1
 29576  01AFEE  0EF9               	movlw	-7
 29577  01AFF0  0060  F107  FFE3   	movff	btemp+23,plusw1
 29578  01AFF6                     l16183:
 29579                           
 29580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 29581                           ;stkvar	_i @ sp[(-14)+8]
 29582  01AFF6  0EFA               	movlw	-6
 29583  01AFF8  006F FF8C  F02A    	movff	plusw1,btemp
 29584  01AFFE  0EFB               	movlw	-5
 29585  01B000  50E3               	movf	plusw1,w,c
 29586  01B002  102A               	iorwf	btemp^0,w,c
 29587  01B004  B4D8               	btfsc	status,2,c
 29588  01B006  D02F               	goto	u15580
 29589                           
 29590                           ;stkvar	_n @ sp[(-14)+0]
 29591  01B008  0EF2               	movlw	-14
 29592  01B00A  50E3               	movf	plusw1,w,c
 29593  01B00C  E115               	bnz	u15551
 29594  01B00E  0EF3               	movlw	-13
 29595  01B010  50E3               	movf	plusw1,w,c
 29596  01B012  E112               	bnz	u15551
 29597  01B014  0EF4               	movlw	-12
 29598  01B016  50E3               	movf	plusw1,w,c
 29599  01B018  E10F               	bnz	u15551
 29600  01B01A  0EF5               	movlw	-11
 29601  01B01C  50E3               	movf	plusw1,w,c
 29602  01B01E  E10C               	bnz	u15551
 29603  01B020  0EF6               	movlw	-10
 29604  01B022  50E3               	movf	plusw1,w,c
 29605  01B024  E109               	bnz	u15551
 29606  01B026  0EF7               	movlw	-9
 29607  01B028  50E3               	movf	plusw1,w,c
 29608  01B02A  E106               	bnz	u15551
 29609  01B02C  0EF8               	movlw	-8
 29610  01B02E  50E3               	movf	plusw1,w,c
 29611  01B030  E103               	bnz	u15551
 29612  01B032  0EF9               	movlw	-7
 29613  01B034  50E3               	movf	plusw1,w,c
 29614  01B036  A4D8               	btfss	status,2,c
 29615  01B038                     u15551:
 29616  01B038  D6E3               	goto	l16173
 29617                           
 29618                           ;stkvar	_p @ sp[(-14)+12]
 29619  01B03A  0EFF               	movlw	-1
 29620  01B03C  BEE3               	btfsc	plusw1,7,c
 29621  01B03E  D007               	goto	u15560
 29622  01B040  0EFF               	movlw	-1
 29623  01B042  50E3               	movf	plusw1,w,c
 29624  01B044  E103               	bnz	u15561
 29625  01B046  0EFE               	movlw	-2
 29626  01B048  04E3               	decf	plusw1,w,c
 29627  01B04A  B0D8               	btfsc	status,0,c
 29628  01B04C                     u15561:
 29629  01B04C  D6D9               	goto	l16173
 29630  01B04E                     u15560:
 29631                           
 29632                           ;stkvar	_w @ sp[(-14)+10]
 29633  01B04E  0EFD               	movlw	-3
 29634  01B050  BEE3               	btfsc	plusw1,7,c
 29635  01B052  D009               	goto	u15580
 29636  01B054  0EFD               	movlw	-3
 29637  01B056  50E3               	movf	plusw1,w,c
 29638  01B058  E104               	bnz	u15570
 29639  01B05A  0EFC               	movlw	-4
 29640  01B05C  04E3               	decf	plusw1,w,c
 29641  01B05E  A0D8               	btfss	status,0,c
 29642  01B060  D002               	goto	u15580
 29643  01B062                     u15570:
 29644  01B062  B24E               	btfsc	_flags^0,1,c
 29645  01B064  D6CD               	goto	l16173
 29646  01B066                     u15580:
 29647                           
 29648                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 29649                           ;stkvar	_w @ sp[(-14)+10]
 29650  01B066  0EFC               	movlw	-4
 29651  01B068  006F FF8F FFE6     	movff	plusw1,postinc1
 29652  01B06E  006F FF8F FFE6     	movff	plusw1,postinc1
 29653                           
 29654                           ;stkvar	_i @ sp[(-16)+8]
 29655  01B074  0E54               	movlw	low _dbuf
 29656  01B076  6E34               	movwf	(btemp+10)^0,c
 29657  01B078  0E03               	movlw	high _dbuf
 29658  01B07A  6E35               	movwf	(btemp+11)^0,c
 29659  01B07C  0EF8               	movlw	-8
 29660  01B07E  50E3               	movf	plusw1,w,c
 29661  01B080  2634               	addwf	(btemp+10)^0,f,c
 29662  01B082  0EF9               	movlw	-7
 29663  01B084  50E3               	movf	plusw1,w,c
 29664  01B086  2235               	addwfc	(btemp+11)^0,f,c
 29665  01B088  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 29666  01B08E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 29667                           
 29668                           ;stkvar	_fp @ sp[(-18)+-2]
 29669  01B094  0EEC               	movlw	-20
 29670  01B096  006F FF8F FFE6     	movff	plusw1,postinc1
 29671  01B09C  006F FF8F FFE6     	movff	plusw1,postinc1
 29672  01B0A2  EC0F  F0FF         	call	_pad	;wreg free
 29673                           
 29674                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 29675  01B0A6  0EE8               	movlw	232
 29676  01B0A8  26E1               	addwf	fsr1l,f,c
 29677  01B0AA  0EFF               	movlw	255
 29678  01B0AC  22E2               	addwfc	fsr1h,f,c
 29679  01B0AE  0012               	return		;funcret
 29680  01B0B0                     __end_of_utoa:
 29681                           	opt callstack 0
 29682                           
 29683 ;; *************** function ___lomod *****************
 29684 ;; Defined at:
 29685 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 29686 ;; Parameters:    Size  Location     Type
 29687 ;;  dividend        8  [STACK] unsigned long long 
 29688 ;;  divisor         8  [STACK] unsigned long long 
 29689 ;; Auto vars:     Size  Location     Type
 29690 ;;  counter         1  [STACK] unsigned char 
 29691 ;; Return value:  Size  Location     Type
 29692 ;;                  8  [STACK] unsigned long long 
 29693 ;; Registers used:
 29694 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 29695 ;; Tracked objects:
 29696 ;;		On entry : 0/3
 29697 ;;		On exit  : 0/0
 29698 ;;		Unchanged: 0/0
 29699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29704 ;;Total ram usage:        0 bytes
 29705 ;; Hardware stack levels used:    1
 29706 ;; Hardware stack levels required when called:   15
 29707 ;; This function calls:
 29708 ;;		Nothing
 29709 ;; This function is called by:
 29710 ;;		_utoa
 29711 ;; This function uses a reentrant model
 29712 ;;
 29713                           
 29714                           	psect	text101
 29715  01F738                     __ptext101:
 29716                           	opt callstack 0
 29717  01F738                     ___lomod:
 29718                           	opt callstack 0
 29719                           
 29720                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 29721  01F738  52E6               	movf	postinc1,f,c
 29722                           
 29723                           ;stkvar	_divisor @ sp[(-1)+-16]
 29724                           
 29725                           ;incstack = 0
 29726 ;; hardware stack exceeded
 29727  01F73A  0EEF               	movlw	-17
 29728  01F73C  50E3               	movf	plusw1,w,c
 29729  01F73E  E116               	bnz	u9270
 29730  01F740  0EF0               	movlw	-16
 29731  01F742  50E3               	movf	plusw1,w,c
 29732  01F744  E113               	bnz	u9270
 29733  01F746  0EF1               	movlw	-15
 29734  01F748  50E3               	movf	plusw1,w,c
 29735  01F74A  E110               	bnz	u9270
 29736  01F74C  0EF2               	movlw	-14
 29737  01F74E  50E3               	movf	plusw1,w,c
 29738  01F750  E10D               	bnz	u9270
 29739  01F752  0EF3               	movlw	-13
 29740  01F754  50E3               	movf	plusw1,w,c
 29741  01F756  E10A               	bnz	u9270
 29742  01F758  0EF4               	movlw	-12
 29743  01F75A  50E3               	movf	plusw1,w,c
 29744  01F75C  E107               	bnz	u9270
 29745  01F75E  0EF5               	movlw	-11
 29746  01F760  50E3               	movf	plusw1,w,c
 29747  01F762  E104               	bnz	u9270
 29748  01F764  0EF6               	movlw	-10
 29749  01F766  50E3               	movf	plusw1,w,c
 29750  01F768  B4D8               	btfsc	status,2,c
 29751  01F76A  D075               	goto	u9300
 29752  01F76C                     u9270:
 29753                           
 29754                           ;stkvar	_counter @ sp[(-1)+0]
 29755  01F76C  0EFF               	movlw	-1
 29756  01F76E  6AE3               	clrf	plusw1,c
 29757  01F770  D012               	goto	L30
 29758  01F772                     l10907:
 29759                           
 29760                           ;stkvar	_divisor @ sp[(-1)+-16]
 29761  01F772  90D8               	bcf	status,0,c
 29762  01F774  0EEF               	movlw	-17
 29763  01F776  36E3               	rlcf	plusw1,f,c
 29764  01F778  0EF0               	movlw	-16
 29765  01F77A  36E3               	rlcf	plusw1,f,c
 29766  01F77C  0EF1               	movlw	-15
 29767  01F77E  36E3               	rlcf	plusw1,f,c
 29768  01F780  0EF2               	movlw	-14
 29769  01F782  36E3               	rlcf	plusw1,f,c
 29770  01F784  0EF3               	movlw	-13
 29771  01F786  36E3               	rlcf	plusw1,f,c
 29772  01F788  0EF4               	movlw	-12
 29773  01F78A  36E3               	rlcf	plusw1,f,c
 29774  01F78C  0EF5               	movlw	-11
 29775  01F78E  36E3               	rlcf	plusw1,f,c
 29776  01F790  0EF6               	movlw	-10
 29777  01F792  36E3               	rlcf	plusw1,f,c
 29778                           
 29779                           ;stkvar	_counter @ sp[(-1)+0]
 29780  01F794  0EFF               	movlw	-1
 29781  01F796                     L30:
 29782  01F796  2AE3               	incf	plusw1,f,c
 29783                           
 29784                           ;stkvar	_divisor @ sp[(-1)+-16]
 29785  01F798  0EF6               	movlw	-10
 29786  01F79A  AEE3               	btfss	plusw1,7,c
 29787  01F79C  D7EA               	goto	l10907
 29788  01F79E                     u9280:
 29789                           
 29790                           ;stkvar	_divisor @ sp[(-1)+-16]
 29791                           ;stkvar	_dividend @ sp[(-1)+-8]
 29792  01F79E  50E1               	movf	fsr1l,w,c
 29793  01F7A0  0FF7               	addlw	-9
 29794  01F7A2  6ED9               	movwf	fsr2l,c
 29795  01F7A4  50E2               	movf	fsr1h,w,c
 29796  01F7A6  6EDA               	movwf	fsr2h,c
 29797  01F7A8  0EFF               	movlw	255
 29798  01F7AA  22DA               	addwfc	fsr2h,f,c
 29799  01F7AC  0EEF               	movlw	-17
 29800  01F7AE  50E3               	movf	plusw1,w,c
 29801  01F7B0  5CDE               	subwf	postinc2,w,c
 29802  01F7B2  0EF0               	movlw	-16
 29803  01F7B4  50E3               	movf	plusw1,w,c
 29804  01F7B6  58DE               	subwfb	postinc2,w,c
 29805  01F7B8  0EF1               	movlw	-15
 29806  01F7BA  50E3               	movf	plusw1,w,c
 29807  01F7BC  58DE               	subwfb	postinc2,w,c
 29808  01F7BE  0EF2               	movlw	-14
 29809  01F7C0  50E3               	movf	plusw1,w,c
 29810  01F7C2  58DE               	subwfb	postinc2,w,c
 29811  01F7C4  0EF3               	movlw	-13
 29812  01F7C6  50E3               	movf	plusw1,w,c
 29813  01F7C8  58DE               	subwfb	postinc2,w,c
 29814  01F7CA  0EF4               	movlw	-12
 29815  01F7CC  50E3               	movf	plusw1,w,c
 29816  01F7CE  58DE               	subwfb	postinc2,w,c
 29817  01F7D0  0EF5               	movlw	-11
 29818  01F7D2  50E3               	movf	plusw1,w,c
 29819  01F7D4  58DE               	subwfb	postinc2,w,c
 29820  01F7D6  0EF6               	movlw	-10
 29821  01F7D8  50E3               	movf	plusw1,w,c
 29822  01F7DA  58DE               	subwfb	postinc2,w,c
 29823  01F7DC  A0D8               	btfss	status,0,c
 29824  01F7DE  D01F               	goto	l10915
 29825                           
 29826                           ;stkvar	_divisor @ sp[(-1)+-16]
 29827                           ;stkvar	_dividend @ sp[(-1)+-8]
 29828  01F7E0  50E1               	movf	fsr1l,w,c
 29829  01F7E2  0FF7               	addlw	-9
 29830  01F7E4  6ED9               	movwf	fsr2l,c
 29831  01F7E6  50E2               	movf	fsr1h,w,c
 29832  01F7E8  6EDA               	movwf	fsr2h,c
 29833  01F7EA  0EFF               	movlw	255
 29834  01F7EC  22DA               	addwfc	fsr2h,f,c
 29835  01F7EE  0EEF               	movlw	-17
 29836  01F7F0  50E3               	movf	plusw1,w,c
 29837  01F7F2  5EDE               	subwf	postinc2,f,c
 29838  01F7F4  0EF0               	movlw	-16
 29839  01F7F6  50E3               	movf	plusw1,w,c
 29840  01F7F8  5ADE               	subwfb	postinc2,f,c
 29841  01F7FA  0EF1               	movlw	-15
 29842  01F7FC  50E3               	movf	plusw1,w,c
 29843  01F7FE  5ADE               	subwfb	postinc2,f,c
 29844  01F800  0EF2               	movlw	-14
 29845  01F802  50E3               	movf	plusw1,w,c
 29846  01F804  5ADE               	subwfb	postinc2,f,c
 29847  01F806  0EF3               	movlw	-13
 29848  01F808  50E3               	movf	plusw1,w,c
 29849  01F80A  5ADE               	subwfb	postinc2,f,c
 29850  01F80C  0EF4               	movlw	-12
 29851  01F80E  50E3               	movf	plusw1,w,c
 29852  01F810  5ADE               	subwfb	postinc2,f,c
 29853  01F812  0EF5               	movlw	-11
 29854  01F814  50E3               	movf	plusw1,w,c
 29855  01F816  5ADE               	subwfb	postinc2,f,c
 29856  01F818  0EF6               	movlw	-10
 29857  01F81A  50E3               	movf	plusw1,w,c
 29858  01F81C  5ADE               	subwfb	postinc2,f,c
 29859  01F81E                     l10915:
 29860                           
 29861                           ;stkvar	_divisor @ sp[(-1)+-16]
 29862  01F81E  90D8               	bcf	status,0,c
 29863  01F820  0EF6               	movlw	-10
 29864  01F822  32E3               	rrcf	plusw1,f,c
 29865  01F824  0EF5               	movlw	-11
 29866  01F826  32E3               	rrcf	plusw1,f,c
 29867  01F828  0EF4               	movlw	-12
 29868  01F82A  32E3               	rrcf	plusw1,f,c
 29869  01F82C  0EF3               	movlw	-13
 29870  01F82E  32E3               	rrcf	plusw1,f,c
 29871  01F830  0EF2               	movlw	-14
 29872  01F832  32E3               	rrcf	plusw1,f,c
 29873  01F834  0EF1               	movlw	-15
 29874  01F836  32E3               	rrcf	plusw1,f,c
 29875  01F838  0EF0               	movlw	-16
 29876  01F83A  32E3               	rrcf	plusw1,f,c
 29877  01F83C  0EEF               	movlw	-17
 29878  01F83E  32E3               	rrcf	plusw1,f,c
 29879                           
 29880                           ;stkvar	_counter @ sp[(-1)+0]
 29881  01F840  0EFF               	movlw	-1
 29882  01F842  50E3               	movf	plusw1,w,c
 29883  01F844  6E2A               	movwf	btemp^0,c
 29884  01F846  0E01               	movlw	1
 29885  01F848  5E2A               	subwf	btemp^0,f,c
 29886  01F84A  0EFF               	movlw	-1
 29887  01F84C  0060  F0AB  FFE3   	movff	btemp,plusw1
 29888  01F852  A4D8               	btfss	status,2,c
 29889  01F854  D7A4               	goto	u9280
 29890  01F856                     u9300:
 29891                           
 29892                           ;stkvar	_dividend @ sp[(-1)+-8]
 29893  01F856  0EF7               	movlw	247
 29894  01F858  24E1               	addwf	fsr1l,w,c
 29895  01F85A  6ED9               	movwf	fsr2l,c
 29896  01F85C  0EFF               	movlw	255
 29897  01F85E  20E2               	addwfc	fsr1h,w,c
 29898  01F860  6EDA               	movwf	fsr2h,c
 29899                           
 29900                           ;stkvar	?___lomod @ sp[(-1)+-8]
 29901  01F862  0E08               	movlw	8
 29902  01F864  6E2A               	movwf	btemp^0,c
 29903  01F866  0EF7               	movlw	-9
 29904  01F868                     us931999:
 29905  01F868  006F FF7B FFE3     	movff	postinc2,plusw1
 29906  01F86E  28E8               	incf	wreg,w,c
 29907  01F870  2E2A               	decfsz	btemp^0,f,c
 29908  01F872  D7FA               	bra	us931999
 29909                           
 29910                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 29911  01F874  52E5               	movf	postdec1,f,c
 29912  01F876  0012               	return		;funcret
 29913  01F878                     __end_of___lomod:
 29914                           	opt callstack 0
 29915                           
 29916 ;; *************** function ___lodiv *****************
 29917 ;; Defined at:
 29918 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 29919 ;; Parameters:    Size  Location     Type
 29920 ;;  dividend        8  [STACK] unsigned long long 
 29921 ;;  divisor         8  [STACK] unsigned long long 
 29922 ;; Auto vars:     Size  Location     Type
 29923 ;;  quotient        8  [STACK] unsigned long long 
 29924 ;;  counter         1  [STACK] unsigned char 
 29925 ;; Return value:  Size  Location     Type
 29926 ;;                  8  [STACK] unsigned long long 
 29927 ;; Registers used:
 29928 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 29929 ;; Tracked objects:
 29930 ;;		On entry : 0/3
 29931 ;;		On exit  : 0/0
 29932 ;;		Unchanged: 0/0
 29933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29938 ;;Total ram usage:        0 bytes
 29939 ;; Hardware stack levels used:    1
 29940 ;; Hardware stack levels required when called:   15
 29941 ;; This function calls:
 29942 ;;		Nothing
 29943 ;; This function is called by:
 29944 ;;		_utoa
 29945 ;; This function uses a reentrant model
 29946 ;;
 29947                           
 29948                           	psect	text102
 29949  01E808                     __ptext102:
 29950                           	opt callstack 0
 29951  01E808                     ___lodiv:
 29952                           	opt callstack 0
 29953                           
 29954                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 29955  01E808  0E09               	movlw	9
 29956  01E80A  26E1               	addwf	fsr1l,f,c
 29957  01E80C  0E00               	movlw	0
 29958  01E80E  22E2               	addwfc	fsr1h,f,c
 29959                           
 29960                           ;stkvar	_quotient @ sp[(-9)+0]
 29961                           
 29962                           ;incstack = 0
 29963 ;; hardware stack exceeded
 29964  01E810  0E07               	movlw	7
 29965  01E812  6E2A               	movwf	btemp^0,c
 29966  01E814  0EF7               	movlw	-9
 29967  01E816                     u9211:
 29968  01E816  6AE3               	clrf	plusw1,c
 29969  01E818  2AE8               	incf	wreg,f,c
 29970  01E81A  062A               	decf	btemp^0,f,c
 29971  01E81C  E2FC               	bc	u9211
 29972                           
 29973                           ;stkvar	_divisor @ sp[(-9)+-16]
 29974  01E81E  0EE7               	movlw	-25
 29975  01E820  50E3               	movf	plusw1,w,c
 29976  01E822  E116               	bnz	u9220
 29977  01E824  0EE8               	movlw	-24
 29978  01E826  50E3               	movf	plusw1,w,c
 29979  01E828  E113               	bnz	u9220
 29980  01E82A  0EE9               	movlw	-23
 29981  01E82C  50E3               	movf	plusw1,w,c
 29982  01E82E  E110               	bnz	u9220
 29983  01E830  0EEA               	movlw	-22
 29984  01E832  50E3               	movf	plusw1,w,c
 29985  01E834  E10D               	bnz	u9220
 29986  01E836  0EEB               	movlw	-21
 29987  01E838  50E3               	movf	plusw1,w,c
 29988  01E83A  E10A               	bnz	u9220
 29989  01E83C  0EEC               	movlw	-20
 29990  01E83E  50E3               	movf	plusw1,w,c
 29991  01E840  E107               	bnz	u9220
 29992  01E842  0EED               	movlw	-19
 29993  01E844  50E3               	movf	plusw1,w,c
 29994  01E846  E104               	bnz	u9220
 29995  01E848  0EEE               	movlw	-18
 29996  01E84A  50E3               	movf	plusw1,w,c
 29997  01E84C  B4D8               	btfsc	status,2,c
 29998  01E84E  D088               	goto	u9250
 29999  01E850                     u9220:
 30000                           
 30001                           ;stkvar	_counter @ sp[(-9)+8]
 30002  01E850  0EFF               	movlw	-1
 30003  01E852  6AE3               	clrf	plusw1,c
 30004  01E854  D012               	goto	L31
 30005  01E856                     l10883:
 30006                           
 30007                           ;stkvar	_divisor @ sp[(-9)+-16]
 30008  01E856  90D8               	bcf	status,0,c
 30009  01E858  0EE7               	movlw	-25
 30010  01E85A  36E3               	rlcf	plusw1,f,c
 30011  01E85C  0EE8               	movlw	-24
 30012  01E85E  36E3               	rlcf	plusw1,f,c
 30013  01E860  0EE9               	movlw	-23
 30014  01E862  36E3               	rlcf	plusw1,f,c
 30015  01E864  0EEA               	movlw	-22
 30016  01E866  36E3               	rlcf	plusw1,f,c
 30017  01E868  0EEB               	movlw	-21
 30018  01E86A  36E3               	rlcf	plusw1,f,c
 30019  01E86C  0EEC               	movlw	-20
 30020  01E86E  36E3               	rlcf	plusw1,f,c
 30021  01E870  0EED               	movlw	-19
 30022  01E872  36E3               	rlcf	plusw1,f,c
 30023  01E874  0EEE               	movlw	-18
 30024  01E876  36E3               	rlcf	plusw1,f,c
 30025                           
 30026                           ;stkvar	_counter @ sp[(-9)+8]
 30027  01E878  0EFF               	movlw	-1
 30028  01E87A                     L31:
 30029  01E87A  2AE3               	incf	plusw1,f,c
 30030                           
 30031                           ;stkvar	_divisor @ sp[(-9)+-16]
 30032  01E87C  0EEE               	movlw	-18
 30033  01E87E  AEE3               	btfss	plusw1,7,c
 30034  01E880  D7EA               	goto	l10883
 30035  01E882                     u9230:
 30036                           
 30037                           ;stkvar	_quotient @ sp[(-9)+0]
 30038  01E882  90D8               	bcf	status,0,c
 30039  01E884  0EF7               	movlw	-9
 30040  01E886  36E3               	rlcf	plusw1,f,c
 30041  01E888  0EF8               	movlw	-8
 30042  01E88A  36E3               	rlcf	plusw1,f,c
 30043  01E88C  0EF9               	movlw	-7
 30044  01E88E  36E3               	rlcf	plusw1,f,c
 30045  01E890  0EFA               	movlw	-6
 30046  01E892  36E3               	rlcf	plusw1,f,c
 30047  01E894  0EFB               	movlw	-5
 30048  01E896  36E3               	rlcf	plusw1,f,c
 30049  01E898  0EFC               	movlw	-4
 30050  01E89A  36E3               	rlcf	plusw1,f,c
 30051  01E89C  0EFD               	movlw	-3
 30052  01E89E  36E3               	rlcf	plusw1,f,c
 30053  01E8A0  0EFE               	movlw	-2
 30054  01E8A2  36E3               	rlcf	plusw1,f,c
 30055                           
 30056                           ;stkvar	_divisor @ sp[(-9)+-16]
 30057                           ;stkvar	_dividend @ sp[(-9)+-8]
 30058  01E8A4  50E1               	movf	fsr1l,w,c
 30059  01E8A6  0FEF               	addlw	-17
 30060  01E8A8  6ED9               	movwf	fsr2l,c
 30061  01E8AA  50E2               	movf	fsr1h,w,c
 30062  01E8AC  6EDA               	movwf	fsr2h,c
 30063  01E8AE  0EFF               	movlw	255
 30064  01E8B0  22DA               	addwfc	fsr2h,f,c
 30065  01E8B2  0EE7               	movlw	-25
 30066  01E8B4  50E3               	movf	plusw1,w,c
 30067  01E8B6  5CDE               	subwf	postinc2,w,c
 30068  01E8B8  0EE8               	movlw	-24
 30069  01E8BA  50E3               	movf	plusw1,w,c
 30070  01E8BC  58DE               	subwfb	postinc2,w,c
 30071  01E8BE  0EE9               	movlw	-23
 30072  01E8C0  50E3               	movf	plusw1,w,c
 30073  01E8C2  58DE               	subwfb	postinc2,w,c
 30074  01E8C4  0EEA               	movlw	-22
 30075  01E8C6  50E3               	movf	plusw1,w,c
 30076  01E8C8  58DE               	subwfb	postinc2,w,c
 30077  01E8CA  0EEB               	movlw	-21
 30078  01E8CC  50E3               	movf	plusw1,w,c
 30079  01E8CE  58DE               	subwfb	postinc2,w,c
 30080  01E8D0  0EEC               	movlw	-20
 30081  01E8D2  50E3               	movf	plusw1,w,c
 30082  01E8D4  58DE               	subwfb	postinc2,w,c
 30083  01E8D6  0EED               	movlw	-19
 30084  01E8D8  50E3               	movf	plusw1,w,c
 30085  01E8DA  58DE               	subwfb	postinc2,w,c
 30086  01E8DC  0EEE               	movlw	-18
 30087  01E8DE  50E3               	movf	plusw1,w,c
 30088  01E8E0  58DE               	subwfb	postinc2,w,c
 30089  01E8E2  A0D8               	btfss	status,0,c
 30090  01E8E4  D021               	goto	l10895
 30091                           
 30092                           ;stkvar	_divisor @ sp[(-9)+-16]
 30093                           ;stkvar	_dividend @ sp[(-9)+-8]
 30094  01E8E6  50E1               	movf	fsr1l,w,c
 30095  01E8E8  0FEF               	addlw	-17
 30096  01E8EA  6ED9               	movwf	fsr2l,c
 30097  01E8EC  50E2               	movf	fsr1h,w,c
 30098  01E8EE  6EDA               	movwf	fsr2h,c
 30099  01E8F0  0EFF               	movlw	255
 30100  01E8F2  22DA               	addwfc	fsr2h,f,c
 30101  01E8F4  0EE7               	movlw	-25
 30102  01E8F6  50E3               	movf	plusw1,w,c
 30103  01E8F8  5EDE               	subwf	postinc2,f,c
 30104  01E8FA  0EE8               	movlw	-24
 30105  01E8FC  50E3               	movf	plusw1,w,c
 30106  01E8FE  5ADE               	subwfb	postinc2,f,c
 30107  01E900  0EE9               	movlw	-23
 30108  01E902  50E3               	movf	plusw1,w,c
 30109  01E904  5ADE               	subwfb	postinc2,f,c
 30110  01E906  0EEA               	movlw	-22
 30111  01E908  50E3               	movf	plusw1,w,c
 30112  01E90A  5ADE               	subwfb	postinc2,f,c
 30113  01E90C  0EEB               	movlw	-21
 30114  01E90E  50E3               	movf	plusw1,w,c
 30115  01E910  5ADE               	subwfb	postinc2,f,c
 30116  01E912  0EEC               	movlw	-20
 30117  01E914  50E3               	movf	plusw1,w,c
 30118  01E916  5ADE               	subwfb	postinc2,f,c
 30119  01E918  0EED               	movlw	-19
 30120  01E91A  50E3               	movf	plusw1,w,c
 30121  01E91C  5ADE               	subwfb	postinc2,f,c
 30122  01E91E  0EEE               	movlw	-18
 30123  01E920  50E3               	movf	plusw1,w,c
 30124  01E922  5ADE               	subwfb	postinc2,f,c
 30125                           
 30126                           ;stkvar	_quotient @ sp[(-9)+0]
 30127  01E924  0EF7               	movlw	-9
 30128  01E926  80E3               	bsf	plusw1,0,c
 30129  01E928                     l10895:
 30130                           
 30131                           ;stkvar	_divisor @ sp[(-9)+-16]
 30132  01E928  90D8               	bcf	status,0,c
 30133  01E92A  0EEE               	movlw	-18
 30134  01E92C  32E3               	rrcf	plusw1,f,c
 30135  01E92E  0EED               	movlw	-19
 30136  01E930  32E3               	rrcf	plusw1,f,c
 30137  01E932  0EEC               	movlw	-20
 30138  01E934  32E3               	rrcf	plusw1,f,c
 30139  01E936  0EEB               	movlw	-21
 30140  01E938  32E3               	rrcf	plusw1,f,c
 30141  01E93A  0EEA               	movlw	-22
 30142  01E93C  32E3               	rrcf	plusw1,f,c
 30143  01E93E  0EE9               	movlw	-23
 30144  01E940  32E3               	rrcf	plusw1,f,c
 30145  01E942  0EE8               	movlw	-24
 30146  01E944  32E3               	rrcf	plusw1,f,c
 30147  01E946  0EE7               	movlw	-25
 30148  01E948  32E3               	rrcf	plusw1,f,c
 30149                           
 30150                           ;stkvar	_counter @ sp[(-9)+8]
 30151  01E94A  0EFF               	movlw	-1
 30152  01E94C  50E3               	movf	plusw1,w,c
 30153  01E94E  6E2A               	movwf	btemp^0,c
 30154  01E950  0E01               	movlw	1
 30155  01E952  5E2A               	subwf	btemp^0,f,c
 30156  01E954  0EFF               	movlw	-1
 30157  01E956  0060  F0AB  FFE3   	movff	btemp,plusw1
 30158  01E95C  A4D8               	btfss	status,2,c
 30159  01E95E  D791               	goto	u9230
 30160  01E960                     u9250:
 30161                           
 30162                           ;stkvar	_quotient @ sp[(-9)+0]
 30163  01E960  0EF7               	movlw	247
 30164  01E962  24E1               	addwf	fsr1l,w,c
 30165  01E964  6ED9               	movwf	fsr2l,c
 30166  01E966  0EFF               	movlw	255
 30167  01E968  20E2               	addwfc	fsr1h,w,c
 30168  01E96A  6EDA               	movwf	fsr2h,c
 30169                           
 30170                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 30171  01E96C  0E08               	movlw	8
 30172  01E96E  6E2A               	movwf	btemp^0,c
 30173  01E970  0EEF               	movlw	-17
 30174  01E972                     us926999:
 30175  01E972  006F FF7B FFE3     	movff	postinc2,plusw1
 30176  01E978  28E8               	incf	wreg,w,c
 30177  01E97A  2E2A               	decfsz	btemp^0,f,c
 30178  01E97C  D7FA               	bra	us926999
 30179                           
 30180                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 30181  01E97E  0EF7               	movlw	247
 30182  01E980  26E1               	addwf	fsr1l,f,c
 30183  01E982  0EFF               	movlw	255
 30184  01E984  22E2               	addwfc	fsr1h,f,c
 30185  01E986  0012               	return		;funcret
 30186  01E988                     __end_of___lodiv:
 30187                           	opt callstack 0
 30188                           
 30189 ;; *************** function _strncmp *****************
 30190 ;; Defined at:
 30191 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 30192 ;; Parameters:    Size  Location     Type
 30193 ;;  _l              2  [STACK] PTR const unsigned char 
 30194 ;;		 -> ct(3), STR_103(127), STR_101(3), STR_100(3), 
 30195 ;;		 -> STR_99(21), STR_98(21), STR_97(21), STR_96(21), 
 30196 ;;		 -> STR_95(21), STR_94(21), STR_93(26), STR_92(15), 
 30197 ;;		 -> STR_91(15), STR_90(15), STR_89(15), STR_88(10), 
 30198 ;;		 -> STR_87(10), STR_86(19), STR_85(19), STR_82(3), 
 30199 ;;		 -> STR_81(14), STR_80(28), STR_79(28), STR_78(28), 
 30200 ;;		 -> STR_77(22), STR_76(22), STR_75(22), STR_74(22), 
 30201 ;;		 -> STR_73(22), STR_72(22), STR_71(22), STR_70(22), 
 30202 ;;		 -> STR_69(22), STR_68(19), STR_67(21), STR_66(21), 
 30203 ;;		 -> STR_65(21), STR_64(22), STR_63(22), STR_62(22), 
 30204 ;;		 -> STR_61(22), STR_60(22), STR_59(22), STR_58(22), 
 30205 ;;		 -> STR_57(22), STR_56(22), STR_55(21), STR_54(22), 
 30206 ;;		 -> STR_53(22), STR_52(22), STR_51(22), STR_50(22), 
 30207 ;;		 -> STR_49(22), STR_48(24), STR_47(24), STR_46(24), 
 30208 ;;		 -> STR_45(30), STR_44(24), STR_43(24), STR_42(23), 
 30209 ;;		 -> STR_41(23), STR_40(23), STR_39(23), STR_38(23), 
 30210 ;;		 -> STR_37(23), STR_36(23), STR_35(23), STR_34(23), 
 30211 ;;		 -> STR_33(23), STR_32(23), STR_31(23), STR_30(18), 
 30212 ;;		 -> STR_29(17), STR_28(17), STR_27(22), STR_26(22), 
 30213 ;;		 -> STR_25(22), STR_24(14), STR_23(27), STR_22(27), 
 30214 ;;		 -> STR_21(23), STR_20(22), STR_19(22), STR_18(22), 
 30215 ;;		 -> STR_17(22), STR_16(23), STR_15(23), STR_14(23), 
 30216 ;;		 -> STR_13(26), STR_12(22), STR_11(21), STR_10(21), 
 30217 ;;		 -> STR_9(21), STR_8(21), STR_7(21), STR_6(21), 
 30218 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 30219 ;;  _r              2  [STACK] PTR const unsigned char 
 30220 ;;		 -> STR_137(3), STR_133(3), STR_128(3), STR_123(3), 
 30221 ;;		 -> STR_118(3), STR_114(3), 
 30222 ;;  n               2  [STACK] unsigned int 
 30223 ;; Auto vars:     Size  Location     Type
 30224 ;;  r               2  [STACK] PTR const unsigned char 
 30225 ;;		 -> STR_137(3), STR_133(3), STR_128(3), STR_123(3), 
 30226 ;;		 -> STR_118(3), STR_114(3), 
 30227 ;;  l               2  [STACK] PTR const unsigned char 
 30228 ;;		 -> ct(3), STR_103(127), STR_101(3), STR_100(3), 
 30229 ;;		 -> STR_99(21), STR_98(21), STR_97(21), STR_96(21), 
 30230 ;;		 -> STR_95(21), STR_94(21), STR_93(26), STR_92(15), 
 30231 ;;		 -> STR_91(15), STR_90(15), STR_89(15), STR_88(10), 
 30232 ;;		 -> STR_87(10), STR_86(19), STR_85(19), STR_82(3), 
 30233 ;;		 -> STR_81(14), STR_80(28), STR_79(28), STR_78(28), 
 30234 ;;		 -> STR_77(22), STR_76(22), STR_75(22), STR_74(22), 
 30235 ;;		 -> STR_73(22), STR_72(22), STR_71(22), STR_70(22), 
 30236 ;;		 -> STR_69(22), STR_68(19), STR_67(21), STR_66(21), 
 30237 ;;		 -> STR_65(21), STR_64(22), STR_63(22), STR_62(22), 
 30238 ;;		 -> STR_61(22), STR_60(22), STR_59(22), STR_58(22), 
 30239 ;;		 -> STR_57(22), STR_56(22), STR_55(21), STR_54(22), 
 30240 ;;		 -> STR_53(22), STR_52(22), STR_51(22), STR_50(22), 
 30241 ;;		 -> STR_49(22), STR_48(24), STR_47(24), STR_46(24), 
 30242 ;;		 -> STR_45(30), STR_44(24), STR_43(24), STR_42(23), 
 30243 ;;		 -> STR_41(23), STR_40(23), STR_39(23), STR_38(23), 
 30244 ;;		 -> STR_37(23), STR_36(23), STR_35(23), STR_34(23), 
 30245 ;;		 -> STR_33(23), STR_32(23), STR_31(23), STR_30(18), 
 30246 ;;		 -> STR_29(17), STR_28(17), STR_27(22), STR_26(22), 
 30247 ;;		 -> STR_25(22), STR_24(14), STR_23(27), STR_22(27), 
 30248 ;;		 -> STR_21(23), STR_20(22), STR_19(22), STR_18(22), 
 30249 ;;		 -> STR_17(22), STR_16(23), STR_15(23), STR_14(23), 
 30250 ;;		 -> STR_13(26), STR_12(22), STR_11(21), STR_10(21), 
 30251 ;;		 -> STR_9(21), STR_8(21), STR_7(21), STR_6(21), 
 30252 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 30253 ;; Return value:  Size  Location     Type
 30254 ;;                  2  [STACK] int 
 30255 ;; Registers used:
 30256 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 30257 ;; Tracked objects:
 30258 ;;		On entry : 0/0
 30259 ;;		On exit  : 0/0
 30260 ;;		Unchanged: 0/0
 30261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30266 ;;Total ram usage:        0 bytes
 30267 ;; Hardware stack levels used:    1
 30268 ;; Hardware stack levels required when called:   15
 30269 ;; This function calls:
 30270 ;;		Nothing
 30271 ;; This function is called by:
 30272 ;;		_vfpfcnvrt
 30273 ;; This function uses a reentrant model
 30274 ;;
 30275                           
 30276                           	psect	text103
 30277  01D450                     __ptext103:
 30278                           	opt callstack 0
 30279  01D450                     _strncmp:
 30280                           	opt callstack 0
 30281                           
 30282                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30283  01D450  52E6               	movf	postinc1,f,c
 30284  01D452  52E6               	movf	postinc1,f,c
 30285  01D454  52E6               	movf	postinc1,f,c
 30286  01D456  52E6               	movf	postinc1,f,c
 30287                           
 30288                           ;stkvar	__l @ sp[(-4)+-2]
 30289                           
 30290                           ;incstack = 0
 30291 ;; hardware stack exceeded
 30292  01D458  0EFA               	movlw	-6
 30293  01D45A  006F FF8C  F034    	movff	plusw1,btemp+10
 30294  01D460  0EFB               	movlw	-5
 30295  01D462  006F FF8C  F035    	movff	plusw1,btemp+11
 30296                           
 30297                           ;stkvar	_l @ sp[(-4)+2]
 30298  01D468  0EFF               	movlw	-1
 30299  01D46A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30300  01D470  0EFE               	movlw	-2
 30301  01D472  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30302                           
 30303                           ;stkvar	__r @ sp[(-4)+-4]
 30304  01D478  0EF8               	movlw	-8
 30305  01D47A  006F FF8C  F034    	movff	plusw1,btemp+10
 30306  01D480  0EF9               	movlw	-7
 30307  01D482  006F FF8C  F035    	movff	plusw1,btemp+11
 30308                           
 30309                           ;stkvar	_r @ sp[(-4)+0]
 30310  01D488  0EFD               	movlw	-3
 30311  01D48A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30312  01D490  0EFC               	movlw	-4
 30313  01D492  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30314                           
 30315                           ;stkvar	_n @ sp[(-4)+-6]
 30316  01D498  0EF6               	movlw	-10
 30317  01D49A  006F FF8C  F02A    	movff	plusw1,btemp
 30318  01D4A0  0E01               	movlw	1
 30319  01D4A2  5E2A               	subwf	btemp^0,f,c
 30320  01D4A4  0EF6               	movlw	-10
 30321  01D4A6  0060  F0AB  FFE3   	movff	btemp,plusw1
 30322  01D4AC  0EF7               	movlw	-9
 30323  01D4AE  006F FF8C  F02A    	movff	plusw1,btemp
 30324  01D4B4  0E00               	movlw	0
 30325  01D4B6  5A2A               	subwfb	btemp^0,f,c
 30326  01D4B8  0EF7               	movlw	-9
 30327  01D4BA  0060  F0AB  FFE3   	movff	btemp,plusw1
 30328  01D4C0  0EF6               	movlw	-10
 30329  01D4C2  28E3               	incf	plusw1,w,c
 30330  01D4C4  E13F               	bnz	l11593
 30331  01D4C6  0EF7               	movlw	-9
 30332  01D4C8  28E3               	incf	plusw1,w,c
 30333  01D4CA  A4D8               	btfss	status,2,c
 30334  01D4CC  D03B               	goto	l11593
 30335  01D4CE  0E00               	movlw	0
 30336  01D4D0  6E2A               	movwf	btemp^0,c
 30337  01D4D2  0E00               	movlw	0
 30338  01D4D4  6E2B               	movwf	(btemp+1)^0,c
 30339  01D4D6  D0C7               	goto	l3819
 30340  01D4D8                     l11591:
 30341                           
 30342                           ;stkvar	_l @ sp[(-4)+2]
 30343  01D4D8  0EFE               	movlw	-2
 30344  01D4DA  50E3               	movf	plusw1,w,c
 30345  01D4DC  0F01               	addlw	1
 30346  01D4DE  6E2A               	movwf	btemp^0,c
 30347  01D4E0  0EFE               	movlw	-2
 30348  01D4E2  0060  F0AB  FFE3   	movff	btemp,plusw1
 30349  01D4E8  6A2A               	clrf	btemp^0,c
 30350  01D4EA  0EFF               	movlw	-1
 30351  01D4EC  50E3               	movf	plusw1,w,c
 30352  01D4EE  202A               	addwfc	btemp^0,w,c
 30353  01D4F0  6E2A               	movwf	btemp^0,c
 30354  01D4F2  0EFF               	movlw	-1
 30355  01D4F4  0060  F0AB  FFE3   	movff	btemp,plusw1
 30356                           
 30357                           ;stkvar	_r @ sp[(-4)+0]
 30358  01D4FA  0EFC               	movlw	-4
 30359  01D4FC  50E3               	movf	plusw1,w,c
 30360  01D4FE  0F01               	addlw	1
 30361  01D500  6E2A               	movwf	btemp^0,c
 30362  01D502  0EFC               	movlw	-4
 30363  01D504  0060  F0AB  FFE3   	movff	btemp,plusw1
 30364  01D50A  6A2A               	clrf	btemp^0,c
 30365  01D50C  0EFD               	movlw	-3
 30366  01D50E  50E3               	movf	plusw1,w,c
 30367  01D510  202A               	addwfc	btemp^0,w,c
 30368  01D512  6E2A               	movwf	btemp^0,c
 30369  01D514  0EFD               	movlw	-3
 30370  01D516  0060  F0AB  FFE3   	movff	btemp,plusw1
 30371                           
 30372                           ;stkvar	_n @ sp[(-4)+-6]
 30373  01D51C  0EF6               	movlw	-10
 30374  01D51E  006F FF8C  F02A    	movff	plusw1,btemp
 30375  01D524  0E01               	movlw	1
 30376  01D526  5E2A               	subwf	btemp^0,f,c
 30377  01D528  0EF6               	movlw	-10
 30378  01D52A  0060  F0AB  FFE3   	movff	btemp,plusw1
 30379  01D530  0EF7               	movlw	-9
 30380  01D532  006F FF8C  F02A    	movff	plusw1,btemp
 30381  01D538  0E00               	movlw	0
 30382  01D53A  5A2A               	subwfb	btemp^0,f,c
 30383  01D53C  0EF7               	movlw	-9
 30384  01D53E  0060  F0AB  FFE3   	movff	btemp,plusw1
 30385  01D544                     l11593:
 30386                           
 30387                           ;stkvar	_l @ sp[(-4)+2]
 30388  01D544  0EFE               	movlw	-2
 30389  01D546  006F FF8F FFF6     	movff	plusw1,tblptrl
 30390  01D54C  0EFF               	movlw	-1
 30391  01D54E  006F FF8F FFF7     	movff	plusw1,tblptrh
 30392  01D554  0E00               	movlw	low (__mediumconst shr (0+16))
 30393  01D556  6EF8               	movwf	tblptru,c
 30394  01D558  0E1F               	movlw	(high __ramtop+-1)
 30395  01D55A  64F7               	cpfsgt	tblptrh,c
 30396  01D55C  D003               	bra	u10557
 30397  01D55E  0008               	tblrd		*
 30398  01D560  50F5               	movf	tablat,w,c
 30399  01D562  D007               	bra	u10550
 30400  01D564                     u10557:
 30401  01D564  006F FFDB FFE9     	movff	tblptrl,fsr0l
 30402  01D56A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 30403  01D570  50EF               	movf	indf0,w,c
 30404  01D572                     u10550:
 30405  01D572  0900               	iorlw	0
 30406  01D574  B4D8               	btfsc	status,2,c
 30407  01D576  D04A               	goto	u10590
 30408                           
 30409                           ;stkvar	_r @ sp[(-4)+0]
 30410  01D578  50E1               	movf	fsr1l,w,c
 30411  01D57A  0FFC               	addlw	-4
 30412  01D57C  6ED9               	movwf	fsr2l,c
 30413  01D57E  50E2               	movf	fsr1h,w,c
 30414  01D580  6EDA               	movwf	fsr2h,c
 30415  01D582  0EFF               	movlw	255
 30416  01D584  22DA               	addwfc	fsr2h,f,c
 30417  01D586  006F FF7B FFF6     	movff	postinc2,tblptrl
 30418  01D58C  006F FF77 FFF7     	movff	postdec2,tblptrh
 30419  01D592                     	if	0	;tblptru may be non-zero
 30420  01D592                     	endif
 30421  01D592                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 30422  01D592  0E00               	movlw	low (__mediumconst shr (0+16))
 30423  01D594  6EF8               	movwf	tblptru,c
 30424  01D596                     	endif
 30425  01D596  0008               	tblrd		*
 30426  01D598  50F5               	movf	tablat,w,c
 30427  01D59A  0900               	iorlw	0
 30428  01D59C  B4D8               	btfsc	status,2,c
 30429  01D59E  D036               	goto	u10590
 30430                           
 30431                           ;stkvar	_n @ sp[(-4)+-6]
 30432  01D5A0  0EF6               	movlw	-10
 30433  01D5A2  006F FF8C  F02A    	movff	plusw1,btemp
 30434  01D5A8  0EF7               	movlw	-9
 30435  01D5AA  50E3               	movf	plusw1,w,c
 30436  01D5AC  102A               	iorwf	btemp^0,w,c
 30437  01D5AE  B4D8               	btfsc	status,2,c
 30438  01D5B0  D02D               	goto	u10590
 30439                           
 30440                           ;stkvar	_r @ sp[(-4)+0]
 30441  01D5B2  50E1               	movf	fsr1l,w,c
 30442  01D5B4  0FFC               	addlw	-4
 30443  01D5B6  6ED9               	movwf	fsr2l,c
 30444  01D5B8  50E2               	movf	fsr1h,w,c
 30445  01D5BA  6EDA               	movwf	fsr2h,c
 30446  01D5BC  0EFF               	movlw	255
 30447  01D5BE  22DA               	addwfc	fsr2h,f,c
 30448  01D5C0  006F FF7B FFF6     	movff	postinc2,tblptrl
 30449  01D5C6  006F FF77 FFF7     	movff	postdec2,tblptrh
 30450  01D5CC                     	if	0	;tblptru may be non-zero
 30451  01D5CC                     	endif
 30452  01D5CC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 30453  01D5CC  0E00               	movlw	low (__mediumconst shr (0+16))
 30454  01D5CE  6EF8               	movwf	tblptru,c
 30455  01D5D0                     	endif
 30456  01D5D0  0008               	tblrd		*
 30457  01D5D2  006F FFD4  F035    	movff	tablat,btemp+11
 30458                           
 30459                           ;stkvar	_l @ sp[(-4)+2]
 30460  01D5D8  0EFE               	movlw	-2
 30461  01D5DA  006F FF8F FFF6     	movff	plusw1,tblptrl
 30462  01D5E0  0EFF               	movlw	-1
 30463  01D5E2  006F FF8F FFF7     	movff	plusw1,tblptrh
 30464  01D5E8  0E00               	movlw	low (__mediumconst shr (0+16))
 30465  01D5EA  6EF8               	movwf	tblptru,c
 30466  01D5EC  0E1F               	movlw	(high __ramtop+-1)
 30467  01D5EE  64F7               	cpfsgt	tblptrh,c
 30468  01D5F0  D003               	bra	u10597
 30469  01D5F2  0008               	tblrd		*
 30470  01D5F4  50F5               	movf	tablat,w,c
 30471  01D5F6  D007               	bra	u10595
 30472  01D5F8                     u10597:
 30473  01D5F8  006F FFDB FFE9     	movff	tblptrl,fsr0l
 30474  01D5FE  006F FFDF FFEA     	movff	tblptrh,fsr0h
 30475  01D604  50EF               	movf	indf0,w,c
 30476  01D606                     u10595:
 30477  01D606  1835               	xorwf	(btemp+11)^0,w,c
 30478  01D608  B4D8               	btfsc	status,2,c
 30479  01D60A  D766               	goto	l11591
 30480  01D60C                     u10590:
 30481                           
 30482                           ;stkvar	_l @ sp[(-4)+2]
 30483  01D60C  0EFE               	movlw	-2
 30484  01D60E  006F FF8F FFF6     	movff	plusw1,tblptrl
 30485  01D614  0EFF               	movlw	-1
 30486  01D616  006F FF8F FFF7     	movff	plusw1,tblptrh
 30487  01D61C  0E00               	movlw	low (__mediumconst shr (0+16))
 30488  01D61E  6EF8               	movwf	tblptru,c
 30489  01D620  0E1F               	movlw	(high __ramtop+-1)
 30490  01D622  64F7               	cpfsgt	tblptrh,c
 30491  01D624  D003               	bra	u10607
 30492  01D626  0008               	tblrd		*
 30493  01D628  50F5               	movf	tablat,w,c
 30494  01D62A  D007               	bra	u10600
 30495  01D62C                     u10607:
 30496  01D62C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 30497  01D632  006F FFDF FFEA     	movff	tblptrh,fsr0h
 30498  01D638  50EF               	movf	indf0,w,c
 30499  01D63A                     u10600:
 30500  01D63A  6E2A               	movwf	btemp^0,c
 30501  01D63C  6A2B               	clrf	(btemp+1)^0,c
 30502                           
 30503                           ;stkvar	_r @ sp[(-4)+0]
 30504  01D63E  50E1               	movf	fsr1l,w,c
 30505  01D640  0FFC               	addlw	-4
 30506  01D642  6ED9               	movwf	fsr2l,c
 30507  01D644  50E2               	movf	fsr1h,w,c
 30508  01D646  6EDA               	movwf	fsr2h,c
 30509  01D648  0EFF               	movlw	255
 30510  01D64A  22DA               	addwfc	fsr2h,f,c
 30511  01D64C  006F FF7B FFF6     	movff	postinc2,tblptrl
 30512  01D652  006F FF77 FFF7     	movff	postdec2,tblptrh
 30513  01D658                     	if	0	;tblptru may be non-zero
 30514  01D658                     	endif
 30515  01D658                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 30516  01D658  0E00               	movlw	low (__mediumconst shr (0+16))
 30517  01D65A  6EF8               	movwf	tblptru,c
 30518  01D65C                     	endif
 30519  01D65C  0008               	tblrd		*
 30520  01D65E  50F5               	movf	tablat,w,c
 30521  01D660  5E2A               	subwf	btemp^0,f,c
 30522  01D662  0E00               	movlw	0
 30523  01D664  5A2B               	subwfb	(btemp+1)^0,f,c
 30524  01D666                     l3819:
 30525                           
 30526                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 30527  01D666  0EF6               	movlw	246
 30528  01D668  26E1               	addwf	fsr1l,f,c
 30529  01D66A  0EFF               	movlw	255
 30530  01D66C  22E2               	addwfc	fsr1h,f,c
 30531  01D66E  0012               	return		;funcret
 30532  01D670                     __end_of_strncmp:
 30533                           	opt callstack 0
 30534                           
 30535 ;; *************** function _stoa *****************
 30536 ;; Defined at:
 30537 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 30538 ;; Parameters:    Size  Location     Type
 30539 ;;  fp              2  [STACK] PTR struct _IO_FILE
 30540 ;;		 -> f(6), NULL(0), 
 30541 ;;  s               2  [STACK] PTR unsigned char 
 30542 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), STR_84(9), 
 30543 ;;		 -> STR_83(12), D.lcd(640), D(642), T(176), 
 30544 ;;		 -> cp(4), cb(4), STR_3(5), V(181), 
 30545 ;; Auto vars:     Size  Location     Type
 30546 ;;  nuls            7  [STACK] unsigned char [7]
 30547 ;;  l               2  [STACK] int 
 30548 ;;  p               2  [STACK] int 
 30549 ;;  cp              2  [STACK] PTR unsigned char 
 30550 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 30551 ;;		 -> STR_84(9), STR_83(12), D.lcd(640), D(642), 
 30552 ;;		 -> T(176), cp(4), cb(4), STR_3(5), 
 30553 ;;		 -> V(181), 
 30554 ;;  w               2  [STACK] int 
 30555 ;;  i               2  [STACK] int 
 30556 ;; Return value:  Size  Location     Type
 30557 ;;                  2  [STACK] int 
 30558 ;; Registers used:
 30559 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 30560 ;; Tracked objects:
 30561 ;;		On entry : 0/0
 30562 ;;		On exit  : 0/0
 30563 ;;		Unchanged: 0/0
 30564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30569 ;;Total ram usage:        0 bytes
 30570 ;; Hardware stack levels used:    1
 30571 ;; Hardware stack levels required when called:   18
 30572 ;; This function calls:
 30573 ;;		_fputc
 30574 ;;		_strlen
 30575 ;; This function is called by:
 30576 ;;		_vfpfcnvrt
 30577 ;; This function uses a reentrant model
 30578 ;;
 30579                           
 30580                           	psect	text104
 30581  01BC4A                     __ptext104:
 30582                           	opt callstack 0
 30583  01BC4A                     _stoa:
 30584                           	opt callstack 0
 30585                           
 30586                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 30587  01BC4A  0E11               	movlw	17
 30588  01BC4C  26E1               	addwf	fsr1l,f,c
 30589  01BC4E  0E00               	movlw	0
 30590  01BC50  22E2               	addwfc	fsr1h,f,c
 30591                           
 30592                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 30593                           
 30594                           ;incstack = 0
 30595 ;; hardware stack exceeded
 30596  01BC52  EE20  F200         	lfsr	2,stoa@F1166
 30597                           
 30598                           ;stkvar	_nuls @ sp[(-17)+0]
 30599  01BC56  0E07               	movlw	7
 30600  01BC58  6E2A               	movwf	btemp^0,c
 30601  01BC5A  0EEF               	movlw	-17
 30602  01BC5C                     us1541999:
 30603  01BC5C  006F FF7B FFE3     	movff	postinc2,plusw1
 30604  01BC62  28E8               	incf	wreg,w,c
 30605  01BC64  2E2A               	decfsz	btemp^0,f,c
 30606  01BC66  D7FA               	bra	us1541999
 30607                           
 30608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 30609                           ;stkvar	_s @ sp[(-17)+-4]
 30610  01BC68  0EEB               	movlw	-21
 30611  01BC6A  006F FF8C  F034    	movff	plusw1,btemp+10
 30612  01BC70  0EEC               	movlw	-20
 30613  01BC72  006F FF8C  F035    	movff	plusw1,btemp+11
 30614                           
 30615                           ;stkvar	_cp @ sp[(-17)+11]
 30616  01BC78  0EFB               	movlw	-5
 30617  01BC7A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30618  01BC80  0EFA               	movlw	-6
 30619  01BC82  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30620                           
 30621                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 30622                           ;stkvar	_cp @ sp[(-17)+11]
 30623  01BC88  0EFA               	movlw	-6
 30624  01BC8A  006F FF8C  F02A    	movff	plusw1,btemp
 30625  01BC90  0EFB               	movlw	-5
 30626  01BC92  50E3               	movf	plusw1,w,c
 30627  01BC94  102A               	iorwf	btemp^0,w,c
 30628  01BC96  A4D8               	btfss	status,2,c
 30629  01BC98  D00E               	goto	l16113
 30630                           
 30631                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 30632                           ;stkvar	_nuls @ sp[(-17)+0]
 30633  01BC9A  0EEF               	movlw	239
 30634  01BC9C  24E1               	addwf	fsr1l,w,c
 30635  01BC9E  6E34               	movwf	(btemp+10)^0,c
 30636  01BCA0  0EFF               	movlw	255
 30637  01BCA2  20E2               	addwfc	fsr1h,w,c
 30638  01BCA4  6E35               	movwf	(btemp+11)^0,c
 30639                           
 30640                           ;stkvar	_cp @ sp[(-17)+11]
 30641  01BCA6  0EFB               	movlw	-5
 30642  01BCA8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30643  01BCAE  0EFA               	movlw	-6
 30644  01BCB0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30645  01BCB6                     l16113:
 30646                           
 30647                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 30648                           ;stkvar	_cp @ sp[(-17)+11]
 30649  01BCB6  0EFA               	movlw	-6
 30650  01BCB8  006F FF8F FFE6     	movff	plusw1,postinc1
 30651  01BCBE  006F FF8F FFE6     	movff	plusw1,postinc1
 30652  01BCC4  EC65  F008         	call	_strlen	;wreg free
 30653                           
 30654                           ;stkvar	_l @ sp[(-17)+7]
 30655  01BCC8  0EF6               	movlw	-10
 30656  01BCCA  0060  F0AB  FFE3   	movff	btemp,plusw1
 30657  01BCD0  0EF7               	movlw	-9
 30658  01BCD2  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30659                           
 30660                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 30661                           ;stkvar	_p @ sp[(-17)+9]
 30662  01BCD8  0EF8               	movlw	-8
 30663  01BCDA  0060  F133  FFE3   	movff	_prec,plusw1
 30664  01BCE0  0EF9               	movlw	-7
 30665  01BCE2  0060  F137  FFE3   	movff	_prec+1,plusw1
 30666                           
 30667                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 30668                           ;stkvar	_p @ sp[(-17)+9]
 30669  01BCE8  0EF9               	movlw	-7
 30670  01BCEA  BEE3               	btfsc	plusw1,7,c
 30671  01BCEC  D023               	goto	l2614
 30672                           
 30673                           ;stkvar	_l @ sp[(-17)+7]
 30674                           ;stkvar	_p @ sp[(-17)+9]
 30675  01BCEE  50E1               	movf	fsr1l,w,c
 30676  01BCF0  0FF8               	addlw	-8
 30677  01BCF2  6ED9               	movwf	fsr2l,c
 30678  01BCF4  50E2               	movf	fsr1h,w,c
 30679  01BCF6  6EDA               	movwf	fsr2h,c
 30680  01BCF8  0EFF               	movlw	255
 30681  01BCFA  22DA               	addwfc	fsr2h,f,c
 30682  01BCFC  0EF6               	movlw	-10
 30683  01BCFE  50E3               	movf	plusw1,w,c
 30684  01BD00  5CDE               	subwf	postinc2,w,c
 30685  01BD02  50DE               	movf	postinc2,w,c
 30686  01BD04  0A80               	xorlw	128
 30687  01BD06  6E2A               	movwf	btemp^0,c
 30688  01BD08  0EF7               	movlw	-9
 30689  01BD0A  50E3               	movf	plusw1,w,c
 30690  01BD0C  0A80               	xorlw	128
 30691  01BD0E  582A               	subwfb	btemp^0,w,c
 30692  01BD10  B0D8               	btfsc	status,0,c
 30693  01BD12  D010               	goto	l2614
 30694                           
 30695                           ;stkvar	_p @ sp[(-17)+9]
 30696                           ;stkvar	_l @ sp[(-17)+7]
 30697  01BD14  0EF8               	movlw	-8
 30698  01BD16  006F FF8C  F02A    	movff	plusw1,btemp
 30699  01BD1C  0EF6               	movlw	-10
 30700  01BD1E  0060  F0AB  FFE3   	movff	btemp,plusw1
 30701  01BD24  0EF9               	movlw	-7
 30702  01BD26  006F FF8C  F02A    	movff	plusw1,btemp
 30703  01BD2C  0EF7               	movlw	-9
 30704  01BD2E  0060  F0AB  FFE3   	movff	btemp,plusw1
 30705  01BD34                     l2614:
 30706                           
 30707                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 30708                           ;stkvar	_l @ sp[(-17)+7]
 30709                           ;stkvar	_p @ sp[(-17)+9]
 30710  01BD34  0EF6               	movlw	-10
 30711  01BD36  006F FF8C  F02A    	movff	plusw1,btemp
 30712  01BD3C  0EF8               	movlw	-8
 30713  01BD3E  0060  F0AB  FFE3   	movff	btemp,plusw1
 30714  01BD44  0EF7               	movlw	-9
 30715  01BD46  006F FF8C  F02A    	movff	plusw1,btemp
 30716  01BD4C  0EF9               	movlw	-7
 30717  01BD4E  0060  F0AB  FFE3   	movff	btemp,plusw1
 30718                           
 30719                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 30720                           ;stkvar	_w @ sp[(-17)+13]
 30721  01BD54  0EFC               	movlw	-4
 30722  01BD56  0060  F12B  FFE3   	movff	_width,plusw1
 30723  01BD5C  0EFD               	movlw	-3
 30724  01BD5E  0060  F12F  FFE3   	movff	_width+1,plusw1
 30725                           
 30726                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 30727  01BD64  A04E               	btfss	_flags^0,0,c
 30728  01BD66  D01F               	goto	l16133
 30729  01BD68  D031               	goto	u15460
 30730  01BD6A                     l16129:
 30731                           
 30732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 30733                           ;stkvar	_fp @ sp[(-17)+-2]
 30734  01BD6A  0EED               	movlw	-19
 30735  01BD6C  006F FF8F FFE6     	movff	plusw1,postinc1
 30736  01BD72  006F FF8F FFE6     	movff	plusw1,postinc1
 30737  01BD78  0E20               	movlw	32
 30738  01BD7A  6EE6               	movwf	postinc1,c
 30739  01BD7C  0E00               	movlw	0
 30740  01BD7E  6EE6               	movwf	postinc1,c
 30741  01BD80  ECD8  F0FC         	call	_fputc	;wreg free
 30742                           
 30743                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 30744                           ;stkvar	_l @ sp[(-17)+7]
 30745  01BD84  0EF6               	movlw	-10
 30746  01BD86  50E3               	movf	plusw1,w,c
 30747  01BD88  0F01               	addlw	1
 30748  01BD8A  6E2A               	movwf	btemp^0,c
 30749  01BD8C  0EF6               	movlw	-10
 30750  01BD8E  0060  F0AB  FFE3   	movff	btemp,plusw1
 30751  01BD94  6A2A               	clrf	btemp^0,c
 30752  01BD96  0EF7               	movlw	-9
 30753  01BD98  50E3               	movf	plusw1,w,c
 30754  01BD9A  202A               	addwfc	btemp^0,w,c
 30755  01BD9C  6E2A               	movwf	btemp^0,c
 30756  01BD9E  0EF7               	movlw	-9
 30757  01BDA0  0060  F0AB  FFE3   	movff	btemp,plusw1
 30758  01BDA6                     l16133:
 30759                           
 30760                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 30761                           ;stkvar	_w @ sp[(-17)+13]
 30762                           ;stkvar	_l @ sp[(-17)+7]
 30763  01BDA6  50E1               	movf	fsr1l,w,c
 30764  01BDA8  0FF6               	addlw	-10
 30765  01BDAA  6ED9               	movwf	fsr2l,c
 30766  01BDAC  50E2               	movf	fsr1h,w,c
 30767  01BDAE  6EDA               	movwf	fsr2h,c
 30768  01BDB0  0EFF               	movlw	255
 30769  01BDB2  22DA               	addwfc	fsr2h,f,c
 30770  01BDB4  0EFC               	movlw	-4
 30771  01BDB6  50E3               	movf	plusw1,w,c
 30772  01BDB8  5CDE               	subwf	postinc2,w,c
 30773  01BDBA  50DE               	movf	postinc2,w,c
 30774  01BDBC  0A80               	xorlw	128
 30775  01BDBE  6E2A               	movwf	btemp^0,c
 30776  01BDC0  0EFD               	movlw	-3
 30777  01BDC2  50E3               	movf	plusw1,w,c
 30778  01BDC4  0A80               	xorlw	128
 30779  01BDC6  582A               	subwfb	btemp^0,w,c
 30780  01BDC8  A0D8               	btfss	status,0,c
 30781  01BDCA  D7CF               	goto	l16129
 30782  01BDCC                     u15460:
 30783                           
 30784                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 30785                           ;stkvar	_i @ sp[(-17)+15]
 30786  01BDCC  0EFE               	movlw	-2
 30787  01BDCE  6AE3               	clrf	plusw1,c
 30788  01BDD0  0EFF               	movlw	-1
 30789  01BDD2  6AE3               	clrf	plusw1,c
 30790                           
 30791                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 30792  01BDD4  D045               	goto	l16143
 30793  01BDD6                     l16137:
 30794                           
 30795                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 30796                           ;stkvar	_fp @ sp[(-17)+-2]
 30797  01BDD6  0EED               	movlw	-19
 30798  01BDD8  006F FF8F FFE6     	movff	plusw1,postinc1
 30799  01BDDE  006F FF8F FFE6     	movff	plusw1,postinc1
 30800                           
 30801                           ;stkvar	_cp @ sp[(-19)+11]
 30802  01BDE4  0EF8               	movlw	-8
 30803  01BDE6  006F FF8F FFF6     	movff	plusw1,tblptrl
 30804  01BDEC  0EF9               	movlw	-7
 30805  01BDEE  006F FF8F FFF7     	movff	plusw1,tblptrh
 30806  01BDF4  0E00               	movlw	low (__mediumconst shr (0+16))
 30807  01BDF6  6EF8               	movwf	tblptru,c
 30808  01BDF8  0E1F               	movlw	(high __ramtop+-1)
 30809  01BDFA  64F7               	cpfsgt	tblptrh,c
 30810  01BDFC  D003               	bra	u15477
 30811  01BDFE  0008               	tblrd		*
 30812  01BE00  50F5               	movf	tablat,w,c
 30813  01BE02  D007               	bra	u15470
 30814  01BE04                     u15477:
 30815  01BE04  006F FFDB FFE9     	movff	tblptrl,fsr0l
 30816  01BE0A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 30817  01BE10  50EF               	movf	indf0,w,c
 30818  01BE12                     u15470:
 30819  01BE12  6EE6               	movwf	postinc1,c
 30820  01BE14  0E00               	movlw	0
 30821  01BE16  6EE6               	movwf	postinc1,c
 30822  01BE18  ECD8  F0FC         	call	_fputc	;wreg free
 30823                           
 30824                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 30825                           ;stkvar	_cp @ sp[(-17)+11]
 30826  01BE1C  0EFA               	movlw	-6
 30827  01BE1E  50E3               	movf	plusw1,w,c
 30828  01BE20  0F01               	addlw	1
 30829  01BE22  6E2A               	movwf	btemp^0,c
 30830  01BE24  0EFA               	movlw	-6
 30831  01BE26  0060  F0AB  FFE3   	movff	btemp,plusw1
 30832  01BE2C  6A2A               	clrf	btemp^0,c
 30833  01BE2E  0EFB               	movlw	-5
 30834  01BE30  50E3               	movf	plusw1,w,c
 30835  01BE32  202A               	addwfc	btemp^0,w,c
 30836  01BE34  6E2A               	movwf	btemp^0,c
 30837  01BE36  0EFB               	movlw	-5
 30838  01BE38  0060  F0AB  FFE3   	movff	btemp,plusw1
 30839                           
 30840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 30841                           ;stkvar	_i @ sp[(-17)+15]
 30842  01BE3E  0EFE               	movlw	-2
 30843  01BE40  50E3               	movf	plusw1,w,c
 30844  01BE42  0F01               	addlw	1
 30845  01BE44  6E2A               	movwf	btemp^0,c
 30846  01BE46  0EFE               	movlw	-2
 30847  01BE48  0060  F0AB  FFE3   	movff	btemp,plusw1
 30848  01BE4E  6A2A               	clrf	btemp^0,c
 30849  01BE50  0EFF               	movlw	-1
 30850  01BE52  50E3               	movf	plusw1,w,c
 30851  01BE54  202A               	addwfc	btemp^0,w,c
 30852  01BE56  6E2A               	movwf	btemp^0,c
 30853  01BE58  0EFF               	movlw	-1
 30854  01BE5A  0060  F0AB  FFE3   	movff	btemp,plusw1
 30855  01BE60                     l16143:
 30856                           
 30857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 30858                           ;stkvar	_p @ sp[(-17)+9]
 30859                           ;stkvar	_i @ sp[(-17)+15]
 30860  01BE60  50E1               	movf	fsr1l,w,c
 30861  01BE62  0FFE               	addlw	-2
 30862  01BE64  6ED9               	movwf	fsr2l,c
 30863  01BE66  50E2               	movf	fsr1h,w,c
 30864  01BE68  6EDA               	movwf	fsr2h,c
 30865  01BE6A  0EFF               	movlw	255
 30866  01BE6C  22DA               	addwfc	fsr2h,f,c
 30867  01BE6E  0EF8               	movlw	-8
 30868  01BE70  50E3               	movf	plusw1,w,c
 30869  01BE72  5CDE               	subwf	postinc2,w,c
 30870  01BE74  50DE               	movf	postinc2,w,c
 30871  01BE76  0A80               	xorlw	128
 30872  01BE78  6E2A               	movwf	btemp^0,c
 30873  01BE7A  0EF9               	movlw	-7
 30874  01BE7C  50E3               	movf	plusw1,w,c
 30875  01BE7E  0A80               	xorlw	128
 30876  01BE80  582A               	subwfb	btemp^0,w,c
 30877  01BE82  A0D8               	btfss	status,0,c
 30878  01BE84  D7A8               	goto	l16137
 30879                           
 30880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 30881  01BE86  B04E               	btfsc	_flags^0,0,c
 30882  01BE88  D01F               	goto	l16151
 30883  01BE8A  D031               	goto	u15500
 30884  01BE8C                     l16147:
 30885                           
 30886                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 30887                           ;stkvar	_fp @ sp[(-17)+-2]
 30888  01BE8C  0EED               	movlw	-19
 30889  01BE8E  006F FF8F FFE6     	movff	plusw1,postinc1
 30890  01BE94  006F FF8F FFE6     	movff	plusw1,postinc1
 30891  01BE9A  0E20               	movlw	32
 30892  01BE9C  6EE6               	movwf	postinc1,c
 30893  01BE9E  0E00               	movlw	0
 30894  01BEA0  6EE6               	movwf	postinc1,c
 30895  01BEA2  ECD8  F0FC         	call	_fputc	;wreg free
 30896                           
 30897                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 30898                           ;stkvar	_l @ sp[(-17)+7]
 30899  01BEA6  0EF6               	movlw	-10
 30900  01BEA8  50E3               	movf	plusw1,w,c
 30901  01BEAA  0F01               	addlw	1
 30902  01BEAC  6E2A               	movwf	btemp^0,c
 30903  01BEAE  0EF6               	movlw	-10
 30904  01BEB0  0060  F0AB  FFE3   	movff	btemp,plusw1
 30905  01BEB6  6A2A               	clrf	btemp^0,c
 30906  01BEB8  0EF7               	movlw	-9
 30907  01BEBA  50E3               	movf	plusw1,w,c
 30908  01BEBC  202A               	addwfc	btemp^0,w,c
 30909  01BEBE  6E2A               	movwf	btemp^0,c
 30910  01BEC0  0EF7               	movlw	-9
 30911  01BEC2  0060  F0AB  FFE3   	movff	btemp,plusw1
 30912  01BEC8                     l16151:
 30913                           
 30914                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 30915                           ;stkvar	_w @ sp[(-17)+13]
 30916                           ;stkvar	_l @ sp[(-17)+7]
 30917  01BEC8  50E1               	movf	fsr1l,w,c
 30918  01BECA  0FF6               	addlw	-10
 30919  01BECC  6ED9               	movwf	fsr2l,c
 30920  01BECE  50E2               	movf	fsr1h,w,c
 30921  01BED0  6EDA               	movwf	fsr2h,c
 30922  01BED2  0EFF               	movlw	255
 30923  01BED4  22DA               	addwfc	fsr2h,f,c
 30924  01BED6  0EFC               	movlw	-4
 30925  01BED8  50E3               	movf	plusw1,w,c
 30926  01BEDA  5CDE               	subwf	postinc2,w,c
 30927  01BEDC  50DE               	movf	postinc2,w,c
 30928  01BEDE  0A80               	xorlw	128
 30929  01BEE0  6E2A               	movwf	btemp^0,c
 30930  01BEE2  0EFD               	movlw	-3
 30931  01BEE4  50E3               	movf	plusw1,w,c
 30932  01BEE6  0A80               	xorlw	128
 30933  01BEE8  582A               	subwfb	btemp^0,w,c
 30934  01BEEA  A0D8               	btfss	status,0,c
 30935  01BEEC  D7CF               	goto	l16147
 30936  01BEEE                     u15500:
 30937                           
 30938                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 30939                           ;stkvar	_l @ sp[(-17)+7]
 30940  01BEEE  0EF6               	movlw	-10
 30941  01BEF0  006F FF8C  F02A    	movff	plusw1,btemp
 30942  01BEF6  0EF7               	movlw	-9
 30943  01BEF8  006F FF8C  F02B    	movff	plusw1,btemp+1
 30944                           
 30945                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 30946  01BEFE  0EEB               	movlw	235
 30947  01BF00  26E1               	addwf	fsr1l,f,c
 30948  01BF02  0EFF               	movlw	255
 30949  01BF04  22E2               	addwfc	fsr1h,f,c
 30950  01BF06  0012               	return		;funcret
 30951  01BF08                     __end_of_stoa:
 30952                           	opt callstack 0
 30953                           
 30954 ;; *************** function _efgtoa *****************
 30955 ;; Defined at:
 30956 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 30957 ;; Parameters:    Size  Location     Type
 30958 ;;  fp              2  [STACK] PTR struct _IO_FILE
 30959 ;;		 -> f(6), NULL(0), 
 30960 ;;  f               4  [STACK] PTR struct _IO_FILE
 30961 ;;  c               1  [STACK] unsigned char 
 30962 ;; Auto vars:     Size  Location     Type
 30963 ;;  u               4  [STACK] unsigned char 
 30964 ;;  g               4  [STACK] unsigned char 
 30965 ;;  l               4  [STACK] unsigned char 
 30966 ;;  h               4  [STACK] unsigned char 
 30967 ;;  ou              4  [STACK] unsigned char 
 30968 ;;  n               2  [STACK] int 
 30969 ;;  e               2  [STACK] int 
 30970 ;;  i               2  [STACK] int 
 30971 ;;  w               2  [STACK] int 
 30972 ;;  p               2  [STACK] int 
 30973 ;;  sign            2  [STACK] int 
 30974 ;;  d               2  [STACK] int 
 30975 ;;  ne              2  [STACK] int 
 30976 ;;  m               2  [STACK] int 
 30977 ;;  pp              2  [STACK] int 
 30978 ;;  t               2  [STACK] int 
 30979 ;;  mode            1  [STACK] unsigned char 
 30980 ;;  nmode           1  [STACK] unsigned char 
 30981 ;; Return value:  Size  Location     Type
 30982 ;;                  2  [STACK] int 
 30983 ;; Registers used:
 30984 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 30985 ;; Tracked objects:
 30986 ;;		On entry : 0/0
 30987 ;;		On exit  : 0/0
 30988 ;;		Unchanged: 0/0
 30989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30994 ;;Total ram usage:        0 bytes
 30995 ;; Hardware stack levels used:    1
 30996 ;; Hardware stack levels required when called:   20
 30997 ;; This function calls:
 30998 ;;		___awdiv
 30999 ;;		___awmod
 31000 ;;		___fladd
 31001 ;;		___fldiv
 31002 ;;		___fleq
 31003 ;;		___flge
 31004 ;;		___flmul
 31005 ;;		___flneg
 31006 ;;		___flsub
 31007 ;;		___fltol
 31008 ;;		___fpclassifyf
 31009 ;;		_floorf
 31010 ;;		_isupper
 31011 ;;		_pad
 31012 ;;		_strcpy
 31013 ;;		_tolower
 31014 ;; This function is called by:
 31015 ;;		_vfpfcnvrt
 31016 ;; This function uses a reentrant model
 31017 ;;
 31018                           
 31019                           	psect	text105
 31020  0115D6                     __ptext105:
 31021                           	opt callstack 0
 31022  0115D6                     _efgtoa:
 31023                           	opt callstack 0
 31024                           
 31025                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 31026  0115D6  0E38               	movlw	56
 31027  0115D8  26E1               	addwf	fsr1l,f,c
 31028  0115DA  0E00               	movlw	0
 31029  0115DC  22E2               	addwfc	fsr1h,f,c
 31030                           
 31031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 31032                           ;stkvar	_sign @ sp[(-56)+42]
 31033                           
 31034                           ;incstack = 0
 31035 ;; hardware stack exceeded
 31036  0115DE  0EF2               	movlw	-14
 31037  0115E0  6AE3               	clrf	plusw1,c
 31038  0115E2  0EF3               	movlw	-13
 31039  0115E4  6AE3               	clrf	plusw1,c
 31040                           
 31041                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 31042                           ;stkvar	_f @ sp[(-56)+-6]
 31043  0115E6  0EC2               	movlw	-62
 31044  0115E8  006F FF8C  F032    	movff	plusw1,btemp+8
 31045  0115EE  0EC3               	movlw	-61
 31046  0115F0  006F FF8C  F033    	movff	plusw1,btemp+9
 31047  0115F6  0EC4               	movlw	-60
 31048  0115F8  006F FF8C  F034    	movff	plusw1,btemp+10
 31049  0115FE  0EC5               	movlw	-59
 31050  011600  006F FF8C  F035    	movff	plusw1,btemp+11
 31051                           
 31052                           ;stkvar	_g @ sp[(-56)+16]
 31053  011606  0ED8               	movlw	-40
 31054  011608  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31055  01160E  0ED9               	movlw	-39
 31056  011610  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31057  011616  0EDA               	movlw	-38
 31058  011618  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31059  01161E  0EDB               	movlw	-37
 31060  011620  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31061                           
 31062                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 31063                           ;stkvar	_g @ sp[(-56)+16]
 31064  011626  0EDB               	movlw	-37
 31065  011628  AEE3               	btfss	plusw1,7,c
 31066  01162A  D02B               	goto	l15811
 31067                           
 31068                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 31069  01162C  0E01               	movlw	1
 31070  01162E  6E34               	movwf	(btemp+10)^0,c
 31071  011630  0E00               	movlw	0
 31072  011632  6E35               	movwf	(btemp+11)^0,c
 31073                           
 31074                           ;stkvar	_sign @ sp[(-56)+42]
 31075  011634  0EF2               	movlw	-14
 31076  011636  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31077  01163C  0EF3               	movlw	-13
 31078  01163E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31079                           
 31080                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 31081                           ;stkvar	_g @ sp[(-56)+16]
 31082  011644  0ED8               	movlw	-40
 31083  011646  006F FF8F FFE6     	movff	plusw1,postinc1
 31084  01164C  006F FF8F FFE6     	movff	plusw1,postinc1
 31085  011652  006F FF8F FFE6     	movff	plusw1,postinc1
 31086  011658  006F FF8F FFE6     	movff	plusw1,postinc1
 31087  01165E  ECCD  F010         	call	___flneg	;wreg free
 31088                           
 31089                           ;stkvar	_g @ sp[(-56)+16]
 31090  011662  0ED8               	movlw	-40
 31091  011664  0060  F0AB  FFE3   	movff	btemp,plusw1
 31092  01166A  0ED9               	movlw	-39
 31093  01166C  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31094  011672  0EDA               	movlw	-38
 31095  011674  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31096  01167A  0EDB               	movlw	-37
 31097  01167C  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31098  011682                     l15811:
 31099                           
 31100                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 31101                           ;stkvar	_n @ sp[(-56)+32]
 31102  011682  0EE8               	movlw	-24
 31103  011684  6AE3               	clrf	plusw1,c
 31104  011686  0EE9               	movlw	-23
 31105  011688  6AE3               	clrf	plusw1,c
 31106                           
 31107                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 31108                           ;stkvar	_w @ sp[(-56)+38]
 31109  01168A  0EEE               	movlw	-18
 31110  01168C  0060  F12B  FFE3   	movff	_width,plusw1
 31111  011692  0EEF               	movlw	-17
 31112  011694  0060  F12F  FFE3   	movff	_width+1,plusw1
 31113                           
 31114                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 31115                           ;stkvar	_sign @ sp[(-56)+42]
 31116  01169A  0EF2               	movlw	-14
 31117  01169C  006F FF8C  F02A    	movff	plusw1,btemp
 31118  0116A2  0EF3               	movlw	-13
 31119  0116A4  50E3               	movf	plusw1,w,c
 31120  0116A6  102A               	iorwf	btemp^0,w,c
 31121  0116A8  A4D8               	btfss	status,2,c
 31122  0116AA  D002               	goto	u14910
 31123  0116AC  A44E               	btfss	_flags^0,2,c
 31124  0116AE  D036               	goto	l15831
 31125  0116B0                     u14910:
 31126                           
 31127                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 31128                           ;stkvar	_sign @ sp[(-56)+42]
 31129  0116B0  0EF2               	movlw	-14
 31130  0116B2  006F FF8C  F02A    	movff	plusw1,btemp
 31131  0116B8  0EF3               	movlw	-13
 31132  0116BA  50E3               	movf	plusw1,w,c
 31133  0116BC  102A               	iorwf	btemp^0,w,c
 31134  0116BE  A4D8               	btfss	status,2,c
 31135  0116C0  D002               	goto	l15823
 31136  0116C2  0E2B               	movlw	43
 31137  0116C4  D001               	goto	L32
 31138  0116C6                     l15823:
 31139  0116C6  0E2D               	movlw	45
 31140  0116C8                     L32:
 31141  0116C8  6E34               	movwf	(btemp+10)^0,c
 31142  0116CA  0E00               	movlw	0
 31143  0116CC  6E35               	movwf	(btemp+11)^0,c
 31144                           
 31145                           ;stkvar	_efgtoa$6637 @ sp[(-56)+10]
 31146  0116CE  0ED2               	movlw	-46
 31147  0116D0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31148  0116D6  0ED3               	movlw	-45
 31149  0116D8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31150                           
 31151                           ;stkvar	_efgtoa$6637 @ sp[(-56)+10]
 31152  0116DE  0ED2               	movlw	-46
 31153  0116E0  006F FF8C  F354    	movff	plusw1,_dbuf
 31154                           
 31155                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 31156                           ;stkvar	_n @ sp[(-56)+32]
 31157  0116E6  0EE8               	movlw	-24
 31158  0116E8  50E3               	movf	plusw1,w,c
 31159  0116EA  0F01               	addlw	1
 31160  0116EC  6E2A               	movwf	btemp^0,c
 31161  0116EE  0EE8               	movlw	-24
 31162  0116F0  0060  F0AB  FFE3   	movff	btemp,plusw1
 31163  0116F6  6A2A               	clrf	btemp^0,c
 31164  0116F8  0EE9               	movlw	-23
 31165  0116FA  50E3               	movf	plusw1,w,c
 31166  0116FC  202A               	addwfc	btemp^0,w,c
 31167  0116FE  6E2A               	movwf	btemp^0,c
 31168  011700  0EE9               	movlw	-23
 31169  011702  0060  F0AB  FFE3   	movff	btemp,plusw1
 31170                           
 31171                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 31172                           ;stkvar	_w @ sp[(-56)+38]
 31173  011708  50E1               	movf	fsr1l,w,c
 31174  01170A  0FEE               	addlw	-18
 31175  01170C  6ED9               	movwf	fsr2l,c
 31176  01170E  50E2               	movf	fsr1h,w,c
 31177  011710  6EDA               	movwf	fsr2h,c
 31178  011712  0EFF               	movlw	255
 31179  011714  22DA               	addwfc	fsr2h,f,c
 31180  011716  06DE               	decf	postinc2,f,c
 31181  011718  0E00               	movlw	0
 31182  01171A  5ADD               	subwfb	postdec2,f,c
 31183  01171C                     l15831:
 31184                           
 31185                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 31186                           ;stkvar	_g @ sp[(-56)+16]
 31187  01171C  0ED8               	movlw	-40
 31188  01171E  006F FF8F FFE6     	movff	plusw1,postinc1
 31189  011724  006F FF8F FFE6     	movff	plusw1,postinc1
 31190  01172A  006F FF8F FFE6     	movff	plusw1,postinc1
 31191  011730  006F FF8F FFE6     	movff	plusw1,postinc1
 31192  011736  ECE5  F0F0         	call	___fpclassifyf	;wreg free
 31193  01173A  042A               	decf	btemp^0,w,c
 31194  01173C  102B               	iorwf	(btemp+1)^0,w,c
 31195  01173E  A4D8               	btfss	status,2,c
 31196  011740  D076               	goto	l15849
 31197  011742  0EBF               	movlw	191
 31198  011744  6E34               	movwf	(btemp+10)^0,c
 31199  011746  0EFF               	movlw	255
 31200  011748  6E35               	movwf	(btemp+11)^0,c
 31201                           
 31202                           ;stkvar	_c @ sp[(-56)+-7]
 31203  01174A  0EC1               	movlw	-63
 31204  01174C  50E3               	movf	plusw1,w,c
 31205  01174E  6E32               	movwf	(btemp+8)^0,c
 31206  011750  6A33               	clrf	(btemp+9)^0,c
 31207  011752  5034               	movf	(btemp+10)^0,w,c
 31208  011754  2632               	addwf	(btemp+8)^0,f,c
 31209  011756  5035               	movf	(btemp+11)^0,w,c
 31210  011758  2233               	addwfc	(btemp+9)^0,f,c
 31211  01175A  5033               	movf	(btemp+9)^0,w,c
 31212  01175C  E106               	bnz	u14940
 31213  01175E  0E1A               	movlw	26
 31214  011760  5C32               	subwf	(btemp+8)^0,w,c
 31215  011762  B0D8               	btfsc	status,0,c
 31216  011764  D002               	goto	u14940
 31217  011766  0E01               	movlw	1
 31218  011768  D001               	goto	u14950
 31219  01176A                     u14940:
 31220  01176A  0E00               	movlw	0
 31221  01176C                     u14950:
 31222  01176C  6E34               	movwf	(btemp+10)^0,c
 31223  01176E  6A35               	clrf	(btemp+11)^0,c
 31224                           
 31225                           ;stkvar	_efgtoa$6638 @ sp[(-56)+8]
 31226  011770  0ED0               	movlw	-48
 31227  011772  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31228  011778  0ED1               	movlw	-47
 31229  01177A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31230                           
 31231                           ;stkvar	_efgtoa$6638 @ sp[(-56)+8]
 31232  011780  0ED0               	movlw	-48
 31233  011782  006F FF8C  F02A    	movff	plusw1,btemp
 31234  011788  0ED1               	movlw	-47
 31235  01178A  50E3               	movf	plusw1,w,c
 31236  01178C  102A               	iorwf	btemp^0,w,c
 31237  01178E  B4D8               	btfsc	status,2,c
 31238  011790  D017               	goto	l15841
 31239                           
 31240                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 31241  011792  0EDA               	movlw	low STR_104
 31242  011794  6EE6               	movwf	postinc1,c
 31243  011796  0EFF               	movlw	high STR_104
 31244  011798  6EE6               	movwf	postinc1,c
 31245                           
 31246                           ;stkvar	_n @ sp[(-58)+32]
 31247  01179A  0E54               	movlw	low _dbuf
 31248  01179C  6E34               	movwf	(btemp+10)^0,c
 31249  01179E  0E03               	movlw	high _dbuf
 31250  0117A0  6E35               	movwf	(btemp+11)^0,c
 31251  0117A2  0EE6               	movlw	-26
 31252  0117A4  50E3               	movf	plusw1,w,c
 31253  0117A6  2634               	addwf	(btemp+10)^0,f,c
 31254  0117A8  0EE7               	movlw	-25
 31255  0117AA  50E3               	movf	plusw1,w,c
 31256  0117AC  2235               	addwfc	(btemp+11)^0,f,c
 31257  0117AE  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 31258  0117B4  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 31259  0117BA  EC21  F004         	call	_strcpy	;wreg free
 31260                           
 31261                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 31262  0117BE  D016               	goto	l15843
 31263  0117C0                     l15841:
 31264                           
 31265                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 31266  0117C0  0EE2               	movlw	low STR_105
 31267  0117C2  6EE6               	movwf	postinc1,c
 31268  0117C4  0EFF               	movlw	high STR_105
 31269  0117C6  6EE6               	movwf	postinc1,c
 31270                           
 31271                           ;stkvar	_n @ sp[(-58)+32]
 31272  0117C8  0E54               	movlw	low _dbuf
 31273  0117CA  6E34               	movwf	(btemp+10)^0,c
 31274  0117CC  0E03               	movlw	high _dbuf
 31275  0117CE  6E35               	movwf	(btemp+11)^0,c
 31276  0117D0  0EE6               	movlw	-26
 31277  0117D2  50E3               	movf	plusw1,w,c
 31278  0117D4  2634               	addwf	(btemp+10)^0,f,c
 31279  0117D6  0EE7               	movlw	-25
 31280  0117D8  50E3               	movf	plusw1,w,c
 31281  0117DA  2235               	addwfc	(btemp+11)^0,f,c
 31282  0117DC  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 31283  0117E2  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 31284  0117E8  EC21  F004         	call	_strcpy	;wreg free
 31285  0117EC                     l15843:
 31286                           
 31287                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 31288                           ;stkvar	_w @ sp[(-56)+38]
 31289  0117EC  50E1               	movf	fsr1l,w,c
 31290  0117EE  0FEE               	addlw	-18
 31291  0117F0  6ED9               	movwf	fsr2l,c
 31292  0117F2  50E2               	movf	fsr1h,w,c
 31293  0117F4  6EDA               	movwf	fsr2h,c
 31294  0117F6  0EFF               	movlw	255
 31295  0117F8  22DA               	addwfc	fsr2h,f,c
 31296  0117FA  0EFD               	movlw	253
 31297  0117FC  26DE               	addwf	postinc2,f,c
 31298  0117FE  0EFF               	movlw	255
 31299  011800  22DD               	addwfc	postdec2,f,c
 31300  011802                     l15845:
 31301                           
 31302                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 31303                           ;stkvar	_w @ sp[(-56)+38]
 31304  011802  0EEE               	movlw	-18
 31305  011804  006F FF8F FFE6     	movff	plusw1,postinc1
 31306  01180A  006F FF8F FFE6     	movff	plusw1,postinc1
 31307  011810  0E54               	movlw	low _dbuf
 31308  011812  6EE6               	movwf	postinc1,c
 31309  011814  0E03               	movlw	high _dbuf
 31310  011816  6EE6               	movwf	postinc1,c
 31311                           
 31312                           ;stkvar	_fp @ sp[(-60)+-2]
 31313  011818  0EC2               	movlw	-62
 31314  01181A  006F FF8F FFE6     	movff	plusw1,postinc1
 31315  011820  006F FF8F FFE6     	movff	plusw1,postinc1
 31316  011826  EC0F  F0FF         	call	_pad	;wreg free
 31317  01182A  EF08  F094         	goto	l2532
 31318  01182E                     l15849:
 31319                           
 31320                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 31321                           ;stkvar	_g @ sp[(-56)+16]
 31322  01182E  0ED8               	movlw	-40
 31323  011830  006F FF8F FFE6     	movff	plusw1,postinc1
 31324  011836  006F FF8F FFE6     	movff	plusw1,postinc1
 31325  01183C  006F FF8F FFE6     	movff	plusw1,postinc1
 31326  011842  006F FF8F FFE6     	movff	plusw1,postinc1
 31327  011848  ECE5  F0F0         	call	___fpclassifyf	;wreg free
 31328  01184C  502A               	movf	btemp^0,w,c
 31329  01184E  102B               	iorwf	(btemp+1)^0,w,c
 31330  011850  A4D8               	btfss	status,2,c
 31331  011852  D056               	goto	l15867
 31332  011854  0EBF               	movlw	191
 31333  011856  6E34               	movwf	(btemp+10)^0,c
 31334  011858  0EFF               	movlw	255
 31335  01185A  6E35               	movwf	(btemp+11)^0,c
 31336                           
 31337                           ;stkvar	_c @ sp[(-56)+-7]
 31338  01185C  0EC1               	movlw	-63
 31339  01185E  50E3               	movf	plusw1,w,c
 31340  011860  6E32               	movwf	(btemp+8)^0,c
 31341  011862  6A33               	clrf	(btemp+9)^0,c
 31342  011864  5034               	movf	(btemp+10)^0,w,c
 31343  011866  2632               	addwf	(btemp+8)^0,f,c
 31344  011868  5035               	movf	(btemp+11)^0,w,c
 31345  01186A  2233               	addwfc	(btemp+9)^0,f,c
 31346  01186C  5033               	movf	(btemp+9)^0,w,c
 31347  01186E  E106               	bnz	u14980
 31348  011870  0E1A               	movlw	26
 31349  011872  5C32               	subwf	(btemp+8)^0,w,c
 31350  011874  B0D8               	btfsc	status,0,c
 31351  011876  D002               	goto	u14980
 31352  011878  0E01               	movlw	1
 31353  01187A  D001               	goto	u14990
 31354  01187C                     u14980:
 31355  01187C  0E00               	movlw	0
 31356  01187E                     u14990:
 31357  01187E  6E34               	movwf	(btemp+10)^0,c
 31358  011880  6A35               	clrf	(btemp+11)^0,c
 31359                           
 31360                           ;stkvar	_efgtoa$6642 @ sp[(-56)+6]
 31361  011882  0ECE               	movlw	-50
 31362  011884  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31363  01188A  0ECF               	movlw	-49
 31364  01188C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31365                           
 31366                           ;stkvar	_efgtoa$6642 @ sp[(-56)+6]
 31367  011892  0ECE               	movlw	-50
 31368  011894  006F FF8C  F02A    	movff	plusw1,btemp
 31369  01189A  0ECF               	movlw	-49
 31370  01189C  50E3               	movf	plusw1,w,c
 31371  01189E  102A               	iorwf	btemp^0,w,c
 31372  0118A0  B4D8               	btfsc	status,2,c
 31373  0118A2  D017               	goto	l15859
 31374                           
 31375                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 31376  0118A4  0EDE               	movlw	low STR_108
 31377  0118A6  6EE6               	movwf	postinc1,c
 31378  0118A8  0EFF               	movlw	high STR_108
 31379  0118AA  6EE6               	movwf	postinc1,c
 31380                           
 31381                           ;stkvar	_n @ sp[(-58)+32]
 31382  0118AC  0E54               	movlw	low _dbuf
 31383  0118AE  6E34               	movwf	(btemp+10)^0,c
 31384  0118B0  0E03               	movlw	high _dbuf
 31385  0118B2  6E35               	movwf	(btemp+11)^0,c
 31386  0118B4  0EE6               	movlw	-26
 31387  0118B6  50E3               	movf	plusw1,w,c
 31388  0118B8  2634               	addwf	(btemp+10)^0,f,c
 31389  0118BA  0EE7               	movlw	-25
 31390  0118BC  50E3               	movf	plusw1,w,c
 31391  0118BE  2235               	addwfc	(btemp+11)^0,f,c
 31392  0118C0  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 31393  0118C6  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 31394  0118CC  EC21  F004         	call	_strcpy	;wreg free
 31395                           
 31396                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 31397  0118D0  D78D               	goto	l15843
 31398  0118D2                     l15859:
 31399                           
 31400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 31401  0118D2  0EE6               	movlw	low STR_109
 31402  0118D4  6EE6               	movwf	postinc1,c
 31403  0118D6  0EFF               	movlw	high STR_109
 31404  0118D8  6EE6               	movwf	postinc1,c
 31405                           
 31406                           ;stkvar	_n @ sp[(-58)+32]
 31407  0118DA  0E54               	movlw	low _dbuf
 31408  0118DC  6E34               	movwf	(btemp+10)^0,c
 31409  0118DE  0E03               	movlw	high _dbuf
 31410  0118E0  6E35               	movwf	(btemp+11)^0,c
 31411  0118E2  0EE6               	movlw	-26
 31412  0118E4  50E3               	movf	plusw1,w,c
 31413  0118E6  2634               	addwf	(btemp+10)^0,f,c
 31414  0118E8  0EE7               	movlw	-25
 31415  0118EA  50E3               	movf	plusw1,w,c
 31416  0118EC  2235               	addwfc	(btemp+11)^0,f,c
 31417  0118EE  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 31418  0118F4  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 31419  0118FA  EC21  F004         	call	_strcpy	;wreg free
 31420  0118FE  D776               	goto	l15843
 31421  011900                     l15867:
 31422                           
 31423                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 31424  011900  0E00               	movlw	0
 31425  011902  6E32               	movwf	(btemp+8)^0,c
 31426  011904  0E00               	movlw	0
 31427  011906  6E33               	movwf	(btemp+9)^0,c
 31428  011908  0E80               	movlw	128
 31429  01190A  6E34               	movwf	(btemp+10)^0,c
 31430  01190C  0E3F               	movlw	63
 31431  01190E  6E35               	movwf	(btemp+11)^0,c
 31432                           
 31433                           ;stkvar	_u @ sp[(-56)+12]
 31434  011910  0ED4               	movlw	-44
 31435  011912  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31436  011918  0ED5               	movlw	-43
 31437  01191A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31438  011920  0ED6               	movlw	-42
 31439  011922  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31440  011928  0ED7               	movlw	-41
 31441  01192A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31442                           
 31443                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 31444                           ;stkvar	_e @ sp[(-56)+34]
 31445  011930  0EEA               	movlw	-22
 31446  011932  6AE3               	clrf	plusw1,c
 31447  011934  0EEB               	movlw	-21
 31448  011936  6AE3               	clrf	plusw1,c
 31449                           
 31450                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 31451  011938  0E00               	movlw	0
 31452  01193A  6EE6               	movwf	postinc1,c
 31453  01193C  0E00               	movlw	0
 31454  01193E  6EE6               	movwf	postinc1,c
 31455  011940  0E00               	movlw	0
 31456  011942  6EE6               	movwf	postinc1,c
 31457  011944  0E00               	movlw	0
 31458  011946  6EE6               	movwf	postinc1,c
 31459                           
 31460                           ;stkvar	_g @ sp[(-60)+16]
 31461  011948  0ED4               	movlw	-44
 31462  01194A  006F FF8F FFE6     	movff	plusw1,postinc1
 31463  011950  006F FF8F FFE6     	movff	plusw1,postinc1
 31464  011956  006F FF8F FFE6     	movff	plusw1,postinc1
 31465  01195C  006F FF8F FFE6     	movff	plusw1,postinc1
 31466  011962  EC8B  F004         	call	___fleq	;wreg free
 31467  011966  A02A               	btfss	btemp& (0+255),0,c
 31468  011968  D039               	goto	l15879
 31469  01196A  D0BC               	goto	u15030
 31470  01196C                     l15875:
 31471                           
 31472                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 31473  01196C  0E00               	movlw	0
 31474  01196E  6EE6               	movwf	postinc1,c
 31475  011970  0E00               	movlw	0
 31476  011972  6EE6               	movwf	postinc1,c
 31477  011974  0E20               	movlw	32
 31478  011976  6EE6               	movwf	postinc1,c
 31479  011978  0E41               	movlw	65
 31480  01197A  6EE6               	movwf	postinc1,c
 31481                           
 31482                           ;stkvar	_u @ sp[(-60)+12]
 31483  01197C  0ED0               	movlw	-48
 31484  01197E  006F FF8F FFE6     	movff	plusw1,postinc1
 31485  011984  006F FF8F FFE6     	movff	plusw1,postinc1
 31486  01198A  006F FF8F FFE6     	movff	plusw1,postinc1
 31487  011990  006F FF8F FFE6     	movff	plusw1,postinc1
 31488  011996  EC67  F0B8         	call	___flmul	;wreg free
 31489                           
 31490                           ;stkvar	_u @ sp[(-56)+12]
 31491  01199A  0ED4               	movlw	-44
 31492  01199C  0060  F0AB  FFE3   	movff	btemp,plusw1
 31493  0119A2  0ED5               	movlw	-43
 31494  0119A4  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31495  0119AA  0ED6               	movlw	-42
 31496  0119AC  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31497  0119B2  0ED7               	movlw	-41
 31498  0119B4  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31499                           
 31500                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 31501                           ;stkvar	_e @ sp[(-56)+34]
 31502  0119BA  0EEA               	movlw	-22
 31503  0119BC  50E3               	movf	plusw1,w,c
 31504  0119BE  0F01               	addlw	1
 31505  0119C0  6E2A               	movwf	btemp^0,c
 31506  0119C2  0EEA               	movlw	-22
 31507  0119C4  0060  F0AB  FFE3   	movff	btemp,plusw1
 31508  0119CA  6A2A               	clrf	btemp^0,c
 31509  0119CC  0EEB               	movlw	-21
 31510  0119CE  50E3               	movf	plusw1,w,c
 31511  0119D0  202A               	addwfc	btemp^0,w,c
 31512  0119D2  6E2A               	movwf	btemp^0,c
 31513  0119D4  0EEB               	movlw	-21
 31514  0119D6  0060  F0AB  FFE3   	movff	btemp,plusw1
 31515  0119DC                     l15879:
 31516                           
 31517                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 31518  0119DC  0E00               	movlw	0
 31519  0119DE  6EE6               	movwf	postinc1,c
 31520  0119E0  0E00               	movlw	0
 31521  0119E2  6EE6               	movwf	postinc1,c
 31522  0119E4  0E20               	movlw	32
 31523  0119E6  6EE6               	movwf	postinc1,c
 31524  0119E8  0E41               	movlw	65
 31525  0119EA  6EE6               	movwf	postinc1,c
 31526                           
 31527                           ;stkvar	_u @ sp[(-60)+12]
 31528  0119EC  0ED0               	movlw	-48
 31529  0119EE  006F FF8F FFE6     	movff	plusw1,postinc1
 31530  0119F4  006F FF8F FFE6     	movff	plusw1,postinc1
 31531  0119FA  006F FF8F FFE6     	movff	plusw1,postinc1
 31532  011A00  006F FF8F FFE6     	movff	plusw1,postinc1
 31533  011A06  EC67  F0B8         	call	___flmul	;wreg free
 31534  011A0A  0060  F0AB  FFE6   	movff	btemp,postinc1
 31535  011A10  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 31536  011A16  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 31537  011A1C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 31538                           
 31539                           ;stkvar	_g @ sp[(-60)+16]
 31540  011A22  0ED4               	movlw	-44
 31541  011A24  006F FF8F FFE6     	movff	plusw1,postinc1
 31542  011A2A  006F FF8F FFE6     	movff	plusw1,postinc1
 31543  011A30  006F FF8F FFE6     	movff	plusw1,postinc1
 31544  011A36  006F FF8F FFE6     	movff	plusw1,postinc1
 31545  011A3C  ECE9  F0F6         	call	___flge	;wreg free
 31546  011A40  A02A               	btfss	btemp& (0+255),0,c
 31547  011A42  D032               	goto	l15885
 31548  011A44  D793               	goto	l15875
 31549  011A46                     l15881:
 31550                           
 31551                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 31552  011A46  0E00               	movlw	0
 31553  011A48  6EE6               	movwf	postinc1,c
 31554  011A4A  0E00               	movlw	0
 31555  011A4C  6EE6               	movwf	postinc1,c
 31556  011A4E  0E20               	movlw	32
 31557  011A50  6EE6               	movwf	postinc1,c
 31558  011A52  0E41               	movlw	65
 31559  011A54  6EE6               	movwf	postinc1,c
 31560                           
 31561                           ;stkvar	_u @ sp[(-60)+12]
 31562  011A56  0ED0               	movlw	-48
 31563  011A58  006F FF8F FFE6     	movff	plusw1,postinc1
 31564  011A5E  006F FF8F FFE6     	movff	plusw1,postinc1
 31565  011A64  006F FF8F FFE6     	movff	plusw1,postinc1
 31566  011A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 31567  011A70  ECB8  F0C3         	call	___fldiv	;wreg free
 31568                           
 31569                           ;stkvar	_u @ sp[(-56)+12]
 31570  011A74  0ED4               	movlw	-44
 31571  011A76  0060  F0AB  FFE3   	movff	btemp,plusw1
 31572  011A7C  0ED5               	movlw	-43
 31573  011A7E  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31574  011A84  0ED6               	movlw	-42
 31575  011A86  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31576  011A8C  0ED7               	movlw	-41
 31577  011A8E  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31578                           
 31579                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 31580                           ;stkvar	_e @ sp[(-56)+34]
 31581  011A94  50E1               	movf	fsr1l,w,c
 31582  011A96  0FEA               	addlw	-22
 31583  011A98  6ED9               	movwf	fsr2l,c
 31584  011A9A  50E2               	movf	fsr1h,w,c
 31585  011A9C  6EDA               	movwf	fsr2h,c
 31586  011A9E  0EFF               	movlw	255
 31587  011AA0  22DA               	addwfc	fsr2h,f,c
 31588  011AA2  06DE               	decf	postinc2,f,c
 31589  011AA4  0E00               	movlw	0
 31590  011AA6  5ADD               	subwfb	postdec2,f,c
 31591  011AA8                     l15885:
 31592                           
 31593                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 31594                           ;stkvar	_u @ sp[(-56)+12]
 31595  011AA8  0ED4               	movlw	-44
 31596  011AAA  006F FF8F FFE6     	movff	plusw1,postinc1
 31597  011AB0  006F FF8F FFE6     	movff	plusw1,postinc1
 31598  011AB6  006F FF8F FFE6     	movff	plusw1,postinc1
 31599  011ABC  006F FF8F FFE6     	movff	plusw1,postinc1
 31600                           
 31601                           ;stkvar	_g @ sp[(-60)+16]
 31602  011AC2  0ED4               	movlw	-44
 31603  011AC4  006F FF8F FFE6     	movff	plusw1,postinc1
 31604  011ACA  006F FF8F FFE6     	movff	plusw1,postinc1
 31605  011AD0  006F FF8F FFE6     	movff	plusw1,postinc1
 31606  011AD6  006F FF8F FFE6     	movff	plusw1,postinc1
 31607  011ADC  ECE9  F0F6         	call	___flge	;wreg free
 31608  011AE0  A02A               	btfss	btemp& (0+255),0,c
 31609  011AE2  D7B1               	goto	l15881
 31610  011AE4                     u15030:
 31611                           
 31612                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 31613                           ;stkvar	_c @ sp[(-56)+-7]
 31614  011AE4  0EC1               	movlw	-63
 31615  011AE6  50E3               	movf	plusw1,w,c
 31616  011AE8  6EE6               	movwf	postinc1,c
 31617  011AEA  0E00               	movlw	0
 31618  011AEC  6EE6               	movwf	postinc1,c
 31619  011AEE  EC42  F00B         	call	_tolower	;wreg free
 31620                           
 31621                           ;stkvar	_mode @ sp[(-56)+54]
 31622  011AF2  0EFE               	movlw	-2
 31623  011AF4  0060  F0AB  FFE3   	movff	btemp,plusw1
 31624                           
 31625                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 31626                           ;stkvar	_mode @ sp[(-56)+54]
 31627                           ;stkvar	_nmode @ sp[(-56)+55]
 31628  011AFA  0EFE               	movlw	-2
 31629  011AFC  006F FF8C  F02A    	movff	plusw1,btemp
 31630  011B02  0EFF               	movlw	-1
 31631  011B04  0060  F0AB  FFE3   	movff	btemp,plusw1
 31632                           
 31633                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 31634                           ;stkvar	_mode @ sp[(-56)+54]
 31635  011B0A  0EFE               	movlw	-2
 31636  011B0C  006F FF8C  F02A    	movff	plusw1,btemp
 31637  011B12  0E67               	movlw	103
 31638  011B14  182A               	xorwf	btemp^0,w,c
 31639  011B16  A4D8               	btfss	status,2,c
 31640  011B18  D025               	goto	l15903
 31641                           
 31642                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 31643  011B1A  504C               	movf	_prec^0,w,c
 31644  011B1C  104D               	iorwf	(_prec+1)^0,w,c
 31645  011B1E  A4D8               	btfss	status,2,c
 31646  011B20  D004               	goto	l15897
 31647                           
 31648                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 31649  011B22  0E00               	movlw	0
 31650  011B24  6E4D               	movwf	(_prec+1)^0,c
 31651  011B26  0E01               	movlw	1
 31652  011B28  6E4C               	movwf	_prec^0,c
 31653  011B2A                     l15897:
 31654                           
 31655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 31656  011B2A  BE4D               	btfsc	(_prec+1)^0,7,c
 31657  011B2C  D005               	goto	u15060
 31658  011B2E  504D               	movf	(_prec+1)^0,w,c
 31659  011B30  E110               	bnz	l15901
 31660  011B32  044C               	decf	_prec^0,w,c
 31661  011B34  B0D8               	btfsc	status,0,c
 31662  011B36  D00D               	goto	l15901
 31663  011B38                     u15060:
 31664  011B38  0E06               	movlw	6
 31665  011B3A  6E34               	movwf	(btemp+10)^0,c
 31666  011B3C  0E00               	movlw	0
 31667  011B3E  6E35               	movwf	(btemp+11)^0,c
 31668                           
 31669                           ;stkvar	_p @ sp[(-56)+40]
 31670  011B40  0EF0               	movlw	-16
 31671  011B42  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31672  011B48  0EF1               	movlw	-15
 31673  011B4A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31674  011B50  D00C               	goto	l15909
 31675  011B52                     l15901:
 31676                           
 31677                           ;stkvar	_p @ sp[(-56)+40]
 31678  011B52  0EF0               	movlw	-16
 31679  011B54  0060  F133  FFE3   	movff	_prec,plusw1
 31680  011B5A  0EF1               	movlw	-15
 31681  011B5C  0060  F137  FFE3   	movff	_prec+1,plusw1
 31682  011B62  D003               	goto	l15909
 31683  011B64                     l15903:
 31684                           
 31685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 31686  011B64  AE4D               	btfss	(_prec+1)^0,7,c
 31687  011B66  D7F5               	goto	l15901
 31688  011B68  D7E7               	goto	u15060
 31689  011B6A                     l15909:
 31690                           
 31691                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 31692                           ;stkvar	_mode @ sp[(-56)+54]
 31693  011B6A  0EFE               	movlw	-2
 31694  011B6C  006F FF8C  F02A    	movff	plusw1,btemp
 31695  011B72  0E67               	movlw	103
 31696  011B74  182A               	xorwf	btemp^0,w,c
 31697  011B76  A4D8               	btfss	status,2,c
 31698  011B78  D02F               	goto	l15919
 31699                           
 31700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 31701                           ;stkvar	_e @ sp[(-56)+34]
 31702  011B7A  0EEB               	movlw	-21
 31703  011B7C  AEE3               	btfss	plusw1,7,c
 31704  011B7E  D00E               	goto	u15090
 31705  011B80  0EEA               	movlw	-22
 31706  011B82  006F FF8C  F02A    	movff	plusw1,btemp
 31707  011B88  0EFC               	movlw	252
 31708  011B8A  5E2A               	subwf	btemp^0,f,c
 31709  011B8C  0EEB               	movlw	-21
 31710  011B8E  006F FF8C  F02A    	movff	plusw1,btemp
 31711  011B94  0EFF               	movlw	255
 31712  011B96  5A2A               	subwfb	btemp^0,f,c
 31713  011B98  A0D8               	btfss	status,0,c
 31714  011B9A  D018               	goto	l15917
 31715  011B9C                     u15090:
 31716                           
 31717                           ;stkvar	_e @ sp[(-56)+34]
 31718                           ;stkvar	_p @ sp[(-56)+40]
 31719  011B9C  0EF0               	movlw	-16
 31720  011B9E  50E3               	movf	plusw1,w,c
 31721  011BA0  0FFF               	addlw	255
 31722  011BA2  6E34               	movwf	(btemp+10)^0,c
 31723  011BA4  0EF1               	movlw	-15
 31724  011BA6  006F FF8C  F035    	movff	plusw1,btemp+11
 31725  011BAC  0EFF               	movlw	255
 31726  011BAE  2235               	addwfc	(btemp+11)^0,f,c
 31727  011BB0  0EEA               	movlw	-22
 31728  011BB2  50E3               	movf	plusw1,w,c
 31729  011BB4  5C34               	subwf	(btemp+10)^0,w,c
 31730  011BB6  5035               	movf	(btemp+11)^0,w,c
 31731  011BB8  0A80               	xorlw	128
 31732  011BBA  6E2A               	movwf	btemp^0,c
 31733  011BBC  0EEB               	movlw	-21
 31734  011BBE  50E3               	movf	plusw1,w,c
 31735  011BC0  0A80               	xorlw	128
 31736  011BC2  582A               	subwfb	btemp^0,w,c
 31737  011BC4  A0D8               	btfss	status,0,c
 31738  011BC6  D002               	goto	l15917
 31739                           
 31740                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 31741  011BC8  0E66               	movlw	102
 31742  011BCA  D001               	goto	L33
 31743  011BCC                     l15917:
 31744                           
 31745                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 31746  011BCC  0E65               	movlw	101
 31747  011BCE                     L33:
 31748  011BCE  6E35               	movwf	(btemp+11)^0,c
 31749                           
 31750                           ;stkvar	_nmode @ sp[(-56)+55]
 31751  011BD0  0EFF               	movlw	-1
 31752  011BD2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31753  011BD8                     l15919:
 31754                           
 31755                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 31756                           ;stkvar	_p @ sp[(-56)+40]
 31757                           ;stkvar	_m @ sp[(-56)+48]
 31758  011BD8  0EF0               	movlw	-16
 31759  011BDA  006F FF8C  F02A    	movff	plusw1,btemp
 31760  011BE0  0EF8               	movlw	-8
 31761  011BE2  0060  F0AB  FFE3   	movff	btemp,plusw1
 31762  011BE8  0EF1               	movlw	-15
 31763  011BEA  006F FF8C  F02A    	movff	plusw1,btemp
 31764  011BF0  0EF9               	movlw	-7
 31765  011BF2  0060  F0AB  FFE3   	movff	btemp,plusw1
 31766                           
 31767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 31768                           ;stkvar	_mode @ sp[(-56)+54]
 31769  011BF8  0EFE               	movlw	-2
 31770  011BFA  006F FF8C  F02A    	movff	plusw1,btemp
 31771  011C00  0E67               	movlw	103
 31772  011C02  182A               	xorwf	btemp^0,w,c
 31773  011C04  A4D8               	btfss	status,2,c
 31774  011C06  D00B               	goto	u15130
 31775                           
 31776                           ;stkvar	_nmode @ sp[(-56)+55]
 31777  011C08  0EFF               	movlw	-1
 31778  011C0A  006F FF8C  F02A    	movff	plusw1,btemp
 31779  011C10  0E66               	movlw	102
 31780  011C12  182A               	xorwf	btemp^0,w,c
 31781  011C14  A4D8               	btfss	status,2,c
 31782  011C16  D014               	goto	l2561
 31783                           
 31784                           ;stkvar	_e @ sp[(-56)+34]
 31785  011C18  0EEB               	movlw	-21
 31786  011C1A  AEE3               	btfss	plusw1,7,c
 31787  011C1C  D011               	goto	l2561
 31788  011C1E                     u15130:
 31789                           
 31790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 31791                           ;stkvar	_m @ sp[(-56)+48]
 31792  011C1E  0EF8               	movlw	-8
 31793  011C20  50E3               	movf	plusw1,w,c
 31794  011C22  0F01               	addlw	1
 31795  011C24  6E2A               	movwf	btemp^0,c
 31796  011C26  0EF8               	movlw	-8
 31797  011C28  0060  F0AB  FFE3   	movff	btemp,plusw1
 31798  011C2E  6A2A               	clrf	btemp^0,c
 31799  011C30  0EF9               	movlw	-7
 31800  011C32  50E3               	movf	plusw1,w,c
 31801  011C34  202A               	addwfc	btemp^0,w,c
 31802  011C36  6E2A               	movwf	btemp^0,c
 31803  011C38  0EF9               	movlw	-7
 31804  011C3A  0060  F0AB  FFE3   	movff	btemp,plusw1
 31805  011C40                     l2561:
 31806                           
 31807                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 31808                           ;stkvar	_nmode @ sp[(-56)+55]
 31809  011C40  0EFF               	movlw	-1
 31810  011C42  006F FF8C  F02A    	movff	plusw1,btemp
 31811  011C48  0E66               	movlw	102
 31812  011C4A  182A               	xorwf	btemp^0,w,c
 31813  011C4C  A4D8               	btfss	status,2,c
 31814  011C4E  D03B               	goto	l15939
 31815                           
 31816                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 31817                           ;stkvar	_e @ sp[(-56)+34]
 31818  011C50  0EEB               	movlw	-21
 31819  011C52  AEE3               	btfss	plusw1,7,c
 31820  011C54  D01C               	goto	l15935
 31821                           
 31822                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 31823  011C56  0E00               	movlw	0
 31824  011C58  6E32               	movwf	(btemp+8)^0,c
 31825  011C5A  0E00               	movlw	0
 31826  011C5C  6E33               	movwf	(btemp+9)^0,c
 31827  011C5E  0E80               	movlw	128
 31828  011C60  6E34               	movwf	(btemp+10)^0,c
 31829  011C62  0E3F               	movlw	63
 31830  011C64  6E35               	movwf	(btemp+11)^0,c
 31831                           
 31832                           ;stkvar	_u @ sp[(-56)+12]
 31833  011C66  0ED4               	movlw	-44
 31834  011C68  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31835  011C6E  0ED5               	movlw	-43
 31836  011C70  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31837  011C76  0ED6               	movlw	-42
 31838  011C78  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31839  011C7E  0ED7               	movlw	-41
 31840  011C80  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31841                           
 31842                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 31843                           ;stkvar	_e @ sp[(-56)+34]
 31844  011C86  0EEA               	movlw	-22
 31845  011C88  6AE3               	clrf	plusw1,c
 31846  011C8A  0EEB               	movlw	-21
 31847  011C8C  6AE3               	clrf	plusw1,c
 31848  011C8E                     l15935:
 31849                           
 31850                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 31851                           ;stkvar	_mode @ sp[(-56)+54]
 31852  011C8E  0EFE               	movlw	-2
 31853  011C90  006F FF8C  F02A    	movff	plusw1,btemp
 31854  011C96  0E67               	movlw	103
 31855  011C98  182A               	xorwf	btemp^0,w,c
 31856  011C9A  B4D8               	btfsc	status,2,c
 31857  011C9C  D014               	goto	l15939
 31858                           
 31859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 31860                           ;stkvar	_e @ sp[(-56)+34]
 31861                           ;stkvar	_m @ sp[(-56)+48]
 31862  011C9E  0EF8               	movlw	-8
 31863  011CA0  50E3               	movf	plusw1,w,c
 31864  011CA2  6E2A               	movwf	btemp^0,c
 31865  011CA4  0EEA               	movlw	-22
 31866  011CA6  50E3               	movf	plusw1,w,c
 31867  011CA8  262A               	addwf	btemp^0,f,c
 31868  011CAA  0EF8               	movlw	-8
 31869  011CAC  0060  F0AB  FFE3   	movff	btemp,plusw1
 31870  011CB2  0EF9               	movlw	-7
 31871  011CB4  50E3               	movf	plusw1,w,c
 31872  011CB6  6E2A               	movwf	btemp^0,c
 31873  011CB8  0EEB               	movlw	-21
 31874  011CBA  50E3               	movf	plusw1,w,c
 31875  011CBC  222A               	addwfc	btemp^0,f,c
 31876  011CBE  0EF9               	movlw	-7
 31877  011CC0  0060  F0AB  FFE3   	movff	btemp,plusw1
 31878  011CC6                     l15939:
 31879                           
 31880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 31881                           ;stkvar	_i @ sp[(-56)+36]
 31882  011CC6  0EEC               	movlw	-20
 31883  011CC8  6AE3               	clrf	plusw1,c
 31884  011CCA  0EED               	movlw	-19
 31885  011CCC  6AE3               	clrf	plusw1,c
 31886                           
 31887                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 31888                           ;stkvar	_g @ sp[(-56)+16]
 31889  011CCE  0ED8               	movlw	-40
 31890  011CD0  006F FF8C  F032    	movff	plusw1,btemp+8
 31891  011CD6  0ED9               	movlw	-39
 31892  011CD8  006F FF8C  F033    	movff	plusw1,btemp+9
 31893  011CDE  0EDA               	movlw	-38
 31894  011CE0  006F FF8C  F034    	movff	plusw1,btemp+10
 31895  011CE6  0EDB               	movlw	-37
 31896  011CE8  006F FF8C  F035    	movff	plusw1,btemp+11
 31897                           
 31898                           ;stkvar	_h @ sp[(-56)+24]
 31899  011CEE  0EE0               	movlw	-32
 31900  011CF0  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31901  011CF6  0EE1               	movlw	-31
 31902  011CF8  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31903  011CFE  0EE2               	movlw	-30
 31904  011D00  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31905  011D06  0EE3               	movlw	-29
 31906  011D08  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31907                           
 31908                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 31909                           ;stkvar	_u @ sp[(-56)+12]
 31910  011D0E  0ED4               	movlw	-44
 31911  011D10  006F FF8C  F032    	movff	plusw1,btemp+8
 31912  011D16  0ED5               	movlw	-43
 31913  011D18  006F FF8C  F033    	movff	plusw1,btemp+9
 31914  011D1E  0ED6               	movlw	-42
 31915  011D20  006F FF8C  F034    	movff	plusw1,btemp+10
 31916  011D26  0ED7               	movlw	-41
 31917  011D28  006F FF8C  F035    	movff	plusw1,btemp+11
 31918                           
 31919                           ;stkvar	_ou @ sp[(-56)+28]
 31920  011D2E  0EE4               	movlw	-28
 31921  011D30  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31922  011D36  0EE5               	movlw	-27
 31923  011D38  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31924  011D3E  0EE6               	movlw	-26
 31925  011D40  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31926  011D46  0EE7               	movlw	-25
 31927  011D48  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31928                           
 31929                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 31930  011D4E  D0D6               	goto	l15955
 31931  011D50                     l15945:
 31932                           
 31933                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 31934                           ;stkvar	_u @ sp[(-56)+12]
 31935  011D50  0ED4               	movlw	-44
 31936  011D52  006F FF8F FFE6     	movff	plusw1,postinc1
 31937  011D58  006F FF8F FFE6     	movff	plusw1,postinc1
 31938  011D5E  006F FF8F FFE6     	movff	plusw1,postinc1
 31939  011D64  006F FF8F FFE6     	movff	plusw1,postinc1
 31940                           
 31941                           ;stkvar	_h @ sp[(-60)+24]
 31942  011D6A  0EDC               	movlw	-36
 31943  011D6C  006F FF8F FFE6     	movff	plusw1,postinc1
 31944  011D72  006F FF8F FFE6     	movff	plusw1,postinc1
 31945  011D78  006F FF8F FFE6     	movff	plusw1,postinc1
 31946  011D7E  006F FF8F FFE6     	movff	plusw1,postinc1
 31947  011D84  ECB8  F0C3         	call	___fldiv	;wreg free
 31948  011D88  0060  F0AB  FFE6   	movff	btemp,postinc1
 31949  011D8E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 31950  011D94  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 31951  011D9A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 31952  011DA0  EC62  F0D3         	call	_floorf	;wreg free
 31953                           
 31954                           ;stkvar	_l @ sp[(-56)+20]
 31955  011DA4  0EDC               	movlw	-36
 31956  011DA6  0060  F0AB  FFE3   	movff	btemp,plusw1
 31957  011DAC  0EDD               	movlw	-35
 31958  011DAE  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31959  011DB4  0EDE               	movlw	-34
 31960  011DB6  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31961  011DBC  0EDF               	movlw	-33
 31962  011DBE  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31963                           
 31964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 31965                           ;stkvar	_l @ sp[(-56)+20]
 31966  011DC4  0EDC               	movlw	-36
 31967  011DC6  006F FF8F FFE6     	movff	plusw1,postinc1
 31968  011DCC  006F FF8F FFE6     	movff	plusw1,postinc1
 31969  011DD2  006F FF8F FFE6     	movff	plusw1,postinc1
 31970  011DD8  006F FF8F FFE6     	movff	plusw1,postinc1
 31971  011DDE  EC7D  F0F5         	call	___fltol	;wreg free
 31972  011DE2  0060  F0A8  F034   	movff	btemp,btemp+10
 31973  011DE8  0060  F0AC  F035   	movff	btemp+1,btemp+11
 31974                           
 31975                           ;stkvar	_d @ sp[(-56)+44]
 31976  011DEE  0EF4               	movlw	-12
 31977  011DF0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31978  011DF6  0EF5               	movlw	-11
 31979  011DF8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31980                           
 31981                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 31982                           ;stkvar	_u @ sp[(-56)+12]
 31983  011DFE  0ED4               	movlw	-44
 31984  011E00  006F FF8F FFE6     	movff	plusw1,postinc1
 31985  011E06  006F FF8F FFE6     	movff	plusw1,postinc1
 31986  011E0C  006F FF8F FFE6     	movff	plusw1,postinc1
 31987  011E12  006F FF8F FFE6     	movff	plusw1,postinc1
 31988                           
 31989                           ;stkvar	_l @ sp[(-60)+20]
 31990  011E18  0ED8               	movlw	-40
 31991  011E1A  006F FF8F FFE6     	movff	plusw1,postinc1
 31992  011E20  006F FF8F FFE6     	movff	plusw1,postinc1
 31993  011E26  006F FF8F FFE6     	movff	plusw1,postinc1
 31994  011E2C  006F FF8F FFE6     	movff	plusw1,postinc1
 31995  011E32  EC67  F0B8         	call	___flmul	;wreg free
 31996  011E36  0060  F0AB  FFE6   	movff	btemp,postinc1
 31997  011E3C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 31998  011E42  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 31999  011E48  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 32000                           
 32001                           ;stkvar	_h @ sp[(-60)+24]
 32002  011E4E  0EDC               	movlw	-36
 32003  011E50  006F FF8F FFE6     	movff	plusw1,postinc1
 32004  011E56  006F FF8F FFE6     	movff	plusw1,postinc1
 32005  011E5C  006F FF8F FFE6     	movff	plusw1,postinc1
 32006  011E62  006F FF8F FFE6     	movff	plusw1,postinc1
 32007  011E68  ECA3  F011         	call	___flsub	;wreg free
 32008                           
 32009                           ;stkvar	_h @ sp[(-56)+24]
 32010  011E6C  0EE0               	movlw	-32
 32011  011E6E  0060  F0AB  FFE3   	movff	btemp,plusw1
 32012  011E74  0EE1               	movlw	-31
 32013  011E76  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 32014  011E7C  0EE2               	movlw	-30
 32015  011E7E  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 32016  011E84  0EE3               	movlw	-29
 32017  011E86  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 32018                           
 32019                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 32020  011E8C  0E00               	movlw	0
 32021  011E8E  6EE6               	movwf	postinc1,c
 32022  011E90  0E00               	movlw	0
 32023  011E92  6EE6               	movwf	postinc1,c
 32024  011E94  0E20               	movlw	32
 32025  011E96  6EE6               	movwf	postinc1,c
 32026  011E98  0E41               	movlw	65
 32027  011E9A  6EE6               	movwf	postinc1,c
 32028                           
 32029                           ;stkvar	_u @ sp[(-60)+12]
 32030  011E9C  0ED0               	movlw	-48
 32031  011E9E  006F FF8F FFE6     	movff	plusw1,postinc1
 32032  011EA4  006F FF8F FFE6     	movff	plusw1,postinc1
 32033  011EAA  006F FF8F FFE6     	movff	plusw1,postinc1
 32034  011EB0  006F FF8F FFE6     	movff	plusw1,postinc1
 32035  011EB6  ECB8  F0C3         	call	___fldiv	;wreg free
 32036                           
 32037                           ;stkvar	_u @ sp[(-56)+12]
 32038  011EBA  0ED4               	movlw	-44
 32039  011EBC  0060  F0AB  FFE3   	movff	btemp,plusw1
 32040  011EC2  0ED5               	movlw	-43
 32041  011EC4  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 32042  011ECA  0ED6               	movlw	-42
 32043  011ECC  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 32044  011ED2  0ED7               	movlw	-41
 32045  011ED4  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 32046                           
 32047                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 32048                           ;stkvar	_i @ sp[(-56)+36]
 32049  011EDA  0EEC               	movlw	-20
 32050  011EDC  50E3               	movf	plusw1,w,c
 32051  011EDE  0F01               	addlw	1
 32052  011EE0  6E2A               	movwf	btemp^0,c
 32053  011EE2  0EEC               	movlw	-20
 32054  011EE4  0060  F0AB  FFE3   	movff	btemp,plusw1
 32055  011EEA  6A2A               	clrf	btemp^0,c
 32056  011EEC  0EED               	movlw	-19
 32057  011EEE  50E3               	movf	plusw1,w,c
 32058  011EF0  202A               	addwfc	btemp^0,w,c
 32059  011EF2  6E2A               	movwf	btemp^0,c
 32060  011EF4  0EED               	movlw	-19
 32061  011EF6  0060  F0AB  FFE3   	movff	btemp,plusw1
 32062  011EFC                     l15955:
 32063                           
 32064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 32065                           ;stkvar	_m @ sp[(-56)+48]
 32066                           ;stkvar	_i @ sp[(-56)+36]
 32067  011EFC  50E1               	movf	fsr1l,w,c
 32068  011EFE  0FEC               	addlw	-20
 32069  011F00  6ED9               	movwf	fsr2l,c
 32070  011F02  50E2               	movf	fsr1h,w,c
 32071  011F04  6EDA               	movwf	fsr2h,c
 32072  011F06  0EFF               	movlw	255
 32073  011F08  22DA               	addwfc	fsr2h,f,c
 32074  011F0A  0EF8               	movlw	-8
 32075  011F0C  50E3               	movf	plusw1,w,c
 32076  011F0E  5CDE               	subwf	postinc2,w,c
 32077  011F10  50DE               	movf	postinc2,w,c
 32078  011F12  0A80               	xorlw	128
 32079  011F14  6E2A               	movwf	btemp^0,c
 32080  011F16  0EF9               	movlw	-7
 32081  011F18  50E3               	movf	plusw1,w,c
 32082  011F1A  0A80               	xorlw	128
 32083  011F1C  582A               	subwfb	btemp^0,w,c
 32084  011F1E  A0D8               	btfss	status,0,c
 32085  011F20  D717               	goto	l15945
 32086                           
 32087                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 32088  011F22  0E00               	movlw	0
 32089  011F24  6EE6               	movwf	postinc1,c
 32090  011F26  0E00               	movlw	0
 32091  011F28  6EE6               	movwf	postinc1,c
 32092  011F2A  0EA0               	movlw	160
 32093  011F2C  6EE6               	movwf	postinc1,c
 32094  011F2E  0E40               	movlw	64
 32095  011F30  6EE6               	movwf	postinc1,c
 32096                           
 32097                           ;stkvar	_u @ sp[(-60)+12]
 32098  011F32  0ED0               	movlw	-48
 32099  011F34  006F FF8F FFE6     	movff	plusw1,postinc1
 32100  011F3A  006F FF8F FFE6     	movff	plusw1,postinc1
 32101  011F40  006F FF8F FFE6     	movff	plusw1,postinc1
 32102  011F46  006F FF8F FFE6     	movff	plusw1,postinc1
 32103  011F4C  EC67  F0B8         	call	___flmul	;wreg free
 32104                           
 32105                           ;stkvar	_l @ sp[(-56)+20]
 32106  011F50  0EDC               	movlw	-36
 32107  011F52  0060  F0AB  FFE3   	movff	btemp,plusw1
 32108  011F58  0EDD               	movlw	-35
 32109  011F5A  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 32110  011F60  0EDE               	movlw	-34
 32111  011F62  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 32112  011F68  0EDF               	movlw	-33
 32113  011F6A  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 32114                           
 32115                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 32116                           ;stkvar	_l @ sp[(-56)+20]
 32117  011F70  0EDC               	movlw	-36
 32118  011F72  006F FF8F FFE6     	movff	plusw1,postinc1
 32119  011F78  006F FF8F FFE6     	movff	plusw1,postinc1
 32120  011F7E  006F FF8F FFE6     	movff	plusw1,postinc1
 32121  011F84  006F FF8F FFE6     	movff	plusw1,postinc1
 32122                           
 32123                           ;stkvar	_h @ sp[(-60)+24]
 32124  011F8A  0EDC               	movlw	-36
 32125  011F8C  006F FF8F FFE6     	movff	plusw1,postinc1
 32126  011F92  006F FF8F FFE6     	movff	plusw1,postinc1
 32127  011F98  006F FF8F FFE6     	movff	plusw1,postinc1
 32128  011F9E  006F FF8F FFE6     	movff	plusw1,postinc1
 32129  011FA4  ECE9  F0F6         	call	___flge	;wreg free
 32130  011FA8  A02A               	btfss	btemp& (0+255),0,c
 32131  011FAA  D021               	goto	u15200
 32132                           
 32133                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 32134                           ;stkvar	_l @ sp[(-56)+20]
 32135                           
 32136                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 32137                           
 32138                           ;stkvar	_l @ sp[(-56)+20]
 32139                           
 32140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 32141  011FAC  0EDC               	movlw	-36
 32142  011FAE  006F FF8F FFE6     	movff	plusw1,postinc1
 32143  011FB4  006F FF8F FFE6     	movff	plusw1,postinc1
 32144  011FBA  006F FF8F FFE6     	movff	plusw1,postinc1
 32145  011FC0  006F FF8F FFE6     	movff	plusw1,postinc1
 32146                           
 32147                           ;stkvar	_h @ sp[(-60)+24]
 32148  011FC6  0EDC               	movlw	-36
 32149  011FC8  006F FF8F FFE6     	movff	plusw1,postinc1
 32150  011FCE  006F FF8F FFE6     	movff	plusw1,postinc1
 32151  011FD4  006F FF8F FFE6     	movff	plusw1,postinc1
 32152  011FDA  006F FF8F FFE6     	movff	plusw1,postinc1
 32153  011FE0  EC8B  F004         	call	___fleq	;wreg free
 32154  011FE4  A02A               	btfss	btemp& (0+255),0,c
 32155  011FE6  D01B               	goto	l15969
 32156                           
 32157                           ;stkvar	_d @ sp[(-56)+44]
 32158  011FE8  0EF4               	movlw	-12
 32159  011FEA  B0E3               	btfsc	plusw1,0,c
 32160  011FEC  D018               	goto	l15969
 32161  011FEE                     u15200:
 32162                           
 32163                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 32164  011FEE  0E00               	movlw	0
 32165  011FF0  6E32               	movwf	(btemp+8)^0,c
 32166  011FF2  0E00               	movlw	0
 32167  011FF4  6E33               	movwf	(btemp+9)^0,c
 32168  011FF6  0E00               	movlw	0
 32169  011FF8  6E34               	movwf	(btemp+10)^0,c
 32170  011FFA  0E00               	movlw	0
 32171  011FFC  6E35               	movwf	(btemp+11)^0,c
 32172                           
 32173                           ;stkvar	_l @ sp[(-56)+20]
 32174  011FFE  0EDC               	movlw	-36
 32175  012000  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32176  012006  0EDD               	movlw	-35
 32177  012008  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32178  01200E  0EDE               	movlw	-34
 32179  012010  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32180  012016  0EDF               	movlw	-33
 32181  012018  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32182  01201E                     l15969:
 32183                           
 32184                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 32185                           ;stkvar	_l @ sp[(-56)+20]
 32186  01201E  0EDC               	movlw	-36
 32187  012020  006F FF8F FFE6     	movff	plusw1,postinc1
 32188  012026  006F FF8F FFE6     	movff	plusw1,postinc1
 32189  01202C  006F FF8F FFE6     	movff	plusw1,postinc1
 32190  012032  006F FF8F FFE6     	movff	plusw1,postinc1
 32191                           
 32192                           ;stkvar	_g @ sp[(-60)+16]
 32193  012038  0ED4               	movlw	-44
 32194  01203A  006F FF8F FFE6     	movff	plusw1,postinc1
 32195  012040  006F FF8F FFE6     	movff	plusw1,postinc1
 32196  012046  006F FF8F FFE6     	movff	plusw1,postinc1
 32197  01204C  006F FF8F FFE6     	movff	plusw1,postinc1
 32198  012052  EC7C  F0BC         	call	___fladd	;wreg free
 32199                           
 32200                           ;stkvar	_h @ sp[(-56)+24]
 32201  012056  0EE0               	movlw	-32
 32202  012058  0060  F0AB  FFE3   	movff	btemp,plusw1
 32203  01205E  0EE1               	movlw	-31
 32204  012060  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 32205  012066  0EE2               	movlw	-30
 32206  012068  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 32207  01206E  0EE3               	movlw	-29
 32208  012070  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 32209                           
 32210                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 32211                           ;stkvar	_ou @ sp[(-56)+28]
 32212  012076  0EE4               	movlw	-28
 32213  012078  006F FF8C  F032    	movff	plusw1,btemp+8
 32214  01207E  0EE5               	movlw	-27
 32215  012080  006F FF8C  F033    	movff	plusw1,btemp+9
 32216  012086  0EE6               	movlw	-26
 32217  012088  006F FF8C  F034    	movff	plusw1,btemp+10
 32218  01208E  0EE7               	movlw	-25
 32219  012090  006F FF8C  F035    	movff	plusw1,btemp+11
 32220                           
 32221                           ;stkvar	_u @ sp[(-56)+12]
 32222  012096  0ED4               	movlw	-44
 32223  012098  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 32224  01209E  0ED5               	movlw	-43
 32225  0120A0  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 32226  0120A6  0ED6               	movlw	-42
 32227  0120A8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32228  0120AE  0ED7               	movlw	-41
 32229  0120B0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32230                           
 32231                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 32232                           ;stkvar	_nmode @ sp[(-56)+55]
 32233  0120B6  0EFF               	movlw	-1
 32234  0120B8  006F FF8C  F02A    	movff	plusw1,btemp
 32235  0120BE  0E65               	movlw	101
 32236  0120C0  182A               	xorwf	btemp^0,w,c
 32237  0120C2  B4D8               	btfsc	status,2,c
 32238  0120C4  D011               	goto	l15977
 32239                           
 32240                           ;stkvar	_e @ sp[(-56)+34]
 32241                           ;stkvar	_ne @ sp[(-56)+46]
 32242  0120C6  0EEA               	movlw	-22
 32243  0120C8  006F FF8C  F02A    	movff	plusw1,btemp
 32244  0120CE  0EF6               	movlw	-10
 32245  0120D0  0060  F0AB  FFE3   	movff	btemp,plusw1
 32246  0120D6  0EEB               	movlw	-21
 32247  0120D8  006F FF8C  F02A    	movff	plusw1,btemp
 32248  0120DE  0EF7               	movlw	-9
 32249  0120E0  0060  F0AB  FFE3   	movff	btemp,plusw1
 32250  0120E6  D004               	goto	l2576
 32251  0120E8                     l15977:
 32252                           
 32253                           ;stkvar	_ne @ sp[(-56)+46]
 32254  0120E8  0EF6               	movlw	-10
 32255  0120EA  6AE3               	clrf	plusw1,c
 32256  0120EC  0EF7               	movlw	-9
 32257  0120EE  6AE3               	clrf	plusw1,c
 32258  0120F0                     l2576:
 32259                           
 32260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 32261                           ;stkvar	_pp @ sp[(-56)+50]
 32262  0120F0  0EFA               	movlw	-6
 32263  0120F2  6AE3               	clrf	plusw1,c
 32264  0120F4  0EFB               	movlw	-5
 32265  0120F6  6AE3               	clrf	plusw1,c
 32266                           
 32267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 32268                           ;stkvar	_t @ sp[(-56)+52]
 32269  0120F8  0EFC               	movlw	-4
 32270  0120FA  6AE3               	clrf	plusw1,c
 32271  0120FC  0EFD               	movlw	-3
 32272  0120FE  6AE3               	clrf	plusw1,c
 32273                           
 32274                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 32275                           ;stkvar	_i @ sp[(-56)+36]
 32276  012100  0EEC               	movlw	-20
 32277  012102  6AE3               	clrf	plusw1,c
 32278  012104  0EED               	movlw	-19
 32279  012106  6AE3               	clrf	plusw1,c
 32280                           
 32281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 32282  012108  D1B7               	goto	l16029
 32283  01210A                     l15979:
 32284                           
 32285                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 32286                           ;stkvar	_u @ sp[(-56)+12]
 32287  01210A  0ED4               	movlw	-44
 32288  01210C  006F FF8F FFE6     	movff	plusw1,postinc1
 32289  012112  006F FF8F FFE6     	movff	plusw1,postinc1
 32290  012118  006F FF8F FFE6     	movff	plusw1,postinc1
 32291  01211E  006F FF8F FFE6     	movff	plusw1,postinc1
 32292                           
 32293                           ;stkvar	_h @ sp[(-60)+24]
 32294  012124  0EDC               	movlw	-36
 32295  012126  006F FF8F FFE6     	movff	plusw1,postinc1
 32296  01212C  006F FF8F FFE6     	movff	plusw1,postinc1
 32297  012132  006F FF8F FFE6     	movff	plusw1,postinc1
 32298  012138  006F FF8F FFE6     	movff	plusw1,postinc1
 32299  01213E  ECB8  F0C3         	call	___fldiv	;wreg free
 32300  012142  0060  F0AB  FFE6   	movff	btemp,postinc1
 32301  012148  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 32302  01214E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 32303  012154  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 32304  01215A  EC62  F0D3         	call	_floorf	;wreg free
 32305                           
 32306                           ;stkvar	_l @ sp[(-56)+20]
 32307  01215E  0EDC               	movlw	-36
 32308  012160  0060  F0AB  FFE3   	movff	btemp,plusw1
 32309  012166  0EDD               	movlw	-35
 32310  012168  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 32311  01216E  0EDE               	movlw	-34
 32312  012170  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 32313  012176  0EDF               	movlw	-33
 32314  012178  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 32315                           
 32316                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 32317                           ;stkvar	_l @ sp[(-56)+20]
 32318  01217E  0EDC               	movlw	-36
 32319  012180  006F FF8F FFE6     	movff	plusw1,postinc1
 32320  012186  006F FF8F FFE6     	movff	plusw1,postinc1
 32321  01218C  006F FF8F FFE6     	movff	plusw1,postinc1
 32322  012192  006F FF8F FFE6     	movff	plusw1,postinc1
 32323  012198  EC7D  F0F5         	call	___fltol	;wreg free
 32324  01219C  0060  F0A8  F034   	movff	btemp,btemp+10
 32325  0121A2  0060  F0AC  F035   	movff	btemp+1,btemp+11
 32326                           
 32327                           ;stkvar	_d @ sp[(-56)+44]
 32328  0121A8  0EF4               	movlw	-12
 32329  0121AA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32330  0121B0  0EF5               	movlw	-11
 32331  0121B2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32332                           
 32333                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 32334  0121B8  B84E               	btfsc	_flags^0,4,c
 32335  0121BA  D026               	goto	l15993
 32336                           
 32337                           ;stkvar	_d @ sp[(-56)+44]
 32338  0121BC  0EF4               	movlw	-12
 32339  0121BE  006F FF8C  F02A    	movff	plusw1,btemp
 32340  0121C4  0EF5               	movlw	-11
 32341  0121C6  50E3               	movf	plusw1,w,c
 32342  0121C8  102A               	iorwf	btemp^0,w,c
 32343  0121CA  A4D8               	btfss	status,2,c
 32344  0121CC  D01D               	goto	l15993
 32345                           
 32346                           ;stkvar	_mode @ sp[(-56)+54]
 32347  0121CE  0EFE               	movlw	-2
 32348  0121D0  006F FF8C  F02A    	movff	plusw1,btemp
 32349  0121D6  0E67               	movlw	103
 32350  0121D8  182A               	xorwf	btemp^0,w,c
 32351  0121DA  A4D8               	btfss	status,2,c
 32352  0121DC  D015               	goto	l15993
 32353                           
 32354                           ;stkvar	_ne @ sp[(-56)+46]
 32355  0121DE  0EF7               	movlw	-9
 32356  0121E0  AEE3               	btfss	plusw1,7,c
 32357  0121E2  D012               	goto	l15993
 32358                           
 32359                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 32360                           ;stkvar	_t @ sp[(-56)+52]
 32361  0121E4  0EFC               	movlw	-4
 32362  0121E6  50E3               	movf	plusw1,w,c
 32363  0121E8  0F01               	addlw	1
 32364  0121EA  6E2A               	movwf	btemp^0,c
 32365  0121EC  0EFC               	movlw	-4
 32366  0121EE  0060  F0AB  FFE3   	movff	btemp,plusw1
 32367  0121F4  6A2A               	clrf	btemp^0,c
 32368  0121F6  0EFD               	movlw	-3
 32369  0121F8  50E3               	movf	plusw1,w,c
 32370  0121FA  202A               	addwfc	btemp^0,w,c
 32371  0121FC  6E2A               	movwf	btemp^0,c
 32372  0121FE  0EFD               	movlw	-3
 32373  012200  0060  F0AB  FFE3   	movff	btemp,plusw1
 32374                           
 32375                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 32376  012206  D0AF               	goto	l16021
 32377  012208                     l15993:
 32378                           
 32379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 32380                           ;stkvar	_pp @ sp[(-56)+50]
 32381  012208  0EFA               	movlw	-6
 32382  01220A  006F FF8C  F02A    	movff	plusw1,btemp
 32383  012210  0EFB               	movlw	-5
 32384  012212  50E3               	movf	plusw1,w,c
 32385  012214  102A               	iorwf	btemp^0,w,c
 32386  012216  A4D8               	btfss	status,2,c
 32387  012218  D070               	goto	l16013
 32388                           
 32389                           ;stkvar	_ne @ sp[(-56)+46]
 32390  01221A  0EF7               	movlw	-9
 32391  01221C  AEE3               	btfss	plusw1,7,c
 32392  01221E  D06D               	goto	l16013
 32393                           
 32394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 32395                           ;stkvar	_n @ sp[(-56)+32]
 32396  012220  0EE8               	movlw	-24
 32397  012222  006F FF8C  F034    	movff	plusw1,btemp+10
 32398  012228  0EE9               	movlw	-23
 32399  01222A  006F FF8C  F035    	movff	plusw1,btemp+11
 32400  012230  0E54               	movlw	low _dbuf
 32401  012232  2434               	addwf	(btemp+10)^0,w,c
 32402  012234  6ED9               	movwf	fsr2l,c
 32403  012236  0E03               	movlw	high _dbuf
 32404  012238  2035               	addwfc	(btemp+11)^0,w,c
 32405  01223A  6EDA               	movwf	fsr2h,c
 32406  01223C  0E2E               	movlw	46
 32407  01223E  6EDF               	movwf	indf2,c
 32408                           
 32409                           ;stkvar	_n @ sp[(-56)+32]
 32410  012240  0EE8               	movlw	-24
 32411  012242  50E3               	movf	plusw1,w,c
 32412  012244  0F01               	addlw	1
 32413  012246  6E2A               	movwf	btemp^0,c
 32414  012248  0EE8               	movlw	-24
 32415  01224A  0060  F0AB  FFE3   	movff	btemp,plusw1
 32416  012250  6A2A               	clrf	btemp^0,c
 32417  012252  0EE9               	movlw	-23
 32418  012254  50E3               	movf	plusw1,w,c
 32419  012256  202A               	addwfc	btemp^0,w,c
 32420  012258  6E2A               	movwf	btemp^0,c
 32421  01225A  0EE9               	movlw	-23
 32422  01225C  0060  F0AB  FFE3   	movff	btemp,plusw1
 32423                           
 32424                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 32425                           ;stkvar	_w @ sp[(-56)+38]
 32426  012262  50E1               	movf	fsr1l,w,c
 32427  012264  0FEE               	addlw	-18
 32428  012266  6ED9               	movwf	fsr2l,c
 32429  012268  50E2               	movf	fsr1h,w,c
 32430  01226A  6EDA               	movwf	fsr2h,c
 32431  01226C  0EFF               	movlw	255
 32432  01226E  22DA               	addwfc	fsr2h,f,c
 32433  012270  06DE               	decf	postinc2,f,c
 32434  012272  0E00               	movlw	0
 32435  012274  5ADD               	subwfb	postdec2,f,c
 32436                           
 32437                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 32438  012276  0E01               	movlw	1
 32439  012278  6E34               	movwf	(btemp+10)^0,c
 32440  01227A  0E00               	movlw	0
 32441  01227C  6E35               	movwf	(btemp+11)^0,c
 32442                           
 32443                           ;stkvar	_pp @ sp[(-56)+50]
 32444  01227E  0EFA               	movlw	-6
 32445  012280  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32446  012286  0EFB               	movlw	-5
 32447  012288  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32448  01228E  D035               	goto	l16013
 32449  012290                     l16005:
 32450                           
 32451                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 32452                           ;stkvar	_n @ sp[(-56)+32]
 32453  012290  0EE8               	movlw	-24
 32454  012292  006F FF8C  F034    	movff	plusw1,btemp+10
 32455  012298  0EE9               	movlw	-23
 32456  01229A  006F FF8C  F035    	movff	plusw1,btemp+11
 32457  0122A0  0E54               	movlw	low _dbuf
 32458  0122A2  2434               	addwf	(btemp+10)^0,w,c
 32459  0122A4  6ED9               	movwf	fsr2l,c
 32460  0122A6  0E03               	movlw	high _dbuf
 32461  0122A8  2035               	addwfc	(btemp+11)^0,w,c
 32462  0122AA  6EDA               	movwf	fsr2h,c
 32463  0122AC  0E30               	movlw	48
 32464  0122AE  6EDF               	movwf	indf2,c
 32465                           
 32466                           ;stkvar	_n @ sp[(-56)+32]
 32467  0122B0  0EE8               	movlw	-24
 32468  0122B2  50E3               	movf	plusw1,w,c
 32469  0122B4  0F01               	addlw	1
 32470  0122B6  6E2A               	movwf	btemp^0,c
 32471  0122B8  0EE8               	movlw	-24
 32472  0122BA  0060  F0AB  FFE3   	movff	btemp,plusw1
 32473  0122C0  6A2A               	clrf	btemp^0,c
 32474  0122C2  0EE9               	movlw	-23
 32475  0122C4  50E3               	movf	plusw1,w,c
 32476  0122C6  202A               	addwfc	btemp^0,w,c
 32477  0122C8  6E2A               	movwf	btemp^0,c
 32478  0122CA  0EE9               	movlw	-23
 32479  0122CC  0060  F0AB  FFE3   	movff	btemp,plusw1
 32480                           
 32481                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 32482                           ;stkvar	_w @ sp[(-56)+38]
 32483  0122D2  50E1               	movf	fsr1l,w,c
 32484  0122D4  0FEE               	addlw	-18
 32485  0122D6  6ED9               	movwf	fsr2l,c
 32486  0122D8  50E2               	movf	fsr1h,w,c
 32487  0122DA  6EDA               	movwf	fsr2h,c
 32488  0122DC  0EFF               	movlw	255
 32489  0122DE  22DA               	addwfc	fsr2h,f,c
 32490  0122E0  06DE               	decf	postinc2,f,c
 32491  0122E2  0E00               	movlw	0
 32492  0122E4  5ADD               	subwfb	postdec2,f,c
 32493                           
 32494                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 32495                           ;stkvar	_t @ sp[(-56)+52]
 32496  0122E6  50E1               	movf	fsr1l,w,c
 32497  0122E8  0FFC               	addlw	-4
 32498  0122EA  6ED9               	movwf	fsr2l,c
 32499  0122EC  50E2               	movf	fsr1h,w,c
 32500  0122EE  6EDA               	movwf	fsr2h,c
 32501  0122F0  0EFF               	movlw	255
 32502  0122F2  22DA               	addwfc	fsr2h,f,c
 32503  0122F4  06DE               	decf	postinc2,f,c
 32504  0122F6  0E00               	movlw	0
 32505  0122F8  5ADD               	subwfb	postdec2,f,c
 32506  0122FA                     l16013:
 32507                           
 32508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 32509                           ;stkvar	_t @ sp[(-56)+52]
 32510  0122FA  0EFC               	movlw	-4
 32511  0122FC  006F FF8C  F02A    	movff	plusw1,btemp
 32512  012302  0EFD               	movlw	-3
 32513  012304  50E3               	movf	plusw1,w,c
 32514  012306  102A               	iorwf	btemp^0,w,c
 32515  012308  A4D8               	btfss	status,2,c
 32516  01230A  D7C2               	goto	l16005
 32517                           
 32518                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 32519                           ;stkvar	_n @ sp[(-56)+32]
 32520  01230C  0EE8               	movlw	-24
 32521  01230E  006F FF8C  F034    	movff	plusw1,btemp+10
 32522  012314  0EE9               	movlw	-23
 32523  012316  006F FF8C  F035    	movff	plusw1,btemp+11
 32524  01231C  0E54               	movlw	low _dbuf
 32525  01231E  2434               	addwf	(btemp+10)^0,w,c
 32526  012320  6ED9               	movwf	fsr2l,c
 32527  012322  0E03               	movlw	high _dbuf
 32528  012324  2035               	addwfc	(btemp+11)^0,w,c
 32529  012326  6EDA               	movwf	fsr2h,c
 32530                           
 32531                           ;stkvar	_d @ sp[(-56)+44]
 32532  012328  0EF4               	movlw	-12
 32533  01232A  50E3               	movf	plusw1,w,c
 32534  01232C  0F30               	addlw	48
 32535  01232E  6EDF               	movwf	indf2,c
 32536                           
 32537                           ;stkvar	_n @ sp[(-56)+32]
 32538  012330  0EE8               	movlw	-24
 32539  012332  50E3               	movf	plusw1,w,c
 32540  012334  0F01               	addlw	1
 32541  012336  6E2A               	movwf	btemp^0,c
 32542  012338  0EE8               	movlw	-24
 32543  01233A  0060  F0AB  FFE3   	movff	btemp,plusw1
 32544  012340  6A2A               	clrf	btemp^0,c
 32545  012342  0EE9               	movlw	-23
 32546  012344  50E3               	movf	plusw1,w,c
 32547  012346  202A               	addwfc	btemp^0,w,c
 32548  012348  6E2A               	movwf	btemp^0,c
 32549  01234A  0EE9               	movlw	-23
 32550  01234C  0060  F0AB  FFE3   	movff	btemp,plusw1
 32551                           
 32552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 32553                           ;stkvar	_w @ sp[(-56)+38]
 32554  012352  50E1               	movf	fsr1l,w,c
 32555  012354  0FEE               	addlw	-18
 32556  012356  6ED9               	movwf	fsr2l,c
 32557  012358  50E2               	movf	fsr1h,w,c
 32558  01235A  6EDA               	movwf	fsr2h,c
 32559  01235C  0EFF               	movlw	255
 32560  01235E  22DA               	addwfc	fsr2h,f,c
 32561  012360  06DE               	decf	postinc2,f,c
 32562  012362  0E00               	movlw	0
 32563  012364  5ADD               	subwfb	postdec2,f,c
 32564  012366                     l16021:
 32565                           
 32566                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 32567                           ;stkvar	_u @ sp[(-56)+12]
 32568  012366  0ED4               	movlw	-44
 32569  012368  006F FF8F FFE6     	movff	plusw1,postinc1
 32570  01236E  006F FF8F FFE6     	movff	plusw1,postinc1
 32571  012374  006F FF8F FFE6     	movff	plusw1,postinc1
 32572  01237A  006F FF8F FFE6     	movff	plusw1,postinc1
 32573                           
 32574                           ;stkvar	_l @ sp[(-60)+20]
 32575  012380  0ED8               	movlw	-40
 32576  012382  006F FF8F FFE6     	movff	plusw1,postinc1
 32577  012388  006F FF8F FFE6     	movff	plusw1,postinc1
 32578  01238E  006F FF8F FFE6     	movff	plusw1,postinc1
 32579  012394  006F FF8F FFE6     	movff	plusw1,postinc1
 32580  01239A  EC67  F0B8         	call	___flmul	;wreg free
 32581  01239E  0060  F0AB  FFE6   	movff	btemp,postinc1
 32582  0123A4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 32583  0123AA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 32584  0123B0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 32585                           
 32586                           ;stkvar	_h @ sp[(-60)+24]
 32587  0123B6  0EDC               	movlw	-36
 32588  0123B8  006F FF8F FFE6     	movff	plusw1,postinc1
 32589  0123BE  006F FF8F FFE6     	movff	plusw1,postinc1
 32590  0123C4  006F FF8F FFE6     	movff	plusw1,postinc1
 32591  0123CA  006F FF8F FFE6     	movff	plusw1,postinc1
 32592  0123D0  ECA3  F011         	call	___flsub	;wreg free
 32593                           
 32594                           ;stkvar	_h @ sp[(-56)+24]
 32595  0123D4  0EE0               	movlw	-32
 32596  0123D6  0060  F0AB  FFE3   	movff	btemp,plusw1
 32597  0123DC  0EE1               	movlw	-31
 32598  0123DE  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 32599  0123E4  0EE2               	movlw	-30
 32600  0123E6  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 32601  0123EC  0EE3               	movlw	-29
 32602  0123EE  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 32603                           
 32604                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 32605  0123F4  0E00               	movlw	0
 32606  0123F6  6EE6               	movwf	postinc1,c
 32607  0123F8  0E00               	movlw	0
 32608  0123FA  6EE6               	movwf	postinc1,c
 32609  0123FC  0E20               	movlw	32
 32610  0123FE  6EE6               	movwf	postinc1,c
 32611  012400  0E41               	movlw	65
 32612  012402  6EE6               	movwf	postinc1,c
 32613                           
 32614                           ;stkvar	_u @ sp[(-60)+12]
 32615  012404  0ED0               	movlw	-48
 32616  012406  006F FF8F FFE6     	movff	plusw1,postinc1
 32617  01240C  006F FF8F FFE6     	movff	plusw1,postinc1
 32618  012412  006F FF8F FFE6     	movff	plusw1,postinc1
 32619  012418  006F FF8F FFE6     	movff	plusw1,postinc1
 32620  01241E  ECB8  F0C3         	call	___fldiv	;wreg free
 32621                           
 32622                           ;stkvar	_u @ sp[(-56)+12]
 32623  012422  0ED4               	movlw	-44
 32624  012424  0060  F0AB  FFE3   	movff	btemp,plusw1
 32625  01242A  0ED5               	movlw	-43
 32626  01242C  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 32627  012432  0ED6               	movlw	-42
 32628  012434  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 32629  01243A  0ED7               	movlw	-41
 32630  01243C  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 32631                           
 32632                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 32633                           ;stkvar	_ne @ sp[(-56)+46]
 32634  012442  50E1               	movf	fsr1l,w,c
 32635  012444  0FF6               	addlw	-10
 32636  012446  6ED9               	movwf	fsr2l,c
 32637  012448  50E2               	movf	fsr1h,w,c
 32638  01244A  6EDA               	movwf	fsr2h,c
 32639  01244C  0EFF               	movlw	255
 32640  01244E  22DA               	addwfc	fsr2h,f,c
 32641  012450  06DE               	decf	postinc2,f,c
 32642  012452  0E00               	movlw	0
 32643  012454  5ADD               	subwfb	postdec2,f,c
 32644                           
 32645                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 32646                           ;stkvar	_i @ sp[(-56)+36]
 32647  012456  0EEC               	movlw	-20
 32648  012458  50E3               	movf	plusw1,w,c
 32649  01245A  0F01               	addlw	1
 32650  01245C  6E2A               	movwf	btemp^0,c
 32651  01245E  0EEC               	movlw	-20
 32652  012460  0060  F0AB  FFE3   	movff	btemp,plusw1
 32653  012466  6A2A               	clrf	btemp^0,c
 32654  012468  0EED               	movlw	-19
 32655  01246A  50E3               	movf	plusw1,w,c
 32656  01246C  202A               	addwfc	btemp^0,w,c
 32657  01246E  6E2A               	movwf	btemp^0,c
 32658  012470  0EED               	movlw	-19
 32659  012472  0060  F0AB  FFE3   	movff	btemp,plusw1
 32660  012478                     l16029:
 32661                           
 32662                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 32663                           ;stkvar	_m @ sp[(-56)+48]
 32664                           ;stkvar	_i @ sp[(-56)+36]
 32665  012478  50E1               	movf	fsr1l,w,c
 32666  01247A  0FEC               	addlw	-20
 32667  01247C  6ED9               	movwf	fsr2l,c
 32668  01247E  50E2               	movf	fsr1h,w,c
 32669  012480  6EDA               	movwf	fsr2h,c
 32670  012482  0EFF               	movlw	255
 32671  012484  22DA               	addwfc	fsr2h,f,c
 32672  012486  0EF8               	movlw	-8
 32673  012488  50E3               	movf	plusw1,w,c
 32674  01248A  5CDE               	subwf	postinc2,w,c
 32675  01248C  50DE               	movf	postinc2,w,c
 32676  01248E  0A80               	xorlw	128
 32677  012490  6E2A               	movwf	btemp^0,c
 32678  012492  0EF9               	movlw	-7
 32679  012494  50E3               	movf	plusw1,w,c
 32680  012496  0A80               	xorlw	128
 32681  012498  582A               	subwfb	btemp^0,w,c
 32682  01249A  B0D8               	btfsc	status,0,c
 32683  01249C  D00E               	goto	u15300
 32684                           
 32685                           ;stkvar	_n @ sp[(-56)+32]
 32686  01249E  0EE9               	movlw	-23
 32687  0124A0  BEE3               	btfsc	plusw1,7,c
 32688  0124A2  D633               	goto	l15979
 32689  0124A4  0EE9               	movlw	-23
 32690  0124A6  50E3               	movf	plusw1,w,c
 32691  0124A8  E108               	bnz	u15300
 32692  0124AA  0EE8               	movlw	-24
 32693  0124AC  006F FF8C  F02A    	movff	plusw1,btemp
 32694  0124B2  0E4B               	movlw	75
 32695  0124B4  5E2A               	subwf	btemp^0,f,c
 32696  0124B6  A0D8               	btfss	status,0,c
 32697  0124B8  D628               	goto	l15979
 32698  0124BA                     u15300:
 32699                           
 32700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 32701                           ;stkvar	_pp @ sp[(-56)+50]
 32702  0124BA  0EFA               	movlw	-6
 32703  0124BC  006F FF8C  F02A    	movff	plusw1,btemp
 32704  0124C2  0EFB               	movlw	-5
 32705  0124C4  50E3               	movf	plusw1,w,c
 32706  0124C6  102A               	iorwf	btemp^0,w,c
 32707  0124C8  B4D8               	btfsc	status,2,c
 32708  0124CA  A84E               	btfss	_flags^0,4,c
 32709  0124CC  D021               	goto	l16041
 32710                           
 32711                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 32712                           ;stkvar	_n @ sp[(-56)+32]
 32713  0124CE  0EE8               	movlw	-24
 32714  0124D0  006F FF8C  F034    	movff	plusw1,btemp+10
 32715  0124D6  0EE9               	movlw	-23
 32716  0124D8  006F FF8C  F035    	movff	plusw1,btemp+11
 32717  0124DE  0E54               	movlw	low _dbuf
 32718  0124E0  2434               	addwf	(btemp+10)^0,w,c
 32719  0124E2  6ED9               	movwf	fsr2l,c
 32720  0124E4  0E03               	movlw	high _dbuf
 32721  0124E6  2035               	addwfc	(btemp+11)^0,w,c
 32722  0124E8  6EDA               	movwf	fsr2h,c
 32723  0124EA  0E2E               	movlw	46
 32724  0124EC  6EDF               	movwf	indf2,c
 32725                           
 32726                           ;stkvar	_n @ sp[(-56)+32]
 32727  0124EE  0EE8               	movlw	-24
 32728  0124F0  50E3               	movf	plusw1,w,c
 32729  0124F2  0F01               	addlw	1
 32730  0124F4  6E2A               	movwf	btemp^0,c
 32731  0124F6  0EE8               	movlw	-24
 32732  0124F8  0060  F0AB  FFE3   	movff	btemp,plusw1
 32733  0124FE  6A2A               	clrf	btemp^0,c
 32734  012500  0EE9               	movlw	-23
 32735  012502  50E3               	movf	plusw1,w,c
 32736  012504  202A               	addwfc	btemp^0,w,c
 32737  012506  6E2A               	movwf	btemp^0,c
 32738  012508  0EE9               	movlw	-23
 32739  01250A  0060  F0AB  FFE3   	movff	btemp,plusw1
 32740  012510                     l16041:
 32741                           
 32742                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 32743                           ;stkvar	_n @ sp[(-56)+32]
 32744  012510  0EE8               	movlw	-24
 32745  012512  006F FF8C  F034    	movff	plusw1,btemp+10
 32746  012518  0EE9               	movlw	-23
 32747  01251A  006F FF8C  F035    	movff	plusw1,btemp+11
 32748  012520  0E54               	movlw	low _dbuf
 32749  012522  2434               	addwf	(btemp+10)^0,w,c
 32750  012524  6ED9               	movwf	fsr2l,c
 32751  012526  0E03               	movlw	high _dbuf
 32752  012528  2035               	addwfc	(btemp+11)^0,w,c
 32753  01252A  6EDA               	movwf	fsr2h,c
 32754  01252C  0E00               	movlw	0
 32755  01252E  6EDF               	movwf	indf2,c
 32756                           
 32757                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 32758                           ;stkvar	_nmode @ sp[(-56)+55]
 32759  012530  0EFF               	movlw	-1
 32760  012532  006F FF8C  F02A    	movff	plusw1,btemp
 32761  012538  0E65               	movlw	101
 32762  01253A  182A               	xorwf	btemp^0,w,c
 32763  01253C  A4D8               	btfss	status,2,c
 32764  01253E  EF01  F08C         	goto	l15845
 32765                           
 32766                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 32767  012542  0E4F               	movlw	79
 32768  012544  6E34               	movwf	(btemp+10)^0,c
 32769  012546  0E00               	movlw	0
 32770  012548  6E35               	movwf	(btemp+11)^0,c
 32771                           
 32772                           ;stkvar	_i @ sp[(-56)+36]
 32773  01254A  0EEC               	movlw	-20
 32774  01254C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32775  012552  0EED               	movlw	-19
 32776  012554  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32777                           
 32778                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 32779                           ;stkvar	_i @ sp[(-56)+36]
 32780  01255A  0EEC               	movlw	-20
 32781  01255C  006F FF8C  F034    	movff	plusw1,btemp+10
 32782  012562  0EED               	movlw	-19
 32783  012564  006F FF8C  F035    	movff	plusw1,btemp+11
 32784  01256A  0E54               	movlw	low _dbuf
 32785  01256C  2434               	addwf	(btemp+10)^0,w,c
 32786  01256E  6ED9               	movwf	fsr2l,c
 32787  012570  0E03               	movlw	high _dbuf
 32788  012572  2035               	addwfc	(btemp+11)^0,w,c
 32789  012574  6EDA               	movwf	fsr2h,c
 32790  012576  0E00               	movlw	0
 32791  012578  6EDF               	movwf	indf2,c
 32792                           
 32793                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 32794                           ;stkvar	_sign @ sp[(-56)+42]
 32795  01257A  0EF2               	movlw	-14
 32796  01257C  6AE3               	clrf	plusw1,c
 32797  01257E  0EF3               	movlw	-13
 32798  012580  6AE3               	clrf	plusw1,c
 32799                           
 32800                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 32801                           ;stkvar	_e @ sp[(-56)+34]
 32802  012582  0EEB               	movlw	-21
 32803  012584  AEE3               	btfss	plusw1,7,c
 32804  012586  D012               	goto	l16055
 32805                           
 32806                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 32807  012588  0E01               	movlw	1
 32808  01258A  6E34               	movwf	(btemp+10)^0,c
 32809  01258C  0E00               	movlw	0
 32810  01258E  6E35               	movwf	(btemp+11)^0,c
 32811                           
 32812                           ;stkvar	_sign @ sp[(-56)+42]
 32813  012590  0EF2               	movlw	-14
 32814  012592  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32815  012598  0EF3               	movlw	-13
 32816  01259A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32817                           
 32818                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 32819                           ;stkvar	_e @ sp[(-56)+34]
 32820                           ;stkvar	_e @ sp[(-56)+34]
 32821  0125A0  0EEA               	movlw	-22
 32822  0125A2  6CE3               	negf	plusw1,c
 32823  0125A4  0EEB               	movlw	-21
 32824  0125A6  1EE3               	comf	plusw1,f,c
 32825  0125A8  B0D8               	btfsc	status,0,c
 32826  0125AA  2AE3               	incf	plusw1,f,c
 32827  0125AC                     l16055:
 32828                           
 32829                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 32830  0125AC  0E02               	movlw	2
 32831  0125AE  6E34               	movwf	(btemp+10)^0,c
 32832  0125B0  0E00               	movlw	0
 32833  0125B2  6E35               	movwf	(btemp+11)^0,c
 32834                           
 32835                           ;stkvar	_p @ sp[(-56)+40]
 32836  0125B4  0EF0               	movlw	-16
 32837  0125B6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32838  0125BC  0EF1               	movlw	-15
 32839  0125BE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32840                           
 32841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 32842  0125C4  D051               	goto	l16067
 32843  0125C6                     l16057:
 32844                           
 32845                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 32846                           ;stkvar	_i @ sp[(-56)+36]
 32847  0125C6  50E1               	movf	fsr1l,w,c
 32848  0125C8  0FEC               	addlw	-20
 32849  0125CA  6ED9               	movwf	fsr2l,c
 32850  0125CC  50E2               	movf	fsr1h,w,c
 32851  0125CE  6EDA               	movwf	fsr2h,c
 32852  0125D0  0EFF               	movlw	255
 32853  0125D2  22DA               	addwfc	fsr2h,f,c
 32854  0125D4  06DE               	decf	postinc2,f,c
 32855  0125D6  0E00               	movlw	0
 32856  0125D8  5ADD               	subwfb	postdec2,f,c
 32857                           
 32858                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 32859                           ;stkvar	_i @ sp[(-56)+36]
 32860  0125DA  0EEC               	movlw	-20
 32861  0125DC  006F FF8C  F034    	movff	plusw1,btemp+10
 32862  0125E2  0EED               	movlw	-19
 32863  0125E4  006F FF8C  F035    	movff	plusw1,btemp+11
 32864  0125EA  0E54               	movlw	low _dbuf
 32865  0125EC  2434               	addwf	(btemp+10)^0,w,c
 32866  0125EE  6ED9               	movwf	fsr2l,c
 32867  0125F0  0E03               	movlw	high _dbuf
 32868  0125F2  2035               	addwfc	(btemp+11)^0,w,c
 32869  0125F4  6EDA               	movwf	fsr2h,c
 32870  0125F6  0E0A               	movlw	10
 32871  0125F8  6EE6               	movwf	postinc1,c
 32872  0125FA  0E00               	movlw	0
 32873  0125FC  6EE6               	movwf	postinc1,c
 32874                           
 32875                           ;stkvar	_e @ sp[(-58)+34]
 32876  0125FE  0EE8               	movlw	-24
 32877  012600  006F FF8F FFE6     	movff	plusw1,postinc1
 32878  012606  006F FF8F FFE6     	movff	plusw1,postinc1
 32879  01260C  EC83  F0FE         	call	___awmod	;wreg free
 32880  012610  502A               	movf	btemp^0,w,c
 32881  012612  0F30               	addlw	48
 32882  012614  6EDF               	movwf	indf2,c
 32883                           
 32884                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 32885  012616  0E0A               	movlw	10
 32886  012618  6EE6               	movwf	postinc1,c
 32887  01261A  0E00               	movlw	0
 32888  01261C  6EE6               	movwf	postinc1,c
 32889                           
 32890                           ;stkvar	_e @ sp[(-58)+34]
 32891  01261E  0EE8               	movlw	-24
 32892  012620  006F FF8F FFE6     	movff	plusw1,postinc1
 32893  012626  006F FF8F FFE6     	movff	plusw1,postinc1
 32894  01262C  EC54  F0FA         	call	___awdiv	;wreg free
 32895                           
 32896                           ;stkvar	_e @ sp[(-56)+34]
 32897  012630  0EEA               	movlw	-22
 32898  012632  0060  F0AB  FFE3   	movff	btemp,plusw1
 32899  012638  0EEB               	movlw	-21
 32900  01263A  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 32901                           
 32902                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 32903                           ;stkvar	_p @ sp[(-56)+40]
 32904  012640  50E1               	movf	fsr1l,w,c
 32905  012642  0FF0               	addlw	-16
 32906  012644  6ED9               	movwf	fsr2l,c
 32907  012646  50E2               	movf	fsr1h,w,c
 32908  012648  6EDA               	movwf	fsr2h,c
 32909  01264A  0EFF               	movlw	255
 32910  01264C  22DA               	addwfc	fsr2h,f,c
 32911  01264E  06DE               	decf	postinc2,f,c
 32912  012650  0E00               	movlw	0
 32913  012652  5ADD               	subwfb	postdec2,f,c
 32914                           
 32915                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 32916                           ;stkvar	_w @ sp[(-56)+38]
 32917  012654  50E1               	movf	fsr1l,w,c
 32918  012656  0FEE               	addlw	-18
 32919  012658  6ED9               	movwf	fsr2l,c
 32920  01265A  50E2               	movf	fsr1h,w,c
 32921  01265C  6EDA               	movwf	fsr2h,c
 32922  01265E  0EFF               	movlw	255
 32923  012660  22DA               	addwfc	fsr2h,f,c
 32924  012662  06DE               	decf	postinc2,f,c
 32925  012664  0E00               	movlw	0
 32926  012666  5ADD               	subwfb	postdec2,f,c
 32927  012668                     l16067:
 32928                           
 32929                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 32930                           ;stkvar	_e @ sp[(-56)+34]
 32931  012668  0EEA               	movlw	-22
 32932  01266A  006F FF8C  F02A    	movff	plusw1,btemp
 32933  012670  0EEB               	movlw	-21
 32934  012672  50E3               	movf	plusw1,w,c
 32935  012674  102A               	iorwf	btemp^0,w,c
 32936  012676  A4D8               	btfss	status,2,c
 32937  012678  D7A6               	goto	l16057
 32938                           
 32939                           ;stkvar	_p @ sp[(-56)+40]
 32940  01267A  0EF1               	movlw	-15
 32941  01267C  BEE3               	btfsc	plusw1,7,c
 32942  01267E  D007               	goto	u15360
 32943  012680  0EF1               	movlw	-15
 32944  012682  50E3               	movf	plusw1,w,c
 32945  012684  E1A0               	bnz	l16057
 32946  012686  0EF0               	movlw	-16
 32947  012688  04E3               	decf	plusw1,w,c
 32948  01268A  B0D8               	btfsc	status,0,c
 32949  01268C  D79C               	goto	l16057
 32950  01268E                     u15360:
 32951                           
 32952                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 32953                           ;stkvar	_i @ sp[(-56)+36]
 32954  01268E  50E1               	movf	fsr1l,w,c
 32955  012690  0FEC               	addlw	-20
 32956  012692  6ED9               	movwf	fsr2l,c
 32957  012694  50E2               	movf	fsr1h,w,c
 32958  012696  6EDA               	movwf	fsr2h,c
 32959  012698  0EFF               	movlw	255
 32960  01269A  22DA               	addwfc	fsr2h,f,c
 32961  01269C  06DE               	decf	postinc2,f,c
 32962  01269E  0E00               	movlw	0
 32963  0126A0  5ADD               	subwfb	postdec2,f,c
 32964                           
 32965                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 32966                           ;stkvar	_sign @ sp[(-56)+42]
 32967  0126A2  0EF2               	movlw	-14
 32968  0126A4  006F FF8C  F02A    	movff	plusw1,btemp
 32969  0126AA  0EF3               	movlw	-13
 32970  0126AC  50E3               	movf	plusw1,w,c
 32971  0126AE  102A               	iorwf	btemp^0,w,c
 32972  0126B0  A4D8               	btfss	status,2,c
 32973  0126B2  D002               	goto	l16077
 32974  0126B4  0E2B               	movlw	43
 32975  0126B6  D001               	goto	L34
 32976  0126B8                     l16077:
 32977  0126B8  0E2D               	movlw	45
 32978  0126BA                     L34:
 32979  0126BA  6E34               	movwf	(btemp+10)^0,c
 32980  0126BC  0E00               	movlw	0
 32981  0126BE  6E35               	movwf	(btemp+11)^0,c
 32982                           
 32983                           ;stkvar	_efgtoa$6646 @ sp[(-56)+4]
 32984  0126C0  0ECC               	movlw	-52
 32985  0126C2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32986  0126C8  0ECD               	movlw	-51
 32987  0126CA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32988                           
 32989                           ;stkvar	_efgtoa$6646 @ sp[(-56)+4]
 32990                           ;stkvar	_i @ sp[(-56)+36]
 32991  0126D0  0EEC               	movlw	-20
 32992  0126D2  006F FF8C  F034    	movff	plusw1,btemp+10
 32993  0126D8  0EED               	movlw	-19
 32994  0126DA  006F FF8C  F035    	movff	plusw1,btemp+11
 32995  0126E0  0E54               	movlw	low _dbuf
 32996  0126E2  2434               	addwf	(btemp+10)^0,w,c
 32997  0126E4  6ED9               	movwf	fsr2l,c
 32998  0126E6  0E03               	movlw	high _dbuf
 32999  0126E8  2035               	addwfc	(btemp+11)^0,w,c
 33000  0126EA  6EDA               	movwf	fsr2h,c
 33001  0126EC  0ECC               	movlw	-52
 33002  0126EE  006F FF8F FFDF     	movff	plusw1,indf2
 33003                           
 33004                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 33005                           ;stkvar	_w @ sp[(-56)+38]
 33006  0126F4  50E1               	movf	fsr1l,w,c
 33007  0126F6  0FEE               	addlw	-18
 33008  0126F8  6ED9               	movwf	fsr2l,c
 33009  0126FA  50E2               	movf	fsr1h,w,c
 33010  0126FC  6EDA               	movwf	fsr2h,c
 33011  0126FE  0EFF               	movlw	255
 33012  012700  22DA               	addwfc	fsr2h,f,c
 33013  012702  06DE               	decf	postinc2,f,c
 33014  012704  0E00               	movlw	0
 33015  012706  5ADD               	subwfb	postdec2,f,c
 33016                           
 33017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 33018                           ;stkvar	_i @ sp[(-56)+36]
 33019  012708  50E1               	movf	fsr1l,w,c
 33020  01270A  0FEC               	addlw	-20
 33021  01270C  6ED9               	movwf	fsr2l,c
 33022  01270E  50E2               	movf	fsr1h,w,c
 33023  012710  6EDA               	movwf	fsr2h,c
 33024  012712  0EFF               	movlw	255
 33025  012714  22DA               	addwfc	fsr2h,f,c
 33026  012716  06DE               	decf	postinc2,f,c
 33027  012718  0E00               	movlw	0
 33028  01271A  5ADD               	subwfb	postdec2,f,c
 33029  01271C  0EBF               	movlw	191
 33030  01271E  6E34               	movwf	(btemp+10)^0,c
 33031  012720  0EFF               	movlw	255
 33032  012722  6E35               	movwf	(btemp+11)^0,c
 33033                           
 33034                           ;stkvar	_c @ sp[(-56)+-7]
 33035  012724  0EC1               	movlw	-63
 33036  012726  50E3               	movf	plusw1,w,c
 33037  012728  6E32               	movwf	(btemp+8)^0,c
 33038  01272A  6A33               	clrf	(btemp+9)^0,c
 33039  01272C  5034               	movf	(btemp+10)^0,w,c
 33040  01272E  2632               	addwf	(btemp+8)^0,f,c
 33041  012730  5035               	movf	(btemp+11)^0,w,c
 33042  012732  2233               	addwfc	(btemp+9)^0,f,c
 33043  012734  5033               	movf	(btemp+9)^0,w,c
 33044  012736  E106               	bnz	u15380
 33045  012738  0E1A               	movlw	26
 33046  01273A  5C32               	subwf	(btemp+8)^0,w,c
 33047  01273C  B0D8               	btfsc	status,0,c
 33048  01273E  D002               	goto	u15380
 33049  012740  0E01               	movlw	1
 33050  012742  D001               	goto	u15390
 33051  012744                     u15380:
 33052  012744  0E00               	movlw	0
 33053  012746                     u15390:
 33054  012746  6E34               	movwf	(btemp+10)^0,c
 33055  012748  6A35               	clrf	(btemp+11)^0,c
 33056                           
 33057                           ;stkvar	_efgtoa$6648 @ sp[(-56)+0]
 33058  01274A  0EC8               	movlw	-56
 33059  01274C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33060  012752  0EC9               	movlw	-55
 33061  012754  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33062                           
 33063                           ;stkvar	_efgtoa$6648 @ sp[(-56)+0]
 33064  01275A  0EC8               	movlw	-56
 33065  01275C  006F FF8C  F02A    	movff	plusw1,btemp
 33066  012762  0EC9               	movlw	-55
 33067  012764  50E3               	movf	plusw1,w,c
 33068  012766  102A               	iorwf	btemp^0,w,c
 33069  012768  A4D8               	btfss	status,2,c
 33070  01276A  D002               	goto	l16093
 33071  01276C  0E65               	movlw	101
 33072  01276E  D001               	goto	L35
 33073  012770                     l16093:
 33074  012770  0E45               	movlw	69
 33075  012772                     L35:
 33076  012772  6E34               	movwf	(btemp+10)^0,c
 33077  012774  0E00               	movlw	0
 33078  012776  6E35               	movwf	(btemp+11)^0,c
 33079                           
 33080                           ;stkvar	_efgtoa$6647 @ sp[(-56)+2]
 33081  012778  0ECA               	movlw	-54
 33082  01277A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33083  012780  0ECB               	movlw	-53
 33084  012782  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33085                           
 33086                           ;stkvar	_efgtoa$6647 @ sp[(-56)+2]
 33087                           ;stkvar	_i @ sp[(-56)+36]
 33088  012788  0EEC               	movlw	-20
 33089  01278A  006F FF8C  F034    	movff	plusw1,btemp+10
 33090  012790  0EED               	movlw	-19
 33091  012792  006F FF8C  F035    	movff	plusw1,btemp+11
 33092  012798  0E54               	movlw	low _dbuf
 33093  01279A  2434               	addwf	(btemp+10)^0,w,c
 33094  01279C  6ED9               	movwf	fsr2l,c
 33095  01279E  0E03               	movlw	high _dbuf
 33096  0127A0  2035               	addwfc	(btemp+11)^0,w,c
 33097  0127A2  6EDA               	movwf	fsr2h,c
 33098  0127A4  0ECA               	movlw	-54
 33099  0127A6  006F FF8F FFDF     	movff	plusw1,indf2
 33100                           
 33101                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 33102                           ;stkvar	_w @ sp[(-56)+38]
 33103  0127AC  50E1               	movf	fsr1l,w,c
 33104  0127AE  0FEE               	addlw	-18
 33105  0127B0  6ED9               	movwf	fsr2l,c
 33106  0127B2  50E2               	movf	fsr1h,w,c
 33107  0127B4  6EDA               	movwf	fsr2h,c
 33108  0127B6  0EFF               	movlw	255
 33109  0127B8  22DA               	addwfc	fsr2h,f,c
 33110  0127BA  06DE               	decf	postinc2,f,c
 33111  0127BC  0E00               	movlw	0
 33112  0127BE  5ADD               	subwfb	postdec2,f,c
 33113                           
 33114                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 33115                           ;stkvar	_i @ sp[(-56)+36]
 33116  0127C0  0EEC               	movlw	-20
 33117  0127C2  006F FF8C  F034    	movff	plusw1,btemp+10
 33118  0127C8  0EED               	movlw	-19
 33119  0127CA  006F FF8C  F035    	movff	plusw1,btemp+11
 33120  0127D0  0E54               	movlw	low _dbuf
 33121  0127D2  2434               	addwf	(btemp+10)^0,w,c
 33122  0127D4  6E32               	movwf	(btemp+8)^0,c
 33123  0127D6  0E03               	movlw	high _dbuf
 33124  0127D8  2035               	addwfc	(btemp+11)^0,w,c
 33125  0127DA  6E33               	movwf	(btemp+9)^0,c
 33126  0127DC  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 33127  0127E2  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 33128                           
 33129                           ;stkvar	_n @ sp[(-58)+32]
 33130  0127E8  0E54               	movlw	low _dbuf
 33131  0127EA  6E34               	movwf	(btemp+10)^0,c
 33132  0127EC  0E03               	movlw	high _dbuf
 33133  0127EE  6E35               	movwf	(btemp+11)^0,c
 33134  0127F0  0EE6               	movlw	-26
 33135  0127F2  50E3               	movf	plusw1,w,c
 33136  0127F4  2634               	addwf	(btemp+10)^0,f,c
 33137  0127F6  0EE7               	movlw	-25
 33138  0127F8  50E3               	movf	plusw1,w,c
 33139  0127FA  2235               	addwfc	(btemp+11)^0,f,c
 33140  0127FC  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 33141  012802  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 33142  012808  EC21  F004         	call	_strcpy	;wreg free
 33143  01280C  EF01  F08C         	goto	l15845
 33144  012810                     l2532:
 33145                           
 33146                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 33147  012810  0EC1               	movlw	193
 33148  012812  26E1               	addwf	fsr1l,f,c
 33149  012814  0EFF               	movlw	255
 33150  012816  22E2               	addwfc	fsr1h,f,c
 33151  012818  0012               	return		;funcret
 33152  01281A                     __end_of_efgtoa:
 33153                           	opt callstack 0
 33154                           
 33155 ;; *************** function _tolower *****************
 33156 ;; Defined at:
 33157 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 33158 ;; Parameters:    Size  Location     Type
 33159 ;;  c               2  [STACK] int 
 33160 ;; Auto vars:     Size  Location     Type
 33161 ;;		None
 33162 ;; Return value:  Size  Location     Type
 33163 ;;                  2  [STACK] int 
 33164 ;; Registers used:
 33165 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 33166 ;; Tracked objects:
 33167 ;;		On entry : 0/0
 33168 ;;		On exit  : 0/0
 33169 ;;		Unchanged: 0/0
 33170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33175 ;;Total ram usage:        0 bytes
 33176 ;; Hardware stack levels used:    1
 33177 ;; Hardware stack levels required when called:   16
 33178 ;; This function calls:
 33179 ;;		_isupper
 33180 ;; This function is called by:
 33181 ;;		_efgtoa
 33182 ;;		_vfpfcnvrt
 33183 ;; This function uses a reentrant model
 33184 ;;
 33185                           
 33186                           	psect	text106
 33187  001684                     __ptext106:
 33188                           	opt callstack 0
 33189  001684                     _tolower:
 33190                           	opt callstack 0
 33191                           
 33192                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33193  001684  52E6               	movf	postinc1,f,c
 33194  001686  52E6               	movf	postinc1,f,c
 33195                           
 33196                           ;stkvar	_c @ sp[(-2)+-2]
 33197                           
 33198                           ;incstack = 0
 33199 ;; hardware stack exceeded
 33200  001688  0EFC               	movlw	-4
 33201  00168A  50E3               	movf	plusw1,w,c
 33202  00168C  0FBF               	addlw	191
 33203  00168E  6E34               	movwf	(btemp+10)^0,c
 33204  001690  0EFD               	movlw	-3
 33205  001692  006F FF8C  F035    	movff	plusw1,btemp+11
 33206  001698  0EFF               	movlw	255
 33207  00169A  2235               	addwfc	(btemp+11)^0,f,c
 33208  00169C  5035               	movf	(btemp+11)^0,w,c
 33209  00169E  E106               	bnz	u7930
 33210  0016A0  0E1A               	movlw	26
 33211  0016A2  5C34               	subwf	(btemp+10)^0,w,c
 33212  0016A4  B0D8               	btfsc	status,0,c
 33213  0016A6  D002               	goto	u7930
 33214  0016A8  0E01               	movlw	1
 33215  0016AA  D001               	goto	u7940
 33216  0016AC                     u7930:
 33217  0016AC  0E00               	movlw	0
 33218  0016AE                     u7940:
 33219  0016AE  6E34               	movwf	(btemp+10)^0,c
 33220  0016B0  6A35               	clrf	(btemp+11)^0,c
 33221                           
 33222                           ;stkvar	_tolower$7602 @ sp[(-2)+0]
 33223  0016B2  0EFE               	movlw	-2
 33224  0016B4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33225  0016BA  0EFF               	movlw	-1
 33226  0016BC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33227                           
 33228                           ;stkvar	_tolower$7602 @ sp[(-2)+0]
 33229  0016C2  0EFE               	movlw	-2
 33230  0016C4  006F FF8C  F02A    	movff	plusw1,btemp
 33231  0016CA  0EFF               	movlw	-1
 33232  0016CC  50E3               	movf	plusw1,w,c
 33233  0016CE  102A               	iorwf	btemp^0,w,c
 33234  0016D0  B4D8               	btfsc	status,2,c
 33235  0016D2  D00D               	goto	l10215
 33236                           
 33237                           ;stkvar	_c @ sp[(-2)+-2]
 33238  0016D4  0EFC               	movlw	-4
 33239  0016D6  006F FF8C  F02A    	movff	plusw1,btemp
 33240  0016DC  0EFD               	movlw	-3
 33241  0016DE  006F FF8C  F02B    	movff	plusw1,btemp+1
 33242  0016E4  0E20               	movlw	32
 33243  0016E6  122A               	iorwf	btemp^0,f,c
 33244  0016E8  0E00               	movlw	0
 33245  0016EA  122B               	iorwf	(btemp+1)^0,f,c
 33246  0016EC  D008               	goto	l3834
 33247  0016EE                     l10215:
 33248                           
 33249                           ;stkvar	_c @ sp[(-2)+-2]
 33250  0016EE  0EFC               	movlw	-4
 33251  0016F0  006F FF8C  F02A    	movff	plusw1,btemp
 33252  0016F6  0EFD               	movlw	-3
 33253  0016F8  006F FF8C  F02B    	movff	plusw1,btemp+1
 33254  0016FE                     l3834:
 33255                           
 33256                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 33257  0016FE  52E5               	movf	postdec1,f,c
 33258  001700  52E5               	movf	postdec1,f,c
 33259  001702  52E5               	movf	postdec1,f,c
 33260  001704  52E5               	movf	postdec1,f,c
 33261  001706  0012               	return		;funcret
 33262  001708                     __end_of_tolower:
 33263                           	opt callstack 0
 33264                           
 33265 ;; *************** function _isupper *****************
 33266 ;; Defined at:
 33267 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 33268 ;; Parameters:    Size  Location     Type
 33269 ;;  c               2  [STACK] int 
 33270 ;; Auto vars:     Size  Location     Type
 33271 ;;		None
 33272 ;; Return value:  Size  Location     Type
 33273 ;;                  2  [STACK] int 
 33274 ;; Registers used:
 33275 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 33276 ;; Tracked objects:
 33277 ;;		On entry : 0/0
 33278 ;;		On exit  : 0/0
 33279 ;;		Unchanged: 0/0
 33280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33285 ;;Total ram usage:        0 bytes
 33286 ;; Hardware stack levels used:    1
 33287 ;; Hardware stack levels required when called:   15
 33288 ;; This function calls:
 33289 ;;		Nothing
 33290 ;; This function is called by:
 33291 ;;		_efgtoa
 33292 ;;		_xtoa
 33293 ;;		_vfpfcnvrt
 33294 ;;		_tolower
 33295 ;; This function uses a reentrant model
 33296 ;;
 33297                           
 33298                           	psect	text107
 33299  002846                     __ptext107:
 33300                           	opt callstack 0
 33301  002846                     _isupper:
 33302                           	opt callstack 0
 33303                           
 33304                           ;stkvar	_c @ sp[(0)+-2]
 33305                           
 33306                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33307                           ;incstack = 0
 33308 ;; hardware stack exceeded
 33309  002846  0EFE               	movlw	-2
 33310  002848  50E3               	movf	plusw1,w,c
 33311  00284A  0FBF               	addlw	191
 33312  00284C  6E34               	movwf	(btemp+10)^0,c
 33313  00284E  0EFF               	movlw	-1
 33314  002850  006F FF8C  F035    	movff	plusw1,btemp+11
 33315  002856  0EFF               	movlw	255
 33316  002858  2235               	addwfc	(btemp+11)^0,f,c
 33317  00285A  5035               	movf	(btemp+11)^0,w,c
 33318  00285C  E106               	bnz	u7270
 33319  00285E  0E1A               	movlw	26
 33320  002860  5C34               	subwf	(btemp+10)^0,w,c
 33321  002862  B0D8               	btfsc	status,0,c
 33322  002864  D002               	goto	u7270
 33323  002866  0E01               	movlw	1
 33324  002868  D001               	goto	u7280
 33325  00286A                     u7270:
 33326  00286A  0E00               	movlw	0
 33327  00286C                     u7280:
 33328  00286C  6E2A               	movwf	btemp^0,c
 33329  00286E  6A2B               	clrf	(btemp+1)^0,c
 33330                           
 33331                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 33332  002870  52E5               	movf	postdec1,f,c
 33333  002872  52E5               	movf	postdec1,f,c
 33334  002874  0012               	return		;funcret
 33335  002876                     __end_of_isupper:
 33336                           	opt callstack 0
 33337                           
 33338 ;; *************** function _strcpy *****************
 33339 ;; Defined at:
 33340 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 33341 ;; Parameters:    Size  Location     Type
 33342 ;;  dest            2  [STACK] PTR unsigned char 
 33343 ;;		 -> dbuf(80), 
 33344 ;;  src             2  [STACK] PTR const unsigned char 
 33345 ;;		 -> STR_109(4), STR_108(4), STR_105(4), STR_104(4), 
 33346 ;;		 -> dbuf(80), 
 33347 ;; Auto vars:     Size  Location     Type
 33348 ;;  d               2  [STACK] PTR unsigned char 
 33349 ;;		 -> dbuf(80), 
 33350 ;;  s               2  [STACK] PTR const unsigned char 
 33351 ;;		 -> STR_109(4), STR_108(4), STR_105(4), STR_104(4), 
 33352 ;;		 -> dbuf(80), 
 33353 ;; Return value:  Size  Location     Type
 33354 ;;                  2  [STACK] PTR unsigned char 
 33355 ;; Registers used:
 33356 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 33357 ;; Tracked objects:
 33358 ;;		On entry : 0/0
 33359 ;;		On exit  : 0/0
 33360 ;;		Unchanged: 0/0
 33361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33366 ;;Total ram usage:        0 bytes
 33367 ;; Hardware stack levels used:    1
 33368 ;; Hardware stack levels required when called:   15
 33369 ;; This function calls:
 33370 ;;		Nothing
 33371 ;; This function is called by:
 33372 ;;		_efgtoa
 33373 ;; This function uses a reentrant model
 33374 ;;
 33375                           
 33376                           	psect	text108
 33377  000842                     __ptext108:
 33378                           	opt callstack 0
 33379  000842                     _strcpy:
 33380                           	opt callstack 0
 33381                           
 33382                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33383  000842  52E6               	movf	postinc1,f,c
 33384  000844  52E6               	movf	postinc1,f,c
 33385  000846  52E6               	movf	postinc1,f,c
 33386  000848  52E6               	movf	postinc1,f,c
 33387                           
 33388                           ;stkvar	_src @ sp[(-4)+-4]
 33389                           
 33390                           ;incstack = 0
 33391 ;; hardware stack exceeded
 33392  00084A  0EF8               	movlw	-8
 33393  00084C  006F FF8C  F034    	movff	plusw1,btemp+10
 33394  000852  0EF9               	movlw	-7
 33395  000854  006F FF8C  F035    	movff	plusw1,btemp+11
 33396                           
 33397                           ;stkvar	_s @ sp[(-4)+2]
 33398  00085A  0EFF               	movlw	-1
 33399  00085C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33400  000862  0EFE               	movlw	-2
 33401  000864  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33402                           
 33403                           ;stkvar	_dest @ sp[(-4)+-2]
 33404  00086A  0EFA               	movlw	-6
 33405  00086C  006F FF8C  F034    	movff	plusw1,btemp+10
 33406  000872  0EFB               	movlw	-5
 33407  000874  006F FF8C  F035    	movff	plusw1,btemp+11
 33408                           
 33409                           ;stkvar	_d @ sp[(-4)+0]
 33410  00087A  0EFD               	movlw	-3
 33411  00087C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33412  000882  0EFC               	movlw	-4
 33413  000884  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33414  00088A                     l15629:
 33415                           
 33416                           ;stkvar	_s @ sp[(-4)+2]
 33417  00088A  50E1               	movf	fsr1l,w,c
 33418  00088C  0FFE               	addlw	-2
 33419  00088E  6ED9               	movwf	fsr2l,c
 33420  000890  50E2               	movf	fsr1h,w,c
 33421  000892  6EDA               	movwf	fsr2h,c
 33422  000894  0EFF               	movlw	255
 33423  000896  22DA               	addwfc	fsr2h,f,c
 33424  000898  006F FF7C  F034    	movff	indf2,btemp+10
 33425  00089E  0E01               	movlw	1
 33426  0008A0  26DE               	addwf	postinc2,f,c
 33427  0008A2  006F FF7C  F035    	movff	indf2,btemp+11
 33428  0008A8  0E00               	movlw	0
 33429  0008AA  22DD               	addwfc	postdec2,f,c
 33430  0008AC  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 33431  0008B2  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 33432  0008B8  0E00               	movlw	low (__mediumconst shr (0+16))
 33433  0008BA  6EF8               	movwf	tblptru,c
 33434                           
 33435                           ;stkvar	_d @ sp[(-4)+0]
 33436  0008BC  50E1               	movf	fsr1l,w,c
 33437  0008BE  0FFC               	addlw	-4
 33438  0008C0  6ED9               	movwf	fsr2l,c
 33439  0008C2  50E2               	movf	fsr1h,w,c
 33440  0008C4  6EDA               	movwf	fsr2h,c
 33441  0008C6  0EFF               	movlw	255
 33442  0008C8  22DA               	addwfc	fsr2h,f,c
 33443  0008CA  006F FF7C  F034    	movff	indf2,btemp+10
 33444  0008D0  0E01               	movlw	1
 33445  0008D2  26DE               	addwf	postinc2,f,c
 33446  0008D4  006F FF7C  F035    	movff	indf2,btemp+11
 33447  0008DA  0E00               	movlw	0
 33448  0008DC  22DD               	addwfc	postdec2,f,c
 33449  0008DE  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 33450  0008E4  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 33451  0008EA  0E1F               	movlw	(high __ramtop+-1)
 33452  0008EC  64F7               	cpfsgt	tblptrh,c
 33453  0008EE  D003               	bra	u14547
 33454  0008F0  0008               	tblrd		*
 33455  0008F2  50F5               	movf	tablat,w,c
 33456  0008F4  D007               	bra	u14540
 33457  0008F6                     u14547:
 33458  0008F6  006F FFDB FFE9     	movff	tblptrl,fsr0l
 33459  0008FC  006F FFDF FFEA     	movff	tblptrh,fsr0h
 33460  000902  50EF               	movf	indf0,w,c
 33461  000904                     u14540:
 33462  000904  6EDF               	movwf	indf2,c
 33463  000906  50DF               	movf	indf2,w,c
 33464  000908  A4D8               	btfss	status,2,c
 33465  00090A  D7BF               	goto	l15629
 33466                           
 33467                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 33468  00090C  0EF8               	movlw	248
 33469  00090E  26E1               	addwf	fsr1l,f,c
 33470  000910  0EFF               	movlw	255
 33471  000912  22E2               	addwfc	fsr1h,f,c
 33472  000914  0012               	return		;funcret
 33473  000916                     __end_of_strcpy:
 33474                           	opt callstack 0
 33475                           
 33476 ;; *************** function _floorf *****************
 33477 ;; Defined at:
 33478 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 33479 ;; Parameters:    Size  Location     Type
 33480 ;;  x               4  [STACK] float 
 33481 ;; Auto vars:     Size  Location     Type
 33482 ;;  u               4  [STACK] struct .
 33483 ;;  m               4  [STACK] unsigned long 
 33484 ;;  e               2  [STACK] int 
 33485 ;; Return value:  Size  Location     Type
 33486 ;;                  4  [STACK] float 
 33487 ;; Registers used:
 33488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 33489 ;; Tracked objects:
 33490 ;;		On entry : 0/0
 33491 ;;		On exit  : 0/0
 33492 ;;		Unchanged: 0/0
 33493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33498 ;;Total ram usage:        0 bytes
 33499 ;; Hardware stack levels used:    1
 33500 ;; Hardware stack levels required when called:   15
 33501 ;; This function calls:
 33502 ;;		Nothing
 33503 ;; This function is called by:
 33504 ;;		_efgtoa
 33505 ;; This function uses a reentrant model
 33506 ;;
 33507                           
 33508                           	psect	text109
 33509  01A6C4                     __ptext109:
 33510                           	opt callstack 0
 33511  01A6C4                     _floorf:
 33512                           	opt callstack 0
 33513                           
 33514                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 33515  01A6C4  0E0A               	movlw	10
 33516  01A6C6  26E1               	addwf	fsr1l,f,c
 33517  01A6C8  0E00               	movlw	0
 33518  01A6CA  22E2               	addwfc	fsr1h,f,c
 33519                           
 33520                           ;incstack = 0
 33521 ;; hardware stack exceeded
 33522  01A6CC  0060  F1D0  F032   	movff	floorf@F524,btemp+8
 33523  01A6D2  0060  F1D4  F033   	movff	floorf@F524+1,btemp+9
 33524  01A6D8  0060  F1D8  F034   	movff	floorf@F524+2,btemp+10
 33525  01A6DE  0060  F1DC  F035   	movff	floorf@F524+3,btemp+11
 33526                           
 33527                           ;stkvar	_u @ sp[(-10)+0]
 33528  01A6E4  0EF6               	movlw	-10
 33529  01A6E6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33530  01A6EC  0EF7               	movlw	-9
 33531  01A6EE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 33532  01A6F4  0EF8               	movlw	-8
 33533  01A6F6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33534  01A6FC  0EF9               	movlw	-7
 33535  01A6FE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33536                           
 33537                           ;stkvar	_x @ sp[(-10)+-4]
 33538  01A704  0EF2               	movlw	-14
 33539  01A706  006F FF8C  F032    	movff	plusw1,btemp+8
 33540  01A70C  0EF3               	movlw	-13
 33541  01A70E  006F FF8C  F033    	movff	plusw1,btemp+9
 33542  01A714  0EF4               	movlw	-12
 33543  01A716  006F FF8C  F034    	movff	plusw1,btemp+10
 33544  01A71C  0EF5               	movlw	-11
 33545  01A71E  006F FF8C  F035    	movff	plusw1,btemp+11
 33546                           
 33547                           ;stkvar	_u @ sp[(-10)+0]
 33548  01A724  0EF6               	movlw	-10
 33549  01A726  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33550  01A72C  0EF7               	movlw	-9
 33551  01A72E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 33552  01A734  0EF8               	movlw	-8
 33553  01A736  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33554  01A73C  0EF9               	movlw	-7
 33555  01A73E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33556  01A744  0E81               	movlw	129
 33557  01A746  6E34               	movwf	(btemp+10)^0,c
 33558  01A748  0EFF               	movlw	255
 33559  01A74A  6E35               	movwf	(btemp+11)^0,c
 33560                           
 33561                           ;stkvar	_u @ sp[(-10)+0]
 33562  01A74C  0EF6               	movlw	-10
 33563  01A74E  006F FF8C  F02E    	movff	plusw1,btemp+4
 33564  01A754  0EF7               	movlw	-9
 33565  01A756  006F FF8C  F02F    	movff	plusw1,btemp+5
 33566  01A75C  0EF8               	movlw	-8
 33567  01A75E  006F FF8C  F030    	movff	plusw1,btemp+6
 33568  01A764  0EF9               	movlw	-7
 33569  01A766  006F FF8C  F031    	movff	plusw1,btemp+7
 33570  01A76C  0E18               	movlw	24
 33571  01A76E  D005               	goto	u7960
 33572  01A770                     u7965:
 33573  01A770  90D8               	bcf	status,0,c
 33574  01A772  3231               	rrcf	(btemp+7)^0,f,c
 33575  01A774  3230               	rrcf	(btemp+6)^0,f,c
 33576  01A776  322F               	rrcf	(btemp+5)^0,f,c
 33577  01A778  322E               	rrcf	(btemp+4)^0,f,c
 33578  01A77A                     u7960:
 33579  01A77A  2EE8               	decfsz	wreg,f,c
 33580  01A77C  D7F9               	goto	u7965
 33581  01A77E  0060  F0B8  F032   	movff	btemp+4,btemp+8
 33582  01A784  0060  F0BC  F033   	movff	btemp+5,btemp+9
 33583  01A78A  0EFF               	movlw	255
 33584  01A78C  1632               	andwf	(btemp+8)^0,f,c
 33585  01A78E  0E00               	movlw	0
 33586  01A790  1633               	andwf	(btemp+9)^0,f,c
 33587  01A792  5034               	movf	(btemp+10)^0,w,c
 33588  01A794  2632               	addwf	(btemp+8)^0,f,c
 33589  01A796  5035               	movf	(btemp+11)^0,w,c
 33590  01A798  2233               	addwfc	(btemp+9)^0,f,c
 33591                           
 33592                           ;stkvar	_e @ sp[(-10)+8]
 33593  01A79A  0EFE               	movlw	-2
 33594  01A79C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33595  01A7A2  0EFF               	movlw	-1
 33596  01A7A4  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 33597                           
 33598                           ;stkvar	_e @ sp[(-10)+8]
 33599  01A7AA  0EFF               	movlw	-1
 33600  01A7AC  BEE3               	btfsc	plusw1,7,c
 33601  01A7AE  D019               	goto	l10229
 33602  01A7B0  0EFF               	movlw	-1
 33603  01A7B2  50E3               	movf	plusw1,w,c
 33604  01A7B4  E108               	bnz	u7970
 33605  01A7B6  0EFE               	movlw	-2
 33606  01A7B8  006F FF8C  F02A    	movff	plusw1,btemp
 33607  01A7BE  0E17               	movlw	23
 33608  01A7C0  5E2A               	subwf	btemp^0,f,c
 33609  01A7C2  A0D8               	btfss	status,0,c
 33610  01A7C4  D00E               	goto	l10229
 33611  01A7C6                     u7970:
 33612                           
 33613                           ;stkvar	_x @ sp[(-10)+-4]
 33614  01A7C6  0EF2               	movlw	-14
 33615  01A7C8  006F FF8C  F02A    	movff	plusw1,btemp
 33616  01A7CE  0EF3               	movlw	-13
 33617  01A7D0  006F FF8C  F02B    	movff	plusw1,btemp+1
 33618  01A7D6  0EF4               	movlw	-12
 33619  01A7D8  006F FF8C  F02C    	movff	plusw1,btemp+2
 33620  01A7DE  0EF5               	movlw	-11
 33621  01A7E0  D11F               	goto	L36
 33622  01A7E2                     l10229:
 33623                           
 33624                           ;stkvar	_e @ sp[(-10)+8]
 33625  01A7E2  0EFF               	movlw	-1
 33626  01A7E4  BEE3               	btfsc	plusw1,7,c
 33627  01A7E6  D0B4               	goto	l10245
 33628                           
 33629                           ;stkvar	_e @ sp[(-10)+8]
 33630  01A7E8  0EFE               	movlw	-2
 33631  01A7EA  006F FF8C  F035    	movff	plusw1,btemp+11
 33632  01A7F0  0EFF               	movlw	255
 33633  01A7F2  6E2E               	movwf	(btemp+4)^0,c
 33634  01A7F4  0EFF               	movlw	255
 33635  01A7F6  6E2F               	movwf	(btemp+5)^0,c
 33636  01A7F8  0E7F               	movlw	127
 33637  01A7FA  6E30               	movwf	(btemp+6)^0,c
 33638  01A7FC  0E00               	movlw	0
 33639  01A7FE  6E31               	movwf	(btemp+7)^0,c
 33640  01A800                     u7995:
 33641  01A800  6635               	tstfsz	(btemp+11)^0,c
 33642  01A802  D001               	goto	u7996
 33643  01A804  D007               	goto	u7997
 33644  01A806                     u7996:
 33645  01A806  3431               	rlcf	(btemp+7)^0,w,c
 33646  01A808  3231               	rrcf	(btemp+7)^0,f,c
 33647  01A80A  3230               	rrcf	(btemp+6)^0,f,c
 33648  01A80C  322F               	rrcf	(btemp+5)^0,f,c
 33649  01A80E  322E               	rrcf	(btemp+4)^0,f,c
 33650  01A810  2E35               	decfsz	(btemp+11)^0,f,c
 33651  01A812  D7F6               	goto	u7995
 33652  01A814                     u7997:
 33653                           
 33654                           ;stkvar	_m @ sp[(-10)+4]
 33655  01A814  0EFA               	movlw	-6
 33656  01A816  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 33657  01A81C  0EFB               	movlw	-5
 33658  01A81E  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 33659  01A824  0EFC               	movlw	-4
 33660  01A826  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 33661  01A82C  0EFD               	movlw	-3
 33662  01A82E  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 33663                           
 33664                           ;stkvar	_m @ sp[(-10)+4]
 33665                           ;stkvar	_u @ sp[(-10)+0]
 33666  01A834  0EF6               	movlw	-10
 33667  01A836  006F FF8C  F032    	movff	plusw1,btemp+8
 33668  01A83C  0EF7               	movlw	-9
 33669  01A83E  006F FF8C  F033    	movff	plusw1,btemp+9
 33670  01A844  0EF8               	movlw	-8
 33671  01A846  006F FF8C  F034    	movff	plusw1,btemp+10
 33672  01A84C  0EF9               	movlw	-7
 33673  01A84E  006F FF8C  F035    	movff	plusw1,btemp+11
 33674  01A854  0EFA               	movlw	-6
 33675  01A856  50E3               	movf	plusw1,w,c
 33676  01A858  1632               	andwf	(btemp+8)^0,f,c
 33677  01A85A  0EFB               	movlw	-5
 33678  01A85C  50E3               	movf	plusw1,w,c
 33679  01A85E  1633               	andwf	(btemp+9)^0,f,c
 33680  01A860  0EFC               	movlw	-4
 33681  01A862  50E3               	movf	plusw1,w,c
 33682  01A864  1634               	andwf	(btemp+10)^0,f,c
 33683  01A866  0EFD               	movlw	-3
 33684  01A868  50E3               	movf	plusw1,w,c
 33685  01A86A  1635               	andwf	(btemp+11)^0,f,c
 33686  01A86C  5032               	movf	(btemp+8)^0,w,c
 33687  01A86E  1033               	iorwf	(btemp+9)^0,w,c
 33688  01A870  1034               	iorwf	(btemp+10)^0,w,c
 33689  01A872  1035               	iorwf	(btemp+11)^0,w,c
 33690  01A874  B4D8               	btfsc	status,2,c
 33691  01A876  D7A7               	goto	u7970
 33692                           
 33693                           ;stkvar	_u @ sp[(-10)+0]
 33694  01A878  0EF6               	movlw	-10
 33695  01A87A  006F FF8C  F032    	movff	plusw1,btemp+8
 33696  01A880  0EF7               	movlw	-9
 33697  01A882  006F FF8C  F033    	movff	plusw1,btemp+9
 33698  01A888  0EF8               	movlw	-8
 33699  01A88A  006F FF8C  F034    	movff	plusw1,btemp+10
 33700  01A890  0EF9               	movlw	-7
 33701  01A892  006F FF8C  F035    	movff	plusw1,btemp+11
 33702  01A898  0E20               	movlw	32
 33703  01A89A  D005               	goto	u8010
 33704  01A89C                     u8015:
 33705  01A89C  90D8               	bcf	status,0,c
 33706  01A89E  3235               	rrcf	(btemp+11)^0,f,c
 33707  01A8A0  3234               	rrcf	(btemp+10)^0,f,c
 33708  01A8A2  3233               	rrcf	(btemp+9)^0,f,c
 33709  01A8A4  3232               	rrcf	(btemp+8)^0,f,c
 33710  01A8A6                     u8010:
 33711  01A8A6  2EE8               	decfsz	wreg,f,c
 33712  01A8A8  D7F9               	goto	u8015
 33713  01A8AA  5032               	movf	(btemp+8)^0,w,c
 33714  01A8AC  B4D8               	btfsc	status,2,c
 33715  01A8AE  D028               	goto	l10243
 33716                           
 33717                           ;stkvar	_m @ sp[(-10)+4]
 33718                           ;stkvar	_u @ sp[(-10)+0]
 33719  01A8B0  0EF6               	movlw	-10
 33720  01A8B2  50E3               	movf	plusw1,w,c
 33721  01A8B4  6E2A               	movwf	btemp^0,c
 33722  01A8B6  0EFA               	movlw	-6
 33723  01A8B8  50E3               	movf	plusw1,w,c
 33724  01A8BA  262A               	addwf	btemp^0,f,c
 33725  01A8BC  0EF6               	movlw	-10
 33726  01A8BE  0060  F0AB  FFE3   	movff	btemp,plusw1
 33727  01A8C4  0EF7               	movlw	-9
 33728  01A8C6  50E3               	movf	plusw1,w,c
 33729  01A8C8  6E2A               	movwf	btemp^0,c
 33730  01A8CA  0EFB               	movlw	-5
 33731  01A8CC  50E3               	movf	plusw1,w,c
 33732  01A8CE  222A               	addwfc	btemp^0,f,c
 33733  01A8D0  0EF7               	movlw	-9
 33734  01A8D2  0060  F0AB  FFE3   	movff	btemp,plusw1
 33735  01A8D8  0EF8               	movlw	-8
 33736  01A8DA  50E3               	movf	plusw1,w,c
 33737  01A8DC  6E2A               	movwf	btemp^0,c
 33738  01A8DE  0EFC               	movlw	-4
 33739  01A8E0  50E3               	movf	plusw1,w,c
 33740  01A8E2  222A               	addwfc	btemp^0,f,c
 33741  01A8E4  0EF8               	movlw	-8
 33742  01A8E6  0060  F0AB  FFE3   	movff	btemp,plusw1
 33743  01A8EC  0EF9               	movlw	-7
 33744  01A8EE  50E3               	movf	plusw1,w,c
 33745  01A8F0  6E2A               	movwf	btemp^0,c
 33746  01A8F2  0EFD               	movlw	-3
 33747  01A8F4  50E3               	movf	plusw1,w,c
 33748  01A8F6  222A               	addwfc	btemp^0,f,c
 33749  01A8F8  0EF9               	movlw	-7
 33750  01A8FA  0060  F0AB  FFE3   	movff	btemp,plusw1
 33751  01A900                     l10243:
 33752                           
 33753                           ;stkvar	_m @ sp[(-10)+4]
 33754  01A900  0EFA               	movlw	-6
 33755  01A902  006F FF8C  F032    	movff	plusw1,btemp+8
 33756  01A908  0EFB               	movlw	-5
 33757  01A90A  006F FF8C  F033    	movff	plusw1,btemp+9
 33758  01A910  0EFC               	movlw	-4
 33759  01A912  006F FF8C  F034    	movff	plusw1,btemp+10
 33760  01A918  0EFD               	movlw	-3
 33761  01A91A  006F FF8C  F035    	movff	plusw1,btemp+11
 33762  01A920  1C32               	comf	(btemp+8)^0,w,c
 33763  01A922  6E2E               	movwf	(btemp+4)^0,c
 33764  01A924  1C33               	comf	(btemp+9)^0,w,c
 33765  01A926  6E2F               	movwf	(btemp+5)^0,c
 33766  01A928  1C34               	comf	(btemp+10)^0,w,c
 33767  01A92A  6E30               	movwf	(btemp+6)^0,c
 33768  01A92C  1C35               	comf	(btemp+11)^0,w,c
 33769  01A92E  6E31               	movwf	(btemp+7)^0,c
 33770                           
 33771                           ;stkvar	_u @ sp[(-10)+0]
 33772  01A930  50E1               	movf	fsr1l,w,c
 33773  01A932  0FF6               	addlw	-10
 33774  01A934  6ED9               	movwf	fsr2l,c
 33775  01A936  50E2               	movf	fsr1h,w,c
 33776  01A938  6EDA               	movwf	fsr2h,c
 33777  01A93A  0EFF               	movlw	255
 33778  01A93C  22DA               	addwfc	fsr2h,f,c
 33779  01A93E  502E               	movf	(btemp+4)^0,w,c
 33780  01A940  16DE               	andwf	postinc2,f,c
 33781  01A942  502F               	movf	(btemp+5)^0,w,c
 33782  01A944  16DE               	andwf	postinc2,f,c
 33783  01A946  5030               	movf	(btemp+6)^0,w,c
 33784  01A948  16DE               	andwf	postinc2,f,c
 33785  01A94A  5031               	movf	(btemp+7)^0,w,c
 33786  01A94C  16DE               	andwf	postinc2,f,c
 33787  01A94E  D05B               	goto	l10253
 33788  01A950                     l10245:
 33789                           
 33790                           ;stkvar	_u @ sp[(-10)+0]
 33791  01A950  0EF6               	movlw	-10
 33792  01A952  006F FF8C  F032    	movff	plusw1,btemp+8
 33793  01A958  0EF7               	movlw	-9
 33794  01A95A  006F FF8C  F033    	movff	plusw1,btemp+9
 33795  01A960  0EF8               	movlw	-8
 33796  01A962  006F FF8C  F034    	movff	plusw1,btemp+10
 33797  01A968  0EF9               	movlw	-7
 33798  01A96A  006F FF8C  F035    	movff	plusw1,btemp+11
 33799  01A970  0E20               	movlw	32
 33800  01A972  D005               	goto	u8030
 33801  01A974                     u8035:
 33802  01A974  90D8               	bcf	status,0,c
 33803  01A976  3235               	rrcf	(btemp+11)^0,f,c
 33804  01A978  3234               	rrcf	(btemp+10)^0,f,c
 33805  01A97A  3233               	rrcf	(btemp+9)^0,f,c
 33806  01A97C  3232               	rrcf	(btemp+8)^0,f,c
 33807  01A97E                     u8030:
 33808  01A97E  2EE8               	decfsz	wreg,f,c
 33809  01A980  D7F9               	goto	u8035
 33810  01A982  6632               	tstfsz	(btemp+8)^0,c
 33811  01A984  D009               	goto	l10249
 33812                           
 33813                           ;stkvar	_u @ sp[(-10)+0]
 33814  01A986  0EF6               	movlw	-10
 33815  01A988  6AE3               	clrf	plusw1,c
 33816  01A98A  0EF7               	movlw	-9
 33817  01A98C  6AE3               	clrf	plusw1,c
 33818  01A98E  0EF8               	movlw	-8
 33819  01A990  6AE3               	clrf	plusw1,c
 33820  01A992  0EF9               	movlw	-7
 33821  01A994  6AE3               	clrf	plusw1,c
 33822  01A996  D037               	goto	l10253
 33823  01A998                     l10249:
 33824                           
 33825                           ;stkvar	_u @ sp[(-10)+0]
 33826  01A998  0EF6               	movlw	-10
 33827  01A99A  006F FF8C  F032    	movff	plusw1,btemp+8
 33828  01A9A0  0EF7               	movlw	-9
 33829  01A9A2  006F FF8C  F033    	movff	plusw1,btemp+9
 33830  01A9A8  0EF8               	movlw	-8
 33831  01A9AA  006F FF8C  F034    	movff	plusw1,btemp+10
 33832  01A9B0  0EF9               	movlw	-7
 33833  01A9B2  006F FF8C  F035    	movff	plusw1,btemp+11
 33834  01A9B8  90D8               	bcf	status,0,c
 33835  01A9BA  3432               	rlcf	(btemp+8)^0,w,c
 33836  01A9BC  6E2E               	movwf	(btemp+4)^0,c
 33837  01A9BE  3433               	rlcf	(btemp+9)^0,w,c
 33838  01A9C0  6E2F               	movwf	(btemp+5)^0,c
 33839  01A9C2  3434               	rlcf	(btemp+10)^0,w,c
 33840  01A9C4  6E30               	movwf	(btemp+6)^0,c
 33841  01A9C6  3435               	rlcf	(btemp+11)^0,w,c
 33842  01A9C8  6E31               	movwf	(btemp+7)^0,c
 33843  01A9CA  502E               	movf	(btemp+4)^0,w,c
 33844  01A9CC  102F               	iorwf	(btemp+5)^0,w,c
 33845  01A9CE  1030               	iorwf	(btemp+6)^0,w,c
 33846  01A9D0  1031               	iorwf	(btemp+7)^0,w,c
 33847  01A9D2  B4D8               	btfsc	status,2,c
 33848  01A9D4  D018               	goto	l10253
 33849  01A9D6  0E00               	movlw	0
 33850  01A9D8  6E32               	movwf	(btemp+8)^0,c
 33851  01A9DA  0E00               	movlw	0
 33852  01A9DC  6E33               	movwf	(btemp+9)^0,c
 33853  01A9DE  0E80               	movlw	128
 33854  01A9E0  6E34               	movwf	(btemp+10)^0,c
 33855  01A9E2  0EBF               	movlw	191
 33856  01A9E4  6E35               	movwf	(btemp+11)^0,c
 33857                           
 33858                           ;stkvar	_u @ sp[(-10)+0]
 33859  01A9E6  0EF6               	movlw	-10
 33860  01A9E8  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33861  01A9EE  0EF7               	movlw	-9
 33862  01A9F0  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 33863  01A9F6  0EF8               	movlw	-8
 33864  01A9F8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33865  01A9FE  0EF9               	movlw	-7
 33866  01AA00  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33867  01AA06                     l10253:
 33868                           
 33869                           ;stkvar	_u @ sp[(-10)+0]
 33870  01AA06  0EF6               	movlw	-10
 33871  01AA08  006F FF8C  F02A    	movff	plusw1,btemp
 33872  01AA0E  0EF7               	movlw	-9
 33873  01AA10  006F FF8C  F02B    	movff	plusw1,btemp+1
 33874  01AA16  0EF8               	movlw	-8
 33875  01AA18  006F FF8C  F02C    	movff	plusw1,btemp+2
 33876  01AA1E  0EF9               	movlw	-7
 33877  01AA20                     L36:
 33878  01AA20  006F FF8C  F02D    	movff	plusw1,btemp+3
 33879                           
 33880                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 33881  01AA26  0EF2               	movlw	242
 33882  01AA28  26E1               	addwf	fsr1l,f,c
 33883  01AA2A  0EFF               	movlw	255
 33884  01AA2C  22E2               	addwfc	fsr1h,f,c
 33885  01AA2E  0012               	return		;funcret
 33886  01AA30                     __end_of_floorf:
 33887                           	opt callstack 0
 33888                           
 33889 ;; *************** function ___fpclassifyf *****************
 33890 ;; Defined at:
 33891 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 33892 ;; Parameters:    Size  Location     Type
 33893 ;;  x               4  [STACK] float 
 33894 ;; Auto vars:     Size  Location     Type
 33895 ;;  u               4  [STACK] struct .
 33896 ;;  e               2  [STACK] int 
 33897 ;; Return value:  Size  Location     Type
 33898 ;;                  2  [STACK] int 
 33899 ;; Registers used:
 33900 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 33901 ;; Tracked objects:
 33902 ;;		On entry : 0/0
 33903 ;;		On exit  : 0/0
 33904 ;;		Unchanged: 0/0
 33905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33910 ;;Total ram usage:        0 bytes
 33911 ;; Hardware stack levels used:    1
 33912 ;; Hardware stack levels required when called:   15
 33913 ;; This function calls:
 33914 ;;		Nothing
 33915 ;; This function is called by:
 33916 ;;		_efgtoa
 33917 ;; This function uses a reentrant model
 33918 ;;
 33919                           
 33920                           	psect	text110
 33921  01E1CA                     __ptext110:
 33922                           	opt callstack 0
 33923  01E1CA                     ___fpclassifyf:
 33924                           	opt callstack 0
 33925                           
 33926                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33927  01E1CA  0E06               	movlw	6
 33928  01E1CC  26E1               	addwf	fsr1l,f,c
 33929  01E1CE  0E00               	movlw	0
 33930  01E1D0  22E2               	addwfc	fsr1h,f,c
 33931                           
 33932                           ;incstack = 0
 33933 ;; hardware stack exceeded
 33934  01E1D2  0060  F1F0  F032   	movff	___fpclassifyf@F463,btemp+8
 33935  01E1D8  0060  F1F4  F033   	movff	___fpclassifyf@F463+1,btemp+9
 33936  01E1DE  0060  F1F8  F034   	movff	___fpclassifyf@F463+2,btemp+10
 33937  01E1E4  0060  F1FC  F035   	movff	___fpclassifyf@F463+3,btemp+11
 33938                           
 33939                           ;stkvar	_u @ sp[(-6)+0]
 33940  01E1EA  0EFA               	movlw	-6
 33941  01E1EC  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33942  01E1F2  0EFB               	movlw	-5
 33943  01E1F4  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 33944  01E1FA  0EFC               	movlw	-4
 33945  01E1FC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33946  01E202  0EFD               	movlw	-3
 33947  01E204  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33948                           
 33949                           ;stkvar	_x @ sp[(-6)+-4]
 33950  01E20A  0EF6               	movlw	-10
 33951  01E20C  006F FF8C  F032    	movff	plusw1,btemp+8
 33952  01E212  0EF7               	movlw	-9
 33953  01E214  006F FF8C  F033    	movff	plusw1,btemp+9
 33954  01E21A  0EF8               	movlw	-8
 33955  01E21C  006F FF8C  F034    	movff	plusw1,btemp+10
 33956  01E222  0EF9               	movlw	-7
 33957  01E224  006F FF8C  F035    	movff	plusw1,btemp+11
 33958                           
 33959                           ;stkvar	_u @ sp[(-6)+0]
 33960  01E22A  0EFA               	movlw	-6
 33961  01E22C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33962  01E232  0EFB               	movlw	-5
 33963  01E234  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 33964  01E23A  0EFC               	movlw	-4
 33965  01E23C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33966  01E242  0EFD               	movlw	-3
 33967  01E244  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33968                           
 33969                           ;stkvar	_u @ sp[(-6)+0]
 33970  01E24A  0EFA               	movlw	-6
 33971  01E24C  006F FF8C  F032    	movff	plusw1,btemp+8
 33972  01E252  0EFB               	movlw	-5
 33973  01E254  006F FF8C  F033    	movff	plusw1,btemp+9
 33974  01E25A  0EFC               	movlw	-4
 33975  01E25C  006F FF8C  F034    	movff	plusw1,btemp+10
 33976  01E262  0EFD               	movlw	-3
 33977  01E264  006F FF8C  F035    	movff	plusw1,btemp+11
 33978  01E26A  0E18               	movlw	24
 33979  01E26C  D005               	goto	u7840
 33980  01E26E                     u7845:
 33981  01E26E  90D8               	bcf	status,0,c
 33982  01E270  3235               	rrcf	(btemp+11)^0,f,c
 33983  01E272  3234               	rrcf	(btemp+10)^0,f,c
 33984  01E274  3233               	rrcf	(btemp+9)^0,f,c
 33985  01E276  3232               	rrcf	(btemp+8)^0,f,c
 33986  01E278                     u7840:
 33987  01E278  2EE8               	decfsz	wreg,f,c
 33988  01E27A  D7F9               	goto	u7845
 33989  01E27C  0060  F0C8  F030   	movff	btemp+8,btemp+6
 33990  01E282  0060  F0CC  F031   	movff	btemp+9,btemp+7
 33991  01E288  0EFF               	movlw	255
 33992  01E28A  1630               	andwf	(btemp+6)^0,f,c
 33993  01E28C  0E00               	movlw	0
 33994  01E28E  1631               	andwf	(btemp+7)^0,f,c
 33995                           
 33996                           ;stkvar	_e @ sp[(-6)+4]
 33997  01E290  0EFE               	movlw	-2
 33998  01E292  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 33999  01E298  0EFF               	movlw	-1
 34000  01E29A  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 34001                           
 34002                           ;stkvar	_e @ sp[(-6)+4]
 34003  01E2A0  0EFE               	movlw	-2
 34004  01E2A2  006F FF8C  F02A    	movff	plusw1,btemp
 34005  01E2A8  0EFF               	movlw	-1
 34006  01E2AA  50E3               	movf	plusw1,w,c
 34007  01E2AC  102A               	iorwf	btemp^0,w,c
 34008  01E2AE  A4D8               	btfss	status,2,c
 34009  01E2B0  D023               	goto	l10191
 34010                           
 34011                           ;stkvar	_u @ sp[(-6)+0]
 34012  01E2B2  0EFA               	movlw	-6
 34013  01E2B4  006F FF8C  F032    	movff	plusw1,btemp+8
 34014  01E2BA  0EFB               	movlw	-5
 34015  01E2BC  006F FF8C  F033    	movff	plusw1,btemp+9
 34016  01E2C2  0EFC               	movlw	-4
 34017  01E2C4  006F FF8C  F034    	movff	plusw1,btemp+10
 34018  01E2CA  0EFD               	movlw	-3
 34019  01E2CC  006F FF8C  F035    	movff	plusw1,btemp+11
 34020  01E2D2  90D8               	bcf	status,0,c
 34021  01E2D4  3432               	rlcf	(btemp+8)^0,w,c
 34022  01E2D6  6E2E               	movwf	(btemp+4)^0,c
 34023  01E2D8  3433               	rlcf	(btemp+9)^0,w,c
 34024  01E2DA  6E2F               	movwf	(btemp+5)^0,c
 34025  01E2DC  3434               	rlcf	(btemp+10)^0,w,c
 34026  01E2DE  6E30               	movwf	(btemp+6)^0,c
 34027  01E2E0  3435               	rlcf	(btemp+11)^0,w,c
 34028  01E2E2  6E31               	movwf	(btemp+7)^0,c
 34029  01E2E4  502E               	movf	(btemp+4)^0,w,c
 34030  01E2E6  102F               	iorwf	(btemp+5)^0,w,c
 34031  01E2E8  1030               	iorwf	(btemp+6)^0,w,c
 34032  01E2EA  1031               	iorwf	(btemp+7)^0,w,c
 34033  01E2EC  A4D8               	btfss	status,2,c
 34034  01E2EE  D002               	goto	l10187
 34035  01E2F0  0E02               	movlw	2
 34036  01E2F2  D02E               	goto	L37
 34037  01E2F4                     l10187:
 34038  01E2F4  0E03               	movlw	3
 34039  01E2F6  D02C               	goto	L37
 34040  01E2F8                     l10191:
 34041                           
 34042                           ;stkvar	_e @ sp[(-6)+4]
 34043  01E2F8  0EFE               	movlw	-2
 34044  01E2FA  28E3               	incf	plusw1,w,c
 34045  01E2FC  E128               	bnz	l10197
 34046  01E2FE  0EFF               	movlw	-1
 34047  01E300  50E3               	movf	plusw1,w,c
 34048  01E302  A4D8               	btfss	status,2,c
 34049  01E304  D024               	goto	l10197
 34050                           
 34051                           ;stkvar	_u @ sp[(-6)+0]
 34052  01E306  0EFA               	movlw	-6
 34053  01E308  006F FF8C  F032    	movff	plusw1,btemp+8
 34054  01E30E  0EFB               	movlw	-5
 34055  01E310  006F FF8C  F033    	movff	plusw1,btemp+9
 34056  01E316  0EFC               	movlw	-4
 34057  01E318  006F FF8C  F034    	movff	plusw1,btemp+10
 34058  01E31E  0EFD               	movlw	-3
 34059  01E320  006F FF8C  F035    	movff	plusw1,btemp+11
 34060  01E326  0E09               	movlw	9
 34061  01E328                     u7885:
 34062  01E328  90D8               	bcf	status,0,c
 34063  01E32A  3632               	rlcf	(btemp+8)^0,f,c
 34064  01E32C  3633               	rlcf	(btemp+9)^0,f,c
 34065  01E32E  3634               	rlcf	(btemp+10)^0,f,c
 34066  01E330  3635               	rlcf	(btemp+11)^0,f,c
 34067  01E332  2EE8               	decfsz	wreg,f,c
 34068  01E334  D7F9               	goto	u7885
 34069  01E336  5032               	movf	(btemp+8)^0,w,c
 34070  01E338  1033               	iorwf	(btemp+9)^0,w,c
 34071  01E33A  1034               	iorwf	(btemp+10)^0,w,c
 34072  01E33C  1035               	iorwf	(btemp+11)^0,w,c
 34073  01E33E  A4D8               	btfss	status,2,c
 34074  01E340  D002               	goto	u7890
 34075  01E342  0E01               	movlw	1
 34076  01E344  D001               	goto	u7900
 34077  01E346                     u7890:
 34078  01E346  0E00               	movlw	0
 34079  01E348                     u7900:
 34080  01E348  6E2A               	movwf	btemp^0,c
 34081  01E34A  6A2B               	clrf	(btemp+1)^0,c
 34082  01E34C  D004               	goto	l3414
 34083  01E34E                     l10197:
 34084  01E34E  0E04               	movlw	4
 34085  01E350                     L37:
 34086  01E350  6E2A               	movwf	btemp^0,c
 34087  01E352  0E00               	movlw	0
 34088  01E354  6E2B               	movwf	(btemp+1)^0,c
 34089  01E356                     l3414:
 34090                           
 34091                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 34092  01E356  0EF6               	movlw	246
 34093  01E358  26E1               	addwf	fsr1l,f,c
 34094  01E35A  0EFF               	movlw	255
 34095  01E35C  22E2               	addwfc	fsr1h,f,c
 34096  01E35E  0012               	return		;funcret
 34097  01E360                     __end_of___fpclassifyf:
 34098                           	opt callstack 0
 34099                           
 34100 ;; *************** function ___fltol *****************
 34101 ;; Defined at:
 34102 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 34103 ;; Parameters:    Size  Location     Type
 34104 ;;  f1              4  [STACK] int 
 34105 ;; Auto vars:     Size  Location     Type
 34106 ;;  exp1            1  [STACK] unsigned char 
 34107 ;;  sign1           1  [STACK] unsigned char 
 34108 ;; Return value:  Size  Location     Type
 34109 ;;                  4  [STACK] long 
 34110 ;; Registers used:
 34111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 34112 ;; Tracked objects:
 34113 ;;		On entry : 0/0
 34114 ;;		On exit  : 0/0
 34115 ;;		Unchanged: 0/0
 34116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34121 ;;Total ram usage:        0 bytes
 34122 ;; Hardware stack levels used:    1
 34123 ;; Hardware stack levels required when called:   15
 34124 ;; This function calls:
 34125 ;;		Nothing
 34126 ;; This function is called by:
 34127 ;;		_main
 34128 ;;		_convert_dac_raw
 34129 ;;		_load_hist_data
 34130 ;;		_calc_bsoc
 34131 ;;		_init_bsoc
 34132 ;;		_efgtoa
 34133 ;; This function uses a reentrant model
 34134 ;;
 34135                           
 34136                           	psect	text111
 34137  01EAFA                     __ptext111:
 34138                           	opt callstack 0
 34139  01EAFA                     ___fltol:
 34140                           	opt callstack 0
 34141                           
 34142                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34143  01EAFA  52E6               	movf	postinc1,f,c
 34144  01EAFC  52E6               	movf	postinc1,f,c
 34145                           
 34146                           ;stkvar	_f1 @ sp[(-2)+-4]
 34147                           
 34148                           ;incstack = 0
 34149 ;; hardware stack exceeded
 34150  01EAFE  0EFA               	movlw	-6
 34151  01EB00  006F FF8C  F032    	movff	plusw1,btemp+8
 34152  01EB06  0EFB               	movlw	-5
 34153  01EB08  006F FF8C  F033    	movff	plusw1,btemp+9
 34154  01EB0E  0EFC               	movlw	-4
 34155  01EB10  006F FF8C  F034    	movff	plusw1,btemp+10
 34156  01EB16  0EFD               	movlw	-3
 34157  01EB18  006F FF8C  F035    	movff	plusw1,btemp+11
 34158  01EB1E  0E18               	movlw	24
 34159  01EB20  D005               	goto	u9110
 34160  01EB22                     u9115:
 34161  01EB22  90D8               	bcf	status,0,c
 34162  01EB24  3235               	rrcf	(btemp+11)^0,f,c
 34163  01EB26  3234               	rrcf	(btemp+10)^0,f,c
 34164  01EB28  3233               	rrcf	(btemp+9)^0,f,c
 34165  01EB2A  3232               	rrcf	(btemp+8)^0,f,c
 34166  01EB2C                     u9110:
 34167  01EB2C  2EE8               	decfsz	wreg,f,c
 34168  01EB2E  D7F9               	goto	u9115
 34169                           
 34170                           ;stkvar	_exp1 @ sp[(-2)+0]
 34171  01EB30  0EFE               	movlw	-2
 34172  01EB32  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 34173  01EB38  0EFE               	movlw	-2
 34174  01EB3A  50E3               	movf	plusw1,w,c
 34175  01EB3C  A4D8               	btfss	status,2,c
 34176  01EB3E  D006               	goto	l10843
 34177  01EB40                     u9120:
 34178  01EB40  0E00               	movlw	0
 34179  01EB42  6E2A               	movwf	btemp^0,c
 34180  01EB44  6A2B               	clrf	(btemp+1)^0,c
 34181  01EB46  6A2C               	clrf	(btemp+2)^0,c
 34182  01EB48  6A2D               	clrf	(btemp+3)^0,c
 34183  01EB4A  D08B               	goto	l3030
 34184  01EB4C                     l10843:
 34185                           
 34186                           ;stkvar	_f1 @ sp[(-2)+-4]
 34187  01EB4C  0EFA               	movlw	-6
 34188  01EB4E  006F FF8C  F032    	movff	plusw1,btemp+8
 34189  01EB54  0EFB               	movlw	-5
 34190  01EB56  006F FF8C  F033    	movff	plusw1,btemp+9
 34191  01EB5C  0EFC               	movlw	-4
 34192  01EB5E  006F FF8C  F034    	movff	plusw1,btemp+10
 34193  01EB64  0EFD               	movlw	-3
 34194  01EB66  006F FF8C  F035    	movff	plusw1,btemp+11
 34195  01EB6C  0E20               	movlw	32
 34196  01EB6E  D005               	goto	u9130
 34197  01EB70                     u9135:
 34198  01EB70  90D8               	bcf	status,0,c
 34199  01EB72  3235               	rrcf	(btemp+11)^0,f,c
 34200  01EB74  3234               	rrcf	(btemp+10)^0,f,c
 34201  01EB76  3233               	rrcf	(btemp+9)^0,f,c
 34202  01EB78  3232               	rrcf	(btemp+8)^0,f,c
 34203  01EB7A                     u9130:
 34204  01EB7A  2EE8               	decfsz	wreg,f,c
 34205  01EB7C  D7F9               	goto	u9135
 34206                           
 34207                           ;stkvar	_sign1 @ sp[(-2)+1]
 34208  01EB7E  0EFF               	movlw	-1
 34209  01EB80  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 34210                           
 34211                           ;stkvar	_f1 @ sp[(-2)+-4]
 34212  01EB86  0EFC               	movlw	-4
 34213  01EB88  8EE3               	bsf	plusw1,7,c
 34214                           
 34215                           ;stkvar	_f1 @ sp[(-2)+-4]
 34216  01EB8A  50E1               	movf	fsr1l,w,c
 34217  01EB8C  0FFA               	addlw	-6
 34218  01EB8E  6ED9               	movwf	fsr2l,c
 34219  01EB90  50E2               	movf	fsr1h,w,c
 34220  01EB92  6EDA               	movwf	fsr2h,c
 34221  01EB94  0EFF               	movlw	255
 34222  01EB96  22DA               	addwfc	fsr2h,f,c
 34223  01EB98  0EFF               	movlw	255
 34224  01EB9A  16DE               	andwf	postinc2,f,c
 34225  01EB9C  0EFF               	movlw	255
 34226  01EB9E  16DE               	andwf	postinc2,f,c
 34227  01EBA0  0EFF               	movlw	255
 34228  01EBA2  16DE               	andwf	postinc2,f,c
 34229  01EBA4  0E00               	movlw	0
 34230  01EBA6  16DE               	andwf	postinc2,f,c
 34231                           
 34232                           ;stkvar	_exp1 @ sp[(-2)+0]
 34233  01EBA8  0EFE               	movlw	-2
 34234  01EBAA  006F FF8C  F02A    	movff	plusw1,btemp
 34235  01EBB0  0E96               	movlw	150
 34236  01EBB2  5E2A               	subwf	btemp^0,f,c
 34237  01EBB4  0EFE               	movlw	-2
 34238  01EBB6  0060  F0AB  FFE3   	movff	btemp,plusw1
 34239                           
 34240                           ;stkvar	_exp1 @ sp[(-2)+0]
 34241  01EBBC  0EFE               	movlw	-2
 34242  01EBBE  AEE3               	btfss	plusw1,7,c
 34243  01EBC0  D014               	goto	l10861
 34244                           
 34245                           ;stkvar	_exp1 @ sp[(-2)+0]
 34246  01EBC2  0EFE               	movlw	-2
 34247  01EBC4  50E3               	movf	plusw1,w,c
 34248  01EBC6  0A80               	xorlw	128
 34249  01EBC8  0F97               	addlw	151
 34250  01EBCA  A0D8               	btfss	status,0,c
 34251  01EBCC  D7B9               	goto	u9120
 34252  01EBCE                     l10859:
 34253                           
 34254                           ;stkvar	_f1 @ sp[(-2)+-4]
 34255  01EBCE  90D8               	bcf	status,0,c
 34256  01EBD0  0EFD               	movlw	-3
 34257  01EBD2  32E3               	rrcf	plusw1,f,c
 34258  01EBD4  0EFC               	movlw	-4
 34259  01EBD6  32E3               	rrcf	plusw1,f,c
 34260  01EBD8  0EFB               	movlw	-5
 34261  01EBDA  32E3               	rrcf	plusw1,f,c
 34262  01EBDC  0EFA               	movlw	-6
 34263  01EBDE  32E3               	rrcf	plusw1,f,c
 34264                           
 34265                           ;stkvar	_exp1 @ sp[(-2)+0]
 34266  01EBE0  0EFE               	movlw	-2
 34267  01EBE2  2AE3               	incf	plusw1,f,c
 34268  01EBE4  B4D8               	btfsc	status,2,c
 34269  01EBE6  D018               	goto	u9180
 34270  01EBE8  D7F2               	goto	l10859
 34271  01EBEA                     l10861:
 34272                           
 34273                           ;stkvar	_exp1 @ sp[(-2)+0]
 34274  01EBEA  0EFE               	movlw	-2
 34275  01EBEC  006F FF8C  F02A    	movff	plusw1,btemp
 34276  01EBF2  0E1F               	movlw	31
 34277  01EBF4  642A               	cpfsgt	btemp^0,c
 34278  01EBF6  D00C               	goto	l10869
 34279  01EBF8  D7A3               	goto	u9120
 34280  01EBFA                     l10867:
 34281                           
 34282                           ;stkvar	_f1 @ sp[(-2)+-4]
 34283  01EBFA  90D8               	bcf	status,0,c
 34284  01EBFC  0EFA               	movlw	-6
 34285  01EBFE  36E3               	rlcf	plusw1,f,c
 34286  01EC00  0EFB               	movlw	-5
 34287  01EC02  36E3               	rlcf	plusw1,f,c
 34288  01EC04  0EFC               	movlw	-4
 34289  01EC06  36E3               	rlcf	plusw1,f,c
 34290  01EC08  0EFD               	movlw	-3
 34291  01EC0A  36E3               	rlcf	plusw1,f,c
 34292                           
 34293                           ;stkvar	_exp1 @ sp[(-2)+0]
 34294  01EC0C  0EFE               	movlw	-2
 34295  01EC0E  06E3               	decf	plusw1,f,c
 34296  01EC10                     l10869:
 34297                           
 34298                           ;stkvar	_exp1 @ sp[(-2)+0]
 34299  01EC10  0EFE               	movlw	-2
 34300  01EC12  50E3               	movf	plusw1,w,c
 34301  01EC14  A4D8               	btfss	status,2,c
 34302  01EC16  D7F1               	goto	l10867
 34303  01EC18                     u9180:
 34304                           
 34305                           ;stkvar	_sign1 @ sp[(-2)+1]
 34306  01EC18  0EFF               	movlw	-1
 34307  01EC1A  50E3               	movf	plusw1,w,c
 34308  01EC1C  B4D8               	btfsc	status,2,c
 34309  01EC1E  D011               	goto	u9200
 34310                           
 34311                           ;stkvar	_f1 @ sp[(-2)+-4]
 34312                           ;stkvar	_f1 @ sp[(-2)+-4]
 34313  01EC20  0EFA               	movlw	-6
 34314  01EC22  6CE3               	negf	plusw1,c
 34315  01EC24  0EFB               	movlw	-5
 34316  01EC26  1EE3               	comf	plusw1,f,c
 34317  01EC28  0EFC               	movlw	-4
 34318  01EC2A  1EE3               	comf	plusw1,f,c
 34319  01EC2C  0EFD               	movlw	-3
 34320  01EC2E  1EE3               	comf	plusw1,f,c
 34321  01EC30  E308               	bnc	u9200
 34322  01EC32  0EFB               	movlw	-5
 34323  01EC34  2AE3               	incf	plusw1,f,c
 34324  01EC36  E305               	bnc	u9200
 34325  01EC38  0EFC               	movlw	-4
 34326  01EC3A  2AE3               	incf	plusw1,f,c
 34327  01EC3C  E302               	bnc	u9200
 34328  01EC3E  0EFD               	movlw	-3
 34329  01EC40  2AE3               	incf	plusw1,f,c
 34330  01EC42                     u9200:
 34331                           
 34332                           ;stkvar	_f1 @ sp[(-2)+-4]
 34333  01EC42  0EFA               	movlw	-6
 34334  01EC44  006F FF8C  F02A    	movff	plusw1,btemp
 34335  01EC4A  0EFB               	movlw	-5
 34336  01EC4C  006F FF8C  F02B    	movff	plusw1,btemp+1
 34337  01EC52  0EFC               	movlw	-4
 34338  01EC54  006F FF8C  F02C    	movff	plusw1,btemp+2
 34339  01EC5A  0EFD               	movlw	-3
 34340  01EC5C  006F FF8C  F02D    	movff	plusw1,btemp+3
 34341  01EC62                     l3030:
 34342                           
 34343                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 34344  01EC62  0EFA               	movlw	250
 34345  01EC64  26E1               	addwf	fsr1l,f,c
 34346  01EC66  0EFF               	movlw	255
 34347  01EC68  22E2               	addwfc	fsr1h,f,c
 34348  01EC6A  0012               	return		;funcret
 34349  01EC6C                     __end_of___fltol:
 34350                           	opt callstack 0
 34351                           
 34352 ;; *************** function ___flneg *****************
 34353 ;; Defined at:
 34354 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 34355 ;; Parameters:    Size  Location     Type
 34356 ;;  f1              4  [STACK] long 
 34357 ;; Auto vars:     Size  Location     Type
 34358 ;;		None
 34359 ;; Return value:  Size  Location     Type
 34360 ;;                  4  [STACK] long 
 34361 ;; Registers used:
 34362 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 34363 ;; Tracked objects:
 34364 ;;		On entry : 0/0
 34365 ;;		On exit  : 0/0
 34366 ;;		Unchanged: 0/0
 34367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34372 ;;Total ram usage:        0 bytes
 34373 ;; Hardware stack levels used:    1
 34374 ;; Hardware stack levels required when called:   15
 34375 ;; This function calls:
 34376 ;;		Nothing
 34377 ;; This function is called by:
 34378 ;;		_calc_bsoc
 34379 ;;		_efgtoa
 34380 ;; This function uses a reentrant model
 34381 ;;
 34382                           
 34383                           	psect	text112
 34384  00219A                     __ptext112:
 34385                           	opt callstack 0
 34386  00219A                     ___flneg:
 34387                           	opt callstack 0
 34388                           
 34389                           ;stkvar	_f1 @ sp[(0)+-4]
 34390                           
 34391                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34392                           ;incstack = 0
 34393 ;; hardware stack exceeded
 34394  00219A  0EFC               	movlw	-4
 34395  00219C  50E3               	movf	plusw1,w,c
 34396  00219E  E10A               	bnz	u9100
 34397  0021A0  0EFD               	movlw	-3
 34398  0021A2  50E3               	movf	plusw1,w,c
 34399  0021A4  E107               	bnz	u9100
 34400  0021A6  0EFE               	movlw	-2
 34401  0021A8  50E3               	movf	plusw1,w,c
 34402  0021AA  E104               	bnz	u9100
 34403  0021AC  0EFF               	movlw	-1
 34404  0021AE  50E3               	movf	plusw1,w,c
 34405  0021B0  B4D8               	btfsc	status,2,c
 34406  0021B2  D002               	goto	l10833
 34407  0021B4                     u9100:
 34408                           
 34409                           ;stkvar	_f1 @ sp[(0)+-4]
 34410  0021B4  0EFF               	movlw	-1
 34411  0021B6  7EE3               	btg	plusw1,7,c
 34412  0021B8                     l10833:
 34413                           
 34414                           ;stkvar	_f1 @ sp[(0)+-4]
 34415  0021B8  0EFC               	movlw	-4
 34416  0021BA  006F FF8C  F02A    	movff	plusw1,btemp
 34417  0021C0  0EFD               	movlw	-3
 34418  0021C2  006F FF8C  F02B    	movff	plusw1,btemp+1
 34419  0021C8  0EFE               	movlw	-2
 34420  0021CA  006F FF8C  F02C    	movff	plusw1,btemp+2
 34421  0021D0  0EFF               	movlw	-1
 34422  0021D2  006F FF8C  F02D    	movff	plusw1,btemp+3
 34423                           
 34424                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 34425  0021D8  52E5               	movf	postdec1,f,c
 34426  0021DA  52E5               	movf	postdec1,f,c
 34427  0021DC  52E5               	movf	postdec1,f,c
 34428  0021DE  52E5               	movf	postdec1,f,c
 34429  0021E0  0012               	return		;funcret
 34430  0021E2                     __end_of___flneg:
 34431                           	opt callstack 0
 34432                           
 34433 ;; *************** function ___fleq *****************
 34434 ;; Defined at:
 34435 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 34436 ;; Parameters:    Size  Location     Type
 34437 ;;  ff1             4  [STACK] long 
 34438 ;;  ff2             4  [STACK] long 
 34439 ;; Auto vars:     Size  Location     Type
 34440 ;;		None
 34441 ;; Return value:  Size  Location     Type
 34442 ;;		None               void
 34443 ;; Registers used:
 34444 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 34445 ;; Tracked objects:
 34446 ;;		On entry : 0/0
 34447 ;;		On exit  : 0/0
 34448 ;;		Unchanged: 0/0
 34449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34454 ;;Total ram usage:        0 bytes
 34455 ;; Hardware stack levels used:    1
 34456 ;; Hardware stack levels required when called:   15
 34457 ;; This function calls:
 34458 ;;		Nothing
 34459 ;; This function is called by:
 34460 ;;		_efgtoa
 34461 ;; This function uses a reentrant model
 34462 ;;
 34463                           
 34464                           	psect	text113
 34465  000916                     __ptext113:
 34466                           	opt callstack 0
 34467  000916                     ___fleq:
 34468                           	opt callstack 0
 34469                           
 34470                           ;stkvar	_ff1 @ sp[(0)+-4]
 34471                           
 34472                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34473                           ;incstack = 0
 34474 ;; hardware stack exceeded
 34475  000916  50E1               	movf	fsr1l,w,c
 34476  000918  0FFC               	addlw	-4
 34477  00091A  6ED9               	movwf	fsr2l,c
 34478  00091C  50E2               	movf	fsr1h,w,c
 34479  00091E  6EDA               	movwf	fsr2h,c
 34480  000920  0EFF               	movlw	255
 34481  000922  22DA               	addwfc	fsr2h,f,c
 34482  000924  0E00               	movlw	0
 34483  000926  14DE               	andwf	postinc2,w,c
 34484  000928  6E32               	movwf	(btemp+8)^0,c
 34485  00092A  0E00               	movlw	0
 34486  00092C  14DE               	andwf	postinc2,w,c
 34487  00092E  6E33               	movwf	(btemp+9)^0,c
 34488  000930  0E80               	movlw	128
 34489  000932  14DE               	andwf	postinc2,w,c
 34490  000934  6E34               	movwf	(btemp+10)^0,c
 34491  000936  0E7F               	movlw	127
 34492  000938  14DE               	andwf	postinc2,w,c
 34493  00093A  6E35               	movwf	(btemp+11)^0,c
 34494  00093C  5032               	movf	(btemp+8)^0,w,c
 34495  00093E  1033               	iorwf	(btemp+9)^0,w,c
 34496  000940  1034               	iorwf	(btemp+10)^0,w,c
 34497  000942  1035               	iorwf	(btemp+11)^0,w,c
 34498  000944  A4D8               	btfss	status,2,c
 34499  000946  D008               	goto	l10791
 34500                           
 34501                           ;stkvar	_ff1 @ sp[(0)+-4]
 34502  000948  0EFC               	movlw	-4
 34503  00094A  6AE3               	clrf	plusw1,c
 34504  00094C  0EFD               	movlw	-3
 34505  00094E  6AE3               	clrf	plusw1,c
 34506  000950  0EFE               	movlw	-2
 34507  000952  6AE3               	clrf	plusw1,c
 34508  000954  0EFF               	movlw	-1
 34509  000956  6AE3               	clrf	plusw1,c
 34510  000958                     l10791:
 34511                           
 34512                           ;stkvar	_ff2 @ sp[(0)+-8]
 34513  000958  50E1               	movf	fsr1l,w,c
 34514  00095A  0FF8               	addlw	-8
 34515  00095C  6ED9               	movwf	fsr2l,c
 34516  00095E  50E2               	movf	fsr1h,w,c
 34517  000960  6EDA               	movwf	fsr2h,c
 34518  000962  0EFF               	movlw	255
 34519  000964  22DA               	addwfc	fsr2h,f,c
 34520  000966  0E00               	movlw	0
 34521  000968  14DE               	andwf	postinc2,w,c
 34522  00096A  6E32               	movwf	(btemp+8)^0,c
 34523  00096C  0E00               	movlw	0
 34524  00096E  14DE               	andwf	postinc2,w,c
 34525  000970  6E33               	movwf	(btemp+9)^0,c
 34526  000972  0E80               	movlw	128
 34527  000974  14DE               	andwf	postinc2,w,c
 34528  000976  6E34               	movwf	(btemp+10)^0,c
 34529  000978  0E7F               	movlw	127
 34530  00097A  14DE               	andwf	postinc2,w,c
 34531  00097C  6E35               	movwf	(btemp+11)^0,c
 34532  00097E  5032               	movf	(btemp+8)^0,w,c
 34533  000980  1033               	iorwf	(btemp+9)^0,w,c
 34534  000982  1034               	iorwf	(btemp+10)^0,w,c
 34535  000984  1035               	iorwf	(btemp+11)^0,w,c
 34536  000986  A4D8               	btfss	status,2,c
 34537  000988  D008               	goto	l10795
 34538                           
 34539                           ;stkvar	_ff2 @ sp[(0)+-8]
 34540  00098A  0EF8               	movlw	-8
 34541  00098C  6AE3               	clrf	plusw1,c
 34542  00098E  0EF9               	movlw	-7
 34543  000990  6AE3               	clrf	plusw1,c
 34544  000992  0EFA               	movlw	-6
 34545  000994  6AE3               	clrf	plusw1,c
 34546  000996  0EFB               	movlw	-5
 34547  000998  6AE3               	clrf	plusw1,c
 34548  00099A                     l10795:
 34549                           
 34550                           ;stkvar	_ff2 @ sp[(0)+-8]
 34551                           ;stkvar	_ff1 @ sp[(0)+-4]
 34552  00099A  50E1               	movf	fsr1l,w,c
 34553  00099C  0FFC               	addlw	-4
 34554  00099E  6ED9               	movwf	fsr2l,c
 34555  0009A0  50E2               	movf	fsr1h,w,c
 34556  0009A2  6EDA               	movwf	fsr2h,c
 34557  0009A4  0EFF               	movlw	255
 34558  0009A6  22DA               	addwfc	fsr2h,f,c
 34559  0009A8  0EF8               	movlw	-8
 34560  0009AA  50E3               	movf	plusw1,w,c
 34561  0009AC  18DE               	xorwf	postinc2,w,c
 34562  0009AE  E10D               	bnz	u9040
 34563  0009B0  0EF9               	movlw	-7
 34564  0009B2  50E3               	movf	plusw1,w,c
 34565  0009B4  18DE               	xorwf	postinc2,w,c
 34566  0009B6  E109               	bnz	u9040
 34567  0009B8  0EFA               	movlw	-6
 34568  0009BA  50E3               	movf	plusw1,w,c
 34569  0009BC  18DE               	xorwf	postinc2,w,c
 34570  0009BE  E105               	bnz	u9040
 34571  0009C0  0EFB               	movlw	-5
 34572  0009C2  50E3               	movf	plusw1,w,c
 34573  0009C4  18DE               	xorwf	postinc2,w,c
 34574  0009C6  B4D8               	btfsc	status,2,c
 34575  0009C8  D002               	goto	l10799
 34576  0009CA                     u9040:
 34577  0009CA  902A               	bcf	btemp& (0+255),0,c
 34578  0009CC  D001               	goto	l2992
 34579  0009CE                     l10799:
 34580  0009CE  802A               	bsf	btemp& (0+255),0,c
 34581  0009D0                     l2992:
 34582                           
 34583                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 34584  0009D0  0EF8               	movlw	248
 34585  0009D2  26E1               	addwf	fsr1l,f,c
 34586  0009D4  0EFF               	movlw	255
 34587  0009D6  22E2               	addwfc	fsr1h,f,c
 34588  0009D8  0012               	return		;funcret
 34589  0009DA                     __end_of___fleq:
 34590                           	opt callstack 0
 34591                           
 34592 ;; *************** function ___awmod *****************
 34593 ;; Defined at:
 34594 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 34595 ;; Parameters:    Size  Location     Type
 34596 ;;  dividend        2  [STACK] int 
 34597 ;;  divisor         2  [STACK] int 
 34598 ;; Auto vars:     Size  Location     Type
 34599 ;;  sign            1  [STACK] unsigned char 
 34600 ;;  counter         1  [STACK] unsigned char 
 34601 ;; Return value:  Size  Location     Type
 34602 ;;                  2  [STACK] int 
 34603 ;; Registers used:
 34604 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 34605 ;; Tracked objects:
 34606 ;;		On entry : 0/3
 34607 ;;		On exit  : 0/0
 34608 ;;		Unchanged: 0/0
 34609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34614 ;;Total ram usage:        0 bytes
 34615 ;; Hardware stack levels used:    1
 34616 ;; Hardware stack levels required when called:   15
 34617 ;; This function calls:
 34618 ;;		Nothing
 34619 ;; This function is called by:
 34620 ;;		_efgtoa
 34621 ;;		_asctime
 34622 ;; This function uses a reentrant model
 34623 ;;
 34624                           
 34625                           	psect	text114
 34626  01FD06                     __ptext114:
 34627                           	opt callstack 0
 34628  01FD06                     ___awmod:
 34629                           	opt callstack 0
 34630                           
 34631                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34632  01FD06  52E6               	movf	postinc1,f,c
 34633  01FD08  52E6               	movf	postinc1,f,c
 34634                           
 34635                           ;stkvar	_sign @ sp[(-2)+0]
 34636                           
 34637                           ;incstack = 0
 34638 ;; hardware stack exceeded
 34639  01FD0A  0EFE               	movlw	-2
 34640  01FD0C  6AE3               	clrf	plusw1,c
 34641                           
 34642                           ;stkvar	_dividend @ sp[(-2)+-2]
 34643  01FD0E  0EFD               	movlw	-3
 34644  01FD10  AEE3               	btfss	plusw1,7,c
 34645  01FD12  D009               	goto	l15685
 34646                           
 34647                           ;stkvar	_dividend @ sp[(-2)+-2]
 34648                           ;stkvar	_dividend @ sp[(-2)+-2]
 34649  01FD14  0EFC               	movlw	-4
 34650  01FD16  6CE3               	negf	plusw1,c
 34651  01FD18  0EFD               	movlw	-3
 34652  01FD1A  1EE3               	comf	plusw1,f,c
 34653  01FD1C  B0D8               	btfsc	status,0,c
 34654  01FD1E  2AE3               	incf	plusw1,f,c
 34655                           
 34656                           ;stkvar	_sign @ sp[(-2)+0]
 34657  01FD20  0EFE               	movlw	-2
 34658  01FD22  6AE3               	clrf	plusw1,c
 34659  01FD24  2AE3               	incf	plusw1,f,c
 34660  01FD26                     l15685:
 34661                           
 34662                           ;stkvar	_divisor @ sp[(-2)+-4]
 34663  01FD26  0EFB               	movlw	-5
 34664  01FD28  AEE3               	btfss	plusw1,7,c
 34665  01FD2A  D006               	goto	l15689
 34666                           
 34667                           ;stkvar	_divisor @ sp[(-2)+-4]
 34668                           ;stkvar	_divisor @ sp[(-2)+-4]
 34669  01FD2C  0EFA               	movlw	-6
 34670  01FD2E  6CE3               	negf	plusw1,c
 34671  01FD30  0EFB               	movlw	-5
 34672  01FD32  1EE3               	comf	plusw1,f,c
 34673  01FD34  B0D8               	btfsc	status,0,c
 34674  01FD36  2AE3               	incf	plusw1,f,c
 34675  01FD38                     l15689:
 34676                           
 34677                           ;stkvar	_divisor @ sp[(-2)+-4]
 34678  01FD38  0EFA               	movlw	-6
 34679  01FD3A  006F FF8C  F02A    	movff	plusw1,btemp
 34680  01FD40  0EFB               	movlw	-5
 34681  01FD42  50E3               	movf	plusw1,w,c
 34682  01FD44  102A               	iorwf	btemp^0,w,c
 34683  01FD46  B4D8               	btfsc	status,2,c
 34684  01FD48  D053               	goto	u14680
 34685                           
 34686                           ;stkvar	_counter @ sp[(-2)+1]
 34687  01FD4A  0EFF               	movlw	-1
 34688  01FD4C  6AE3               	clrf	plusw1,c
 34689  01FD4E  D012               	goto	L38
 34690  01FD50                     l15693:
 34691                           
 34692                           ;stkvar	_divisor @ sp[(-2)+-4]
 34693  01FD50  0EFA               	movlw	-6
 34694  01FD52  50E3               	movf	plusw1,w,c
 34695  01FD54  90D8               	bcf	status,0,c
 34696  01FD56  34E8               	rlcf	wreg,w,c
 34697  01FD58  6E2A               	movwf	btemp^0,c
 34698  01FD5A  0EFA               	movlw	-6
 34699  01FD5C  0060  F0AB  FFE3   	movff	btemp,plusw1
 34700  01FD62  0EFB               	movlw	-5
 34701  01FD64  50E3               	movf	plusw1,w,c
 34702  01FD66  34E8               	rlcf	wreg,w,c
 34703  01FD68  6E2A               	movwf	btemp^0,c
 34704  01FD6A  0EFB               	movlw	-5
 34705  01FD6C  0060  F0AB  FFE3   	movff	btemp,plusw1
 34706                           
 34707                           ;stkvar	_counter @ sp[(-2)+1]
 34708  01FD72  0EFF               	movlw	-1
 34709  01FD74                     L38:
 34710  01FD74  2AE3               	incf	plusw1,f,c
 34711                           
 34712                           ;stkvar	_divisor @ sp[(-2)+-4]
 34713  01FD76  0EFB               	movlw	-5
 34714  01FD78  AEE3               	btfss	plusw1,7,c
 34715  01FD7A  D7EA               	goto	l15693
 34716  01FD7C                     u14660:
 34717                           
 34718                           ;stkvar	_divisor @ sp[(-2)+-4]
 34719  01FD7C  0EFA               	movlw	-6
 34720  01FD7E  006F FF8C  F034    	movff	plusw1,btemp+10
 34721  01FD84  0EFB               	movlw	-5
 34722  01FD86  006F FF8C  F035    	movff	plusw1,btemp+11
 34723                           
 34724                           ;stkvar	_dividend @ sp[(-2)+-2]
 34725  01FD8C  0EFC               	movlw	-4
 34726  01FD8E  006F FF8C  F032    	movff	plusw1,btemp+8
 34727  01FD94  0EFD               	movlw	-3
 34728  01FD96  006F FF8C  F033    	movff	plusw1,btemp+9
 34729  01FD9C  5034               	movf	(btemp+10)^0,w,c
 34730  01FD9E  5C32               	subwf	(btemp+8)^0,w,c
 34731  01FDA0  5035               	movf	(btemp+11)^0,w,c
 34732  01FDA2  5833               	subwfb	(btemp+9)^0,w,c
 34733  01FDA4  A0D8               	btfss	status,0,c
 34734  01FDA6  D014               	goto	l15703
 34735                           
 34736                           ;stkvar	_divisor @ sp[(-2)+-4]
 34737                           ;stkvar	_dividend @ sp[(-2)+-2]
 34738  01FDA8  0EFC               	movlw	-4
 34739  01FDAA  50E3               	movf	plusw1,w,c
 34740  01FDAC  6E2A               	movwf	btemp^0,c
 34741  01FDAE  0EFA               	movlw	-6
 34742  01FDB0  50E3               	movf	plusw1,w,c
 34743  01FDB2  5E2A               	subwf	btemp^0,f,c
 34744  01FDB4  0EFC               	movlw	-4
 34745  01FDB6  0060  F0AB  FFE3   	movff	btemp,plusw1
 34746  01FDBC  0EFD               	movlw	-3
 34747  01FDBE  50E3               	movf	plusw1,w,c
 34748  01FDC0  6E2A               	movwf	btemp^0,c
 34749  01FDC2  0EFB               	movlw	-5
 34750  01FDC4  50E3               	movf	plusw1,w,c
 34751  01FDC6  5A2A               	subwfb	btemp^0,f,c
 34752  01FDC8  0EFD               	movlw	-3
 34753  01FDCA  0060  F0AB  FFE3   	movff	btemp,plusw1
 34754  01FDD0                     l15703:
 34755                           
 34756                           ;stkvar	_divisor @ sp[(-2)+-4]
 34757  01FDD0  90D8               	bcf	status,0,c
 34758  01FDD2  0EFB               	movlw	-5
 34759  01FDD4  32E3               	rrcf	plusw1,f,c
 34760  01FDD6  0EFA               	movlw	-6
 34761  01FDD8  32E3               	rrcf	plusw1,f,c
 34762                           
 34763                           ;stkvar	_counter @ sp[(-2)+1]
 34764  01FDDA  0EFF               	movlw	-1
 34765  01FDDC  50E3               	movf	plusw1,w,c
 34766  01FDDE  6E2A               	movwf	btemp^0,c
 34767  01FDE0  0E01               	movlw	1
 34768  01FDE2  5E2A               	subwf	btemp^0,f,c
 34769  01FDE4  0EFF               	movlw	-1
 34770  01FDE6  0060  F0AB  FFE3   	movff	btemp,plusw1
 34771  01FDEC  A4D8               	btfss	status,2,c
 34772  01FDEE  D7C6               	goto	u14660
 34773  01FDF0                     u14680:
 34774                           
 34775                           ;stkvar	_sign @ sp[(-2)+0]
 34776  01FDF0  0EFE               	movlw	-2
 34777  01FDF2  50E3               	movf	plusw1,w,c
 34778  01FDF4  B4D8               	btfsc	status,2,c
 34779  01FDF6  D006               	goto	l15711
 34780                           
 34781                           ;stkvar	_dividend @ sp[(-2)+-2]
 34782                           ;stkvar	_dividend @ sp[(-2)+-2]
 34783  01FDF8  0EFC               	movlw	-4
 34784  01FDFA  6CE3               	negf	plusw1,c
 34785  01FDFC  0EFD               	movlw	-3
 34786  01FDFE  1EE3               	comf	plusw1,f,c
 34787  01FE00  B0D8               	btfsc	status,0,c
 34788  01FE02  2AE3               	incf	plusw1,f,c
 34789  01FE04                     l15711:
 34790                           
 34791                           ;stkvar	_dividend @ sp[(-2)+-2]
 34792  01FE04  0EFC               	movlw	-4
 34793  01FE06  006F FF8C  F02A    	movff	plusw1,btemp
 34794  01FE0C  0EFD               	movlw	-3
 34795  01FE0E  006F FF8C  F02B    	movff	plusw1,btemp+1
 34796                           
 34797                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 34798  01FE14  0EFA               	movlw	250
 34799  01FE16  26E1               	addwf	fsr1l,f,c
 34800  01FE18  0EFF               	movlw	255
 34801  01FE1A  22E2               	addwfc	fsr1h,f,c
 34802  01FE1C  0012               	return		;funcret
 34803  01FE1E                     __end_of___awmod:
 34804                           	opt callstack 0
 34805                           
 34806 ;; *************** function ___awdiv *****************
 34807 ;; Defined at:
 34808 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 34809 ;; Parameters:    Size  Location     Type
 34810 ;;  dividend        2  [STACK] int 
 34811 ;;  divisor         2  [STACK] int 
 34812 ;; Auto vars:     Size  Location     Type
 34813 ;;  quotient        2  [STACK] int 
 34814 ;;  sign            1  [STACK] unsigned char 
 34815 ;;  counter         1  [STACK] unsigned char 
 34816 ;; Return value:  Size  Location     Type
 34817 ;;                  2  [STACK] int 
 34818 ;; Registers used:
 34819 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 34820 ;; Tracked objects:
 34821 ;;		On entry : 0/3
 34822 ;;		On exit  : 0/0
 34823 ;;		Unchanged: 0/0
 34824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34829 ;;Total ram usage:        0 bytes
 34830 ;; Hardware stack levels used:    1
 34831 ;; Hardware stack levels required when called:   15
 34832 ;; This function calls:
 34833 ;;		Nothing
 34834 ;; This function is called by:
 34835 ;;		_efgtoa
 34836 ;;		_put2d
 34837 ;;		_asctime
 34838 ;;		_scan_trans
 34839 ;; This function uses a reentrant model
 34840 ;;
 34841                           
 34842                           	psect	text115
 34843  01F4A8                     __ptext115:
 34844                           	opt callstack 0
 34845  01F4A8                     ___awdiv:
 34846                           	opt callstack 0
 34847                           
 34848                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34849  01F4A8  52E6               	movf	postinc1,f,c
 34850  01F4AA  52E6               	movf	postinc1,f,c
 34851  01F4AC  52E6               	movf	postinc1,f,c
 34852  01F4AE  52E6               	movf	postinc1,f,c
 34853                           
 34854                           ;stkvar	_sign @ sp[(-4)+2]
 34855                           
 34856                           ;incstack = 0
 34857 ;; hardware stack exceeded
 34858  01F4B0  0EFE               	movlw	-2
 34859  01F4B2  6AE3               	clrf	plusw1,c
 34860                           
 34861                           ;stkvar	_divisor @ sp[(-4)+-4]
 34862  01F4B4  0EF9               	movlw	-7
 34863  01F4B6  AEE3               	btfss	plusw1,7,c
 34864  01F4B8  D009               	goto	l15639
 34865                           
 34866                           ;stkvar	_divisor @ sp[(-4)+-4]
 34867                           ;stkvar	_divisor @ sp[(-4)+-4]
 34868  01F4BA  0EF8               	movlw	-8
 34869  01F4BC  6CE3               	negf	plusw1,c
 34870  01F4BE  0EF9               	movlw	-7
 34871  01F4C0  1EE3               	comf	plusw1,f,c
 34872  01F4C2  B0D8               	btfsc	status,0,c
 34873  01F4C4  2AE3               	incf	plusw1,f,c
 34874                           
 34875                           ;stkvar	_sign @ sp[(-4)+2]
 34876  01F4C6  0EFE               	movlw	-2
 34877  01F4C8  6AE3               	clrf	plusw1,c
 34878  01F4CA  2AE3               	incf	plusw1,f,c
 34879  01F4CC                     l15639:
 34880                           
 34881                           ;stkvar	_dividend @ sp[(-4)+-2]
 34882  01F4CC  0EFB               	movlw	-5
 34883  01F4CE  AEE3               	btfss	plusw1,7,c
 34884  01F4D0  D008               	goto	l15645
 34885                           
 34886                           ;stkvar	_dividend @ sp[(-4)+-2]
 34887                           ;stkvar	_dividend @ sp[(-4)+-2]
 34888  01F4D2  0EFA               	movlw	-6
 34889  01F4D4  6CE3               	negf	plusw1,c
 34890  01F4D6  0EFB               	movlw	-5
 34891  01F4D8  1EE3               	comf	plusw1,f,c
 34892  01F4DA  B0D8               	btfsc	status,0,c
 34893  01F4DC  2AE3               	incf	plusw1,f,c
 34894                           
 34895                           ;stkvar	_sign @ sp[(-4)+2]
 34896  01F4DE  0EFE               	movlw	-2
 34897  01F4E0  70E3               	btg	plusw1,0,c
 34898  01F4E2                     l15645:
 34899                           
 34900                           ;stkvar	_quotient @ sp[(-4)+0]
 34901  01F4E2  0EFC               	movlw	-4
 34902  01F4E4  6AE3               	clrf	plusw1,c
 34903  01F4E6  0EFD               	movlw	-3
 34904  01F4E8  6AE3               	clrf	plusw1,c
 34905                           
 34906                           ;stkvar	_divisor @ sp[(-4)+-4]
 34907  01F4EA  0EF8               	movlw	-8
 34908  01F4EC  006F FF8C  F02A    	movff	plusw1,btemp
 34909  01F4F2  0EF9               	movlw	-7
 34910  01F4F4  50E3               	movf	plusw1,w,c
 34911  01F4F6  102A               	iorwf	btemp^0,w,c
 34912  01F4F8  B4D8               	btfsc	status,2,c
 34913  01F4FA  D066               	goto	u14610
 34914                           
 34915                           ;stkvar	_counter @ sp[(-4)+3]
 34916  01F4FC  0EFF               	movlw	-1
 34917  01F4FE  6AE3               	clrf	plusw1,c
 34918  01F500  D012               	goto	L39
 34919  01F502                     l15651:
 34920                           
 34921                           ;stkvar	_divisor @ sp[(-4)+-4]
 34922  01F502  0EF8               	movlw	-8
 34923  01F504  50E3               	movf	plusw1,w,c
 34924  01F506  90D8               	bcf	status,0,c
 34925  01F508  34E8               	rlcf	wreg,w,c
 34926  01F50A  6E2A               	movwf	btemp^0,c
 34927  01F50C  0EF8               	movlw	-8
 34928  01F50E  0060  F0AB  FFE3   	movff	btemp,plusw1
 34929  01F514  0EF9               	movlw	-7
 34930  01F516  50E3               	movf	plusw1,w,c
 34931  01F518  34E8               	rlcf	wreg,w,c
 34932  01F51A  6E2A               	movwf	btemp^0,c
 34933  01F51C  0EF9               	movlw	-7
 34934  01F51E  0060  F0AB  FFE3   	movff	btemp,plusw1
 34935                           
 34936                           ;stkvar	_counter @ sp[(-4)+3]
 34937  01F524  0EFF               	movlw	-1
 34938  01F526                     L39:
 34939  01F526  2AE3               	incf	plusw1,f,c
 34940                           
 34941                           ;stkvar	_divisor @ sp[(-4)+-4]
 34942  01F528  0EF9               	movlw	-7
 34943  01F52A  AEE3               	btfss	plusw1,7,c
 34944  01F52C  D7EA               	goto	l15651
 34945  01F52E                     u14590:
 34946                           
 34947                           ;stkvar	_quotient @ sp[(-4)+0]
 34948  01F52E  0EFC               	movlw	-4
 34949  01F530  50E3               	movf	plusw1,w,c
 34950  01F532  90D8               	bcf	status,0,c
 34951  01F534  34E8               	rlcf	wreg,w,c
 34952  01F536  6E2A               	movwf	btemp^0,c
 34953  01F538  0EFC               	movlw	-4
 34954  01F53A  0060  F0AB  FFE3   	movff	btemp,plusw1
 34955  01F540  0EFD               	movlw	-3
 34956  01F542  50E3               	movf	plusw1,w,c
 34957  01F544  34E8               	rlcf	wreg,w,c
 34958  01F546  6E2A               	movwf	btemp^0,c
 34959  01F548  0EFD               	movlw	-3
 34960  01F54A  0060  F0AB  FFE3   	movff	btemp,plusw1
 34961                           
 34962                           ;stkvar	_divisor @ sp[(-4)+-4]
 34963  01F550  0EF8               	movlw	-8
 34964  01F552  006F FF8C  F034    	movff	plusw1,btemp+10
 34965  01F558  0EF9               	movlw	-7
 34966  01F55A  006F FF8C  F035    	movff	plusw1,btemp+11
 34967                           
 34968                           ;stkvar	_dividend @ sp[(-4)+-2]
 34969  01F560  0EFA               	movlw	-6
 34970  01F562  006F FF8C  F032    	movff	plusw1,btemp+8
 34971  01F568  0EFB               	movlw	-5
 34972  01F56A  006F FF8C  F033    	movff	plusw1,btemp+9
 34973  01F570  5034               	movf	(btemp+10)^0,w,c
 34974  01F572  5C32               	subwf	(btemp+8)^0,w,c
 34975  01F574  5035               	movf	(btemp+11)^0,w,c
 34976  01F576  5833               	subwfb	(btemp+9)^0,w,c
 34977  01F578  A0D8               	btfss	status,0,c
 34978  01F57A  D016               	goto	l15665
 34979                           
 34980                           ;stkvar	_divisor @ sp[(-4)+-4]
 34981                           ;stkvar	_dividend @ sp[(-4)+-2]
 34982  01F57C  0EFA               	movlw	-6
 34983  01F57E  50E3               	movf	plusw1,w,c
 34984  01F580  6E2A               	movwf	btemp^0,c
 34985  01F582  0EF8               	movlw	-8
 34986  01F584  50E3               	movf	plusw1,w,c
 34987  01F586  5E2A               	subwf	btemp^0,f,c
 34988  01F588  0EFA               	movlw	-6
 34989  01F58A  0060  F0AB  FFE3   	movff	btemp,plusw1
 34990  01F590  0EFB               	movlw	-5
 34991  01F592  50E3               	movf	plusw1,w,c
 34992  01F594  6E2A               	movwf	btemp^0,c
 34993  01F596  0EF9               	movlw	-7
 34994  01F598  50E3               	movf	plusw1,w,c
 34995  01F59A  5A2A               	subwfb	btemp^0,f,c
 34996  01F59C  0EFB               	movlw	-5
 34997  01F59E  0060  F0AB  FFE3   	movff	btemp,plusw1
 34998                           
 34999                           ;stkvar	_quotient @ sp[(-4)+0]
 35000  01F5A4  0EFC               	movlw	-4
 35001  01F5A6  80E3               	bsf	plusw1,0,c
 35002  01F5A8                     l15665:
 35003                           
 35004                           ;stkvar	_divisor @ sp[(-4)+-4]
 35005  01F5A8  90D8               	bcf	status,0,c
 35006  01F5AA  0EF9               	movlw	-7
 35007  01F5AC  32E3               	rrcf	plusw1,f,c
 35008  01F5AE  0EF8               	movlw	-8
 35009  01F5B0  32E3               	rrcf	plusw1,f,c
 35010                           
 35011                           ;stkvar	_counter @ sp[(-4)+3]
 35012  01F5B2  0EFF               	movlw	-1
 35013  01F5B4  50E3               	movf	plusw1,w,c
 35014  01F5B6  6E2A               	movwf	btemp^0,c
 35015  01F5B8  0E01               	movlw	1
 35016  01F5BA  5E2A               	subwf	btemp^0,f,c
 35017  01F5BC  0EFF               	movlw	-1
 35018  01F5BE  0060  F0AB  FFE3   	movff	btemp,plusw1
 35019  01F5C4  A4D8               	btfss	status,2,c
 35020  01F5C6  D7B3               	goto	u14590
 35021  01F5C8                     u14610:
 35022                           
 35023                           ;stkvar	_sign @ sp[(-4)+2]
 35024  01F5C8  0EFE               	movlw	-2
 35025  01F5CA  50E3               	movf	plusw1,w,c
 35026  01F5CC  B4D8               	btfsc	status,2,c
 35027  01F5CE  D006               	goto	l15673
 35028                           
 35029                           ;stkvar	_quotient @ sp[(-4)+0]
 35030                           ;stkvar	_quotient @ sp[(-4)+0]
 35031  01F5D0  0EFC               	movlw	-4
 35032  01F5D2  6CE3               	negf	plusw1,c
 35033  01F5D4  0EFD               	movlw	-3
 35034  01F5D6  1EE3               	comf	plusw1,f,c
 35035  01F5D8  B0D8               	btfsc	status,0,c
 35036  01F5DA  2AE3               	incf	plusw1,f,c
 35037  01F5DC                     l15673:
 35038                           
 35039                           ;stkvar	_quotient @ sp[(-4)+0]
 35040  01F5DC  0EFC               	movlw	-4
 35041  01F5DE  006F FF8C  F02A    	movff	plusw1,btemp
 35042  01F5E4  0EFD               	movlw	-3
 35043  01F5E6  006F FF8C  F02B    	movff	plusw1,btemp+1
 35044                           
 35045                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 35046  01F5EC  0EF8               	movlw	248
 35047  01F5EE  26E1               	addwf	fsr1l,f,c
 35048  01F5F0  0EFF               	movlw	255
 35049  01F5F2  22E2               	addwfc	fsr1h,f,c
 35050  01F5F4  0012               	return		;funcret
 35051  01F5F6                     __end_of___awdiv:
 35052                           	opt callstack 0
 35053                           
 35054 ;; *************** function _dtoa *****************
 35055 ;; Defined at:
 35056 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 35057 ;; Parameters:    Size  Location     Type
 35058 ;;  fp              2  [STACK] PTR struct _IO_FILE
 35059 ;;		 -> f(6), NULL(0), 
 35060 ;;  d               8  [STACK] long long 
 35061 ;; Auto vars:     Size  Location     Type
 35062 ;;  n               8  [STACK] long long 
 35063 ;;  i               2  [STACK] int 
 35064 ;;  s               2  [STACK] int 
 35065 ;;  w               2  [STACK] int 
 35066 ;;  p               2  [STACK] int 
 35067 ;; Return value:  Size  Location     Type
 35068 ;;                  2  [STACK] int 
 35069 ;; Registers used:
 35070 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 35071 ;; Tracked objects:
 35072 ;;		On entry : 0/0
 35073 ;;		On exit  : 0/0
 35074 ;;		Unchanged: 0/0
 35075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35080 ;;Total ram usage:        0 bytes
 35081 ;; Hardware stack levels used:    1
 35082 ;; Hardware stack levels required when called:   20
 35083 ;; This function calls:
 35084 ;;		___aodiv
 35085 ;;		___aomod
 35086 ;;		_abs
 35087 ;;		_pad
 35088 ;; This function is called by:
 35089 ;;		_vfpfcnvrt
 35090 ;; This function uses a reentrant model
 35091 ;;
 35092                           
 35093                           	psect	text116
 35094  0196BC                     __ptext116:
 35095                           	opt callstack 0
 35096  0196BC                     _dtoa:
 35097                           	opt callstack 0
 35098                           
 35099                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 35100  0196BC  0E12               	movlw	18
 35101  0196BE  26E1               	addwf	fsr1l,f,c
 35102  0196C0  0E00               	movlw	0
 35103  0196C2  22E2               	addwfc	fsr1h,f,c
 35104                           
 35105                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 35106                           ;stkvar	_d @ sp[(-18)+-10]
 35107                           
 35108                           ;incstack = 0
 35109 ;; hardware stack exceeded
 35110  0196C4  0EE4               	movlw	228
 35111  0196C6  24E1               	addwf	fsr1l,w,c
 35112  0196C8  6ED9               	movwf	fsr2l,c
 35113  0196CA  0EFF               	movlw	255
 35114  0196CC  20E2               	addwfc	fsr1h,w,c
 35115  0196CE  6EDA               	movwf	fsr2h,c
 35116                           
 35117                           ;stkvar	_n @ sp[(-18)+2]
 35118  0196D0  0E08               	movlw	8
 35119  0196D2  6E2A               	movwf	btemp^0,c
 35120  0196D4  0EF0               	movlw	-16
 35121  0196D6                     us1472999:
 35122  0196D6  006F FF7B FFE3     	movff	postinc2,plusw1
 35123  0196DC  28E8               	incf	wreg,w,c
 35124  0196DE  2E2A               	decfsz	btemp^0,f,c
 35125  0196E0  D7FA               	bra	us1472999
 35126                           
 35127                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 35128                           ;stkvar	_n @ sp[(-18)+2]
 35129  0196E2  0EF7               	movlw	-9
 35130  0196E4  AEE3               	btfss	plusw1,7,c
 35131  0196E6  D002               	goto	u14730
 35132  0196E8  0E01               	movlw	1
 35133  0196EA  D001               	goto	u14740
 35134  0196EC                     u14730:
 35135  0196EC  0E00               	movlw	0
 35136  0196EE                     u14740:
 35137  0196EE  6E34               	movwf	(btemp+10)^0,c
 35138  0196F0  6A35               	clrf	(btemp+11)^0,c
 35139                           
 35140                           ;stkvar	_s @ sp[(-18)+12]
 35141  0196F2  0EFA               	movlw	-6
 35142  0196F4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 35143  0196FA  0EFB               	movlw	-5
 35144  0196FC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 35145                           
 35146                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 35147                           ;stkvar	_s @ sp[(-18)+12]
 35148  019702  0EFA               	movlw	-6
 35149  019704  006F FF8C  F02A    	movff	plusw1,btemp
 35150  01970A  0EFB               	movlw	-5
 35151  01970C  50E3               	movf	plusw1,w,c
 35152  01970E  102A               	iorwf	btemp^0,w,c
 35153  019710  B4D8               	btfsc	status,2,c
 35154  019712  D025               	goto	u14760
 35155                           
 35156                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 35157                           ;stkvar	_n @ sp[(-18)+2]
 35158                           ;stkvar	_n @ sp[(-18)+2]
 35159  019714  0EF0               	movlw	-16
 35160  019716  6CE3               	negf	plusw1,c
 35161  019718  0EF1               	movlw	-15
 35162  01971A  1EE3               	comf	plusw1,f,c
 35163  01971C  0EF2               	movlw	-14
 35164  01971E  1EE3               	comf	plusw1,f,c
 35165  019720  0EF3               	movlw	-13
 35166  019722  1EE3               	comf	plusw1,f,c
 35167  019724  0EF4               	movlw	-12
 35168  019726  1EE3               	comf	plusw1,f,c
 35169  019728  0EF5               	movlw	-11
 35170  01972A  1EE3               	comf	plusw1,f,c
 35171  01972C  0EF6               	movlw	-10
 35172  01972E  1EE3               	comf	plusw1,f,c
 35173  019730  0EF7               	movlw	-9
 35174  019732  1EE3               	comf	plusw1,f,c
 35175  019734  E314               	bnc	u14760
 35176  019736  0EF1               	movlw	-15
 35177  019738  2AE3               	incf	plusw1,f,c
 35178  01973A  E311               	bnc	u14760
 35179  01973C  0EF2               	movlw	-14
 35180  01973E  2AE3               	incf	plusw1,f,c
 35181  019740  E30E               	bnc	u14760
 35182  019742  0EF3               	movlw	-13
 35183  019744  2AE3               	incf	plusw1,f,c
 35184  019746  E30B               	bnc	u14760
 35185  019748  0EF4               	movlw	-12
 35186  01974A  2AE3               	incf	plusw1,f,c
 35187  01974C  E308               	bnc	u14760
 35188  01974E  0EF5               	movlw	-11
 35189  019750  2AE3               	incf	plusw1,f,c
 35190  019752  E305               	bnc	u14760
 35191  019754  0EF6               	movlw	-10
 35192  019756  2AE3               	incf	plusw1,f,c
 35193  019758  E302               	bnc	u14760
 35194  01975A  0EF7               	movlw	-9
 35195  01975C  2AE3               	incf	plusw1,f,c
 35196  01975E                     u14760:
 35197                           
 35198                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 35199  01975E  AE4D               	btfss	(_prec+1)^0,7,c
 35200                           
 35201                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 35202  019760  924E               	bcf	_flags^0,1,c
 35203                           
 35204                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 35205  019762  BE4D               	btfsc	(_prec+1)^0,7,c
 35206  019764  D005               	goto	u14780
 35207  019766  504D               	movf	(_prec+1)^0,w,c
 35208  019768  E110               	bnz	l15751
 35209  01976A  044C               	decf	_prec^0,w,c
 35210  01976C  B0D8               	btfsc	status,0,c
 35211  01976E  D00D               	goto	l15751
 35212  019770                     u14780:
 35213  019770  0E01               	movlw	1
 35214  019772  6E34               	movwf	(btemp+10)^0,c
 35215  019774  0E00               	movlw	0
 35216  019776  6E35               	movwf	(btemp+11)^0,c
 35217                           
 35218                           ;stkvar	_p @ sp[(-18)+16]
 35219  019778  0EFE               	movlw	-2
 35220  01977A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 35221  019780  0EFF               	movlw	-1
 35222  019782  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 35223  019788  D008               	goto	l2496
 35224  01978A                     l15751:
 35225                           
 35226                           ;stkvar	_p @ sp[(-18)+16]
 35227  01978A  0EFE               	movlw	-2
 35228  01978C  0060  F133  FFE3   	movff	_prec,plusw1
 35229  019792  0EFF               	movlw	-1
 35230  019794  0060  F137  FFE3   	movff	_prec+1,plusw1
 35231  01979A                     l2496:
 35232                           
 35233                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 35234                           ;stkvar	_w @ sp[(-18)+14]
 35235  01979A  0EFC               	movlw	-4
 35236  01979C  0060  F12B  FFE3   	movff	_width,plusw1
 35237  0197A2  0EFD               	movlw	-3
 35238  0197A4  0060  F12F  FFE3   	movff	_width+1,plusw1
 35239                           
 35240                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 35241                           ;stkvar	_s @ sp[(-18)+12]
 35242  0197AA  0EFA               	movlw	-6
 35243  0197AC  006F FF8C  F02A    	movff	plusw1,btemp
 35244  0197B2  0EFB               	movlw	-5
 35245  0197B4  50E3               	movf	plusw1,w,c
 35246  0197B6  102A               	iorwf	btemp^0,w,c
 35247  0197B8  A4D8               	btfss	status,2,c
 35248  0197BA  D002               	goto	u14800
 35249  0197BC  A44E               	btfss	_flags^0,2,c
 35250  0197BE  D00A               	goto	l15759
 35251  0197C0                     u14800:
 35252                           
 35253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 35254                           ;stkvar	_w @ sp[(-18)+14]
 35255  0197C0  50E1               	movf	fsr1l,w,c
 35256  0197C2  0FFC               	addlw	-4
 35257  0197C4  6ED9               	movwf	fsr2l,c
 35258  0197C6  50E2               	movf	fsr1h,w,c
 35259  0197C8  6EDA               	movwf	fsr2h,c
 35260  0197CA  0EFF               	movlw	255
 35261  0197CC  22DA               	addwfc	fsr2h,f,c
 35262  0197CE  06DE               	decf	postinc2,f,c
 35263  0197D0  0E00               	movlw	0
 35264  0197D2  5ADD               	subwfb	postdec2,f,c
 35265  0197D4                     l15759:
 35266                           
 35267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 35268  0197D4  0E4F               	movlw	79
 35269  0197D6  6E34               	movwf	(btemp+10)^0,c
 35270  0197D8  0E00               	movlw	0
 35271  0197DA  6E35               	movwf	(btemp+11)^0,c
 35272                           
 35273                           ;stkvar	_i @ sp[(-18)+10]
 35274  0197DC  0EF8               	movlw	-8
 35275  0197DE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 35276  0197E4  0EF9               	movlw	-7
 35277  0197E6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 35278                           
 35279                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 35280  0197EC  0103               	movlb	3	; () banked
 35281  0197EE  6BA3               	clrf	(_dbuf+79)& (0+255),b
 35282                           
 35283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 35284  0197F0  D109               	goto	l15773
 35285  0197F2                     l15763:
 35286                           
 35287                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 35288                           ;stkvar	_i @ sp[(-18)+10]
 35289  0197F2  50E1               	movf	fsr1l,w,c
 35290  0197F4  0FF8               	addlw	-8
 35291  0197F6  6ED9               	movwf	fsr2l,c
 35292  0197F8  50E2               	movf	fsr1h,w,c
 35293  0197FA  6EDA               	movwf	fsr2h,c
 35294  0197FC  0EFF               	movlw	255
 35295  0197FE  22DA               	addwfc	fsr2h,f,c
 35296  019800  06DE               	decf	postinc2,f,c
 35297  019802  0E00               	movlw	0
 35298  019804  5ADD               	subwfb	postdec2,f,c
 35299                           
 35300                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 35301  019806  0E0A               	movlw	10
 35302  019808  6EE6               	movwf	postinc1,c
 35303  01980A  0E00               	movlw	0
 35304  01980C  6EE6               	movwf	postinc1,c
 35305  01980E  0E00               	movlw	0
 35306  019810  6EE6               	movwf	postinc1,c
 35307  019812  0E00               	movlw	0
 35308  019814  6EE6               	movwf	postinc1,c
 35309  019816  0E00               	movlw	0
 35310  019818  6EE6               	movwf	postinc1,c
 35311  01981A  0E00               	movlw	0
 35312  01981C  6EE6               	movwf	postinc1,c
 35313  01981E  0E00               	movlw	0
 35314  019820  6EE6               	movwf	postinc1,c
 35315  019822  0E00               	movlw	0
 35316  019824  6EE6               	movwf	postinc1,c
 35317                           
 35318                           ;stkvar	_n @ sp[(-26)+2]
 35319  019826  50E1               	movf	fsr1l,w,c
 35320  019828  0FE8               	addlw	-24
 35321  01982A  6ED9               	movwf	fsr2l,c
 35322  01982C  50E2               	movf	fsr1h,w,c
 35323  01982E  6EDA               	movwf	fsr2h,c
 35324  019830  0EFF               	movlw	255
 35325  019832  22DA               	addwfc	fsr2h,f,c
 35326  019834  006F FF7B FFE6     	movff	postinc2,postinc1
 35327  01983A  006F FF7B FFE6     	movff	postinc2,postinc1
 35328  019840  006F FF7B FFE6     	movff	postinc2,postinc1
 35329  019846  006F FF7B FFE6     	movff	postinc2,postinc1
 35330  01984C  006F FF7B FFE6     	movff	postinc2,postinc1
 35331  019852  006F FF7B FFE6     	movff	postinc2,postinc1
 35332  019858  006F FF7B FFE6     	movff	postinc2,postinc1
 35333  01985E  006F FF7B FFE6     	movff	postinc2,postinc1
 35334  019864  ECF0  F0E7         	call	___aomod	;wreg free
 35335  019868  52E5               	movf	postdec1,f,c
 35336  01986A  006F FF9C  F041    	movff	indf1,btemp+23
 35337  019870  52E5               	movf	postdec1,f,c
 35338  019872  006F FF9C  F040    	movff	indf1,btemp+22
 35339  019878  52E5               	movf	postdec1,f,c
 35340  01987A  006F FF9C  F03F    	movff	indf1,btemp+21
 35341  019880  52E5               	movf	postdec1,f,c
 35342  019882  006F FF9C  F03E    	movff	indf1,btemp+20
 35343  019888  52E5               	movf	postdec1,f,c
 35344  01988A  006F FF9C  F03D    	movff	indf1,btemp+19
 35345  019890  52E5               	movf	postdec1,f,c
 35346  019892  006F FF9C  F03C    	movff	indf1,btemp+18
 35347  019898  52E5               	movf	postdec1,f,c
 35348  01989A  006F FF9C  F03B    	movff	indf1,btemp+17
 35349  0198A0  52E5               	movf	postdec1,f,c
 35350  0198A2  006F FF9C  F03A    	movff	indf1,btemp+16
 35351  0198A8  0EF8               	movlw	248
 35352  0198AA  26E1               	addwf	fsr1l,f,c
 35353  0198AC  0EFF               	movlw	255
 35354  0198AE  22E2               	addwfc	fsr1h,f,c
 35355  0198B0  0060  F0E8  F034   	movff	btemp+16,btemp+10
 35356  0198B6  0060  F0EC  F035   	movff	btemp+17,btemp+11
 35357  0198BC  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 35358  0198C2  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 35359  0198C8  EC80  F011         	call	_abs	;wreg free
 35360  0198CC  0E30               	movlw	48
 35361  0198CE  262A               	addwf	btemp^0,f,c
 35362                           
 35363                           ;stkvar	_i @ sp[(-18)+10]
 35364  0198D0  0EF8               	movlw	-8
 35365  0198D2  006F FF8C  F034    	movff	plusw1,btemp+10
 35366  0198D8  0EF9               	movlw	-7
 35367  0198DA  006F FF8C  F035    	movff	plusw1,btemp+11
 35368  0198E0  0E54               	movlw	low _dbuf
 35369  0198E2  2434               	addwf	(btemp+10)^0,w,c
 35370  0198E4  6ED9               	movwf	fsr2l,c
 35371  0198E6  0E03               	movlw	high _dbuf
 35372  0198E8  2035               	addwfc	(btemp+11)^0,w,c
 35373  0198EA  6EDA               	movwf	fsr2h,c
 35374  0198EC  0060  F0AB  FFDF   	movff	btemp,indf2
 35375                           
 35376                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 35377                           ;stkvar	_p @ sp[(-18)+16]
 35378  0198F2  50E1               	movf	fsr1l,w,c
 35379  0198F4  0FFE               	addlw	-2
 35380  0198F6  6ED9               	movwf	fsr2l,c
 35381  0198F8  50E2               	movf	fsr1h,w,c
 35382  0198FA  6EDA               	movwf	fsr2h,c
 35383  0198FC  0EFF               	movlw	255
 35384  0198FE  22DA               	addwfc	fsr2h,f,c
 35385  019900  06DE               	decf	postinc2,f,c
 35386  019902  0E00               	movlw	0
 35387  019904  5ADD               	subwfb	postdec2,f,c
 35388                           
 35389                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 35390                           ;stkvar	_w @ sp[(-18)+14]
 35391  019906  50E1               	movf	fsr1l,w,c
 35392  019908  0FFC               	addlw	-4
 35393  01990A  6ED9               	movwf	fsr2l,c
 35394  01990C  50E2               	movf	fsr1h,w,c
 35395  01990E  6EDA               	movwf	fsr2h,c
 35396  019910  0EFF               	movlw	255
 35397  019912  22DA               	addwfc	fsr2h,f,c
 35398  019914  06DE               	decf	postinc2,f,c
 35399  019916  0E00               	movlw	0
 35400  019918  5ADD               	subwfb	postdec2,f,c
 35401                           
 35402                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 35403  01991A  0E0A               	movlw	10
 35404  01991C  6EE6               	movwf	postinc1,c
 35405  01991E  0E00               	movlw	0
 35406  019920  6EE6               	movwf	postinc1,c
 35407  019922  0E00               	movlw	0
 35408  019924  6EE6               	movwf	postinc1,c
 35409  019926  0E00               	movlw	0
 35410  019928  6EE6               	movwf	postinc1,c
 35411  01992A  0E00               	movlw	0
 35412  01992C  6EE6               	movwf	postinc1,c
 35413  01992E  0E00               	movlw	0
 35414  019930  6EE6               	movwf	postinc1,c
 35415  019932  0E00               	movlw	0
 35416  019934  6EE6               	movwf	postinc1,c
 35417  019936  0E00               	movlw	0
 35418  019938  6EE6               	movwf	postinc1,c
 35419                           
 35420                           ;stkvar	_n @ sp[(-26)+2]
 35421  01993A  50E1               	movf	fsr1l,w,c
 35422  01993C  0FE8               	addlw	-24
 35423  01993E  6ED9               	movwf	fsr2l,c
 35424  019940  50E2               	movf	fsr1h,w,c
 35425  019942  6EDA               	movwf	fsr2h,c
 35426  019944  0EFF               	movlw	255
 35427  019946  22DA               	addwfc	fsr2h,f,c
 35428  019948  006F FF7B FFE6     	movff	postinc2,postinc1
 35429  01994E  006F FF7B FFE6     	movff	postinc2,postinc1
 35430  019954  006F FF7B FFE6     	movff	postinc2,postinc1
 35431  01995A  006F FF7B FFE6     	movff	postinc2,postinc1
 35432  019960  006F FF7B FFE6     	movff	postinc2,postinc1
 35433  019966  006F FF7B FFE6     	movff	postinc2,postinc1
 35434  01996C  006F FF7B FFE6     	movff	postinc2,postinc1
 35435  019972  006F FF7B FFE6     	movff	postinc2,postinc1
 35436  019978  EC04  F0E2         	call	___aodiv	;wreg free
 35437  01997C  52E5               	movf	postdec1,f,c
 35438  01997E  006F FF9C  F041    	movff	indf1,btemp+23
 35439  019984  52E5               	movf	postdec1,f,c
 35440  019986  006F FF9C  F040    	movff	indf1,btemp+22
 35441  01998C  52E5               	movf	postdec1,f,c
 35442  01998E  006F FF9C  F03F    	movff	indf1,btemp+21
 35443  019994  52E5               	movf	postdec1,f,c
 35444  019996  006F FF9C  F03E    	movff	indf1,btemp+20
 35445  01999C  52E5               	movf	postdec1,f,c
 35446  01999E  006F FF9C  F03D    	movff	indf1,btemp+19
 35447  0199A4  52E5               	movf	postdec1,f,c
 35448  0199A6  006F FF9C  F03C    	movff	indf1,btemp+18
 35449  0199AC  52E5               	movf	postdec1,f,c
 35450  0199AE  006F FF9C  F03B    	movff	indf1,btemp+17
 35451  0199B4  52E5               	movf	postdec1,f,c
 35452  0199B6  006F FF9C  F03A    	movff	indf1,btemp+16
 35453  0199BC  0EF8               	movlw	248
 35454  0199BE  26E1               	addwf	fsr1l,f,c
 35455  0199C0  0EFF               	movlw	255
 35456  0199C2  22E2               	addwfc	fsr1h,f,c
 35457                           
 35458                           ;stkvar	_n @ sp[(-18)+2]
 35459  0199C4  0EF0               	movlw	-16
 35460  0199C6  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 35461  0199CC  0EF1               	movlw	-15
 35462  0199CE  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 35463  0199D4  0EF2               	movlw	-14
 35464  0199D6  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 35465  0199DC  0EF3               	movlw	-13
 35466  0199DE  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 35467  0199E4  0EF4               	movlw	-12
 35468  0199E6  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 35469  0199EC  0EF5               	movlw	-11
 35470  0199EE  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 35471  0199F4  0EF6               	movlw	-10
 35472  0199F6  0060  F103  FFE3   	movff	btemp+22,plusw1
 35473  0199FC  0EF7               	movlw	-9
 35474  0199FE  0060  F107  FFE3   	movff	btemp+23,plusw1
 35475  019A04                     l15773:
 35476                           
 35477                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 35478                           ;stkvar	_i @ sp[(-18)+10]
 35479  019A04  0EF9               	movlw	-7
 35480  019A06  BEE3               	btfsc	plusw1,7,c
 35481  019A08  D036               	goto	u14850
 35482  019A0A  0EF9               	movlw	-7
 35483  019A0C  50E3               	movf	plusw1,w,c
 35484  019A0E  E104               	bnz	u14810
 35485  019A10  0EF8               	movlw	-8
 35486  019A12  04E3               	decf	plusw1,w,c
 35487  019A14  A0D8               	btfss	status,0,c
 35488  019A16  D02F               	goto	u14850
 35489  019A18                     u14810:
 35490                           
 35491                           ;stkvar	_n @ sp[(-18)+2]
 35492  019A18  0EF0               	movlw	-16
 35493  019A1A  50E3               	movf	plusw1,w,c
 35494  019A1C  E115               	bnz	u14821
 35495  019A1E  0EF1               	movlw	-15
 35496  019A20  50E3               	movf	plusw1,w,c
 35497  019A22  E112               	bnz	u14821
 35498  019A24  0EF2               	movlw	-14
 35499  019A26  50E3               	movf	plusw1,w,c
 35500  019A28  E10F               	bnz	u14821
 35501  019A2A  0EF3               	movlw	-13
 35502  019A2C  50E3               	movf	plusw1,w,c
 35503  019A2E  E10C               	bnz	u14821
 35504  019A30  0EF4               	movlw	-12
 35505  019A32  50E3               	movf	plusw1,w,c
 35506  019A34  E109               	bnz	u14821
 35507  019A36  0EF5               	movlw	-11
 35508  019A38  50E3               	movf	plusw1,w,c
 35509  019A3A  E106               	bnz	u14821
 35510  019A3C  0EF6               	movlw	-10
 35511  019A3E  50E3               	movf	plusw1,w,c
 35512  019A40  E103               	bnz	u14821
 35513  019A42  0EF7               	movlw	-9
 35514  019A44  50E3               	movf	plusw1,w,c
 35515  019A46  A4D8               	btfss	status,2,c
 35516  019A48                     u14821:
 35517  019A48  D6D4               	goto	l15763
 35518                           
 35519                           ;stkvar	_p @ sp[(-18)+16]
 35520  019A4A  0EFF               	movlw	-1
 35521  019A4C  BEE3               	btfsc	plusw1,7,c
 35522  019A4E  D007               	goto	u14830
 35523  019A50  0EFF               	movlw	-1
 35524  019A52  50E3               	movf	plusw1,w,c
 35525  019A54  E103               	bnz	u14831
 35526  019A56  0EFE               	movlw	-2
 35527  019A58  04E3               	decf	plusw1,w,c
 35528  019A5A  B0D8               	btfsc	status,0,c
 35529  019A5C                     u14831:
 35530  019A5C  D6CA               	goto	l15763
 35531  019A5E                     u14830:
 35532                           
 35533                           ;stkvar	_w @ sp[(-18)+14]
 35534  019A5E  0EFD               	movlw	-3
 35535  019A60  BEE3               	btfsc	plusw1,7,c
 35536  019A62  D009               	goto	u14850
 35537  019A64  0EFD               	movlw	-3
 35538  019A66  50E3               	movf	plusw1,w,c
 35539  019A68  E104               	bnz	u14840
 35540  019A6A  0EFC               	movlw	-4
 35541  019A6C  04E3               	decf	plusw1,w,c
 35542  019A6E  A0D8               	btfss	status,0,c
 35543  019A70  D002               	goto	u14850
 35544  019A72                     u14840:
 35545  019A72  B24E               	btfsc	_flags^0,1,c
 35546  019A74  D6BE               	goto	l15763
 35547  019A76                     u14850:
 35548                           
 35549                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 35550                           ;stkvar	_s @ sp[(-18)+12]
 35551  019A76  0EFA               	movlw	-6
 35552  019A78  006F FF8C  F02A    	movff	plusw1,btemp
 35553  019A7E  0EFB               	movlw	-5
 35554  019A80  50E3               	movf	plusw1,w,c
 35555  019A82  102A               	iorwf	btemp^0,w,c
 35556  019A84  A4D8               	btfss	status,2,c
 35557  019A86  D002               	goto	u14870
 35558  019A88  A44E               	btfss	_flags^0,2,c
 35559  019A8A  D033               	goto	l15797
 35560  019A8C                     u14870:
 35561                           
 35562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 35563                           ;stkvar	_i @ sp[(-18)+10]
 35564  019A8C  50E1               	movf	fsr1l,w,c
 35565  019A8E  0FF8               	addlw	-8
 35566  019A90  6ED9               	movwf	fsr2l,c
 35567  019A92  50E2               	movf	fsr1h,w,c
 35568  019A94  6EDA               	movwf	fsr2h,c
 35569  019A96  0EFF               	movlw	255
 35570  019A98  22DA               	addwfc	fsr2h,f,c
 35571  019A9A  06DE               	decf	postinc2,f,c
 35572  019A9C  0E00               	movlw	0
 35573  019A9E  5ADD               	subwfb	postdec2,f,c
 35574                           
 35575                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 35576                           ;stkvar	_s @ sp[(-18)+12]
 35577  019AA0  0EFA               	movlw	-6
 35578  019AA2  006F FF8C  F02A    	movff	plusw1,btemp
 35579  019AA8  0EFB               	movlw	-5
 35580  019AAA  50E3               	movf	plusw1,w,c
 35581  019AAC  102A               	iorwf	btemp^0,w,c
 35582  019AAE  A4D8               	btfss	status,2,c
 35583  019AB0  D002               	goto	l15793
 35584  019AB2  0E2B               	movlw	43
 35585  019AB4  D001               	goto	L40
 35586  019AB6                     l15793:
 35587  019AB6  0E2D               	movlw	45
 35588  019AB8                     L40:
 35589  019AB8  6E34               	movwf	(btemp+10)^0,c
 35590  019ABA  0E00               	movlw	0
 35591  019ABC  6E35               	movwf	(btemp+11)^0,c
 35592                           
 35593                           ;stkvar	_dtoa$6614 @ sp[(-18)+0]
 35594  019ABE  0EEE               	movlw	-18
 35595  019AC0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 35596  019AC6  0EEF               	movlw	-17
 35597  019AC8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 35598                           
 35599                           ;stkvar	_dtoa$6614 @ sp[(-18)+0]
 35600                           ;stkvar	_i @ sp[(-18)+10]
 35601  019ACE  0EF8               	movlw	-8
 35602  019AD0  006F FF8C  F034    	movff	plusw1,btemp+10
 35603  019AD6  0EF9               	movlw	-7
 35604  019AD8  006F FF8C  F035    	movff	plusw1,btemp+11
 35605  019ADE  0E54               	movlw	low _dbuf
 35606  019AE0  2434               	addwf	(btemp+10)^0,w,c
 35607  019AE2  6ED9               	movwf	fsr2l,c
 35608  019AE4  0E03               	movlw	high _dbuf
 35609  019AE6  2035               	addwfc	(btemp+11)^0,w,c
 35610  019AE8  6EDA               	movwf	fsr2h,c
 35611  019AEA  0EEE               	movlw	-18
 35612  019AEC  006F FF8F FFDF     	movff	plusw1,indf2
 35613  019AF2                     l15797:
 35614                           
 35615                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 35616                           ;stkvar	_w @ sp[(-18)+14]
 35617  019AF2  0EFC               	movlw	-4
 35618  019AF4  006F FF8F FFE6     	movff	plusw1,postinc1
 35619  019AFA  006F FF8F FFE6     	movff	plusw1,postinc1
 35620                           
 35621                           ;stkvar	_i @ sp[(-20)+10]
 35622  019B00  0E54               	movlw	low _dbuf
 35623  019B02  6E34               	movwf	(btemp+10)^0,c
 35624  019B04  0E03               	movlw	high _dbuf
 35625  019B06  6E35               	movwf	(btemp+11)^0,c
 35626  019B08  0EF6               	movlw	-10
 35627  019B0A  50E3               	movf	plusw1,w,c
 35628  019B0C  2634               	addwf	(btemp+10)^0,f,c
 35629  019B0E  0EF7               	movlw	-9
 35630  019B10  50E3               	movf	plusw1,w,c
 35631  019B12  2235               	addwfc	(btemp+11)^0,f,c
 35632  019B14  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 35633  019B1A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 35634                           
 35635                           ;stkvar	_fp @ sp[(-22)+-2]
 35636  019B20  0EE8               	movlw	-24
 35637  019B22  006F FF8F FFE6     	movff	plusw1,postinc1
 35638  019B28  006F FF8F FFE6     	movff	plusw1,postinc1
 35639  019B2E  EC0F  F0FF         	call	_pad	;wreg free
 35640                           
 35641                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 35642  019B32  0EE4               	movlw	228
 35643  019B34  26E1               	addwf	fsr1l,f,c
 35644  019B36  0EFF               	movlw	255
 35645  019B38  22E2               	addwfc	fsr1h,f,c
 35646  019B3A  0012               	return		;funcret
 35647  019B3C                     __end_of_dtoa:
 35648                           	opt callstack 0
 35649                           
 35650 ;; *************** function _abs *****************
 35651 ;; Defined at:
 35652 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 35653 ;; Parameters:    Size  Location     Type
 35654 ;;  a               2  [STACK] int 
 35655 ;; Auto vars:     Size  Location     Type
 35656 ;;		None
 35657 ;; Return value:  Size  Location     Type
 35658 ;;                  2  [STACK] int 
 35659 ;; Registers used:
 35660 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 35661 ;; Tracked objects:
 35662 ;;		On entry : 0/3
 35663 ;;		On exit  : 0/0
 35664 ;;		Unchanged: 0/0
 35665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35670 ;;Total ram usage:        0 bytes
 35671 ;; Hardware stack levels used:    1
 35672 ;; Hardware stack levels required when called:   15
 35673 ;; This function calls:
 35674 ;;		Nothing
 35675 ;; This function is called by:
 35676 ;;		_dtoa
 35677 ;; This function uses a reentrant model
 35678 ;;
 35679                           
 35680                           	psect	text117
 35681  002300                     __ptext117:
 35682                           	opt callstack 0
 35683  002300                     _abs:
 35684                           	opt callstack 0
 35685                           
 35686                           ;stkvar	_a @ sp[(0)+-2]
 35687                           
 35688                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35689                           ;incstack = 0
 35690 ;; hardware stack exceeded
 35691  002300  0EFF               	movlw	-1
 35692  002302  BEE3               	btfsc	plusw1,7,c
 35693  002304  D007               	goto	u7830
 35694  002306  0EFF               	movlw	-1
 35695  002308  50E3               	movf	plusw1,w,c
 35696  00230A  E112               	bnz	l10173
 35697  00230C  0EFE               	movlw	-2
 35698  00230E  04E3               	decf	plusw1,w,c
 35699  002310  B0D8               	btfsc	status,0,c
 35700  002312  D00E               	goto	l10173
 35701  002314                     u7830:
 35702                           
 35703                           ;stkvar	_a @ sp[(0)+-2]
 35704  002314  0EFE               	movlw	-2
 35705  002316  006F FF8C  F02A    	movff	plusw1,btemp
 35706  00231C  1E2A               	comf	btemp^0,f,c
 35707  00231E  0EFF               	movlw	-1
 35708  002320  006F FF8C  F02B    	movff	plusw1,btemp+1
 35709  002326  1E2B               	comf	(btemp+1)^0,f,c
 35710  002328  2A2A               	incf	btemp^0,f,c
 35711  00232A  B4D8               	btfsc	status,2,c
 35712  00232C  2A2B               	incf	(btemp+1)^0,f,c
 35713  00232E  D008               	goto	l3422
 35714  002330                     l10173:
 35715                           
 35716                           ;stkvar	_a @ sp[(0)+-2]
 35717  002330  0EFE               	movlw	-2
 35718  002332  006F FF8C  F02A    	movff	plusw1,btemp
 35719  002338  0EFF               	movlw	-1
 35720  00233A  006F FF8C  F02B    	movff	plusw1,btemp+1
 35721  002340                     l3422:
 35722                           
 35723                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 35724  002340  52E5               	movf	postdec1,f,c
 35725  002342  52E5               	movf	postdec1,f,c
 35726  002344  0012               	return		;funcret
 35727  002346                     __end_of_abs:
 35728                           	opt callstack 0
 35729                           
 35730 ;; *************** function ___aomod *****************
 35731 ;; Defined at:
 35732 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 35733 ;; Parameters:    Size  Location     Type
 35734 ;;  dividend        8  [STACK] long long 
 35735 ;;  divisor         8  [STACK] long long 
 35736 ;; Auto vars:     Size  Location     Type
 35737 ;;  sign            1  [STACK] unsigned char 
 35738 ;;  counter         1  [STACK] unsigned char 
 35739 ;; Return value:  Size  Location     Type
 35740 ;;                  8  [STACK] long long 
 35741 ;; Registers used:
 35742 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 35743 ;; Tracked objects:
 35744 ;;		On entry : 0/0
 35745 ;;		On exit  : 0/0
 35746 ;;		Unchanged: 0/0
 35747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35752 ;;Total ram usage:        0 bytes
 35753 ;; Hardware stack levels used:    1
 35754 ;; Hardware stack levels required when called:   15
 35755 ;; This function calls:
 35756 ;;		Nothing
 35757 ;; This function is called by:
 35758 ;;		_dtoa
 35759 ;;		___secs_to_tm
 35760 ;;		_rule_to_secs
 35761 ;;		___year_to_secs
 35762 ;; This function uses a reentrant model
 35763 ;;
 35764                           
 35765                           	psect	text118
 35766  01CFE0                     __ptext118:
 35767                           	opt callstack 0
 35768  01CFE0                     ___aomod:
 35769                           	opt callstack 0
 35770                           
 35771                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 35772  01CFE0  52E6               	movf	postinc1,f,c
 35773  01CFE2  52E6               	movf	postinc1,f,c
 35774                           
 35775                           ;stkvar	_sign @ sp[(-2)+0]
 35776                           
 35777                           ;incstack = 0
 35778 ;; hardware stack exceeded
 35779  01CFE4  0EFE               	movlw	-2
 35780  01CFE6  6AE3               	clrf	plusw1,c
 35781                           
 35782                           ;stkvar	_dividend @ sp[(-2)+-8]
 35783  01CFE8  0EFD               	movlw	-3
 35784  01CFEA  AEE3               	btfss	plusw1,7,c
 35785  01CFEC  D028               	goto	l10357
 35786                           
 35787                           ;stkvar	_dividend @ sp[(-2)+-8]
 35788                           ;stkvar	_dividend @ sp[(-2)+-8]
 35789  01CFEE  0EF6               	movlw	-10
 35790  01CFF0  6CE3               	negf	plusw1,c
 35791  01CFF2  0EF7               	movlw	-9
 35792  01CFF4  1EE3               	comf	plusw1,f,c
 35793  01CFF6  0EF8               	movlw	-8
 35794  01CFF8  1EE3               	comf	plusw1,f,c
 35795  01CFFA  0EF9               	movlw	-7
 35796  01CFFC  1EE3               	comf	plusw1,f,c
 35797  01CFFE  0EFA               	movlw	-6
 35798  01D000  1EE3               	comf	plusw1,f,c
 35799  01D002  0EFB               	movlw	-5
 35800  01D004  1EE3               	comf	plusw1,f,c
 35801  01D006  0EFC               	movlw	-4
 35802  01D008  1EE3               	comf	plusw1,f,c
 35803  01D00A  0EFD               	movlw	-3
 35804  01D00C  1EE3               	comf	plusw1,f,c
 35805  01D00E  E314               	bnc	u8320
 35806  01D010  0EF7               	movlw	-9
 35807  01D012  2AE3               	incf	plusw1,f,c
 35808  01D014  E311               	bnc	u8320
 35809  01D016  0EF8               	movlw	-8
 35810  01D018  2AE3               	incf	plusw1,f,c
 35811  01D01A  E30E               	bnc	u8320
 35812  01D01C  0EF9               	movlw	-7
 35813  01D01E  2AE3               	incf	plusw1,f,c
 35814  01D020  E30B               	bnc	u8320
 35815  01D022  0EFA               	movlw	-6
 35816  01D024  2AE3               	incf	plusw1,f,c
 35817  01D026  E308               	bnc	u8320
 35818  01D028  0EFB               	movlw	-5
 35819  01D02A  2AE3               	incf	plusw1,f,c
 35820  01D02C  E305               	bnc	u8320
 35821  01D02E  0EFC               	movlw	-4
 35822  01D030  2AE3               	incf	plusw1,f,c
 35823  01D032  E302               	bnc	u8320
 35824  01D034  0EFD               	movlw	-3
 35825  01D036  2AE3               	incf	plusw1,f,c
 35826  01D038                     u8320:
 35827                           
 35828                           ;stkvar	_sign @ sp[(-2)+0]
 35829  01D038  0EFE               	movlw	-2
 35830  01D03A  6AE3               	clrf	plusw1,c
 35831  01D03C  2AE3               	incf	plusw1,f,c
 35832  01D03E                     l10357:
 35833                           
 35834                           ;stkvar	_divisor @ sp[(-2)+-16]
 35835  01D03E  0EF5               	movlw	-11
 35836  01D040  AEE3               	btfss	plusw1,7,c
 35837  01D042  D025               	goto	u8340
 35838                           
 35839                           ;stkvar	_divisor @ sp[(-2)+-16]
 35840                           ;stkvar	_divisor @ sp[(-2)+-16]
 35841  01D044  0EEE               	movlw	-18
 35842  01D046  6CE3               	negf	plusw1,c
 35843  01D048  0EEF               	movlw	-17
 35844  01D04A  1EE3               	comf	plusw1,f,c
 35845  01D04C  0EF0               	movlw	-16
 35846  01D04E  1EE3               	comf	plusw1,f,c
 35847  01D050  0EF1               	movlw	-15
 35848  01D052  1EE3               	comf	plusw1,f,c
 35849  01D054  0EF2               	movlw	-14
 35850  01D056  1EE3               	comf	plusw1,f,c
 35851  01D058  0EF3               	movlw	-13
 35852  01D05A  1EE3               	comf	plusw1,f,c
 35853  01D05C  0EF4               	movlw	-12
 35854  01D05E  1EE3               	comf	plusw1,f,c
 35855  01D060  0EF5               	movlw	-11
 35856  01D062  1EE3               	comf	plusw1,f,c
 35857  01D064  E314               	bnc	u8340
 35858  01D066  0EEF               	movlw	-17
 35859  01D068  2AE3               	incf	plusw1,f,c
 35860  01D06A  E311               	bnc	u8340
 35861  01D06C  0EF0               	movlw	-16
 35862  01D06E  2AE3               	incf	plusw1,f,c
 35863  01D070  E30E               	bnc	u8340
 35864  01D072  0EF1               	movlw	-15
 35865  01D074  2AE3               	incf	plusw1,f,c
 35866  01D076  E30B               	bnc	u8340
 35867  01D078  0EF2               	movlw	-14
 35868  01D07A  2AE3               	incf	plusw1,f,c
 35869  01D07C  E308               	bnc	u8340
 35870  01D07E  0EF3               	movlw	-13
 35871  01D080  2AE3               	incf	plusw1,f,c
 35872  01D082  E305               	bnc	u8340
 35873  01D084  0EF4               	movlw	-12
 35874  01D086  2AE3               	incf	plusw1,f,c
 35875  01D088  E302               	bnc	u8340
 35876  01D08A  0EF5               	movlw	-11
 35877  01D08C  2AE3               	incf	plusw1,f,c
 35878  01D08E                     u8340:
 35879                           
 35880                           ;stkvar	_divisor @ sp[(-2)+-16]
 35881  01D08E  0EEE               	movlw	-18
 35882  01D090  50E3               	movf	plusw1,w,c
 35883  01D092  E116               	bnz	u8350
 35884  01D094  0EEF               	movlw	-17
 35885  01D096  50E3               	movf	plusw1,w,c
 35886  01D098  E113               	bnz	u8350
 35887  01D09A  0EF0               	movlw	-16
 35888  01D09C  50E3               	movf	plusw1,w,c
 35889  01D09E  E110               	bnz	u8350
 35890  01D0A0  0EF1               	movlw	-15
 35891  01D0A2  50E3               	movf	plusw1,w,c
 35892  01D0A4  E10D               	bnz	u8350
 35893  01D0A6  0EF2               	movlw	-14
 35894  01D0A8  50E3               	movf	plusw1,w,c
 35895  01D0AA  E10A               	bnz	u8350
 35896  01D0AC  0EF3               	movlw	-13
 35897  01D0AE  50E3               	movf	plusw1,w,c
 35898  01D0B0  E107               	bnz	u8350
 35899  01D0B2  0EF4               	movlw	-12
 35900  01D0B4  50E3               	movf	plusw1,w,c
 35901  01D0B6  E104               	bnz	u8350
 35902  01D0B8  0EF5               	movlw	-11
 35903  01D0BA  50E3               	movf	plusw1,w,c
 35904  01D0BC  B4D8               	btfsc	status,2,c
 35905  01D0BE  D075               	goto	u8380
 35906  01D0C0                     u8350:
 35907                           
 35908                           ;stkvar	_counter @ sp[(-2)+1]
 35909  01D0C0  0EFF               	movlw	-1
 35910  01D0C2  6AE3               	clrf	plusw1,c
 35911  01D0C4  D012               	goto	L41
 35912  01D0C6                     l10365:
 35913                           
 35914                           ;stkvar	_divisor @ sp[(-2)+-16]
 35915  01D0C6  90D8               	bcf	status,0,c
 35916  01D0C8  0EEE               	movlw	-18
 35917  01D0CA  36E3               	rlcf	plusw1,f,c
 35918  01D0CC  0EEF               	movlw	-17
 35919  01D0CE  36E3               	rlcf	plusw1,f,c
 35920  01D0D0  0EF0               	movlw	-16
 35921  01D0D2  36E3               	rlcf	plusw1,f,c
 35922  01D0D4  0EF1               	movlw	-15
 35923  01D0D6  36E3               	rlcf	plusw1,f,c
 35924  01D0D8  0EF2               	movlw	-14
 35925  01D0DA  36E3               	rlcf	plusw1,f,c
 35926  01D0DC  0EF3               	movlw	-13
 35927  01D0DE  36E3               	rlcf	plusw1,f,c
 35928  01D0E0  0EF4               	movlw	-12
 35929  01D0E2  36E3               	rlcf	plusw1,f,c
 35930  01D0E4  0EF5               	movlw	-11
 35931  01D0E6  36E3               	rlcf	plusw1,f,c
 35932                           
 35933                           ;stkvar	_counter @ sp[(-2)+1]
 35934  01D0E8  0EFF               	movlw	-1
 35935  01D0EA                     L41:
 35936  01D0EA  2AE3               	incf	plusw1,f,c
 35937                           
 35938                           ;stkvar	_divisor @ sp[(-2)+-16]
 35939  01D0EC  0EF5               	movlw	-11
 35940  01D0EE  AEE3               	btfss	plusw1,7,c
 35941  01D0F0  D7EA               	goto	l10365
 35942  01D0F2                     u8360:
 35943                           
 35944                           ;stkvar	_divisor @ sp[(-2)+-16]
 35945                           ;stkvar	_dividend @ sp[(-2)+-8]
 35946  01D0F2  50E1               	movf	fsr1l,w,c
 35947  01D0F4  0FF6               	addlw	-10
 35948  01D0F6  6ED9               	movwf	fsr2l,c
 35949  01D0F8  50E2               	movf	fsr1h,w,c
 35950  01D0FA  6EDA               	movwf	fsr2h,c
 35951  01D0FC  0EFF               	movlw	255
 35952  01D0FE  22DA               	addwfc	fsr2h,f,c
 35953  01D100  0EEE               	movlw	-18
 35954  01D102  50E3               	movf	plusw1,w,c
 35955  01D104  5CDE               	subwf	postinc2,w,c
 35956  01D106  0EEF               	movlw	-17
 35957  01D108  50E3               	movf	plusw1,w,c
 35958  01D10A  58DE               	subwfb	postinc2,w,c
 35959  01D10C  0EF0               	movlw	-16
 35960  01D10E  50E3               	movf	plusw1,w,c
 35961  01D110  58DE               	subwfb	postinc2,w,c
 35962  01D112  0EF1               	movlw	-15
 35963  01D114  50E3               	movf	plusw1,w,c
 35964  01D116  58DE               	subwfb	postinc2,w,c
 35965  01D118  0EF2               	movlw	-14
 35966  01D11A  50E3               	movf	plusw1,w,c
 35967  01D11C  58DE               	subwfb	postinc2,w,c
 35968  01D11E  0EF3               	movlw	-13
 35969  01D120  50E3               	movf	plusw1,w,c
 35970  01D122  58DE               	subwfb	postinc2,w,c
 35971  01D124  0EF4               	movlw	-12
 35972  01D126  50E3               	movf	plusw1,w,c
 35973  01D128  58DE               	subwfb	postinc2,w,c
 35974  01D12A  0EF5               	movlw	-11
 35975  01D12C  50E3               	movf	plusw1,w,c
 35976  01D12E  58DE               	subwfb	postinc2,w,c
 35977  01D130  A0D8               	btfss	status,0,c
 35978  01D132  D01F               	goto	l10373
 35979                           
 35980                           ;stkvar	_divisor @ sp[(-2)+-16]
 35981                           ;stkvar	_dividend @ sp[(-2)+-8]
 35982  01D134  50E1               	movf	fsr1l,w,c
 35983  01D136  0FF6               	addlw	-10
 35984  01D138  6ED9               	movwf	fsr2l,c
 35985  01D13A  50E2               	movf	fsr1h,w,c
 35986  01D13C  6EDA               	movwf	fsr2h,c
 35987  01D13E  0EFF               	movlw	255
 35988  01D140  22DA               	addwfc	fsr2h,f,c
 35989  01D142  0EEE               	movlw	-18
 35990  01D144  50E3               	movf	plusw1,w,c
 35991  01D146  5EDE               	subwf	postinc2,f,c
 35992  01D148  0EEF               	movlw	-17
 35993  01D14A  50E3               	movf	plusw1,w,c
 35994  01D14C  5ADE               	subwfb	postinc2,f,c
 35995  01D14E  0EF0               	movlw	-16
 35996  01D150  50E3               	movf	plusw1,w,c
 35997  01D152  5ADE               	subwfb	postinc2,f,c
 35998  01D154  0EF1               	movlw	-15
 35999  01D156  50E3               	movf	plusw1,w,c
 36000  01D158  5ADE               	subwfb	postinc2,f,c
 36001  01D15A  0EF2               	movlw	-14
 36002  01D15C  50E3               	movf	plusw1,w,c
 36003  01D15E  5ADE               	subwfb	postinc2,f,c
 36004  01D160  0EF3               	movlw	-13
 36005  01D162  50E3               	movf	plusw1,w,c
 36006  01D164  5ADE               	subwfb	postinc2,f,c
 36007  01D166  0EF4               	movlw	-12
 36008  01D168  50E3               	movf	plusw1,w,c
 36009  01D16A  5ADE               	subwfb	postinc2,f,c
 36010  01D16C  0EF5               	movlw	-11
 36011  01D16E  50E3               	movf	plusw1,w,c
 36012  01D170  5ADE               	subwfb	postinc2,f,c
 36013  01D172                     l10373:
 36014                           
 36015                           ;stkvar	_divisor @ sp[(-2)+-16]
 36016  01D172  90D8               	bcf	status,0,c
 36017  01D174  0EF5               	movlw	-11
 36018  01D176  32E3               	rrcf	plusw1,f,c
 36019  01D178  0EF4               	movlw	-12
 36020  01D17A  32E3               	rrcf	plusw1,f,c
 36021  01D17C  0EF3               	movlw	-13
 36022  01D17E  32E3               	rrcf	plusw1,f,c
 36023  01D180  0EF2               	movlw	-14
 36024  01D182  32E3               	rrcf	plusw1,f,c
 36025  01D184  0EF1               	movlw	-15
 36026  01D186  32E3               	rrcf	plusw1,f,c
 36027  01D188  0EF0               	movlw	-16
 36028  01D18A  32E3               	rrcf	plusw1,f,c
 36029  01D18C  0EEF               	movlw	-17
 36030  01D18E  32E3               	rrcf	plusw1,f,c
 36031  01D190  0EEE               	movlw	-18
 36032  01D192  32E3               	rrcf	plusw1,f,c
 36033                           
 36034                           ;stkvar	_counter @ sp[(-2)+1]
 36035  01D194  0EFF               	movlw	-1
 36036  01D196  50E3               	movf	plusw1,w,c
 36037  01D198  6E2A               	movwf	btemp^0,c
 36038  01D19A  0E01               	movlw	1
 36039  01D19C  5E2A               	subwf	btemp^0,f,c
 36040  01D19E  0EFF               	movlw	-1
 36041  01D1A0  0060  F0AB  FFE3   	movff	btemp,plusw1
 36042  01D1A6  A4D8               	btfss	status,2,c
 36043  01D1A8  D7A4               	goto	u8360
 36044  01D1AA                     u8380:
 36045                           
 36046                           ;stkvar	_sign @ sp[(-2)+0]
 36047  01D1AA  0EFE               	movlw	-2
 36048  01D1AC  50E3               	movf	plusw1,w,c
 36049  01D1AE  B4D8               	btfsc	status,2,c
 36050  01D1B0  D025               	goto	u8400
 36051                           
 36052                           ;stkvar	_dividend @ sp[(-2)+-8]
 36053                           ;stkvar	_dividend @ sp[(-2)+-8]
 36054  01D1B2  0EF6               	movlw	-10
 36055  01D1B4  6CE3               	negf	plusw1,c
 36056  01D1B6  0EF7               	movlw	-9
 36057  01D1B8  1EE3               	comf	plusw1,f,c
 36058  01D1BA  0EF8               	movlw	-8
 36059  01D1BC  1EE3               	comf	plusw1,f,c
 36060  01D1BE  0EF9               	movlw	-7
 36061  01D1C0  1EE3               	comf	plusw1,f,c
 36062  01D1C2  0EFA               	movlw	-6
 36063  01D1C4  1EE3               	comf	plusw1,f,c
 36064  01D1C6  0EFB               	movlw	-5
 36065  01D1C8  1EE3               	comf	plusw1,f,c
 36066  01D1CA  0EFC               	movlw	-4
 36067  01D1CC  1EE3               	comf	plusw1,f,c
 36068  01D1CE  0EFD               	movlw	-3
 36069  01D1D0  1EE3               	comf	plusw1,f,c
 36070  01D1D2  E314               	bnc	u8400
 36071  01D1D4  0EF7               	movlw	-9
 36072  01D1D6  2AE3               	incf	plusw1,f,c
 36073  01D1D8  E311               	bnc	u8400
 36074  01D1DA  0EF8               	movlw	-8
 36075  01D1DC  2AE3               	incf	plusw1,f,c
 36076  01D1DE  E30E               	bnc	u8400
 36077  01D1E0  0EF9               	movlw	-7
 36078  01D1E2  2AE3               	incf	plusw1,f,c
 36079  01D1E4  E30B               	bnc	u8400
 36080  01D1E6  0EFA               	movlw	-6
 36081  01D1E8  2AE3               	incf	plusw1,f,c
 36082  01D1EA  E308               	bnc	u8400
 36083  01D1EC  0EFB               	movlw	-5
 36084  01D1EE  2AE3               	incf	plusw1,f,c
 36085  01D1F0  E305               	bnc	u8400
 36086  01D1F2  0EFC               	movlw	-4
 36087  01D1F4  2AE3               	incf	plusw1,f,c
 36088  01D1F6  E302               	bnc	u8400
 36089  01D1F8  0EFD               	movlw	-3
 36090  01D1FA  2AE3               	incf	plusw1,f,c
 36091  01D1FC                     u8400:
 36092                           
 36093                           ;stkvar	_dividend @ sp[(-2)+-8]
 36094  01D1FC  0EF6               	movlw	246
 36095  01D1FE  24E1               	addwf	fsr1l,w,c
 36096  01D200  6ED9               	movwf	fsr2l,c
 36097  01D202  0EFF               	movlw	255
 36098  01D204  20E2               	addwfc	fsr1h,w,c
 36099  01D206  6EDA               	movwf	fsr2h,c
 36100                           
 36101                           ;stkvar	?___aomod @ sp[(-2)+-8]
 36102  01D208  0E08               	movlw	8
 36103  01D20A  6E2A               	movwf	btemp^0,c
 36104  01D20C  0EF6               	movlw	-10
 36105  01D20E                     us841999:
 36106  01D20E  006F FF7B FFE3     	movff	postinc2,plusw1
 36107  01D214  28E8               	incf	wreg,w,c
 36108  01D216  2E2A               	decfsz	btemp^0,f,c
 36109  01D218  D7FA               	bra	us841999
 36110                           
 36111                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 36112  01D21A  52E5               	movf	postdec1,f,c
 36113  01D21C  52E5               	movf	postdec1,f,c
 36114  01D21E  0012               	return		;funcret
 36115  01D220                     __end_of___aomod:
 36116                           	opt callstack 0
 36117                           
 36118 ;; *************** function ___aodiv *****************
 36119 ;; Defined at:
 36120 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 36121 ;; Parameters:    Size  Location     Type
 36122 ;;  dividend        8  [STACK] long long 
 36123 ;;  divisor         8  [STACK] long long 
 36124 ;; Auto vars:     Size  Location     Type
 36125 ;;  quotient        8  [STACK] long long 
 36126 ;;  sign            1  [STACK] unsigned char 
 36127 ;;  counter         1  [STACK] unsigned char 
 36128 ;; Return value:  Size  Location     Type
 36129 ;;                  8  [STACK] long long 
 36130 ;; Registers used:
 36131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 36132 ;; Tracked objects:
 36133 ;;		On entry : 0/0
 36134 ;;		On exit  : 0/0
 36135 ;;		Unchanged: 0/0
 36136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36141 ;;Total ram usage:        0 bytes
 36142 ;; Hardware stack levels used:    1
 36143 ;; Hardware stack levels required when called:   15
 36144 ;; This function calls:
 36145 ;;		Nothing
 36146 ;; This function is called by:
 36147 ;;		_dtoa
 36148 ;;		___secs_to_tm
 36149 ;;		___secs_to_zone
 36150 ;;		___year_to_secs
 36151 ;; This function uses a reentrant model
 36152 ;;
 36153                           
 36154                           	psect	text119
 36155  01C408                     __ptext119:
 36156                           	opt callstack 0
 36157  01C408                     ___aodiv:
 36158                           	opt callstack 0
 36159                           
 36160                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 36161  01C408  0E0A               	movlw	10
 36162  01C40A  26E1               	addwf	fsr1l,f,c
 36163  01C40C  0E00               	movlw	0
 36164  01C40E  22E2               	addwfc	fsr1h,f,c
 36165                           
 36166                           ;stkvar	_sign @ sp[(-10)+8]
 36167                           
 36168                           ;incstack = 0
 36169 ;; hardware stack exceeded
 36170  01C410  0EFE               	movlw	-2
 36171  01C412  6AE3               	clrf	plusw1,c
 36172                           
 36173                           ;stkvar	_divisor @ sp[(-10)+-16]
 36174  01C414  0EED               	movlw	-19
 36175  01C416  AEE3               	btfss	plusw1,7,c
 36176  01C418  D028               	goto	l10313
 36177                           
 36178                           ;stkvar	_divisor @ sp[(-10)+-16]
 36179                           ;stkvar	_divisor @ sp[(-10)+-16]
 36180  01C41A  0EE6               	movlw	-26
 36181  01C41C  6CE3               	negf	plusw1,c
 36182  01C41E  0EE7               	movlw	-25
 36183  01C420  1EE3               	comf	plusw1,f,c
 36184  01C422  0EE8               	movlw	-24
 36185  01C424  1EE3               	comf	plusw1,f,c
 36186  01C426  0EE9               	movlw	-23
 36187  01C428  1EE3               	comf	plusw1,f,c
 36188  01C42A  0EEA               	movlw	-22
 36189  01C42C  1EE3               	comf	plusw1,f,c
 36190  01C42E  0EEB               	movlw	-21
 36191  01C430  1EE3               	comf	plusw1,f,c
 36192  01C432  0EEC               	movlw	-20
 36193  01C434  1EE3               	comf	plusw1,f,c
 36194  01C436  0EED               	movlw	-19
 36195  01C438  1EE3               	comf	plusw1,f,c
 36196  01C43A  E314               	bnc	u8200
 36197  01C43C  0EE7               	movlw	-25
 36198  01C43E  2AE3               	incf	plusw1,f,c
 36199  01C440  E311               	bnc	u8200
 36200  01C442  0EE8               	movlw	-24
 36201  01C444  2AE3               	incf	plusw1,f,c
 36202  01C446  E30E               	bnc	u8200
 36203  01C448  0EE9               	movlw	-23
 36204  01C44A  2AE3               	incf	plusw1,f,c
 36205  01C44C  E30B               	bnc	u8200
 36206  01C44E  0EEA               	movlw	-22
 36207  01C450  2AE3               	incf	plusw1,f,c
 36208  01C452  E308               	bnc	u8200
 36209  01C454  0EEB               	movlw	-21
 36210  01C456  2AE3               	incf	plusw1,f,c
 36211  01C458  E305               	bnc	u8200
 36212  01C45A  0EEC               	movlw	-20
 36213  01C45C  2AE3               	incf	plusw1,f,c
 36214  01C45E  E302               	bnc	u8200
 36215  01C460  0EED               	movlw	-19
 36216  01C462  2AE3               	incf	plusw1,f,c
 36217  01C464                     u8200:
 36218                           
 36219                           ;stkvar	_sign @ sp[(-10)+8]
 36220  01C464  0EFE               	movlw	-2
 36221  01C466  6AE3               	clrf	plusw1,c
 36222  01C468  2AE3               	incf	plusw1,f,c
 36223  01C46A                     l10313:
 36224                           
 36225                           ;stkvar	_dividend @ sp[(-10)+-8]
 36226  01C46A  0EF5               	movlw	-11
 36227  01C46C  AEE3               	btfss	plusw1,7,c
 36228  01C46E  D027               	goto	l10319
 36229                           
 36230                           ;stkvar	_dividend @ sp[(-10)+-8]
 36231                           ;stkvar	_dividend @ sp[(-10)+-8]
 36232  01C470  0EEE               	movlw	-18
 36233  01C472  6CE3               	negf	plusw1,c
 36234  01C474  0EEF               	movlw	-17
 36235  01C476  1EE3               	comf	plusw1,f,c
 36236  01C478  0EF0               	movlw	-16
 36237  01C47A  1EE3               	comf	plusw1,f,c
 36238  01C47C  0EF1               	movlw	-15
 36239  01C47E  1EE3               	comf	plusw1,f,c
 36240  01C480  0EF2               	movlw	-14
 36241  01C482  1EE3               	comf	plusw1,f,c
 36242  01C484  0EF3               	movlw	-13
 36243  01C486  1EE3               	comf	plusw1,f,c
 36244  01C488  0EF4               	movlw	-12
 36245  01C48A  1EE3               	comf	plusw1,f,c
 36246  01C48C  0EF5               	movlw	-11
 36247  01C48E  1EE3               	comf	plusw1,f,c
 36248  01C490  E314               	bnc	u8220
 36249  01C492  0EEF               	movlw	-17
 36250  01C494  2AE3               	incf	plusw1,f,c
 36251  01C496  E311               	bnc	u8220
 36252  01C498  0EF0               	movlw	-16
 36253  01C49A  2AE3               	incf	plusw1,f,c
 36254  01C49C  E30E               	bnc	u8220
 36255  01C49E  0EF1               	movlw	-15
 36256  01C4A0  2AE3               	incf	plusw1,f,c
 36257  01C4A2  E30B               	bnc	u8220
 36258  01C4A4  0EF2               	movlw	-14
 36259  01C4A6  2AE3               	incf	plusw1,f,c
 36260  01C4A8  E308               	bnc	u8220
 36261  01C4AA  0EF3               	movlw	-13
 36262  01C4AC  2AE3               	incf	plusw1,f,c
 36263  01C4AE  E305               	bnc	u8220
 36264  01C4B0  0EF4               	movlw	-12
 36265  01C4B2  2AE3               	incf	plusw1,f,c
 36266  01C4B4  E302               	bnc	u8220
 36267  01C4B6  0EF5               	movlw	-11
 36268  01C4B8  2AE3               	incf	plusw1,f,c
 36269  01C4BA                     u8220:
 36270                           
 36271                           ;stkvar	_sign @ sp[(-10)+8]
 36272  01C4BA  0EFE               	movlw	-2
 36273  01C4BC  70E3               	btg	plusw1,0,c
 36274  01C4BE                     l10319:
 36275                           
 36276                           ;stkvar	_quotient @ sp[(-10)+0]
 36277  01C4BE  0E07               	movlw	7
 36278  01C4C0  6E2A               	movwf	btemp^0,c
 36279  01C4C2  0EF6               	movlw	-10
 36280  01C4C4                     u8231:
 36281  01C4C4  6AE3               	clrf	plusw1,c
 36282  01C4C6  2AE8               	incf	wreg,f,c
 36283  01C4C8  062A               	decf	btemp^0,f,c
 36284  01C4CA  E2FC               	bc	u8231
 36285                           
 36286                           ;stkvar	_divisor @ sp[(-10)+-16]
 36287  01C4CC  0EE6               	movlw	-26
 36288  01C4CE  50E3               	movf	plusw1,w,c
 36289  01C4D0  E116               	bnz	u8240
 36290  01C4D2  0EE7               	movlw	-25
 36291  01C4D4  50E3               	movf	plusw1,w,c
 36292  01C4D6  E113               	bnz	u8240
 36293  01C4D8  0EE8               	movlw	-24
 36294  01C4DA  50E3               	movf	plusw1,w,c
 36295  01C4DC  E110               	bnz	u8240
 36296  01C4DE  0EE9               	movlw	-23
 36297  01C4E0  50E3               	movf	plusw1,w,c
 36298  01C4E2  E10D               	bnz	u8240
 36299  01C4E4  0EEA               	movlw	-22
 36300  01C4E6  50E3               	movf	plusw1,w,c
 36301  01C4E8  E10A               	bnz	u8240
 36302  01C4EA  0EEB               	movlw	-21
 36303  01C4EC  50E3               	movf	plusw1,w,c
 36304  01C4EE  E107               	bnz	u8240
 36305  01C4F0  0EEC               	movlw	-20
 36306  01C4F2  50E3               	movf	plusw1,w,c
 36307  01C4F4  E104               	bnz	u8240
 36308  01C4F6  0EED               	movlw	-19
 36309  01C4F8  50E3               	movf	plusw1,w,c
 36310  01C4FA  B4D8               	btfsc	status,2,c
 36311  01C4FC  D088               	goto	u8270
 36312  01C4FE                     u8240:
 36313                           
 36314                           ;stkvar	_counter @ sp[(-10)+9]
 36315  01C4FE  0EFF               	movlw	-1
 36316  01C500  6AE3               	clrf	plusw1,c
 36317  01C502  D012               	goto	L42
 36318  01C504                     l10325:
 36319                           
 36320                           ;stkvar	_divisor @ sp[(-10)+-16]
 36321  01C504  90D8               	bcf	status,0,c
 36322  01C506  0EE6               	movlw	-26
 36323  01C508  36E3               	rlcf	plusw1,f,c
 36324  01C50A  0EE7               	movlw	-25
 36325  01C50C  36E3               	rlcf	plusw1,f,c
 36326  01C50E  0EE8               	movlw	-24
 36327  01C510  36E3               	rlcf	plusw1,f,c
 36328  01C512  0EE9               	movlw	-23
 36329  01C514  36E3               	rlcf	plusw1,f,c
 36330  01C516  0EEA               	movlw	-22
 36331  01C518  36E3               	rlcf	plusw1,f,c
 36332  01C51A  0EEB               	movlw	-21
 36333  01C51C  36E3               	rlcf	plusw1,f,c
 36334  01C51E  0EEC               	movlw	-20
 36335  01C520  36E3               	rlcf	plusw1,f,c
 36336  01C522  0EED               	movlw	-19
 36337  01C524  36E3               	rlcf	plusw1,f,c
 36338                           
 36339                           ;stkvar	_counter @ sp[(-10)+9]
 36340  01C526  0EFF               	movlw	-1
 36341  01C528                     L42:
 36342  01C528  2AE3               	incf	plusw1,f,c
 36343                           
 36344                           ;stkvar	_divisor @ sp[(-10)+-16]
 36345  01C52A  0EED               	movlw	-19
 36346  01C52C  AEE3               	btfss	plusw1,7,c
 36347  01C52E  D7EA               	goto	l10325
 36348  01C530                     u8250:
 36349                           
 36350                           ;stkvar	_quotient @ sp[(-10)+0]
 36351  01C530  90D8               	bcf	status,0,c
 36352  01C532  0EF6               	movlw	-10
 36353  01C534  36E3               	rlcf	plusw1,f,c
 36354  01C536  0EF7               	movlw	-9
 36355  01C538  36E3               	rlcf	plusw1,f,c
 36356  01C53A  0EF8               	movlw	-8
 36357  01C53C  36E3               	rlcf	plusw1,f,c
 36358  01C53E  0EF9               	movlw	-7
 36359  01C540  36E3               	rlcf	plusw1,f,c
 36360  01C542  0EFA               	movlw	-6
 36361  01C544  36E3               	rlcf	plusw1,f,c
 36362  01C546  0EFB               	movlw	-5
 36363  01C548  36E3               	rlcf	plusw1,f,c
 36364  01C54A  0EFC               	movlw	-4
 36365  01C54C  36E3               	rlcf	plusw1,f,c
 36366  01C54E  0EFD               	movlw	-3
 36367  01C550  36E3               	rlcf	plusw1,f,c
 36368                           
 36369                           ;stkvar	_divisor @ sp[(-10)+-16]
 36370                           ;stkvar	_dividend @ sp[(-10)+-8]
 36371  01C552  50E1               	movf	fsr1l,w,c
 36372  01C554  0FEE               	addlw	-18
 36373  01C556  6ED9               	movwf	fsr2l,c
 36374  01C558  50E2               	movf	fsr1h,w,c
 36375  01C55A  6EDA               	movwf	fsr2h,c
 36376  01C55C  0EFF               	movlw	255
 36377  01C55E  22DA               	addwfc	fsr2h,f,c
 36378  01C560  0EE6               	movlw	-26
 36379  01C562  50E3               	movf	plusw1,w,c
 36380  01C564  5CDE               	subwf	postinc2,w,c
 36381  01C566  0EE7               	movlw	-25
 36382  01C568  50E3               	movf	plusw1,w,c
 36383  01C56A  58DE               	subwfb	postinc2,w,c
 36384  01C56C  0EE8               	movlw	-24
 36385  01C56E  50E3               	movf	plusw1,w,c
 36386  01C570  58DE               	subwfb	postinc2,w,c
 36387  01C572  0EE9               	movlw	-23
 36388  01C574  50E3               	movf	plusw1,w,c
 36389  01C576  58DE               	subwfb	postinc2,w,c
 36390  01C578  0EEA               	movlw	-22
 36391  01C57A  50E3               	movf	plusw1,w,c
 36392  01C57C  58DE               	subwfb	postinc2,w,c
 36393  01C57E  0EEB               	movlw	-21
 36394  01C580  50E3               	movf	plusw1,w,c
 36395  01C582  58DE               	subwfb	postinc2,w,c
 36396  01C584  0EEC               	movlw	-20
 36397  01C586  50E3               	movf	plusw1,w,c
 36398  01C588  58DE               	subwfb	postinc2,w,c
 36399  01C58A  0EED               	movlw	-19
 36400  01C58C  50E3               	movf	plusw1,w,c
 36401  01C58E  58DE               	subwfb	postinc2,w,c
 36402  01C590  A0D8               	btfss	status,0,c
 36403  01C592  D021               	goto	l10337
 36404                           
 36405                           ;stkvar	_divisor @ sp[(-10)+-16]
 36406                           ;stkvar	_dividend @ sp[(-10)+-8]
 36407  01C594  50E1               	movf	fsr1l,w,c
 36408  01C596  0FEE               	addlw	-18
 36409  01C598  6ED9               	movwf	fsr2l,c
 36410  01C59A  50E2               	movf	fsr1h,w,c
 36411  01C59C  6EDA               	movwf	fsr2h,c
 36412  01C59E  0EFF               	movlw	255
 36413  01C5A0  22DA               	addwfc	fsr2h,f,c
 36414  01C5A2  0EE6               	movlw	-26
 36415  01C5A4  50E3               	movf	plusw1,w,c
 36416  01C5A6  5EDE               	subwf	postinc2,f,c
 36417  01C5A8  0EE7               	movlw	-25
 36418  01C5AA  50E3               	movf	plusw1,w,c
 36419  01C5AC  5ADE               	subwfb	postinc2,f,c
 36420  01C5AE  0EE8               	movlw	-24
 36421  01C5B0  50E3               	movf	plusw1,w,c
 36422  01C5B2  5ADE               	subwfb	postinc2,f,c
 36423  01C5B4  0EE9               	movlw	-23
 36424  01C5B6  50E3               	movf	plusw1,w,c
 36425  01C5B8  5ADE               	subwfb	postinc2,f,c
 36426  01C5BA  0EEA               	movlw	-22
 36427  01C5BC  50E3               	movf	plusw1,w,c
 36428  01C5BE  5ADE               	subwfb	postinc2,f,c
 36429  01C5C0  0EEB               	movlw	-21
 36430  01C5C2  50E3               	movf	plusw1,w,c
 36431  01C5C4  5ADE               	subwfb	postinc2,f,c
 36432  01C5C6  0EEC               	movlw	-20
 36433  01C5C8  50E3               	movf	plusw1,w,c
 36434  01C5CA  5ADE               	subwfb	postinc2,f,c
 36435  01C5CC  0EED               	movlw	-19
 36436  01C5CE  50E3               	movf	plusw1,w,c
 36437  01C5D0  5ADE               	subwfb	postinc2,f,c
 36438                           
 36439                           ;stkvar	_quotient @ sp[(-10)+0]
 36440  01C5D2  0EF6               	movlw	-10
 36441  01C5D4  80E3               	bsf	plusw1,0,c
 36442  01C5D6                     l10337:
 36443                           
 36444                           ;stkvar	_divisor @ sp[(-10)+-16]
 36445  01C5D6  90D8               	bcf	status,0,c
 36446  01C5D8  0EED               	movlw	-19
 36447  01C5DA  32E3               	rrcf	plusw1,f,c
 36448  01C5DC  0EEC               	movlw	-20
 36449  01C5DE  32E3               	rrcf	plusw1,f,c
 36450  01C5E0  0EEB               	movlw	-21
 36451  01C5E2  32E3               	rrcf	plusw1,f,c
 36452  01C5E4  0EEA               	movlw	-22
 36453  01C5E6  32E3               	rrcf	plusw1,f,c
 36454  01C5E8  0EE9               	movlw	-23
 36455  01C5EA  32E3               	rrcf	plusw1,f,c
 36456  01C5EC  0EE8               	movlw	-24
 36457  01C5EE  32E3               	rrcf	plusw1,f,c
 36458  01C5F0  0EE7               	movlw	-25
 36459  01C5F2  32E3               	rrcf	plusw1,f,c
 36460  01C5F4  0EE6               	movlw	-26
 36461  01C5F6  32E3               	rrcf	plusw1,f,c
 36462                           
 36463                           ;stkvar	_counter @ sp[(-10)+9]
 36464  01C5F8  0EFF               	movlw	-1
 36465  01C5FA  50E3               	movf	plusw1,w,c
 36466  01C5FC  6E2A               	movwf	btemp^0,c
 36467  01C5FE  0E01               	movlw	1
 36468  01C600  5E2A               	subwf	btemp^0,f,c
 36469  01C602  0EFF               	movlw	-1
 36470  01C604  0060  F0AB  FFE3   	movff	btemp,plusw1
 36471  01C60A  A4D8               	btfss	status,2,c
 36472  01C60C  D791               	goto	u8250
 36473  01C60E                     u8270:
 36474                           
 36475                           ;stkvar	_sign @ sp[(-10)+8]
 36476  01C60E  0EFE               	movlw	-2
 36477  01C610  50E3               	movf	plusw1,w,c
 36478  01C612  B4D8               	btfsc	status,2,c
 36479  01C614  D025               	goto	u8290
 36480                           
 36481                           ;stkvar	_quotient @ sp[(-10)+0]
 36482                           ;stkvar	_quotient @ sp[(-10)+0]
 36483  01C616  0EF6               	movlw	-10
 36484  01C618  6CE3               	negf	plusw1,c
 36485  01C61A  0EF7               	movlw	-9
 36486  01C61C  1EE3               	comf	plusw1,f,c
 36487  01C61E  0EF8               	movlw	-8
 36488  01C620  1EE3               	comf	plusw1,f,c
 36489  01C622  0EF9               	movlw	-7
 36490  01C624  1EE3               	comf	plusw1,f,c
 36491  01C626  0EFA               	movlw	-6
 36492  01C628  1EE3               	comf	plusw1,f,c
 36493  01C62A  0EFB               	movlw	-5
 36494  01C62C  1EE3               	comf	plusw1,f,c
 36495  01C62E  0EFC               	movlw	-4
 36496  01C630  1EE3               	comf	plusw1,f,c
 36497  01C632  0EFD               	movlw	-3
 36498  01C634  1EE3               	comf	plusw1,f,c
 36499  01C636  E314               	bnc	u8290
 36500  01C638  0EF7               	movlw	-9
 36501  01C63A  2AE3               	incf	plusw1,f,c
 36502  01C63C  E311               	bnc	u8290
 36503  01C63E  0EF8               	movlw	-8
 36504  01C640  2AE3               	incf	plusw1,f,c
 36505  01C642  E30E               	bnc	u8290
 36506  01C644  0EF9               	movlw	-7
 36507  01C646  2AE3               	incf	plusw1,f,c
 36508  01C648  E30B               	bnc	u8290
 36509  01C64A  0EFA               	movlw	-6
 36510  01C64C  2AE3               	incf	plusw1,f,c
 36511  01C64E  E308               	bnc	u8290
 36512  01C650  0EFB               	movlw	-5
 36513  01C652  2AE3               	incf	plusw1,f,c
 36514  01C654  E305               	bnc	u8290
 36515  01C656  0EFC               	movlw	-4
 36516  01C658  2AE3               	incf	plusw1,f,c
 36517  01C65A  E302               	bnc	u8290
 36518  01C65C  0EFD               	movlw	-3
 36519  01C65E  2AE3               	incf	plusw1,f,c
 36520  01C660                     u8290:
 36521                           
 36522                           ;stkvar	_quotient @ sp[(-10)+0]
 36523  01C660  0EF6               	movlw	246
 36524  01C662  24E1               	addwf	fsr1l,w,c
 36525  01C664  6ED9               	movwf	fsr2l,c
 36526  01C666  0EFF               	movlw	255
 36527  01C668  20E2               	addwfc	fsr1h,w,c
 36528  01C66A  6EDA               	movwf	fsr2h,c
 36529                           
 36530                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 36531  01C66C  0E08               	movlw	8
 36532  01C66E  6E2A               	movwf	btemp^0,c
 36533  01C670  0EEE               	movlw	-18
 36534  01C672                     us830999:
 36535  01C672  006F FF7B FFE3     	movff	postinc2,plusw1
 36536  01C678  28E8               	incf	wreg,w,c
 36537  01C67A  2E2A               	decfsz	btemp^0,f,c
 36538  01C67C  D7FA               	bra	us830999
 36539                           
 36540                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 36541  01C67E  0EF6               	movlw	246
 36542  01C680  26E1               	addwf	fsr1l,f,c
 36543  01C682  0EFF               	movlw	255
 36544  01C684  22E2               	addwfc	fsr1h,f,c
 36545  01C686  0012               	return		;funcret
 36546  01C688                     __end_of___aodiv:
 36547                           	opt callstack 0
 36548                           
 36549 ;; *************** function _ctoa *****************
 36550 ;; Defined at:
 36551 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 36552 ;; Parameters:    Size  Location     Type
 36553 ;;  fp              2  [STACK] PTR struct _IO_FILE
 36554 ;;		 -> f(6), NULL(0), 
 36555 ;;  c               1  [STACK] unsigned char 
 36556 ;; Auto vars:     Size  Location     Type
 36557 ;;  w               2  [STACK] int 
 36558 ;;  l               2    0        int 
 36559 ;; Return value:  Size  Location     Type
 36560 ;;                  2  [STACK] int 
 36561 ;; Registers used:
 36562 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 36563 ;; Tracked objects:
 36564 ;;		On entry : 0/0
 36565 ;;		On exit  : 0/0
 36566 ;;		Unchanged: 0/0
 36567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36572 ;;Total ram usage:        0 bytes
 36573 ;; Hardware stack levels used:    1
 36574 ;; Hardware stack levels required when called:   20
 36575 ;; This function calls:
 36576 ;;		_pad
 36577 ;; This function is called by:
 36578 ;;		_vfpfcnvrt
 36579 ;; This function uses a reentrant model
 36580 ;;
 36581                           
 36582                           	psect	text120
 36583  001578                     __ptext120:
 36584                           	opt callstack 0
 36585  001578                     _ctoa:
 36586                           	opt callstack 0
 36587                           
 36588                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36589  001578  52E6               	movf	postinc1,f,c
 36590  00157A  52E6               	movf	postinc1,f,c
 36591                           
 36592                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 36593                           
 36594                           ;incstack = 0
 36595 ;; hardware stack exceeded
 36596  00157C  504A               	movf	_width^0,w,c
 36597  00157E  104B               	iorwf	(_width+1)^0,w,c
 36598  001580  A4D8               	btfss	status,2,c
 36599  001582  D009               	goto	l15725
 36600                           
 36601                           ;stkvar	_w @ sp[(-2)+0]
 36602  001584  0EFE               	movlw	-2
 36603  001586  0060  F12B  FFE3   	movff	_width,plusw1
 36604  00158C  0EFF               	movlw	-1
 36605  00158E  0060  F12F  FFE3   	movff	_width+1,plusw1
 36606  001594  D016               	goto	l15727
 36607  001596                     l15725:
 36608  001596  0EFF               	movlw	255
 36609  001598  6E34               	movwf	(btemp+10)^0,c
 36610  00159A  0EFF               	movlw	255
 36611  00159C  6E35               	movwf	(btemp+11)^0,c
 36612  00159E  0060  F128  F032   	movff	_width,btemp+8
 36613  0015A4  0060  F12C  F033   	movff	_width+1,btemp+9
 36614  0015AA  5034               	movf	(btemp+10)^0,w,c
 36615  0015AC  2632               	addwf	(btemp+8)^0,f,c
 36616  0015AE  5035               	movf	(btemp+11)^0,w,c
 36617  0015B0  2233               	addwfc	(btemp+9)^0,f,c
 36618                           
 36619                           ;stkvar	_w @ sp[(-2)+0]
 36620  0015B2  0EFE               	movlw	-2
 36621  0015B4  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 36622  0015BA  0EFF               	movlw	-1
 36623  0015BC  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 36624  0015C2                     l15727:
 36625                           
 36626                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 36627                           ;stkvar	_c @ sp[(-2)+-3]
 36628  0015C2  0EFB               	movlw	-5
 36629  0015C4  006F FF8C  F354    	movff	plusw1,_dbuf
 36630                           
 36631                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 36632  0015CA  0103               	movlb	3	; () banked
 36633  0015CC  6B55               	clrf	(_dbuf+1)& (0+255),b
 36634                           
 36635                           ; BSR set to: 3
 36636                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 36637                           ;stkvar	_w @ sp[(-2)+0]
 36638  0015CE  0EFE               	movlw	-2
 36639  0015D0  006F FF8F FFE6     	movff	plusw1,postinc1
 36640  0015D6  006F FF8F FFE6     	movff	plusw1,postinc1
 36641  0015DC  0E54               	movlw	low _dbuf
 36642  0015DE  6EE6               	movwf	postinc1,c
 36643  0015E0  0E03               	movlw	high _dbuf
 36644  0015E2  6EE6               	movwf	postinc1,c
 36645                           
 36646                           ;stkvar	_fp @ sp[(-6)+-2]
 36647  0015E4  0EF8               	movlw	-8
 36648  0015E6  006F FF8F FFE6     	movff	plusw1,postinc1
 36649  0015EC  006F FF8F FFE6     	movff	plusw1,postinc1
 36650  0015F2  EC0F  F0FF         	call	_pad	;wreg free
 36651                           
 36652                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 36653  0015F6  0EFB               	movlw	251
 36654  0015F8  26E1               	addwf	fsr1l,f,c
 36655  0015FA  0EFF               	movlw	255
 36656  0015FC  22E2               	addwfc	fsr1h,f,c
 36657  0015FE  0012               	return		;funcret
 36658  001600                     __end_of_ctoa:
 36659                           	opt callstack 0
 36660                           
 36661 ;; *************** function _pad *****************
 36662 ;; Defined at:
 36663 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 36664 ;; Parameters:    Size  Location     Type
 36665 ;;  fp              2  [STACK] PTR struct _IO_FILE
 36666 ;;		 -> f(6), NULL(0), 
 36667 ;;  buf             2  [STACK] PTR unsigned char 
 36668 ;;		 -> dbuf(80), 
 36669 ;;  p               2  [STACK] int 
 36670 ;; Auto vars:     Size  Location     Type
 36671 ;;  w               2  [STACK] int 
 36672 ;;  i               2  [STACK] int 
 36673 ;; Return value:  Size  Location     Type
 36674 ;;                  2  [STACK] int 
 36675 ;; Registers used:
 36676 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 36677 ;; Tracked objects:
 36678 ;;		On entry : 0/3
 36679 ;;		On exit  : 0/0
 36680 ;;		Unchanged: 0/0
 36681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36686 ;;Total ram usage:        0 bytes
 36687 ;; Hardware stack levels used:    1
 36688 ;; Hardware stack levels required when called:   19
 36689 ;; This function calls:
 36690 ;;		_fputc
 36691 ;;		_fputs
 36692 ;;		_strlen
 36693 ;; This function is called by:
 36694 ;;		_ctoa
 36695 ;;		_dtoa
 36696 ;;		_efgtoa
 36697 ;;		_utoa
 36698 ;;		_xtoa
 36699 ;; This function uses a reentrant model
 36700 ;;
 36701                           
 36702                           	psect	text121
 36703  01FE1E                     __ptext121:
 36704                           	opt callstack 0
 36705  01FE1E                     _pad:
 36706                           	opt callstack 0
 36707                           
 36708                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36709  01FE1E  52E6               	movf	postinc1,f,c
 36710  01FE20  52E6               	movf	postinc1,f,c
 36711  01FE22  52E6               	movf	postinc1,f,c
 36712  01FE24  52E6               	movf	postinc1,f,c
 36713                           
 36714                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 36715                           
 36716                           ;incstack = 0
 36717 ;; hardware stack exceeded
 36718  01FE26  A04E               	btfss	_flags^0,0,c
 36719  01FE28  D010               	goto	l15609
 36720                           
 36721                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 36722                           ;stkvar	_fp @ sp[(-4)+-2]
 36723  01FE2A  0EFA               	movlw	-6
 36724  01FE2C  006F FF8F FFE6     	movff	plusw1,postinc1
 36725  01FE32  006F FF8F FFE6     	movff	plusw1,postinc1
 36726                           
 36727                           ;stkvar	_buf @ sp[(-6)+-4]
 36728  01FE38  0EF6               	movlw	-10
 36729  01FE3A  006F FF8F FFE6     	movff	plusw1,postinc1
 36730  01FE40  006F FF8F FFE6     	movff	plusw1,postinc1
 36731  01FE46  EC03  F009         	call	_fputs	;wreg free
 36732  01FE4A                     l15609:
 36733                           
 36734                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 36735                           ;stkvar	_p @ sp[(-4)+-6]
 36736  01FE4A  0EF7               	movlw	-9
 36737  01FE4C  BEE3               	btfsc	plusw1,7,c
 36738  01FE4E  D011               	goto	l15613
 36739                           
 36740                           ;stkvar	_p @ sp[(-4)+-6]
 36741                           ;stkvar	_w @ sp[(-4)+0]
 36742  01FE50  0EF6               	movlw	-10
 36743  01FE52  006F FF8C  F02A    	movff	plusw1,btemp
 36744  01FE58  0EFC               	movlw	-4
 36745  01FE5A  0060  F0AB  FFE3   	movff	btemp,plusw1
 36746  01FE60  0EF7               	movlw	-9
 36747  01FE62  006F FF8C  F02A    	movff	plusw1,btemp
 36748  01FE68  0EFD               	movlw	-3
 36749  01FE6A  0060  F0AB  FFE3   	movff	btemp,plusw1
 36750  01FE70  D004               	goto	l2476
 36751  01FE72                     l15613:
 36752                           
 36753                           ;stkvar	_w @ sp[(-4)+0]
 36754  01FE72  0EFC               	movlw	-4
 36755  01FE74  6AE3               	clrf	plusw1,c
 36756  01FE76  0EFD               	movlw	-3
 36757  01FE78  6AE3               	clrf	plusw1,c
 36758  01FE7A                     l2476:
 36759                           
 36760                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 36761                           ;stkvar	_i @ sp[(-4)+2]
 36762  01FE7A  0EFE               	movlw	-2
 36763  01FE7C  6AE3               	clrf	plusw1,c
 36764  01FE7E  0EFF               	movlw	-1
 36765  01FE80  6AE3               	clrf	plusw1,c
 36766                           
 36767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 36768  01FE82  D01E               	goto	l15619
 36769  01FE84                     l15615:
 36770                           
 36771                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 36772                           ;stkvar	_fp @ sp[(-4)+-2]
 36773  01FE84  0EFA               	movlw	-6
 36774  01FE86  006F FF8F FFE6     	movff	plusw1,postinc1
 36775  01FE8C  006F FF8F FFE6     	movff	plusw1,postinc1
 36776  01FE92  0E20               	movlw	32
 36777  01FE94  6EE6               	movwf	postinc1,c
 36778  01FE96  0E00               	movlw	0
 36779  01FE98  6EE6               	movwf	postinc1,c
 36780  01FE9A  ECD8  F0FC         	call	_fputc	;wreg free
 36781                           
 36782                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 36783                           ;stkvar	_i @ sp[(-4)+2]
 36784  01FE9E  0EFE               	movlw	-2
 36785  01FEA0  50E3               	movf	plusw1,w,c
 36786  01FEA2  0F01               	addlw	1
 36787  01FEA4  6E2A               	movwf	btemp^0,c
 36788  01FEA6  0EFE               	movlw	-2
 36789  01FEA8  0060  F0AB  FFE3   	movff	btemp,plusw1
 36790  01FEAE  6A2A               	clrf	btemp^0,c
 36791  01FEB0  0EFF               	movlw	-1
 36792  01FEB2  50E3               	movf	plusw1,w,c
 36793  01FEB4  202A               	addwfc	btemp^0,w,c
 36794  01FEB6  6E2A               	movwf	btemp^0,c
 36795  01FEB8  0EFF               	movlw	-1
 36796  01FEBA  0060  F0AB  FFE3   	movff	btemp,plusw1
 36797  01FEC0                     l15619:
 36798                           
 36799                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 36800                           ;stkvar	_w @ sp[(-4)+0]
 36801                           ;stkvar	_i @ sp[(-4)+2]
 36802  01FEC0  50E1               	movf	fsr1l,w,c
 36803  01FEC2  0FFE               	addlw	-2
 36804  01FEC4  6ED9               	movwf	fsr2l,c
 36805  01FEC6  50E2               	movf	fsr1h,w,c
 36806  01FEC8  6EDA               	movwf	fsr2h,c
 36807  01FECA  0EFF               	movlw	255
 36808  01FECC  22DA               	addwfc	fsr2h,f,c
 36809  01FECE  0EFC               	movlw	-4
 36810  01FED0  50E3               	movf	plusw1,w,c
 36811  01FED2  5CDE               	subwf	postinc2,w,c
 36812  01FED4  50DE               	movf	postinc2,w,c
 36813  01FED6  0A80               	xorlw	128
 36814  01FED8  6E2A               	movwf	btemp^0,c
 36815  01FEDA  0EFD               	movlw	-3
 36816  01FEDC  50E3               	movf	plusw1,w,c
 36817  01FEDE  0A80               	xorlw	128
 36818  01FEE0  582A               	subwfb	btemp^0,w,c
 36819  01FEE2  A0D8               	btfss	status,0,c
 36820  01FEE4  D7CF               	goto	l15615
 36821                           
 36822                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 36823  01FEE6  B04E               	btfsc	_flags^0,0,c
 36824  01FEE8  D010               	goto	l15623
 36825                           
 36826                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 36827                           ;stkvar	_fp @ sp[(-4)+-2]
 36828  01FEEA  0EFA               	movlw	-6
 36829  01FEEC  006F FF8F FFE6     	movff	plusw1,postinc1
 36830  01FEF2  006F FF8F FFE6     	movff	plusw1,postinc1
 36831                           
 36832                           ;stkvar	_buf @ sp[(-6)+-4]
 36833  01FEF8  0EF6               	movlw	-10
 36834  01FEFA  006F FF8F FFE6     	movff	plusw1,postinc1
 36835  01FF00  006F FF8F FFE6     	movff	plusw1,postinc1
 36836  01FF06  EC03  F009         	call	_fputs	;wreg free
 36837  01FF0A                     l15623:
 36838                           
 36839                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 36840                           ;stkvar	_w @ sp[(-4)+0]
 36841                           ;stkvar	_buf @ sp[(-4)+-4]
 36842  01FF0A  0EF8               	movlw	-8
 36843  01FF0C  006F FF8F FFE6     	movff	plusw1,postinc1
 36844  01FF12  006F FF8F FFE6     	movff	plusw1,postinc1
 36845  01FF18  EC65  F008         	call	_strlen	;wreg free
 36846  01FF1C  0EFC               	movlw	-4
 36847  01FF1E  50E3               	movf	plusw1,w,c
 36848  01FF20  262A               	addwf	btemp^0,f,c
 36849  01FF22  0EFD               	movlw	-3
 36850  01FF24  50E3               	movf	plusw1,w,c
 36851  01FF26  222B               	addwfc	(btemp+1)^0,f,c
 36852                           
 36853                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 36854  01FF28  0EF6               	movlw	246
 36855  01FF2A  26E1               	addwf	fsr1l,f,c
 36856  01FF2C  0EFF               	movlw	255
 36857  01FF2E  22E2               	addwfc	fsr1h,f,c
 36858  01FF30  0012               	return		;funcret
 36859  01FF32                     __end_of_pad:
 36860                           	opt callstack 0
 36861                           
 36862 ;; *************** function _strlen *****************
 36863 ;; Defined at:
 36864 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 36865 ;; Parameters:    Size  Location     Type
 36866 ;;  s               2  [STACK] PTR const unsigned char 
 36867 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 36868 ;;		 -> dbuf(80), spin(120), STR_84(9), STR_83(12), 
 36869 ;;		 -> D.lcd(640), D(642), T(176), port_data(512), 
 36870 ;;		 -> cp(4), cb(4), STR_3(5), V(181), 
 36871 ;; Auto vars:     Size  Location     Type
 36872 ;;  a               2  [STACK] PTR const unsigned char 
 36873 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 36874 ;;		 -> dbuf(80), spin(120), STR_84(9), STR_83(12), 
 36875 ;;		 -> D.lcd(640), D(642), T(176), port_data(512), 
 36876 ;;		 -> cp(4), cb(4), STR_3(5), V(181), 
 36877 ;; Return value:  Size  Location     Type
 36878 ;;                  2  [STACK] unsigned int 
 36879 ;; Registers used:
 36880 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 36881 ;; Tracked objects:
 36882 ;;		On entry : 0/0
 36883 ;;		On exit  : 0/0
 36884 ;;		Unchanged: 0/0
 36885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36890 ;;Total ram usage:        0 bytes
 36891 ;; Hardware stack levels used:    1
 36892 ;; Hardware stack levels required when called:   15
 36893 ;; This function calls:
 36894 ;;		Nothing
 36895 ;; This function is called by:
 36896 ;;		_eaDogM_WriteString
 36897 ;;		_spinners
 36898 ;;		_calc_bsoc
 36899 ;;		_pad
 36900 ;;		_stoa
 36901 ;; This function uses a reentrant model
 36902 ;;
 36903                           
 36904                           	psect	text122
 36905  0010CA                     __ptext122:
 36906                           	opt callstack 0
 36907  0010CA                     _strlen:
 36908                           	opt callstack 0
 36909                           
 36910                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36911  0010CA  52E6               	movf	postinc1,f,c
 36912  0010CC  52E6               	movf	postinc1,f,c
 36913                           
 36914                           ;stkvar	_s @ sp[(-2)+-2]
 36915                           
 36916                           ;incstack = 0
 36917 ;; hardware stack exceeded
 36918  0010CE  0EFC               	movlw	-4
 36919  0010D0  006F FF8C  F034    	movff	plusw1,btemp+10
 36920  0010D6  0EFD               	movlw	-3
 36921  0010D8  006F FF8C  F035    	movff	plusw1,btemp+11
 36922                           
 36923                           ;stkvar	_a @ sp[(-2)+0]
 36924  0010DE  0EFF               	movlw	-1
 36925  0010E0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 36926  0010E6  0EFE               	movlw	-2
 36927  0010E8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 36928  0010EE  D011               	goto	l15549
 36929  0010F0                     l15547:
 36930                           
 36931                           ;stkvar	_s @ sp[(-2)+-2]
 36932  0010F0  0EFC               	movlw	-4
 36933  0010F2  50E3               	movf	plusw1,w,c
 36934  0010F4  0F01               	addlw	1
 36935  0010F6  6E2A               	movwf	btemp^0,c
 36936  0010F8  0EFC               	movlw	-4
 36937  0010FA  0060  F0AB  FFE3   	movff	btemp,plusw1
 36938  001100  6A2A               	clrf	btemp^0,c
 36939  001102  0EFD               	movlw	-3
 36940  001104  50E3               	movf	plusw1,w,c
 36941  001106  202A               	addwfc	btemp^0,w,c
 36942  001108  6E2A               	movwf	btemp^0,c
 36943  00110A  0EFD               	movlw	-3
 36944  00110C  0060  F0AB  FFE3   	movff	btemp,plusw1
 36945  001112                     l15549:
 36946                           
 36947                           ;stkvar	_s @ sp[(-2)+-2]
 36948  001112  0EFC               	movlw	-4
 36949  001114  006F FF8F FFF6     	movff	plusw1,tblptrl
 36950  00111A  0EFD               	movlw	-3
 36951  00111C  006F FF8F FFF7     	movff	plusw1,tblptrh
 36952  001122  0E00               	movlw	low (__mediumconst shr (0+16))
 36953  001124  6EF8               	movwf	tblptru,c
 36954  001126  0E1F               	movlw	(high __ramtop+-1)
 36955  001128  64F7               	cpfsgt	tblptrh,c
 36956  00112A  D003               	bra	u14427
 36957  00112C  0008               	tblrd		*
 36958  00112E  50F5               	movf	tablat,w,c
 36959  001130  D007               	bra	u14420
 36960  001132                     u14427:
 36961  001132  006F FFDB FFE9     	movff	tblptrl,fsr0l
 36962  001138  006F FFDF FFEA     	movff	tblptrh,fsr0h
 36963  00113E  50EF               	movf	indf0,w,c
 36964  001140                     u14420:
 36965  001140  0900               	iorlw	0
 36966  001142  A4D8               	btfss	status,2,c
 36967  001144  D7D5               	goto	l15547
 36968                           
 36969                           ;stkvar	_a @ sp[(-2)+0]
 36970                           ;stkvar	_s @ sp[(-2)+-2]
 36971  001146  0EFC               	movlw	-4
 36972  001148  006F FF8C  F02A    	movff	plusw1,btemp
 36973  00114E  0EFD               	movlw	-3
 36974  001150  006F FF8C  F02B    	movff	plusw1,btemp+1
 36975  001156  0EFE               	movlw	-2
 36976  001158  50E3               	movf	plusw1,w,c
 36977  00115A  5E2A               	subwf	btemp^0,f,c
 36978  00115C  0EFF               	movlw	-1
 36979  00115E  50E3               	movf	plusw1,w,c
 36980  001160  5A2B               	subwfb	(btemp+1)^0,f,c
 36981                           
 36982                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 36983  001162  52E5               	movf	postdec1,f,c
 36984  001164  52E5               	movf	postdec1,f,c
 36985  001166  52E5               	movf	postdec1,f,c
 36986  001168  52E5               	movf	postdec1,f,c
 36987  00116A  0012               	return		;funcret
 36988  00116C                     __end_of_strlen:
 36989                           	opt callstack 0
 36990                           
 36991 ;; *************** function _fputs *****************
 36992 ;; Defined at:
 36993 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 36994 ;; Parameters:    Size  Location     Type
 36995 ;;  s               2  [STACK] PTR const unsigned char 
 36996 ;;		 -> dbuf(80), 
 36997 ;;  fp              2  [STACK] PTR struct _IO_FILE
 36998 ;;		 -> f(6), NULL(0), 
 36999 ;; Auto vars:     Size  Location     Type
 37000 ;;  i               2  [STACK] int 
 37001 ;;  c               1  [STACK] unsigned char 
 37002 ;; Return value:  Size  Location     Type
 37003 ;;                  2  [STACK] int 
 37004 ;; Registers used:
 37005 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 37006 ;; Tracked objects:
 37007 ;;		On entry : 0/3
 37008 ;;		On exit  : 0/0
 37009 ;;		Unchanged: 0/0
 37010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37015 ;;Total ram usage:        0 bytes
 37016 ;; Hardware stack levels used:    1
 37017 ;; Hardware stack levels required when called:   18
 37018 ;; This function calls:
 37019 ;;		_fputc
 37020 ;; This function is called by:
 37021 ;;		_pad
 37022 ;; This function uses a reentrant model
 37023 ;;
 37024                           
 37025                           	psect	text123
 37026  001206                     __ptext123:
 37027                           	opt callstack 0
 37028  001206                     _fputs:
 37029                           	opt callstack 0
 37030                           
 37031                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37032  001206  52E6               	movf	postinc1,f,c
 37033  001208  52E6               	movf	postinc1,f,c
 37034  00120A  52E6               	movf	postinc1,f,c
 37035                           
 37036                           ;stkvar	_i @ sp[(-3)+0]
 37037                           
 37038                           ;incstack = 0
 37039 ;; hardware stack exceeded
 37040  00120C  0EFD               	movlw	-3
 37041  00120E  6AE3               	clrf	plusw1,c
 37042  001210  0EFE               	movlw	-2
 37043  001212  6AE3               	clrf	plusw1,c
 37044  001214  D01F               	goto	l15561
 37045  001216                     l15557:
 37046                           
 37047                           ;stkvar	_fp @ sp[(-3)+-4]
 37048  001216  0EF9               	movlw	-7
 37049  001218  006F FF8F FFE6     	movff	plusw1,postinc1
 37050  00121E  006F FF8F FFE6     	movff	plusw1,postinc1
 37051                           
 37052                           ;stkvar	_c @ sp[(-5)+2]
 37053  001224  0EFD               	movlw	-3
 37054  001226  50E3               	movf	plusw1,w,c
 37055  001228  6EE6               	movwf	postinc1,c
 37056  00122A  0E00               	movlw	0
 37057  00122C  6EE6               	movwf	postinc1,c
 37058  00122E  ECD8  F0FC         	call	_fputc	;wreg free
 37059                           
 37060                           ;stkvar	_i @ sp[(-3)+0]
 37061  001232  0EFD               	movlw	-3
 37062  001234  50E3               	movf	plusw1,w,c
 37063  001236  0F01               	addlw	1
 37064  001238  6E2A               	movwf	btemp^0,c
 37065  00123A  0EFD               	movlw	-3
 37066  00123C  0060  F0AB  FFE3   	movff	btemp,plusw1
 37067  001242  6A2A               	clrf	btemp^0,c
 37068  001244  0EFE               	movlw	-2
 37069  001246  50E3               	movf	plusw1,w,c
 37070  001248  202A               	addwfc	btemp^0,w,c
 37071  00124A  6E2A               	movwf	btemp^0,c
 37072  00124C  0EFE               	movlw	-2
 37073  00124E  0060  F0AB  FFE3   	movff	btemp,plusw1
 37074  001254                     l15561:
 37075                           
 37076                           ;stkvar	_i @ sp[(-3)+0]
 37077  001254  0EFD               	movlw	-3
 37078  001256  006F FF8C  F034    	movff	plusw1,btemp+10
 37079  00125C  0EFE               	movlw	-2
 37080  00125E  006F FF8C  F035    	movff	plusw1,btemp+11
 37081                           
 37082                           ;stkvar	_s @ sp[(-3)+-2]
 37083  001264  0EFB               	movlw	-5
 37084  001266  006F FF8C  F032    	movff	plusw1,btemp+8
 37085  00126C  0EFC               	movlw	-4
 37086  00126E  006F FF8C  F033    	movff	plusw1,btemp+9
 37087  001274  5034               	movf	(btemp+10)^0,w,c
 37088  001276  2432               	addwf	(btemp+8)^0,w,c
 37089  001278  6ED9               	movwf	fsr2l,c
 37090  00127A  5035               	movf	(btemp+11)^0,w,c
 37091  00127C  2033               	addwfc	(btemp+9)^0,w,c
 37092  00127E  6EDA               	movwf	fsr2h,c
 37093  001280  50DF               	movf	indf2,w,c
 37094  001282  6E35               	movwf	(btemp+11)^0,c
 37095                           
 37096                           ;stkvar	_c @ sp[(-3)+2]
 37097  001284  0EFF               	movlw	-1
 37098  001286  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 37099  00128C  0EFF               	movlw	-1
 37100  00128E  50E3               	movf	plusw1,w,c
 37101  001290  A4D8               	btfss	status,2,c
 37102  001292  D7C1               	goto	l15557
 37103                           
 37104                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 37105  001294  0EF9               	movlw	249
 37106  001296  26E1               	addwf	fsr1l,f,c
 37107  001298  0EFF               	movlw	255
 37108  00129A  22E2               	addwfc	fsr1h,f,c
 37109  00129C  0012               	return		;funcret
 37110  00129E                     __end_of_fputs:
 37111                           	opt callstack 0
 37112                           
 37113 ;; *************** function _fputc *****************
 37114 ;; Defined at:
 37115 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 37116 ;; Parameters:    Size  Location     Type
 37117 ;;  c               2  [STACK] int 
 37118 ;;  fp              2  [STACK] PTR struct _IO_FILE
 37119 ;;		 -> f(6), NULL(0), 
 37120 ;; Auto vars:     Size  Location     Type
 37121 ;;		None
 37122 ;; Return value:  Size  Location     Type
 37123 ;;                  2  [STACK] int 
 37124 ;; Registers used:
 37125 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 37126 ;; Tracked objects:
 37127 ;;		On entry : 0/0
 37128 ;;		On exit  : 0/0
 37129 ;;		Unchanged: 0/0
 37130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37135 ;;Total ram usage:        0 bytes
 37136 ;; Hardware stack levels used:    1
 37137 ;; Hardware stack levels required when called:   17
 37138 ;; This function calls:
 37139 ;;		_putch
 37140 ;; This function is called by:
 37141 ;;		_pad
 37142 ;;		_stoa
 37143 ;;		_vfpfcnvrt
 37144 ;;		_fputs
 37145 ;; This function uses a reentrant model
 37146 ;;
 37147                           
 37148                           	psect	text124
 37149  01F9B0                     __ptext124:
 37150                           	opt callstack 0
 37151  01F9B0                     _fputc:
 37152                           	opt callstack 0
 37153                           
 37154                           ;stkvar	_fp @ sp[(0)+-4]
 37155                           
 37156                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37157                           ;incstack = 0
 37158 ;; hardware stack exceeded
 37159  01F9B0  0EFC               	movlw	-4
 37160  01F9B2  006F FF8C  F02A    	movff	plusw1,btemp
 37161  01F9B8  0EFD               	movlw	-3
 37162  01F9BA  50E3               	movf	plusw1,w,c
 37163  01F9BC  102A               	iorwf	btemp^0,w,c
 37164  01F9BE  B4D8               	btfsc	status,2,c
 37165  01F9C0  D009               	goto	u14390
 37166                           
 37167                           ;stkvar	_fp @ sp[(0)+-4]
 37168  01F9C2  0EFC               	movlw	-4
 37169  01F9C4  006F FF8C  F02A    	movff	plusw1,btemp
 37170  01F9CA  0EFD               	movlw	-3
 37171  01F9CC  50E3               	movf	plusw1,w,c
 37172  01F9CE  102A               	iorwf	btemp^0,w,c
 37173  01F9D0  A4D8               	btfss	status,2,c
 37174  01F9D2  D006               	goto	l15535
 37175  01F9D4                     u14390:
 37176                           
 37177                           ;stkvar	_c @ sp[(0)+-2]
 37178  01F9D4  0EFE               	movlw	-2
 37179  01F9D6  50E3               	movf	plusw1,w,c
 37180  01F9D8  6EE6               	movwf	postinc1,c
 37181  01F9DA  ECFA  F016         	call	_putch	;wreg free
 37182  01F9DE  D075               	goto	l3552
 37183  01F9E0                     l15535:
 37184                           
 37185                           ;stkvar	_fp @ sp[(0)+-4]
 37186  01F9E0  0EFC               	movlw	-4
 37187  01F9E2  006F FF8C  F034    	movff	plusw1,btemp+10
 37188  01F9E8  0EFD               	movlw	-3
 37189  01F9EA  006F FF8C  F035    	movff	plusw1,btemp+11
 37190  01F9F0  0E04               	movlw	4
 37191  01F9F2  2434               	addwf	(btemp+10)^0,w,c
 37192  01F9F4  6ED9               	movwf	fsr2l,c
 37193  01F9F6  0E00               	movlw	0
 37194  01F9F8  2035               	addwfc	(btemp+11)^0,w,c
 37195  01F9FA  6EDA               	movwf	fsr2h,c
 37196  01F9FC  50DE               	movf	postinc2,w,c
 37197  01F9FE  10DE               	iorwf	postinc2,w,c
 37198  01FA00  B4D8               	btfsc	status,2,c
 37199  01FA02  D026               	goto	u14410
 37200                           
 37201                           ;stkvar	_fp @ sp[(0)+-4]
 37202  01FA04  0EFC               	movlw	-4
 37203  01FA06  006F FF8C  F034    	movff	plusw1,btemp+10
 37204  01FA0C  0EFD               	movlw	-3
 37205  01FA0E  006F FF8C  F035    	movff	plusw1,btemp+11
 37206  01FA14  0E04               	movlw	4
 37207  01FA16  2434               	addwf	(btemp+10)^0,w,c
 37208  01FA18  6ED9               	movwf	fsr2l,c
 37209  01FA1A  0E00               	movlw	0
 37210  01FA1C  2035               	addwfc	(btemp+11)^0,w,c
 37211  01FA1E  6EDA               	movwf	fsr2h,c
 37212                           
 37213                           ;stkvar	_fp @ sp[(0)+-4]
 37214  01FA20  0EFC               	movlw	-4
 37215  01FA22  006F FF8C  F034    	movff	plusw1,btemp+10
 37216  01FA28  0EFD               	movlw	-3
 37217  01FA2A  006F FF8C  F035    	movff	plusw1,btemp+11
 37218  01FA30  0E02               	movlw	2
 37219  01FA32  2434               	addwf	(btemp+10)^0,w,c
 37220  01FA34  6EE9               	movwf	fsr0l,c
 37221  01FA36  0E00               	movlw	0
 37222  01FA38  2035               	addwfc	(btemp+11)^0,w,c
 37223  01FA3A  6EEA               	movwf	fsr0h,c
 37224  01FA3C  50DE               	movf	postinc2,w,c
 37225  01FA3E  5CEE               	subwf	postinc0,w,c
 37226  01FA40  50EE               	movf	postinc0,w,c
 37227  01FA42  0A80               	xorlw	128
 37228  01FA44  6E2A               	movwf	btemp^0,c
 37229  01FA46  50DE               	movf	postinc2,w,c
 37230  01FA48  0A80               	xorlw	128
 37231  01FA4A  582A               	subwfb	btemp^0,w,c
 37232  01FA4C  B0D8               	btfsc	status,0,c
 37233  01FA4E  D03D               	goto	l3552
 37234  01FA50                     u14410:
 37235                           
 37236                           ;stkvar	_c @ sp[(0)+-2]
 37237                           ;stkvar	_fp @ sp[(0)+-4]
 37238  01FA50  0EFC               	movlw	-4
 37239  01FA52  006F FF8C  F034    	movff	plusw1,btemp+10
 37240  01FA58  0EFD               	movlw	-3
 37241  01FA5A  006F FF8C  F035    	movff	plusw1,btemp+11
 37242  01FA60  0E02               	movlw	2
 37243  01FA62  2434               	addwf	(btemp+10)^0,w,c
 37244  01FA64  6ED9               	movwf	fsr2l,c
 37245  01FA66  0E00               	movlw	0
 37246  01FA68  2035               	addwfc	(btemp+11)^0,w,c
 37247  01FA6A  6EDA               	movwf	fsr2h,c
 37248  01FA6C  006F FF78  F034    	movff	postinc2,btemp+10
 37249  01FA72  006F FF74  F035    	movff	postdec2,btemp+11
 37250                           
 37251                           ;stkvar	_fp @ sp[(0)+-4]
 37252  01FA78  0EFC               	movlw	-4
 37253  01FA7A  006F FF8F FFD9     	movff	plusw1,fsr2l
 37254  01FA80  0EFD               	movlw	-3
 37255  01FA82  006F FF8F FFDA     	movff	plusw1,fsr2h
 37256  01FA88  006F FF78  F032    	movff	postinc2,btemp+8
 37257  01FA8E  006F FF74  F033    	movff	postdec2,btemp+9
 37258  01FA94  5034               	movf	(btemp+10)^0,w,c
 37259  01FA96  2432               	addwf	(btemp+8)^0,w,c
 37260  01FA98  6ED9               	movwf	fsr2l,c
 37261  01FA9A  5035               	movf	(btemp+11)^0,w,c
 37262  01FA9C  2033               	addwfc	(btemp+9)^0,w,c
 37263  01FA9E  6EDA               	movwf	fsr2h,c
 37264  01FAA0  0EFE               	movlw	-2
 37265  01FAA2  006F FF8F FFDF     	movff	plusw1,indf2
 37266                           
 37267                           ;stkvar	_fp @ sp[(0)+-4]
 37268  01FAA8  0EFC               	movlw	-4
 37269  01FAAA  006F FF8C  F034    	movff	plusw1,btemp+10
 37270  01FAB0  0EFD               	movlw	-3
 37271  01FAB2  006F FF8C  F035    	movff	plusw1,btemp+11
 37272  01FAB8  0E02               	movlw	2
 37273  01FABA  2434               	addwf	(btemp+10)^0,w,c
 37274  01FABC  6ED9               	movwf	fsr2l,c
 37275  01FABE  0E00               	movlw	0
 37276  01FAC0  2035               	addwfc	(btemp+11)^0,w,c
 37277  01FAC2  6EDA               	movwf	fsr2h,c
 37278  01FAC4  2ADE               	incf	postinc2,f,c
 37279  01FAC6  0E00               	movlw	0
 37280  01FAC8  22DD               	addwfc	postdec2,f,c
 37281  01FACA                     l3552:
 37282                           
 37283                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 37284  01FACA  52E5               	movf	postdec1,f,c
 37285  01FACC  52E5               	movf	postdec1,f,c
 37286  01FACE  52E5               	movf	postdec1,f,c
 37287  01FAD0  52E5               	movf	postdec1,f,c
 37288  01FAD2  0012               	return		;funcret
 37289  01FAD4                     __end_of_fputc:
 37290                           	opt callstack 0
 37291                           
 37292 ;; *************** function _putch *****************
 37293 ;; Defined at:
 37294 ;;		line 420 in file "eadog.c"
 37295 ;; Parameters:    Size  Location     Type
 37296 ;;  c               1  [STACK] unsigned char 
 37297 ;; Auto vars:     Size  Location     Type
 37298 ;;		None
 37299 ;; Return value:  Size  Location     Type
 37300 ;;                  1  [STACK] void 
 37301 ;; Registers used:
 37302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 37303 ;; Tracked objects:
 37304 ;;		On entry : 0/0
 37305 ;;		On exit  : 0/0
 37306 ;;		Unchanged: 0/0
 37307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37312 ;;Total ram usage:        0 bytes
 37313 ;; Hardware stack levels used:    1
 37314 ;; Hardware stack levels required when called:   16
 37315 ;; This function calls:
 37316 ;;		_ringBufS_put_dma
 37317 ;; This function is called by:
 37318 ;;		_fputc
 37319 ;; This function uses a reentrant model
 37320 ;;
 37321                           
 37322                           	psect	text125
 37323  002DF4                     __ptext125:
 37324                           	opt callstack 0
 37325  002DF4                     _putch:
 37326                           	opt callstack 0
 37327                           
 37328                           ;eadog.c: 420: void putch(char c);eadog.c: 421: {;eadog.c: 422:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 37329                           ;stkvar	_c @ sp[(0)+-1]
 37330                           
 37331                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37332                           ;incstack = 0
 37333 ;; hardware stack exceeded
 37334  002DF4  0EFF               	movlw	-1
 37335  002DF6  50E3               	movf	plusw1,w,c
 37336  002DF8  6EE6               	movwf	postinc1,c
 37337  002DFA  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 37338  002E00  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 37339  002E06  EC6B  F007         	call	_ringBufS_put_dma	;wreg free
 37340                           
 37341                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 37342  002E0A  52E5               	movf	postdec1,f,c
 37343  002E0C  0012               	return		;funcret
 37344  002E0E                     __end_of_putch:
 37345                           	opt callstack 0
 37346                           
 37347 ;; *************** function _ringBufS_put_dma *****************
 37348 ;; Defined at:
 37349 ;;		line 67 in file "ringbufs.c"
 37350 ;; Parameters:    Size  Location     Type
 37351 ;;  _this           2  [STACK] PTR struct ringBufS_t
 37352 ;;		 -> ring_buf1(67), 
 37353 ;;  c               1  [STACK] const unsigned char 
 37354 ;; Auto vars:     Size  Location     Type
 37355 ;;		None
 37356 ;; Return value:  Size  Location     Type
 37357 ;;                  1  [STACK] void 
 37358 ;; Registers used:
 37359 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 37360 ;; Tracked objects:
 37361 ;;		On entry : 0/3B
 37362 ;;		On exit  : 0/0
 37363 ;;		Unchanged: 0/0
 37364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37369 ;;Total ram usage:        0 bytes
 37370 ;; Hardware stack levels used:    1
 37371 ;; Hardware stack levels required when called:   15
 37372 ;; This function calls:
 37373 ;;		Nothing
 37374 ;; This function is called by:
 37375 ;;		_send_lcd_data_dma
 37376 ;;		_putch
 37377 ;; This function uses a reentrant model
 37378 ;;
 37379                           
 37380                           	psect	text126
 37381  000ED6                     __ptext126:
 37382                           	opt callstack 0
 37383  000ED6                     _ringBufS_put_dma:
 37384                           	opt callstack 0
 37385                           
 37386                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 37387                           ;stkvar	__this @ sp[(0)+-2]
 37388                           
 37389                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37390                           ;incstack = 0
 37391 ;; hardware stack exceeded
 37392  000ED6  0EFE               	movlw	-2
 37393  000ED8  006F FF8C  F034    	movff	plusw1,btemp+10
 37394  000EDE  0EFF               	movlw	-1
 37395  000EE0  006F FF8C  F035    	movff	plusw1,btemp+11
 37396  000EE6  0E42               	movlw	66
 37397  000EE8  2434               	addwf	(btemp+10)^0,w,c
 37398  000EEA  6ED9               	movwf	fsr2l,c
 37399  000EEC  0E00               	movlw	0
 37400  000EEE  2035               	addwfc	(btemp+11)^0,w,c
 37401  000EF0  6EDA               	movwf	fsr2h,c
 37402  000EF2  0E40               	movlw	64
 37403  000EF4  60DF               	cpfslt	indf2,c
 37404  000EF6  D040               	goto	l1753
 37405                           
 37406                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 37407                           ;stkvar	_c @ sp[(0)+-3]
 37408                           ;stkvar	__this @ sp[(0)+-2]
 37409  000EF8  0EFE               	movlw	-2
 37410  000EFA  006F FF8C  F034    	movff	plusw1,btemp+10
 37411  000F00  0EFF               	movlw	-1
 37412  000F02  006F FF8C  F035    	movff	plusw1,btemp+11
 37413  000F08  0E40               	movlw	64
 37414  000F0A  2434               	addwf	(btemp+10)^0,w,c
 37415  000F0C  6ED9               	movwf	fsr2l,c
 37416  000F0E  0E00               	movlw	0
 37417  000F10  2035               	addwfc	(btemp+11)^0,w,c
 37418  000F12  6EDA               	movwf	fsr2h,c
 37419  000F14  50DF               	movf	indf2,w,c
 37420  000F16  6E35               	movwf	(btemp+11)^0,c
 37421                           
 37422                           ;stkvar	__this @ sp[(0)+-2]
 37423  000F18  0EFE               	movlw	-2
 37424  000F1A  006F FF8C  F032    	movff	plusw1,btemp+8
 37425  000F20  0EFF               	movlw	-1
 37426  000F22  006F FF8C  F033    	movff	plusw1,btemp+9
 37427  000F28  5035               	movf	(btemp+11)^0,w,c
 37428  000F2A  2432               	addwf	(btemp+8)^0,w,c
 37429  000F2C  6ED9               	movwf	fsr2l,c
 37430  000F2E  0E00               	movlw	0
 37431  000F30  2033               	addwfc	(btemp+9)^0,w,c
 37432  000F32  6EDA               	movwf	fsr2h,c
 37433  000F34  0EFD               	movlw	-3
 37434  000F36  006F FF8F FFDF     	movff	plusw1,indf2
 37435                           
 37436                           ;ringbufs.c: 71:   ++_this->head;
 37437                           ;stkvar	__this @ sp[(0)+-2]
 37438  000F3C  0EFE               	movlw	-2
 37439  000F3E  006F FF8C  F034    	movff	plusw1,btemp+10
 37440  000F44  0EFF               	movlw	-1
 37441  000F46  006F FF8C  F035    	movff	plusw1,btemp+11
 37442  000F4C  0E40               	movlw	64
 37443  000F4E  2434               	addwf	(btemp+10)^0,w,c
 37444  000F50  6ED9               	movwf	fsr2l,c
 37445  000F52  0E00               	movlw	0
 37446  000F54  2035               	addwfc	(btemp+11)^0,w,c
 37447  000F56  6EDA               	movwf	fsr2h,c
 37448  000F58  2ADF               	incf	indf2,f,c
 37449                           
 37450                           ;ringbufs.c: 72:   ++_this->count;
 37451                           ;stkvar	__this @ sp[(0)+-2]
 37452  000F5A  0EFE               	movlw	-2
 37453  000F5C  006F FF8C  F034    	movff	plusw1,btemp+10
 37454  000F62  0EFF               	movlw	-1
 37455  000F64  006F FF8C  F035    	movff	plusw1,btemp+11
 37456  000F6A  0E42               	movlw	66
 37457  000F6C  2434               	addwf	(btemp+10)^0,w,c
 37458  000F6E  6ED9               	movwf	fsr2l,c
 37459  000F70  0E00               	movlw	0
 37460  000F72  2035               	addwfc	(btemp+11)^0,w,c
 37461  000F74  6EDA               	movwf	fsr2h,c
 37462  000F76  2ADF               	incf	indf2,f,c
 37463  000F78                     l1753:
 37464                           
 37465                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 37466  000F78  52E5               	movf	postdec1,f,c
 37467  000F7A  52E5               	movf	postdec1,f,c
 37468  000F7C  52E5               	movf	postdec1,f,c
 37469  000F7E  0012               	return		;funcret
 37470  000F80                     __end_of_ringBufS_put_dma:
 37471                           	opt callstack 0
 37472                           
 37473 ;; *************** function _atoi *****************
 37474 ;; Defined at:
 37475 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 37476 ;; Parameters:    Size  Location     Type
 37477 ;;  s               2  [STACK] PTR const unsigned char 
 37478 ;;		 -> STR_103(127), STR_101(3), STR_100(3), STR_99(21), 
 37479 ;;		 -> STR_98(21), STR_97(21), STR_96(21), STR_95(21), 
 37480 ;;		 -> STR_94(21), STR_93(26), STR_92(15), STR_91(15), 
 37481 ;;		 -> STR_90(15), STR_89(15), STR_88(10), STR_87(10), 
 37482 ;;		 -> STR_86(19), STR_85(19), STR_82(3), STR_81(14), 
 37483 ;;		 -> STR_80(28), STR_79(28), STR_78(28), STR_77(22), 
 37484 ;;		 -> STR_76(22), STR_75(22), STR_74(22), STR_73(22), 
 37485 ;;		 -> STR_72(22), STR_71(22), STR_70(22), STR_69(22), 
 37486 ;;		 -> STR_68(19), STR_67(21), STR_66(21), STR_65(21), 
 37487 ;;		 -> STR_64(22), STR_63(22), STR_62(22), STR_61(22), 
 37488 ;;		 -> STR_60(22), STR_59(22), STR_58(22), STR_57(22), 
 37489 ;;		 -> STR_56(22), STR_55(21), STR_54(22), STR_53(22), 
 37490 ;;		 -> STR_52(22), STR_51(22), STR_50(22), STR_49(22), 
 37491 ;;		 -> STR_48(24), STR_47(24), STR_46(24), STR_45(30), 
 37492 ;;		 -> STR_44(24), STR_43(24), STR_42(23), STR_41(23), 
 37493 ;;		 -> STR_40(23), STR_39(23), STR_38(23), STR_37(23), 
 37494 ;;		 -> STR_36(23), STR_35(23), STR_34(23), STR_33(23), 
 37495 ;;		 -> STR_32(23), STR_31(23), STR_30(18), STR_29(17), 
 37496 ;;		 -> STR_28(17), STR_27(22), STR_26(22), STR_25(22), 
 37497 ;;		 -> STR_24(14), STR_23(27), STR_22(27), STR_21(23), 
 37498 ;;		 -> STR_20(22), STR_19(22), STR_18(22), STR_17(22), 
 37499 ;;		 -> STR_16(23), STR_15(23), STR_14(23), STR_13(26), 
 37500 ;;		 -> STR_12(22), STR_11(21), STR_10(21), STR_9(21), 
 37501 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 37502 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 37503 ;; Auto vars:     Size  Location     Type
 37504 ;;  n               2  [STACK] int 
 37505 ;;  neg             2  [STACK] int 
 37506 ;; Return value:  Size  Location     Type
 37507 ;;                  2  [STACK] int 
 37508 ;; Registers used:
 37509 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 37510 ;; Tracked objects:
 37511 ;;		On entry : 0/0
 37512 ;;		On exit  : 0/0
 37513 ;;		Unchanged: 0/0
 37514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37519 ;;Total ram usage:        0 bytes
 37520 ;; Hardware stack levels used:    1
 37521 ;; Hardware stack levels required when called:   16
 37522 ;; This function calls:
 37523 ;;		_isdigit
 37524 ;;		_isspace
 37525 ;; This function is called by:
 37526 ;;		_vfpfcnvrt
 37527 ;; This function uses a reentrant model
 37528 ;;
 37529                           
 37530                           	psect	text127
 37531  01C688                     __ptext127:
 37532                           	opt callstack 0
 37533  01C688                     _atoi:
 37534                           	opt callstack 0
 37535                           
 37536                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37537  01C688  0E09               	movlw	9
 37538  01C68A  26E1               	addwf	fsr1l,f,c
 37539  01C68C  0E00               	movlw	0
 37540  01C68E  22E2               	addwfc	fsr1h,f,c
 37541                           
 37542                           ;stkvar	_n @ sp[(-9)+5]
 37543                           
 37544                           ;incstack = 0
 37545 ;; hardware stack exceeded
 37546  01C690  0EFC               	movlw	-4
 37547  01C692  6AE3               	clrf	plusw1,c
 37548  01C694  0EFD               	movlw	-3
 37549  01C696  6AE3               	clrf	plusw1,c
 37550                           
 37551                           ;stkvar	_neg @ sp[(-9)+7]
 37552  01C698  0EFE               	movlw	-2
 37553  01C69A  6AE3               	clrf	plusw1,c
 37554  01C69C  0EFF               	movlw	-1
 37555  01C69E  6AE3               	clrf	plusw1,c
 37556  01C6A0  D011               	goto	l11541
 37557  01C6A2                     l11539:
 37558                           
 37559                           ;stkvar	_s @ sp[(-9)+-2]
 37560  01C6A2  0EF5               	movlw	-11
 37561  01C6A4  50E3               	movf	plusw1,w,c
 37562  01C6A6  0F01               	addlw	1
 37563  01C6A8  6E2A               	movwf	btemp^0,c
 37564  01C6AA  0EF5               	movlw	-11
 37565  01C6AC  0060  F0AB  FFE3   	movff	btemp,plusw1
 37566  01C6B2  6A2A               	clrf	btemp^0,c
 37567  01C6B4  0EF6               	movlw	-10
 37568  01C6B6  50E3               	movf	plusw1,w,c
 37569  01C6B8  202A               	addwfc	btemp^0,w,c
 37570  01C6BA  6E2A               	movwf	btemp^0,c
 37571  01C6BC  0EF6               	movlw	-10
 37572  01C6BE  0060  F0AB  FFE3   	movff	btemp,plusw1
 37573  01C6C4                     l11541:
 37574                           
 37575                           ;stkvar	_atoi$7233 @ sp[(-9)+4]
 37576  01C6C4  0EFB               	movlw	-5
 37577  01C6C6  6AE3               	clrf	plusw1,c
 37578  01C6C8  2AE3               	incf	plusw1,f,c
 37579                           
 37580                           ;stkvar	_s @ sp[(-9)+-2]
 37581  01C6CA  50E1               	movf	fsr1l,w,c
 37582  01C6CC  0FF5               	addlw	-11
 37583  01C6CE  6ED9               	movwf	fsr2l,c
 37584  01C6D0  50E2               	movf	fsr1h,w,c
 37585  01C6D2  6EDA               	movwf	fsr2h,c
 37586  01C6D4  0EFF               	movlw	255
 37587  01C6D6  22DA               	addwfc	fsr2h,f,c
 37588  01C6D8  006F FF7B FFF6     	movff	postinc2,tblptrl
 37589  01C6DE  006F FF77 FFF7     	movff	postdec2,tblptrh
 37590  01C6E4                     	if	0	;tblptru may be non-zero
 37591  01C6E4                     	endif
 37592  01C6E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 37593  01C6E4  0E00               	movlw	low (__mediumconst shr (0+16))
 37594  01C6E6  6EF8               	movwf	tblptru,c
 37595  01C6E8                     	endif
 37596  01C6E8  0008               	tblrd		*
 37597  01C6EA  50F5               	movf	tablat,w,c
 37598  01C6EC  0A20               	xorlw	32
 37599  01C6EE  B4D8               	btfsc	status,2,c
 37600  01C6F0  D023               	goto	l11549
 37601  01C6F2  0EF7               	movlw	247
 37602  01C6F4  6E34               	movwf	(btemp+10)^0,c
 37603  01C6F6  0EFF               	movlw	255
 37604  01C6F8  6E35               	movwf	(btemp+11)^0,c
 37605                           
 37606                           ;stkvar	_s @ sp[(-9)+-2]
 37607  01C6FA  50E1               	movf	fsr1l,w,c
 37608  01C6FC  0FF5               	addlw	-11
 37609  01C6FE  6ED9               	movwf	fsr2l,c
 37610  01C700  50E2               	movf	fsr1h,w,c
 37611  01C702  6EDA               	movwf	fsr2h,c
 37612  01C704  0EFF               	movlw	255
 37613  01C706  22DA               	addwfc	fsr2h,f,c
 37614  01C708  006F FF7B FFF6     	movff	postinc2,tblptrl
 37615  01C70E  006F FF77 FFF7     	movff	postdec2,tblptrh
 37616  01C714                     	if	0	;tblptru may be non-zero
 37617  01C714                     	endif
 37618  01C714                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 37619  01C714  0E00               	movlw	low (__mediumconst shr (0+16))
 37620  01C716  6EF8               	movwf	tblptru,c
 37621  01C718                     	endif
 37622  01C718  0008               	tblrd		*
 37623  01C71A  50F5               	movf	tablat,w,c
 37624  01C71C  6E32               	movwf	(btemp+8)^0,c
 37625  01C71E  6A33               	clrf	(btemp+9)^0,c
 37626  01C720  5034               	movf	(btemp+10)^0,w,c
 37627  01C722  2632               	addwf	(btemp+8)^0,f,c
 37628  01C724  5035               	movf	(btemp+11)^0,w,c
 37629  01C726  2233               	addwfc	(btemp+9)^0,f,c
 37630  01C728  5033               	movf	(btemp+9)^0,w,c
 37631  01C72A  E104               	bnz	u10480
 37632  01C72C  0E05               	movlw	5
 37633  01C72E  5C32               	subwf	(btemp+8)^0,w,c
 37634  01C730  A0D8               	btfss	status,0,c
 37635  01C732  D002               	goto	l11549
 37636  01C734                     u10480:
 37637                           
 37638                           ;stkvar	_atoi$7233 @ sp[(-9)+4]
 37639  01C734  0EFB               	movlw	-5
 37640  01C736  6AE3               	clrf	plusw1,c
 37641  01C738                     l11549:
 37642                           
 37643                           ;stkvar	_atoi$7233 @ sp[(-9)+4]
 37644  01C738  0EFB               	movlw	-5
 37645  01C73A  50E3               	movf	plusw1,w,c
 37646  01C73C  6E34               	movwf	(btemp+10)^0,c
 37647  01C73E  6A35               	clrf	(btemp+11)^0,c
 37648                           
 37649                           ;stkvar	_atoi$7232 @ sp[(-9)+2]
 37650  01C740  0EF9               	movlw	-7
 37651  01C742  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 37652  01C748  0EFA               	movlw	-6
 37653  01C74A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 37654                           
 37655                           ;stkvar	_atoi$7232 @ sp[(-9)+2]
 37656  01C750  0EF9               	movlw	-7
 37657  01C752  006F FF8C  F02A    	movff	plusw1,btemp
 37658  01C758  0EFA               	movlw	-6
 37659  01C75A  50E3               	movf	plusw1,w,c
 37660  01C75C  102A               	iorwf	btemp^0,w,c
 37661  01C75E  B4D8               	btfsc	status,2,c
 37662  01C760  D01F               	goto	l11559
 37663  01C762  D79F               	goto	l11539
 37664  01C764                     l11555:
 37665  01C764  0E01               	movlw	1
 37666  01C766  6E34               	movwf	(btemp+10)^0,c
 37667  01C768  0E00               	movlw	0
 37668  01C76A  6E35               	movwf	(btemp+11)^0,c
 37669                           
 37670                           ;stkvar	_neg @ sp[(-9)+7]
 37671  01C76C  0EFE               	movlw	-2
 37672  01C76E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 37673  01C774  0EFF               	movlw	-1
 37674  01C776  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 37675  01C77C                     l11557:
 37676                           
 37677                           ;stkvar	_s @ sp[(-9)+-2]
 37678  01C77C  0EF5               	movlw	-11
 37679  01C77E  50E3               	movf	plusw1,w,c
 37680  01C780  0F01               	addlw	1
 37681  01C782  6E2A               	movwf	btemp^0,c
 37682  01C784  0EF5               	movlw	-11
 37683  01C786  0060  F0AB  FFE3   	movff	btemp,plusw1
 37684  01C78C  6A2A               	clrf	btemp^0,c
 37685  01C78E  0EF6               	movlw	-10
 37686  01C790  50E3               	movf	plusw1,w,c
 37687  01C792  202A               	addwfc	btemp^0,w,c
 37688  01C794  6E2A               	movwf	btemp^0,c
 37689  01C796  0EF6               	movlw	-10
 37690  01C798  0060  F0AB  FFE3   	movff	btemp,plusw1
 37691  01C79E  D053               	goto	l11565
 37692  01C7A0                     l11559:
 37693                           
 37694                           ;stkvar	_s @ sp[(-9)+-2]
 37695  01C7A0  50E1               	movf	fsr1l,w,c
 37696  01C7A2  0FF5               	addlw	-11
 37697  01C7A4  6ED9               	movwf	fsr2l,c
 37698  01C7A6  50E2               	movf	fsr1h,w,c
 37699  01C7A8  6EDA               	movwf	fsr2h,c
 37700  01C7AA  0EFF               	movlw	255
 37701  01C7AC  22DA               	addwfc	fsr2h,f,c
 37702  01C7AE  006F FF7B FFF6     	movff	postinc2,tblptrl
 37703  01C7B4  006F FF77 FFF7     	movff	postdec2,tblptrh
 37704  01C7BA                     	if	0	;tblptru may be non-zero
 37705  01C7BA                     	endif
 37706  01C7BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 37707  01C7BA  0E00               	movlw	low (__mediumconst shr (0+16))
 37708  01C7BC  6EF8               	movwf	tblptru,c
 37709  01C7BE                     	endif
 37710  01C7BE  0008               	tblrd		*
 37711  01C7C0  50F5               	movf	tablat,w,c
 37712  01C7C2  6E34               	movwf	(btemp+10)^0,c
 37713  01C7C4  6A35               	clrf	(btemp+11)^0,c
 37714                           
 37715                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 37716                           ; Switch size 1, requested type "simple"
 37717                           ; Number of cases is 1, Range of values is 0 to 0
 37718                           ; switch strategies available:
 37719                           ; Name         Instructions Cycles
 37720                           ; simple_byte            4     3 (average)
 37721                           ;	Chosen strategy is simple_byte
 37722  01C7C6  5035               	movf	(btemp+11)^0,w,c
 37723  01C7C8  0A00               	xorlw	0	; case 0
 37724  01C7CA  A4D8               	btfss	status,2,c
 37725  01C7CC  D03C               	goto	l11565
 37726                           
 37727                           ; Switch size 1, requested type "simple"
 37728                           ; Number of cases is 2, Range of values is 43 to 45
 37729                           ; switch strategies available:
 37730                           ; Name         Instructions Cycles
 37731                           ; simple_byte            7     4 (average)
 37732                           ;	Chosen strategy is simple_byte
 37733  01C7CE  5034               	movf	(btemp+10)^0,w,c
 37734  01C7D0  0A2B               	xorlw	43	; case 43
 37735  01C7D2  B4D8               	btfsc	status,2,c
 37736  01C7D4  D7D3               	goto	l11557
 37737  01C7D6  0A06               	xorlw	6	; case 45
 37738  01C7D8  B4D8               	btfsc	status,2,c
 37739  01C7DA  D7C4               	goto	l11555
 37740  01C7DC  D034               	goto	l11565
 37741  01C7DE                     l11561:
 37742                           
 37743                           ;stkvar	_n @ sp[(-9)+5]
 37744  01C7DE  0EFC               	movlw	-4
 37745  01C7E0  006F FF8C  F034    	movff	plusw1,btemp+10
 37746  01C7E6  0EFD               	movlw	-3
 37747  01C7E8  006F FF8C  F035    	movff	plusw1,btemp+11
 37748  01C7EE  0E0A               	movlw	10
 37749  01C7F0  0234               	mulwf	(btemp+10)^0,c
 37750  01C7F2  006F FFCC  F032    	movff	prodl,btemp+8
 37751  01C7F8  006F FFD0  F033    	movff	prodh,btemp+9
 37752  01C7FE  0235               	mulwf	(btemp+11)^0,c
 37753  01C800  50F3               	movf	prodl,w,c
 37754  01C802  2633               	addwf	(btemp+9)^0,f,c
 37755                           
 37756                           ;stkvar	_s @ sp[(-9)+-2]
 37757  01C804  50E1               	movf	fsr1l,w,c
 37758  01C806  0FF5               	addlw	-11
 37759  01C808  6ED9               	movwf	fsr2l,c
 37760  01C80A  50E2               	movf	fsr1h,w,c
 37761  01C80C  6EDA               	movwf	fsr2h,c
 37762  01C80E  0EFF               	movlw	255
 37763  01C810  22DA               	addwfc	fsr2h,f,c
 37764  01C812  006F FF7B FFF6     	movff	postinc2,tblptrl
 37765  01C818  006F FF77 FFF7     	movff	postdec2,tblptrh
 37766  01C81E                     	if	0	;tblptru may be non-zero
 37767  01C81E                     	endif
 37768  01C81E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 37769  01C81E  0E00               	movlw	low (__mediumconst shr (0+16))
 37770  01C820  6EF8               	movwf	tblptru,c
 37771  01C822                     	endif
 37772  01C822  0008               	tblrd		*
 37773  01C824  50F5               	movf	tablat,w,c
 37774  01C826  5E32               	subwf	(btemp+8)^0,f,c
 37775  01C828  0E00               	movlw	0
 37776  01C82A  5A33               	subwfb	(btemp+9)^0,f,c
 37777  01C82C  0E30               	movlw	48
 37778  01C82E  2632               	addwf	(btemp+8)^0,f,c
 37779  01C830  0E00               	movlw	0
 37780  01C832  2233               	addwfc	(btemp+9)^0,f,c
 37781                           
 37782                           ;stkvar	_n @ sp[(-9)+5]
 37783  01C834  0EFC               	movlw	-4
 37784  01C836  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 37785  01C83C  0EFD               	movlw	-3
 37786  01C83E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 37787  01C844  D79B               	goto	l11557
 37788  01C846                     l11565:
 37789  01C846  0ED0               	movlw	208
 37790  01C848  6E34               	movwf	(btemp+10)^0,c
 37791  01C84A  0EFF               	movlw	255
 37792  01C84C  6E35               	movwf	(btemp+11)^0,c
 37793                           
 37794                           ;stkvar	_s @ sp[(-9)+-2]
 37795  01C84E  50E1               	movf	fsr1l,w,c
 37796  01C850  0FF5               	addlw	-11
 37797  01C852  6ED9               	movwf	fsr2l,c
 37798  01C854  50E2               	movf	fsr1h,w,c
 37799  01C856  6EDA               	movwf	fsr2h,c
 37800  01C858  0EFF               	movlw	255
 37801  01C85A  22DA               	addwfc	fsr2h,f,c
 37802  01C85C  006F FF7B FFF6     	movff	postinc2,tblptrl
 37803  01C862  006F FF77 FFF7     	movff	postdec2,tblptrh
 37804  01C868                     	if	0	;tblptru may be non-zero
 37805  01C868                     	endif
 37806  01C868                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 37807  01C868  0E00               	movlw	low (__mediumconst shr (0+16))
 37808  01C86A  6EF8               	movwf	tblptru,c
 37809  01C86C                     	endif
 37810  01C86C  0008               	tblrd		*
 37811  01C86E  50F5               	movf	tablat,w,c
 37812  01C870  6E32               	movwf	(btemp+8)^0,c
 37813  01C872  6A33               	clrf	(btemp+9)^0,c
 37814  01C874  5034               	movf	(btemp+10)^0,w,c
 37815  01C876  2632               	addwf	(btemp+8)^0,f,c
 37816  01C878  5035               	movf	(btemp+11)^0,w,c
 37817  01C87A  2233               	addwfc	(btemp+9)^0,f,c
 37818  01C87C  5033               	movf	(btemp+9)^0,w,c
 37819  01C87E  E106               	bnz	u10500
 37820  01C880  0E0A               	movlw	10
 37821  01C882  5C32               	subwf	(btemp+8)^0,w,c
 37822  01C884  B0D8               	btfsc	status,0,c
 37823  01C886  D002               	goto	u10500
 37824  01C888  0E01               	movlw	1
 37825  01C88A  D001               	goto	u10510
 37826  01C88C                     u10500:
 37827  01C88C  0E00               	movlw	0
 37828  01C88E                     u10510:
 37829  01C88E  6E34               	movwf	(btemp+10)^0,c
 37830  01C890  6A35               	clrf	(btemp+11)^0,c
 37831                           
 37832                           ;stkvar	_atoi$7234 @ sp[(-9)+0]
 37833  01C892  0EF7               	movlw	-9
 37834  01C894  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 37835  01C89A  0EF8               	movlw	-8
 37836  01C89C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 37837                           
 37838                           ;stkvar	_atoi$7234 @ sp[(-9)+0]
 37839  01C8A2  0EF7               	movlw	-9
 37840  01C8A4  006F FF8C  F02A    	movff	plusw1,btemp
 37841  01C8AA  0EF8               	movlw	-8
 37842  01C8AC  50E3               	movf	plusw1,w,c
 37843  01C8AE  102A               	iorwf	btemp^0,w,c
 37844  01C8B0  A4D8               	btfss	status,2,c
 37845  01C8B2  D795               	goto	l11561
 37846                           
 37847                           ;stkvar	_neg @ sp[(-9)+7]
 37848  01C8B4  0EFE               	movlw	-2
 37849  01C8B6  006F FF8C  F02A    	movff	plusw1,btemp
 37850  01C8BC  0EFF               	movlw	-1
 37851  01C8BE  50E3               	movf	plusw1,w,c
 37852  01C8C0  102A               	iorwf	btemp^0,w,c
 37853  01C8C2  A4D8               	btfss	status,2,c
 37854  01C8C4  D00E               	goto	l11575
 37855                           
 37856                           ;stkvar	_n @ sp[(-9)+5]
 37857  01C8C6  0EFC               	movlw	-4
 37858  01C8C8  006F FF8C  F02A    	movff	plusw1,btemp
 37859  01C8CE  1E2A               	comf	btemp^0,f,c
 37860  01C8D0  0EFD               	movlw	-3
 37861  01C8D2  006F FF8C  F02B    	movff	plusw1,btemp+1
 37862  01C8D8  1E2B               	comf	(btemp+1)^0,f,c
 37863  01C8DA  2A2A               	incf	btemp^0,f,c
 37864  01C8DC  B4D8               	btfsc	status,2,c
 37865  01C8DE  2A2B               	incf	(btemp+1)^0,f,c
 37866  01C8E0  D008               	goto	l3463
 37867  01C8E2                     l11575:
 37868                           
 37869                           ;stkvar	_n @ sp[(-9)+5]
 37870  01C8E2  0EFC               	movlw	-4
 37871  01C8E4  006F FF8C  F02A    	movff	plusw1,btemp
 37872  01C8EA  0EFD               	movlw	-3
 37873  01C8EC  006F FF8C  F02B    	movff	plusw1,btemp+1
 37874  01C8F2                     l3463:
 37875                           
 37876                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 37877  01C8F2  0EF5               	movlw	245
 37878  01C8F4  26E1               	addwf	fsr1l,f,c
 37879  01C8F6  0EFF               	movlw	255
 37880  01C8F8  22E2               	addwfc	fsr1h,f,c
 37881  01C8FA  0012               	return		;funcret
 37882  01C8FC                     __end_of_atoi:
 37883                           	opt callstack 0
 37884                           
 37885 ;; *************** function _isspace *****************
 37886 ;; Defined at:
 37887 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 37888 ;; Parameters:    Size  Location     Type
 37889 ;;  c               2  [STACK] int 
 37890 ;; Auto vars:     Size  Location     Type
 37891 ;;		None
 37892 ;; Return value:  Size  Location     Type
 37893 ;;                  2  [STACK] int 
 37894 ;; Registers used:
 37895 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 37896 ;; Tracked objects:
 37897 ;;		On entry : 0/0
 37898 ;;		On exit  : 0/0
 37899 ;;		Unchanged: 0/0
 37900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37905 ;;Total ram usage:        0 bytes
 37906 ;; Hardware stack levels used:    1
 37907 ;; Hardware stack levels required when called:   15
 37908 ;; This function calls:
 37909 ;;		Nothing
 37910 ;; This function is called by:
 37911 ;;		_atoi
 37912 ;; This function uses a reentrant model
 37913 ;;
 37914                           
 37915                           	psect	text128
 37916  00200C                     __ptext128:
 37917                           	opt callstack 0
 37918  00200C                     _isspace:
 37919                           	opt callstack 0
 37920                           
 37921                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37922  00200C  52E6               	movf	postinc1,f,c
 37923                           
 37924                           ;stkvar	_isspace$7283 @ sp[(-1)+0]
 37925                           
 37926                           ;incstack = 0
 37927 ;; hardware stack exceeded
 37928  00200E  0EFF               	movlw	-1
 37929  002010  6AE3               	clrf	plusw1,c
 37930  002012  2AE3               	incf	plusw1,f,c
 37931                           
 37932                           ;stkvar	_c @ sp[(-1)+-2]
 37933  002014  0EFD               	movlw	-3
 37934  002016  006F FF8C  F02A    	movff	plusw1,btemp
 37935  00201C  0E20               	movlw	32
 37936  00201E  182A               	xorwf	btemp^0,w,c
 37937  002020  E104               	bnz	u9320
 37938  002022  0EFE               	movlw	-2
 37939  002024  50E3               	movf	plusw1,w,c
 37940  002026  B4D8               	btfsc	status,2,c
 37941  002028  D012               	goto	l10931
 37942  00202A                     u9320:
 37943                           
 37944                           ;stkvar	_c @ sp[(-1)+-2]
 37945  00202A  0EFD               	movlw	-3
 37946  00202C  50E3               	movf	plusw1,w,c
 37947  00202E  0FF7               	addlw	247
 37948  002030  6E34               	movwf	(btemp+10)^0,c
 37949  002032  0EFE               	movlw	-2
 37950  002034  006F FF8C  F035    	movff	plusw1,btemp+11
 37951  00203A  0EFF               	movlw	255
 37952  00203C  2235               	addwfc	(btemp+11)^0,f,c
 37953  00203E  5035               	movf	(btemp+11)^0,w,c
 37954  002040  E104               	bnz	u9330
 37955  002042  0E05               	movlw	5
 37956  002044  5C34               	subwf	(btemp+10)^0,w,c
 37957  002046  A0D8               	btfss	status,0,c
 37958  002048  D002               	goto	l10931
 37959  00204A                     u9330:
 37960                           
 37961                           ;stkvar	_isspace$7283 @ sp[(-1)+0]
 37962  00204A  0EFF               	movlw	-1
 37963  00204C  6AE3               	clrf	plusw1,c
 37964  00204E                     l10931:
 37965                           
 37966                           ;stkvar	_isspace$7283 @ sp[(-1)+0]
 37967  00204E  0EFF               	movlw	-1
 37968  002050  50E3               	movf	plusw1,w,c
 37969  002052  6E2A               	movwf	btemp^0,c
 37970  002054  6A2B               	clrf	(btemp+1)^0,c
 37971                           
 37972                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 37973  002056  52E5               	movf	postdec1,f,c
 37974  002058  52E5               	movf	postdec1,f,c
 37975  00205A  52E5               	movf	postdec1,f,c
 37976  00205C  0012               	return		;funcret
 37977  00205E                     __end_of_isspace:
 37978                           	opt callstack 0
 37979                           
 37980 ;; *************** function _isdigit *****************
 37981 ;; Defined at:
 37982 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 37983 ;; Parameters:    Size  Location     Type
 37984 ;;  c               2  [STACK] int 
 37985 ;; Auto vars:     Size  Location     Type
 37986 ;;		None
 37987 ;; Return value:  Size  Location     Type
 37988 ;;                  2  [STACK] int 
 37989 ;; Registers used:
 37990 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 37991 ;; Tracked objects:
 37992 ;;		On entry : 0/0
 37993 ;;		On exit  : 0/0
 37994 ;;		Unchanged: 0/0
 37995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38000 ;;Total ram usage:        0 bytes
 38001 ;; Hardware stack levels used:    1
 38002 ;; Hardware stack levels required when called:   15
 38003 ;; This function calls:
 38004 ;;		Nothing
 38005 ;; This function is called by:
 38006 ;;		_vfpfcnvrt
 38007 ;;		_atoi
 38008 ;; This function uses a reentrant model
 38009 ;;
 38010                           
 38011                           	psect	text129
 38012  002876                     __ptext129:
 38013                           	opt callstack 0
 38014  002876                     _isdigit:
 38015                           	opt callstack 0
 38016                           
 38017                           ;stkvar	_c @ sp[(0)+-2]
 38018                           
 38019                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38020                           ;incstack = 0
 38021 ;; hardware stack exceeded
 38022  002876  0EFE               	movlw	-2
 38023  002878  50E3               	movf	plusw1,w,c
 38024  00287A  0FD0               	addlw	208
 38025  00287C  6E34               	movwf	(btemp+10)^0,c
 38026  00287E  0EFF               	movlw	-1
 38027  002880  006F FF8C  F035    	movff	plusw1,btemp+11
 38028  002886  0EFF               	movlw	255
 38029  002888  2235               	addwfc	(btemp+11)^0,f,c
 38030  00288A  5035               	movf	(btemp+11)^0,w,c
 38031  00288C  E106               	bnz	u8110
 38032  00288E  0E0A               	movlw	10
 38033  002890  5C34               	subwf	(btemp+10)^0,w,c
 38034  002892  B0D8               	btfsc	status,0,c
 38035  002894  D002               	goto	u8110
 38036  002896  0E01               	movlw	1
 38037  002898  D001               	goto	u8120
 38038  00289A                     u8110:
 38039  00289A  0E00               	movlw	0
 38040  00289C                     u8120:
 38041  00289C  6E2A               	movwf	btemp^0,c
 38042  00289E  6A2B               	clrf	(btemp+1)^0,c
 38043                           
 38044                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 38045  0028A0  52E5               	movf	postdec1,f,c
 38046  0028A2  52E5               	movf	postdec1,f,c
 38047  0028A4  0012               	return		;funcret
 38048  0028A6                     __end_of_isdigit:
 38049                           	opt callstack 0
 38050                           
 38051 ;; *************** function _set_vterm *****************
 38052 ;; Defined at:
 38053 ;;		line 110 in file "mconfig.c"
 38054 ;; Parameters:    Size  Location     Type
 38055 ;;  vterm           1  [STACK] const unsigned char 
 38056 ;; Auto vars:     Size  Location     Type
 38057 ;;		None
 38058 ;; Return value:  Size  Location     Type
 38059 ;;                  1  [STACK] unsigned char 
 38060 ;; Registers used:
 38061 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 38062 ;; Tracked objects:
 38063 ;;		On entry : 0/2
 38064 ;;		On exit  : 0/0
 38065 ;;		Unchanged: 0/0
 38066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38071 ;;Total ram usage:        0 bytes
 38072 ;; Hardware stack levels used:    1
 38073 ;; Hardware stack levels required when called:   15
 38074 ;; This function calls:
 38075 ;;		Nothing
 38076 ;; This function is called by:
 38077 ;;		_main
 38078 ;;		_check_help
 38079 ;; This function uses a reentrant model
 38080 ;;
 38081                           
 38082                           	psect	text130
 38083  002DB8                     __ptext130:
 38084                           	opt callstack 0
 38085  002DB8                     _set_vterm:
 38086                           	opt callstack 15
 38087                           
 38088                           ;mconfig.c: 110: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 111: {;mconfig.c: 112
      +                          :  D.vterm = vterm & 0x03;
 38089                           ;stkvar	_vterm @ sp[(0)+-1]
 38090                           
 38091                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38092                           ;incstack = 0
 38093  002DB8  0EFF               	movlw	-1
 38094  002DBA  006F FF8C  F035    	movff	plusw1,btemp+11
 38095  002DC0  0E03               	movlw	3
 38096  002DC2  1635               	andwf	(btemp+11)^0,f,c
 38097  002DC4  EE23  F0BF         	lfsr	2,_D+640
 38098  002DC8  50DF               	movf	223,w,c
 38099  002DCA  1835               	xorwf	(btemp+11)^0,w,c
 38100  002DCC  0BFE               	andlw	-2
 38101  002DCE  1835               	xorwf	(btemp+11)^0,w,c
 38102  002DD0  6EDF               	movwf	223,c
 38103                           
 38104                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 38105  002DD2  52E5               	movf	postdec1,f,c
 38106  002DD4  0012               	return		;funcret
 38107  002DD6                     __end_of_set_vterm:
 38108                           	opt callstack 0
 38109                           
 38110 ;; *************** function _set_temp_display_help *****************
 38111 ;; Defined at:
 38112 ;;		line 217 in file "mconfig.c"
 38113 ;; Parameters:    Size  Location     Type
 38114 ;;  new_response    1  [STACK] const enum E16677
 38115 ;; Auto vars:     Size  Location     Type
 38116 ;;		None
 38117 ;; Return value:  Size  Location     Type
 38118 ;;                  1  [STACK] enum E16677
 38119 ;; Registers used:
 38120 ;;		wreg, fsr1l, fsr1h
 38121 ;; Tracked objects:
 38122 ;;		On entry : 0/2
 38123 ;;		On exit  : 3F/2
 38124 ;;		Unchanged: 0/0
 38125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38130 ;;Total ram usage:        0 bytes
 38131 ;; Hardware stack levels used:    1
 38132 ;; Hardware stack levels required when called:   15
 38133 ;; This function calls:
 38134 ;;		Nothing
 38135 ;; This function is called by:
 38136 ;;		_check_help
 38137 ;; This function uses a reentrant model
 38138 ;;
 38139                           
 38140                           	psect	text131
 38141  002F1A                     __ptext131:
 38142                           	opt callstack 0
 38143  002F1A                     _set_temp_display_help:
 38144                           	opt callstack 14
 38145                           
 38146                           ;mconfig.c: 217: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 218: {;mconfig.c: 219:  static D_CODES old_info;;mconfig.c: 221:  old_info = V.respon
      +                          se.help_temp;
 38147                           
 38148                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38149                           ;incstack = 0
 38150  002F1A  0102               	movlb	2	; () banked
 38151  002F1C  51A9               	movf	(_V+162)& (0+255),w,b	;volatile
 38152                           
 38153                           ; BSR set to: 2
 38154                           ;mconfig.c: 222:  V.response.help_temp = new_response_info;
 38155                           ;stkvar	_new_response_info @ sp[(0)+-1]
 38156  002F1E  0EFF               	movlw	-1
 38157  002F20  006F FF8C  F2A9    	movff	plusw1,_V+162	;volatile
 38158                           
 38159                           ; BSR set to: 2
 38160                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 38161  002F26  52E5               	movf	postdec1,f,c
 38162  002F28  0012               	return		;funcret
 38163  002F2A                     __end_of_set_temp_display_help:
 38164                           	opt callstack 0
 38165                           
 38166 ;; *************** function _set_display_info *****************
 38167 ;; Defined at:
 38168 ;;		line 206 in file "mconfig.c"
 38169 ;; Parameters:    Size  Location     Type
 38170 ;;  new_response    1  [STACK] const enum E16677
 38171 ;; Auto vars:     Size  Location     Type
 38172 ;;		None
 38173 ;; Return value:  Size  Location     Type
 38174 ;;                  1  [STACK] enum E17160
 38175 ;; Registers used:
 38176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 38177 ;; Tracked objects:
 38178 ;;		On entry : 0/2
 38179 ;;		On exit  : 0/0
 38180 ;;		Unchanged: 0/0
 38181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38186 ;;Total ram usage:        0 bytes
 38187 ;; Hardware stack levels used:    1
 38188 ;; Hardware stack levels required when called:   16
 38189 ;; This function calls:
 38190 ;;		_TimerDone
 38191 ;; This function is called by:
 38192 ;;		_main
 38193 ;;		_check_help
 38194 ;; This function uses a reentrant model
 38195 ;;
 38196                           
 38197                           	psect	text132
 38198  002DD6                     __ptext132:
 38199                           	opt callstack 0
 38200  002DD6                     _set_display_info:
 38201                           	opt callstack 14
 38202                           
 38203                           ;mconfig.c: 206: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          7: {;mconfig.c: 208:  static D_CODES old_info = DIS_STR;;mconfig.c: 210:  if (TimerDone(
      +                          TMR_INFO)) {
 38204                           
 38205                           ; BSR set to: 2
 38206                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38207                           ;incstack = 0
 38208  002DD6  0E07               	movlw	7
 38209  002DD8  6EE6               	movwf	postinc1,c
 38210  002DDA  ECD5  F014         	call	_TimerDone	;wreg free
 38211  002DDE  502A               	movf	btemp^0,w,c
 38212  002DE0  B4D8               	btfsc	status,2,c
 38213  002DE2  D006               	goto	l1888
 38214                           
 38215                           ;mconfig.c: 211:   old_info = V.response.info;
 38216  002DE4  0102               	movlb	2	; () banked
 38217  002DE6  51A8               	movf	(_V+161)& (0+255),w,b	;volatile
 38218                           
 38219                           ; BSR set to: 2
 38220                           ;mconfig.c: 212:   V.response.info = new_response_info;
 38221                           ;stkvar	_new_response_info @ sp[(0)+-1]
 38222  002DE8  0EFF               	movlw	-1
 38223  002DEA  006F FF8C  F2A8    	movff	plusw1,_V+161	;volatile
 38224  002DF0                     l1888:
 38225                           
 38226                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 38227  002DF0  52E5               	movf	postdec1,f,c
 38228  002DF2  0012               	return		;funcret
 38229  002DF4                     __end_of_set_display_info:
 38230                           	opt callstack 0
 38231                           
 38232 ;; *************** function _mode_lamp_dim *****************
 38233 ;; Defined at:
 38234 ;;		line 13 in file "mconfig.c"
 38235 ;; Parameters:    Size  Location     Type
 38236 ;;  level           2  [STACK] const unsigned short 
 38237 ;; Auto vars:     Size  Location     Type
 38238 ;;		None
 38239 ;; Return value:  Size  Location     Type
 38240 ;;                  1  [STACK] void 
 38241 ;; Registers used:
 38242 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 38243 ;; Tracked objects:
 38244 ;;		On entry : 0/2
 38245 ;;		On exit  : 0/0
 38246 ;;		Unchanged: 0/0
 38247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38252 ;;Total ram usage:        0 bytes
 38253 ;; Hardware stack levels used:    1
 38254 ;; Hardware stack levels required when called:   16
 38255 ;; This function calls:
 38256 ;;		_PWM8_LoadDutyValue
 38257 ;; This function is called by:
 38258 ;;		_main
 38259 ;;		_check_help
 38260 ;; This function uses a reentrant model
 38261 ;;
 38262                           
 38263                           	psect	text133
 38264  002E2A                     __ptext133:
 38265                           	opt callstack 0
 38266  002E2A                     _mode_lamp_dim:
 38267                           	opt callstack 14
 38268                           
 38269                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 38270                           ;stkvar	_level @ sp[(0)+-2]
 38271                           
 38272                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38273                           ;incstack = 0
 38274  002E2A  0EFE               	movlw	-2
 38275  002E2C  006F FF8F FFE6     	movff	plusw1,postinc1
 38276  002E32  006F FF8F FFE6     	movff	plusw1,postinc1
 38277  002E38  ECE8  F011         	call	_PWM8_LoadDutyValue	;wreg free
 38278                           
 38279                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 38280  002E3C  52E5               	movf	postdec1,f,c
 38281  002E3E  52E5               	movf	postdec1,f,c
 38282  002E40  0012               	return		;funcret
 38283  002E42                     __end_of_mode_lamp_dim:
 38284                           	opt callstack 0
 38285                           
 38286 ;; *************** function _mode_lamp_bright *****************
 38287 ;; Defined at:
 38288 ;;		line 18 in file "mconfig.c"
 38289 ;; Parameters:    Size  Location     Type
 38290 ;;		None
 38291 ;; Auto vars:     Size  Location     Type
 38292 ;;		None
 38293 ;; Return value:  Size  Location     Type
 38294 ;;                  1  [STACK] void 
 38295 ;; Registers used:
 38296 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 38297 ;; Tracked objects:
 38298 ;;		On entry : 0/0
 38299 ;;		On exit  : 0/0
 38300 ;;		Unchanged: 0/0
 38301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38306 ;;Total ram usage:        0 bytes
 38307 ;; Hardware stack levels used:    1
 38308 ;; Hardware stack levels required when called:   16
 38309 ;; This function calls:
 38310 ;;		_PWM8_LoadDutyValue
 38311 ;; This function is called by:
 38312 ;;		_check_help
 38313 ;; This function uses a reentrant model
 38314 ;;
 38315                           
 38316                           	psect	text134
 38317  002F48                     __ptext134:
 38318                           	opt callstack 0
 38319  002F48                     _mode_lamp_bright:
 38320                           	opt callstack 13
 38321                           
 38322                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 38323                           
 38324                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38325                           ;incstack = 0
 38326  002F48  0E2C               	movlw	44
 38327  002F4A  6EE6               	movwf	postinc1,c
 38328  002F4C  0E01               	movlw	1
 38329  002F4E  6EE6               	movwf	postinc1,c
 38330  002F50  ECE8  F011         	call	_PWM8_LoadDutyValue	;wreg free
 38331                           
 38332                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 38333  002F54  0012               	return		;funcret
 38334  002F56                     __end_of_mode_lamp_bright:
 38335                           	opt callstack 0
 38336                           
 38337 ;; *************** function _PWM8_LoadDutyValue *****************
 38338 ;; Defined at:
 38339 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 38340 ;; Parameters:    Size  Location     Type
 38341 ;;  dutyValue       2  [STACK] unsigned short 
 38342 ;; Auto vars:     Size  Location     Type
 38343 ;;		None
 38344 ;; Return value:  Size  Location     Type
 38345 ;;                  1  [STACK] void 
 38346 ;; Registers used:
 38347 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 38348 ;; Tracked objects:
 38349 ;;		On entry : 0/2
 38350 ;;		On exit  : 0/0
 38351 ;;		Unchanged: 0/0
 38352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38357 ;;Total ram usage:        0 bytes
 38358 ;; Hardware stack levels used:    1
 38359 ;; Hardware stack levels required when called:   15
 38360 ;; This function calls:
 38361 ;;		Nothing
 38362 ;; This function is called by:
 38363 ;;		_mode_lamp_dim
 38364 ;;		_mode_lamp_bright
 38365 ;; This function uses a reentrant model
 38366 ;;
 38367                           
 38368                           	psect	text135
 38369  0023D0                     __ptext135:
 38370                           	opt callstack 0
 38371  0023D0                     _PWM8_LoadDutyValue:
 38372                           	opt callstack 14
 38373                           
 38374                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 38375                           ;stkvar	_dutyValue @ sp[(0)+-2]
 38376                           
 38377                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38378                           ;incstack = 0
 38379  0023D0  0EFE               	movlw	-2
 38380  0023D2  006F FF8C  F034    	movff	plusw1,btemp+10
 38381  0023D8  0EFF               	movlw	-1
 38382  0023DA  006F FF8C  F035    	movff	plusw1,btemp+11
 38383  0023E0  90D8               	bcf	status,0,c
 38384  0023E2  3235               	rrcf	(btemp+11)^0,f,c
 38385  0023E4  3234               	rrcf	(btemp+10)^0,f,c
 38386  0023E6  90D8               	bcf	status,0,c
 38387  0023E8  3235               	rrcf	(btemp+11)^0,f,c
 38388  0023EA  3234               	rrcf	(btemp+10)^0,f,c
 38389  0023EC  5034               	movf	(btemp+10)^0,w,c
 38390  0023EE  6E61               	movwf	97,c	;volatile
 38391                           
 38392                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 38393                           ;stkvar	_dutyValue @ sp[(0)+-2]
 38394  0023F0  0EFE               	movlw	-2
 38395  0023F2  006F FF8C  F035    	movff	plusw1,btemp+11
 38396  0023F8  0E03               	movlw	3
 38397  0023FA  1635               	andwf	(btemp+11)^0,f,c
 38398  0023FC  0E06               	movlw	6
 38399  0023FE  6E2A               	movwf	btemp^0,c
 38400  002400                     u12325:
 38401  002400  90D8               	bcf	status,0,c
 38402  002402  3635               	rlcf	(btemp+11)^0,f,c
 38403  002404  2E2A               	decfsz	btemp^0,f,c
 38404  002406  D7FC               	goto	u12325
 38405  002408  5035               	movf	(btemp+11)^0,w,c
 38406  00240A  6E60               	movwf	96,c	;volatile
 38407                           
 38408                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 38409  00240C  52E5               	movf	postdec1,f,c
 38410  00240E  52E5               	movf	postdec1,f,c
 38411  002410  0012               	return		;funcret
 38412  002412                     __end_of_PWM8_LoadDutyValue:
 38413                           	opt callstack 0
 38414                           
 38415 ;; *************** function _help_button *****************
 38416 ;; Defined at:
 38417 ;;		line 26 in file "mconfig.c"
 38418 ;; Parameters:    Size  Location     Type
 38419 ;;		None
 38420 ;; Auto vars:     Size  Location     Type
 38421 ;;		None
 38422 ;; Return value:  Size  Location     Type
 38423 ;;                  1  [STACK] _Bool 
 38424 ;; Registers used:
 38425 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 38426 ;; Tracked objects:
 38427 ;;		On entry : 0/2
 38428 ;;		On exit  : 0/0
 38429 ;;		Unchanged: 0/0
 38430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38435 ;;Total ram usage:        0 bytes
 38436 ;; Hardware stack levels used:    1
 38437 ;; Hardware stack levels required when called:   16
 38438 ;; This function calls:
 38439 ;;		_StartTimer
 38440 ;;		_TimerDone
 38441 ;; This function is called by:
 38442 ;;		_check_help
 38443 ;; This function uses a reentrant model
 38444 ;;
 38445                           
 38446                           	psect	text136
 38447  002608                     __ptext136:
 38448                           	opt callstack 0
 38449  002608                     _help_button:
 38450                           	opt callstack 13
 38451                           
 38452                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 38453                           
 38454                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38455                           ;incstack = 0
 38456  002608  B0CB               	btfsc	203,0,c	;volatile
 38457  00260A  D00C               	goto	l1831
 38458                           
 38459                           ;mconfig.c: 29:   V.help = 1;
 38460  00260C  0102               	movlb	2	; () banked
 38461  00260E  859F               	bsf	(_V+152)& (0+255),2,b	;volatile
 38462                           
 38463                           ; BSR set to: 2
 38464                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 38465  002610  0E08               	movlw	8
 38466  002612  6EE6               	movwf	postinc1,c
 38467  002614  ECD5  F014         	call	_TimerDone	;wreg free
 38468  002618  502A               	movf	btemp^0,w,c
 38469  00261A  B4D8               	btfsc	status,2,c
 38470  00261C  D003               	goto	l1831
 38471                           
 38472                           ;mconfig.c: 31:    return 1;
 38473  00261E  0E01               	movlw	1
 38474  002620  6E2A               	movwf	btemp^0,c
 38475  002622  0012               	return	
 38476  002624                     l1831:
 38477                           
 38478                           ;mconfig.c: 34:  if (!V.help)
 38479  002624  0102               	movlb	2	; () banked
 38480  002626  B59F               	btfsc	(_V+152)& (0+255),2,b	;volatile
 38481  002628  D008               	goto	l13721
 38482                           
 38483                           ; BSR set to: 2
 38484                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 38485  00262A  0E2C               	movlw	44
 38486  00262C  6EE6               	movwf	postinc1,c
 38487  00262E  0E01               	movlw	1
 38488  002630  6EE6               	movwf	postinc1,c
 38489  002632  0E08               	movlw	8
 38490  002634  6EE6               	movwf	postinc1,c
 38491  002636  EC49  F012         	call	_StartTimer	;wreg free
 38492  00263A                     l13721:
 38493                           
 38494                           ;mconfig.c: 37:  return 0;
 38495  00263A  0E00               	movlw	0
 38496  00263C  6E2A               	movwf	btemp^0,c
 38497                           
 38498                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 38499  00263E  0012               	return		;funcret
 38500  002640                     __end_of_help_button:
 38501                           	opt callstack 0
 38502                           
 38503 ;; *************** function _TimerDone *****************
 38504 ;; Defined at:
 38505 ;;		line 20 in file "timers.c"
 38506 ;; Parameters:    Size  Location     Type
 38507 ;;  timer           1  [STACK] const unsigned char 
 38508 ;; Auto vars:     Size  Location     Type
 38509 ;;		None
 38510 ;; Return value:  Size  Location     Type
 38511 ;;                  1  [STACK] _Bool 
 38512 ;; Registers used:
 38513 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 38514 ;; Tracked objects:
 38515 ;;		On entry : 0/2
 38516 ;;		On exit  : 0/0
 38517 ;;		Unchanged: 0/0
 38518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38523 ;;Total ram usage:        0 bytes
 38524 ;; Hardware stack levels used:    1
 38525 ;; Hardware stack levels required when called:   15
 38526 ;; This function calls:
 38527 ;;		Nothing
 38528 ;; This function is called by:
 38529 ;;		_main
 38530 ;;		_WaitMs
 38531 ;;		_help_button
 38532 ;;		_check_help
 38533 ;;		_set_display_info
 38534 ;;		_update_adc_result
 38535 ;;		_esr_check
 38536 ;; This function uses a reentrant model
 38537 ;;
 38538                           
 38539                           	psect	text137
 38540  0029AA                     __ptext137:
 38541                           	opt callstack 0
 38542  0029AA                     _TimerDone:
 38543                           	opt callstack 14
 38544                           
 38545                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38546                           ;incstack = 0
 38547  0029AA  0004               	clrwdt		;# 
 38548                           
 38549                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 38550                           ;stkvar	_timer @ sp[(0)+-1]
 38551  0029AC  0EFF               	movlw	-1
 38552  0029AE  50E3               	movf	plusw1,w,c
 38553  0029B0  0D02               	mullw	2
 38554  0029B2  0EBC               	movlw	low _tickCount
 38555  0029B4  24F3               	addwf	243,w,c
 38556  0029B6  6ED9               	movwf	fsr2l,c
 38557  0029B8  0E02               	movlw	high _tickCount
 38558  0029BA  20F4               	addwfc	prodh,w,c
 38559  0029BC  6EDA               	movwf	fsr2h,c
 38560  0029BE  50DE               	movf	postinc2,w,c
 38561  0029C0  10DE               	iorwf	postinc2,w,c
 38562  0029C2  A4D8               	btfss	status,2,c
 38563  0029C4  D002               	goto	l12457
 38564                           
 38565                           ;timers.c: 24:   return 1;
 38566  0029C6  0E01               	movlw	1
 38567  0029C8  D001               	goto	L43
 38568  0029CA                     l12457:
 38569                           
 38570                           ;timers.c: 26:  return 0;
 38571  0029CA  0E00               	movlw	0
 38572  0029CC                     L43:
 38573  0029CC  6E2A               	movwf	btemp^0,c
 38574                           
 38575                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 38576  0029CE  52E5               	movf	postdec1,f,c
 38577  0029D0  0012               	return		;funcret
 38578  0029D2                     __end_of_TimerDone:
 38579                           	opt callstack 0
 38580                           
 38581 ;; *************** function _StartTimer *****************
 38582 ;; Defined at:
 38583 ;;		line 12 in file "timers.c"
 38584 ;; Parameters:    Size  Location     Type
 38585 ;;  timer           1  [STACK] const unsigned char 
 38586 ;;  count           2  [STACK] const unsigned short 
 38587 ;; Auto vars:     Size  Location     Type
 38588 ;;		None
 38589 ;; Return value:  Size  Location     Type
 38590 ;;                  1  [STACK] void 
 38591 ;; Registers used:
 38592 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 38593 ;; Tracked objects:
 38594 ;;		On entry : 0/0
 38595 ;;		On exit  : 0/0
 38596 ;;		Unchanged: 0/0
 38597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38602 ;;Total ram usage:        0 bytes
 38603 ;; Hardware stack levels used:    1
 38604 ;; Hardware stack levels required when called:   15
 38605 ;; This function calls:
 38606 ;;		Nothing
 38607 ;; This function is called by:
 38608 ;;		_main
 38609 ;;		_WaitMs
 38610 ;;		_help_button
 38611 ;;		_check_help
 38612 ;;		_update_adc_result
 38613 ;;		_calc_bsoc
 38614 ;;		_esr_check
 38615 ;; This function uses a reentrant model
 38616 ;;
 38617                           
 38618                           	psect	text138
 38619  002492                     __ptext138:
 38620                           	opt callstack 0
 38621  002492                     _StartTimer:
 38622                           	opt callstack 0
 38623                           
 38624                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 38625                           ;stkvar	_count @ sp[(0)+-3]
 38626                           
 38627                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38628                           ;incstack = 0
 38629 ;; hardware stack exceeded
 38630  002492  0EFD               	movlw	-3
 38631  002494  006F FF8C  F034    	movff	plusw1,btemp+10
 38632  00249A  0EFE               	movlw	-2
 38633  00249C  006F FF8C  F035    	movff	plusw1,btemp+11
 38634  0024A2  90D8               	bcf	status,0,c
 38635  0024A4  3434               	rlcf	(btemp+10)^0,w,c
 38636  0024A6  6E32               	movwf	(btemp+8)^0,c
 38637  0024A8  3435               	rlcf	(btemp+11)^0,w,c
 38638  0024AA  6E33               	movwf	(btemp+9)^0,c
 38639                           
 38640                           ;stkvar	_timer @ sp[(0)+-1]
 38641  0024AC  0EFF               	movlw	-1
 38642  0024AE  50E3               	movf	plusw1,w,c
 38643  0024B0  0D02               	mullw	2
 38644  0024B2  0EBC               	movlw	low _tickCount
 38645  0024B4  24F3               	addwf	243,w,c
 38646  0024B6  6ED9               	movwf	fsr2l,c
 38647  0024B8  0E02               	movlw	high _tickCount
 38648  0024BA  20F4               	addwfc	prodh,w,c
 38649  0024BC  6EDA               	movwf	fsr2h,c
 38650  0024BE  0060  F0CB  FFDE   	movff	btemp+8,postinc2
 38651  0024C4  0060  F0CF  FFDD   	movff	btemp+9,postdec2
 38652                           
 38653                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 38654  0024CA  52E5               	movf	postdec1,f,c
 38655  0024CC  52E5               	movf	postdec1,f,c
 38656  0024CE  52E5               	movf	postdec1,f,c
 38657  0024D0  0012               	return		;funcret
 38658  0024D2                     __end_of_StartTimer:
 38659                           	opt callstack 0
 38660                           
 38661 ;; *************** function _display_info *****************
 38662 ;; Defined at:
 38663 ;;		line 196 in file "mconfig.c"
 38664 ;; Parameters:    Size  Location     Type
 38665 ;;		None
 38666 ;; Auto vars:     Size  Location     Type
 38667 ;;		None
 38668 ;; Return value:  Size  Location     Type
 38669 ;;                  1  [STACK] enum E16677
 38670 ;; Registers used:
 38671 ;;		btemp
 38672 ;; Tracked objects:
 38673 ;;		On entry : 0/2
 38674 ;;		On exit  : 0/0
 38675 ;;		Unchanged: 0/0
 38676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38681 ;;Total ram usage:        0 bytes
 38682 ;; Hardware stack levels used:    1
 38683 ;; Hardware stack levels required when called:   15
 38684 ;; This function calls:
 38685 ;;		Nothing
 38686 ;; This function is called by:
 38687 ;;		_check_help
 38688 ;; This function uses a reentrant model
 38689 ;;
 38690                           
 38691                           	psect	text139
 38692  002FCA                     __ptext139:
 38693                           	opt callstack 0
 38694  002FCA                     _display_info:
 38695                           	opt callstack 14
 38696                           
 38697                           ;mconfig.c: 198:  return V.response.info;
 38698                           
 38699                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38700                           ;incstack = 0
 38701  002FCA  0060  FAA0  F02A   	movff	_V+161,btemp	;volatile
 38702                           
 38703                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 38704  002FD0  0012               	return		;funcret
 38705  002FD2                     __end_of_display_info:
 38706                           	opt callstack 0
 38707                           
 38708 ;; *************** function _display_help *****************
 38709 ;; Defined at:
 38710 ;;		line 201 in file "mconfig.c"
 38711 ;; Parameters:    Size  Location     Type
 38712 ;;		None
 38713 ;; Auto vars:     Size  Location     Type
 38714 ;;		None
 38715 ;; Return value:  Size  Location     Type
 38716 ;;                  1  [STACK] enum E16677
 38717 ;; Registers used:
 38718 ;;		btemp
 38719 ;; Tracked objects:
 38720 ;;		On entry : 3F/2
 38721 ;;		On exit  : 0/0
 38722 ;;		Unchanged: 0/0
 38723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38728 ;;Total ram usage:        0 bytes
 38729 ;; Hardware stack levels used:    1
 38730 ;; Hardware stack levels required when called:   15
 38731 ;; This function calls:
 38732 ;;		Nothing
 38733 ;; This function is called by:
 38734 ;;		_check_help
 38735 ;; This function uses a reentrant model
 38736 ;;
 38737                           
 38738                           	psect	text140
 38739  002FD2                     __ptext140:
 38740                           	opt callstack 0
 38741  002FD2                     _display_help:
 38742                           	opt callstack 14
 38743                           
 38744                           ;mconfig.c: 203:  return V.response.help_temp;
 38745                           
 38746                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38747                           ;incstack = 0
 38748  002FD2  0060  FAA4  F02A   	movff	_V+162,btemp	;volatile
 38749                           
 38750                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 38751  002FD8  0012               	return		;funcret
 38752  002FDA                     __end_of_display_help:
 38753                           	opt callstack 0
 38754                           
 38755 ;; *************** function _check_enter_button *****************
 38756 ;; Defined at:
 38757 ;;		line 49 in file "hid.c"
 38758 ;; Parameters:    Size  Location     Type
 38759 ;;  h               2  [STACK] PTR struct H_data
 38760 ;;		 -> H(9), 
 38761 ;; Auto vars:     Size  Location     Type
 38762 ;;		None
 38763 ;; Return value:  Size  Location     Type
 38764 ;;                  1  [STACK] _Bool 
 38765 ;; Registers used:
 38766 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 38767 ;; Tracked objects:
 38768 ;;		On entry : 0/0
 38769 ;;		On exit  : 0/0
 38770 ;;		Unchanged: 0/0
 38771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38776 ;;Total ram usage:        0 bytes
 38777 ;; Hardware stack levels used:    1
 38778 ;; Hardware stack levels required when called:   15
 38779 ;; This function calls:
 38780 ;;		Nothing
 38781 ;; This function is called by:
 38782 ;;		_main
 38783 ;; This function uses a reentrant model
 38784 ;;
 38785                           
 38786                           	psect	text141
 38787  001978                     __ptext141:
 38788                           	opt callstack 0
 38789  001978                     _check_enter_button:
 38790                           	opt callstack 15
 38791                           
 38792                           ;hid.c: 49: _Bool check_enter_button(H_data* h);hid.c: 50: {;hid.c: 51:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 38793                           ;stkvar	_h @ sp[(0)+-2]
 38794                           
 38795                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38796                           ;incstack = 0
 38797  001978  0EFE               	movlw	-2
 38798  00197A  006F FF8C  F034    	movff	plusw1,btemp+10
 38799  001980  0EFF               	movlw	-1
 38800  001982  006F FF8C  F035    	movff	plusw1,btemp+11
 38801  001988  0E04               	movlw	4
 38802  00198A  2434               	addwf	(btemp+10)^0,w,c
 38803  00198C  6ED9               	movwf	fsr2l,c
 38804  00198E  0E00               	movlw	0
 38805  001990  2035               	addwfc	(btemp+11)^0,w,c
 38806  001992  6EDA               	movwf	fsr2h,c
 38807  001994  50DF               	movf	indf2,w,c
 38808  001996  A4D8               	btfss	status,2,c
 38809  001998  D023               	goto	l17569
 38810                           
 38811                           ;stkvar	_h @ sp[(0)+-2]
 38812  00199A  0EFE               	movlw	-2
 38813  00199C  006F FF8C  F034    	movff	plusw1,btemp+10
 38814  0019A2  0EFF               	movlw	-1
 38815  0019A4  006F FF8C  F035    	movff	plusw1,btemp+11
 38816  0019AA  0E05               	movlw	5
 38817  0019AC  2434               	addwf	(btemp+10)^0,w,c
 38818  0019AE  6ED9               	movwf	fsr2l,c
 38819  0019B0  0E00               	movlw	0
 38820  0019B2  2035               	addwfc	(btemp+11)^0,w,c
 38821  0019B4  6EDA               	movwf	fsr2h,c
 38822  0019B6  50DF               	movf	indf2,w,c
 38823  0019B8  A4D8               	btfss	status,2,c
 38824  0019BA  D012               	goto	l17569
 38825                           
 38826                           ;hid.c: 52:   h->wait_enter = 1;
 38827                           ;stkvar	_h @ sp[(0)+-2]
 38828  0019BC  0EFE               	movlw	-2
 38829  0019BE  006F FF8C  F034    	movff	plusw1,btemp+10
 38830  0019C4  0EFF               	movlw	-1
 38831  0019C6  006F FF8C  F035    	movff	plusw1,btemp+11
 38832  0019CC  0E04               	movlw	4
 38833  0019CE  2434               	addwf	(btemp+10)^0,w,c
 38834  0019D0  6ED9               	movwf	fsr2l,c
 38835  0019D2  0E00               	movlw	0
 38836  0019D4  2035               	addwfc	(btemp+11)^0,w,c
 38837  0019D6  6EDA               	movwf	fsr2h,c
 38838  0019D8  0E01               	movlw	1
 38839  0019DA  6EDF               	movwf	indf2,c
 38840                           
 38841                           ;hid.c: 53:   return 1;
 38842  0019DC  0E01               	movlw	1
 38843  0019DE  D001               	goto	L44
 38844  0019E0                     l17569:
 38845                           
 38846                           ;hid.c: 55:  return 0;
 38847  0019E0  0E00               	movlw	0
 38848  0019E2                     L44:
 38849  0019E2  6E2A               	movwf	btemp^0,c
 38850                           
 38851                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 38852  0019E4  52E5               	movf	postdec1,f,c
 38853  0019E6  52E5               	movf	postdec1,f,c
 38854  0019E8  0012               	return		;funcret
 38855  0019EA                     __end_of_check_enter_button:
 38856                           	opt callstack 0
 38857                           
 38858 ;; *************** function _calc_ror_data *****************
 38859 ;; Defined at:
 38860 ;;		line 103 in file "mbmc.c"
 38861 ;; Parameters:    Size  Location     Type
 38862 ;;		None
 38863 ;; Auto vars:     Size  Location     Type
 38864 ;;		None
 38865 ;; Return value:  Size  Location     Type
 38866 ;;                  1  [STACK] void 
 38867 ;; Registers used:
 38868 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 38869 ;; Tracked objects:
 38870 ;;		On entry : 0/0
 38871 ;;		On exit  : 0/0
 38872 ;;		Unchanged: 0/0
 38873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38878 ;;Total ram usage:        0 bytes
 38879 ;; Hardware stack levels used:    1
 38880 ;; Hardware stack levels required when called:   18
 38881 ;; This function calls:
 38882 ;;		___flge
 38883 ;;		___flsub
 38884 ;;		_conv_raw_result
 38885 ;;		_fabsf
 38886 ;; This function is called by:
 38887 ;;		_main
 38888 ;; This function uses a reentrant model
 38889 ;;
 38890                           
 38891                           	psect	text142
 38892  01E682                     __ptext142:
 38893                           	opt callstack 0
 38894  01E682                     _calc_ror_data:
 38895                           	opt callstack 12
 38896                           
 38897                           ;mbmc.c: 105:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 107:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 38898                           
 38899                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38900                           ;incstack = 0
 38901  01E682  0060  F203  FFE6   	movff	calc_ror_data@bcror,postinc1
 38902  01E688  0060  F207  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 38903  01E68E  0060  F20B  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 38904  01E694  0060  F20F  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 38905  01E69A  0E00               	movlw	0
 38906  01E69C  6EE6               	movwf	postinc1,c
 38907  01E69E  0E00               	movlw	0
 38908  01E6A0  6EE6               	movwf	postinc1,c
 38909  01E6A2  EC00  F0C9         	call	_conv_raw_result	;wreg free
 38910  01E6A6  0060  F0AB  FFE6   	movff	btemp,postinc1
 38911  01E6AC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38912  01E6B2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38913  01E6B8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38914  01E6BE  ECA3  F011         	call	___flsub	;wreg free
 38915  01E6C2  0060  F0AB  FFE6   	movff	btemp,postinc1
 38916  01E6C8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38917  01E6CE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38918  01E6D4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38919  01E6DA  ECBE  F006         	call	_fabsf	;wreg free
 38920  01E6DE  0060  F0A8  F96F   	movff	btemp,_C+112	;volatile
 38921  01E6E4  0060  F0AC  F970   	movff	btemp+1,_C+113	;volatile
 38922  01E6EA  0060  F0B0  F971   	movff	btemp+2,_C+114	;volatile
 38923  01E6F0  0060  F0B4  F972   	movff	btemp+3,_C+115	;volatile
 38924                           
 38925                           ;mbmc.c: 108:  bcror = conv_raw_result(C_BATT, CONV);
 38926  01E6F6  0E00               	movlw	0
 38927  01E6F8  6EE6               	movwf	postinc1,c
 38928  01E6FA  0E00               	movlw	0
 38929  01E6FC  6EE6               	movwf	postinc1,c
 38930  01E6FE  EC00  F0C9         	call	_conv_raw_result	;wreg free
 38931  01E702  0060  F0A8  F080   	movff	btemp,calc_ror_data@bcror
 38932  01E708  0060  F0AC  F081   	movff	btemp+1,calc_ror_data@bcror+1
 38933  01E70E  0060  F0B0  F082   	movff	btemp+2,calc_ror_data@bcror+2
 38934  01E714  0060  F0B4  F083   	movff	btemp+3,calc_ror_data@bcror+3
 38935                           
 38936                           ;mbmc.c: 109:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 38937  01E71A  0060  F213  FFE6   	movff	calc_ror_data@bvror,postinc1
 38938  01E720  0060  F217  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 38939  01E726  0060  F21B  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 38940  01E72C  0060  F21F  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 38941  01E732  0E00               	movlw	0
 38942  01E734  6EE6               	movwf	postinc1,c
 38943  01E736  0E04               	movlw	4
 38944  01E738  6EE6               	movwf	postinc1,c
 38945  01E73A  EC00  F0C9         	call	_conv_raw_result	;wreg free
 38946  01E73E  0060  F0AB  FFE6   	movff	btemp,postinc1
 38947  01E744  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38948  01E74A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38949  01E750  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38950  01E756  ECA3  F011         	call	___flsub	;wreg free
 38951  01E75A  0060  F0AB  FFE6   	movff	btemp,postinc1
 38952  01E760  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38953  01E766  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38954  01E76C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38955  01E772  ECBE  F006         	call	_fabsf	;wreg free
 38956  01E776  0060  F0A8  F96B   	movff	btemp,_C+108	;volatile
 38957  01E77C  0060  F0AC  F96C   	movff	btemp+1,_C+109	;volatile
 38958  01E782  0060  F0B0  F96D   	movff	btemp+2,_C+110	;volatile
 38959  01E788  0060  F0B4  F96E   	movff	btemp+3,_C+111	;volatile
 38960                           
 38961                           ;mbmc.c: 110:  if (C.bv_ror < 0.0051)
 38962  01E78E  0EE7               	movlw	231
 38963  01E790  6EE6               	movwf	postinc1,c
 38964  01E792  0E1D               	movlw	29
 38965  01E794  6EE6               	movwf	postinc1,c
 38966  01E796  0EA7               	movlw	167
 38967  01E798  6EE6               	movwf	postinc1,c
 38968  01E79A  0E3B               	movlw	59
 38969  01E79C  6EE6               	movwf	postinc1,c
 38970  01E79E  EE22  F16B         	lfsr	2,_C+108	;volatile
 38971  01E7A2  006F FF7B FFE6     	movff	postinc2,postinc1
 38972  01E7A8  006F FF7B FFE6     	movff	postinc2,postinc1
 38973  01E7AE  006F FF7B FFE6     	movff	postinc2,postinc1
 38974  01E7B4  006F FF7B FFE6     	movff	postinc2,postinc1
 38975  01E7BA  ECE9  F0F6         	call	___flge	;wreg free
 38976  01E7BE  B02A               	btfsc	btemp& (0+255),0,c
 38977  01E7C0  D010               	goto	l14319
 38978                           
 38979                           ;mbmc.c: 111:   C.bv_ror = 0.0140 + 0.0001;
 38980  01E7C2  0EB0               	movlw	176
 38981  01E7C4  006F FFA0  F96B    	movff	wreg,_C+108	;volatile
 38982  01E7CA  0E03               	movlw	3
 38983  01E7CC  006F FFA0  F96C    	movff	wreg,_C+109	;volatile
 38984  01E7D2  0E67               	movlw	103
 38985  01E7D4  006F FFA0  F96D    	movff	wreg,_C+110	;volatile
 38986  01E7DA  0E3C               	movlw	60
 38987  01E7DC  006F FFA0  F96E    	movff	wreg,_C+111	;volatile
 38988  01E7E2                     l14319:
 38989                           
 38990                           ;mbmc.c: 112:  bvror = conv_raw_result(V_BAT, CONV);
 38991  01E7E2  0E00               	movlw	0
 38992  01E7E4  6EE6               	movwf	postinc1,c
 38993  01E7E6  0E04               	movlw	4
 38994  01E7E8  6EE6               	movwf	postinc1,c
 38995  01E7EA  EC00  F0C9         	call	_conv_raw_result	;wreg free
 38996  01E7EE  0060  F0A8  F084   	movff	btemp,calc_ror_data@bvror
 38997  01E7F4  0060  F0AC  F085   	movff	btemp+1,calc_ror_data@bvror+1
 38998  01E7FA  0060  F0B0  F086   	movff	btemp+2,calc_ror_data@bvror+2
 38999  01E800  0060  F0B4  F087   	movff	btemp+3,calc_ror_data@bvror+3
 39000                           
 39001                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 39002  01E806  0012               	return		;funcret
 39003  01E808                     __end_of_calc_ror_data:
 39004                           	opt callstack 0
 39005                           
 39006 ;; *************** function _fabsf *****************
 39007 ;; Defined at:
 39008 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 39009 ;; Parameters:    Size  Location     Type
 39010 ;;  x               4  [STACK] float 
 39011 ;; Auto vars:     Size  Location     Type
 39012 ;;  u               4  [STACK] struct .
 39013 ;; Return value:  Size  Location     Type
 39014 ;;                  4  [STACK] float 
 39015 ;; Registers used:
 39016 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 39017 ;; Tracked objects:
 39018 ;;		On entry : 0/0
 39019 ;;		On exit  : 0/0
 39020 ;;		Unchanged: 0/0
 39021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39026 ;;Total ram usage:        0 bytes
 39027 ;; Hardware stack levels used:    1
 39028 ;; Hardware stack levels required when called:   15
 39029 ;; This function calls:
 39030 ;;		Nothing
 39031 ;; This function is called by:
 39032 ;;		_main
 39033 ;;		_calc_ror_data
 39034 ;;		_calc_bsoc
 39035 ;;		_esr_check
 39036 ;; This function uses a reentrant model
 39037 ;;
 39038                           
 39039                           	psect	text143
 39040  000D7C                     __ptext143:
 39041                           	opt callstack 0
 39042  000D7C                     _fabsf:
 39043                           	opt callstack 0
 39044                           
 39045                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39046  000D7C  52E6               	movf	postinc1,f,c
 39047  000D7E  52E6               	movf	postinc1,f,c
 39048  000D80  52E6               	movf	postinc1,f,c
 39049  000D82  52E6               	movf	postinc1,f,c
 39050                           
 39051                           ;incstack = 0
 39052 ;; hardware stack exceeded
 39053  000D84  0060  F1E0  F032   	movff	fabsf@F463,btemp+8
 39054  000D8A  0060  F1E4  F033   	movff	fabsf@F463+1,btemp+9
 39055  000D90  0060  F1E8  F034   	movff	fabsf@F463+2,btemp+10
 39056  000D96  0060  F1EC  F035   	movff	fabsf@F463+3,btemp+11
 39057                           
 39058                           ;stkvar	_u @ sp[(-4)+0]
 39059  000D9C  0EFC               	movlw	-4
 39060  000D9E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39061  000DA4  0EFD               	movlw	-3
 39062  000DA6  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39063  000DAC  0EFE               	movlw	-2
 39064  000DAE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39065  000DB4  0EFF               	movlw	-1
 39066  000DB6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39067                           
 39068                           ;stkvar	_x @ sp[(-4)+-4]
 39069  000DBC  0EF8               	movlw	-8
 39070  000DBE  006F FF8C  F032    	movff	plusw1,btemp+8
 39071  000DC4  0EF9               	movlw	-7
 39072  000DC6  006F FF8C  F033    	movff	plusw1,btemp+9
 39073  000DCC  0EFA               	movlw	-6
 39074  000DCE  006F FF8C  F034    	movff	plusw1,btemp+10
 39075  000DD4  0EFB               	movlw	-5
 39076  000DD6  006F FF8C  F035    	movff	plusw1,btemp+11
 39077                           
 39078                           ;stkvar	_u @ sp[(-4)+0]
 39079  000DDC  0EFC               	movlw	-4
 39080  000DDE  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39081  000DE4  0EFD               	movlw	-3
 39082  000DE6  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39083  000DEC  0EFE               	movlw	-2
 39084  000DEE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39085  000DF4  0EFF               	movlw	-1
 39086  000DF6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39087                           
 39088                           ;stkvar	_u @ sp[(-4)+0]
 39089  000DFC  0EFF               	movlw	-1
 39090  000DFE  9EE3               	bcf	plusw1,7,c
 39091                           
 39092                           ;stkvar	_u @ sp[(-4)+0]
 39093  000E00  0EFC               	movlw	-4
 39094  000E02  006F FF8C  F02A    	movff	plusw1,btemp
 39095  000E08  0EFD               	movlw	-3
 39096  000E0A  006F FF8C  F02B    	movff	plusw1,btemp+1
 39097  000E10  0EFE               	movlw	-2
 39098  000E12  006F FF8C  F02C    	movff	plusw1,btemp+2
 39099  000E18  0EFF               	movlw	-1
 39100  000E1A  006F FF8C  F02D    	movff	plusw1,btemp+3
 39101                           
 39102                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 39103  000E20  0EF8               	movlw	248
 39104  000E22  26E1               	addwf	fsr1l,f,c
 39105  000E24  0EFF               	movlw	255
 39106  000E26  22E2               	addwfc	fsr1h,f,c
 39107  000E28  0012               	return		;funcret
 39108  000E2A                     __end_of_fabsf:
 39109                           	opt callstack 0
 39110                           
 39111 ;; *************** function _conv_raw_result *****************
 39112 ;; Defined at:
 39113 ;;		line 135 in file "daq.c"
 39114 ;; Parameters:    Size  Location     Type
 39115 ;;  chan            1  [STACK] const enum E16605
 39116 ;;  to_what         1  [STACK] const enum E16996
 39117 ;; Auto vars:     Size  Location     Type
 39118 ;;		None
 39119 ;; Return value:  Size  Location     Type
 39120 ;;                  4  [STACK] float 
 39121 ;; Registers used:
 39122 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 39123 ;; Tracked objects:
 39124 ;;		On entry : 0/0
 39125 ;;		On exit  : 0/0
 39126 ;;		Unchanged: 0/0
 39127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39132 ;;Total ram usage:        0 bytes
 39133 ;; Hardware stack levels used:    1
 39134 ;; Hardware stack levels required when called:   17
 39135 ;; This function calls:
 39136 ;;		___fldiv
 39137 ;;		___flmul
 39138 ;;		___flsub
 39139 ;;		___xxtofl
 39140 ;;		_get_raw_result
 39141 ;;		_nanf
 39142 ;; This function is called by:
 39143 ;;		_main
 39144 ;;		_convert_adc_data
 39145 ;;		_calc_ror_data
 39146 ;;		_check_day_time
 39147 ;;		_init_bsoc
 39148 ;;		_esr_check
 39149 ;; This function uses a reentrant model
 39150 ;;
 39151                           
 39152                           	psect	text144
 39153  019200                     __ptext144:
 39154                           	opt callstack 0
 39155  019200                     _conv_raw_result:
 39156                           	opt callstack 0
 39157                           
 39158                           ;daq.c: 135: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);
      +                          daq.c: 136: {;daq.c: 138:  switch (to_what) {
 39159                           
 39160                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39161                           ;incstack = 0
 39162 ;; hardware stack exceeded
 39163  019200  D24A               	goto	l12439
 39164  019202                     l12385:
 39165                           
 39166                           ;daq.c: 140:   if (!(0b0011110001110111 >> chan & 0x1))
 39167                           ;stkvar	_chan @ sp[(0)+-1]
 39168  019202  0EFF               	movlw	-1
 39169  019204  006F FF8C  F035    	movff	plusw1,btemp+11
 39170  01920A  0E77               	movlw	119
 39171  01920C  6E32               	movwf	(btemp+8)^0,c
 39172  01920E  0E3C               	movlw	60
 39173  019210  6E33               	movwf	(btemp+9)^0,c
 39174  019212  2A35               	incf	(btemp+11)^0,f,c
 39175  019214  D003               	goto	u11694
 39176  019216                     u11695:
 39177  019216  3433               	rlcf	(btemp+9)^0,w,c
 39178  019218  3233               	rrcf	(btemp+9)^0,f,c
 39179  01921A  3232               	rrcf	(btemp+8)^0,f,c
 39180  01921C                     u11694:
 39181  01921C  2E35               	decfsz	(btemp+11)^0,f,c
 39182  01921E  D7FB               	goto	u11695
 39183  019220  B032               	btfsc	(btemp+8)^0,0,c
 39184  019222  D007               	goto	l12391
 39185                           
 39186                           ;daq.c: 141:    return nanf("");
 39187  019224  0EE1               	movlw	low (STR_103+126)
 39188  019226  6EE6               	movwf	postinc1,c
 39189  019228  0EF9               	movlw	high (STR_103+126)
 39190  01922A  6EE6               	movwf	postinc1,c
 39191  01922C  ECC4  F00E         	call	_nanf	;wreg free
 39192  019230  D242               	goto	l1988
 39193  019232                     l12391:
 39194                           
 39195                           ;daq.c: 143:   if (0b0000000000000011 >> chan & 0x1) {
 39196                           ;stkvar	_chan @ sp[(0)+-1]
 39197  019232  0EFF               	movlw	-1
 39198  019234  006F FF8C  F035    	movff	plusw1,btemp+11
 39199  01923A  0E03               	movlw	3
 39200  01923C  6E32               	movwf	(btemp+8)^0,c
 39201  01923E  0E00               	movlw	0
 39202  019240  6E33               	movwf	(btemp+9)^0,c
 39203  019242  2A35               	incf	(btemp+11)^0,f,c
 39204  019244  D003               	goto	u11714
 39205  019246                     u11715:
 39206  019246  3433               	rlcf	(btemp+9)^0,w,c
 39207  019248  3233               	rrcf	(btemp+9)^0,f,c
 39208  01924A  3232               	rrcf	(btemp+8)^0,f,c
 39209  01924C                     u11714:
 39210  01924C  2E35               	decfsz	(btemp+11)^0,f,c
 39211  01924E  D7FB               	goto	u11715
 39212  019250  A032               	btfss	(btemp+8)^0,0,c
 39213  019252  D0F3               	goto	l12405
 39214                           
 39215                           ;daq.c: 144:    if (0b0000000000000001 >> chan & 0x1) {
 39216                           ;stkvar	_chan @ sp[(0)+-1]
 39217  019254  0EFF               	movlw	-1
 39218  019256  006F FF8C  F035    	movff	plusw1,btemp+11
 39219  01925C  0E01               	movlw	1
 39220  01925E  6E32               	movwf	(btemp+8)^0,c
 39221  019260  0E00               	movlw	0
 39222  019262  6E33               	movwf	(btemp+9)^0,c
 39223  019264  2A35               	incf	(btemp+11)^0,f,c
 39224  019266  D003               	goto	u11734
 39225  019268                     u11735:
 39226  019268  3433               	rlcf	(btemp+9)^0,w,c
 39227  01926A  3233               	rrcf	(btemp+9)^0,f,c
 39228  01926C  3232               	rrcf	(btemp+8)^0,f,c
 39229  01926E                     u11734:
 39230  01926E  2E35               	decfsz	(btemp+11)^0,f,c
 39231  019270  D7FB               	goto	u11735
 39232  019272  A032               	btfss	(btemp+8)^0,0,c
 39233  019274  D071               	goto	l12401
 39234                           
 39235                           ;daq.c: 145:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[0]) * R.n_
      +                          scalar[0];
 39236  019276  0060  F4AB  FFE6   	movff	_R+42,postinc1
 39237  01927C  0060  F4AF  FFE6   	movff	_R+43,postinc1
 39238  019282  0060  F4B3  FFE6   	movff	_R+44,postinc1
 39239  019288  0060  F4B7  FFE6   	movff	_R+45,postinc1
 39240  01928E  0060  F498  F032   	movff	_R+38,btemp+8	;volatile
 39241  019294  0060  F49C  F033   	movff	_R+39,btemp+9	;volatile
 39242  01929A  0E00               	movlw	0
 39243  01929C  BE33               	btfsc	(btemp+9)^0,7,c
 39244  01929E  0EFF               	movlw	255
 39245  0192A0  6E34               	movwf	(btemp+10)^0,c
 39246  0192A2  6E35               	movwf	(btemp+11)^0,c
 39247  0192A4  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 39248  0192AA  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 39249  0192B0  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 39250  0192B6  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 39251  0192BC  0E01               	movlw	1
 39252  0192BE  6EE6               	movwf	postinc1,c
 39253  0192C0  EC4F  F0ED         	call	___xxtofl	;wreg free
 39254  0192C4  0060  F0AB  FFE6   	movff	btemp,postinc1
 39255  0192CA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39256  0192D0  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39257  0192D6  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39258                           
 39259                           ;stkvar	_chan @ sp[(-8)+-1]
 39260  0192DC  0EF7               	movlw	-9
 39261  0192DE  50E3               	movf	plusw1,w,c
 39262  0192E0  6EE6               	movwf	postinc1,c
 39263  0192E2  EC6B  F016         	call	_get_raw_result	;wreg free
 39264  0192E6  0060  F0A8  F034   	movff	btemp,btemp+10
 39265  0192EC  0060  F0AC  F035   	movff	btemp+1,btemp+11
 39266  0192F2  5034               	movf	(btemp+10)^0,w,c
 39267  0192F4  6E2E               	movwf	(btemp+4)^0,c
 39268  0192F6  5035               	movf	(btemp+11)^0,w,c
 39269  0192F8  6E2F               	movwf	(btemp+5)^0,c
 39270  0192FA  6A30               	clrf	(btemp+6)^0,c
 39271  0192FC  6A31               	clrf	(btemp+7)^0,c
 39272  0192FE  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 39273  019304  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 39274  01930A  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 39275  019310  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 39276  019316  0E00               	movlw	0
 39277  019318  6EE6               	movwf	postinc1,c
 39278  01931A  EC4F  F0ED         	call	___xxtofl	;wreg free
 39279  01931E  0060  F0AB  FFE6   	movff	btemp,postinc1
 39280  019324  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39281  01932A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39282  019330  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39283  019336  ECA3  F011         	call	___flsub	;wreg free
 39284  01933A  0060  F0AB  FFE6   	movff	btemp,postinc1
 39285  019340  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39286  019346  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39287  01934C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39288  019352  EC67  F0B8         	call	___flmul	;wreg free
 39289  019356  D1AF               	goto	l1988
 39290  019358                     l12401:
 39291                           
 39292                           ;daq.c: 147:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[1]) * R.n_
      +                          scalar[1];
 39293  019358  0060  F4BB  FFE6   	movff	_R+46,postinc1
 39294  01935E  0060  F4BF  FFE6   	movff	_R+47,postinc1
 39295  019364  0060  F4C3  FFE6   	movff	_R+48,postinc1
 39296  01936A  0060  F4C7  FFE6   	movff	_R+49,postinc1
 39297  019370  0060  F4A0  F032   	movff	_R+40,btemp+8	;volatile
 39298  019376  0060  F4A4  F033   	movff	_R+41,btemp+9	;volatile
 39299  01937C  0E00               	movlw	0
 39300  01937E  BE33               	btfsc	(btemp+9)^0,7,c
 39301  019380  0EFF               	movlw	255
 39302  019382  6E34               	movwf	(btemp+10)^0,c
 39303  019384  6E35               	movwf	(btemp+11)^0,c
 39304  019386  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 39305  01938C  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 39306  019392  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 39307  019398  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 39308  01939E  0E01               	movlw	1
 39309  0193A0  6EE6               	movwf	postinc1,c
 39310  0193A2  EC4F  F0ED         	call	___xxtofl	;wreg free
 39311  0193A6  0060  F0AB  FFE6   	movff	btemp,postinc1
 39312  0193AC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39313  0193B2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39314  0193B8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39315                           
 39316                           ;stkvar	_chan @ sp[(-8)+-1]
 39317  0193BE  0EF7               	movlw	-9
 39318  0193C0  50E3               	movf	plusw1,w,c
 39319  0193C2  6EE6               	movwf	postinc1,c
 39320  0193C4  EC6B  F016         	call	_get_raw_result	;wreg free
 39321  0193C8  0060  F0A8  F034   	movff	btemp,btemp+10
 39322  0193CE  0060  F0AC  F035   	movff	btemp+1,btemp+11
 39323  0193D4  5034               	movf	(btemp+10)^0,w,c
 39324  0193D6  6E2E               	movwf	(btemp+4)^0,c
 39325  0193D8  5035               	movf	(btemp+11)^0,w,c
 39326  0193DA  6E2F               	movwf	(btemp+5)^0,c
 39327  0193DC  6A30               	clrf	(btemp+6)^0,c
 39328  0193DE  6A31               	clrf	(btemp+7)^0,c
 39329  0193E0  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 39330  0193E6  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 39331  0193EC  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 39332  0193F2  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 39333  0193F8  0E00               	movlw	0
 39334  0193FA  6EE6               	movwf	postinc1,c
 39335  0193FC  EC4F  F0ED         	call	___xxtofl	;wreg free
 39336  019400  0060  F0AB  FFE6   	movff	btemp,postinc1
 39337  019406  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39338  01940C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39339  019412  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39340  019418  ECA3  F011         	call	___flsub	;wreg free
 39341  01941C  0060  F0AB  FFE6   	movff	btemp,postinc1
 39342  019422  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39343  019428  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39344  01942E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39345  019434  EC67  F0B8         	call	___flmul	;wreg free
 39346  019438  D13E               	goto	l1988
 39347  01943A                     l12405:
 39348                           
 39349                           ;daq.c: 150:    if (0b0000100000000000 >> chan & 0x1) {
 39350                           ;stkvar	_chan @ sp[(0)+-1]
 39351  01943A  0EFF               	movlw	-1
 39352  01943C  006F FF8C  F035    	movff	plusw1,btemp+11
 39353  019442  0E00               	movlw	0
 39354  019444  6E32               	movwf	(btemp+8)^0,c
 39355  019446  0E08               	movlw	8
 39356  019448  6E33               	movwf	(btemp+9)^0,c
 39357  01944A  2A35               	incf	(btemp+11)^0,f,c
 39358  01944C  D003               	goto	u11754
 39359  01944E                     u11755:
 39360  01944E  3433               	rlcf	(btemp+9)^0,w,c
 39361  019450  3233               	rrcf	(btemp+9)^0,f,c
 39362  019452  3232               	rrcf	(btemp+8)^0,f,c
 39363  019454                     u11754:
 39364  019454  2E35               	decfsz	(btemp+11)^0,f,c
 39365  019456  D7FB               	goto	u11755
 39366  019458  A032               	btfss	(btemp+8)^0,0,c
 39367  01945A  D008               	goto	l12413
 39368                           
 39369                           ;daq.c: 151:     return 25.0;
 39370  01945C  0E00               	movlw	0
 39371  01945E  6E2A               	movwf	btemp^0,c
 39372  019460  0E00               	movlw	0
 39373  019462  6E2B               	movwf	(btemp+1)^0,c
 39374  019464  0EC8               	movlw	200
 39375  019466  6E2C               	movwf	(btemp+2)^0,c
 39376  019468  0E41               	movlw	65
 39377  01946A  D113               	goto	L45
 39378  01946C                     l12413:
 39379                           
 39380                           ;daq.c: 153:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 39381  01946C  0E00               	movlw	0
 39382  01946E  6EE6               	movwf	postinc1,c
 39383  019470  0E00               	movlw	0
 39384  019472  6EE6               	movwf	postinc1,c
 39385  019474  0E7A               	movlw	122
 39386  019476  6EE6               	movwf	postinc1,c
 39387  019478  0E44               	movlw	68
 39388  01947A  6EE6               	movwf	postinc1,c
 39389  01947C  0E61               	movlw	97
 39390  01947E  6EE6               	movwf	postinc1,c
 39391  019480  0E03               	movlw	3
 39392  019482  6EE6               	movwf	postinc1,c
 39393  019484  0E84               	movlw	132
 39394  019486  6EE6               	movwf	postinc1,c
 39395  019488  0E40               	movlw	64
 39396  01948A  6EE6               	movwf	postinc1,c
 39397                           
 39398                           ;stkvar	_chan @ sp[(-8)+-1]
 39399  01948C  0EF7               	movlw	-9
 39400  01948E  50E3               	movf	plusw1,w,c
 39401  019490  6EE6               	movwf	postinc1,c
 39402  019492  EC6B  F016         	call	_get_raw_result	;wreg free
 39403  019496  0060  F0A8  F034   	movff	btemp,btemp+10
 39404  01949C  0060  F0AC  F035   	movff	btemp+1,btemp+11
 39405  0194A2  5034               	movf	(btemp+10)^0,w,c
 39406  0194A4  6E2E               	movwf	(btemp+4)^0,c
 39407  0194A6  5035               	movf	(btemp+11)^0,w,c
 39408  0194A8  6E2F               	movwf	(btemp+5)^0,c
 39409  0194AA  6A30               	clrf	(btemp+6)^0,c
 39410  0194AC  6A31               	clrf	(btemp+7)^0,c
 39411  0194AE  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 39412  0194B4  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 39413  0194BA  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 39414  0194C0  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 39415  0194C6  0E00               	movlw	0
 39416  0194C8  6EE6               	movwf	postinc1,c
 39417  0194CA  EC4F  F0ED         	call	___xxtofl	;wreg free
 39418  0194CE  0060  F0AB  FFE6   	movff	btemp,postinc1
 39419  0194D4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39420  0194DA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39421  0194E0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39422  0194E6  EC67  F0B8         	call	___flmul	;wreg free
 39423  0194EA  0060  F0AB  FFE6   	movff	btemp,postinc1
 39424  0194F0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39425  0194F6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39426  0194FC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39427  019502  ECB8  F0C3         	call	___fldiv	;wreg free
 39428  019506  D0D7               	goto	l1988
 39429  019508                     l12417:
 39430                           
 39431                           ;daq.c: 158:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 39432                           ;stkvar	_chan @ sp[(0)+-1]
 39433  019508  0EFF               	movlw	-1
 39434  01950A  006F FF8C  F035    	movff	plusw1,btemp+11
 39435  019510  0E03               	movlw	3
 39436  019512  6E32               	movwf	(btemp+8)^0,c
 39437  019514  0E00               	movlw	0
 39438  019516  6E33               	movwf	(btemp+9)^0,c
 39439  019518  2A35               	incf	(btemp+11)^0,f,c
 39440  01951A  D003               	goto	u11774
 39441  01951C                     u11775:
 39442  01951C  3433               	rlcf	(btemp+9)^0,w,c
 39443  01951E  3233               	rrcf	(btemp+9)^0,f,c
 39444  019520  3232               	rrcf	(btemp+8)^0,f,c
 39445  019522                     u11774:
 39446  019522  2E35               	decfsz	(btemp+11)^0,f,c
 39447  019524  D7FB               	goto	u11775
 39448  019526  B032               	btfsc	(btemp+8)^0,0,c
 39449  019528  D011               	goto	u11800
 39450                           
 39451                           ;stkvar	_chan @ sp[(0)+-1]
 39452  01952A  0EFF               	movlw	-1
 39453  01952C  006F FF8C  F035    	movff	plusw1,btemp+11
 39454  019532  0E00               	movlw	0
 39455  019534  6E32               	movwf	(btemp+8)^0,c
 39456  019536  0E08               	movlw	8
 39457  019538  6E33               	movwf	(btemp+9)^0,c
 39458  01953A  2A35               	incf	(btemp+11)^0,f,c
 39459  01953C  D003               	goto	u11794
 39460  01953E                     u11795:
 39461  01953E  3433               	rlcf	(btemp+9)^0,w,c
 39462  019540  3233               	rrcf	(btemp+9)^0,f,c
 39463  019542  3232               	rrcf	(btemp+8)^0,f,c
 39464  019544                     u11794:
 39465  019544  2E35               	decfsz	(btemp+11)^0,f,c
 39466  019546  D7FB               	goto	u11795
 39467  019548  A032               	btfss	(btemp+8)^0,0,c
 39468  01954A  D04E               	goto	l12425
 39469  01954C                     u11800:
 39470                           
 39471                           ;daq.c: 159:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 39472  01954C  0E00               	movlw	0
 39473  01954E  6EE6               	movwf	postinc1,c
 39474  019550  0E00               	movlw	0
 39475  019552  6EE6               	movwf	postinc1,c
 39476  019554  0E7A               	movlw	122
 39477  019556  6EE6               	movwf	postinc1,c
 39478  019558  0E44               	movlw	68
 39479  01955A  6EE6               	movwf	postinc1,c
 39480  01955C  0E00               	movlw	0
 39481  01955E  6EE6               	movwf	postinc1,c
 39482  019560  0E00               	movlw	0
 39483  019562  6EE6               	movwf	postinc1,c
 39484  019564  0E20               	movlw	32
 39485  019566  6EE6               	movwf	postinc1,c
 39486  019568  0E3F               	movlw	63
 39487  01956A  6EE6               	movwf	postinc1,c
 39488                           
 39489                           ;stkvar	_chan @ sp[(-8)+-1]
 39490  01956C  0EF7               	movlw	-9
 39491  01956E  50E3               	movf	plusw1,w,c
 39492  019570  6EE6               	movwf	postinc1,c
 39493  019572  EC6B  F016         	call	_get_raw_result	;wreg free
 39494  019576  0060  F0A8  F034   	movff	btemp,btemp+10
 39495  01957C  0060  F0AC  F035   	movff	btemp+1,btemp+11
 39496  019582  5034               	movf	(btemp+10)^0,w,c
 39497  019584  6E2E               	movwf	(btemp+4)^0,c
 39498  019586  5035               	movf	(btemp+11)^0,w,c
 39499  019588  6E2F               	movwf	(btemp+5)^0,c
 39500  01958A  6A30               	clrf	(btemp+6)^0,c
 39501  01958C  6A31               	clrf	(btemp+7)^0,c
 39502  01958E  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 39503  019594  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 39504  01959A  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 39505  0195A0  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 39506  0195A6  0E00               	movlw	0
 39507  0195A8  6EE6               	movwf	postinc1,c
 39508  0195AA  EC4F  F0ED         	call	___xxtofl	;wreg free
 39509  0195AE  0060  F0AB  FFE6   	movff	btemp,postinc1
 39510  0195B4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39511  0195BA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39512  0195C0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39513  0195C6  EC67  F0B8         	call	___flmul	;wreg free
 39514  0195CA  0060  F0AB  FFE6   	movff	btemp,postinc1
 39515  0195D0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39516  0195D6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39517  0195DC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39518  0195E2  ECB8  F0C3         	call	___fldiv	;wreg free
 39519  0195E6  D067               	goto	l1988
 39520  0195E8                     l12425:
 39521                           
 39522                           ;daq.c: 161:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 39523  0195E8  0E00               	movlw	0
 39524  0195EA  6EE6               	movwf	postinc1,c
 39525  0195EC  0E00               	movlw	0
 39526  0195EE  6EE6               	movwf	postinc1,c
 39527  0195F0  0E7A               	movlw	122
 39528  0195F2  6EE6               	movwf	postinc1,c
 39529  0195F4  0E44               	movlw	68
 39530  0195F6  6EE6               	movwf	postinc1,c
 39531  0195F8  0E61               	movlw	97
 39532  0195FA  6EE6               	movwf	postinc1,c
 39533  0195FC  0E03               	movlw	3
 39534  0195FE  6EE6               	movwf	postinc1,c
 39535  019600  0E84               	movlw	132
 39536  019602  6EE6               	movwf	postinc1,c
 39537  019604  0E40               	movlw	64
 39538  019606  6EE6               	movwf	postinc1,c
 39539                           
 39540                           ;stkvar	_chan @ sp[(-8)+-1]
 39541  019608  0EF7               	movlw	-9
 39542  01960A  50E3               	movf	plusw1,w,c
 39543  01960C  6EE6               	movwf	postinc1,c
 39544  01960E  EC6B  F016         	call	_get_raw_result	;wreg free
 39545  019612  0060  F0A8  F034   	movff	btemp,btemp+10
 39546  019618  0060  F0AC  F035   	movff	btemp+1,btemp+11
 39547  01961E  5034               	movf	(btemp+10)^0,w,c
 39548  019620  6E2E               	movwf	(btemp+4)^0,c
 39549  019622  5035               	movf	(btemp+11)^0,w,c
 39550  019624  6E2F               	movwf	(btemp+5)^0,c
 39551  019626  6A30               	clrf	(btemp+6)^0,c
 39552  019628  6A31               	clrf	(btemp+7)^0,c
 39553  01962A  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 39554  019630  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 39555  019636  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 39556  01963C  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 39557  019642  0E00               	movlw	0
 39558  019644  6EE6               	movwf	postinc1,c
 39559  019646  EC4F  F0ED         	call	___xxtofl	;wreg free
 39560  01964A  0060  F0AB  FFE6   	movff	btemp,postinc1
 39561  019650  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39562  019656  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39563  01965C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39564  019662  EC67  F0B8         	call	___flmul	;wreg free
 39565  019666  0060  F0AB  FFE6   	movff	btemp,postinc1
 39566  01966C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39567  019672  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39568  019678  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39569  01967E  ECB8  F0C3         	call	___fldiv	;wreg free
 39570  019682  D019               	goto	l1988
 39571  019684                     l12431:
 39572                           
 39573                           ;daq.c: 164:   return 0.0;
 39574  019684  0E00               	movlw	0
 39575  019686  6E2A               	movwf	btemp^0,c
 39576  019688  0E00               	movlw	0
 39577  01968A  6E2B               	movwf	(btemp+1)^0,c
 39578  01968C  0E00               	movlw	0
 39579  01968E  6E2C               	movwf	(btemp+2)^0,c
 39580  019690  0E00               	movlw	0
 39581  019692                     L45:
 39582  019692  6E2D               	movwf	(btemp+3)^0,c
 39583  019694  D010               	goto	l1988
 39584  019696                     l12439:
 39585                           
 39586                           ;stkvar	_to_what @ sp[(0)+-2]
 39587  019696  0EFE               	movlw	-2
 39588  019698  50E3               	movf	plusw1,w,c
 39589  01969A  6E34               	movwf	(btemp+10)^0,c
 39590  01969C  6A35               	clrf	(btemp+11)^0,c
 39591                           
 39592                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 39593                           ; Switch size 1, requested type "simple"
 39594                           ; Number of cases is 1, Range of values is 0 to 0
 39595                           ; switch strategies available:
 39596                           ; Name         Instructions Cycles
 39597                           ; simple_byte            4     3 (average)
 39598                           ;	Chosen strategy is simple_byte
 39599  01969E  5035               	movf	(btemp+11)^0,w,c
 39600  0196A0  0A00               	xorlw	0	; case 0
 39601  0196A2  A4D8               	btfss	status,2,c
 39602  0196A4  D7EF               	goto	l12431
 39603                           
 39604                           ; Switch size 1, requested type "simple"
 39605                           ; Number of cases is 2, Range of values is 0 to 1
 39606                           ; switch strategies available:
 39607                           ; Name         Instructions Cycles
 39608                           ; simple_byte            7     4 (average)
 39609                           ;	Chosen strategy is simple_byte
 39610  0196A6  5034               	movf	(btemp+10)^0,w,c
 39611  0196A8  0A00               	xorlw	0	; case 0
 39612  0196AA  B4D8               	btfsc	status,2,c
 39613  0196AC  D5AA               	goto	l12385
 39614  0196AE  0A01               	xorlw	1	; case 1
 39615  0196B0  B4D8               	btfsc	status,2,c
 39616  0196B2  D72A               	goto	l12417
 39617  0196B4  D7E7               	goto	l12431
 39618  0196B6                     l1988:
 39619                           
 39620                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 39621  0196B6  52E5               	movf	postdec1,f,c
 39622  0196B8  52E5               	movf	postdec1,f,c
 39623  0196BA  0012               	return		;funcret
 39624  0196BC                     __end_of_conv_raw_result:
 39625                           	opt callstack 0
 39626                           
 39627 ;; *************** function _nanf *****************
 39628 ;; Defined at:
 39629 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 39630 ;; Parameters:    Size  Location     Type
 39631 ;;  s               2  [STACK] PTR const unsigned char 
 39632 ;;		 -> STR_142(1), STR_102(1), 
 39633 ;; Auto vars:     Size  Location     Type
 39634 ;;  u               4  [STACK] struct .
 39635 ;; Return value:  Size  Location     Type
 39636 ;;                  4  [STACK] float 
 39637 ;; Registers used:
 39638 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 39639 ;; Tracked objects:
 39640 ;;		On entry : 0/0
 39641 ;;		On exit  : 0/0
 39642 ;;		Unchanged: 0/0
 39643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39648 ;;Total ram usage:        0 bytes
 39649 ;; Hardware stack levels used:    1
 39650 ;; Hardware stack levels required when called:   15
 39651 ;; This function calls:
 39652 ;;		Nothing
 39653 ;; This function is called by:
 39654 ;;		_conv_raw_result
 39655 ;; This function uses a reentrant model
 39656 ;;
 39657                           
 39658                           	psect	text145
 39659  001D88                     __ptext145:
 39660                           	opt callstack 0
 39661  001D88                     _nanf:
 39662                           	opt callstack 0
 39663                           
 39664                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39665  001D88  52E6               	movf	postinc1,f,c
 39666  001D8A  52E6               	movf	postinc1,f,c
 39667  001D8C  52E6               	movf	postinc1,f,c
 39668  001D8E  52E6               	movf	postinc1,f,c
 39669                           
 39670                           ;incstack = 0
 39671 ;; hardware stack exceeded
 39672  001D90  0EFF               	movlw	255
 39673  001D92  6E32               	movwf	(btemp+8)^0,c
 39674  001D94  0EFF               	movlw	255
 39675  001D96  6E33               	movwf	(btemp+9)^0,c
 39676  001D98  0EFF               	movlw	255
 39677  001D9A  6E34               	movwf	(btemp+10)^0,c
 39678  001D9C  0E7F               	movlw	127
 39679  001D9E  6E35               	movwf	(btemp+11)^0,c
 39680                           
 39681                           ;stkvar	_u @ sp[(-4)+0]
 39682  001DA0  0EFC               	movlw	-4
 39683  001DA2  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39684  001DA8  0EFD               	movlw	-3
 39685  001DAA  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39686  001DB0  0EFE               	movlw	-2
 39687  001DB2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39688  001DB8  0EFF               	movlw	-1
 39689  001DBA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39690                           
 39691                           ;stkvar	_u @ sp[(-4)+0]
 39692  001DC0  0EFC               	movlw	-4
 39693  001DC2  006F FF8C  F02A    	movff	plusw1,btemp
 39694  001DC8  0EFD               	movlw	-3
 39695  001DCA  006F FF8C  F02B    	movff	plusw1,btemp+1
 39696  001DD0  0EFE               	movlw	-2
 39697  001DD2  006F FF8C  F02C    	movff	plusw1,btemp+2
 39698  001DD8  0EFF               	movlw	-1
 39699  001DDA  006F FF8C  F02D    	movff	plusw1,btemp+3
 39700                           
 39701                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 39702  001DE0  0EFA               	movlw	250
 39703  001DE2  26E1               	addwf	fsr1l,f,c
 39704  001DE4  0EFF               	movlw	255
 39705  001DE6  22E2               	addwfc	fsr1h,f,c
 39706  001DE8  0012               	return		;funcret
 39707  001DEA                     __end_of_nanf:
 39708                           	opt callstack 0
 39709                           
 39710 ;; *************** function _get_raw_result *****************
 39711 ;; Defined at:
 39712 ;;		line 127 in file "daq.c"
 39713 ;; Parameters:    Size  Location     Type
 39714 ;;  index           1  [STACK] const enum E16605
 39715 ;; Auto vars:     Size  Location     Type
 39716 ;;		None
 39717 ;; Return value:  Size  Location     Type
 39718 ;;                  2  [STACK] unsigned short 
 39719 ;; Registers used:
 39720 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 39721 ;; Tracked objects:
 39722 ;;		On entry : 0/2
 39723 ;;		On exit  : 0/0
 39724 ;;		Unchanged: 0/0
 39725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39730 ;;Total ram usage:        0 bytes
 39731 ;; Hardware stack levels used:    1
 39732 ;; Hardware stack levels required when called:   15
 39733 ;; This function calls:
 39734 ;;		Nothing
 39735 ;; This function is called by:
 39736 ;;		_main
 39737 ;;		_current_sensor_cal
 39738 ;;		_conv_raw_result
 39739 ;; This function uses a reentrant model
 39740 ;;
 39741                           
 39742                           	psect	text146
 39743  002CD6                     __ptext146:
 39744                           	opt callstack 0
 39745  002CD6                     _get_raw_result:
 39746                           	opt callstack 0
 39747                           
 39748                           ;daq.c: 127: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 128: {;daq.c
      +                          : 129:  return R.raw_adc[index];
 39749                           ;stkvar	_index @ sp[(0)+-1]
 39750                           
 39751                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39752                           ;incstack = 0
 39753 ;; hardware stack exceeded
 39754  002CD6  0EFF               	movlw	-1
 39755  002CD8  50E3               	movf	plusw1,w,c
 39756  002CDA  0D02               	mullw	2
 39757  002CDC  0E00               	movlw	low _R
 39758  002CDE  24F3               	addwf	243,w,c
 39759  002CE0  6ED9               	movwf	fsr2l,c
 39760  002CE2  0E01               	movlw	high _R
 39761  002CE4  20F4               	addwfc	prodh,w,c
 39762  002CE6  6EDA               	movwf	fsr2h,c
 39763  002CE8  006F FF78  F02A    	movff	postinc2,btemp
 39764  002CEE  006F FF74  F02B    	movff	postdec2,btemp+1
 39765                           
 39766                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 39767  002CF4  52E5               	movf	postdec1,f,c
 39768  002CF6  0012               	return		;funcret
 39769  002CF8                     __end_of_get_raw_result:
 39770                           	opt callstack 0
 39771                           
 39772 ;; *************** function ___xxtofl *****************
 39773 ;; Defined at:
 39774 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 39775 ;; Parameters:    Size  Location     Type
 39776 ;;  sign            1  [STACK] unsigned char 
 39777 ;;  val             4  [STACK] long 
 39778 ;; Auto vars:     Size  Location     Type
 39779 ;;  arg             4  [STACK] unsigned long 
 39780 ;;  exp             1  [STACK] unsigned char 
 39781 ;; Return value:  Size  Location     Type
 39782 ;;                  4  [STACK] unsigned char 
 39783 ;; Registers used:
 39784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 39785 ;; Tracked objects:
 39786 ;;		On entry : 0/1
 39787 ;;		On exit  : 0/0
 39788 ;;		Unchanged: 0/0
 39789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39794 ;;Total ram usage:        0 bytes
 39795 ;; Hardware stack levels used:    1
 39796 ;; Hardware stack levels required when called:   15
 39797 ;; This function calls:
 39798 ;;		Nothing
 39799 ;; This function is called by:
 39800 ;;		_current_sensor_cal
 39801 ;;		_conv_raw_result
 39802 ;;		_init_bsoc
 39803 ;; This function uses a reentrant model
 39804 ;;
 39805                           
 39806                           	psect	text147
 39807  01DA9E                     __ptext147:
 39808                           	opt callstack 0
 39809  01DA9E                     ___xxtofl:
 39810                           	opt callstack 0
 39811                           
 39812                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39813  01DA9E  0E05               	movlw	5
 39814  01DAA0  26E1               	addwf	fsr1l,f,c
 39815  01DAA2  0E00               	movlw	0
 39816  01DAA4  22E2               	addwfc	fsr1h,f,c
 39817                           
 39818                           ;stkvar	_sign @ sp[(-5)+-1]
 39819                           
 39820                           ;incstack = 0
 39821 ;; hardware stack exceeded
 39822  01DAA6  0EFA               	movlw	-6
 39823  01DAA8  50E3               	movf	plusw1,w,c
 39824  01DAAA  B4D8               	btfsc	status,2,c
 39825  01DAAC  D01D               	goto	l12107
 39826                           
 39827                           ;stkvar	_val @ sp[(-5)+-5]
 39828  01DAAE  0EF9               	movlw	-7
 39829  01DAB0  AEE3               	btfss	plusw1,7,c
 39830  01DAB2  D01A               	goto	l12107
 39831                           
 39832                           ;stkvar	_val @ sp[(-5)+-5]
 39833  01DAB4  0EF6               	movlw	-10
 39834  01DAB6  006F FF8C  F032    	movff	plusw1,btemp+8
 39835  01DABC  0EF7               	movlw	-9
 39836  01DABE  006F FF8C  F033    	movff	plusw1,btemp+9
 39837  01DAC4  0EF8               	movlw	-8
 39838  01DAC6  006F FF8C  F034    	movff	plusw1,btemp+10
 39839  01DACC  0EF9               	movlw	-7
 39840  01DACE  006F FF8C  F035    	movff	plusw1,btemp+11
 39841  01DAD4  1E32               	comf	(btemp+8)^0,f,c
 39842  01DAD6  1E33               	comf	(btemp+9)^0,f,c
 39843  01DAD8  1E34               	comf	(btemp+10)^0,f,c
 39844  01DADA  1E35               	comf	(btemp+11)^0,f,c
 39845  01DADC  2A32               	incf	(btemp+8)^0,f,c
 39846  01DADE  0E00               	movlw	0
 39847  01DAE0  2233               	addwfc	(btemp+9)^0,f,c
 39848  01DAE2  2234               	addwfc	(btemp+10)^0,f,c
 39849  01DAE4  2235               	addwfc	(btemp+11)^0,f,c
 39850  01DAE6  D010               	goto	L46
 39851  01DAE8                     l12107:
 39852                           
 39853                           ;stkvar	_val @ sp[(-5)+-5]
 39854  01DAE8  0EF6               	movlw	-10
 39855  01DAEA  006F FF8C  F032    	movff	plusw1,btemp+8
 39856  01DAF0  0EF7               	movlw	-9
 39857  01DAF2  006F FF8C  F033    	movff	plusw1,btemp+9
 39858  01DAF8  0EF8               	movlw	-8
 39859  01DAFA  006F FF8C  F034    	movff	plusw1,btemp+10
 39860  01DB00  0EF9               	movlw	-7
 39861  01DB02  006F FF8C  F035    	movff	plusw1,btemp+11
 39862  01DB08                     L46:
 39863                           
 39864                           ;stkvar	_arg @ sp[(-5)+0]
 39865  01DB08  0EFB               	movlw	-5
 39866  01DB0A  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39867  01DB10  0EFC               	movlw	-4
 39868  01DB12  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39869  01DB18  0EFD               	movlw	-3
 39870  01DB1A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39871  01DB20  0EFE               	movlw	-2
 39872  01DB22  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39873                           
 39874                           ;stkvar	_val @ sp[(-5)+-5]
 39875  01DB28  0EF6               	movlw	-10
 39876  01DB2A  50E3               	movf	plusw1,w,c
 39877  01DB2C  E113               	bnz	l12115
 39878  01DB2E  0EF7               	movlw	-9
 39879  01DB30  50E3               	movf	plusw1,w,c
 39880  01DB32  E110               	bnz	l12115
 39881  01DB34  0EF8               	movlw	-8
 39882  01DB36  50E3               	movf	plusw1,w,c
 39883  01DB38  E10D               	bnz	l12115
 39884  01DB3A  0EF9               	movlw	-7
 39885  01DB3C  50E3               	movf	plusw1,w,c
 39886  01DB3E  A4D8               	btfss	status,2,c
 39887  01DB40  D009               	goto	l12115
 39888  01DB42  0E00               	movlw	0
 39889  01DB44  6E2A               	movwf	btemp^0,c
 39890  01DB46  0E00               	movlw	0
 39891  01DB48  6E2B               	movwf	(btemp+1)^0,c
 39892  01DB4A  0E00               	movlw	0
 39893  01DB4C  6E2C               	movwf	(btemp+2)^0,c
 39894  01DB4E  0E00               	movlw	0
 39895  01DB50  6E2D               	movwf	(btemp+3)^0,c
 39896  01DB52  D0A2               	goto	l3391
 39897  01DB54                     l12115:
 39898  01DB54  0E96               	movlw	150
 39899  01DB56  6E35               	movwf	(btemp+11)^0,c
 39900                           
 39901                           ;stkvar	_exp @ sp[(-5)+4]
 39902  01DB58  0EFF               	movlw	-1
 39903  01DB5A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39904  01DB60  D00B               	goto	l12119
 39905  01DB62                     l12117:
 39906                           
 39907                           ;stkvar	_exp @ sp[(-5)+4]
 39908  01DB62  0EFF               	movlw	-1
 39909  01DB64  2AE3               	incf	plusw1,f,c
 39910                           
 39911                           ;stkvar	_arg @ sp[(-5)+0]
 39912  01DB66  90D8               	bcf	status,0,c
 39913  01DB68  0EFE               	movlw	-2
 39914  01DB6A  32E3               	rrcf	plusw1,f,c
 39915  01DB6C  0EFD               	movlw	-3
 39916  01DB6E  32E3               	rrcf	plusw1,f,c
 39917  01DB70  0EFC               	movlw	-4
 39918  01DB72  32E3               	rrcf	plusw1,f,c
 39919  01DB74  0EFB               	movlw	-5
 39920  01DB76  32E3               	rrcf	plusw1,f,c
 39921  01DB78                     l12119:
 39922                           
 39923                           ;stkvar	_arg @ sp[(-5)+0]
 39924  01DB78  50E1               	movf	fsr1l,w,c
 39925  01DB7A  0FFB               	addlw	-5
 39926  01DB7C  6ED9               	movwf	fsr2l,c
 39927  01DB7E  50E2               	movf	fsr1h,w,c
 39928  01DB80  6EDA               	movwf	fsr2h,c
 39929  01DB82  0EFF               	movlw	255
 39930  01DB84  22DA               	addwfc	fsr2h,f,c
 39931  01DB86  52DE               	movf	postinc2,f,c
 39932  01DB88  52DE               	movf	postinc2,f,c
 39933  01DB8A  52DE               	movf	postinc2,f,c
 39934  01DB8C  0EFE               	movlw	254
 39935  01DB8E  14DD               	andwf	postdec2,w,c
 39936  01DB90  B4D8               	btfsc	status,2,c
 39937  01DB92  D018               	goto	l12127
 39938  01DB94  D7E6               	goto	l12117
 39939  01DB96                     l12121:
 39940                           
 39941                           ;stkvar	_exp @ sp[(-5)+4]
 39942  01DB96  0EFF               	movlw	-1
 39943  01DB98  2AE3               	incf	plusw1,f,c
 39944                           
 39945                           ;stkvar	_arg @ sp[(-5)+0]
 39946  01DB9A  50E1               	movf	fsr1l,w,c
 39947  01DB9C  0FFB               	addlw	-5
 39948  01DB9E  6ED9               	movwf	fsr2l,c
 39949  01DBA0  50E2               	movf	fsr1h,w,c
 39950  01DBA2  6EDA               	movwf	fsr2h,c
 39951  01DBA4  0EFF               	movlw	255
 39952  01DBA6  22DA               	addwfc	fsr2h,f,c
 39953  01DBA8  2ADE               	incf	postinc2,f,c
 39954  01DBAA  0E00               	movlw	0
 39955  01DBAC  22DE               	addwfc	postinc2,f,c
 39956  01DBAE  22DE               	addwfc	postinc2,f,c
 39957  01DBB0  22DE               	addwfc	postinc2,f,c
 39958                           
 39959                           ;stkvar	_arg @ sp[(-5)+0]
 39960  01DBB2  90D8               	bcf	status,0,c
 39961  01DBB4  0EFE               	movlw	-2
 39962  01DBB6  32E3               	rrcf	plusw1,f,c
 39963  01DBB8  0EFD               	movlw	-3
 39964  01DBBA  32E3               	rrcf	plusw1,f,c
 39965  01DBBC  0EFC               	movlw	-4
 39966  01DBBE  32E3               	rrcf	plusw1,f,c
 39967  01DBC0  0EFB               	movlw	-5
 39968  01DBC2  32E3               	rrcf	plusw1,f,c
 39969  01DBC4                     l12127:
 39970                           
 39971                           ;stkvar	_arg @ sp[(-5)+0]
 39972  01DBC4  50E1               	movf	fsr1l,w,c
 39973  01DBC6  0FFB               	addlw	-5
 39974  01DBC8  6ED9               	movwf	fsr2l,c
 39975  01DBCA  50E2               	movf	fsr1h,w,c
 39976  01DBCC  6EDA               	movwf	fsr2h,c
 39977  01DBCE  0EFF               	movlw	255
 39978  01DBD0  22DA               	addwfc	fsr2h,f,c
 39979  01DBD2  52DE               	movf	postinc2,f,c
 39980  01DBD4  52DE               	movf	postinc2,f,c
 39981  01DBD6  52DE               	movf	postinc2,f,c
 39982  01DBD8  0EFF               	movlw	255
 39983  01DBDA  14DD               	andwf	postdec2,w,c
 39984  01DBDC  B4D8               	btfsc	status,2,c
 39985  01DBDE  D00C               	goto	l12131
 39986  01DBE0  D7DA               	goto	l12121
 39987  01DBE2                     l12129:
 39988                           
 39989                           ;stkvar	_exp @ sp[(-5)+4]
 39990  01DBE2  0EFF               	movlw	-1
 39991  01DBE4  06E3               	decf	plusw1,f,c
 39992                           
 39993                           ;stkvar	_arg @ sp[(-5)+0]
 39994  01DBE6  90D8               	bcf	status,0,c
 39995  01DBE8  0EFB               	movlw	-5
 39996  01DBEA  36E3               	rlcf	plusw1,f,c
 39997  01DBEC  0EFC               	movlw	-4
 39998  01DBEE  36E3               	rlcf	plusw1,f,c
 39999  01DBF0  0EFD               	movlw	-3
 40000  01DBF2  36E3               	rlcf	plusw1,f,c
 40001  01DBF4  0EFE               	movlw	-2
 40002  01DBF6  36E3               	rlcf	plusw1,f,c
 40003  01DBF8                     l12131:
 40004                           
 40005                           ;stkvar	_arg @ sp[(-5)+0]
 40006  01DBF8  0EFD               	movlw	-3
 40007  01DBFA  BEE3               	btfsc	plusw1,7,c
 40008  01DBFC  D007               	goto	u11450
 40009                           
 40010                           ;stkvar	_exp @ sp[(-5)+4]
 40011  01DBFE  0EFF               	movlw	-1
 40012  01DC00  006F FF8C  F02A    	movff	plusw1,btemp
 40013  01DC06  0E02               	movlw	2
 40014  01DC08  602A               	cpfslt	btemp^0,c
 40015  01DC0A  D7EB               	goto	l12129
 40016  01DC0C                     u11450:
 40017                           
 40018                           ;stkvar	_exp @ sp[(-5)+4]
 40019  01DC0C  0EFF               	movlw	-1
 40020  01DC0E  B0E3               	btfsc	plusw1,0,c
 40021  01DC10  D002               	goto	l12139
 40022                           
 40023                           ;stkvar	_arg @ sp[(-5)+0]
 40024  01DC12  0EFD               	movlw	-3
 40025  01DC14  9EE3               	bcf	plusw1,7,c
 40026  01DC16                     l12139:
 40027                           
 40028                           ;stkvar	_exp @ sp[(-5)+4]
 40029  01DC16  50E1               	movf	fsr1l,w,c
 40030  01DC18  0FFF               	addlw	-1
 40031  01DC1A  6ED9               	movwf	fsr2l,c
 40032  01DC1C  50E2               	movf	fsr1h,w,c
 40033  01DC1E  6EDA               	movwf	fsr2h,c
 40034  01DC20  0EFF               	movlw	255
 40035  01DC22  22DA               	addwfc	fsr2h,f,c
 40036  01DC24  90D8               	bcf	status,0,c
 40037  01DC26  32DF               	rrcf	indf2,f,c
 40038                           
 40039                           ;stkvar	_exp @ sp[(-5)+4]
 40040  01DC28  0EFF               	movlw	-1
 40041  01DC2A  006F FF8C  F035    	movff	plusw1,btemp+11
 40042  01DC30  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 40043  01DC36  6A2F               	clrf	(btemp+5)^0,c
 40044  01DC38  6A30               	clrf	(btemp+6)^0,c
 40045  01DC3A  6A31               	clrf	(btemp+7)^0,c
 40046  01DC3C  0060  F0B8  F031   	movff	btemp+4,btemp+7
 40047  01DC42  6A30               	clrf	(btemp+6)^0,c
 40048  01DC44  6A2F               	clrf	(btemp+5)^0,c
 40049  01DC46  6A2E               	clrf	(btemp+4)^0,c
 40050                           
 40051                           ;stkvar	_arg @ sp[(-5)+0]
 40052  01DC48  50E1               	movf	fsr1l,w,c
 40053  01DC4A  0FFB               	addlw	-5
 40054  01DC4C  6ED9               	movwf	fsr2l,c
 40055  01DC4E  50E2               	movf	fsr1h,w,c
 40056  01DC50  6EDA               	movwf	fsr2h,c
 40057  01DC52  0EFF               	movlw	255
 40058  01DC54  22DA               	addwfc	fsr2h,f,c
 40059  01DC56  502E               	movf	(btemp+4)^0,w,c
 40060  01DC58  12DE               	iorwf	postinc2,f,c
 40061  01DC5A  502F               	movf	(btemp+5)^0,w,c
 40062  01DC5C  12DE               	iorwf	postinc2,f,c
 40063  01DC5E  5030               	movf	(btemp+6)^0,w,c
 40064  01DC60  12DE               	iorwf	postinc2,f,c
 40065  01DC62  5031               	movf	(btemp+7)^0,w,c
 40066  01DC64  12DE               	iorwf	postinc2,f,c
 40067                           
 40068                           ;stkvar	_sign @ sp[(-5)+-1]
 40069  01DC66  0EFA               	movlw	-6
 40070  01DC68  50E3               	movf	plusw1,w,c
 40071  01DC6A  B4D8               	btfsc	status,2,c
 40072  01DC6C  D005               	goto	l12149
 40073                           
 40074                           ;stkvar	_val @ sp[(-5)+-5]
 40075  01DC6E  0EF9               	movlw	-7
 40076  01DC70  AEE3               	btfss	plusw1,7,c
 40077  01DC72  D002               	goto	l12149
 40078                           
 40079                           ;stkvar	_arg @ sp[(-5)+0]
 40080  01DC74  0EFE               	movlw	-2
 40081  01DC76  8EE3               	bsf	plusw1,7,c
 40082  01DC78                     l12149:
 40083                           
 40084                           ;stkvar	_arg @ sp[(-5)+0]
 40085  01DC78  0EFB               	movlw	-5
 40086  01DC7A  006F FF8C  F02A    	movff	plusw1,btemp
 40087  01DC80  0EFC               	movlw	-4
 40088  01DC82  006F FF8C  F02B    	movff	plusw1,btemp+1
 40089  01DC88  0EFD               	movlw	-3
 40090  01DC8A  006F FF8C  F02C    	movff	plusw1,btemp+2
 40091  01DC90  0EFE               	movlw	-2
 40092  01DC92  006F FF8C  F02D    	movff	plusw1,btemp+3
 40093  01DC98                     l3391:
 40094                           
 40095                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 40096  01DC98  0EF6               	movlw	246
 40097  01DC9A  26E1               	addwf	fsr1l,f,c
 40098  01DC9C  0EFF               	movlw	255
 40099  01DC9E  22E2               	addwfc	fsr1h,f,c
 40100  01DCA0  0012               	return		;funcret
 40101  01DCA2                     __end_of___xxtofl:
 40102                           	opt callstack 0
 40103                           
 40104 ;; *************** function ___fldiv *****************
 40105 ;; Defined at:
 40106 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 40107 ;; Parameters:    Size  Location     Type
 40108 ;;  b               4  [STACK] unsigned char 
 40109 ;;  a               4  [STACK] unsigned char 
 40110 ;; Auto vars:     Size  Location     Type
 40111 ;;  grs             4  [STACK] unsigned long 
 40112 ;;  rem             4  [STACK] unsigned long 
 40113 ;;  new_exp         2  [STACK] short 
 40114 ;;  aexp            1  [STACK] unsigned char 
 40115 ;;  bexp            1  [STACK] unsigned char 
 40116 ;;  sign            1  [STACK] unsigned char 
 40117 ;; Return value:  Size  Location     Type
 40118 ;;                  4  [STACK] unsigned char 
 40119 ;; Registers used:
 40120 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 40121 ;; Tracked objects:
 40122 ;;		On entry : 0/0
 40123 ;;		On exit  : 0/0
 40124 ;;		Unchanged: 0/0
 40125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40130 ;;Total ram usage:        0 bytes
 40131 ;; Hardware stack levels used:    1
 40132 ;; Hardware stack levels required when called:   15
 40133 ;; This function calls:
 40134 ;;		Nothing
 40135 ;; This function is called by:
 40136 ;;		_current_sensor_cal
 40137 ;;		_conv_raw_result
 40138 ;;		_convert_dac_raw
 40139 ;;		_load_hist_data
 40140 ;;		_calc_bsoc
 40141 ;;		_init_bsoc
 40142 ;;		_esr_check
 40143 ;;		_efgtoa
 40144 ;; This function uses a reentrant model
 40145 ;;
 40146                           
 40147                           	psect	text148
 40148  018770                     __ptext148:
 40149                           	opt callstack 0
 40150  018770                     ___fldiv:
 40151                           	opt callstack 0
 40152                           
 40153                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 40154  018770  0E0D               	movlw	13
 40155  018772  26E1               	addwf	fsr1l,f,c
 40156  018774  0E00               	movlw	0
 40157  018776  22E2               	addwfc	fsr1h,f,c
 40158                           
 40159                           ;stkvar	_b @ sp[(-13)+-4]
 40160                           
 40161                           ;incstack = 0
 40162 ;; hardware stack exceeded
 40163  018778  0EF2               	movlw	242
 40164  01877A  24E1               	addwf	fsr1l,w,c
 40165  01877C  6ED9               	movwf	fsr2l,c
 40166  01877E  0EFF               	movlw	255
 40167  018780  20E2               	addwfc	fsr1h,w,c
 40168  018782  6EDA               	movwf	fsr2h,c
 40169  018784  50DF               	movf	indf2,w,c
 40170  018786  6E35               	movwf	(btemp+11)^0,c
 40171  018788  0E80               	movlw	128
 40172  01878A  1635               	andwf	(btemp+11)^0,f,c
 40173                           
 40174                           ;stkvar	_sign @ sp[(-13)+12]
 40175  01878C  0EFF               	movlw	-1
 40176  01878E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40177                           
 40178                           ;stkvar	_b @ sp[(-13)+-4]
 40179  018794  0EF2               	movlw	242
 40180  018796  24E1               	addwf	fsr1l,w,c
 40181  018798  6ED9               	movwf	fsr2l,c
 40182  01879A  0EFF               	movlw	255
 40183  01879C  20E2               	addwfc	fsr1h,w,c
 40184  01879E  6EDA               	movwf	fsr2h,c
 40185  0187A0  50DF               	movf	indf2,w,c
 40186  0187A2  6E35               	movwf	(btemp+11)^0,c
 40187  0187A4  90D8               	bcf	status,0,c
 40188  0187A6  3435               	rlcf	(btemp+11)^0,w,c
 40189  0187A8  6E34               	movwf	(btemp+10)^0,c
 40190                           
 40191                           ;stkvar	_bexp @ sp[(-13)+11]
 40192  0187AA  0EFE               	movlw	-2
 40193  0187AC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40194                           
 40195                           ;stkvar	_b @ sp[(-13)+-4]
 40196  0187B2  0EF1               	movlw	241
 40197  0187B4  24E1               	addwf	fsr1l,w,c
 40198  0187B6  6ED9               	movwf	fsr2l,c
 40199  0187B8  0EFF               	movlw	255
 40200  0187BA  20E2               	addwfc	fsr1h,w,c
 40201  0187BC  6EDA               	movwf	fsr2h,c
 40202  0187BE  AEDF               	btfss	indf2,7,c
 40203  0187C0  D002               	goto	l10393
 40204                           
 40205                           ;stkvar	_bexp @ sp[(-13)+11]
 40206  0187C2  0EFE               	movlw	-2
 40207  0187C4  80E3               	bsf	plusw1,0,c
 40208  0187C6                     l10393:
 40209                           
 40210                           ;stkvar	_bexp @ sp[(-13)+11]
 40211  0187C6  0EFE               	movlw	-2
 40212  0187C8  50E3               	movf	plusw1,w,c
 40213  0187CA  B4D8               	btfsc	status,2,c
 40214  0187CC  D027               	goto	l10403
 40215                           
 40216                           ;stkvar	_bexp @ sp[(-13)+11]
 40217  0187CE  0EFE               	movlw	-2
 40218  0187D0  28E3               	incf	plusw1,w,c
 40219  0187D2  A4D8               	btfss	status,2,c
 40220  0187D4  D018               	goto	l10399
 40221  0187D6  0E00               	movlw	0
 40222  0187D8  6E32               	movwf	(btemp+8)^0,c
 40223  0187DA  0E00               	movlw	0
 40224  0187DC  6E33               	movwf	(btemp+9)^0,c
 40225  0187DE  0E00               	movlw	0
 40226  0187E0  6E34               	movwf	(btemp+10)^0,c
 40227  0187E2  0E00               	movlw	0
 40228  0187E4  6E35               	movwf	(btemp+11)^0,c
 40229                           
 40230                           ;stkvar	_b @ sp[(-13)+-4]
 40231  0187E6  0EEF               	movlw	-17
 40232  0187E8  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40233  0187EE  0EF0               	movlw	-16
 40234  0187F0  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40235  0187F6  0EF1               	movlw	-15
 40236  0187F8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40237  0187FE  0EF2               	movlw	-14
 40238  018800  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40239  018806                     l10399:
 40240                           
 40241                           ;stkvar	_b @ sp[(-13)+-4]
 40242  018806  0EF1               	movlw	-15
 40243  018808  8EE3               	bsf	plusw1,7,c
 40244                           
 40245                           ;stkvar	_b @ sp[(-13)+-4]
 40246  01880A  0EF2               	movlw	242
 40247  01880C  24E1               	addwf	fsr1l,w,c
 40248  01880E  6ED9               	movwf	fsr2l,c
 40249  018810  0EFF               	movlw	255
 40250  018812  20E2               	addwfc	fsr1h,w,c
 40251  018814  6EDA               	movwf	fsr2h,c
 40252  018816  0E00               	movlw	0
 40253  018818  6EDF               	movwf	indf2,c
 40254  01881A  D018               	goto	l10405
 40255  01881C                     l10403:
 40256  01881C  0E00               	movlw	0
 40257  01881E  6E32               	movwf	(btemp+8)^0,c
 40258  018820  0E00               	movlw	0
 40259  018822  6E33               	movwf	(btemp+9)^0,c
 40260  018824  0E00               	movlw	0
 40261  018826  6E34               	movwf	(btemp+10)^0,c
 40262  018828  0E00               	movlw	0
 40263  01882A  6E35               	movwf	(btemp+11)^0,c
 40264                           
 40265                           ;stkvar	_b @ sp[(-13)+-4]
 40266  01882C  0EEF               	movlw	-17
 40267  01882E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40268  018834  0EF0               	movlw	-16
 40269  018836  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40270  01883C  0EF1               	movlw	-15
 40271  01883E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40272  018844  0EF2               	movlw	-14
 40273  018846  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40274  01884C                     l10405:
 40275                           
 40276                           ;stkvar	_a @ sp[(-13)+-8]
 40277  01884C  0EEE               	movlw	238
 40278  01884E  24E1               	addwf	fsr1l,w,c
 40279  018850  6ED9               	movwf	fsr2l,c
 40280  018852  0EFF               	movlw	255
 40281  018854  20E2               	addwfc	fsr1h,w,c
 40282  018856  6EDA               	movwf	fsr2h,c
 40283  018858  50DF               	movf	indf2,w,c
 40284  01885A  6E35               	movwf	(btemp+11)^0,c
 40285  01885C  0E80               	movlw	128
 40286  01885E  1635               	andwf	(btemp+11)^0,f,c
 40287                           
 40288                           ;stkvar	_sign @ sp[(-13)+12]
 40289  018860  50E1               	movf	fsr1l,w,c
 40290  018862  0FFF               	addlw	-1
 40291  018864  6ED9               	movwf	fsr2l,c
 40292  018866  50E2               	movf	fsr1h,w,c
 40293  018868  6EDA               	movwf	fsr2h,c
 40294  01886A  0EFF               	movlw	255
 40295  01886C  22DA               	addwfc	fsr2h,f,c
 40296  01886E  5035               	movf	(btemp+11)^0,w,c
 40297  018870  1ADF               	xorwf	indf2,f,c
 40298                           
 40299                           ;stkvar	_a @ sp[(-13)+-8]
 40300  018872  0EEE               	movlw	238
 40301  018874  24E1               	addwf	fsr1l,w,c
 40302  018876  6ED9               	movwf	fsr2l,c
 40303  018878  0EFF               	movlw	255
 40304  01887A  20E2               	addwfc	fsr1h,w,c
 40305  01887C  6EDA               	movwf	fsr2h,c
 40306  01887E  50DF               	movf	indf2,w,c
 40307  018880  6E35               	movwf	(btemp+11)^0,c
 40308  018882  90D8               	bcf	status,0,c
 40309  018884  3435               	rlcf	(btemp+11)^0,w,c
 40310  018886  6E34               	movwf	(btemp+10)^0,c
 40311                           
 40312                           ;stkvar	_aexp @ sp[(-13)+10]
 40313  018888  0EFD               	movlw	-3
 40314  01888A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40315                           
 40316                           ;stkvar	_a @ sp[(-13)+-8]
 40317  018890  0EED               	movlw	237
 40318  018892  24E1               	addwf	fsr1l,w,c
 40319  018894  6ED9               	movwf	fsr2l,c
 40320  018896  0EFF               	movlw	255
 40321  018898  20E2               	addwfc	fsr1h,w,c
 40322  01889A  6EDA               	movwf	fsr2h,c
 40323  01889C  AEDF               	btfss	indf2,7,c
 40324  01889E  D002               	goto	l10413
 40325                           
 40326                           ;stkvar	_aexp @ sp[(-13)+10]
 40327  0188A0  0EFD               	movlw	-3
 40328  0188A2  80E3               	bsf	plusw1,0,c
 40329  0188A4                     l10413:
 40330                           
 40331                           ;stkvar	_aexp @ sp[(-13)+10]
 40332  0188A4  0EFD               	movlw	-3
 40333  0188A6  50E3               	movf	plusw1,w,c
 40334  0188A8  B4D8               	btfsc	status,2,c
 40335  0188AA  D027               	goto	l10423
 40336                           
 40337                           ;stkvar	_aexp @ sp[(-13)+10]
 40338  0188AC  0EFD               	movlw	-3
 40339  0188AE  28E3               	incf	plusw1,w,c
 40340  0188B0  A4D8               	btfss	status,2,c
 40341  0188B2  D018               	goto	l10419
 40342  0188B4  0E00               	movlw	0
 40343  0188B6  6E32               	movwf	(btemp+8)^0,c
 40344  0188B8  0E00               	movlw	0
 40345  0188BA  6E33               	movwf	(btemp+9)^0,c
 40346  0188BC  0E00               	movlw	0
 40347  0188BE  6E34               	movwf	(btemp+10)^0,c
 40348  0188C0  0E00               	movlw	0
 40349  0188C2  6E35               	movwf	(btemp+11)^0,c
 40350                           
 40351                           ;stkvar	_a @ sp[(-13)+-8]
 40352  0188C4  0EEB               	movlw	-21
 40353  0188C6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40354  0188CC  0EEC               	movlw	-20
 40355  0188CE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40356  0188D4  0EED               	movlw	-19
 40357  0188D6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40358  0188DC  0EEE               	movlw	-18
 40359  0188DE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40360  0188E4                     l10419:
 40361                           
 40362                           ;stkvar	_a @ sp[(-13)+-8]
 40363  0188E4  0EED               	movlw	-19
 40364  0188E6  8EE3               	bsf	plusw1,7,c
 40365                           
 40366                           ;stkvar	_a @ sp[(-13)+-8]
 40367  0188E8  0EEE               	movlw	238
 40368  0188EA  24E1               	addwf	fsr1l,w,c
 40369  0188EC  6ED9               	movwf	fsr2l,c
 40370  0188EE  0EFF               	movlw	255
 40371  0188F0  20E2               	addwfc	fsr1h,w,c
 40372  0188F2  6EDA               	movwf	fsr2h,c
 40373  0188F4  0E00               	movlw	0
 40374  0188F6  6EDF               	movwf	indf2,c
 40375  0188F8  D018               	goto	l10425
 40376  0188FA                     l10423:
 40377  0188FA  0E00               	movlw	0
 40378  0188FC  6E32               	movwf	(btemp+8)^0,c
 40379  0188FE  0E00               	movlw	0
 40380  018900  6E33               	movwf	(btemp+9)^0,c
 40381  018902  0E00               	movlw	0
 40382  018904  6E34               	movwf	(btemp+10)^0,c
 40383  018906  0E00               	movlw	0
 40384  018908  6E35               	movwf	(btemp+11)^0,c
 40385                           
 40386                           ;stkvar	_a @ sp[(-13)+-8]
 40387  01890A  0EEB               	movlw	-21
 40388  01890C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40389  018912  0EEC               	movlw	-20
 40390  018914  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40391  01891A  0EED               	movlw	-19
 40392  01891C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40393  018922  0EEE               	movlw	-18
 40394  018924  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40395  01892A                     l10425:
 40396                           
 40397                           ;stkvar	_a @ sp[(-13)+-8]
 40398  01892A  0EEB               	movlw	-21
 40399  01892C  50E3               	movf	plusw1,w,c
 40400  01892E  E139               	bnz	l10437
 40401  018930  0EEC               	movlw	-20
 40402  018932  50E3               	movf	plusw1,w,c
 40403  018934  E136               	bnz	l10437
 40404  018936  0EED               	movlw	-19
 40405  018938  50E3               	movf	plusw1,w,c
 40406  01893A  E133               	bnz	l10437
 40407  01893C  0EEE               	movlw	-18
 40408  01893E  50E3               	movf	plusw1,w,c
 40409  018940  A4D8               	btfss	status,2,c
 40410  018942  D02F               	goto	l10437
 40411                           
 40412                           ;stkvar	_b @ sp[(-13)+-4]
 40413  018944  0EEF               	movlw	-17
 40414  018946  6AE3               	clrf	plusw1,c
 40415  018948  0EF0               	movlw	-16
 40416  01894A  6AE3               	clrf	plusw1,c
 40417  01894C  0EF1               	movlw	-15
 40418  01894E  6AE3               	clrf	plusw1,c
 40419  018950  0EF2               	movlw	-14
 40420  018952  6AE3               	clrf	plusw1,c
 40421                           
 40422                           ;stkvar	_b @ sp[(-13)+-4]
 40423  018954  0EF1               	movlw	241
 40424  018956  24E1               	addwf	fsr1l,w,c
 40425  018958  6ED9               	movwf	fsr2l,c
 40426  01895A  0EFF               	movlw	255
 40427  01895C  20E2               	addwfc	fsr1h,w,c
 40428  01895E  6EDA               	movwf	fsr2h,c
 40429  018960  0E80               	movlw	128
 40430  018962  12DE               	iorwf	postinc2,f,c
 40431  018964  0E7F               	movlw	127
 40432  018966  12DD               	iorwf	postdec2,f,c
 40433  018968                     l10431:
 40434                           
 40435                           ;stkvar	_sign @ sp[(-13)+12]
 40436  018968  0EFF               	movlw	-1
 40437  01896A  006F FF8C  F035    	movff	plusw1,btemp+11
 40438                           
 40439                           ;stkvar	_b @ sp[(-13)+-4]
 40440  018970  0EF2               	movlw	242
 40441  018972  24E1               	addwf	fsr1l,w,c
 40442  018974  6ED9               	movwf	fsr2l,c
 40443  018976  0EFF               	movlw	255
 40444  018978  20E2               	addwfc	fsr1h,w,c
 40445  01897A  6EDA               	movwf	fsr2h,c
 40446  01897C  5035               	movf	(btemp+11)^0,w,c
 40447  01897E  12DF               	iorwf	indf2,f,c
 40448                           
 40449                           ;stkvar	_b @ sp[(-13)+-4]
 40450  018980  0EEF               	movlw	-17
 40451  018982  006F FF8C  F02A    	movff	plusw1,btemp
 40452  018988  0EF0               	movlw	-16
 40453  01898A  006F FF8C  F02B    	movff	plusw1,btemp+1
 40454  018990  0EF1               	movlw	-15
 40455  018992  006F FF8C  F02C    	movff	plusw1,btemp+2
 40456  018998  0EF2               	movlw	-14
 40457  01899A  006F FF8C  F02D    	movff	plusw1,btemp+3
 40458  0189A0  D19F               	goto	l3315
 40459  0189A2                     l10437:
 40460                           
 40461                           ;stkvar	_bexp @ sp[(-13)+11]
 40462  0189A2  0EFE               	movlw	-2
 40463  0189A4  50E3               	movf	plusw1,w,c
 40464  0189A6  A4D8               	btfss	status,2,c
 40465  0189A8  D009               	goto	l10445
 40466  0189AA  0E00               	movlw	0
 40467  0189AC  6E2A               	movwf	btemp^0,c
 40468  0189AE  0E00               	movlw	0
 40469  0189B0  6E2B               	movwf	(btemp+1)^0,c
 40470  0189B2  0E00               	movlw	0
 40471  0189B4  6E2C               	movwf	(btemp+2)^0,c
 40472  0189B6  0E00               	movlw	0
 40473  0189B8  6E2D               	movwf	(btemp+3)^0,c
 40474  0189BA  D192               	goto	l3315
 40475  0189BC                     l10445:
 40476                           
 40477                           ;stkvar	_bexp @ sp[(-13)+11]
 40478  0189BC  0EFE               	movlw	-2
 40479  0189BE  50E3               	movf	plusw1,w,c
 40480  0189C0  6E34               	movwf	(btemp+10)^0,c
 40481  0189C2  6A35               	clrf	(btemp+11)^0,c
 40482                           
 40483                           ;stkvar	_aexp @ sp[(-13)+10]
 40484  0189C4  0EFD               	movlw	-3
 40485  0189C6  50E3               	movf	plusw1,w,c
 40486  0189C8  5E34               	subwf	(btemp+10)^0,f,c
 40487  0189CA  0E00               	movlw	0
 40488  0189CC  5A35               	subwfb	(btemp+11)^0,f,c
 40489  0189CE  0E7F               	movlw	127
 40490  0189D0  2634               	addwf	(btemp+10)^0,f,c
 40491  0189D2  0E00               	movlw	0
 40492  0189D4  2235               	addwfc	(btemp+11)^0,f,c
 40493                           
 40494                           ;stkvar	_new_exp @ sp[(-13)+8]
 40495  0189D6  0EFB               	movlw	-5
 40496  0189D8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40497  0189DE  0EFC               	movlw	-4
 40498  0189E0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40499                           
 40500                           ;stkvar	_b @ sp[(-13)+-4]
 40501  0189E6  0EEF               	movlw	-17
 40502  0189E8  006F FF8C  F032    	movff	plusw1,btemp+8
 40503  0189EE  0EF0               	movlw	-16
 40504  0189F0  006F FF8C  F033    	movff	plusw1,btemp+9
 40505  0189F6  0EF1               	movlw	-15
 40506  0189F8  006F FF8C  F034    	movff	plusw1,btemp+10
 40507  0189FE  0EF2               	movlw	-14
 40508  018A00  006F FF8C  F035    	movff	plusw1,btemp+11
 40509                           
 40510                           ;stkvar	_rem @ sp[(-13)+4]
 40511  018A06  0EF7               	movlw	-9
 40512  018A08  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40513  018A0E  0EF8               	movlw	-8
 40514  018A10  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40515  018A16  0EF9               	movlw	-7
 40516  018A18  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40517  018A1E  0EFA               	movlw	-6
 40518  018A20  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40519                           
 40520                           ;stkvar	_b @ sp[(-13)+-4]
 40521  018A26  0EEF               	movlw	-17
 40522  018A28  6AE3               	clrf	plusw1,c
 40523  018A2A  0EF0               	movlw	-16
 40524  018A2C  6AE3               	clrf	plusw1,c
 40525  018A2E  0EF1               	movlw	-15
 40526  018A30  6AE3               	clrf	plusw1,c
 40527  018A32  0EF2               	movlw	-14
 40528  018A34  6AE3               	clrf	plusw1,c
 40529                           
 40530                           ;stkvar	_grs @ sp[(-13)+0]
 40531  018A36  0EF3               	movlw	-13
 40532  018A38  6AE3               	clrf	plusw1,c
 40533  018A3A  0EF4               	movlw	-12
 40534  018A3C  6AE3               	clrf	plusw1,c
 40535  018A3E  0EF5               	movlw	-11
 40536  018A40  6AE3               	clrf	plusw1,c
 40537  018A42  0EF6               	movlw	-10
 40538  018A44  6AE3               	clrf	plusw1,c
 40539                           
 40540                           ;stkvar	_aexp @ sp[(-13)+10]
 40541  018A46  0EFD               	movlw	-3
 40542  018A48  6AE3               	clrf	plusw1,c
 40543  018A4A  D050               	goto	l10473
 40544  018A4C                     l10455:
 40545                           
 40546                           ;stkvar	_aexp @ sp[(-13)+10]
 40547  018A4C  0EFD               	movlw	-3
 40548  018A4E  50E3               	movf	plusw1,w,c
 40549  018A50  B4D8               	btfsc	status,2,c
 40550  018A52  D020               	goto	l10465
 40551                           
 40552                           ;stkvar	_rem @ sp[(-13)+4]
 40553  018A54  90D8               	bcf	status,0,c
 40554  018A56  0EF7               	movlw	-9
 40555  018A58  36E3               	rlcf	plusw1,f,c
 40556  018A5A  0EF8               	movlw	-8
 40557  018A5C  36E3               	rlcf	plusw1,f,c
 40558  018A5E  0EF9               	movlw	-7
 40559  018A60  36E3               	rlcf	plusw1,f,c
 40560  018A62  0EFA               	movlw	-6
 40561  018A64  36E3               	rlcf	plusw1,f,c
 40562                           
 40563                           ;stkvar	_b @ sp[(-13)+-4]
 40564  018A66  90D8               	bcf	status,0,c
 40565  018A68  0EEF               	movlw	-17
 40566  018A6A  36E3               	rlcf	plusw1,f,c
 40567  018A6C  0EF0               	movlw	-16
 40568  018A6E  36E3               	rlcf	plusw1,f,c
 40569  018A70  0EF1               	movlw	-15
 40570  018A72  36E3               	rlcf	plusw1,f,c
 40571  018A74  0EF2               	movlw	-14
 40572  018A76  36E3               	rlcf	plusw1,f,c
 40573                           
 40574                           ;stkvar	_grs @ sp[(-13)+0]
 40575  018A78  0EF6               	movlw	-10
 40576  018A7A  AEE3               	btfss	plusw1,7,c
 40577  018A7C  D002               	goto	l10463
 40578                           
 40579                           ;stkvar	_b @ sp[(-13)+-4]
 40580  018A7E  0EEF               	movlw	-17
 40581  018A80  80E3               	bsf	plusw1,0,c
 40582  018A82                     l10463:
 40583                           
 40584                           ;stkvar	_grs @ sp[(-13)+0]
 40585  018A82  90D8               	bcf	status,0,c
 40586  018A84  0EF3               	movlw	-13
 40587  018A86  36E3               	rlcf	plusw1,f,c
 40588  018A88  0EF4               	movlw	-12
 40589  018A8A  36E3               	rlcf	plusw1,f,c
 40590  018A8C  0EF5               	movlw	-11
 40591  018A8E  36E3               	rlcf	plusw1,f,c
 40592  018A90  0EF6               	movlw	-10
 40593  018A92  36E3               	rlcf	plusw1,f,c
 40594  018A94                     l10465:
 40595                           
 40596                           ;stkvar	_a @ sp[(-13)+-8]
 40597                           ;stkvar	_rem @ sp[(-13)+4]
 40598  018A94  50E1               	movf	fsr1l,w,c
 40599  018A96  0FF7               	addlw	-9
 40600  018A98  6ED9               	movwf	fsr2l,c
 40601  018A9A  50E2               	movf	fsr1h,w,c
 40602  018A9C  6EDA               	movwf	fsr2h,c
 40603  018A9E  0EFF               	movlw	255
 40604  018AA0  22DA               	addwfc	fsr2h,f,c
 40605  018AA2  0EEB               	movlw	-21
 40606  018AA4  50E3               	movf	plusw1,w,c
 40607  018AA6  5CDE               	subwf	postinc2,w,c
 40608  018AA8  0EEC               	movlw	-20
 40609  018AAA  50E3               	movf	plusw1,w,c
 40610  018AAC  58DE               	subwfb	postinc2,w,c
 40611  018AAE  0EED               	movlw	-19
 40612  018AB0  50E3               	movf	plusw1,w,c
 40613  018AB2  58DE               	subwfb	postinc2,w,c
 40614  018AB4  0EEE               	movlw	-18
 40615  018AB6  50E3               	movf	plusw1,w,c
 40616  018AB8  58DE               	subwfb	postinc2,w,c
 40617  018ABA  A0D8               	btfss	status,0,c
 40618  018ABC  D015               	goto	l10471
 40619                           
 40620                           ;stkvar	_grs @ sp[(-13)+0]
 40621  018ABE  0EF6               	movlw	-10
 40622  018AC0  8CE3               	bsf	plusw1,6,c
 40623                           
 40624                           ;stkvar	_a @ sp[(-13)+-8]
 40625                           ;stkvar	_rem @ sp[(-13)+4]
 40626  018AC2  50E1               	movf	fsr1l,w,c
 40627  018AC4  0FF7               	addlw	-9
 40628  018AC6  6ED9               	movwf	fsr2l,c
 40629  018AC8  50E2               	movf	fsr1h,w,c
 40630  018ACA  6EDA               	movwf	fsr2h,c
 40631  018ACC  0EFF               	movlw	255
 40632  018ACE  22DA               	addwfc	fsr2h,f,c
 40633  018AD0  0EEB               	movlw	-21
 40634  018AD2  50E3               	movf	plusw1,w,c
 40635  018AD4  5EDE               	subwf	postinc2,f,c
 40636  018AD6  0EEC               	movlw	-20
 40637  018AD8  50E3               	movf	plusw1,w,c
 40638  018ADA  5ADE               	subwfb	postinc2,f,c
 40639  018ADC  0EED               	movlw	-19
 40640  018ADE  50E3               	movf	plusw1,w,c
 40641  018AE0  5ADE               	subwfb	postinc2,f,c
 40642  018AE2  0EEE               	movlw	-18
 40643  018AE4  50E3               	movf	plusw1,w,c
 40644  018AE6  5ADE               	subwfb	postinc2,f,c
 40645  018AE8                     l10471:
 40646                           
 40647                           ;stkvar	_aexp @ sp[(-13)+10]
 40648  018AE8  0EFD               	movlw	-3
 40649  018AEA  2AE3               	incf	plusw1,f,c
 40650  018AEC                     l10473:
 40651                           
 40652                           ;stkvar	_aexp @ sp[(-13)+10]
 40653  018AEC  0EFD               	movlw	-3
 40654  018AEE  006F FF8C  F02A    	movff	plusw1,btemp
 40655  018AF4  0E19               	movlw	25
 40656  018AF6  642A               	cpfsgt	btemp^0,c
 40657  018AF8  D7A9               	goto	l10455
 40658                           
 40659                           ;stkvar	_rem @ sp[(-13)+4]
 40660  018AFA  0EF7               	movlw	-9
 40661  018AFC  50E3               	movf	plusw1,w,c
 40662  018AFE  E10A               	bnz	u8540
 40663  018B00  0EF8               	movlw	-8
 40664  018B02  50E3               	movf	plusw1,w,c
 40665  018B04  E107               	bnz	u8540
 40666  018B06  0EF9               	movlw	-7
 40667  018B08  50E3               	movf	plusw1,w,c
 40668  018B0A  E104               	bnz	u8540
 40669  018B0C  0EFA               	movlw	-6
 40670  018B0E  50E3               	movf	plusw1,w,c
 40671  018B10  B4D8               	btfsc	status,2,c
 40672  018B12  D024               	goto	l10489
 40673  018B14                     u8540:
 40674                           
 40675                           ;stkvar	_grs @ sp[(-13)+0]
 40676  018B14  0EF3               	movlw	-13
 40677  018B16  80E3               	bsf	plusw1,0,c
 40678  018B18  D021               	goto	l10489
 40679  018B1A                     l10479:
 40680                           
 40681                           ;stkvar	_b @ sp[(-13)+-4]
 40682  018B1A  90D8               	bcf	status,0,c
 40683  018B1C  0EEF               	movlw	-17
 40684  018B1E  36E3               	rlcf	plusw1,f,c
 40685  018B20  0EF0               	movlw	-16
 40686  018B22  36E3               	rlcf	plusw1,f,c
 40687  018B24  0EF1               	movlw	-15
 40688  018B26  36E3               	rlcf	plusw1,f,c
 40689  018B28  0EF2               	movlw	-14
 40690  018B2A  36E3               	rlcf	plusw1,f,c
 40691                           
 40692                           ;stkvar	_grs @ sp[(-13)+0]
 40693  018B2C  0EF6               	movlw	-10
 40694  018B2E  AEE3               	btfss	plusw1,7,c
 40695  018B30  D002               	goto	l10485
 40696                           
 40697                           ;stkvar	_b @ sp[(-13)+-4]
 40698  018B32  0EEF               	movlw	-17
 40699  018B34  80E3               	bsf	plusw1,0,c
 40700  018B36                     l10485:
 40701                           
 40702                           ;stkvar	_grs @ sp[(-13)+0]
 40703  018B36  90D8               	bcf	status,0,c
 40704  018B38  0EF3               	movlw	-13
 40705  018B3A  36E3               	rlcf	plusw1,f,c
 40706  018B3C  0EF4               	movlw	-12
 40707  018B3E  36E3               	rlcf	plusw1,f,c
 40708  018B40  0EF5               	movlw	-11
 40709  018B42  36E3               	rlcf	plusw1,f,c
 40710  018B44  0EF6               	movlw	-10
 40711  018B46  36E3               	rlcf	plusw1,f,c
 40712                           
 40713                           ;stkvar	_new_exp @ sp[(-13)+8]
 40714  018B48  50E1               	movf	fsr1l,w,c
 40715  018B4A  0FFB               	addlw	-5
 40716  018B4C  6ED9               	movwf	fsr2l,c
 40717  018B4E  50E2               	movf	fsr1h,w,c
 40718  018B50  6EDA               	movwf	fsr2h,c
 40719  018B52  0EFF               	movlw	255
 40720  018B54  22DA               	addwfc	fsr2h,f,c
 40721  018B56  06DE               	decf	postinc2,f,c
 40722  018B58  0E00               	movlw	0
 40723  018B5A  5ADD               	subwfb	postdec2,f,c
 40724  018B5C                     l10489:
 40725                           
 40726                           ;stkvar	_b @ sp[(-13)+-4]
 40727  018B5C  0EF1               	movlw	-15
 40728  018B5E  AEE3               	btfss	plusw1,7,c
 40729  018B60  D7DC               	goto	l10479
 40730                           
 40731                           ;stkvar	_aexp @ sp[(-13)+10]
 40732  018B62  0EFD               	movlw	-3
 40733  018B64  6AE3               	clrf	plusw1,c
 40734                           
 40735                           ;stkvar	_grs @ sp[(-13)+0]
 40736  018B66  0EF6               	movlw	-10
 40737  018B68  AEE3               	btfss	plusw1,7,c
 40738  018B6A  D020               	goto	l10503
 40739                           
 40740                           ;stkvar	_grs @ sp[(-13)+0]
 40741  018B6C  50E1               	movf	fsr1l,w,c
 40742  018B6E  0FF3               	addlw	-13
 40743  018B70  6ED9               	movwf	fsr2l,c
 40744  018B72  50E2               	movf	fsr1h,w,c
 40745  018B74  6EDA               	movwf	fsr2h,c
 40746  018B76  0EFF               	movlw	255
 40747  018B78  22DA               	addwfc	fsr2h,f,c
 40748  018B7A  0EFF               	movlw	255
 40749  018B7C  14DE               	andwf	postinc2,w,c
 40750  018B7E  6E32               	movwf	(btemp+8)^0,c
 40751  018B80  0EFF               	movlw	255
 40752  018B82  14DE               	andwf	postinc2,w,c
 40753  018B84  6E33               	movwf	(btemp+9)^0,c
 40754  018B86  0EFF               	movlw	255
 40755  018B88  14DE               	andwf	postinc2,w,c
 40756  018B8A  6E34               	movwf	(btemp+10)^0,c
 40757  018B8C  0E7F               	movlw	127
 40758  018B8E  14DE               	andwf	postinc2,w,c
 40759  018B90  6E35               	movwf	(btemp+11)^0,c
 40760  018B92  5032               	movf	(btemp+8)^0,w,c
 40761  018B94  1033               	iorwf	(btemp+9)^0,w,c
 40762  018B96  1034               	iorwf	(btemp+10)^0,w,c
 40763  018B98  1035               	iorwf	(btemp+11)^0,w,c
 40764  018B9A  B4D8               	btfsc	status,2,c
 40765  018B9C  D004               	goto	l10499
 40766  018B9E                     u8580:
 40767                           
 40768                           ;stkvar	_aexp @ sp[(-13)+10]
 40769  018B9E  0EFD               	movlw	-3
 40770  018BA0  6AE3               	clrf	plusw1,c
 40771  018BA2  2AE3               	incf	plusw1,f,c
 40772  018BA4  D003               	goto	l10503
 40773  018BA6                     l10499:
 40774                           
 40775                           ;stkvar	_b @ sp[(-13)+-4]
 40776  018BA6  0EEF               	movlw	-17
 40777  018BA8  B0E3               	btfsc	plusw1,0,c
 40778  018BAA  D7F9               	goto	u8580
 40779  018BAC                     l10503:
 40780                           
 40781                           ;stkvar	_aexp @ sp[(-13)+10]
 40782  018BAC  0EFD               	movlw	-3
 40783  018BAE  50E3               	movf	plusw1,w,c
 40784  018BB0  B4D8               	btfsc	status,2,c
 40785  018BB2  D036               	goto	l10513
 40786                           
 40787                           ;stkvar	_b @ sp[(-13)+-4]
 40788  018BB4  50E1               	movf	fsr1l,w,c
 40789  018BB6  0FEF               	addlw	-17
 40790  018BB8  6ED9               	movwf	fsr2l,c
 40791  018BBA  50E2               	movf	fsr1h,w,c
 40792  018BBC  6EDA               	movwf	fsr2h,c
 40793  018BBE  0EFF               	movlw	255
 40794  018BC0  22DA               	addwfc	fsr2h,f,c
 40795  018BC2  2ADE               	incf	postinc2,f,c
 40796  018BC4  0E00               	movlw	0
 40797  018BC6  22DE               	addwfc	postinc2,f,c
 40798  018BC8  22DE               	addwfc	postinc2,f,c
 40799  018BCA  22DE               	addwfc	postinc2,f,c
 40800                           
 40801                           ;stkvar	_b @ sp[(-13)+-4]
 40802  018BCC  0EF2               	movlw	-14
 40803  018BCE  A0E3               	btfss	plusw1,0,c
 40804  018BD0  D027               	goto	l10513
 40805  018BD2  0E01               	movlw	1
 40806  018BD4  6E35               	movwf	(btemp+11)^0,c
 40807                           
 40808                           ;stkvar	_b @ sp[(-13)+-4]
 40809  018BD6  50E1               	movf	fsr1l,w,c
 40810  018BD8  0FEF               	addlw	-17
 40811  018BDA  6ED9               	movwf	fsr2l,c
 40812  018BDC  50E2               	movf	fsr1h,w,c
 40813  018BDE  6EDA               	movwf	fsr2h,c
 40814  018BE0  0EFF               	movlw	255
 40815  018BE2  22DA               	addwfc	fsr2h,f,c
 40816  018BE4  2835               	incf	(btemp+11)^0,w,c
 40817  018BE6  52DE               	movf	postinc2,f,c
 40818  018BE8  D008               	goto	u8620
 40819  018BEA                     u8625:
 40820  018BEA  52DE               	movf	postinc2,f,c
 40821  018BEC  90D8               	bcf	status,0,c
 40822  018BEE  BEDC               	btfsc	preinc2,7,c
 40823  018BF0  80D8               	bsf	status,0,c
 40824  018BF2  32DD               	rrcf	postdec2,f,c
 40825  018BF4  32DD               	rrcf	postdec2,f,c
 40826  018BF6  32DD               	rrcf	postdec2,f,c
 40827  018BF8  32DE               	rrcf	postinc2,f,c
 40828  018BFA                     u8620:
 40829  018BFA  2EE8               	decfsz	wreg,f,c
 40830  018BFC  D7F6               	goto	u8625
 40831                           
 40832                           ;stkvar	_new_exp @ sp[(-13)+8]
 40833  018BFE  0EFB               	movlw	-5
 40834  018C00  50E3               	movf	plusw1,w,c
 40835  018C02  0F01               	addlw	1
 40836  018C04  6E2A               	movwf	btemp^0,c
 40837  018C06  0EFB               	movlw	-5
 40838  018C08  0060  F0AB  FFE3   	movff	btemp,plusw1
 40839  018C0E  6A2A               	clrf	btemp^0,c
 40840  018C10  0EFC               	movlw	-4
 40841  018C12  50E3               	movf	plusw1,w,c
 40842  018C14  202A               	addwfc	btemp^0,w,c
 40843  018C16  6E2A               	movwf	btemp^0,c
 40844  018C18  0EFC               	movlw	-4
 40845  018C1A  0060  F0AB  FFE3   	movff	btemp,plusw1
 40846  018C20                     l10513:
 40847                           
 40848                           ;stkvar	_new_exp @ sp[(-13)+8]
 40849  018C20  0EFC               	movlw	-4
 40850  018C22  BEE3               	btfsc	plusw1,7,c
 40851  018C24  D01B               	goto	l10519
 40852  018C26  0EFC               	movlw	-4
 40853  018C28  50E3               	movf	plusw1,w,c
 40854  018C2A  E104               	bnz	u8630
 40855  018C2C  0EFB               	movlw	-5
 40856  018C2E  28E3               	incf	plusw1,w,c
 40857  018C30  A0D8               	btfss	status,0,c
 40858  018C32  D014               	goto	l10519
 40859  018C34                     u8630:
 40860  018C34  0EFF               	movlw	255
 40861  018C36  6E34               	movwf	(btemp+10)^0,c
 40862  018C38  0E00               	movlw	0
 40863  018C3A  6E35               	movwf	(btemp+11)^0,c
 40864                           
 40865                           ;stkvar	_new_exp @ sp[(-13)+8]
 40866  018C3C  0EFB               	movlw	-5
 40867  018C3E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40868  018C44  0EFC               	movlw	-4
 40869  018C46  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40870                           
 40871                           ;stkvar	_b @ sp[(-13)+-4]
 40872  018C4C  0EEF               	movlw	-17
 40873  018C4E  6AE3               	clrf	plusw1,c
 40874  018C50  0EF0               	movlw	-16
 40875  018C52  6AE3               	clrf	plusw1,c
 40876  018C54  0EF1               	movlw	-15
 40877  018C56  6AE3               	clrf	plusw1,c
 40878  018C58  0EF2               	movlw	-14
 40879  018C5A  6AE3               	clrf	plusw1,c
 40880  018C5C                     l10519:
 40881                           
 40882                           ;stkvar	_new_exp @ sp[(-13)+8]
 40883  018C5C  0EFC               	movlw	-4
 40884  018C5E  BEE3               	btfsc	plusw1,7,c
 40885  018C60  D007               	goto	u8640
 40886  018C62  0EFC               	movlw	-4
 40887  018C64  50E3               	movf	plusw1,w,c
 40888  018C66  E112               	bnz	l10525
 40889  018C68  0EFB               	movlw	-5
 40890  018C6A  04E3               	decf	plusw1,w,c
 40891  018C6C  B0D8               	btfsc	status,0,c
 40892  018C6E  D00E               	goto	l10525
 40893  018C70                     u8640:
 40894                           
 40895                           ;stkvar	_new_exp @ sp[(-13)+8]
 40896  018C70  0EFB               	movlw	-5
 40897  018C72  6AE3               	clrf	plusw1,c
 40898  018C74  0EFC               	movlw	-4
 40899  018C76  6AE3               	clrf	plusw1,c
 40900                           
 40901                           ;stkvar	_b @ sp[(-13)+-4]
 40902  018C78  0EEF               	movlw	-17
 40903  018C7A  6AE3               	clrf	plusw1,c
 40904  018C7C  0EF0               	movlw	-16
 40905  018C7E  6AE3               	clrf	plusw1,c
 40906  018C80  0EF1               	movlw	-15
 40907  018C82  6AE3               	clrf	plusw1,c
 40908  018C84  0EF2               	movlw	-14
 40909  018C86  6AE3               	clrf	plusw1,c
 40910                           
 40911                           ;stkvar	_sign @ sp[(-13)+12]
 40912  018C88  0EFF               	movlw	-1
 40913  018C8A  6AE3               	clrf	plusw1,c
 40914  018C8C                     l10525:
 40915                           
 40916                           ;stkvar	_new_exp @ sp[(-13)+8]
 40917                           ;stkvar	_bexp @ sp[(-13)+11]
 40918  018C8C  0EFB               	movlw	-5
 40919  018C8E  006F FF8C  F02A    	movff	plusw1,btemp
 40920  018C94  0EFE               	movlw	-2
 40921  018C96  0060  F0AB  FFE3   	movff	btemp,plusw1
 40922                           
 40923                           ;stkvar	_bexp @ sp[(-13)+11]
 40924  018C9C  0EFE               	movlw	-2
 40925  018C9E  A0E3               	btfss	plusw1,0,c
 40926  018CA0  D009               	goto	l10531
 40927                           
 40928                           ;stkvar	_b @ sp[(-13)+-4]
 40929  018CA2  0EF1               	movlw	241
 40930  018CA4  24E1               	addwf	fsr1l,w,c
 40931  018CA6  6ED9               	movwf	fsr2l,c
 40932  018CA8  0EFF               	movlw	255
 40933  018CAA  20E2               	addwfc	fsr1h,w,c
 40934  018CAC  6EDA               	movwf	fsr2h,c
 40935  018CAE  0E00               	movlw	0
 40936  018CB0  8EDB               	bsf	plusw2,7,c
 40937  018CB2  D008               	goto	l10533
 40938  018CB4                     l10531:
 40939                           
 40940                           ;stkvar	_b @ sp[(-13)+-4]
 40941  018CB4  0EF1               	movlw	241
 40942  018CB6  24E1               	addwf	fsr1l,w,c
 40943  018CB8  6ED9               	movwf	fsr2l,c
 40944  018CBA  0EFF               	movlw	255
 40945  018CBC  20E2               	addwfc	fsr1h,w,c
 40946  018CBE  6EDA               	movwf	fsr2h,c
 40947  018CC0  0E7F               	movlw	127
 40948  018CC2  16DF               	andwf	indf2,f,c
 40949  018CC4                     l10533:
 40950                           
 40951                           ;stkvar	_b @ sp[(-13)+-4]
 40952  018CC4  0EF2               	movlw	242
 40953  018CC6  24E1               	addwf	fsr1l,w,c
 40954  018CC8  6ED9               	movwf	fsr2l,c
 40955  018CCA  0EFF               	movlw	255
 40956  018CCC  20E2               	addwfc	fsr1h,w,c
 40957  018CCE  6EDA               	movwf	fsr2h,c
 40958                           
 40959                           ;stkvar	_bexp @ sp[(-13)+11]
 40960  018CD0  0EFE               	movlw	-2
 40961  018CD2  006F FF8C  F035    	movff	plusw1,btemp+11
 40962  018CD8  90D8               	bcf	status,0,c
 40963  018CDA  3035               	rrcf	(btemp+11)^0,w,c
 40964  018CDC  6EDF               	movwf	indf2,c
 40965  018CDE  D644               	goto	l10431
 40966  018CE0                     l3315:
 40967                           
 40968                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 40969  018CE0  0EEB               	movlw	235
 40970  018CE2  26E1               	addwf	fsr1l,f,c
 40971  018CE4  0EFF               	movlw	255
 40972  018CE6  22E2               	addwfc	fsr1h,f,c
 40973  018CE8  0012               	return		;funcret
 40974  018CEA                     __end_of___fldiv:
 40975                           	opt callstack 0
 40976                           
 40977 ;; *************** function ___flge *****************
 40978 ;; Defined at:
 40979 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 40980 ;; Parameters:    Size  Location     Type
 40981 ;;  ff1             4  [STACK] unsigned char 
 40982 ;;  ff2             4  [STACK] unsigned char 
 40983 ;; Auto vars:     Size  Location     Type
 40984 ;;		None
 40985 ;; Return value:  Size  Location     Type
 40986 ;;		None               void
 40987 ;; Registers used:
 40988 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 40989 ;; Tracked objects:
 40990 ;;		On entry : 0/1
 40991 ;;		On exit  : 0/0
 40992 ;;		Unchanged: 0/0
 40993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40998 ;;Total ram usage:        0 bytes
 40999 ;; Hardware stack levels used:    1
 41000 ;; Hardware stack levels required when called:   15
 41001 ;; This function calls:
 41002 ;;		Nothing
 41003 ;; This function is called by:
 41004 ;;		_main
 41005 ;;		_convert_dac_raw
 41006 ;;		_calc_ror_data
 41007 ;;		_check_day_time
 41008 ;;		_calc_bsoc
 41009 ;;		_efgtoa
 41010 ;; This function uses a reentrant model
 41011 ;;
 41012                           
 41013                           	psect	text149
 41014  01EDD2                     __ptext149:
 41015                           	opt callstack 0
 41016  01EDD2                     ___flge:
 41017                           	opt callstack 0
 41018                           
 41019                           ;stkvar	_ff1 @ sp[(0)+-4]
 41020                           
 41021                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 41022                           ;incstack = 0
 41023 ;; hardware stack exceeded
 41024  01EDD2  50E1               	movf	fsr1l,w,c
 41025  01EDD4  0FFC               	addlw	-4
 41026  01EDD6  6ED9               	movwf	fsr2l,c
 41027  01EDD8  50E2               	movf	fsr1h,w,c
 41028  01EDDA  6EDA               	movwf	fsr2h,c
 41029  01EDDC  0EFF               	movlw	255
 41030  01EDDE  22DA               	addwfc	fsr2h,f,c
 41031  01EDE0  0E00               	movlw	0
 41032  01EDE2  14DE               	andwf	postinc2,w,c
 41033  01EDE4  6E32               	movwf	(btemp+8)^0,c
 41034  01EDE6  0E00               	movlw	0
 41035  01EDE8  14DE               	andwf	postinc2,w,c
 41036  01EDEA  6E33               	movwf	(btemp+9)^0,c
 41037  01EDEC  0E80               	movlw	128
 41038  01EDEE  14DE               	andwf	postinc2,w,c
 41039  01EDF0  6E34               	movwf	(btemp+10)^0,c
 41040  01EDF2  0E7F               	movlw	127
 41041  01EDF4  14DE               	andwf	postinc2,w,c
 41042  01EDF6  6E35               	movwf	(btemp+11)^0,c
 41043  01EDF8  5032               	movf	(btemp+8)^0,w,c
 41044  01EDFA  1033               	iorwf	(btemp+9)^0,w,c
 41045  01EDFC  1034               	iorwf	(btemp+10)^0,w,c
 41046  01EDFE  1035               	iorwf	(btemp+11)^0,w,c
 41047  01EE00  A4D8               	btfss	status,2,c
 41048  01EE02  D008               	goto	l10807
 41049                           
 41050                           ;stkvar	_ff1 @ sp[(0)+-4]
 41051  01EE04  0EFC               	movlw	-4
 41052  01EE06  6AE3               	clrf	plusw1,c
 41053  01EE08  0EFD               	movlw	-3
 41054  01EE0A  6AE3               	clrf	plusw1,c
 41055  01EE0C  0EFE               	movlw	-2
 41056  01EE0E  6AE3               	clrf	plusw1,c
 41057  01EE10  0EFF               	movlw	-1
 41058  01EE12  6AE3               	clrf	plusw1,c
 41059  01EE14                     l10807:
 41060                           
 41061                           ;stkvar	_ff2 @ sp[(0)+-8]
 41062  01EE14  50E1               	movf	fsr1l,w,c
 41063  01EE16  0FF8               	addlw	-8
 41064  01EE18  6ED9               	movwf	fsr2l,c
 41065  01EE1A  50E2               	movf	fsr1h,w,c
 41066  01EE1C  6EDA               	movwf	fsr2h,c
 41067  01EE1E  0EFF               	movlw	255
 41068  01EE20  22DA               	addwfc	fsr2h,f,c
 41069  01EE22  0E00               	movlw	0
 41070  01EE24  14DE               	andwf	postinc2,w,c
 41071  01EE26  6E32               	movwf	(btemp+8)^0,c
 41072  01EE28  0E00               	movlw	0
 41073  01EE2A  14DE               	andwf	postinc2,w,c
 41074  01EE2C  6E33               	movwf	(btemp+9)^0,c
 41075  01EE2E  0E80               	movlw	128
 41076  01EE30  14DE               	andwf	postinc2,w,c
 41077  01EE32  6E34               	movwf	(btemp+10)^0,c
 41078  01EE34  0E7F               	movlw	127
 41079  01EE36  14DE               	andwf	postinc2,w,c
 41080  01EE38  6E35               	movwf	(btemp+11)^0,c
 41081  01EE3A  5032               	movf	(btemp+8)^0,w,c
 41082  01EE3C  1033               	iorwf	(btemp+9)^0,w,c
 41083  01EE3E  1034               	iorwf	(btemp+10)^0,w,c
 41084  01EE40  1035               	iorwf	(btemp+11)^0,w,c
 41085  01EE42  A4D8               	btfss	status,2,c
 41086  01EE44  D008               	goto	l2996
 41087                           
 41088                           ;stkvar	_ff2 @ sp[(0)+-8]
 41089  01EE46  0EF8               	movlw	-8
 41090  01EE48  6AE3               	clrf	plusw1,c
 41091  01EE4A  0EF9               	movlw	-7
 41092  01EE4C  6AE3               	clrf	plusw1,c
 41093  01EE4E  0EFA               	movlw	-6
 41094  01EE50  6AE3               	clrf	plusw1,c
 41095  01EE52  0EFB               	movlw	-5
 41096  01EE54  6AE3               	clrf	plusw1,c
 41097  01EE56                     l2996:
 41098                           
 41099                           ;stkvar	_ff1 @ sp[(0)+-4]
 41100  01EE56  0EFF               	movlw	-1
 41101  01EE58  AEE3               	btfss	plusw1,7,c
 41102  01EE5A  D024               	goto	l10813
 41103                           
 41104                           ;stkvar	_ff1 @ sp[(0)+-4]
 41105  01EE5C  0E00               	movlw	0
 41106  01EE5E  6E32               	movwf	(btemp+8)^0,c
 41107  01EE60  0E00               	movlw	0
 41108  01EE62  6E33               	movwf	(btemp+9)^0,c
 41109  01EE64  0E00               	movlw	0
 41110  01EE66  6E34               	movwf	(btemp+10)^0,c
 41111  01EE68  0E80               	movlw	128
 41112  01EE6A  6E35               	movwf	(btemp+11)^0,c
 41113  01EE6C  0EFC               	movlw	-4
 41114  01EE6E  50E3               	movf	plusw1,w,c
 41115  01EE70  5E32               	subwf	(btemp+8)^0,f,c
 41116  01EE72  0EFD               	movlw	-3
 41117  01EE74  50E3               	movf	plusw1,w,c
 41118  01EE76  5A33               	subwfb	(btemp+9)^0,f,c
 41119  01EE78  0EFE               	movlw	-2
 41120  01EE7A  50E3               	movf	plusw1,w,c
 41121  01EE7C  5A34               	subwfb	(btemp+10)^0,f,c
 41122  01EE7E  0EFF               	movlw	-1
 41123  01EE80  50E3               	movf	plusw1,w,c
 41124  01EE82  5A35               	subwfb	(btemp+11)^0,f,c
 41125                           
 41126                           ;stkvar	_ff1 @ sp[(0)+-4]
 41127  01EE84  0EFC               	movlw	-4
 41128  01EE86  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41129  01EE8C  0EFD               	movlw	-3
 41130  01EE8E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41131  01EE94  0EFE               	movlw	-2
 41132  01EE96  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41133  01EE9C  0EFF               	movlw	-1
 41134  01EE9E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41135  01EEA4                     l10813:
 41136                           
 41137                           ;stkvar	_ff2 @ sp[(0)+-8]
 41138  01EEA4  0EFB               	movlw	-5
 41139  01EEA6  AEE3               	btfss	plusw1,7,c
 41140  01EEA8  D024               	goto	l10817
 41141                           
 41142                           ;stkvar	_ff2 @ sp[(0)+-8]
 41143  01EEAA  0E00               	movlw	0
 41144  01EEAC  6E32               	movwf	(btemp+8)^0,c
 41145  01EEAE  0E00               	movlw	0
 41146  01EEB0  6E33               	movwf	(btemp+9)^0,c
 41147  01EEB2  0E00               	movlw	0
 41148  01EEB4  6E34               	movwf	(btemp+10)^0,c
 41149  01EEB6  0E80               	movlw	128
 41150  01EEB8  6E35               	movwf	(btemp+11)^0,c
 41151  01EEBA  0EF8               	movlw	-8
 41152  01EEBC  50E3               	movf	plusw1,w,c
 41153  01EEBE  5E32               	subwf	(btemp+8)^0,f,c
 41154  01EEC0  0EF9               	movlw	-7
 41155  01EEC2  50E3               	movf	plusw1,w,c
 41156  01EEC4  5A33               	subwfb	(btemp+9)^0,f,c
 41157  01EEC6  0EFA               	movlw	-6
 41158  01EEC8  50E3               	movf	plusw1,w,c
 41159  01EECA  5A34               	subwfb	(btemp+10)^0,f,c
 41160  01EECC  0EFB               	movlw	-5
 41161  01EECE  50E3               	movf	plusw1,w,c
 41162  01EED0  5A35               	subwfb	(btemp+11)^0,f,c
 41163                           
 41164                           ;stkvar	_ff2 @ sp[(0)+-8]
 41165  01EED2  0EF8               	movlw	-8
 41166  01EED4  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41167  01EEDA  0EF9               	movlw	-7
 41168  01EEDC  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41169  01EEE2  0EFA               	movlw	-6
 41170  01EEE4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41171  01EEEA  0EFB               	movlw	-5
 41172  01EEEC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41173  01EEF2                     l10817:
 41174                           
 41175                           ;stkvar	_ff1 @ sp[(0)+-4]
 41176  01EEF2  0EFF               	movlw	-1
 41177  01EEF4  7EE3               	btg	plusw1,7,c
 41178                           
 41179                           ;stkvar	_ff2 @ sp[(0)+-8]
 41180  01EEF6  0EFB               	movlw	-5
 41181  01EEF8  7EE3               	btg	plusw1,7,c
 41182                           
 41183                           ;stkvar	_ff2 @ sp[(0)+-8]
 41184                           ;stkvar	_ff1 @ sp[(0)+-4]
 41185  01EEFA  50E1               	movf	fsr1l,w,c
 41186  01EEFC  0FFC               	addlw	-4
 41187  01EEFE  6ED9               	movwf	fsr2l,c
 41188  01EF00  50E2               	movf	fsr1h,w,c
 41189  01EF02  6EDA               	movwf	fsr2h,c
 41190  01EF04  0EFF               	movlw	255
 41191  01EF06  22DA               	addwfc	fsr2h,f,c
 41192  01EF08  0EF8               	movlw	-8
 41193  01EF0A  50E3               	movf	plusw1,w,c
 41194  01EF0C  5CDE               	subwf	postinc2,w,c
 41195  01EF0E  0EF9               	movlw	-7
 41196  01EF10  50E3               	movf	plusw1,w,c
 41197  01EF12  58DE               	subwfb	postinc2,w,c
 41198  01EF14  0EFA               	movlw	-6
 41199  01EF16  50E3               	movf	plusw1,w,c
 41200  01EF18  58DE               	subwfb	postinc2,w,c
 41201  01EF1A  0EFB               	movlw	-5
 41202  01EF1C  50E3               	movf	plusw1,w,c
 41203  01EF1E  58DE               	subwfb	postinc2,w,c
 41204  01EF20  B0D8               	btfsc	status,0,c
 41205  01EF22  D002               	goto	l10825
 41206  01EF24  902A               	bcf	btemp& (0+255),0,c
 41207  01EF26  D001               	goto	l3003
 41208  01EF28                     l10825:
 41209  01EF28  802A               	bsf	btemp& (0+255),0,c
 41210  01EF2A                     l3003:
 41211                           
 41212                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 41213  01EF2A  0EF8               	movlw	248
 41214  01EF2C  26E1               	addwf	fsr1l,f,c
 41215  01EF2E  0EFF               	movlw	255
 41216  01EF30  22E2               	addwfc	fsr1h,f,c
 41217  01EF32  0012               	return		;funcret
 41218  01EF34                     __end_of___flge:
 41219                           	opt callstack 0
 41220                           
 41221 ;; *************** function _calc_model_data *****************
 41222 ;; Defined at:
 41223 ;;		line 67 in file "mbmc.c"
 41224 ;; Parameters:    Size  Location     Type
 41225 ;;		None
 41226 ;; Auto vars:     Size  Location     Type
 41227 ;;		None
 41228 ;; Return value:  Size  Location     Type
 41229 ;;                  1  [STACK] void 
 41230 ;; Registers used:
 41231 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 41232 ;; Tracked objects:
 41233 ;;		On entry : 3F/0
 41234 ;;		On exit  : 3F/39
 41235 ;;		Unchanged: 0/0
 41236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41241 ;;Total ram usage:        0 bytes
 41242 ;; Hardware stack levels used:    1
 41243 ;; Hardware stack levels required when called:   18
 41244 ;; This function calls:
 41245 ;;		___fladd
 41246 ;;		___flmul
 41247 ;;		___flsub
 41248 ;;		_lp_filter
 41249 ;;		_start_bsoc
 41250 ;;		_stop_bsoc
 41251 ;; This function is called by:
 41252 ;;		_main
 41253 ;; This function uses a reentrant model
 41254 ;;
 41255                           
 41256                           	psect	text150
 41257  019B3C                     __ptext150:
 41258                           	opt callstack 0
 41259  019B3C                     _calc_model_data:
 41260                           	opt callstack 12
 41261                           
 41262                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 41263                           
 41264                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 41265                           ;incstack = 0
 41266  019B3C  EC00  F018         	call	_stop_bsoc	;wreg free
 41267                           
 41268                           ; BSR set to: 57
 41269                           ;mbmc.c: 72:  if (!V.calib) {
 41270  019B40  0102               	movlb	2	; () banked
 41271  019B42  51B0               	movf	(_V+169)& (0+255),w,b	;volatile
 41272  019B44  A4D8               	btfss	status,2,c
 41273  019B46  D220               	goto	l14619
 41274                           
 41275                           ; BSR set to: 2
 41276                           ;mbmc.c: 73:   C.updates++;
 41277  019B48  EE22  F23B         	lfsr	2,_C+316	;volatile
 41278  019B4C  2ADE               	incf	postinc2,f,c
 41279  019B4E  0E00               	movlw	0
 41280  019B50  22DE               	addwfc	postinc2,f,c
 41281  019B52  22DE               	addwfc	postinc2,f,c
 41282  019B54  22DE               	addwfc	postinc2,f,c
 41283                           
 41284                           ; BSR set to: 2
 41285                           ;mbmc.c: 74:   C.c_bat = C.calc[C_BATT];
 41286  019B56  EE22  F0FF         	lfsr	2,_C
 41287  019B5A  006F FF78  F943    	movff	postinc2,_C+68	;volatile
 41288  019B60  006F FF78  F944    	movff	postinc2,_C+69	;volatile
 41289  019B66  006F FF78  F945    	movff	postinc2,_C+70	;volatile
 41290  019B6C  006F FF74  F946    	movff	postdec2,_C+71	;volatile
 41291                           
 41292                           ; BSR set to: 2
 41293                           ;mbmc.c: 75:   C.bc_ror = C.c_bat - bcror;
 41294  019B72  0060  F223  FFE6   	movff	calc_model_data@bcror,postinc1
 41295  019B78  0060  F227  FFE6   	movff	calc_model_data@bcror+1,postinc1
 41296  019B7E  0060  F22B  FFE6   	movff	calc_model_data@bcror+2,postinc1
 41297  019B84  0060  F22F  FFE6   	movff	calc_model_data@bcror+3,postinc1
 41298  019B8A  EE22  F143         	lfsr	2,_C+68	;volatile
 41299  019B8E  006F FF7B FFE6     	movff	postinc2,postinc1
 41300  019B94  006F FF7B FFE6     	movff	postinc2,postinc1
 41301  019B9A  006F FF7B FFE6     	movff	postinc2,postinc1
 41302  019BA0  006F FF7B FFE6     	movff	postinc2,postinc1
 41303  019BA6  ECA3  F011         	call	___flsub	;wreg free
 41304  019BAA  0060  F0A8  F96F   	movff	btemp,_C+112	;volatile
 41305  019BB0  0060  F0AC  F970   	movff	btemp+1,_C+113	;volatile
 41306  019BB6  0060  F0B0  F971   	movff	btemp+2,_C+114	;volatile
 41307  019BBC  0060  F0B4  F972   	movff	btemp+3,_C+115	;volatile
 41308                           
 41309                           ;mbmc.c: 76:   bcror = C.c_bat;
 41310  019BC2  C943  F088         	movff	_C+68,calc_model_data@bcror	;volatile
 41311  019BC6  C944  F089         	movff	_C+69,calc_model_data@bcror+1	;volatile
 41312  019BCA  C945  F08A         	movff	_C+70,calc_model_data@bcror+2	;volatile
 41313  019BCE  C946  F08B         	movff	_C+71,calc_model_data@bcror+3	;volatile
 41314                           
 41315                           ;mbmc.c: 77:   C.c_pv = C.calc[C_PV];
 41316  019BD2  EE22  F103         	lfsr	2,_C+4	;volatile
 41317  019BD6  006F FF78  F947    	movff	postinc2,_C+72	;volatile
 41318  019BDC  006F FF78  F948    	movff	postinc2,_C+73	;volatile
 41319  019BE2  006F FF78  F949    	movff	postinc2,_C+74	;volatile
 41320  019BE8  006F FF74  F94A    	movff	postdec2,_C+75	;volatile
 41321                           
 41322                           ;mbmc.c: 78:   C.v_bat = C.calc[V_BAT];
 41323  019BEE  EE22  F10F         	lfsr	2,_C+16	;volatile
 41324  019BF2  006F FF78  F953    	movff	postinc2,_C+84	;volatile
 41325  019BF8  006F FF78  F954    	movff	postinc2,_C+85	;volatile
 41326  019BFE  006F FF78  F955    	movff	postinc2,_C+86	;volatile
 41327  019C04  006F FF74  F956    	movff	postdec2,_C+87	;volatile
 41328                           
 41329                           ;mbmc.c: 79:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 41330  019C0A  EE22  F133         	lfsr	2,_C+52	;volatile
 41331  019C0E  006F FF78  F967    	movff	postinc2,_C+104	;volatile
 41332  019C14  006F FF78  F968    	movff	postinc2,_C+105	;volatile
 41333  019C1A  006F FF78  F969    	movff	postinc2,_C+106	;volatile
 41334  019C20  006F FF74  F96A    	movff	postdec2,_C+107	;volatile
 41335                           
 41336                           ;mbmc.c: 80:   C.bv_ror = C.v_bat - bvror;
 41337  019C26  0060  F233  FFE6   	movff	calc_model_data@bvror,postinc1
 41338  019C2C  0060  F237  FFE6   	movff	calc_model_data@bvror+1,postinc1
 41339  019C32  0060  F23B  FFE6   	movff	calc_model_data@bvror+2,postinc1
 41340  019C38  0060  F23F  FFE6   	movff	calc_model_data@bvror+3,postinc1
 41341  019C3E  EE22  F153         	lfsr	2,_C+84	;volatile
 41342  019C42  006F FF7B FFE6     	movff	postinc2,postinc1
 41343  019C48  006F FF7B FFE6     	movff	postinc2,postinc1
 41344  019C4E  006F FF7B FFE6     	movff	postinc2,postinc1
 41345  019C54  006F FF7B FFE6     	movff	postinc2,postinc1
 41346  019C5A  ECA3  F011         	call	___flsub	;wreg free
 41347  019C5E  0060  F0A8  F96B   	movff	btemp,_C+108	;volatile
 41348  019C64  0060  F0AC  F96C   	movff	btemp+1,_C+109	;volatile
 41349  019C6A  0060  F0B0  F96D   	movff	btemp+2,_C+110	;volatile
 41350  019C70  0060  F0B4  F96E   	movff	btemp+3,_C+111	;volatile
 41351                           
 41352                           ;mbmc.c: 81:   bvror = C.v_bat;
 41353  019C76  C953  F08C         	movff	_C+84,calc_model_data@bvror	;volatile
 41354  019C7A  C954  F08D         	movff	_C+85,calc_model_data@bvror+1	;volatile
 41355  019C7E  C955  F08E         	movff	_C+86,calc_model_data@bvror+2	;volatile
 41356  019C82  C956  F08F         	movff	_C+87,calc_model_data@bvror+3	;volatile
 41357                           
 41358                           ;mbmc.c: 82:   C.v_pv = C.calc[V_PV];
 41359  019C86  EE22  F113         	lfsr	2,_C+20	;volatile
 41360  019C8A  006F FF78  F94F    	movff	postinc2,_C+80	;volatile
 41361  019C90  006F FF78  F950    	movff	postinc2,_C+81	;volatile
 41362  019C96  006F FF78  F951    	movff	postinc2,_C+82	;volatile
 41363  019C9C  006F FF74  F952    	movff	postdec2,_C+83	;volatile
 41364                           
 41365                           ;mbmc.c: 83:   C.v_cc = C.calc[V_CC];
 41366  019CA2  EE22  F107         	lfsr	2,_C+8	;volatile
 41367  019CA6  006F FF78  F94B    	movff	postinc2,_C+76	;volatile
 41368  019CAC  006F FF78  F94C    	movff	postinc2,_C+77	;volatile
 41369  019CB2  006F FF78  F94D    	movff	postinc2,_C+78	;volatile
 41370  019CB8  006F FF74  F94E    	movff	postdec2,_C+79	;volatile
 41371                           
 41372                           ;mbmc.c: 84:   C.v_inverter = C.calc[V_INVERTER];
 41373  019CBE  EE22  F12F         	lfsr	2,_C+48	;volatile
 41374  019CC2  006F FF78  F963    	movff	postinc2,_C+100	;volatile
 41375  019CC8  006F FF78  F964    	movff	postinc2,_C+101	;volatile
 41376  019CCE  006F FF78  F965    	movff	postinc2,_C+102	;volatile
 41377  019CD4  006F FF74  F966    	movff	postdec2,_C+103	;volatile
 41378                           
 41379                           ;mbmc.c: 85:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 41380  019CDA  0E01               	movlw	1
 41381  019CDC  6EE6               	movwf	postinc1,c
 41382  019CDE  0E10               	movlw	16
 41383  019CE0  6EE6               	movwf	postinc1,c
 41384  019CE2  EE22  F0FF         	lfsr	2,_C
 41385  019CE6  006F FF7B FFE6     	movff	postinc2,postinc1
 41386  019CEC  006F FF7B FFE6     	movff	postinc2,postinc1
 41387  019CF2  006F FF7B FFE6     	movff	postinc2,postinc1
 41388  019CF8  006F FF7B FFE6     	movff	postinc2,postinc1
 41389  019CFE  EE22  F103         	lfsr	2,_C+4	;volatile
 41390  019D02  006F FF7B FFE6     	movff	postinc2,postinc1
 41391  019D08  006F FF7B FFE6     	movff	postinc2,postinc1
 41392  019D0E  006F FF7B FFE6     	movff	postinc2,postinc1
 41393  019D14  006F FF7B FFE6     	movff	postinc2,postinc1
 41394  019D1A  ECA3  F011         	call	___flsub	;wreg free
 41395  019D1E  0060  F0AB  FFE6   	movff	btemp,postinc1
 41396  019D24  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41397  019D2A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41398  019D30  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41399  019D36  EC36  F0EF         	call	_lp_filter	;wreg free
 41400  019D3A  0060  F0A8  F93F   	movff	btemp,_C+64	;volatile
 41401  019D40  0060  F0AC  F940   	movff	btemp+1,_C+65	;volatile
 41402  019D46  0060  F0B0  F941   	movff	btemp+2,_C+66	;volatile
 41403  019D4C  0060  F0B4  F942   	movff	btemp+3,_C+67	;volatile
 41404                           
 41405                           ;mbmc.c: 86:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 41406  019D52  0E01               	movlw	1
 41407  019D54  6EE6               	movwf	postinc1,c
 41408  019D56  0E11               	movlw	17
 41409  019D58  6EE6               	movwf	postinc1,c
 41410  019D5A  EE22  F153         	lfsr	2,_C+84	;volatile
 41411  019D5E  006F FF7B FFE6     	movff	postinc2,postinc1
 41412  019D64  006F FF7B FFE6     	movff	postinc2,postinc1
 41413  019D6A  006F FF7B FFE6     	movff	postinc2,postinc1
 41414  019D70  006F FF7B FFE6     	movff	postinc2,postinc1
 41415  019D76  EE22  F13F         	lfsr	2,_C+64	;volatile
 41416  019D7A  006F FF7B FFE6     	movff	postinc2,postinc1
 41417  019D80  006F FF7B FFE6     	movff	postinc2,postinc1
 41418  019D86  006F FF7B FFE6     	movff	postinc2,postinc1
 41419  019D8C  006F FF7B FFE6     	movff	postinc2,postinc1
 41420  019D92  EC67  F0B8         	call	___flmul	;wreg free
 41421  019D96  0060  F0AB  FFE6   	movff	btemp,postinc1
 41422  019D9C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41423  019DA2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41424  019DA8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41425  019DAE  EC36  F0EF         	call	_lp_filter	;wreg free
 41426  019DB2  0060  F0A8  F973   	movff	btemp,_C+116	;volatile
 41427  019DB8  0060  F0AC  F974   	movff	btemp+1,_C+117	;volatile
 41428  019DBE  0060  F0B0  F975   	movff	btemp+2,_C+118	;volatile
 41429  019DC4  0060  F0B4  F976   	movff	btemp+3,_C+119	;volatile
 41430                           
 41431                           ;mbmc.c: 87:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 41432  019DCA  0E01               	movlw	1
 41433  019DCC  6EE6               	movwf	postinc1,c
 41434  019DCE  0E12               	movlw	18
 41435  019DD0  6EE6               	movwf	postinc1,c
 41436  019DD2  EE22  F14F         	lfsr	2,_C+80	;volatile
 41437  019DD6  006F FF7B FFE6     	movff	postinc2,postinc1
 41438  019DDC  006F FF7B FFE6     	movff	postinc2,postinc1
 41439  019DE2  006F FF7B FFE6     	movff	postinc2,postinc1
 41440  019DE8  006F FF7B FFE6     	movff	postinc2,postinc1
 41441  019DEE  EE22  F147         	lfsr	2,_C+72	;volatile
 41442  019DF2  006F FF7B FFE6     	movff	postinc2,postinc1
 41443  019DF8  006F FF7B FFE6     	movff	postinc2,postinc1
 41444  019DFE  006F FF7B FFE6     	movff	postinc2,postinc1
 41445  019E04  006F FF7B FFE6     	movff	postinc2,postinc1
 41446  019E0A  EC67  F0B8         	call	___flmul	;wreg free
 41447  019E0E  0060  F0AB  FFE6   	movff	btemp,postinc1
 41448  019E14  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41449  019E1A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41450  019E20  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41451  019E26  EC36  F0EF         	call	_lp_filter	;wreg free
 41452  019E2A  0060  F0A8  F97B   	movff	btemp,_C+124	;volatile
 41453  019E30  0060  F0AC  F97C   	movff	btemp+1,_C+125	;volatile
 41454  019E36  0060  F0B0  F97D   	movff	btemp+2,_C+126	;volatile
 41455  019E3C  0060  F0B4  F97E   	movff	btemp+3,_C+127	;volatile
 41456                           
 41457                           ;mbmc.c: 88:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 41458  019E42  0E01               	movlw	1
 41459  019E44  6EE6               	movwf	postinc1,c
 41460  019E46  0E13               	movlw	19
 41461  019E48  6EE6               	movwf	postinc1,c
 41462  019E4A  0E00               	movlw	0
 41463  019E4C  6EE6               	movwf	postinc1,c
 41464  019E4E  0E00               	movlw	0
 41465  019E50  6EE6               	movwf	postinc1,c
 41466  019E52  0E60               	movlw	96
 41467  019E54  6EE6               	movwf	postinc1,c
 41468  019E56  0EC1               	movlw	193
 41469  019E58  6EE6               	movwf	postinc1,c
 41470  019E5A  EE22  F163         	lfsr	2,_C+100	;volatile
 41471  019E5E  006F FF7B FFE6     	movff	postinc2,postinc1
 41472  019E64  006F FF7B FFE6     	movff	postinc2,postinc1
 41473  019E6A  006F FF7B FFE6     	movff	postinc2,postinc1
 41474  019E70  006F FF7B FFE6     	movff	postinc2,postinc1
 41475  019E76  EE22  F13F         	lfsr	2,_C+64	;volatile
 41476  019E7A  006F FF7B FFE6     	movff	postinc2,postinc1
 41477  019E80  006F FF7B FFE6     	movff	postinc2,postinc1
 41478  019E86  006F FF7B FFE6     	movff	postinc2,postinc1
 41479  019E8C  006F FF7B FFE6     	movff	postinc2,postinc1
 41480  019E92  EC67  F0B8         	call	___flmul	;wreg free
 41481  019E96  0060  F0AB  FFE6   	movff	btemp,postinc1
 41482  019E9C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41483  019EA2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41484  019EA8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41485  019EAE  EC7C  F0BC         	call	___fladd	;wreg free
 41486  019EB2  0060  F0AB  FFE6   	movff	btemp,postinc1
 41487  019EB8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41488  019EBE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41489  019EC4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41490  019ECA  EC36  F0EF         	call	_lp_filter	;wreg free
 41491  019ECE  0060  F0A8  F977   	movff	btemp,_C+120	;volatile
 41492  019ED4  0060  F0AC  F978   	movff	btemp+1,_C+121	;volatile
 41493  019EDA  0060  F0B0  F979   	movff	btemp+2,_C+122	;volatile
 41494  019EE0  0060  F0B4  F97A   	movff	btemp+3,_C+123	;volatile
 41495                           
 41496                           ;mbmc.c: 89:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 41497  019EE6  0E01               	movlw	1
 41498  019EE8  6EE6               	movwf	postinc1,c
 41499  019EEA  0E14               	movlw	20
 41500  019EEC  6EE6               	movwf	postinc1,c
 41501  019EEE  EE22  F153         	lfsr	2,_C+84	;volatile
 41502  019EF2  006F FF7B FFE6     	movff	postinc2,postinc1
 41503  019EF8  006F FF7B FFE6     	movff	postinc2,postinc1
 41504  019EFE  006F FF7B FFE6     	movff	postinc2,postinc1
 41505  019F04  006F FF7B FFE6     	movff	postinc2,postinc1
 41506  019F0A  EE22  F143         	lfsr	2,_C+68	;volatile
 41507  019F0E  006F FF7B FFE6     	movff	postinc2,postinc1
 41508  019F14  006F FF7B FFE6     	movff	postinc2,postinc1
 41509  019F1A  006F FF7B FFE6     	movff	postinc2,postinc1
 41510  019F20  006F FF7B FFE6     	movff	postinc2,postinc1
 41511  019F26  EC67  F0B8         	call	___flmul	;wreg free
 41512  019F2A  0060  F0AB  FFE6   	movff	btemp,postinc1
 41513  019F30  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41514  019F36  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41515  019F3C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41516  019F42  EC36  F0EF         	call	_lp_filter	;wreg free
 41517  019F46  0060  F0A8  F97F   	movff	btemp,_C+128	;volatile
 41518  019F4C  0060  F0AC  F980   	movff	btemp+1,_C+129	;volatile
 41519  019F52  0060  F0B0  F981   	movff	btemp+2,_C+130	;volatile
 41520  019F58  0060  F0B4  F982   	movff	btemp+3,_C+131	;volatile
 41521                           
 41522                           ;mbmc.c: 93:   if (C.p_inverter < 0.0)
 41523  019F5E  EE22  F177         	lfsr	2,_C+120	;volatile
 41524  019F62  0E03               	movlw	3
 41525  019F64  AEDB               	btfss	plusw2,7,c
 41526  019F66  D010               	goto	l14619
 41527                           
 41528                           ;mbmc.c: 94:    C.p_inverter = 0.0001;
 41529  019F68  0E17               	movlw	23
 41530  019F6A  006F FFA0  F977    	movff	wreg,_C+120	;volatile
 41531  019F70  0EB7               	movlw	183
 41532  019F72  006F FFA0  F978    	movff	wreg,_C+121	;volatile
 41533  019F78  0ED1               	movlw	209
 41534  019F7A  006F FFA0  F979    	movff	wreg,_C+122	;volatile
 41535  019F80  0E38               	movlw	56
 41536  019F82  006F FFA0  F97A    	movff	wreg,_C+123	;volatile
 41537  019F88                     l14619:
 41538                           
 41539                           ;mbmc.c: 96:  start_bsoc();
 41540  019F88  EC7C  F016         	call	_start_bsoc	;wreg free
 41541                           
 41542                           ; BSR set to: 57
 41543                           ;mbmc.c: 97:  C.update = 1;
 41544  019F8C  0E01               	movlw	1
 41545  019F8E  006F FFA0  F9B7    	movff	wreg,_C+184	;volatile
 41546                           
 41547                           ; BSR set to: 57
 41548                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 41549  019F94  0012               	return		;funcret
 41550  019F96                     __end_of_calc_model_data:
 41551                           	opt callstack 0
 41552                           
 41553 ;; *************** function _stop_bsoc *****************
 41554 ;; Defined at:
 41555 ;;		line 130 in file "bsoc.c"
 41556 ;; Parameters:    Size  Location     Type
 41557 ;;		None
 41558 ;; Auto vars:     Size  Location     Type
 41559 ;;		None
 41560 ;; Return value:  Size  Location     Type
 41561 ;;                  1  [STACK] void 
 41562 ;; Registers used:
 41563 ;;		None
 41564 ;; Tracked objects:
 41565 ;;		On entry : 0/1
 41566 ;;		On exit  : 3F/39
 41567 ;;		Unchanged: 0/0
 41568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41573 ;;Total ram usage:        0 bytes
 41574 ;; Hardware stack levels used:    1
 41575 ;; Hardware stack levels required when called:   15
 41576 ;; This function calls:
 41577 ;;		Nothing
 41578 ;; This function is called by:
 41579 ;;		_calc_model_data
 41580 ;;		_load_hist_data
 41581 ;; This function uses a reentrant model
 41582 ;;
 41583                           
 41584                           	psect	text151
 41585  003000                     __ptext151:
 41586                           	opt callstack 0
 41587  003000                     _stop_bsoc:
 41588                           	opt callstack 14
 41589                           
 41590                           ;bsoc.c: 133:  PIE6bits.TMR3IE = 0;
 41591                           
 41592                           ; BSR set to: 57
 41593                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 41594                           ;incstack = 0
 41595  003000  0139               	movlb	57	; () banked
 41596  003002  9D96               	bcf	150,6,b	;volatile
 41597                           
 41598                           ; BSR set to: 57
 41599                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 41600  003004  0012               	return		;funcret
 41601  003006                     __end_of_stop_bsoc:
 41602                           	opt callstack 0
 41603                           
 41604 ;; *************** function _start_bsoc *****************
 41605 ;; Defined at:
 41606 ;;		line 121 in file "bsoc.c"
 41607 ;; Parameters:    Size  Location     Type
 41608 ;;		None
 41609 ;; Auto vars:     Size  Location     Type
 41610 ;;		None
 41611 ;; Return value:  Size  Location     Type
 41612 ;;                  1  [STACK] void 
 41613 ;; Registers used:
 41614 ;;		wreg, status,2, status,0, btemp+11
 41615 ;; Tracked objects:
 41616 ;;		On entry : 0/39
 41617 ;;		On exit  : 3F/39
 41618 ;;		Unchanged: 0/0
 41619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41624 ;;Total ram usage:        0 bytes
 41625 ;; Hardware stack levels used:    1
 41626 ;; Hardware stack levels required when called:   15
 41627 ;; This function calls:
 41628 ;;		Nothing
 41629 ;; This function is called by:
 41630 ;;		_calc_model_data
 41631 ;;		_load_hist_data
 41632 ;; This function uses a reentrant model
 41633 ;;
 41634                           
 41635                           	psect	text152
 41636  002CF8                     __ptext152:
 41637                           	opt callstack 0
 41638  002CF8                     _start_bsoc:
 41639                           	opt callstack 14
 41640                           
 41641                           ;bsoc.c: 124:  PIE6bits.TMR3IE = 1;
 41642                           
 41643                           ; BSR set to: 57
 41644                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 41645                           ;incstack = 0
 41646  002CF8  0139               	movlb	57	; () banked
 41647  002CFA  8D96               	bsf	150,6,b	;volatile
 41648                           
 41649                           ; BSR set to: 57
 41650  002CFC  A4BE               	btfss	190,2,c	;volatile
 41651  002CFE  D002               	goto	u12900
 41652  002D00  0E01               	movlw	1
 41653  002D02  D001               	goto	u12906
 41654  002D04                     u12900:
 41655  002D04  0E00               	movlw	0
 41656  002D06                     u12906:
 41657  002D06  0AFF               	xorlw	255
 41658  002D08  6E35               	movwf	(btemp+11)^0,c
 41659  002D0A  4635               	rlncf	(btemp+11)^0,f,c
 41660  002D0C  4635               	rlncf	(btemp+11)^0,f,c
 41661  002D0E  50BE               	movf	190,w,c	;volatile
 41662  002D10  1835               	xorwf	(btemp+11)^0,w,c
 41663  002D12  0BFB               	andlw	-5
 41664  002D14  1835               	xorwf	(btemp+11)^0,w,c
 41665  002D16  6EBE               	movwf	190,c	;volatile
 41666                           
 41667                           ; BSR set to: 57
 41668                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 41669  002D18  0012               	return		;funcret
 41670  002D1A                     __end_of_start_bsoc:
 41671                           	opt callstack 0
 41672                           
 41673 ;; *************** function _lp_filter *****************
 41674 ;; Defined at:
 41675 ;;		line 29 in file "mbmc.c"
 41676 ;; Parameters:    Size  Location     Type
 41677 ;;  new             4  [STACK] const float 
 41678 ;;  bn              1  [STACK] const unsigned char 
 41679 ;;  slow            1  [STACK] const char 
 41680 ;; Auto vars:     Size  Location     Type
 41681 ;;  lp_speed        4  [STACK] float 
 41682 ;; Return value:  Size  Location     Type
 41683 ;;                  4  [STACK] float 
 41684 ;; Registers used:
 41685 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 41686 ;; Tracked objects:
 41687 ;;		On entry : 0/2
 41688 ;;		On exit  : 0/0
 41689 ;;		Unchanged: 0/0
 41690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41695 ;;Total ram usage:        0 bytes
 41696 ;; Hardware stack levels used:    1
 41697 ;; Hardware stack levels required when called:   17
 41698 ;; This function calls:
 41699 ;;		___fladd
 41700 ;;		___flmul
 41701 ;;		___flsub
 41702 ;; This function is called by:
 41703 ;;		_main
 41704 ;;		_convert_adc_data
 41705 ;;		_calc_model_data
 41706 ;; This function uses a reentrant model
 41707 ;;
 41708                           
 41709                           	psect	text153
 41710  01DE6C                     __ptext153:
 41711                           	opt callstack 0
 41712  01DE6C                     _lp_filter:
 41713                           	opt callstack 0
 41714                           
 41715                           ; BSR set to: 57
 41716                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 41717  01DE6C  52E6               	movf	postinc1,f,c
 41718  01DE6E  52E6               	movf	postinc1,f,c
 41719  01DE70  52E6               	movf	postinc1,f,c
 41720  01DE72  52E6               	movf	postinc1,f,c
 41721                           
 41722                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 41723                           ;stkvar	_bn @ sp[(-4)+-5]
 41724                           
 41725                           ;incstack = 0
 41726  01DE74  0EF7               	movlw	-9
 41727  01DE76  006F FF8C  F02A    	movff	plusw1,btemp
 41728  01DE7C  0E14               	movlw	20
 41729  01DE7E  642A               	cpfsgt	btemp^0,c
 41730  01DE80  D011               	goto	l13611
 41731  01DE82                     u12680:
 41732                           
 41733                           ;mbmc.c: 35:   return new;
 41734                           ;stkvar	_new @ sp[(-4)+-4]
 41735  01DE82  0EF8               	movlw	-8
 41736  01DE84  006F FF8C  F02A    	movff	plusw1,btemp
 41737  01DE8A  0EF9               	movlw	-7
 41738  01DE8C  006F FF8C  F02B    	movff	plusw1,btemp+1
 41739  01DE92  0EFA               	movlw	-6
 41740  01DE94  006F FF8C  F02C    	movff	plusw1,btemp+2
 41741  01DE9A  0EFB               	movlw	-5
 41742  01DE9C  006F FF8C  F02D    	movff	plusw1,btemp+3
 41743  01DEA2  D0BD               	goto	l2148
 41744  01DEA4                     l13611:
 41745                           
 41746                           ;mbmc.c: 37:  if (slow == (-1)) {
 41747                           ;stkvar	_slow @ sp[(-4)+-6]
 41748  01DEA4  0EF6               	movlw	-10
 41749  01DEA6  28E3               	incf	plusw1,w,c
 41750  01DEA8  A4D8               	btfss	status,2,c
 41751  01DEAA  D012               	goto	l13619
 41752                           
 41753                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 41754                           ;stkvar	_bn @ sp[(-4)+-5]
 41755  01DEAC  0EF7               	movlw	-9
 41756  01DEAE  50E3               	movf	plusw1,w,c
 41757  01DEB0  0D04               	mullw	4
 41758  01DEB2  0E00               	movlw	low lp_filter@smooth
 41759  01DEB4  24F3               	addwf	243,w,c
 41760  01DEB6  6ED9               	movwf	fsr2l,c
 41761  01DEB8  0E03               	movlw	high lp_filter@smooth
 41762  01DEBA  20F4               	addwfc	prodh,w,c
 41763  01DEBC  6EDA               	movwf	fsr2h,c
 41764  01DEBE  0E00               	movlw	0
 41765  01DEC0  6EDE               	movwf	postinc2,c
 41766  01DEC2  0E00               	movlw	0
 41767  01DEC4  6EDE               	movwf	postinc2,c
 41768  01DEC6  0E00               	movlw	0
 41769  01DEC8  6EDE               	movwf	postinc2,c
 41770  01DECA  0E00               	movlw	0
 41771  01DECC  6EDD               	movwf	postdec2,c
 41772  01DECE  D7D9               	goto	u12680
 41773  01DED0                     l13619:
 41774                           
 41775                           ;mbmc.c: 42:  if (slow) {
 41776                           ;stkvar	_slow @ sp[(-4)+-6]
 41777  01DED0  0EF6               	movlw	-10
 41778  01DED2  50E3               	movf	plusw1,w,c
 41779  01DED4  B4D8               	btfsc	status,2,c
 41780  01DED6  D006               	goto	l13623
 41781                           
 41782                           ;mbmc.c: 43:   lp_speed = 0.033;
 41783  01DED8  0E02               	movlw	2
 41784  01DEDA  6E32               	movwf	(btemp+8)^0,c
 41785  01DEDC  0E2B               	movlw	43
 41786  01DEDE  6E33               	movwf	(btemp+9)^0,c
 41787  01DEE0  0E07               	movlw	7
 41788  01DEE2  D005               	goto	L47
 41789  01DEE4                     l13623:
 41790                           
 41791                           ;mbmc.c: 45:   lp_speed = 0.066;
 41792  01DEE4  0E02               	movlw	2
 41793  01DEE6  6E32               	movwf	(btemp+8)^0,c
 41794  01DEE8  0E2B               	movlw	43
 41795  01DEEA  6E33               	movwf	(btemp+9)^0,c
 41796  01DEEC  0E87               	movlw	135
 41797  01DEEE                     L47:
 41798  01DEEE  6E34               	movwf	(btemp+10)^0,c
 41799  01DEF0  0E3D               	movlw	61
 41800  01DEF2  6E35               	movwf	(btemp+11)^0,c
 41801                           
 41802                           ;stkvar	_lp_speed @ sp[(-4)+0]
 41803  01DEF4  0EFC               	movlw	-4
 41804  01DEF6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41805  01DEFC  0EFD               	movlw	-3
 41806  01DEFE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41807  01DF04  0EFE               	movlw	-2
 41808  01DF06  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41809  01DF0C  0EFF               	movlw	-1
 41810  01DF0E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41811                           
 41812                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 41813                           ;stkvar	_bn @ sp[(-4)+-5]
 41814  01DF14  0EF7               	movlw	-9
 41815  01DF16  50E3               	movf	plusw1,w,c
 41816  01DF18  0D04               	mullw	4
 41817  01DF1A  0E00               	movlw	low lp_filter@smooth
 41818  01DF1C  24F3               	addwf	243,w,c
 41819  01DF1E  6ED9               	movwf	fsr2l,c
 41820  01DF20  0E03               	movlw	high lp_filter@smooth
 41821  01DF22  20F4               	addwfc	prodh,w,c
 41822  01DF24  6EDA               	movwf	fsr2h,c
 41823  01DF26  006F FF7B FFE6     	movff	postinc2,postinc1
 41824  01DF2C  006F FF7B FFE6     	movff	postinc2,postinc1
 41825  01DF32  006F FF7B FFE6     	movff	postinc2,postinc1
 41826  01DF38  006F FF7B FFE6     	movff	postinc2,postinc1
 41827                           
 41828                           ;stkvar	_lp_speed @ sp[(-8)+0]
 41829  01DF3E  0EF8               	movlw	-8
 41830  01DF40  006F FF8F FFE6     	movff	plusw1,postinc1
 41831  01DF46  006F FF8F FFE6     	movff	plusw1,postinc1
 41832  01DF4C  006F FF8F FFE6     	movff	plusw1,postinc1
 41833  01DF52  006F FF8F FFE6     	movff	plusw1,postinc1
 41834                           
 41835                           ;stkvar	_bn @ sp[(-12)+-5]
 41836  01DF58  0EEF               	movlw	-17
 41837  01DF5A  50E3               	movf	plusw1,w,c
 41838  01DF5C  0D04               	mullw	4
 41839  01DF5E  0E00               	movlw	low lp_filter@smooth
 41840  01DF60  24F3               	addwf	243,w,c
 41841  01DF62  6ED9               	movwf	fsr2l,c
 41842  01DF64  0E03               	movlw	high lp_filter@smooth
 41843  01DF66  20F4               	addwfc	prodh,w,c
 41844  01DF68  6EDA               	movwf	fsr2h,c
 41845  01DF6A  006F FF7B FFE6     	movff	postinc2,postinc1
 41846  01DF70  006F FF7B FFE6     	movff	postinc2,postinc1
 41847  01DF76  006F FF7B FFE6     	movff	postinc2,postinc1
 41848  01DF7C  006F FF7B FFE6     	movff	postinc2,postinc1
 41849                           
 41850                           ;stkvar	_new @ sp[(-16)+-4]
 41851  01DF82  0EEC               	movlw	-20
 41852  01DF84  006F FF8F FFE6     	movff	plusw1,postinc1
 41853  01DF8A  006F FF8F FFE6     	movff	plusw1,postinc1
 41854  01DF90  006F FF8F FFE6     	movff	plusw1,postinc1
 41855  01DF96  006F FF8F FFE6     	movff	plusw1,postinc1
 41856  01DF9C  ECA3  F011         	call	___flsub	;wreg free
 41857  01DFA0  0060  F0AB  FFE6   	movff	btemp,postinc1
 41858  01DFA6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41859  01DFAC  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41860  01DFB2  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41861  01DFB8  EC67  F0B8         	call	___flmul	;wreg free
 41862  01DFBC  0060  F0AB  FFE6   	movff	btemp,postinc1
 41863  01DFC2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41864  01DFC8  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41865  01DFCE  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41866  01DFD4  EC7C  F0BC         	call	___fladd	;wreg free
 41867                           
 41868                           ;stkvar	_bn @ sp[(-4)+-5]
 41869  01DFD8  0EF7               	movlw	-9
 41870  01DFDA  50E3               	movf	plusw1,w,c
 41871  01DFDC  0D04               	mullw	4
 41872  01DFDE  0E00               	movlw	low lp_filter@smooth
 41873  01DFE0  24F3               	addwf	243,w,c
 41874  01DFE2  6ED9               	movwf	fsr2l,c
 41875  01DFE4  0E03               	movlw	high lp_filter@smooth
 41876  01DFE6  20F4               	addwfc	prodh,w,c
 41877  01DFE8  6EDA               	movwf	fsr2h,c
 41878  01DFEA  0060  F0AB  FFDE   	movff	btemp,postinc2
 41879  01DFF0  0060  F0AF  FFDE   	movff	btemp+1,postinc2
 41880  01DFF6  0060  F0B3  FFDE   	movff	btemp+2,postinc2
 41881  01DFFC  0060  F0B7  FFDD   	movff	btemp+3,postdec2
 41882  01E002  52DD               	movf	postdec2,f,c
 41883  01E004  52DD               	movf	postdec2,f,c
 41884  01E006  006F FF78  F02A    	movff	postinc2,btemp
 41885  01E00C  006F FF78  F02B    	movff	postinc2,btemp+1
 41886  01E012  006F FF78  F02C    	movff	postinc2,btemp+2
 41887  01E018  006F FF78  F02D    	movff	postinc2,btemp+3
 41888  01E01E                     l2148:
 41889                           
 41890                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 41891  01E01E  0EF6               	movlw	246
 41892  01E020  26E1               	addwf	fsr1l,f,c
 41893  01E022  0EFF               	movlw	255
 41894  01E024  22E2               	addwfc	fsr1h,f,c
 41895  01E026  0012               	return		;funcret
 41896  01E028                     __end_of_lp_filter:
 41897                           	opt callstack 0
 41898                           
 41899 ;; *************** function ___flsub *****************
 41900 ;; Defined at:
 41901 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 41902 ;; Parameters:    Size  Location     Type
 41903 ;;  b               4  [STACK] float 
 41904 ;;  a               4  [STACK] float 
 41905 ;; Auto vars:     Size  Location     Type
 41906 ;;		None
 41907 ;; Return value:  Size  Location     Type
 41908 ;;                  4  [STACK] float 
 41909 ;; Registers used:
 41910 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 41911 ;; Tracked objects:
 41912 ;;		On entry : 0/0
 41913 ;;		On exit  : 0/0
 41914 ;;		Unchanged: 0/0
 41915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41920 ;;Total ram usage:        0 bytes
 41921 ;; Hardware stack levels used:    1
 41922 ;; Hardware stack levels required when called:   16
 41923 ;; This function calls:
 41924 ;;		___fladd
 41925 ;; This function is called by:
 41926 ;;		_conv_raw_result
 41927 ;;		_lp_filter
 41928 ;;		_calc_model_data
 41929 ;;		_calc_ror_data
 41930 ;;		_esr_check
 41931 ;;		_efgtoa
 41932 ;; This function uses a reentrant model
 41933 ;;
 41934                           
 41935                           	psect	text154
 41936  002346                     __ptext154:
 41937                           	opt callstack 0
 41938  002346                     ___flsub:
 41939                           	opt callstack 0
 41940                           
 41941                           ;stkvar	_a @ sp[(0)+-8]
 41942                           
 41943                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 41944                           ;incstack = 0
 41945 ;; hardware stack exceeded
 41946  002346  0EFB               	movlw	-5
 41947  002348  7EE3               	btg	plusw1,7,c
 41948                           
 41949                           ;stkvar	_a @ sp[(0)+-8]
 41950  00234A  0EF8               	movlw	-8
 41951  00234C  006F FF8F FFE6     	movff	plusw1,postinc1
 41952  002352  006F FF8F FFE6     	movff	plusw1,postinc1
 41953  002358  006F FF8F FFE6     	movff	plusw1,postinc1
 41954  00235E  006F FF8F FFE6     	movff	plusw1,postinc1
 41955                           
 41956                           ;stkvar	_b @ sp[(-4)+-4]
 41957  002364  0EF8               	movlw	-8
 41958  002366  006F FF8F FFE6     	movff	plusw1,postinc1
 41959  00236C  006F FF8F FFE6     	movff	plusw1,postinc1
 41960  002372  006F FF8F FFE6     	movff	plusw1,postinc1
 41961  002378  006F FF8F FFE6     	movff	plusw1,postinc1
 41962  00237E  EC7C  F0BC         	call	___fladd	;wreg free
 41963                           
 41964                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 41965  002382  0EF8               	movlw	248
 41966  002384  26E1               	addwf	fsr1l,f,c
 41967  002386  0EFF               	movlw	255
 41968  002388  22E2               	addwfc	fsr1h,f,c
 41969  00238A  0012               	return		;funcret
 41970  00238C                     __end_of___flsub:
 41971                           	opt callstack 0
 41972                           
 41973 ;; *************** function ___fladd *****************
 41974 ;; Defined at:
 41975 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 41976 ;; Parameters:    Size  Location     Type
 41977 ;;  b               4  [STACK] float 
 41978 ;;  a               4  [STACK] float 
 41979 ;; Auto vars:     Size  Location     Type
 41980 ;;  grs             1  [STACK] unsigned char 
 41981 ;;  bexp            1  [STACK] unsigned char 
 41982 ;;  aexp            1  [STACK] unsigned char 
 41983 ;;  signs           1  [STACK] unsigned char 
 41984 ;; Return value:  Size  Location     Type
 41985 ;;                  4  [STACK] unsigned char 
 41986 ;; Registers used:
 41987 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 41988 ;; Tracked objects:
 41989 ;;		On entry : 0/0
 41990 ;;		On exit  : 0/0
 41991 ;;		Unchanged: 0/0
 41992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41997 ;;Total ram usage:        0 bytes
 41998 ;; Hardware stack levels used:    1
 41999 ;; Hardware stack levels required when called:   15
 42000 ;; This function calls:
 42001 ;;		Nothing
 42002 ;; This function is called by:
 42003 ;;		_main
 42004 ;;		_lp_filter
 42005 ;;		_calc_model_data
 42006 ;;		_efgtoa
 42007 ;;		___asfladd
 42008 ;;		___flsub
 42009 ;; This function uses a reentrant model
 42010 ;;
 42011                           
 42012                           	psect	text155
 42013  0178F8                     __ptext155:
 42014                           	opt callstack 0
 42015  0178F8                     ___fladd:
 42016                           	opt callstack 0
 42017                           
 42018                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 42019  0178F8  52E6               	movf	postinc1,f,c
 42020  0178FA  52E6               	movf	postinc1,f,c
 42021  0178FC  52E6               	movf	postinc1,f,c
 42022  0178FE  52E6               	movf	postinc1,f,c
 42023                           
 42024                           ;stkvar	_b @ sp[(-4)+-4]
 42025                           
 42026                           ;incstack = 0
 42027 ;; hardware stack exceeded
 42028  017900  0EFB               	movlw	251
 42029  017902  24E1               	addwf	fsr1l,w,c
 42030  017904  6ED9               	movwf	fsr2l,c
 42031  017906  0EFF               	movlw	255
 42032  017908  20E2               	addwfc	fsr1h,w,c
 42033  01790A  6EDA               	movwf	fsr2h,c
 42034  01790C  50DF               	movf	indf2,w,c
 42035  01790E  6E35               	movwf	(btemp+11)^0,c
 42036  017910  0E80               	movlw	128
 42037  017912  1635               	andwf	(btemp+11)^0,f,c
 42038                           
 42039                           ;stkvar	_signs @ sp[(-4)+3]
 42040  017914  0EFF               	movlw	-1
 42041  017916  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42042                           
 42043                           ;stkvar	_b @ sp[(-4)+-4]
 42044  01791C  0EFB               	movlw	251
 42045  01791E  24E1               	addwf	fsr1l,w,c
 42046  017920  6ED9               	movwf	fsr2l,c
 42047  017922  0EFF               	movlw	255
 42048  017924  20E2               	addwfc	fsr1h,w,c
 42049  017926  6EDA               	movwf	fsr2h,c
 42050  017928  50DF               	movf	indf2,w,c
 42051  01792A  6E35               	movwf	(btemp+11)^0,c
 42052  01792C  90D8               	bcf	status,0,c
 42053  01792E  3435               	rlcf	(btemp+11)^0,w,c
 42054  017930  6E34               	movwf	(btemp+10)^0,c
 42055                           
 42056                           ;stkvar	_bexp @ sp[(-4)+1]
 42057  017932  0EFD               	movlw	-3
 42058  017934  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42059                           
 42060                           ;stkvar	_b @ sp[(-4)+-4]
 42061  01793A  0EFA               	movlw	250
 42062  01793C  24E1               	addwf	fsr1l,w,c
 42063  01793E  6ED9               	movwf	fsr2l,c
 42064  017940  0EFF               	movlw	255
 42065  017942  20E2               	addwfc	fsr1h,w,c
 42066  017944  6EDA               	movwf	fsr2h,c
 42067  017946  AEDF               	btfss	indf2,7,c
 42068  017948  D002               	goto	l9877
 42069                           
 42070                           ;stkvar	_bexp @ sp[(-4)+1]
 42071  01794A  0EFD               	movlw	-3
 42072  01794C  80E3               	bsf	plusw1,0,c
 42073  01794E                     l9877:
 42074                           
 42075                           ;stkvar	_bexp @ sp[(-4)+1]
 42076  01794E  0EFD               	movlw	-3
 42077  017950  50E3               	movf	plusw1,w,c
 42078  017952  B4D8               	btfsc	status,2,c
 42079  017954  D027               	goto	l9887
 42080                           
 42081                           ;stkvar	_bexp @ sp[(-4)+1]
 42082  017956  0EFD               	movlw	-3
 42083  017958  28E3               	incf	plusw1,w,c
 42084  01795A  A4D8               	btfss	status,2,c
 42085  01795C  D018               	goto	l9883
 42086  01795E  0E00               	movlw	0
 42087  017960  6E32               	movwf	(btemp+8)^0,c
 42088  017962  0E00               	movlw	0
 42089  017964  6E33               	movwf	(btemp+9)^0,c
 42090  017966  0E00               	movlw	0
 42091  017968  6E34               	movwf	(btemp+10)^0,c
 42092  01796A  0E00               	movlw	0
 42093  01796C  6E35               	movwf	(btemp+11)^0,c
 42094                           
 42095                           ;stkvar	_b @ sp[(-4)+-4]
 42096  01796E  0EF8               	movlw	-8
 42097  017970  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42098  017976  0EF9               	movlw	-7
 42099  017978  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42100  01797E  0EFA               	movlw	-6
 42101  017980  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42102  017986  0EFB               	movlw	-5
 42103  017988  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42104  01798E                     l9883:
 42105                           
 42106                           ;stkvar	_b @ sp[(-4)+-4]
 42107  01798E  0EFA               	movlw	-6
 42108  017990  8EE3               	bsf	plusw1,7,c
 42109                           
 42110                           ;stkvar	_b @ sp[(-4)+-4]
 42111  017992  0EFB               	movlw	251
 42112  017994  24E1               	addwf	fsr1l,w,c
 42113  017996  6ED9               	movwf	fsr2l,c
 42114  017998  0EFF               	movlw	255
 42115  01799A  20E2               	addwfc	fsr1h,w,c
 42116  01799C  6EDA               	movwf	fsr2h,c
 42117  01799E  0E00               	movlw	0
 42118  0179A0  6EDF               	movwf	indf2,c
 42119  0179A2  D018               	goto	l9889
 42120  0179A4                     l9887:
 42121  0179A4  0E00               	movlw	0
 42122  0179A6  6E32               	movwf	(btemp+8)^0,c
 42123  0179A8  0E00               	movlw	0
 42124  0179AA  6E33               	movwf	(btemp+9)^0,c
 42125  0179AC  0E00               	movlw	0
 42126  0179AE  6E34               	movwf	(btemp+10)^0,c
 42127  0179B0  0E00               	movlw	0
 42128  0179B2  6E35               	movwf	(btemp+11)^0,c
 42129                           
 42130                           ;stkvar	_b @ sp[(-4)+-4]
 42131  0179B4  0EF8               	movlw	-8
 42132  0179B6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42133  0179BC  0EF9               	movlw	-7
 42134  0179BE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42135  0179C4  0EFA               	movlw	-6
 42136  0179C6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42137  0179CC  0EFB               	movlw	-5
 42138  0179CE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42139  0179D4                     l9889:
 42140                           
 42141                           ;stkvar	_a @ sp[(-4)+-8]
 42142  0179D4  0EF7               	movlw	247
 42143  0179D6  24E1               	addwf	fsr1l,w,c
 42144  0179D8  6ED9               	movwf	fsr2l,c
 42145  0179DA  0EFF               	movlw	255
 42146  0179DC  20E2               	addwfc	fsr1h,w,c
 42147  0179DE  6EDA               	movwf	fsr2h,c
 42148  0179E0  50DF               	movf	indf2,w,c
 42149  0179E2  6E35               	movwf	(btemp+11)^0,c
 42150  0179E4  0E80               	movlw	128
 42151  0179E6  1635               	andwf	(btemp+11)^0,f,c
 42152                           
 42153                           ;stkvar	_aexp @ sp[(-4)+2]
 42154  0179E8  0EFE               	movlw	-2
 42155  0179EA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42156                           
 42157                           ;stkvar	_signs @ sp[(-4)+3]
 42158                           ;stkvar	_aexp @ sp[(-4)+2]
 42159  0179F0  50E1               	movf	fsr1l,w,c
 42160  0179F2  0FFE               	addlw	-2
 42161  0179F4  6ED9               	movwf	fsr2l,c
 42162  0179F6  50E2               	movf	fsr1h,w,c
 42163  0179F8  6EDA               	movwf	fsr2h,c
 42164  0179FA  0EFF               	movlw	255
 42165  0179FC  22DA               	addwfc	fsr2h,f,c
 42166  0179FE  0EFF               	movlw	-1
 42167  017A00  50E3               	movf	plusw1,w,c
 42168  017A02  18DE               	xorwf	postinc2,w,c
 42169  017A04  B4D8               	btfsc	status,2,c
 42170  017A06  D002               	goto	l9895
 42171                           
 42172                           ;stkvar	_signs @ sp[(-4)+3]
 42173  017A08  0EFF               	movlw	-1
 42174  017A0A  8CE3               	bsf	plusw1,6,c
 42175  017A0C                     l9895:
 42176                           
 42177                           ;stkvar	_a @ sp[(-4)+-8]
 42178  017A0C  0EF7               	movlw	247
 42179  017A0E  24E1               	addwf	fsr1l,w,c
 42180  017A10  6ED9               	movwf	fsr2l,c
 42181  017A12  0EFF               	movlw	255
 42182  017A14  20E2               	addwfc	fsr1h,w,c
 42183  017A16  6EDA               	movwf	fsr2h,c
 42184  017A18  50DF               	movf	indf2,w,c
 42185  017A1A  6E35               	movwf	(btemp+11)^0,c
 42186  017A1C  90D8               	bcf	status,0,c
 42187  017A1E  3435               	rlcf	(btemp+11)^0,w,c
 42188  017A20  6E34               	movwf	(btemp+10)^0,c
 42189                           
 42190                           ;stkvar	_aexp @ sp[(-4)+2]
 42191  017A22  0EFE               	movlw	-2
 42192  017A24  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42193                           
 42194                           ;stkvar	_a @ sp[(-4)+-8]
 42195  017A2A  0EF6               	movlw	246
 42196  017A2C  24E1               	addwf	fsr1l,w,c
 42197  017A2E  6ED9               	movwf	fsr2l,c
 42198  017A30  0EFF               	movlw	255
 42199  017A32  20E2               	addwfc	fsr1h,w,c
 42200  017A34  6EDA               	movwf	fsr2h,c
 42201  017A36  AEDF               	btfss	indf2,7,c
 42202  017A38  D002               	goto	l9901
 42203                           
 42204                           ;stkvar	_aexp @ sp[(-4)+2]
 42205  017A3A  0EFE               	movlw	-2
 42206  017A3C  80E3               	bsf	plusw1,0,c
 42207  017A3E                     l9901:
 42208                           
 42209                           ;stkvar	_aexp @ sp[(-4)+2]
 42210  017A3E  0EFE               	movlw	-2
 42211  017A40  50E3               	movf	plusw1,w,c
 42212  017A42  B4D8               	btfsc	status,2,c
 42213  017A44  D027               	goto	l9911
 42214                           
 42215                           ;stkvar	_aexp @ sp[(-4)+2]
 42216  017A46  0EFE               	movlw	-2
 42217  017A48  28E3               	incf	plusw1,w,c
 42218  017A4A  A4D8               	btfss	status,2,c
 42219  017A4C  D018               	goto	l9907
 42220  017A4E  0E00               	movlw	0
 42221  017A50  6E32               	movwf	(btemp+8)^0,c
 42222  017A52  0E00               	movlw	0
 42223  017A54  6E33               	movwf	(btemp+9)^0,c
 42224  017A56  0E00               	movlw	0
 42225  017A58  6E34               	movwf	(btemp+10)^0,c
 42226  017A5A  0E00               	movlw	0
 42227  017A5C  6E35               	movwf	(btemp+11)^0,c
 42228                           
 42229                           ;stkvar	_a @ sp[(-4)+-8]
 42230  017A5E  0EF4               	movlw	-12
 42231  017A60  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42232  017A66  0EF5               	movlw	-11
 42233  017A68  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42234  017A6E  0EF6               	movlw	-10
 42235  017A70  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42236  017A76  0EF7               	movlw	-9
 42237  017A78  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42238  017A7E                     l9907:
 42239                           
 42240                           ;stkvar	_a @ sp[(-4)+-8]
 42241  017A7E  0EF6               	movlw	-10
 42242  017A80  8EE3               	bsf	plusw1,7,c
 42243                           
 42244                           ;stkvar	_a @ sp[(-4)+-8]
 42245  017A82  0EF7               	movlw	247
 42246  017A84  24E1               	addwf	fsr1l,w,c
 42247  017A86  6ED9               	movwf	fsr2l,c
 42248  017A88  0EFF               	movlw	255
 42249  017A8A  20E2               	addwfc	fsr1h,w,c
 42250  017A8C  6EDA               	movwf	fsr2h,c
 42251  017A8E  0E00               	movlw	0
 42252  017A90  6EDF               	movwf	indf2,c
 42253  017A92  D018               	goto	l9913
 42254  017A94                     l9911:
 42255  017A94  0E00               	movlw	0
 42256  017A96  6E32               	movwf	(btemp+8)^0,c
 42257  017A98  0E00               	movlw	0
 42258  017A9A  6E33               	movwf	(btemp+9)^0,c
 42259  017A9C  0E00               	movlw	0
 42260  017A9E  6E34               	movwf	(btemp+10)^0,c
 42261  017AA0  0E00               	movlw	0
 42262  017AA2  6E35               	movwf	(btemp+11)^0,c
 42263                           
 42264                           ;stkvar	_a @ sp[(-4)+-8]
 42265  017AA4  0EF4               	movlw	-12
 42266  017AA6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42267  017AAC  0EF5               	movlw	-11
 42268  017AAE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42269  017AB4  0EF6               	movlw	-10
 42270  017AB6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42271  017ABC  0EF7               	movlw	-9
 42272  017ABE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42273  017AC4                     l9913:
 42274                           
 42275                           ;stkvar	_bexp @ sp[(-4)+1]
 42276                           ;stkvar	_aexp @ sp[(-4)+2]
 42277  017AC4  50E1               	movf	fsr1l,w,c
 42278  017AC6  0FFE               	addlw	-2
 42279  017AC8  6ED9               	movwf	fsr2l,c
 42280  017ACA  50E2               	movf	fsr1h,w,c
 42281  017ACC  6EDA               	movwf	fsr2h,c
 42282  017ACE  0EFF               	movlw	255
 42283  017AD0  22DA               	addwfc	fsr2h,f,c
 42284  017AD2  0EFD               	movlw	-3
 42285  017AD4  50E3               	movf	plusw1,w,c
 42286  017AD6  5CDE               	subwf	postinc2,w,c
 42287  017AD8  B0D8               	btfsc	status,0,c
 42288  017ADA  D0A4               	goto	l9949
 42289                           
 42290                           ;stkvar	_signs @ sp[(-4)+3]
 42291  017ADC  0EFF               	movlw	-1
 42292  017ADE  ACE3               	btfss	plusw1,6,c
 42293  017AE0  D002               	goto	l9919
 42294                           
 42295                           ;stkvar	_signs @ sp[(-4)+3]
 42296  017AE2  0EFF               	movlw	-1
 42297  017AE4  7EE3               	btg	plusw1,7,c
 42298  017AE6                     l9919:
 42299                           
 42300                           ;stkvar	_bexp @ sp[(-4)+1]
 42301                           ;stkvar	_grs @ sp[(-4)+0]
 42302  017AE6  0EFD               	movlw	-3
 42303  017AE8  006F FF8C  F02A    	movff	plusw1,btemp
 42304  017AEE  0EFC               	movlw	-4
 42305  017AF0  0060  F0AB  FFE3   	movff	btemp,plusw1
 42306                           
 42307                           ;stkvar	_aexp @ sp[(-4)+2]
 42308                           ;stkvar	_bexp @ sp[(-4)+1]
 42309  017AF6  0EFE               	movlw	-2
 42310  017AF8  006F FF8C  F02A    	movff	plusw1,btemp
 42311  017AFE  0EFD               	movlw	-3
 42312  017B00  0060  F0AB  FFE3   	movff	btemp,plusw1
 42313                           
 42314                           ;stkvar	_grs @ sp[(-4)+0]
 42315                           ;stkvar	_aexp @ sp[(-4)+2]
 42316  017B06  0EFC               	movlw	-4
 42317  017B08  006F FF8C  F02A    	movff	plusw1,btemp
 42318  017B0E  0EFE               	movlw	-2
 42319  017B10  0060  F0AB  FFE3   	movff	btemp,plusw1
 42320                           
 42321                           ;stkvar	_b @ sp[(-4)+-4]
 42322                           ;stkvar	_grs @ sp[(-4)+0]
 42323  017B16  0EF8               	movlw	-8
 42324  017B18  006F FF8C  F02A    	movff	plusw1,btemp
 42325  017B1E  0EFC               	movlw	-4
 42326  017B20  0060  F0AB  FFE3   	movff	btemp,plusw1
 42327                           
 42328                           ;stkvar	_a @ sp[(-4)+-8]
 42329                           ;stkvar	_b @ sp[(-4)+-4]
 42330  017B26  0EF4               	movlw	-12
 42331  017B28  006F FF8C  F02A    	movff	plusw1,btemp
 42332  017B2E  0EF8               	movlw	-8
 42333  017B30  0060  F0AB  FFE3   	movff	btemp,plusw1
 42334                           
 42335                           ;stkvar	_grs @ sp[(-4)+0]
 42336                           ;stkvar	_a @ sp[(-4)+-8]
 42337  017B36  0EFC               	movlw	-4
 42338  017B38  006F FF8C  F02A    	movff	plusw1,btemp
 42339  017B3E  0EF4               	movlw	-12
 42340  017B40  0060  F0AB  FFE3   	movff	btemp,plusw1
 42341                           
 42342                           ;stkvar	_b @ sp[(-4)+-4]
 42343  017B46  0EF9               	movlw	249
 42344  017B48  24E1               	addwf	fsr1l,w,c
 42345  017B4A  6ED9               	movwf	fsr2l,c
 42346  017B4C  0EFF               	movlw	255
 42347  017B4E  20E2               	addwfc	fsr1h,w,c
 42348  017B50  6EDA               	movwf	fsr2h,c
 42349  017B52  50DF               	movf	indf2,w,c
 42350  017B54  6E35               	movwf	(btemp+11)^0,c
 42351                           
 42352                           ;stkvar	_grs @ sp[(-4)+0]
 42353  017B56  0EFC               	movlw	-4
 42354  017B58  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42355                           
 42356                           ;stkvar	_a @ sp[(-4)+-8]
 42357  017B5E  0EF5               	movlw	245
 42358  017B60  24E1               	addwf	fsr1l,w,c
 42359  017B62  6ED9               	movwf	fsr2l,c
 42360  017B64  0EFF               	movlw	255
 42361  017B66  20E2               	addwfc	fsr1h,w,c
 42362  017B68  6EDA               	movwf	fsr2h,c
 42363                           
 42364                           ;stkvar	_b @ sp[(-4)+-4]
 42365  017B6A  0EF9               	movlw	249
 42366  017B6C  24E1               	addwf	fsr1l,w,c
 42367  017B6E  6EE9               	movwf	fsr0l,c
 42368  017B70  0EFF               	movlw	255
 42369  017B72  20E2               	addwfc	fsr1h,w,c
 42370  017B74  6EEA               	movwf	fsr0h,c
 42371  017B76  006F FF7F FFEF     	movff	indf2,indf0
 42372                           
 42373                           ;stkvar	_grs @ sp[(-4)+0]
 42374                           ;stkvar	_a @ sp[(-4)+-8]
 42375  017B7C  0EF5               	movlw	245
 42376  017B7E  24E1               	addwf	fsr1l,w,c
 42377  017B80  6ED9               	movwf	fsr2l,c
 42378  017B82  0EFF               	movlw	255
 42379  017B84  20E2               	addwfc	fsr1h,w,c
 42380  017B86  6EDA               	movwf	fsr2h,c
 42381  017B88  0EFC               	movlw	-4
 42382  017B8A  006F FF8F FFDF     	movff	plusw1,indf2
 42383                           
 42384                           ;stkvar	_b @ sp[(-4)+-4]
 42385  017B90  0EFA               	movlw	250
 42386  017B92  24E1               	addwf	fsr1l,w,c
 42387  017B94  6ED9               	movwf	fsr2l,c
 42388  017B96  0EFF               	movlw	255
 42389  017B98  20E2               	addwfc	fsr1h,w,c
 42390  017B9A  6EDA               	movwf	fsr2h,c
 42391  017B9C  50DF               	movf	indf2,w,c
 42392  017B9E  6E35               	movwf	(btemp+11)^0,c
 42393                           
 42394                           ;stkvar	_grs @ sp[(-4)+0]
 42395  017BA0  0EFC               	movlw	-4
 42396  017BA2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42397                           
 42398                           ;stkvar	_a @ sp[(-4)+-8]
 42399  017BA8  0EF6               	movlw	246
 42400  017BAA  24E1               	addwf	fsr1l,w,c
 42401  017BAC  6ED9               	movwf	fsr2l,c
 42402  017BAE  0EFF               	movlw	255
 42403  017BB0  20E2               	addwfc	fsr1h,w,c
 42404  017BB2  6EDA               	movwf	fsr2h,c
 42405                           
 42406                           ;stkvar	_b @ sp[(-4)+-4]
 42407  017BB4  0EFA               	movlw	250
 42408  017BB6  24E1               	addwf	fsr1l,w,c
 42409  017BB8  6EE9               	movwf	fsr0l,c
 42410  017BBA  0EFF               	movlw	255
 42411  017BBC  20E2               	addwfc	fsr1h,w,c
 42412  017BBE  6EEA               	movwf	fsr0h,c
 42413  017BC0  006F FF7F FFEF     	movff	indf2,indf0
 42414                           
 42415                           ;stkvar	_grs @ sp[(-4)+0]
 42416                           ;stkvar	_a @ sp[(-4)+-8]
 42417  017BC6  0EF6               	movlw	246
 42418  017BC8  24E1               	addwf	fsr1l,w,c
 42419  017BCA  6ED9               	movwf	fsr2l,c
 42420  017BCC  0EFF               	movlw	255
 42421  017BCE  20E2               	addwfc	fsr1h,w,c
 42422  017BD0  6EDA               	movwf	fsr2h,c
 42423  017BD2  0EFC               	movlw	-4
 42424  017BD4  006F FF8F FFDF     	movff	plusw1,indf2
 42425                           
 42426                           ;stkvar	_b @ sp[(-4)+-4]
 42427  017BDA  0EFB               	movlw	251
 42428  017BDC  24E1               	addwf	fsr1l,w,c
 42429  017BDE  6ED9               	movwf	fsr2l,c
 42430  017BE0  0EFF               	movlw	255
 42431  017BE2  20E2               	addwfc	fsr1h,w,c
 42432  017BE4  6EDA               	movwf	fsr2h,c
 42433  017BE6  50DF               	movf	indf2,w,c
 42434  017BE8  6E35               	movwf	(btemp+11)^0,c
 42435                           
 42436                           ;stkvar	_grs @ sp[(-4)+0]
 42437  017BEA  0EFC               	movlw	-4
 42438  017BEC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42439                           
 42440                           ;stkvar	_a @ sp[(-4)+-8]
 42441  017BF2  0EF7               	movlw	247
 42442  017BF4  24E1               	addwf	fsr1l,w,c
 42443  017BF6  6ED9               	movwf	fsr2l,c
 42444  017BF8  0EFF               	movlw	255
 42445  017BFA  20E2               	addwfc	fsr1h,w,c
 42446  017BFC  6EDA               	movwf	fsr2h,c
 42447                           
 42448                           ;stkvar	_b @ sp[(-4)+-4]
 42449  017BFE  0EFB               	movlw	251
 42450  017C00  24E1               	addwf	fsr1l,w,c
 42451  017C02  6EE9               	movwf	fsr0l,c
 42452  017C04  0EFF               	movlw	255
 42453  017C06  20E2               	addwfc	fsr1h,w,c
 42454  017C08  6EEA               	movwf	fsr0h,c
 42455  017C0A  006F FF7F FFEF     	movff	indf2,indf0
 42456                           
 42457                           ;stkvar	_grs @ sp[(-4)+0]
 42458                           ;stkvar	_a @ sp[(-4)+-8]
 42459  017C10  0EF7               	movlw	247
 42460  017C12  24E1               	addwf	fsr1l,w,c
 42461  017C14  6ED9               	movwf	fsr2l,c
 42462  017C16  0EFF               	movlw	255
 42463  017C18  20E2               	addwfc	fsr1h,w,c
 42464  017C1A  6EDA               	movwf	fsr2h,c
 42465  017C1C  0EFC               	movlw	-4
 42466  017C1E  006F FF8F FFDF     	movff	plusw1,indf2
 42467  017C24                     l9949:
 42468                           
 42469                           ;stkvar	_grs @ sp[(-4)+0]
 42470  017C24  0EFC               	movlw	-4
 42471  017C26  6AE3               	clrf	plusw1,c
 42472                           
 42473                           ;stkvar	_aexp @ sp[(-4)+2]
 42474  017C28  0EFE               	movlw	-2
 42475  017C2A  50E3               	movf	plusw1,w,c
 42476  017C2C  6E34               	movwf	(btemp+10)^0,c
 42477  017C2E  6A35               	clrf	(btemp+11)^0,c
 42478                           
 42479                           ;stkvar	_bexp @ sp[(-4)+1]
 42480  017C30  0EFD               	movlw	-3
 42481  017C32  50E3               	movf	plusw1,w,c
 42482  017C34  5E34               	subwf	(btemp+10)^0,f,c
 42483  017C36  0E00               	movlw	0
 42484  017C38  5A35               	subwfb	(btemp+11)^0,f,c
 42485  017C3A  BE35               	btfsc	(btemp+11)^0,7,c
 42486  017C3C  D062               	goto	l9973
 42487  017C3E  5035               	movf	(btemp+11)^0,w,c
 42488  017C40  E104               	bnz	u7380
 42489  017C42  0E1A               	movlw	26
 42490  017C44  5C34               	subwf	(btemp+10)^0,w,c
 42491  017C46  A0D8               	btfss	status,0,c
 42492  017C48  D05C               	goto	l9973
 42493  017C4A                     u7380:
 42494                           
 42495                           ;stkvar	_b @ sp[(-4)+-4]
 42496  017C4A  0EF8               	movlw	-8
 42497  017C4C  50E3               	movf	plusw1,w,c
 42498  017C4E  E10A               	bnz	u7391
 42499  017C50  0EF9               	movlw	-7
 42500  017C52  50E3               	movf	plusw1,w,c
 42501  017C54  E107               	bnz	u7391
 42502  017C56  0EFA               	movlw	-6
 42503  017C58  50E3               	movf	plusw1,w,c
 42504  017C5A  E104               	bnz	u7391
 42505  017C5C  0EFB               	movlw	-5
 42506  017C5E  50E3               	movf	plusw1,w,c
 42507  017C60  B4D8               	btfsc	status,2,c
 42508  017C62  D003               	goto	u7390
 42509  017C64                     u7391:
 42510  017C64  6A35               	clrf	(btemp+11)^0,c
 42511  017C66  2A35               	incf	(btemp+11)^0,f,c
 42512  017C68  D001               	goto	u7408
 42513  017C6A                     u7390:
 42514  017C6A  6A35               	clrf	(btemp+11)^0,c
 42515  017C6C                     u7408:
 42516                           
 42517                           ;stkvar	_grs @ sp[(-4)+0]
 42518  017C6C  0EFC               	movlw	-4
 42519  017C6E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42520                           
 42521                           ;stkvar	_b @ sp[(-4)+-4]
 42522  017C74  0EF8               	movlw	-8
 42523  017C76  6AE3               	clrf	plusw1,c
 42524  017C78  0EF9               	movlw	-7
 42525  017C7A  6AE3               	clrf	plusw1,c
 42526  017C7C  0EFA               	movlw	-6
 42527  017C7E  6AE3               	clrf	plusw1,c
 42528  017C80  0EFB               	movlw	-5
 42529  017C82  6AE3               	clrf	plusw1,c
 42530                           
 42531                           ;stkvar	_aexp @ sp[(-4)+2]
 42532                           ;stkvar	_bexp @ sp[(-4)+1]
 42533  017C84  0EFE               	movlw	-2
 42534  017C86  006F FF8C  F02A    	movff	plusw1,btemp
 42535  017C8C  0EFD               	movlw	-3
 42536  017C8E  0060  F0AB  FFE3   	movff	btemp,plusw1
 42537  017C94  D042               	goto	u7440
 42538  017C96                     l9959:
 42539                           
 42540                           ;stkvar	_grs @ sp[(-4)+0]
 42541  017C96  0EFC               	movlw	-4
 42542  017C98  A0E3               	btfss	plusw1,0,c
 42543  017C9A  D00D               	goto	l9963
 42544                           
 42545                           ;stkvar	_grs @ sp[(-4)+0]
 42546  017C9C  0EFC               	movlw	-4
 42547  017C9E  006F FF8C  F035    	movff	plusw1,btemp+11
 42548  017CA4  90D8               	bcf	status,0,c
 42549  017CA6  3235               	rrcf	(btemp+11)^0,f,c
 42550  017CA8  0E01               	movlw	1
 42551  017CAA  1235               	iorwf	(btemp+11)^0,f,c
 42552                           
 42553                           ;stkvar	_grs @ sp[(-4)+0]
 42554  017CAC  0EFC               	movlw	-4
 42555  017CAE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42556  017CB4  D009               	goto	l9965
 42557  017CB6                     l9963:
 42558                           
 42559                           ;stkvar	_grs @ sp[(-4)+0]
 42560  017CB6  50E1               	movf	fsr1l,w,c
 42561  017CB8  0FFC               	addlw	-4
 42562  017CBA  6ED9               	movwf	fsr2l,c
 42563  017CBC  50E2               	movf	fsr1h,w,c
 42564  017CBE  6EDA               	movwf	fsr2h,c
 42565  017CC0  0EFF               	movlw	255
 42566  017CC2  22DA               	addwfc	fsr2h,f,c
 42567  017CC4  90D8               	bcf	status,0,c
 42568  017CC6  32DF               	rrcf	indf2,f,c
 42569  017CC8                     l9965:
 42570                           
 42571                           ;stkvar	_b @ sp[(-4)+-4]
 42572  017CC8  0EF8               	movlw	-8
 42573  017CCA  A0E3               	btfss	plusw1,0,c
 42574  017CCC  D002               	goto	l9969
 42575                           
 42576                           ;stkvar	_grs @ sp[(-4)+0]
 42577  017CCE  0EFC               	movlw	-4
 42578  017CD0  8EE3               	bsf	plusw1,7,c
 42579  017CD2                     l9969:
 42580  017CD2  0E01               	movlw	1
 42581  017CD4  6E35               	movwf	(btemp+11)^0,c
 42582                           
 42583                           ;stkvar	_b @ sp[(-4)+-4]
 42584  017CD6  50E1               	movf	fsr1l,w,c
 42585  017CD8  0FF8               	addlw	-8
 42586  017CDA  6ED9               	movwf	fsr2l,c
 42587  017CDC  50E2               	movf	fsr1h,w,c
 42588  017CDE  6EDA               	movwf	fsr2h,c
 42589  017CE0  0EFF               	movlw	255
 42590  017CE2  22DA               	addwfc	fsr2h,f,c
 42591  017CE4  2835               	incf	(btemp+11)^0,w,c
 42592  017CE6  52DE               	movf	postinc2,f,c
 42593  017CE8  D008               	goto	u7430
 42594  017CEA                     u7435:
 42595  017CEA  52DE               	movf	postinc2,f,c
 42596  017CEC  90D8               	bcf	status,0,c
 42597  017CEE  BEDC               	btfsc	preinc2,7,c
 42598  017CF0  80D8               	bsf	status,0,c
 42599  017CF2  32DD               	rrcf	postdec2,f,c
 42600  017CF4  32DD               	rrcf	postdec2,f,c
 42601  017CF6  32DD               	rrcf	postdec2,f,c
 42602  017CF8  32DE               	rrcf	postinc2,f,c
 42603  017CFA                     u7430:
 42604  017CFA  2EE8               	decfsz	wreg,f,c
 42605  017CFC  D7F6               	goto	u7435
 42606                           
 42607                           ;stkvar	_bexp @ sp[(-4)+1]
 42608  017CFE  0EFD               	movlw	-3
 42609  017D00  2AE3               	incf	plusw1,f,c
 42610  017D02                     l9973:
 42611                           
 42612                           ;stkvar	_aexp @ sp[(-4)+2]
 42613                           ;stkvar	_bexp @ sp[(-4)+1]
 42614  017D02  50E1               	movf	fsr1l,w,c
 42615  017D04  0FFD               	addlw	-3
 42616  017D06  6ED9               	movwf	fsr2l,c
 42617  017D08  50E2               	movf	fsr1h,w,c
 42618  017D0A  6EDA               	movwf	fsr2h,c
 42619  017D0C  0EFF               	movlw	255
 42620  017D0E  22DA               	addwfc	fsr2h,f,c
 42621  017D10  0EFE               	movlw	-2
 42622  017D12  50E3               	movf	plusw1,w,c
 42623  017D14  5CDE               	subwf	postinc2,w,c
 42624  017D16  A0D8               	btfss	status,0,c
 42625  017D18  D7BE               	goto	l9959
 42626  017D1A                     u7440:
 42627                           
 42628                           ;stkvar	_signs @ sp[(-4)+3]
 42629  017D1A  0EFF               	movlw	-1
 42630  017D1C  BCE3               	btfsc	plusw1,6,c
 42631  017D1E  D066               	goto	l10001
 42632                           
 42633                           ;stkvar	_bexp @ sp[(-4)+1]
 42634  017D20  0EFD               	movlw	-3
 42635  017D22  50E3               	movf	plusw1,w,c
 42636  017D24  B4D8               	btfsc	status,2,c
 42637  017D26  D0F2               	goto	u7540
 42638                           
 42639                           ;stkvar	_a @ sp[(-4)+-8]
 42640                           ;stkvar	_b @ sp[(-4)+-4]
 42641  017D28  0EF8               	movlw	-8
 42642  017D2A  50E3               	movf	plusw1,w,c
 42643  017D2C  6E2A               	movwf	btemp^0,c
 42644  017D2E  0EF4               	movlw	-12
 42645  017D30  50E3               	movf	plusw1,w,c
 42646  017D32  262A               	addwf	btemp^0,f,c
 42647  017D34  0EF8               	movlw	-8
 42648  017D36  0060  F0AB  FFE3   	movff	btemp,plusw1
 42649  017D3C  0EF9               	movlw	-7
 42650  017D3E  50E3               	movf	plusw1,w,c
 42651  017D40  6E2A               	movwf	btemp^0,c
 42652  017D42  0EF5               	movlw	-11
 42653  017D44  50E3               	movf	plusw1,w,c
 42654  017D46  222A               	addwfc	btemp^0,f,c
 42655  017D48  0EF9               	movlw	-7
 42656  017D4A  0060  F0AB  FFE3   	movff	btemp,plusw1
 42657  017D50  0EFA               	movlw	-6
 42658  017D52  50E3               	movf	plusw1,w,c
 42659  017D54  6E2A               	movwf	btemp^0,c
 42660  017D56  0EF6               	movlw	-10
 42661  017D58  50E3               	movf	plusw1,w,c
 42662  017D5A  222A               	addwfc	btemp^0,f,c
 42663  017D5C  0EFA               	movlw	-6
 42664  017D5E  0060  F0AB  FFE3   	movff	btemp,plusw1
 42665  017D64  0EFB               	movlw	-5
 42666  017D66  50E3               	movf	plusw1,w,c
 42667  017D68  6E2A               	movwf	btemp^0,c
 42668  017D6A  0EF7               	movlw	-9
 42669  017D6C  50E3               	movf	plusw1,w,c
 42670  017D6E  222A               	addwfc	btemp^0,f,c
 42671  017D70  0EFB               	movlw	-5
 42672  017D72  0060  F0AB  FFE3   	movff	btemp,plusw1
 42673                           
 42674                           ;stkvar	_b @ sp[(-4)+-4]
 42675  017D78  0EFB               	movlw	-5
 42676  017D7A  A0E3               	btfss	plusw1,0,c
 42677  017D7C  D101               	goto	u7580
 42678                           
 42679                           ;stkvar	_grs @ sp[(-4)+0]
 42680  017D7E  0EFC               	movlw	-4
 42681  017D80  A0E3               	btfss	plusw1,0,c
 42682  017D82  D00D               	goto	l9991
 42683                           
 42684                           ;stkvar	_grs @ sp[(-4)+0]
 42685  017D84  0EFC               	movlw	-4
 42686  017D86  006F FF8C  F035    	movff	plusw1,btemp+11
 42687  017D8C  90D8               	bcf	status,0,c
 42688  017D8E  3235               	rrcf	(btemp+11)^0,f,c
 42689  017D90  0E01               	movlw	1
 42690  017D92  1235               	iorwf	(btemp+11)^0,f,c
 42691                           
 42692                           ;stkvar	_grs @ sp[(-4)+0]
 42693  017D94  0EFC               	movlw	-4
 42694  017D96  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42695  017D9C  D009               	goto	l9993
 42696  017D9E                     l9991:
 42697                           
 42698                           ;stkvar	_grs @ sp[(-4)+0]
 42699  017D9E  50E1               	movf	fsr1l,w,c
 42700  017DA0  0FFC               	addlw	-4
 42701  017DA2  6ED9               	movwf	fsr2l,c
 42702  017DA4  50E2               	movf	fsr1h,w,c
 42703  017DA6  6EDA               	movwf	fsr2h,c
 42704  017DA8  0EFF               	movlw	255
 42705  017DAA  22DA               	addwfc	fsr2h,f,c
 42706  017DAC  90D8               	bcf	status,0,c
 42707  017DAE  32DF               	rrcf	indf2,f,c
 42708  017DB0                     l9993:
 42709                           
 42710                           ;stkvar	_b @ sp[(-4)+-4]
 42711  017DB0  0EF8               	movlw	-8
 42712  017DB2  A0E3               	btfss	plusw1,0,c
 42713  017DB4  D002               	goto	l9997
 42714                           
 42715                           ;stkvar	_grs @ sp[(-4)+0]
 42716  017DB6  0EFC               	movlw	-4
 42717  017DB8  8EE3               	bsf	plusw1,7,c
 42718  017DBA                     l9997:
 42719  017DBA  0E01               	movlw	1
 42720  017DBC  6E35               	movwf	(btemp+11)^0,c
 42721                           
 42722                           ;stkvar	_b @ sp[(-4)+-4]
 42723  017DBE  50E1               	movf	fsr1l,w,c
 42724  017DC0  0FF8               	addlw	-8
 42725  017DC2  6ED9               	movwf	fsr2l,c
 42726  017DC4  50E2               	movf	fsr1h,w,c
 42727  017DC6  6EDA               	movwf	fsr2h,c
 42728  017DC8  0EFF               	movlw	255
 42729  017DCA  22DA               	addwfc	fsr2h,f,c
 42730  017DCC  2835               	incf	(btemp+11)^0,w,c
 42731  017DCE  52DE               	movf	postinc2,f,c
 42732  017DD0  D008               	goto	u7500
 42733  017DD2                     u7505:
 42734  017DD2  52DE               	movf	postinc2,f,c
 42735  017DD4  90D8               	bcf	status,0,c
 42736  017DD6  BEDC               	btfsc	preinc2,7,c
 42737  017DD8  80D8               	bsf	status,0,c
 42738  017DDA  32DD               	rrcf	postdec2,f,c
 42739  017DDC  32DD               	rrcf	postdec2,f,c
 42740  017DDE  32DD               	rrcf	postdec2,f,c
 42741  017DE0  32DE               	rrcf	postinc2,f,c
 42742  017DE2                     u7500:
 42743  017DE2  2EE8               	decfsz	wreg,f,c
 42744  017DE4  D7F6               	goto	u7505
 42745                           
 42746                           ;stkvar	_bexp @ sp[(-4)+1]
 42747  017DE6  0EFD               	movlw	-3
 42748  017DE8  2AE3               	incf	plusw1,f,c
 42749  017DEA  D0CA               	goto	u7580
 42750  017DEC                     l10001:
 42751                           
 42752                           ;stkvar	_a @ sp[(-4)+-8]
 42753                           ;stkvar	_b @ sp[(-4)+-4]
 42754  017DEC  50E1               	movf	fsr1l,w,c
 42755  017DEE  0FF8               	addlw	-8
 42756  017DF0  6ED9               	movwf	fsr2l,c
 42757  017DF2  50E2               	movf	fsr1h,w,c
 42758  017DF4  6EDA               	movwf	fsr2h,c
 42759  017DF6  0EFF               	movlw	255
 42760  017DF8  22DA               	addwfc	fsr2h,f,c
 42761  017DFA  0EF4               	movlw	-12
 42762  017DFC  50E3               	movf	plusw1,w,c
 42763  017DFE  5CDE               	subwf	postinc2,w,c
 42764  017E00  0EF5               	movlw	-11
 42765  017E02  50E3               	movf	plusw1,w,c
 42766  017E04  58DE               	subwfb	postinc2,w,c
 42767  017E06  0EF6               	movlw	-10
 42768  017E08  50E3               	movf	plusw1,w,c
 42769  017E0A  58DE               	subwfb	postinc2,w,c
 42770  017E0C  50DE               	movf	postinc2,w,c
 42771  017E0E  0A80               	xorlw	128
 42772  017E10  6E2A               	movwf	btemp^0,c
 42773  017E12  0EF7               	movlw	-9
 42774  017E14  50E3               	movf	plusw1,w,c
 42775  017E16  0A80               	xorlw	128
 42776  017E18  582A               	subwfb	btemp^0,w,c
 42777  017E1A  B0D8               	btfsc	status,0,c
 42778  017E1C  D053               	goto	l10013
 42779                           
 42780                           ;stkvar	_b @ sp[(-4)+-4]
 42781                           ;stkvar	_a @ sp[(-4)+-8]
 42782  017E1E  0EF4               	movlw	-12
 42783  017E20  006F FF8C  F032    	movff	plusw1,btemp+8
 42784  017E26  0EF5               	movlw	-11
 42785  017E28  006F FF8C  F033    	movff	plusw1,btemp+9
 42786  017E2E  0EF6               	movlw	-10
 42787  017E30  006F FF8C  F034    	movff	plusw1,btemp+10
 42788  017E36  0EF7               	movlw	-9
 42789  017E38  006F FF8C  F035    	movff	plusw1,btemp+11
 42790  017E3E  0EF8               	movlw	-8
 42791  017E40  50E3               	movf	plusw1,w,c
 42792  017E42  5E32               	subwf	(btemp+8)^0,f,c
 42793  017E44  0EF9               	movlw	-7
 42794  017E46  50E3               	movf	plusw1,w,c
 42795  017E48  5A33               	subwfb	(btemp+9)^0,f,c
 42796  017E4A  0EFA               	movlw	-6
 42797  017E4C  50E3               	movf	plusw1,w,c
 42798  017E4E  5A34               	subwfb	(btemp+10)^0,f,c
 42799  017E50  0EFB               	movlw	-5
 42800  017E52  50E3               	movf	plusw1,w,c
 42801  017E54  5A35               	subwfb	(btemp+11)^0,f,c
 42802  017E56  0EFF               	movlw	255
 42803  017E58  2432               	addwf	(btemp+8)^0,w,c
 42804  017E5A  6E2E               	movwf	(btemp+4)^0,c
 42805  017E5C  0EFF               	movlw	255
 42806  017E5E  2033               	addwfc	(btemp+9)^0,w,c
 42807  017E60  6E2F               	movwf	(btemp+5)^0,c
 42808  017E62  0EFF               	movlw	255
 42809  017E64  2034               	addwfc	(btemp+10)^0,w,c
 42810  017E66  6E30               	movwf	(btemp+6)^0,c
 42811  017E68  0EFF               	movlw	255
 42812  017E6A  2035               	addwfc	(btemp+11)^0,w,c
 42813  017E6C  6E31               	movwf	(btemp+7)^0,c
 42814                           
 42815                           ;stkvar	_b @ sp[(-4)+-4]
 42816  017E6E  0EF8               	movlw	-8
 42817  017E70  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 42818  017E76  0EF9               	movlw	-7
 42819  017E78  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 42820  017E7E  0EFA               	movlw	-6
 42821  017E80  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 42822  017E86  0EFB               	movlw	-5
 42823  017E88  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 42824                           
 42825                           ;stkvar	_signs @ sp[(-4)+3]
 42826  017E8E  0EFF               	movlw	-1
 42827  017E90  7EE3               	btg	plusw1,7,c
 42828                           
 42829                           ;stkvar	_grs @ sp[(-4)+0]
 42830  017E92  0EFC               	movlw	-4
 42831  017E94  50E3               	movf	plusw1,w,c
 42832  017E96  0800               	sublw	0
 42833  017E98  6E35               	movwf	(btemp+11)^0,c
 42834                           
 42835                           ;stkvar	_grs @ sp[(-4)+0]
 42836  017E9A  0EFC               	movlw	-4
 42837  017E9C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42838                           
 42839                           ;stkvar	_grs @ sp[(-4)+0]
 42840  017EA2  0EFC               	movlw	-4
 42841  017EA4  50E3               	movf	plusw1,w,c
 42842  017EA6  A4D8               	btfss	status,2,c
 42843  017EA8  D020               	goto	l10015
 42844                           
 42845                           ;stkvar	_b @ sp[(-4)+-4]
 42846  017EAA  50E1               	movf	fsr1l,w,c
 42847  017EAC  0FF8               	addlw	-8
 42848  017EAE  6ED9               	movwf	fsr2l,c
 42849  017EB0  50E2               	movf	fsr1h,w,c
 42850  017EB2  6EDA               	movwf	fsr2h,c
 42851  017EB4  0EFF               	movlw	255
 42852  017EB6  22DA               	addwfc	fsr2h,f,c
 42853  017EB8  2ADE               	incf	postinc2,f,c
 42854  017EBA  0E00               	movlw	0
 42855  017EBC  22DE               	addwfc	postinc2,f,c
 42856  017EBE  22DE               	addwfc	postinc2,f,c
 42857  017EC0  22DE               	addwfc	postinc2,f,c
 42858  017EC2  D013               	goto	l10015
 42859  017EC4                     l10013:
 42860                           
 42861                           ;stkvar	_a @ sp[(-4)+-8]
 42862                           ;stkvar	_b @ sp[(-4)+-4]
 42863  017EC4  50E1               	movf	fsr1l,w,c
 42864  017EC6  0FF8               	addlw	-8
 42865  017EC8  6ED9               	movwf	fsr2l,c
 42866  017ECA  50E2               	movf	fsr1h,w,c
 42867  017ECC  6EDA               	movwf	fsr2h,c
 42868  017ECE  0EFF               	movlw	255
 42869  017ED0  22DA               	addwfc	fsr2h,f,c
 42870  017ED2  0EF4               	movlw	-12
 42871  017ED4  50E3               	movf	plusw1,w,c
 42872  017ED6  5EDE               	subwf	postinc2,f,c
 42873  017ED8  0EF5               	movlw	-11
 42874  017EDA  50E3               	movf	plusw1,w,c
 42875  017EDC  5ADE               	subwfb	postinc2,f,c
 42876  017EDE  0EF6               	movlw	-10
 42877  017EE0  50E3               	movf	plusw1,w,c
 42878  017EE2  5ADE               	subwfb	postinc2,f,c
 42879  017EE4  0EF7               	movlw	-9
 42880  017EE6  50E3               	movf	plusw1,w,c
 42881  017EE8  5ADE               	subwfb	postinc2,f,c
 42882  017EEA                     l10015:
 42883                           
 42884                           ;stkvar	_b @ sp[(-4)+-4]
 42885  017EEA  0EF8               	movlw	-8
 42886  017EEC  50E3               	movf	plusw1,w,c
 42887  017EEE  E145               	bnz	l10037
 42888  017EF0  0EF9               	movlw	-7
 42889  017EF2  50E3               	movf	plusw1,w,c
 42890  017EF4  E142               	bnz	l10037
 42891  017EF6  0EFA               	movlw	-6
 42892  017EF8  50E3               	movf	plusw1,w,c
 42893  017EFA  E13F               	bnz	l10037
 42894  017EFC  0EFB               	movlw	-5
 42895  017EFE  50E3               	movf	plusw1,w,c
 42896  017F00  A4D8               	btfss	status,2,c
 42897  017F02  D03B               	goto	l10037
 42898                           
 42899                           ;stkvar	_grs @ sp[(-4)+0]
 42900  017F04  0EFC               	movlw	-4
 42901  017F06  50E3               	movf	plusw1,w,c
 42902  017F08  A4D8               	btfss	status,2,c
 42903  017F0A  D037               	goto	l10037
 42904  017F0C                     u7540:
 42905  017F0C  0E00               	movlw	0
 42906  017F0E  6E2A               	movwf	btemp^0,c
 42907  017F10  0E00               	movlw	0
 42908  017F12  6E2B               	movwf	(btemp+1)^0,c
 42909  017F14  0E00               	movlw	0
 42910  017F16  6E2C               	movwf	(btemp+2)^0,c
 42911  017F18  0E00               	movlw	0
 42912  017F1A  6E2D               	movwf	(btemp+3)^0,c
 42913  017F1C  D0C6               	goto	l3270
 42914  017F1E                     l10023:
 42915                           
 42916                           ;stkvar	_b @ sp[(-4)+-4]
 42917  017F1E  90D8               	bcf	status,0,c
 42918  017F20  0EF8               	movlw	-8
 42919  017F22  36E3               	rlcf	plusw1,f,c
 42920  017F24  0EF9               	movlw	-7
 42921  017F26  36E3               	rlcf	plusw1,f,c
 42922  017F28  0EFA               	movlw	-6
 42923  017F2A  36E3               	rlcf	plusw1,f,c
 42924  017F2C  0EFB               	movlw	-5
 42925  017F2E  36E3               	rlcf	plusw1,f,c
 42926                           
 42927                           ;stkvar	_grs @ sp[(-4)+0]
 42928  017F30  0EFC               	movlw	-4
 42929  017F32  AEE3               	btfss	plusw1,7,c
 42930  017F34  D002               	goto	l3282
 42931                           
 42932                           ;stkvar	_b @ sp[(-4)+-4]
 42933  017F36  0EF8               	movlw	-8
 42934  017F38  80E3               	bsf	plusw1,0,c
 42935  017F3A                     l3282:
 42936                           
 42937                           ;stkvar	_grs @ sp[(-4)+0]
 42938  017F3A  0EFC               	movlw	-4
 42939  017F3C  A0E3               	btfss	plusw1,0,c
 42940  017F3E  D00E               	goto	l10031
 42941                           
 42942                           ;stkvar	_grs @ sp[(-4)+0]
 42943  017F40  0EFC               	movlw	-4
 42944  017F42  006F FF8C  F035    	movff	plusw1,btemp+11
 42945  017F48  90D8               	bcf	status,0,c
 42946  017F4A  3435               	rlcf	(btemp+11)^0,w,c
 42947  017F4C  6E34               	movwf	(btemp+10)^0,c
 42948  017F4E  0E01               	movlw	1
 42949  017F50  1234               	iorwf	(btemp+10)^0,f,c
 42950                           
 42951                           ;stkvar	_grs @ sp[(-4)+0]
 42952  017F52  0EFC               	movlw	-4
 42953  017F54  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42954  017F5A  D009               	goto	l10033
 42955  017F5C                     l10031:
 42956                           
 42957                           ;stkvar	_grs @ sp[(-4)+0]
 42958  017F5C  50E1               	movf	fsr1l,w,c
 42959  017F5E  0FFC               	addlw	-4
 42960  017F60  6ED9               	movwf	fsr2l,c
 42961  017F62  50E2               	movf	fsr1h,w,c
 42962  017F64  6EDA               	movwf	fsr2h,c
 42963  017F66  0EFF               	movlw	255
 42964  017F68  22DA               	addwfc	fsr2h,f,c
 42965  017F6A  90D8               	bcf	status,0,c
 42966  017F6C  36DF               	rlcf	indf2,f,c
 42967  017F6E                     l10033:
 42968                           
 42969                           ;stkvar	_bexp @ sp[(-4)+1]
 42970  017F6E  0EFD               	movlw	-3
 42971  017F70  50E3               	movf	plusw1,w,c
 42972  017F72  B4D8               	btfsc	status,2,c
 42973  017F74  D002               	goto	l10037
 42974                           
 42975                           ;stkvar	_bexp @ sp[(-4)+1]
 42976  017F76  0EFD               	movlw	-3
 42977  017F78  06E3               	decf	plusw1,f,c
 42978  017F7A                     l10037:
 42979                           
 42980                           ;stkvar	_b @ sp[(-4)+-4]
 42981  017F7A  0EFA               	movlw	-6
 42982  017F7C  AEE3               	btfss	plusw1,7,c
 42983  017F7E  D7CF               	goto	l10023
 42984  017F80                     u7580:
 42985                           
 42986                           ;stkvar	_aexp @ sp[(-4)+2]
 42987  017F80  0EFE               	movlw	-2
 42988  017F82  6AE3               	clrf	plusw1,c
 42989                           
 42990                           ;stkvar	_grs @ sp[(-4)+0]
 42991  017F84  0EFC               	movlw	-4
 42992  017F86  AEE3               	btfss	plusw1,7,c
 42993  017F88  D00F               	goto	l10051
 42994                           
 42995                           ;stkvar	_grs @ sp[(-4)+0]
 42996  017F8A  0EFC               	movlw	-4
 42997  017F8C  006F FF8C  F035    	movff	plusw1,btemp+11
 42998  017F92  0E7F               	movlw	127
 42999  017F94  1635               	andwf	(btemp+11)^0,f,c
 43000  017F96  B4D8               	btfsc	status,2,c
 43001  017F98  D004               	goto	l10047
 43002  017F9A                     u7600:
 43003                           
 43004                           ;stkvar	_aexp @ sp[(-4)+2]
 43005  017F9A  0EFE               	movlw	-2
 43006  017F9C  6AE3               	clrf	plusw1,c
 43007  017F9E  2AE3               	incf	plusw1,f,c
 43008  017FA0  D003               	goto	l10051
 43009  017FA2                     l10047:
 43010                           
 43011                           ;stkvar	_b @ sp[(-4)+-4]
 43012  017FA2  0EF8               	movlw	-8
 43013  017FA4  B0E3               	btfsc	plusw1,0,c
 43014  017FA6  D7F9               	goto	u7600
 43015  017FA8                     l10051:
 43016                           
 43017                           ;stkvar	_aexp @ sp[(-4)+2]
 43018  017FA8  0EFE               	movlw	-2
 43019  017FAA  50E3               	movf	plusw1,w,c
 43020  017FAC  B4D8               	btfsc	status,2,c
 43021  017FAE  D02B               	goto	l10063
 43022                           
 43023                           ;stkvar	_b @ sp[(-4)+-4]
 43024  017FB0  50E1               	movf	fsr1l,w,c
 43025  017FB2  0FF8               	addlw	-8
 43026  017FB4  6ED9               	movwf	fsr2l,c
 43027  017FB6  50E2               	movf	fsr1h,w,c
 43028  017FB8  6EDA               	movwf	fsr2h,c
 43029  017FBA  0EFF               	movlw	255
 43030  017FBC  22DA               	addwfc	fsr2h,f,c
 43031  017FBE  2ADE               	incf	postinc2,f,c
 43032  017FC0  0E00               	movlw	0
 43033  017FC2  22DE               	addwfc	postinc2,f,c
 43034  017FC4  22DE               	addwfc	postinc2,f,c
 43035  017FC6  22DE               	addwfc	postinc2,f,c
 43036                           
 43037                           ;stkvar	_b @ sp[(-4)+-4]
 43038  017FC8  0EFB               	movlw	-5
 43039  017FCA  A0E3               	btfss	plusw1,0,c
 43040  017FCC  D01C               	goto	l10063
 43041  017FCE  0E01               	movlw	1
 43042  017FD0  6E35               	movwf	(btemp+11)^0,c
 43043                           
 43044                           ;stkvar	_b @ sp[(-4)+-4]
 43045  017FD2  50E1               	movf	fsr1l,w,c
 43046  017FD4  0FF8               	addlw	-8
 43047  017FD6  6ED9               	movwf	fsr2l,c
 43048  017FD8  50E2               	movf	fsr1h,w,c
 43049  017FDA  6EDA               	movwf	fsr2h,c
 43050  017FDC  0EFF               	movlw	255
 43051  017FDE  22DA               	addwfc	fsr2h,f,c
 43052  017FE0  2835               	incf	(btemp+11)^0,w,c
 43053  017FE2  52DE               	movf	postinc2,f,c
 43054  017FE4  D008               	goto	u7640
 43055  017FE6                     u7645:
 43056  017FE6  52DE               	movf	postinc2,f,c
 43057  017FE8  90D8               	bcf	status,0,c
 43058  017FEA  BEDC               	btfsc	preinc2,7,c
 43059  017FEC  80D8               	bsf	status,0,c
 43060  017FEE  32DD               	rrcf	postdec2,f,c
 43061  017FF0  32DD               	rrcf	postdec2,f,c
 43062  017FF2  32DD               	rrcf	postdec2,f,c
 43063  017FF4  32DE               	rrcf	postinc2,f,c
 43064  017FF6                     u7640:
 43065  017FF6  2EE8               	decfsz	wreg,f,c
 43066  017FF8  D7F6               	goto	u7645
 43067                           
 43068                           ;stkvar	_bexp @ sp[(-4)+1]
 43069  017FFA  0EFD               	movlw	-3
 43070  017FFC  28E3               	incf	plusw1,w,c
 43071  017FFE  B4D8               	btfsc	status,2,c
 43072  018000  D002               	goto	l10063
 43073                           
 43074                           ;stkvar	_bexp @ sp[(-4)+1]
 43075  018002  0EFD               	movlw	-3
 43076  018004  2AE3               	incf	plusw1,f,c
 43077  018006                     l10063:
 43078                           
 43079                           ;stkvar	_bexp @ sp[(-4)+1]
 43080  018006  0EFD               	movlw	-3
 43081  018008  28E3               	incf	plusw1,w,c
 43082  01800A  B4D8               	btfsc	status,2,c
 43083  01800C  D004               	goto	u7670
 43084                           
 43085                           ;stkvar	_bexp @ sp[(-4)+1]
 43086  01800E  0EFD               	movlw	-3
 43087  018010  50E3               	movf	plusw1,w,c
 43088  018012  A4D8               	btfss	status,2,c
 43089  018014  D00E               	goto	l10073
 43090  018016                     u7670:
 43091                           
 43092                           ;stkvar	_b @ sp[(-4)+-4]
 43093  018016  0EF8               	movlw	-8
 43094  018018  6AE3               	clrf	plusw1,c
 43095  01801A  0EF9               	movlw	-7
 43096  01801C  6AE3               	clrf	plusw1,c
 43097  01801E  0EFA               	movlw	-6
 43098  018020  6AE3               	clrf	plusw1,c
 43099  018022  0EFB               	movlw	-5
 43100  018024  6AE3               	clrf	plusw1,c
 43101                           
 43102                           ;stkvar	_bexp @ sp[(-4)+1]
 43103  018026  0EFD               	movlw	-3
 43104  018028  50E3               	movf	plusw1,w,c
 43105  01802A  A4D8               	btfss	status,2,c
 43106  01802C  D002               	goto	l10073
 43107                           
 43108                           ;stkvar	_signs @ sp[(-4)+3]
 43109  01802E  0EFF               	movlw	-1
 43110  018030  6AE3               	clrf	plusw1,c
 43111  018032                     l10073:
 43112                           
 43113                           ;stkvar	_bexp @ sp[(-4)+1]
 43114  018032  0EFD               	movlw	-3
 43115  018034  A0E3               	btfss	plusw1,0,c
 43116  018036  D009               	goto	l10077
 43117                           
 43118                           ;stkvar	_b @ sp[(-4)+-4]
 43119  018038  0EFA               	movlw	250
 43120  01803A  24E1               	addwf	fsr1l,w,c
 43121  01803C  6ED9               	movwf	fsr2l,c
 43122  01803E  0EFF               	movlw	255
 43123  018040  20E2               	addwfc	fsr1h,w,c
 43124  018042  6EDA               	movwf	fsr2h,c
 43125  018044  0E00               	movlw	0
 43126  018046  8EDB               	bsf	plusw2,7,c
 43127  018048  D008               	goto	l10079
 43128  01804A                     l10077:
 43129                           
 43130                           ;stkvar	_b @ sp[(-4)+-4]
 43131  01804A  0EFA               	movlw	250
 43132  01804C  24E1               	addwf	fsr1l,w,c
 43133  01804E  6ED9               	movwf	fsr2l,c
 43134  018050  0EFF               	movlw	255
 43135  018052  20E2               	addwfc	fsr1h,w,c
 43136  018054  6EDA               	movwf	fsr2h,c
 43137  018056  0E7F               	movlw	127
 43138  018058  16DF               	andwf	indf2,f,c
 43139  01805A                     l10079:
 43140                           
 43141                           ;stkvar	_b @ sp[(-4)+-4]
 43142  01805A  0EFB               	movlw	251
 43143  01805C  24E1               	addwf	fsr1l,w,c
 43144  01805E  6ED9               	movwf	fsr2l,c
 43145  018060  0EFF               	movlw	255
 43146  018062  20E2               	addwfc	fsr1h,w,c
 43147  018064  6EDA               	movwf	fsr2h,c
 43148                           
 43149                           ;stkvar	_bexp @ sp[(-4)+1]
 43150  018066  0EFD               	movlw	-3
 43151  018068  006F FF8C  F035    	movff	plusw1,btemp+11
 43152  01806E  90D8               	bcf	status,0,c
 43153  018070  3035               	rrcf	(btemp+11)^0,w,c
 43154  018072  6EDF               	movwf	indf2,c
 43155                           
 43156                           ;stkvar	_signs @ sp[(-4)+3]
 43157  018074  0EFF               	movlw	-1
 43158  018076  AEE3               	btfss	plusw1,7,c
 43159  018078  D008               	goto	l10085
 43160                           
 43161                           ;stkvar	_b @ sp[(-4)+-4]
 43162  01807A  0EFB               	movlw	251
 43163  01807C  24E1               	addwf	fsr1l,w,c
 43164  01807E  6ED9               	movwf	fsr2l,c
 43165  018080  0EFF               	movlw	255
 43166  018082  20E2               	addwfc	fsr1h,w,c
 43167  018084  6EDA               	movwf	fsr2h,c
 43168  018086  0E00               	movlw	0
 43169  018088  8EDB               	bsf	plusw2,7,c
 43170  01808A                     l10085:
 43171                           
 43172                           ;stkvar	_b @ sp[(-4)+-4]
 43173  01808A  0EF8               	movlw	-8
 43174  01808C  006F FF8C  F02A    	movff	plusw1,btemp
 43175  018092  0EF9               	movlw	-7
 43176  018094  006F FF8C  F02B    	movff	plusw1,btemp+1
 43177  01809A  0EFA               	movlw	-6
 43178  01809C  006F FF8C  F02C    	movff	plusw1,btemp+2
 43179  0180A2  0EFB               	movlw	-5
 43180  0180A4  006F FF8C  F02D    	movff	plusw1,btemp+3
 43181  0180AA                     l3270:
 43182                           
 43183                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 43184  0180AA  0EF4               	movlw	244
 43185  0180AC  26E1               	addwf	fsr1l,f,c
 43186  0180AE  0EFF               	movlw	255
 43187  0180B0  22E2               	addwfc	fsr1h,f,c
 43188  0180B2  0012               	return		;funcret
 43189  0180B4                     __end_of___fladd:
 43190                           	opt callstack 0
 43191                           
 43192 ;; *************** function ___flmul *****************
 43193 ;; Defined at:
 43194 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 43195 ;; Parameters:    Size  Location     Type
 43196 ;;  b               4  [STACK] unsigned char 
 43197 ;;  a               4  [STACK] unsigned char 
 43198 ;; Auto vars:     Size  Location     Type
 43199 ;;  prod            4  [STACK] struct .
 43200 ;;  grs             4  [STACK] unsigned long 
 43201 ;;  temp            2  [STACK] struct .
 43202 ;;  bexp            1  [STACK] unsigned char 
 43203 ;;  aexp            1  [STACK] unsigned char 
 43204 ;;  sign            1  [STACK] unsigned char 
 43205 ;; Return value:  Size  Location     Type
 43206 ;;                  4  [STACK] unsigned char 
 43207 ;; Registers used:
 43208 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 43209 ;; Tracked objects:
 43210 ;;		On entry : 0/39
 43211 ;;		On exit  : 0/0
 43212 ;;		Unchanged: 0/0
 43213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43218 ;;Total ram usage:        0 bytes
 43219 ;; Hardware stack levels used:    1
 43220 ;; Hardware stack levels required when called:   15
 43221 ;; This function calls:
 43222 ;;		Nothing
 43223 ;; This function is called by:
 43224 ;;		_conv_raw_result
 43225 ;;		_lp_filter
 43226 ;;		_calc_model_data
 43227 ;;		_load_hist_data
 43228 ;;		_calc_bsoc
 43229 ;;		_init_bsoc
 43230 ;;		_efgtoa
 43231 ;; This function uses a reentrant model
 43232 ;;
 43233                           
 43234                           	psect	text156
 43235  0170CE                     __ptext156:
 43236                           	opt callstack 0
 43237  0170CE                     ___flmul:
 43238                           	opt callstack 0
 43239                           
 43240                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 43241  0170CE  0E0D               	movlw	13
 43242  0170D0  26E1               	addwf	fsr1l,f,c
 43243  0170D2  0E00               	movlw	0
 43244  0170D4  22E2               	addwfc	fsr1h,f,c
 43245                           
 43246                           ;stkvar	_b @ sp[(-13)+-4]
 43247                           
 43248                           ;incstack = 0
 43249 ;; hardware stack exceeded
 43250  0170D6  0EF2               	movlw	242
 43251  0170D8  24E1               	addwf	fsr1l,w,c
 43252  0170DA  6ED9               	movwf	fsr2l,c
 43253  0170DC  0EFF               	movlw	255
 43254  0170DE  20E2               	addwfc	fsr1h,w,c
 43255  0170E0  6EDA               	movwf	fsr2h,c
 43256  0170E2  50DF               	movf	indf2,w,c
 43257  0170E4  6E35               	movwf	(btemp+11)^0,c
 43258  0170E6  0E80               	movlw	128
 43259  0170E8  1635               	andwf	(btemp+11)^0,f,c
 43260                           
 43261                           ;stkvar	_sign @ sp[(-13)+12]
 43262  0170EA  0EFF               	movlw	-1
 43263  0170EC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 43264                           
 43265                           ;stkvar	_b @ sp[(-13)+-4]
 43266  0170F2  0EF2               	movlw	242
 43267  0170F4  24E1               	addwf	fsr1l,w,c
 43268  0170F6  6ED9               	movwf	fsr2l,c
 43269  0170F8  0EFF               	movlw	255
 43270  0170FA  20E2               	addwfc	fsr1h,w,c
 43271  0170FC  6EDA               	movwf	fsr2h,c
 43272  0170FE  50DF               	movf	indf2,w,c
 43273  017100  6E35               	movwf	(btemp+11)^0,c
 43274  017102  90D8               	bcf	status,0,c
 43275  017104  3435               	rlcf	(btemp+11)^0,w,c
 43276  017106  6E34               	movwf	(btemp+10)^0,c
 43277                           
 43278                           ;stkvar	_bexp @ sp[(-13)+10]
 43279  017108  0EFD               	movlw	-3
 43280  01710A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 43281                           
 43282                           ;stkvar	_b @ sp[(-13)+-4]
 43283  017110  0EF1               	movlw	241
 43284  017112  24E1               	addwf	fsr1l,w,c
 43285  017114  6ED9               	movwf	fsr2l,c
 43286  017116  0EFF               	movlw	255
 43287  017118  20E2               	addwfc	fsr1h,w,c
 43288  01711A  6EDA               	movwf	fsr2h,c
 43289  01711C  AEDF               	btfss	indf2,7,c
 43290  01711E  D002               	goto	l10549
 43291                           
 43292                           ;stkvar	_bexp @ sp[(-13)+10]
 43293  017120  0EFD               	movlw	-3
 43294  017122  80E3               	bsf	plusw1,0,c
 43295  017124                     l10549:
 43296                           
 43297                           ;stkvar	_bexp @ sp[(-13)+10]
 43298  017124  0EFD               	movlw	-3
 43299  017126  50E3               	movf	plusw1,w,c
 43300  017128  B4D8               	btfsc	status,2,c
 43301  01712A  D01F               	goto	l10557
 43302                           
 43303                           ;stkvar	_bexp @ sp[(-13)+10]
 43304  01712C  0EFD               	movlw	-3
 43305  01712E  28E3               	incf	plusw1,w,c
 43306  017130  A4D8               	btfss	status,2,c
 43307  017132  D018               	goto	l10555
 43308  017134  0E00               	movlw	0
 43309  017136  6E32               	movwf	(btemp+8)^0,c
 43310  017138  0E00               	movlw	0
 43311  01713A  6E33               	movwf	(btemp+9)^0,c
 43312  01713C  0E00               	movlw	0
 43313  01713E  6E34               	movwf	(btemp+10)^0,c
 43314  017140  0E00               	movlw	0
 43315  017142  6E35               	movwf	(btemp+11)^0,c
 43316                           
 43317                           ;stkvar	_b @ sp[(-13)+-4]
 43318  017144  0EEF               	movlw	-17
 43319  017146  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 43320  01714C  0EF0               	movlw	-16
 43321  01714E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 43322  017154  0EF1               	movlw	-15
 43323  017156  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 43324  01715C  0EF2               	movlw	-14
 43325  01715E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 43326  017164                     l10555:
 43327                           
 43328                           ;stkvar	_b @ sp[(-13)+-4]
 43329  017164  0EF1               	movlw	-15
 43330  017166  8EE3               	bsf	plusw1,7,c
 43331  017168  D018               	goto	l10559
 43332  01716A                     l10557:
 43333  01716A  0E00               	movlw	0
 43334  01716C  6E32               	movwf	(btemp+8)^0,c
 43335  01716E  0E00               	movlw	0
 43336  017170  6E33               	movwf	(btemp+9)^0,c
 43337  017172  0E00               	movlw	0
 43338  017174  6E34               	movwf	(btemp+10)^0,c
 43339  017176  0E00               	movlw	0
 43340  017178  6E35               	movwf	(btemp+11)^0,c
 43341                           
 43342                           ;stkvar	_b @ sp[(-13)+-4]
 43343  01717A  0EEF               	movlw	-17
 43344  01717C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 43345  017182  0EF0               	movlw	-16
 43346  017184  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 43347  01718A  0EF1               	movlw	-15
 43348  01718C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 43349  017192  0EF2               	movlw	-14
 43350  017194  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 43351  01719A                     l10559:
 43352                           
 43353                           ;stkvar	_a @ sp[(-13)+-8]
 43354  01719A  0EEE               	movlw	238
 43355  01719C  24E1               	addwf	fsr1l,w,c
 43356  01719E  6ED9               	movwf	fsr2l,c
 43357  0171A0  0EFF               	movlw	255
 43358  0171A2  20E2               	addwfc	fsr1h,w,c
 43359  0171A4  6EDA               	movwf	fsr2h,c
 43360  0171A6  50DF               	movf	indf2,w,c
 43361  0171A8  6E35               	movwf	(btemp+11)^0,c
 43362  0171AA  0E80               	movlw	128
 43363  0171AC  1635               	andwf	(btemp+11)^0,f,c
 43364                           
 43365                           ;stkvar	_sign @ sp[(-13)+12]
 43366  0171AE  50E1               	movf	fsr1l,w,c
 43367  0171B0  0FFF               	addlw	-1
 43368  0171B2  6ED9               	movwf	fsr2l,c
 43369  0171B4  50E2               	movf	fsr1h,w,c
 43370  0171B6  6EDA               	movwf	fsr2h,c
 43371  0171B8  0EFF               	movlw	255
 43372  0171BA  22DA               	addwfc	fsr2h,f,c
 43373  0171BC  5035               	movf	(btemp+11)^0,w,c
 43374  0171BE  1ADF               	xorwf	indf2,f,c
 43375                           
 43376                           ;stkvar	_a @ sp[(-13)+-8]
 43377  0171C0  0EEE               	movlw	238
 43378  0171C2  24E1               	addwf	fsr1l,w,c
 43379  0171C4  6ED9               	movwf	fsr2l,c
 43380  0171C6  0EFF               	movlw	255
 43381  0171C8  20E2               	addwfc	fsr1h,w,c
 43382  0171CA  6EDA               	movwf	fsr2h,c
 43383  0171CC  50DF               	movf	indf2,w,c
 43384  0171CE  6E35               	movwf	(btemp+11)^0,c
 43385  0171D0  90D8               	bcf	status,0,c
 43386  0171D2  3435               	rlcf	(btemp+11)^0,w,c
 43387  0171D4  6E34               	movwf	(btemp+10)^0,c
 43388                           
 43389                           ;stkvar	_aexp @ sp[(-13)+11]
 43390  0171D6  0EFE               	movlw	-2
 43391  0171D8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 43392                           
 43393                           ;stkvar	_a @ sp[(-13)+-8]
 43394  0171DE  0EED               	movlw	237
 43395  0171E0  24E1               	addwf	fsr1l,w,c
 43396  0171E2  6ED9               	movwf	fsr2l,c
 43397  0171E4  0EFF               	movlw	255
 43398  0171E6  20E2               	addwfc	fsr1h,w,c
 43399  0171E8  6EDA               	movwf	fsr2h,c
 43400  0171EA  AEDF               	btfss	indf2,7,c
 43401  0171EC  D002               	goto	l10567
 43402                           
 43403                           ;stkvar	_aexp @ sp[(-13)+11]
 43404  0171EE  0EFE               	movlw	-2
 43405  0171F0  80E3               	bsf	plusw1,0,c
 43406  0171F2                     l10567:
 43407                           
 43408                           ;stkvar	_aexp @ sp[(-13)+11]
 43409  0171F2  0EFE               	movlw	-2
 43410  0171F4  50E3               	movf	plusw1,w,c
 43411  0171F6  B4D8               	btfsc	status,2,c
 43412  0171F8  D01F               	goto	l10575
 43413                           
 43414                           ;stkvar	_aexp @ sp[(-13)+11]
 43415  0171FA  0EFE               	movlw	-2
 43416  0171FC  28E3               	incf	plusw1,w,c
 43417  0171FE  A4D8               	btfss	status,2,c
 43418  017200  D018               	goto	l10573
 43419  017202  0E00               	movlw	0
 43420  017204  6E32               	movwf	(btemp+8)^0,c
 43421  017206  0E00               	movlw	0
 43422  017208  6E33               	movwf	(btemp+9)^0,c
 43423  01720A  0E00               	movlw	0
 43424  01720C  6E34               	movwf	(btemp+10)^0,c
 43425  01720E  0E00               	movlw	0
 43426  017210  6E35               	movwf	(btemp+11)^0,c
 43427                           
 43428                           ;stkvar	_a @ sp[(-13)+-8]
 43429  017212  0EEB               	movlw	-21
 43430  017214  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 43431  01721A  0EEC               	movlw	-20
 43432  01721C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 43433  017222  0EED               	movlw	-19
 43434  017224  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 43435  01722A  0EEE               	movlw	-18
 43436  01722C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 43437  017232                     l10573:
 43438                           
 43439                           ;stkvar	_a @ sp[(-13)+-8]
 43440  017232  0EED               	movlw	-19
 43441  017234  8EE3               	bsf	plusw1,7,c
 43442  017236  D018               	goto	l10577
 43443  017238                     l10575:
 43444  017238  0E00               	movlw	0
 43445  01723A  6E32               	movwf	(btemp+8)^0,c
 43446  01723C  0E00               	movlw	0
 43447  01723E  6E33               	movwf	(btemp+9)^0,c
 43448  017240  0E00               	movlw	0
 43449  017242  6E34               	movwf	(btemp+10)^0,c
 43450  017244  0E00               	movlw	0
 43451  017246  6E35               	movwf	(btemp+11)^0,c
 43452                           
 43453                           ;stkvar	_a @ sp[(-13)+-8]
 43454  017248  0EEB               	movlw	-21
 43455  01724A  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 43456  017250  0EEC               	movlw	-20
 43457  017252  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 43458  017258  0EED               	movlw	-19
 43459  01725A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 43460  017260  0EEE               	movlw	-18
 43461  017262  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 43462  017268                     l10577:
 43463                           
 43464                           ;stkvar	_aexp @ sp[(-13)+11]
 43465  017268  0EFE               	movlw	-2
 43466  01726A  50E3               	movf	plusw1,w,c
 43467  01726C  B4D8               	btfsc	status,2,c
 43468  01726E  D004               	goto	u8730
 43469                           
 43470                           ;stkvar	_bexp @ sp[(-13)+10]
 43471  017270  0EFD               	movlw	-3
 43472  017272  50E3               	movf	plusw1,w,c
 43473  017274  A4D8               	btfss	status,2,c
 43474  017276  D009               	goto	l10585
 43475  017278                     u8730:
 43476  017278  0E00               	movlw	0
 43477  01727A  6E2A               	movwf	btemp^0,c
 43478  01727C  0E00               	movlw	0
 43479  01727E  6E2B               	movwf	(btemp+1)^0,c
 43480  017280  0E00               	movlw	0
 43481  017282  6E2C               	movwf	(btemp+2)^0,c
 43482  017284  0E00               	movlw	0
 43483  017286  6E2D               	movwf	(btemp+3)^0,c
 43484  017288  D332               	goto	l3351
 43485  01728A                     l10585:
 43486                           
 43487                           ;stkvar	_b @ sp[(-13)+-4]
 43488  01728A  0EEF               	movlw	-17
 43489  01728C  006F FF8C  F035    	movff	plusw1,btemp+11
 43490                           
 43491                           ;stkvar	_a @ sp[(-13)+-8]
 43492  017292  0EED               	movlw	237
 43493  017294  24E1               	addwf	fsr1l,w,c
 43494  017296  6ED9               	movwf	fsr2l,c
 43495  017298  0EFF               	movlw	255
 43496  01729A  20E2               	addwfc	fsr1h,w,c
 43497  01729C  6EDA               	movwf	fsr2h,c
 43498  01729E  50DF               	movf	indf2,w,c
 43499  0172A0  0235               	mulwf	(btemp+11)^0,c
 43500                           
 43501                           ;stkvar	_temp @ sp[(-13)+8]
 43502  0172A2  0EFB               	movlw	-5
 43503  0172A4  006F FFCF FFE3     	movff	prodl,plusw1
 43504  0172AA  0EFC               	movlw	-4
 43505  0172AC  006F FFD3 FFE3     	movff	prodh,plusw1
 43506                           
 43507                           ;stkvar	_temp @ sp[(-13)+8]
 43508  0172B2  0EFB               	movlw	-5
 43509  0172B4  006F FF8C  F035    	movff	plusw1,btemp+11
 43510  0172BA  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 43511  0172C0  6A2F               	clrf	(btemp+5)^0,c
 43512  0172C2  6A30               	clrf	(btemp+6)^0,c
 43513  0172C4  6A31               	clrf	(btemp+7)^0,c
 43514                           
 43515                           ;stkvar	_grs @ sp[(-13)+4]
 43516  0172C6  0EF7               	movlw	-9
 43517  0172C8  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 43518  0172CE  0EF8               	movlw	-8
 43519  0172D0  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 43520  0172D6  0EF9               	movlw	-7
 43521  0172D8  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 43522  0172DE  0EFA               	movlw	-6
 43523  0172E0  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 43524                           
 43525                           ;stkvar	_temp @ sp[(-13)+8]
 43526  0172E6  0EFC               	movlw	252
 43527  0172E8  24E1               	addwf	fsr1l,w,c
 43528  0172EA  6ED9               	movwf	fsr2l,c
 43529  0172EC  0EFF               	movlw	255
 43530  0172EE  20E2               	addwfc	fsr1h,w,c
 43531  0172F0  6EDA               	movwf	fsr2h,c
 43532  0172F2  50DF               	movf	indf2,w,c
 43533  0172F4  6E35               	movwf	(btemp+11)^0,c
 43534  0172F6  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 43535  0172FC  6A2F               	clrf	(btemp+5)^0,c
 43536  0172FE  6A30               	clrf	(btemp+6)^0,c
 43537  017300  6A31               	clrf	(btemp+7)^0,c
 43538                           
 43539                           ;stkvar	_prod @ sp[(-13)+0]
 43540  017302  0EF3               	movlw	-13
 43541  017304  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 43542  01730A  0EF4               	movlw	-12
 43543  01730C  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 43544  017312  0EF5               	movlw	-11
 43545  017314  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 43546  01731A  0EF6               	movlw	-10
 43547  01731C  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 43548                           
 43549                           ;stkvar	_b @ sp[(-13)+-4]
 43550  017322  0EF0               	movlw	240
 43551  017324  24E1               	addwf	fsr1l,w,c
 43552  017326  6ED9               	movwf	fsr2l,c
 43553  017328  0EFF               	movlw	255
 43554  01732A  20E2               	addwfc	fsr1h,w,c
 43555  01732C  6EDA               	movwf	fsr2h,c
 43556  01732E  50DF               	movf	indf2,w,c
 43557  017330  6E35               	movwf	(btemp+11)^0,c
 43558                           
 43559                           ;stkvar	_a @ sp[(-13)+-8]
 43560  017332  0EEC               	movlw	236
 43561  017334  24E1               	addwf	fsr1l,w,c
 43562  017336  6ED9               	movwf	fsr2l,c
 43563  017338  0EFF               	movlw	255
 43564  01733A  20E2               	addwfc	fsr1h,w,c
 43565  01733C  6EDA               	movwf	fsr2h,c
 43566  01733E  50DF               	movf	indf2,w,c
 43567  017340  0235               	mulwf	(btemp+11)^0,c
 43568                           
 43569                           ;stkvar	_temp @ sp[(-13)+8]
 43570  017342  0EFB               	movlw	-5
 43571  017344  006F FFCF FFE3     	movff	prodl,plusw1
 43572  01734A  0EFC               	movlw	-4
 43573  01734C  006F FFD3 FFE3     	movff	prodh,plusw1
 43574                           
 43575                           ;stkvar	_grs @ sp[(-13)+4]
 43576  017352  50E1               	movf	fsr1l,w,c
 43577  017354  0FF7               	addlw	-9
 43578  017356  6ED9               	movwf	fsr2l,c
 43579  017358  50E2               	movf	fsr1h,w,c
 43580  01735A  6EDA               	movwf	fsr2h,c
 43581  01735C  0EFF               	movlw	255
 43582  01735E  22DA               	addwfc	fsr2h,f,c
 43583                           
 43584                           ;stkvar	_temp @ sp[(-13)+8]
 43585  017360  0EFB               	movlw	-5
 43586  017362  50E3               	movf	plusw1,w,c
 43587  017364  26DE               	addwf	postinc2,f,c
 43588  017366  0E00               	movlw	0
 43589  017368  22DE               	addwfc	postinc2,f,c
 43590  01736A  22DE               	addwfc	postinc2,f,c
 43591  01736C  22DE               	addwfc	postinc2,f,c
 43592                           
 43593                           ;stkvar	_prod @ sp[(-13)+0]
 43594  01736E  50E1               	movf	fsr1l,w,c
 43595  017370  0FF3               	addlw	-13
 43596  017372  6ED9               	movwf	fsr2l,c
 43597  017374  50E2               	movf	fsr1h,w,c
 43598  017376  6EDA               	movwf	fsr2h,c
 43599  017378  0EFF               	movlw	255
 43600  01737A  22DA               	addwfc	fsr2h,f,c
 43601                           
 43602                           ;stkvar	_temp @ sp[(-13)+8]
 43603  01737C  0EFC               	movlw	252
 43604  01737E  24E1               	addwf	fsr1l,w,c
 43605  017380  6EE9               	movwf	fsr0l,c
 43606  017382  0EFF               	movlw	255
 43607  017384  20E2               	addwfc	fsr1h,w,c
 43608  017386  6EEA               	movwf	fsr0h,c
 43609  017388  50EF               	movf	indf0,w,c
 43610  01738A  26DE               	addwf	postinc2,f,c
 43611  01738C  0E00               	movlw	0
 43612  01738E  22DE               	addwfc	postinc2,f,c
 43613  017390  22DE               	addwfc	postinc2,f,c
 43614  017392  22DE               	addwfc	postinc2,f,c
 43615                           
 43616                           ;stkvar	_b @ sp[(-13)+-4]
 43617  017394  0EF1               	movlw	241
 43618  017396  24E1               	addwf	fsr1l,w,c
 43619  017398  6ED9               	movwf	fsr2l,c
 43620  01739A  0EFF               	movlw	255
 43621  01739C  20E2               	addwfc	fsr1h,w,c
 43622  01739E  6EDA               	movwf	fsr2h,c
 43623  0173A0  50DF               	movf	indf2,w,c
 43624  0173A2  6E35               	movwf	(btemp+11)^0,c
 43625                           
 43626                           ;stkvar	_a @ sp[(-13)+-8]
 43627  0173A4  0EEB               	movlw	-21
 43628  0173A6  50E3               	movf	plusw1,w,c
 43629  0173A8  0235               	mulwf	(btemp+11)^0,c
 43630                           
 43631                           ;stkvar	_temp @ sp[(-13)+8]
 43632  0173AA  0EFB               	movlw	-5
 43633  0173AC  006F FFCF FFE3     	movff	prodl,plusw1
 43634  0173B2  0EFC               	movlw	-4
 43635  0173B4  006F FFD3 FFE3     	movff	prodh,plusw1
 43636                           
 43637                           ;stkvar	_grs @ sp[(-13)+4]
 43638  0173BA  50E1               	movf	fsr1l,w,c
 43639  0173BC  0FF7               	addlw	-9
 43640  0173BE  6ED9               	movwf	fsr2l,c
 43641  0173C0  50E2               	movf	fsr1h,w,c
 43642  0173C2  6EDA               	movwf	fsr2h,c
 43643  0173C4  0EFF               	movlw	255
 43644  0173C6  22DA               	addwfc	fsr2h,f,c
 43645                           
 43646                           ;stkvar	_temp @ sp[(-13)+8]
 43647  0173C8  0EFB               	movlw	-5
 43648  0173CA  50E3               	movf	plusw1,w,c
 43649  0173CC  26DE               	addwf	postinc2,f,c
 43650  0173CE  0E00               	movlw	0
 43651  0173D0  22DE               	addwfc	postinc2,f,c
 43652  0173D2  22DE               	addwfc	postinc2,f,c
 43653  0173D4  22DE               	addwfc	postinc2,f,c
 43654                           
 43655                           ;stkvar	_prod @ sp[(-13)+0]
 43656  0173D6  50E1               	movf	fsr1l,w,c
 43657  0173D8  0FF3               	addlw	-13
 43658  0173DA  6ED9               	movwf	fsr2l,c
 43659  0173DC  50E2               	movf	fsr1h,w,c
 43660  0173DE  6EDA               	movwf	fsr2h,c
 43661  0173E0  0EFF               	movlw	255
 43662  0173E2  22DA               	addwfc	fsr2h,f,c
 43663                           
 43664                           ;stkvar	_temp @ sp[(-13)+8]
 43665  0173E4  0EFC               	movlw	252
 43666  0173E6  24E1               	addwf	fsr1l,w,c
 43667  0173E8  6EE9               	movwf	fsr0l,c
 43668  0173EA  0EFF               	movlw	255
 43669  0173EC  20E2               	addwfc	fsr1h,w,c
 43670  0173EE  6EEA               	movwf	fsr0h,c
 43671  0173F0  50EF               	movf	indf0,w,c
 43672  0173F2  26DE               	addwf	postinc2,f,c
 43673  0173F4  0E00               	movlw	0
 43674  0173F6  22DE               	addwfc	postinc2,f,c
 43675  0173F8  22DE               	addwfc	postinc2,f,c
 43676  0173FA  22DE               	addwfc	postinc2,f,c
 43677                           
 43678                           ;stkvar	_grs @ sp[(-13)+4]
 43679  0173FC  50E1               	movf	fsr1l,w,c
 43680  0173FE  0FF7               	addlw	-9
 43681  017400  6ED9               	movwf	fsr2l,c
 43682  017402  50E2               	movf	fsr1h,w,c
 43683  017404  6EDA               	movwf	fsr2h,c
 43684  017406  0EFF               	movlw	255
 43685  017408  22DA               	addwfc	fsr2h,f,c
 43686  01740A  0E08               	movlw	8
 43687  01740C                     u8745:
 43688  01740C  90D8               	bcf	status,0,c
 43689  01740E  36DE               	rlcf	postinc2,f,c
 43690  017410  36DE               	rlcf	postinc2,f,c
 43691  017412  36DE               	rlcf	postinc2,f,c
 43692  017414  36DD               	rlcf	postdec2,f,c
 43693  017416  52DD               	movf	postdec2,f,c
 43694  017418  52DD               	movf	postdec2,f,c
 43695  01741A  2EE8               	decfsz	wreg,f,c
 43696  01741C  D7F7               	goto	u8745
 43697                           
 43698                           ;stkvar	_b @ sp[(-13)+-4]
 43699  01741E  0EF0               	movlw	240
 43700  017420  24E1               	addwf	fsr1l,w,c
 43701  017422  6ED9               	movwf	fsr2l,c
 43702  017424  0EFF               	movlw	255
 43703  017426  20E2               	addwfc	fsr1h,w,c
 43704  017428  6EDA               	movwf	fsr2h,c
 43705  01742A  50DF               	movf	indf2,w,c
 43706  01742C  6E35               	movwf	(btemp+11)^0,c
 43707                           
 43708                           ;stkvar	_a @ sp[(-13)+-8]
 43709  01742E  0EEB               	movlw	-21
 43710  017430  50E3               	movf	plusw1,w,c
 43711  017432  0235               	mulwf	(btemp+11)^0,c
 43712                           
 43713                           ;stkvar	_temp @ sp[(-13)+8]
 43714  017434  0EFB               	movlw	-5
 43715  017436  006F FFCF FFE3     	movff	prodl,plusw1
 43716  01743C  0EFC               	movlw	-4
 43717  01743E  006F FFD3 FFE3     	movff	prodh,plusw1
 43718                           
 43719                           ;stkvar	_temp @ sp[(-13)+8]
 43720  017444  0EFB               	movlw	-5
 43721  017446  006F FF8C  F034    	movff	plusw1,btemp+10
 43722  01744C  0EFC               	movlw	-4
 43723  01744E  006F FF8C  F035    	movff	plusw1,btemp+11
 43724                           
 43725                           ;stkvar	_grs @ sp[(-13)+4]
 43726  017454  50E1               	movf	fsr1l,w,c
 43727  017456  0FF7               	addlw	-9
 43728  017458  6ED9               	movwf	fsr2l,c
 43729  01745A  50E2               	movf	fsr1h,w,c
 43730  01745C  6EDA               	movwf	fsr2h,c
 43731  01745E  0EFF               	movlw	255
 43732  017460  22DA               	addwfc	fsr2h,f,c
 43733  017462  5034               	movf	(btemp+10)^0,w,c
 43734  017464  26DE               	addwf	postinc2,f,c
 43735  017466  5035               	movf	(btemp+11)^0,w,c
 43736  017468  22DE               	addwfc	postinc2,f,c
 43737  01746A  0E00               	movlw	0
 43738  01746C  22DE               	addwfc	postinc2,f,c
 43739  01746E  22DE               	addwfc	postinc2,f,c
 43740                           
 43741                           ;stkvar	_b @ sp[(-13)+-4]
 43742  017470  0EEF               	movlw	-17
 43743  017472  006F FF8C  F035    	movff	plusw1,btemp+11
 43744                           
 43745                           ;stkvar	_a @ sp[(-13)+-8]
 43746  017478  0EEC               	movlw	236
 43747  01747A  24E1               	addwf	fsr1l,w,c
 43748  01747C  6ED9               	movwf	fsr2l,c
 43749  01747E  0EFF               	movlw	255
 43750  017480  20E2               	addwfc	fsr1h,w,c
 43751  017482  6EDA               	movwf	fsr2h,c
 43752  017484  50DF               	movf	indf2,w,c
 43753  017486  0235               	mulwf	(btemp+11)^0,c
 43754                           
 43755                           ;stkvar	_temp @ sp[(-13)+8]
 43756  017488  0EFB               	movlw	-5
 43757  01748A  006F FFCF FFE3     	movff	prodl,plusw1
 43758  017490  0EFC               	movlw	-4
 43759  017492  006F FFD3 FFE3     	movff	prodh,plusw1
 43760                           
 43761                           ;stkvar	_temp @ sp[(-13)+8]
 43762  017498  0EFB               	movlw	-5
 43763  01749A  006F FF8C  F034    	movff	plusw1,btemp+10
 43764  0174A0  0EFC               	movlw	-4
 43765  0174A2  006F FF8C  F035    	movff	plusw1,btemp+11
 43766                           
 43767                           ;stkvar	_grs @ sp[(-13)+4]
 43768  0174A8  50E1               	movf	fsr1l,w,c
 43769  0174AA  0FF7               	addlw	-9
 43770  0174AC  6ED9               	movwf	fsr2l,c
 43771  0174AE  50E2               	movf	fsr1h,w,c
 43772  0174B0  6EDA               	movwf	fsr2h,c
 43773  0174B2  0EFF               	movlw	255
 43774  0174B4  22DA               	addwfc	fsr2h,f,c
 43775  0174B6  5034               	movf	(btemp+10)^0,w,c
 43776  0174B8  26DE               	addwf	postinc2,f,c
 43777  0174BA  5035               	movf	(btemp+11)^0,w,c
 43778  0174BC  22DE               	addwfc	postinc2,f,c
 43779  0174BE  0E00               	movlw	0
 43780  0174C0  22DE               	addwfc	postinc2,f,c
 43781  0174C2  22DE               	addwfc	postinc2,f,c
 43782                           
 43783                           ;stkvar	_grs @ sp[(-13)+4]
 43784  0174C4  50E1               	movf	fsr1l,w,c
 43785  0174C6  0FF7               	addlw	-9
 43786  0174C8  6ED9               	movwf	fsr2l,c
 43787  0174CA  50E2               	movf	fsr1h,w,c
 43788  0174CC  6EDA               	movwf	fsr2h,c
 43789  0174CE  0EFF               	movlw	255
 43790  0174D0  22DA               	addwfc	fsr2h,f,c
 43791  0174D2  0E08               	movlw	8
 43792  0174D4                     u8755:
 43793  0174D4  90D8               	bcf	status,0,c
 43794  0174D6  36DE               	rlcf	postinc2,f,c
 43795  0174D8  36DE               	rlcf	postinc2,f,c
 43796  0174DA  36DE               	rlcf	postinc2,f,c
 43797  0174DC  36DD               	rlcf	postdec2,f,c
 43798  0174DE  52DD               	movf	postdec2,f,c
 43799  0174E0  52DD               	movf	postdec2,f,c
 43800  0174E2  2EE8               	decfsz	wreg,f,c
 43801  0174E4  D7F7               	goto	u8755
 43802                           
 43803                           ;stkvar	_b @ sp[(-13)+-4]
 43804  0174E6  0EEF               	movlw	-17
 43805  0174E8  006F FF8C  F035    	movff	plusw1,btemp+11
 43806                           
 43807                           ;stkvar	_a @ sp[(-13)+-8]
 43808  0174EE  0EEB               	movlw	-21
 43809  0174F0  50E3               	movf	plusw1,w,c
 43810  0174F2  0235               	mulwf	(btemp+11)^0,c
 43811                           
 43812                           ;stkvar	_temp @ sp[(-13)+8]
 43813  0174F4  0EFB               	movlw	-5
 43814  0174F6  006F FFCF FFE3     	movff	prodl,plusw1
 43815  0174FC  0EFC               	movlw	-4
 43816  0174FE  006F FFD3 FFE3     	movff	prodh,plusw1
 43817                           
 43818                           ;stkvar	_temp @ sp[(-13)+8]
 43819  017504  0EFB               	movlw	-5
 43820  017506  006F FF8C  F034    	movff	plusw1,btemp+10
 43821  01750C  0EFC               	movlw	-4
 43822  01750E  006F FF8C  F035    	movff	plusw1,btemp+11
 43823                           
 43824                           ;stkvar	_grs @ sp[(-13)+4]
 43825  017514  50E1               	movf	fsr1l,w,c
 43826  017516  0FF7               	addlw	-9
 43827  017518  6ED9               	movwf	fsr2l,c
 43828  01751A  50E2               	movf	fsr1h,w,c
 43829  01751C  6EDA               	movwf	fsr2h,c
 43830  01751E  0EFF               	movlw	255
 43831  017520  22DA               	addwfc	fsr2h,f,c
 43832  017522  5034               	movf	(btemp+10)^0,w,c
 43833  017524  26DE               	addwf	postinc2,f,c
 43834  017526  5035               	movf	(btemp+11)^0,w,c
 43835  017528  22DE               	addwfc	postinc2,f,c
 43836  01752A  0E00               	movlw	0
 43837  01752C  22DE               	addwfc	postinc2,f,c
 43838  01752E  22DE               	addwfc	postinc2,f,c
 43839                           
 43840                           ;stkvar	_b @ sp[(-13)+-4]
 43841  017530  0EF0               	movlw	240
 43842  017532  24E1               	addwf	fsr1l,w,c
 43843  017534  6ED9               	movwf	fsr2l,c
 43844  017536  0EFF               	movlw	255
 43845  017538  20E2               	addwfc	fsr1h,w,c
 43846  01753A  6EDA               	movwf	fsr2h,c
 43847  01753C  50DF               	movf	indf2,w,c
 43848  01753E  6E35               	movwf	(btemp+11)^0,c
 43849                           
 43850                           ;stkvar	_a @ sp[(-13)+-8]
 43851  017540  0EED               	movlw	237
 43852  017542  24E1               	addwf	fsr1l,w,c
 43853  017544  6ED9               	movwf	fsr2l,c
 43854  017546  0EFF               	movlw	255
 43855  017548  20E2               	addwfc	fsr1h,w,c
 43856  01754A  6EDA               	movwf	fsr2h,c
 43857  01754C  50DF               	movf	indf2,w,c
 43858  01754E  0235               	mulwf	(btemp+11)^0,c
 43859                           
 43860                           ;stkvar	_temp @ sp[(-13)+8]
 43861  017550  0EFB               	movlw	-5
 43862  017552  006F FFCF FFE3     	movff	prodl,plusw1
 43863  017558  0EFC               	movlw	-4
 43864  01755A  006F FFD3 FFE3     	movff	prodh,plusw1
 43865                           
 43866                           ;stkvar	_temp @ sp[(-13)+8]
 43867  017560  0EFB               	movlw	-5
 43868  017562  006F FF8C  F034    	movff	plusw1,btemp+10
 43869  017568  0EFC               	movlw	-4
 43870  01756A  006F FF8C  F035    	movff	plusw1,btemp+11
 43871                           
 43872                           ;stkvar	_prod @ sp[(-13)+0]
 43873  017570  50E1               	movf	fsr1l,w,c
 43874  017572  0FF3               	addlw	-13
 43875  017574  6ED9               	movwf	fsr2l,c
 43876  017576  50E2               	movf	fsr1h,w,c
 43877  017578  6EDA               	movwf	fsr2h,c
 43878  01757A  0EFF               	movlw	255
 43879  01757C  22DA               	addwfc	fsr2h,f,c
 43880  01757E  5034               	movf	(btemp+10)^0,w,c
 43881  017580  26DE               	addwf	postinc2,f,c
 43882  017582  5035               	movf	(btemp+11)^0,w,c
 43883  017584  22DE               	addwfc	postinc2,f,c
 43884  017586  0E00               	movlw	0
 43885  017588  22DE               	addwfc	postinc2,f,c
 43886  01758A  22DE               	addwfc	postinc2,f,c
 43887                           
 43888                           ;stkvar	_b @ sp[(-13)+-4]
 43889  01758C  0EF1               	movlw	241
 43890  01758E  24E1               	addwf	fsr1l,w,c
 43891  017590  6ED9               	movwf	fsr2l,c
 43892  017592  0EFF               	movlw	255
 43893  017594  20E2               	addwfc	fsr1h,w,c
 43894  017596  6EDA               	movwf	fsr2h,c
 43895  017598  50DF               	movf	indf2,w,c
 43896  01759A  6E35               	movwf	(btemp+11)^0,c
 43897                           
 43898                           ;stkvar	_a @ sp[(-13)+-8]
 43899  01759C  0EEC               	movlw	236
 43900  01759E  24E1               	addwf	fsr1l,w,c
 43901  0175A0  6ED9               	movwf	fsr2l,c
 43902  0175A2  0EFF               	movlw	255
 43903  0175A4  20E2               	addwfc	fsr1h,w,c
 43904  0175A6  6EDA               	movwf	fsr2h,c
 43905  0175A8  50DF               	movf	indf2,w,c
 43906  0175AA  0235               	mulwf	(btemp+11)^0,c
 43907                           
 43908                           ;stkvar	_temp @ sp[(-13)+8]
 43909  0175AC  0EFB               	movlw	-5
 43910  0175AE  006F FFCF FFE3     	movff	prodl,plusw1
 43911  0175B4  0EFC               	movlw	-4
 43912  0175B6  006F FFD3 FFE3     	movff	prodh,plusw1
 43913                           
 43914                           ;stkvar	_temp @ sp[(-13)+8]
 43915  0175BC  0EFB               	movlw	-5
 43916  0175BE  006F FF8C  F034    	movff	plusw1,btemp+10
 43917  0175C4  0EFC               	movlw	-4
 43918  0175C6  006F FF8C  F035    	movff	plusw1,btemp+11
 43919                           
 43920                           ;stkvar	_prod @ sp[(-13)+0]
 43921  0175CC  50E1               	movf	fsr1l,w,c
 43922  0175CE  0FF3               	addlw	-13
 43923  0175D0  6ED9               	movwf	fsr2l,c
 43924  0175D2  50E2               	movf	fsr1h,w,c
 43925  0175D4  6EDA               	movwf	fsr2h,c
 43926  0175D6  0EFF               	movlw	255
 43927  0175D8  22DA               	addwfc	fsr2h,f,c
 43928  0175DA  5034               	movf	(btemp+10)^0,w,c
 43929  0175DC  26DE               	addwf	postinc2,f,c
 43930  0175DE  5035               	movf	(btemp+11)^0,w,c
 43931  0175E0  22DE               	addwfc	postinc2,f,c
 43932  0175E2  0E00               	movlw	0
 43933  0175E4  22DE               	addwfc	postinc2,f,c
 43934  0175E6  22DE               	addwfc	postinc2,f,c
 43935                           
 43936                           ;stkvar	_b @ sp[(-13)+-4]
 43937  0175E8  0EF1               	movlw	241
 43938  0175EA  24E1               	addwf	fsr1l,w,c
 43939  0175EC  6ED9               	movwf	fsr2l,c
 43940  0175EE  0EFF               	movlw	255
 43941  0175F0  20E2               	addwfc	fsr1h,w,c
 43942  0175F2  6EDA               	movwf	fsr2h,c
 43943  0175F4  50DF               	movf	indf2,w,c
 43944  0175F6  6E35               	movwf	(btemp+11)^0,c
 43945                           
 43946                           ;stkvar	_a @ sp[(-13)+-8]
 43947  0175F8  0EED               	movlw	237
 43948  0175FA  24E1               	addwf	fsr1l,w,c
 43949  0175FC  6ED9               	movwf	fsr2l,c
 43950  0175FE  0EFF               	movlw	255
 43951  017600  20E2               	addwfc	fsr1h,w,c
 43952  017602  6EDA               	movwf	fsr2h,c
 43953  017604  50DF               	movf	indf2,w,c
 43954  017606  0235               	mulwf	(btemp+11)^0,c
 43955                           
 43956                           ;stkvar	_temp @ sp[(-13)+8]
 43957  017608  0EFB               	movlw	-5
 43958  01760A  006F FFCF FFE3     	movff	prodl,plusw1
 43959  017610  0EFC               	movlw	-4
 43960  017612  006F FFD3 FFE3     	movff	prodh,plusw1
 43961                           
 43962                           ;stkvar	_temp @ sp[(-13)+8]
 43963  017618  0EFB               	movlw	-5
 43964  01761A  006F FF8C  F034    	movff	plusw1,btemp+10
 43965  017620  0EFC               	movlw	-4
 43966  017622  006F FF8C  F035    	movff	plusw1,btemp+11
 43967  017628  5034               	movf	(btemp+10)^0,w,c
 43968  01762A  6E2E               	movwf	(btemp+4)^0,c
 43969  01762C  5035               	movf	(btemp+11)^0,w,c
 43970  01762E  6E2F               	movwf	(btemp+5)^0,c
 43971  017630  6A30               	clrf	(btemp+6)^0,c
 43972  017632  6A31               	clrf	(btemp+7)^0,c
 43973  017634  0060  F0C0  F031   	movff	btemp+6,btemp+7
 43974  01763A  0060  F0BC  F030   	movff	btemp+5,btemp+6
 43975  017640  0060  F0B8  F02F   	movff	btemp+4,btemp+5
 43976  017646  6A2E               	clrf	(btemp+4)^0,c
 43977                           
 43978                           ;stkvar	_prod @ sp[(-13)+0]
 43979  017648  50E1               	movf	fsr1l,w,c
 43980  01764A  0FF3               	addlw	-13
 43981  01764C  6ED9               	movwf	fsr2l,c
 43982  01764E  50E2               	movf	fsr1h,w,c
 43983  017650  6EDA               	movwf	fsr2h,c
 43984  017652  0EFF               	movlw	255
 43985  017654  22DA               	addwfc	fsr2h,f,c
 43986  017656  502E               	movf	(btemp+4)^0,w,c
 43987  017658  26DE               	addwf	postinc2,f,c
 43988  01765A  502F               	movf	(btemp+5)^0,w,c
 43989  01765C  22DE               	addwfc	postinc2,f,c
 43990  01765E  5030               	movf	(btemp+6)^0,w,c
 43991  017660  22DE               	addwfc	postinc2,f,c
 43992  017662  5031               	movf	(btemp+7)^0,w,c
 43993  017664  22DE               	addwfc	postinc2,f,c
 43994                           
 43995                           ;stkvar	_prod @ sp[(-13)+0]
 43996  017666  50E1               	movf	fsr1l,w,c
 43997  017668  0FF3               	addlw	-13
 43998  01766A  6ED9               	movwf	fsr2l,c
 43999  01766C  50E2               	movf	fsr1h,w,c
 44000  01766E  6EDA               	movwf	fsr2h,c
 44001  017670  0EFF               	movlw	255
 44002  017672  22DA               	addwfc	fsr2h,f,c
 44003                           
 44004                           ;stkvar	_grs @ sp[(-13)+4]
 44005  017674  0EFA               	movlw	250
 44006  017676  24E1               	addwf	fsr1l,w,c
 44007  017678  6EE9               	movwf	fsr0l,c
 44008  01767A  0EFF               	movlw	255
 44009  01767C  20E2               	addwfc	fsr1h,w,c
 44010  01767E  6EEA               	movwf	fsr0h,c
 44011  017680  50EF               	movf	indf0,w,c
 44012  017682  26DE               	addwf	postinc2,f,c
 44013  017684  0E00               	movlw	0
 44014  017686  22DE               	addwfc	postinc2,f,c
 44015  017688  22DE               	addwfc	postinc2,f,c
 44016  01768A  22DE               	addwfc	postinc2,f,c
 44017                           
 44018                           ;stkvar	_grs @ sp[(-13)+4]
 44019  01768C  50E1               	movf	fsr1l,w,c
 44020  01768E  0FF7               	addlw	-9
 44021  017690  6ED9               	movwf	fsr2l,c
 44022  017692  50E2               	movf	fsr1h,w,c
 44023  017694  6EDA               	movwf	fsr2h,c
 44024  017696  0EFF               	movlw	255
 44025  017698  22DA               	addwfc	fsr2h,f,c
 44026  01769A  0E08               	movlw	8
 44027  01769C                     u8765:
 44028  01769C  90D8               	bcf	status,0,c
 44029  01769E  36DE               	rlcf	postinc2,f,c
 44030  0176A0  36DE               	rlcf	postinc2,f,c
 44031  0176A2  36DE               	rlcf	postinc2,f,c
 44032  0176A4  36DD               	rlcf	postdec2,f,c
 44033  0176A6  52DD               	movf	postdec2,f,c
 44034  0176A8  52DD               	movf	postdec2,f,c
 44035  0176AA  2EE8               	decfsz	wreg,f,c
 44036  0176AC  D7F7               	goto	u8765
 44037  0176AE  0E82               	movlw	130
 44038  0176B0  6E34               	movwf	(btemp+10)^0,c
 44039  0176B2  0EFF               	movlw	255
 44040  0176B4  6E35               	movwf	(btemp+11)^0,c
 44041                           
 44042                           ;stkvar	_bexp @ sp[(-13)+10]
 44043  0176B6  0EFD               	movlw	-3
 44044  0176B8  50E3               	movf	plusw1,w,c
 44045  0176BA  6E32               	movwf	(btemp+8)^0,c
 44046  0176BC  6A33               	clrf	(btemp+9)^0,c
 44047                           
 44048                           ;stkvar	_aexp @ sp[(-13)+11]
 44049  0176BE  0EFE               	movlw	-2
 44050  0176C0  50E3               	movf	plusw1,w,c
 44051  0176C2  2632               	addwf	(btemp+8)^0,f,c
 44052  0176C4  0E00               	movlw	0
 44053  0176C6  2233               	addwfc	(btemp+9)^0,f,c
 44054  0176C8  5034               	movf	(btemp+10)^0,w,c
 44055  0176CA  2632               	addwf	(btemp+8)^0,f,c
 44056  0176CC  5035               	movf	(btemp+11)^0,w,c
 44057  0176CE  2233               	addwfc	(btemp+9)^0,f,c
 44058                           
 44059                           ;stkvar	_temp @ sp[(-13)+8]
 44060  0176D0  0EFB               	movlw	-5
 44061  0176D2  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 44062  0176D8  0EFC               	movlw	-4
 44063  0176DA  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 44064  0176E0  D021               	goto	l10647
 44065  0176E2                     l10637:
 44066                           
 44067                           ;stkvar	_prod @ sp[(-13)+0]
 44068  0176E2  90D8               	bcf	status,0,c
 44069  0176E4  0EF3               	movlw	-13
 44070  0176E6  36E3               	rlcf	plusw1,f,c
 44071  0176E8  0EF4               	movlw	-12
 44072  0176EA  36E3               	rlcf	plusw1,f,c
 44073  0176EC  0EF5               	movlw	-11
 44074  0176EE  36E3               	rlcf	plusw1,f,c
 44075  0176F0  0EF6               	movlw	-10
 44076  0176F2  36E3               	rlcf	plusw1,f,c
 44077                           
 44078                           ;stkvar	_grs @ sp[(-13)+4]
 44079  0176F4  0EFA               	movlw	-6
 44080  0176F6  AEE3               	btfss	plusw1,7,c
 44081  0176F8  D002               	goto	l10643
 44082                           
 44083                           ;stkvar	_prod @ sp[(-13)+0]
 44084  0176FA  0EF3               	movlw	-13
 44085  0176FC  80E3               	bsf	plusw1,0,c
 44086  0176FE                     l10643:
 44087                           
 44088                           ;stkvar	_grs @ sp[(-13)+4]
 44089  0176FE  90D8               	bcf	status,0,c
 44090  017700  0EF7               	movlw	-9
 44091  017702  36E3               	rlcf	plusw1,f,c
 44092  017704  0EF8               	movlw	-8
 44093  017706  36E3               	rlcf	plusw1,f,c
 44094  017708  0EF9               	movlw	-7
 44095  01770A  36E3               	rlcf	plusw1,f,c
 44096  01770C  0EFA               	movlw	-6
 44097  01770E  36E3               	rlcf	plusw1,f,c
 44098                           
 44099                           ;stkvar	_temp @ sp[(-13)+8]
 44100  017710  50E1               	movf	fsr1l,w,c
 44101  017712  0FFB               	addlw	-5
 44102  017714  6ED9               	movwf	fsr2l,c
 44103  017716  50E2               	movf	fsr1h,w,c
 44104  017718  6EDA               	movwf	fsr2h,c
 44105  01771A  0EFF               	movlw	255
 44106  01771C  22DA               	addwfc	fsr2h,f,c
 44107  01771E  06DE               	decf	postinc2,f,c
 44108  017720  0E00               	movlw	0
 44109  017722  5ADD               	subwfb	postdec2,f,c
 44110  017724                     l10647:
 44111                           
 44112                           ;stkvar	_prod @ sp[(-13)+0]
 44113  017724  0EF5               	movlw	-11
 44114  017726  AEE3               	btfss	plusw1,7,c
 44115  017728  D7DC               	goto	l10637
 44116                           
 44117                           ;stkvar	_aexp @ sp[(-13)+11]
 44118  01772A  0EFE               	movlw	-2
 44119  01772C  6AE3               	clrf	plusw1,c
 44120                           
 44121                           ;stkvar	_grs @ sp[(-13)+4]
 44122  01772E  0EFA               	movlw	-6
 44123  017730  AEE3               	btfss	plusw1,7,c
 44124  017732  D020               	goto	l10661
 44125                           
 44126                           ;stkvar	_grs @ sp[(-13)+4]
 44127  017734  50E1               	movf	fsr1l,w,c
 44128  017736  0FF7               	addlw	-9
 44129  017738  6ED9               	movwf	fsr2l,c
 44130  01773A  50E2               	movf	fsr1h,w,c
 44131  01773C  6EDA               	movwf	fsr2h,c
 44132  01773E  0EFF               	movlw	255
 44133  017740  22DA               	addwfc	fsr2h,f,c
 44134  017742  0EFF               	movlw	255
 44135  017744  14DE               	andwf	postinc2,w,c
 44136  017746  6E32               	movwf	(btemp+8)^0,c
 44137  017748  0EFF               	movlw	255
 44138  01774A  14DE               	andwf	postinc2,w,c
 44139  01774C  6E33               	movwf	(btemp+9)^0,c
 44140  01774E  0EFF               	movlw	255
 44141  017750  14DE               	andwf	postinc2,w,c
 44142  017752  6E34               	movwf	(btemp+10)^0,c
 44143  017754  0E7F               	movlw	127
 44144  017756  14DE               	andwf	postinc2,w,c
 44145  017758  6E35               	movwf	(btemp+11)^0,c
 44146  01775A  5032               	movf	(btemp+8)^0,w,c
 44147  01775C  1033               	iorwf	(btemp+9)^0,w,c
 44148  01775E  1034               	iorwf	(btemp+10)^0,w,c
 44149  017760  1035               	iorwf	(btemp+11)^0,w,c
 44150  017762  B4D8               	btfsc	status,2,c
 44151  017764  D004               	goto	l10657
 44152  017766                     u8800:
 44153                           
 44154                           ;stkvar	_aexp @ sp[(-13)+11]
 44155  017766  0EFE               	movlw	-2
 44156  017768  6AE3               	clrf	plusw1,c
 44157  01776A  2AE3               	incf	plusw1,f,c
 44158  01776C  D003               	goto	l10661
 44159  01776E                     l10657:
 44160                           
 44161                           ;stkvar	_prod @ sp[(-13)+0]
 44162  01776E  0EF3               	movlw	-13
 44163  017770  B0E3               	btfsc	plusw1,0,c
 44164  017772  D7F9               	goto	u8800
 44165  017774                     l10661:
 44166                           
 44167                           ;stkvar	_aexp @ sp[(-13)+11]
 44168  017774  0EFE               	movlw	-2
 44169  017776  50E3               	movf	plusw1,w,c
 44170  017778  B4D8               	btfsc	status,2,c
 44171  01777A  D036               	goto	l10671
 44172                           
 44173                           ;stkvar	_prod @ sp[(-13)+0]
 44174  01777C  50E1               	movf	fsr1l,w,c
 44175  01777E  0FF3               	addlw	-13
 44176  017780  6ED9               	movwf	fsr2l,c
 44177  017782  50E2               	movf	fsr1h,w,c
 44178  017784  6EDA               	movwf	fsr2h,c
 44179  017786  0EFF               	movlw	255
 44180  017788  22DA               	addwfc	fsr2h,f,c
 44181  01778A  2ADE               	incf	postinc2,f,c
 44182  01778C  0E00               	movlw	0
 44183  01778E  22DE               	addwfc	postinc2,f,c
 44184  017790  22DE               	addwfc	postinc2,f,c
 44185  017792  22DE               	addwfc	postinc2,f,c
 44186                           
 44187                           ;stkvar	_prod @ sp[(-13)+0]
 44188  017794  0EF6               	movlw	-10
 44189  017796  A0E3               	btfss	plusw1,0,c
 44190  017798  D027               	goto	l10671
 44191  01779A  0E01               	movlw	1
 44192  01779C  6E35               	movwf	(btemp+11)^0,c
 44193                           
 44194                           ;stkvar	_prod @ sp[(-13)+0]
 44195  01779E  50E1               	movf	fsr1l,w,c
 44196  0177A0  0FF3               	addlw	-13
 44197  0177A2  6ED9               	movwf	fsr2l,c
 44198  0177A4  50E2               	movf	fsr1h,w,c
 44199  0177A6  6EDA               	movwf	fsr2h,c
 44200  0177A8  0EFF               	movlw	255
 44201  0177AA  22DA               	addwfc	fsr2h,f,c
 44202  0177AC  2835               	incf	(btemp+11)^0,w,c
 44203  0177AE  52DE               	movf	postinc2,f,c
 44204  0177B0  D008               	goto	u8840
 44205  0177B2                     u8845:
 44206  0177B2  52DE               	movf	postinc2,f,c
 44207  0177B4  90D8               	bcf	status,0,c
 44208  0177B6  BEDC               	btfsc	preinc2,7,c
 44209  0177B8  80D8               	bsf	status,0,c
 44210  0177BA  32DD               	rrcf	postdec2,f,c
 44211  0177BC  32DD               	rrcf	postdec2,f,c
 44212  0177BE  32DD               	rrcf	postdec2,f,c
 44213  0177C0  32DE               	rrcf	postinc2,f,c
 44214  0177C2                     u8840:
 44215  0177C2  2EE8               	decfsz	wreg,f,c
 44216  0177C4  D7F6               	goto	u8845
 44217                           
 44218                           ;stkvar	_temp @ sp[(-13)+8]
 44219  0177C6  0EFB               	movlw	-5
 44220  0177C8  50E3               	movf	plusw1,w,c
 44221  0177CA  0F01               	addlw	1
 44222  0177CC  6E2A               	movwf	btemp^0,c
 44223  0177CE  0EFB               	movlw	-5
 44224  0177D0  0060  F0AB  FFE3   	movff	btemp,plusw1
 44225  0177D6  6A2A               	clrf	btemp^0,c
 44226  0177D8  0EFC               	movlw	-4
 44227  0177DA  50E3               	movf	plusw1,w,c
 44228  0177DC  202A               	addwfc	btemp^0,w,c
 44229  0177DE  6E2A               	movwf	btemp^0,c
 44230  0177E0  0EFC               	movlw	-4
 44231  0177E2  0060  F0AB  FFE3   	movff	btemp,plusw1
 44232  0177E8                     l10671:
 44233                           
 44234                           ;stkvar	_temp @ sp[(-13)+8]
 44235  0177E8  0EFC               	movlw	-4
 44236  0177EA  BEE3               	btfsc	plusw1,7,c
 44237  0177EC  D020               	goto	l10675
 44238  0177EE  0EFC               	movlw	-4
 44239  0177F0  50E3               	movf	plusw1,w,c
 44240  0177F2  E104               	bnz	u8850
 44241  0177F4  0EFB               	movlw	-5
 44242  0177F6  28E3               	incf	plusw1,w,c
 44243  0177F8  A0D8               	btfss	status,0,c
 44244  0177FA  D019               	goto	l10675
 44245  0177FC                     u8850:
 44246  0177FC  0E00               	movlw	0
 44247  0177FE  6E32               	movwf	(btemp+8)^0,c
 44248  017800  0E00               	movlw	0
 44249  017802  6E33               	movwf	(btemp+9)^0,c
 44250  017804  0E80               	movlw	128
 44251  017806  6E34               	movwf	(btemp+10)^0,c
 44252  017808  0E7F               	movlw	127
 44253  01780A  6E35               	movwf	(btemp+11)^0,c
 44254                           
 44255                           ;stkvar	_prod @ sp[(-13)+0]
 44256  01780C  0EF3               	movlw	-13
 44257  01780E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 44258  017814  0EF4               	movlw	-12
 44259  017816  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 44260  01781C  0EF5               	movlw	-11
 44261  01781E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 44262  017824  0EF6               	movlw	-10
 44263  017826  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 44264  01782C  D044               	goto	l10691
 44265  01782E                     l10675:
 44266                           
 44267                           ;stkvar	_temp @ sp[(-13)+8]
 44268  01782E  0EFC               	movlw	-4
 44269  017830  BEE3               	btfsc	plusw1,7,c
 44270  017832  D007               	goto	u8860
 44271  017834  0EFC               	movlw	-4
 44272  017836  50E3               	movf	plusw1,w,c
 44273  017838  E10F               	bnz	l10681
 44274  01783A  0EFB               	movlw	-5
 44275  01783C  04E3               	decf	plusw1,w,c
 44276  01783E  B0D8               	btfsc	status,0,c
 44277  017840  D00B               	goto	l10681
 44278  017842                     u8860:
 44279                           
 44280                           ;stkvar	_prod @ sp[(-13)+0]
 44281  017842  0EF3               	movlw	-13
 44282  017844  6AE3               	clrf	plusw1,c
 44283  017846  0EF4               	movlw	-12
 44284  017848  6AE3               	clrf	plusw1,c
 44285  01784A  0EF5               	movlw	-11
 44286  01784C  6AE3               	clrf	plusw1,c
 44287  01784E  0EF6               	movlw	-10
 44288  017850  6AE3               	clrf	plusw1,c
 44289                           
 44290                           ;stkvar	_sign @ sp[(-13)+12]
 44291  017852  0EFF               	movlw	-1
 44292  017854  6AE3               	clrf	plusw1,c
 44293  017856  D02F               	goto	l10691
 44294  017858                     l10681:
 44295                           
 44296                           ;stkvar	_temp @ sp[(-13)+8]
 44297                           ;stkvar	_bexp @ sp[(-13)+10]
 44298  017858  0EFB               	movlw	-5
 44299  01785A  006F FF8C  F02A    	movff	plusw1,btemp
 44300  017860  0EFD               	movlw	-3
 44301  017862  0060  F0AB  FFE3   	movff	btemp,plusw1
 44302                           
 44303                           ;stkvar	_prod @ sp[(-13)+0]
 44304  017868  50E1               	movf	fsr1l,w,c
 44305  01786A  0FF3               	addlw	-13
 44306  01786C  6ED9               	movwf	fsr2l,c
 44307  01786E  50E2               	movf	fsr1h,w,c
 44308  017870  6EDA               	movwf	fsr2h,c
 44309  017872  0EFF               	movlw	255
 44310  017874  22DA               	addwfc	fsr2h,f,c
 44311  017876  0EFF               	movlw	255
 44312  017878  16DE               	andwf	postinc2,f,c
 44313  01787A  0EFF               	movlw	255
 44314  01787C  16DE               	andwf	postinc2,f,c
 44315  01787E  0E7F               	movlw	127
 44316  017880  16DE               	andwf	postinc2,f,c
 44317  017882  0E00               	movlw	0
 44318  017884  16DE               	andwf	postinc2,f,c
 44319                           
 44320                           ;stkvar	_bexp @ sp[(-13)+10]
 44321  017886  0EFD               	movlw	-3
 44322  017888  A0E3               	btfss	plusw1,0,c
 44323  01788A  D008               	goto	l10689
 44324                           
 44325                           ;stkvar	_prod @ sp[(-13)+0]
 44326  01788C  0EF5               	movlw	245
 44327  01788E  24E1               	addwf	fsr1l,w,c
 44328  017890  6ED9               	movwf	fsr2l,c
 44329  017892  0EFF               	movlw	255
 44330  017894  20E2               	addwfc	fsr1h,w,c
 44331  017896  6EDA               	movwf	fsr2h,c
 44332  017898  0E00               	movlw	0
 44333  01789A  8EDB               	bsf	plusw2,7,c
 44334  01789C                     l10689:
 44335                           
 44336                           ;stkvar	_prod @ sp[(-13)+0]
 44337  01789C  0EF6               	movlw	246
 44338  01789E  24E1               	addwf	fsr1l,w,c
 44339  0178A0  6ED9               	movwf	fsr2l,c
 44340  0178A2  0EFF               	movlw	255
 44341  0178A4  20E2               	addwfc	fsr1h,w,c
 44342  0178A6  6EDA               	movwf	fsr2h,c
 44343                           
 44344                           ;stkvar	_bexp @ sp[(-13)+10]
 44345  0178A8  0EFD               	movlw	-3
 44346  0178AA  006F FF8C  F035    	movff	plusw1,btemp+11
 44347  0178B0  90D8               	bcf	status,0,c
 44348  0178B2  3035               	rrcf	(btemp+11)^0,w,c
 44349  0178B4  6EDF               	movwf	indf2,c
 44350  0178B6                     l10691:
 44351                           
 44352                           ;stkvar	_sign @ sp[(-13)+12]
 44353  0178B6  0EFF               	movlw	-1
 44354  0178B8  006F FF8C  F035    	movff	plusw1,btemp+11
 44355                           
 44356                           ;stkvar	_prod @ sp[(-13)+0]
 44357  0178BE  0EF6               	movlw	246
 44358  0178C0  24E1               	addwf	fsr1l,w,c
 44359  0178C2  6ED9               	movwf	fsr2l,c
 44360  0178C4  0EFF               	movlw	255
 44361  0178C6  20E2               	addwfc	fsr1h,w,c
 44362  0178C8  6EDA               	movwf	fsr2h,c
 44363  0178CA  5035               	movf	(btemp+11)^0,w,c
 44364  0178CC  12DF               	iorwf	indf2,f,c
 44365                           
 44366                           ;stkvar	_prod @ sp[(-13)+0]
 44367  0178CE  0EF3               	movlw	-13
 44368  0178D0  006F FF8C  F02A    	movff	plusw1,btemp
 44369  0178D6  0EF4               	movlw	-12
 44370  0178D8  006F FF8C  F02B    	movff	plusw1,btemp+1
 44371  0178DE  0EF5               	movlw	-11
 44372  0178E0  006F FF8C  F02C    	movff	plusw1,btemp+2
 44373  0178E6  0EF6               	movlw	-10
 44374  0178E8  006F FF8C  F02D    	movff	plusw1,btemp+3
 44375  0178EE                     l3351:
 44376                           
 44377                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 44378  0178EE  0EEB               	movlw	235
 44379  0178F0  26E1               	addwf	fsr1l,f,c
 44380  0178F2  0EFF               	movlw	255
 44381  0178F4  22E2               	addwfc	fsr1h,f,c
 44382  0178F6  0012               	return		;funcret
 44383  0178F8                     __end_of___flmul:
 44384                           	opt callstack 0
 44385                           
 44386 ;; *************** function _SYSTEM_Initialize *****************
 44387 ;; Defined at:
 44388 ;;		line 50 in file "mcc_generated_files/mcc.c"
 44389 ;; Parameters:    Size  Location     Type
 44390 ;;		None
 44391 ;; Auto vars:     Size  Location     Type
 44392 ;;		None
 44393 ;; Return value:  Size  Location     Type
 44394 ;;                  1  [STACK] void 
 44395 ;; Registers used:
 44396 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 44397 ;; Tracked objects:
 44398 ;;		On entry : 0/0
 44399 ;;		On exit  : 3F/3C
 44400 ;;		Unchanged: 0/0
 44401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44406 ;;Total ram usage:        0 bytes
 44407 ;; Hardware stack levels used:    1
 44408 ;; Hardware stack levels required when called:   17
 44409 ;; This function calls:
 44410 ;;		_ADCC_Initialize
 44411 ;;		_CLKREF_Initialize
 44412 ;;		_CRC_Initialize
 44413 ;;		_DMA1_Initialize
 44414 ;;		_DMA2_Initialize
 44415 ;;		_EXT_INT_Initialize
 44416 ;;		_FVR_Initialize
 44417 ;;		_INTERRUPT_Initialize
 44418 ;;		_OSCILLATOR_Initialize
 44419 ;;		_PIN_MANAGER_Initialize
 44420 ;;		_PMD_Initialize
 44421 ;;		_PWM8_Initialize
 44422 ;;		_SPI1_Initialize
 44423 ;;		_TMR2_Initialize
 44424 ;;		_TMR3_Initialize
 44425 ;;		_TMR5_Initialize
 44426 ;;		_TMR6_Initialize
 44427 ;;		_UART1_Initialize
 44428 ;;		_UART2_Initialize
 44429 ;; This function is called by:
 44430 ;;		_main
 44431 ;; This function uses a reentrant model
 44432 ;;
 44433                           
 44434                           	psect	text157
 44435  0020FE                     __ptext157:
 44436                           	opt callstack 0
 44437  0020FE                     _SYSTEM_Initialize:
 44438                           	opt callstack 13
 44439                           
 44440                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 44441                           
 44442                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44443                           ;incstack = 0
 44444  0020FE  ECFC  F00D         	call	_INTERRUPT_Initialize	;wreg free
 44445                           
 44446                           ; BSR set to: 57
 44447                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 44448  002102  EC59  F017         	call	_PMD_Initialize	;wreg free
 44449                           
 44450                           ; BSR set to: 57
 44451                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 44452  002106  EC2A  F00A         	call	_PIN_MANAGER_Initialize	;wreg free
 44453                           
 44454                           ; BSR set to: 58
 44455                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 44456  00210A  EC4E  F017         	call	_OSCILLATOR_Initialize	;wreg free
 44457                           
 44458                           ; BSR set to: 57
 44459                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 44460  00210E  ECED  F017         	call	_FVR_Initialize	;wreg free
 44461                           
 44462                           ; BSR set to: 62
 44463                           ;mcc_generated_files/mcc.c: 57:     CRC_Initialize();
 44464  002112  EC73  F00A         	call	_CRC_Initialize	;wreg free
 44465                           
 44466                           ; BSR set to: 0
 44467                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 44468  002116  EC2A  F00D         	call	_ADCC_Initialize	;wreg free
 44469                           
 44470                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 44471  00211A  EC21  F017         	call	_TMR2_Initialize	;wreg free
 44472                           
 44473                           ; BSR set to: 57
 44474                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
 44475  00211E  EC43  F017         	call	_PWM8_Initialize	;wreg free
 44476                           
 44477                           ; BSR set to: 63
 44478                           ;mcc_generated_files/mcc.c: 61:     EXT_INT_Initialize();
 44479  002122  ECC0  F013         	call	_EXT_INT_Initialize	;wreg free
 44480                           
 44481                           ; BSR set to: 57
 44482                           ;mcc_generated_files/mcc.c: 62:     TMR6_Initialize();
 44483  002126  ECAC  F014         	call	_TMR6_Initialize	;wreg free
 44484                           
 44485                           ;mcc_generated_files/mcc.c: 63:     TMR3_Initialize();
 44486  00212A  EC39  F011         	call	_TMR3_Initialize	;wreg free
 44487                           
 44488                           ;mcc_generated_files/mcc.c: 64:     TMR5_Initialize();
 44489  00212E  EC15  F011         	call	_TMR5_Initialize	;wreg free
 44490                           
 44491                           ;mcc_generated_files/mcc.c: 65:     UART1_Initialize();
 44492  002132  ECF1  F010         	call	_UART1_Initialize	;wreg free
 44493                           
 44494                           ; BSR set to: 57
 44495                           ;mcc_generated_files/mcc.c: 66:     UART2_Initialize();
 44496  002136  ECF5  F00E         	call	_UART2_Initialize	;wreg free
 44497                           
 44498                           ; BSR set to: 57
 44499                           ;mcc_generated_files/mcc.c: 67:     SPI1_Initialize();
 44500  00213A  EC38  F017         	call	_SPI1_Initialize	;wreg free
 44501                           
 44502                           ; BSR set to: 61
 44503                           ;mcc_generated_files/mcc.c: 68:     DMA2_Initialize();
 44504  00213E  ECAE  F00F         	call	_DMA2_Initialize	;wreg free
 44505                           
 44506                           ; BSR set to: 59
 44507                           ;mcc_generated_files/mcc.c: 69:     DMA1_Initialize();
 44508  002142  ECF5  F00C         	call	_DMA1_Initialize	;wreg free
 44509                           
 44510                           ; BSR set to: 59
 44511                           ;mcc_generated_files/mcc.c: 70:     CLKREF_Initialize();
 44512  002146  ECC1  F017         	call	_CLKREF_Initialize	;wreg free
 44513                           
 44514                           ; BSR set to: 60
 44515                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 44516  00214A  0012               	return		;funcret
 44517  00214C                     __end_of_SYSTEM_Initialize:
 44518                           	opt callstack 0
 44519                           
 44520 ;; *************** function _UART2_Initialize *****************
 44521 ;; Defined at:
 44522 ;;		line 78 in file "mcc_generated_files/uart2.c"
 44523 ;; Parameters:    Size  Location     Type
 44524 ;;		None
 44525 ;; Auto vars:     Size  Location     Type
 44526 ;;		None
 44527 ;; Return value:  Size  Location     Type
 44528 ;;                  1  [STACK] void 
 44529 ;; Registers used:
 44530 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 44531 ;; Tracked objects:
 44532 ;;		On entry : 3F/39
 44533 ;;		On exit  : 3F/39
 44534 ;;		Unchanged: 0/0
 44535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44540 ;;Total ram usage:        0 bytes
 44541 ;; Hardware stack levels used:    1
 44542 ;; Hardware stack levels required when called:   16
 44543 ;; This function calls:
 44544 ;;		_UART2_SetRxInterruptHandler
 44545 ;;		_UART2_SetTxInterruptHandler
 44546 ;; This function is called by:
 44547 ;;		_SYSTEM_Initialize
 44548 ;; This function uses a reentrant model
 44549 ;;
 44550                           
 44551                           	psect	text158
 44552  001DEA                     __ptext158:
 44553                           	opt callstack 0
 44554  001DEA                     _UART2_Initialize:
 44555                           	opt callstack 13
 44556                           
 44557                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 44558                           
 44559                           ; BSR set to: 60
 44560                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44561                           ;incstack = 0
 44562  001DEA  0139               	movlb	57	; () banked
 44563  001DEC  9596               	bcf	150,2,b	;volatile
 44564                           
 44565                           ; BSR set to: 57
 44566                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 44567  001DEE  0E5C               	movlw	low _UART2_Receive_ISR
 44568  001DF0  6EE6               	movwf	postinc1,c
 44569  001DF2  0E2D               	movlw	high _UART2_Receive_ISR
 44570  001DF4  6EE6               	movwf	postinc1,c
 44571  001DF6  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 44572  001DF8  6EE6               	movwf	postinc1,c
 44573  001DFA  ECFD  F014         	call	_UART2_SetRxInterruptHandler	;wreg free
 44574                           
 44575                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 44576  001DFE  0139               	movlb	57	; () banked
 44577  001E00  9796               	bcf	150,3,b	;volatile
 44578                           
 44579                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 44580  001E02  0E2C               	movlw	low _UART2_Transmit_ISR
 44581  001E04  6EE6               	movwf	postinc1,c
 44582  001E06  0E29               	movlw	high _UART2_Transmit_ISR
 44583  001E08  6EE6               	movwf	postinc1,c
 44584  001E0A  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 44585  001E0C  6EE6               	movwf	postinc1,c
 44586  001E0E  ECE9  F014         	call	_UART2_SetTxInterruptHandler	;wreg free
 44587                           
 44588                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 44589  001E12  013D               	movlb	61	; () banked
 44590  001E14  6BD4               	clrf	212,b	;volatile
 44591                           
 44592                           ; BSR set to: 61
 44593                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 44594  001E16  6BD6               	clrf	214,b	;volatile
 44595                           
 44596                           ; BSR set to: 61
 44597                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 44598  001E18  6BD8               	clrf	216,b	;volatile
 44599                           
 44600                           ; BSR set to: 61
 44601                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 44602  001E1A  0EB0               	movlw	176
 44603  001E1C  6FDA               	movwf	218,b	;volatile
 44604                           
 44605                           ; BSR set to: 61
 44606                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 44607  001E1E  0E80               	movlw	128
 44608  001E20  6FDB               	movwf	219,b	;volatile
 44609                           
 44610                           ; BSR set to: 61
 44611                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 44612  001E22  6BDC               	clrf	220,b	;volatile
 44613                           
 44614                           ; BSR set to: 61
 44615                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 44616  001E24  0E82               	movlw	130
 44617  001E26  6FDD               	movwf	221,b	;volatile
 44618                           
 44619                           ; BSR set to: 61
 44620                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 44621  001E28  0E06               	movlw	6
 44622  001E2A  6FDE               	movwf	222,b	;volatile
 44623                           
 44624                           ; BSR set to: 61
 44625                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 44626  001E2C  6BDF               	clrf	223,b	;volatile
 44627                           
 44628                           ; BSR set to: 61
 44629                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 44630  001E2E  6BE0               	clrf	224,b	;volatile
 44631                           
 44632                           ; BSR set to: 61
 44633                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 44634  001E30  6BE1               	clrf	225,b	;volatile
 44635                           
 44636                           ; BSR set to: 61
 44637                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 44638  001E32  6BE2               	clrf	226,b	;volatile
 44639                           
 44640                           ; BSR set to: 61
 44641                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 44642  001E34  0100               	movlb	0	; () banked
 44643  001E36  6BCF               	clrf	_uart2TxHead& (0+255),b	;volatile
 44644                           
 44645                           ; BSR set to: 0
 44646                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 44647  001E38  6A56               	clrf	_uart2TxTail^0,c	;volatile
 44648                           
 44649                           ; BSR set to: 0
 44650                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 44651  001E3A  0E40               	movlw	64
 44652  001E3C  6E55               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 44653                           
 44654                           ; BSR set to: 0
 44655                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 44656  001E3E  6A54               	clrf	_uart2RxHead^0,c	;volatile
 44657                           
 44658                           ; BSR set to: 0
 44659                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 44660  001E40  6BCE               	clrf	_uart2RxTail& (0+255),b	;volatile
 44661                           
 44662                           ; BSR set to: 0
 44663                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 44664  001E42  6BCD               	clrf	_uart2RxCount& (0+255),b	;volatile
 44665                           
 44666                           ; BSR set to: 0
 44667                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 44668  001E44  0139               	movlb	57	; () banked
 44669  001E46  8596               	bsf	150,2,b	;volatile
 44670                           
 44671                           ; BSR set to: 57
 44672                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 44673  001E48  0012               	return		;funcret
 44674  001E4A                     __end_of_UART2_Initialize:
 44675                           	opt callstack 0
 44676                           
 44677 ;; *************** function _UART2_SetTxInterruptHandler *****************
 44678 ;; Defined at:
 44679 ;;		line 252 in file "mcc_generated_files/uart2.c"
 44680 ;; Parameters:    Size  Location     Type
 44681 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44682 ;;		 -> UART2_Transmit_ISR(1), 
 44683 ;; Auto vars:     Size  Location     Type
 44684 ;;		None
 44685 ;; Return value:  Size  Location     Type
 44686 ;;                  1  [STACK] void 
 44687 ;; Registers used:
 44688 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44689 ;; Tracked objects:
 44690 ;;		On entry : 3F/39
 44691 ;;		On exit  : 0/0
 44692 ;;		Unchanged: 0/0
 44693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44698 ;;Total ram usage:        0 bytes
 44699 ;; Hardware stack levels used:    1
 44700 ;; Hardware stack levels required when called:   15
 44701 ;; This function calls:
 44702 ;;		Nothing
 44703 ;; This function is called by:
 44704 ;;		_UART2_Initialize
 44705 ;; This function uses a reentrant model
 44706 ;;
 44707                           
 44708                           	psect	text159
 44709  0029D2                     __ptext159:
 44710                           	opt callstack 0
 44711  0029D2                     _UART2_SetTxInterruptHandler:
 44712                           	opt callstack 13
 44713                           
 44714                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 44715                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44716                           
 44717                           ; BSR set to: 57
 44718                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44719                           ;incstack = 0
 44720  0029D2  50E1               	movf	fsr1l,w,c
 44721  0029D4  0FFD               	addlw	-3
 44722  0029D6  6ED9               	movwf	fsr2l,c
 44723  0029D8  50E2               	movf	fsr1h,w,c
 44724  0029DA  6EDA               	movwf	fsr2h,c
 44725  0029DC  0EFF               	movlw	255
 44726  0029DE  22DA               	addwfc	fsr2h,f,c
 44727  0029E0  006F FF78  F0AA    	movff	postinc2,_UART2_TxInterruptHandler
 44728  0029E6  006F FF78  F0AB    	movff	postinc2,_UART2_TxInterruptHandler+1
 44729  0029EC  006F FF74  F0AC    	movff	postdec2,_UART2_TxInterruptHandler+2
 44730                           
 44731                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 44732  0029F2  52E5               	movf	postdec1,f,c
 44733  0029F4  52E5               	movf	postdec1,f,c
 44734  0029F6  52E5               	movf	postdec1,f,c
 44735  0029F8  0012               	return		;funcret
 44736  0029FA                     __end_of_UART2_SetTxInterruptHandler:
 44737                           	opt callstack 0
 44738                           
 44739 ;; *************** function _UART2_SetRxInterruptHandler *****************
 44740 ;; Defined at:
 44741 ;;		line 248 in file "mcc_generated_files/uart2.c"
 44742 ;; Parameters:    Size  Location     Type
 44743 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44744 ;;		 -> UART2_Receive_ISR(1), 
 44745 ;; Auto vars:     Size  Location     Type
 44746 ;;		None
 44747 ;; Return value:  Size  Location     Type
 44748 ;;                  1  [STACK] void 
 44749 ;; Registers used:
 44750 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44751 ;; Tracked objects:
 44752 ;;		On entry : 3F/39
 44753 ;;		On exit  : 0/0
 44754 ;;		Unchanged: 0/0
 44755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44760 ;;Total ram usage:        0 bytes
 44761 ;; Hardware stack levels used:    1
 44762 ;; Hardware stack levels required when called:   15
 44763 ;; This function calls:
 44764 ;;		Nothing
 44765 ;; This function is called by:
 44766 ;;		_UART2_Initialize
 44767 ;; This function uses a reentrant model
 44768 ;;
 44769                           
 44770                           	psect	text160
 44771  0029FA                     __ptext160:
 44772                           	opt callstack 0
 44773  0029FA                     _UART2_SetRxInterruptHandler:
 44774                           	opt callstack 13
 44775                           
 44776                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 44777                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44778                           
 44779                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44780                           ;incstack = 0
 44781  0029FA  50E1               	movf	fsr1l,w,c
 44782  0029FC  0FFD               	addlw	-3
 44783  0029FE  6ED9               	movwf	fsr2l,c
 44784  002A00  50E2               	movf	fsr1h,w,c
 44785  002A02  6EDA               	movwf	fsr2h,c
 44786  002A04  0EFF               	movlw	255
 44787  002A06  22DA               	addwfc	fsr2h,f,c
 44788  002A08  006F FF78  F0AD    	movff	postinc2,_UART2_RxInterruptHandler
 44789  002A0E  006F FF78  F0AE    	movff	postinc2,_UART2_RxInterruptHandler+1
 44790  002A14  006F FF74  F0AF    	movff	postdec2,_UART2_RxInterruptHandler+2
 44791                           
 44792                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 44793  002A1A  52E5               	movf	postdec1,f,c
 44794  002A1C  52E5               	movf	postdec1,f,c
 44795  002A1E  52E5               	movf	postdec1,f,c
 44796  002A20  0012               	return		;funcret
 44797  002A22                     __end_of_UART2_SetRxInterruptHandler:
 44798                           	opt callstack 0
 44799                           
 44800 ;; *************** function _UART1_Initialize *****************
 44801 ;; Defined at:
 44802 ;;		line 75 in file "mcc_generated_files/uart1.c"
 44803 ;; Parameters:    Size  Location     Type
 44804 ;;		None
 44805 ;; Auto vars:     Size  Location     Type
 44806 ;;		None
 44807 ;; Return value:  Size  Location     Type
 44808 ;;                  1  [STACK] void 
 44809 ;; Registers used:
 44810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 44811 ;; Tracked objects:
 44812 ;;		On entry : 0/39
 44813 ;;		On exit  : 3F/39
 44814 ;;		Unchanged: 0/0
 44815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44820 ;;Total ram usage:        0 bytes
 44821 ;; Hardware stack levels used:    1
 44822 ;; Hardware stack levels required when called:   16
 44823 ;; This function calls:
 44824 ;;		_UART1_SetRxInterruptHandler
 44825 ;; This function is called by:
 44826 ;;		_SYSTEM_Initialize
 44827 ;; This function uses a reentrant model
 44828 ;;
 44829                           
 44830                           	psect	text161
 44831  0021E2                     __ptext161:
 44832                           	opt callstack 0
 44833  0021E2                     _UART1_Initialize:
 44834                           	opt callstack 13
 44835                           
 44836                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 44837                           
 44838                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44839                           ;incstack = 0
 44840  0021E2  0139               	movlb	57	; () banked
 44841  0021E4  9793               	bcf	147,3,b	;volatile
 44842                           
 44843                           ; BSR set to: 57
 44844                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 44845  0021E6  0E1A               	movlw	low _UART1_Receive_ISR
 44846  0021E8  6EE6               	movwf	postinc1,c
 44847  0021EA  0E2D               	movlw	high _UART1_Receive_ISR
 44848  0021EC  6EE6               	movwf	postinc1,c
 44849  0021EE  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 44850  0021F0  6EE6               	movwf	postinc1,c
 44851  0021F2  EC11  F015         	call	_UART1_SetRxInterruptHandler	;wreg free
 44852                           
 44853                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 44854  0021F6  013D               	movlb	61	; () banked
 44855  0021F8  6BEC               	clrf	236,b	;volatile
 44856                           
 44857                           ; BSR set to: 61
 44858                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 44859  0021FA  6BED               	clrf	237,b	;volatile
 44860                           
 44861                           ; BSR set to: 61
 44862                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 44863  0021FC  6BEE               	clrf	238,b	;volatile
 44864                           
 44865                           ; BSR set to: 61
 44866                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 44867  0021FE  6BEF               	clrf	239,b	;volatile
 44868                           
 44869                           ; BSR set to: 61
 44870                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 44871  002200  6BF0               	clrf	240,b	;volatile
 44872                           
 44873                           ; BSR set to: 61
 44874                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 44875  002202  6BF1               	clrf	241,b	;volatile
 44876                           
 44877                           ; BSR set to: 61
 44878                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 44879  002204  0EB0               	movlw	176
 44880  002206  6FF2               	movwf	242,b	;volatile
 44881                           
 44882                           ; BSR set to: 61
 44883                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 44884  002208  0E80               	movlw	128
 44885  00220A  6FF3               	movwf	243,b	;volatile
 44886                           
 44887                           ; BSR set to: 61
 44888                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 44889  00220C  6BF4               	clrf	244,b	;volatile
 44890                           
 44891                           ; BSR set to: 61
 44892                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 44893  00220E  0E8A               	movlw	138
 44894  002210  6FF5               	movwf	245,b	;volatile
 44895                           
 44896                           ; BSR set to: 61
 44897                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 44898  002212  6BF6               	clrf	246,b	;volatile
 44899                           
 44900                           ; BSR set to: 61
 44901                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 44902  002214  6BF7               	clrf	247,b	;volatile
 44903                           
 44904                           ; BSR set to: 61
 44905                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 44906  002216  6BF8               	clrf	248,b	;volatile
 44907                           
 44908                           ; BSR set to: 61
 44909                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 44910  002218  6BF9               	clrf	249,b	;volatile
 44911                           
 44912                           ; BSR set to: 61
 44913                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 44914  00221A  6BFA               	clrf	250,b	;volatile
 44915                           
 44916                           ; BSR set to: 61
 44917                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 44918  00221C  6A57               	clrf	_uart1RxHead^0,c	;volatile
 44919                           
 44920                           ; BSR set to: 61
 44921                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 44922  00221E  0100               	movlb	0	; () banked
 44923  002220  6BD1               	clrf	_uart1RxTail& (0+255),b	;volatile
 44924                           
 44925                           ; BSR set to: 0
 44926                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 44927  002222  6BD0               	clrf	_uart1RxCount& (0+255),b	;volatile
 44928                           
 44929                           ; BSR set to: 0
 44930                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 44931  002224  0139               	movlb	57	; () banked
 44932  002226  8793               	bsf	147,3,b	;volatile
 44933                           
 44934                           ; BSR set to: 57
 44935                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 44936  002228  0012               	return		;funcret
 44937  00222A                     __end_of_UART1_Initialize:
 44938                           	opt callstack 0
 44939                           
 44940 ;; *************** function _UART1_SetRxInterruptHandler *****************
 44941 ;; Defined at:
 44942 ;;		line 207 in file "mcc_generated_files/uart1.c"
 44943 ;; Parameters:    Size  Location     Type
 44944 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44945 ;;		 -> UART1_Receive_ISR(1), 
 44946 ;; Auto vars:     Size  Location     Type
 44947 ;;		None
 44948 ;; Return value:  Size  Location     Type
 44949 ;;                  1  [STACK] void 
 44950 ;; Registers used:
 44951 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44952 ;; Tracked objects:
 44953 ;;		On entry : 3F/39
 44954 ;;		On exit  : 0/0
 44955 ;;		Unchanged: 0/0
 44956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44961 ;;Total ram usage:        0 bytes
 44962 ;; Hardware stack levels used:    1
 44963 ;; Hardware stack levels required when called:   15
 44964 ;; This function calls:
 44965 ;;		Nothing
 44966 ;; This function is called by:
 44967 ;;		_UART1_Initialize
 44968 ;; This function uses a reentrant model
 44969 ;;
 44970                           
 44971                           	psect	text162
 44972  002A22                     __ptext162:
 44973                           	opt callstack 0
 44974  002A22                     _UART1_SetRxInterruptHandler:
 44975                           	opt callstack 13
 44976                           
 44977                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 44978                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44979                           
 44980                           ; BSR set to: 57
 44981                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44982                           ;incstack = 0
 44983  002A22  50E1               	movf	fsr1l,w,c
 44984  002A24  0FFD               	addlw	-3
 44985  002A26  6ED9               	movwf	fsr2l,c
 44986  002A28  50E2               	movf	fsr1h,w,c
 44987  002A2A  6EDA               	movwf	fsr2h,c
 44988  002A2C  0EFF               	movlw	255
 44989  002A2E  22DA               	addwfc	fsr2h,f,c
 44990  002A30  006F FF78  F0A7    	movff	postinc2,_UART1_RxInterruptHandler
 44991  002A36  006F FF78  F0A8    	movff	postinc2,_UART1_RxInterruptHandler+1
 44992  002A3C  006F FF74  F0A9    	movff	postdec2,_UART1_RxInterruptHandler+2
 44993                           
 44994                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 44995  002A42  52E5               	movf	postdec1,f,c
 44996  002A44  52E5               	movf	postdec1,f,c
 44997  002A46  52E5               	movf	postdec1,f,c
 44998  002A48  0012               	return		;funcret
 44999  002A4A                     __end_of_UART1_SetRxInterruptHandler:
 45000                           	opt callstack 0
 45001                           
 45002 ;; *************** function _TMR6_Initialize *****************
 45003 ;; Defined at:
 45004 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 45005 ;; Parameters:    Size  Location     Type
 45006 ;;		None
 45007 ;; Auto vars:     Size  Location     Type
 45008 ;;		None
 45009 ;; Return value:  Size  Location     Type
 45010 ;;                  1  [STACK] void 
 45011 ;; Registers used:
 45012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 45013 ;; Tracked objects:
 45014 ;;		On entry : 3F/39
 45015 ;;		On exit  : 0/0
 45016 ;;		Unchanged: 0/0
 45017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45022 ;;Total ram usage:        0 bytes
 45023 ;; Hardware stack levels used:    1
 45024 ;; Hardware stack levels required when called:   16
 45025 ;; This function calls:
 45026 ;;		_TMR6_SetInterruptHandler
 45027 ;; This function is called by:
 45028 ;;		_SYSTEM_Initialize
 45029 ;; This function uses a reentrant model
 45030 ;;
 45031                           
 45032                           	psect	text163
 45033  002958                     __ptext163:
 45034                           	opt callstack 0
 45035  002958                     _TMR6_Initialize:
 45036                           	opt callstack 13
 45037                           
 45038                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 45039                           
 45040                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45041                           ;incstack = 0
 45042  002958  0E01               	movlw	1
 45043  00295A  6E96               	movwf	150,c	;volatile
 45044                           
 45045                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 45046  00295C  6A95               	clrf	149,c	;volatile
 45047                           
 45048                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 45049  00295E  6A97               	clrf	151,c	;volatile
 45050                           
 45051                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 45052  002960  0E7C               	movlw	124
 45053  002962  6E93               	movwf	147,c	;volatile
 45054                           
 45055                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 45056  002964  6A92               	clrf	146,c	;volatile
 45057                           
 45058                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 45059  002966  0139               	movlb	57	; () banked
 45060  002968  91A9               	bcf	169,0,b	;volatile
 45061                           
 45062                           ; BSR set to: 57
 45063                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 45064  00296A  8199               	bsf	153,0,b	;volatile
 45065                           
 45066                           ; BSR set to: 57
 45067                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 45068  00296C  0E4C               	movlw	low _TMR6_DefaultInterruptHandler
 45069  00296E  6EE6               	movwf	postinc1,c
 45070  002970  0E21               	movlw	high _TMR6_DefaultInterruptHandler
 45071  002972  6EE6               	movwf	postinc1,c
 45072  002974  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 45073  002976  6EE6               	movwf	postinc1,c
 45074  002978  EC25  F015         	call	_TMR6_SetInterruptHandler	;wreg free
 45075                           
 45076                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 45077  00297C  0EE0               	movlw	224
 45078  00297E  6E94               	movwf	148,c	;volatile
 45079                           
 45080                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45081  002980  0012               	return		;funcret
 45082  002982                     __end_of_TMR6_Initialize:
 45083                           	opt callstack 0
 45084                           
 45085 ;; *************** function _TMR6_SetInterruptHandler *****************
 45086 ;; Defined at:
 45087 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 45088 ;; Parameters:    Size  Location     Type
 45089 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 45090 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 45091 ;; Auto vars:     Size  Location     Type
 45092 ;;		None
 45093 ;; Return value:  Size  Location     Type
 45094 ;;                  1  [STACK] void 
 45095 ;; Registers used:
 45096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45097 ;; Tracked objects:
 45098 ;;		On entry : 3F/39
 45099 ;;		On exit  : 0/0
 45100 ;;		Unchanged: 0/0
 45101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45106 ;;Total ram usage:        0 bytes
 45107 ;; Hardware stack levels used:    1
 45108 ;; Hardware stack levels required when called:   15
 45109 ;; This function calls:
 45110 ;;		Nothing
 45111 ;; This function is called by:
 45112 ;;		_TMR6_Initialize
 45113 ;; This function uses a reentrant model
 45114 ;;
 45115                           
 45116                           	psect	text164
 45117  002A4A                     __ptext164:
 45118                           	opt callstack 0
 45119  002A4A                     _TMR6_SetInterruptHandler:
 45120                           	opt callstack 13
 45121                           
 45122                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 45123                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 45124                           
 45125                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45126                           ;incstack = 0
 45127  002A4A  50E1               	movf	fsr1l,w,c
 45128  002A4C  0FFD               	addlw	-3
 45129  002A4E  6ED9               	movwf	fsr2l,c
 45130  002A50  50E2               	movf	fsr1h,w,c
 45131  002A52  6EDA               	movwf	fsr2h,c
 45132  002A54  0EFF               	movlw	255
 45133  002A56  22DA               	addwfc	fsr2h,f,c
 45134  002A58  006F FF78  F09E    	movff	postinc2,_TMR6_InterruptHandler
 45135  002A5E  006F FF78  F09F    	movff	postinc2,_TMR6_InterruptHandler+1
 45136  002A64  006F FF74  F0A0    	movff	postdec2,_TMR6_InterruptHandler+2
 45137                           
 45138                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 45139  002A6A  52E5               	movf	postdec1,f,c
 45140  002A6C  52E5               	movf	postdec1,f,c
 45141  002A6E  52E5               	movf	postdec1,f,c
 45142  002A70  0012               	return		;funcret
 45143  002A72                     __end_of_TMR6_SetInterruptHandler:
 45144                           	opt callstack 0
 45145                           
 45146 ;; *************** function _TMR5_Initialize *****************
 45147 ;; Defined at:
 45148 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 45149 ;; Parameters:    Size  Location     Type
 45150 ;;		None
 45151 ;; Auto vars:     Size  Location     Type
 45152 ;;		None
 45153 ;; Return value:  Size  Location     Type
 45154 ;;                  1  [STACK] void 
 45155 ;; Registers used:
 45156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 45157 ;; Tracked objects:
 45158 ;;		On entry : 0/39
 45159 ;;		On exit  : 0/0
 45160 ;;		Unchanged: 0/0
 45161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45166 ;;Total ram usage:        0 bytes
 45167 ;; Hardware stack levels used:    1
 45168 ;; Hardware stack levels required when called:   16
 45169 ;; This function calls:
 45170 ;;		_TMR5_SetInterruptHandler
 45171 ;; This function is called by:
 45172 ;;		_SYSTEM_Initialize
 45173 ;; This function uses a reentrant model
 45174 ;;
 45175                           
 45176                           	psect	text165
 45177  00222A                     __ptext165:
 45178                           	opt callstack 0
 45179  00222A                     _TMR5_Initialize:
 45180                           	opt callstack 13
 45181                           
 45182                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 45183                           
 45184                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45185                           ;incstack = 0
 45186  00222A  6A9B               	clrf	155,c	;volatile
 45187                           
 45188                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 45189  00222C  6A9C               	clrf	156,c	;volatile
 45190                           
 45191                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 45192  00222E  0E01               	movlw	1
 45193  002230  6E9D               	movwf	157,c	;volatile
 45194                           
 45195                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 45196  002232  0E63               	movlw	99
 45197  002234  6E99               	movwf	153,c	;volatile
 45198                           
 45199                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 45200  002236  0EC0               	movlw	192
 45201  002238  6E98               	movwf	152,c	;volatile
 45202                           
 45203                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 45204  00223A  5098               	movf	152,w,c	;volatile
 45205  00223C  006F FE64  F02A    	movff	16281,btemp	;volatile
 45206  002242  6A2B               	clrf	(btemp+1)^0,c
 45207  002244  0060  F0A8  F02B   	movff	btemp,btemp+1
 45208  00224A  6A2A               	clrf	btemp^0,c
 45209  00224C  102A               	iorwf	btemp^0,w,c
 45210  00224E  0100               	movlb	0	; () banked
 45211  002250  6FC4               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 45212  002252  502B               	movf	(btemp+1)^0,w,c
 45213  002254  6FC5               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 45214                           
 45215                           ; BSR set to: 0
 45216                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 45217  002256  0139               	movlb	57	; () banked
 45218  002258  9DA8               	bcf	168,6,b	;volatile
 45219                           
 45220                           ; BSR set to: 57
 45221                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 45222  00225A  8D98               	bsf	152,6,b	;volatile
 45223                           
 45224                           ; BSR set to: 57
 45225                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 45226  00225C  0E40               	movlw	low _TMR5_DefaultInterruptHandler
 45227  00225E  6EE6               	movwf	postinc1,c
 45228  002260  0E26               	movlw	high _TMR5_DefaultInterruptHandler
 45229  002262  6EE6               	movwf	postinc1,c
 45230  002264  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 45231  002266  6EE6               	movwf	postinc1,c
 45232  002268  EC39  F015         	call	_TMR5_SetInterruptHandler	;wreg free
 45233                           
 45234                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 45235  00226C  0E31               	movlw	49
 45236  00226E  6E9A               	movwf	154,c	;volatile
 45237                           
 45238                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45239  002270  0012               	return		;funcret
 45240  002272                     __end_of_TMR5_Initialize:
 45241                           	opt callstack 0
 45242                           
 45243 ;; *************** function _TMR5_SetInterruptHandler *****************
 45244 ;; Defined at:
 45245 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 45246 ;; Parameters:    Size  Location     Type
 45247 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 45248 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 45249 ;; Auto vars:     Size  Location     Type
 45250 ;;		None
 45251 ;; Return value:  Size  Location     Type
 45252 ;;                  1  [STACK] void 
 45253 ;; Registers used:
 45254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45255 ;; Tracked objects:
 45256 ;;		On entry : 3F/39
 45257 ;;		On exit  : 0/0
 45258 ;;		Unchanged: 0/0
 45259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45264 ;;Total ram usage:        0 bytes
 45265 ;; Hardware stack levels used:    1
 45266 ;; Hardware stack levels required when called:   15
 45267 ;; This function calls:
 45268 ;;		Nothing
 45269 ;; This function is called by:
 45270 ;;		_TMR5_Initialize
 45271 ;; This function uses a reentrant model
 45272 ;;
 45273                           
 45274                           	psect	text166
 45275  002A72                     __ptext166:
 45276                           	opt callstack 0
 45277  002A72                     _TMR5_SetInterruptHandler:
 45278                           	opt callstack 13
 45279                           
 45280                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 45281                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 45282                           
 45283                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45284                           ;incstack = 0
 45285  002A72  50E1               	movf	fsr1l,w,c
 45286  002A74  0FFD               	addlw	-3
 45287  002A76  6ED9               	movwf	fsr2l,c
 45288  002A78  50E2               	movf	fsr1h,w,c
 45289  002A7A  6EDA               	movwf	fsr2h,c
 45290  002A7C  0EFF               	movlw	255
 45291  002A7E  22DA               	addwfc	fsr2h,f,c
 45292  002A80  006F FF78  F09B    	movff	postinc2,_TMR5_InterruptHandler
 45293  002A86  006F FF78  F09C    	movff	postinc2,_TMR5_InterruptHandler+1
 45294  002A8C  006F FF74  F09D    	movff	postdec2,_TMR5_InterruptHandler+2
 45295                           
 45296                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 45297  002A92  52E5               	movf	postdec1,f,c
 45298  002A94  52E5               	movf	postdec1,f,c
 45299  002A96  52E5               	movf	postdec1,f,c
 45300  002A98  0012               	return		;funcret
 45301  002A9A                     __end_of_TMR5_SetInterruptHandler:
 45302                           	opt callstack 0
 45303                           
 45304 ;; *************** function _TMR3_Initialize *****************
 45305 ;; Defined at:
 45306 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 45307 ;; Parameters:    Size  Location     Type
 45308 ;;		None
 45309 ;; Auto vars:     Size  Location     Type
 45310 ;;		None
 45311 ;; Return value:  Size  Location     Type
 45312 ;;                  1  [STACK] void 
 45313 ;; Registers used:
 45314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 45315 ;; Tracked objects:
 45316 ;;		On entry : 0/39
 45317 ;;		On exit  : 0/0
 45318 ;;		Unchanged: 0/0
 45319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45324 ;;Total ram usage:        0 bytes
 45325 ;; Hardware stack levels used:    1
 45326 ;; Hardware stack levels required when called:   16
 45327 ;; This function calls:
 45328 ;;		_TMR3_SetInterruptHandler
 45329 ;; This function is called by:
 45330 ;;		_SYSTEM_Initialize
 45331 ;; This function uses a reentrant model
 45332 ;;
 45333                           
 45334                           	psect	text167
 45335  002272                     __ptext167:
 45336                           	opt callstack 0
 45337  002272                     _TMR3_Initialize:
 45338                           	opt callstack 13
 45339                           
 45340                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 45341                           
 45342                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45343                           ;incstack = 0
 45344  002272  6AA7               	clrf	167,c	;volatile
 45345                           
 45346                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 45347  002274  6AA8               	clrf	168,c	;volatile
 45348                           
 45349                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 45350  002276  0E01               	movlw	1
 45351  002278  6EA9               	movwf	169,c	;volatile
 45352                           
 45353                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 45354  00227A  0E3C               	movlw	60
 45355  00227C  6EA5               	movwf	165,c	;volatile
 45356                           
 45357                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 45358  00227E  0EB0               	movlw	176
 45359  002280  6EA4               	movwf	164,c	;volatile
 45360                           
 45361                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 45362  002282  50A4               	movf	164,w,c	;volatile
 45363  002284  006F FE94  F02A    	movff	16293,btemp	;volatile
 45364  00228A  6A2B               	clrf	(btemp+1)^0,c
 45365  00228C  0060  F0A8  F02B   	movff	btemp,btemp+1
 45366  002292  6A2A               	clrf	btemp^0,c
 45367  002294  102A               	iorwf	btemp^0,w,c
 45368  002296  0100               	movlb	0	; () banked
 45369  002298  6FC0               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 45370  00229A  502B               	movf	(btemp+1)^0,w,c
 45371  00229C  6FC1               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 45372                           
 45373                           ; BSR set to: 0
 45374                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 45375  00229E  0139               	movlb	57	; () banked
 45376  0022A0  9DA6               	bcf	166,6,b	;volatile
 45377                           
 45378                           ; BSR set to: 57
 45379                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 45380  0022A2  8D96               	bsf	150,6,b	;volatile
 45381                           
 45382                           ; BSR set to: 57
 45383                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 45384  0022A4  0E10               	movlw	low _TMR3_DefaultInterruptHandler
 45385  0022A6  6EE6               	movwf	postinc1,c
 45386  0022A8  0E30               	movlw	high _TMR3_DefaultInterruptHandler
 45387  0022AA  6EE6               	movwf	postinc1,c
 45388  0022AC  0E00               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 45389  0022AE  6EE6               	movwf	postinc1,c
 45390  0022B0  EC4D  F015         	call	_TMR3_SetInterruptHandler	;wreg free
 45391                           
 45392                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 45393  0022B4  0E31               	movlw	49
 45394  0022B6  6EA6               	movwf	166,c	;volatile
 45395                           
 45396                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45397  0022B8  0012               	return		;funcret
 45398  0022BA                     __end_of_TMR3_Initialize:
 45399                           	opt callstack 0
 45400                           
 45401 ;; *************** function _TMR3_SetInterruptHandler *****************
 45402 ;; Defined at:
 45403 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 45404 ;; Parameters:    Size  Location     Type
 45405 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 45406 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 45407 ;; Auto vars:     Size  Location     Type
 45408 ;;		None
 45409 ;; Return value:  Size  Location     Type
 45410 ;;                  1  [STACK] void 
 45411 ;; Registers used:
 45412 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45413 ;; Tracked objects:
 45414 ;;		On entry : 0/1
 45415 ;;		On exit  : 0/0
 45416 ;;		Unchanged: 0/0
 45417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45422 ;;Total ram usage:        0 bytes
 45423 ;; Hardware stack levels used:    1
 45424 ;; Hardware stack levels required when called:   15
 45425 ;; This function calls:
 45426 ;;		Nothing
 45427 ;; This function is called by:
 45428 ;;		_TMR3_Initialize
 45429 ;;		_init_bsoc
 45430 ;; This function uses a reentrant model
 45431 ;;
 45432                           
 45433                           	psect	text168
 45434  002A9A                     __ptext168:
 45435                           	opt callstack 0
 45436  002A9A                     _TMR3_SetInterruptHandler:
 45437                           	opt callstack 14
 45438                           
 45439                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 45440                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 45441                           
 45442                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45443                           ;incstack = 0
 45444  002A9A  50E1               	movf	fsr1l,w,c
 45445  002A9C  0FFD               	addlw	-3
 45446  002A9E  6ED9               	movwf	fsr2l,c
 45447  002AA0  50E2               	movf	fsr1h,w,c
 45448  002AA2  6EDA               	movwf	fsr2h,c
 45449  002AA4  0EFF               	movlw	255
 45450  002AA6  22DA               	addwfc	fsr2h,f,c
 45451  002AA8  006F FF78  F098    	movff	postinc2,_TMR3_InterruptHandler
 45452  002AAE  006F FF78  F099    	movff	postinc2,_TMR3_InterruptHandler+1
 45453  002AB4  006F FF74  F09A    	movff	postdec2,_TMR3_InterruptHandler+2
 45454                           
 45455                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 45456  002ABA  52E5               	movf	postdec1,f,c
 45457  002ABC  52E5               	movf	postdec1,f,c
 45458  002ABE  52E5               	movf	postdec1,f,c
 45459  002AC0  0012               	return		;funcret
 45460  002AC2                     __end_of_TMR3_SetInterruptHandler:
 45461                           	opt callstack 0
 45462                           
 45463 ;; *************** function _TMR2_Initialize *****************
 45464 ;; Defined at:
 45465 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 45466 ;; Parameters:    Size  Location     Type
 45467 ;;		None
 45468 ;; Auto vars:     Size  Location     Type
 45469 ;;		None
 45470 ;; Return value:  Size  Location     Type
 45471 ;;                  1  [STACK] void 
 45472 ;; Registers used:
 45473 ;;		wreg, status,2
 45474 ;; Tracked objects:
 45475 ;;		On entry : 0/0
 45476 ;;		On exit  : 3F/39
 45477 ;;		Unchanged: 0/0
 45478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45483 ;;Total ram usage:        0 bytes
 45484 ;; Hardware stack levels used:    1
 45485 ;; Hardware stack levels required when called:   15
 45486 ;; This function calls:
 45487 ;;		Nothing
 45488 ;; This function is called by:
 45489 ;;		_SYSTEM_Initialize
 45490 ;; This function uses a reentrant model
 45491 ;;
 45492                           
 45493                           	psect	text169
 45494  002E42                     __ptext169:
 45495                           	opt callstack 0
 45496  002E42                     _TMR2_Initialize:
 45497                           	opt callstack 14
 45498                           
 45499                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 45500                           
 45501                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45502                           ;incstack = 0
 45503  002E42  0E01               	movlw	1
 45504  002E44  6EAE               	movwf	174,c	;volatile
 45505                           
 45506                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 45507  002E46  6AAD               	clrf	173,c	;volatile
 45508                           
 45509                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 45510  002E48  6AAF               	clrf	175,c	;volatile
 45511                           
 45512                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 45513  002E4A  0E63               	movlw	99
 45514  002E4C  6EAB               	movwf	171,c	;volatile
 45515                           
 45516                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 45517  002E4E  6AAA               	clrf	170,c	;volatile
 45518                           
 45519                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 45520  002E50  0139               	movlb	57	; () banked
 45521  002E52  95A4               	bcf	164,2,b	;volatile
 45522                           
 45523                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 45524  002E54  0EC0               	movlw	192
 45525  002E56  6EAC               	movwf	172,c	;volatile
 45526                           
 45527                           ; BSR set to: 57
 45528                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45529  002E58  0012               	return		;funcret
 45530  002E5A                     __end_of_TMR2_Initialize:
 45531                           	opt callstack 0
 45532                           
 45533 ;; *************** function _SPI1_Initialize *****************
 45534 ;; Defined at:
 45535 ;;		line 64 in file "mcc_generated_files/spi1.c"
 45536 ;; Parameters:    Size  Location     Type
 45537 ;;		None
 45538 ;; Auto vars:     Size  Location     Type
 45539 ;;		None
 45540 ;; Return value:  Size  Location     Type
 45541 ;;                  1  [STACK] void 
 45542 ;; Registers used:
 45543 ;;		wreg, status,2
 45544 ;; Tracked objects:
 45545 ;;		On entry : 3F/39
 45546 ;;		On exit  : 3F/3D
 45547 ;;		Unchanged: 0/0
 45548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45553 ;;Total ram usage:        0 bytes
 45554 ;; Hardware stack levels used:    1
 45555 ;; Hardware stack levels required when called:   15
 45556 ;; This function calls:
 45557 ;;		Nothing
 45558 ;; This function is called by:
 45559 ;;		_SYSTEM_Initialize
 45560 ;; This function uses a reentrant model
 45561 ;;
 45562                           
 45563                           	psect	text170
 45564  002E70                     __ptext170:
 45565                           	opt callstack 0
 45566  002E70                     _SPI1_Initialize:
 45567                           	opt callstack 14
 45568                           
 45569                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 45570                           
 45571                           ; BSR set to: 57
 45572                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45573                           ;incstack = 0
 45574  002E70  0E40               	movlw	64
 45575  002E72  013D               	movlb	61	; () banked
 45576  002E74  6F15               	movwf	21,b	;volatile
 45577                           
 45578                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 45579  002E76  0E03               	movlw	3
 45580  002E78  6F16               	movwf	22,b	;volatile
 45581                           
 45582                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 45583  002E7A  0E4F               	movlw	79
 45584  002E7C  6F19               	movwf	25,b	;volatile
 45585                           
 45586                           ; BSR set to: 61
 45587                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 45588  002E7E  6B1C               	clrf	28,b	;volatile
 45589                           
 45590                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 45591  002E80  0E83               	movlw	131
 45592  002E82  6F14               	movwf	20,b	;volatile
 45593                           
 45594                           ; BSR set to: 61
 45595                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45596  002E84  0012               	return		;funcret
 45597  002E86                     __end_of_SPI1_Initialize:
 45598                           	opt callstack 0
 45599                           
 45600 ;; *************** function _PWM8_Initialize *****************
 45601 ;; Defined at:
 45602 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 45603 ;; Parameters:    Size  Location     Type
 45604 ;;		None
 45605 ;; Auto vars:     Size  Location     Type
 45606 ;;		None
 45607 ;; Return value:  Size  Location     Type
 45608 ;;                  1  [STACK] void 
 45609 ;; Registers used:
 45610 ;;		wreg, status,2
 45611 ;; Tracked objects:
 45612 ;;		On entry : 3F/39
 45613 ;;		On exit  : 3F/3F
 45614 ;;		Unchanged: 0/0
 45615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45620 ;;Total ram usage:        0 bytes
 45621 ;; Hardware stack levels used:    1
 45622 ;; Hardware stack levels required when called:   15
 45623 ;; This function calls:
 45624 ;;		Nothing
 45625 ;; This function is called by:
 45626 ;;		_SYSTEM_Initialize
 45627 ;; This function uses a reentrant model
 45628 ;;
 45629                           
 45630                           	psect	text171
 45631  002E86                     __ptext171:
 45632                           	opt callstack 0
 45633  002E86                     _PWM8_Initialize:
 45634                           	opt callstack 14
 45635                           
 45636                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 45637                           
 45638                           ; BSR set to: 61
 45639                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45640                           ;incstack = 0
 45641  002E86  0E80               	movlw	128
 45642  002E88  6E62               	movwf	98,c	;volatile
 45643                           
 45644                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 45645  002E8A  6A61               	clrf	97,c	;volatile
 45646                           
 45647                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 45648  002E8C  0E40               	movlw	64
 45649  002E8E  6E60               	movwf	96,c	;volatile
 45650                           
 45651                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 45652  002E90  013F               	movlb	63	; () banked
 45653  002E92  515F               	movf	95,w,b	;volatile
 45654  002E94  0B3F               	andlw	-193
 45655  002E96  0940               	iorlw	64
 45656  002E98  6F5F               	movwf	95,b	;volatile
 45657                           
 45658                           ; BSR set to: 63
 45659                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45660  002E9A  0012               	return		;funcret
 45661  002E9C                     __end_of_PWM8_Initialize:
 45662                           	opt callstack 0
 45663                           
 45664 ;; *************** function _PMD_Initialize *****************
 45665 ;; Defined at:
 45666 ;;		line 91 in file "mcc_generated_files/mcc.c"
 45667 ;; Parameters:    Size  Location     Type
 45668 ;;		None
 45669 ;; Auto vars:     Size  Location     Type
 45670 ;;		None
 45671 ;; Return value:  Size  Location     Type
 45672 ;;                  1  [STACK] void 
 45673 ;; Registers used:
 45674 ;;		None
 45675 ;; Tracked objects:
 45676 ;;		On entry : 3F/39
 45677 ;;		On exit  : 3F/39
 45678 ;;		Unchanged: 0/0
 45679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45684 ;;Total ram usage:        0 bytes
 45685 ;; Hardware stack levels used:    1
 45686 ;; Hardware stack levels required when called:   15
 45687 ;; This function calls:
 45688 ;;		Nothing
 45689 ;; This function is called by:
 45690 ;;		_SYSTEM_Initialize
 45691 ;; This function uses a reentrant model
 45692 ;;
 45693                           
 45694                           	psect	text172
 45695  002EB2                     __ptext172:
 45696                           	opt callstack 0
 45697  002EB2                     _PMD_Initialize:
 45698                           	opt callstack 14
 45699                           
 45700                           ;mcc_generated_files/mcc.c: 94:     PMD0 = 0x00;
 45701                           
 45702                           ; BSR set to: 63
 45703                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45704                           ;incstack = 0
 45705  002EB2  0139               	movlb	57	; () banked
 45706  002EB4  6BC0               	clrf	192,b	;volatile
 45707                           
 45708                           ;mcc_generated_files/mcc.c: 96:     PMD1 = 0x00;
 45709  002EB6  6BC1               	clrf	193,b	;volatile
 45710                           
 45711                           ;mcc_generated_files/mcc.c: 98:     PMD2 = 0x00;
 45712  002EB8  6BC2               	clrf	194,b	;volatile
 45713                           
 45714                           ;mcc_generated_files/mcc.c: 100:     PMD3 = 0x00;
 45715  002EBA  6BC3               	clrf	195,b	;volatile
 45716                           
 45717                           ;mcc_generated_files/mcc.c: 102:     PMD4 = 0x00;
 45718  002EBC  6BC4               	clrf	196,b	;volatile
 45719                           
 45720                           ;mcc_generated_files/mcc.c: 104:     PMD5 = 0x00;
 45721  002EBE  6BC5               	clrf	197,b	;volatile
 45722                           
 45723                           ;mcc_generated_files/mcc.c: 106:     PMD6 = 0x00;
 45724  002EC0  6BC6               	clrf	198,b	;volatile
 45725                           
 45726                           ;mcc_generated_files/mcc.c: 108:     PMD7 = 0x00;
 45727  002EC2  6BC7               	clrf	199,b	;volatile
 45728                           
 45729                           ; BSR set to: 57
 45730                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 45731  002EC4  0012               	return		;funcret
 45732  002EC6                     __end_of_PMD_Initialize:
 45733                           	opt callstack 0
 45734                           
 45735 ;; *************** function _PIN_MANAGER_Initialize *****************
 45736 ;; Defined at:
 45737 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 45738 ;; Parameters:    Size  Location     Type
 45739 ;;		None
 45740 ;; Auto vars:     Size  Location     Type
 45741 ;;		None
 45742 ;; Return value:  Size  Location     Type
 45743 ;;                  1  [STACK] void 
 45744 ;; Registers used:
 45745 ;;		wreg, status,2
 45746 ;; Tracked objects:
 45747 ;;		On entry : 3F/39
 45748 ;;		On exit  : 3F/3A
 45749 ;;		Unchanged: 0/0
 45750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45755 ;;Total ram usage:        0 bytes
 45756 ;; Hardware stack levels used:    1
 45757 ;; Hardware stack levels required when called:   15
 45758 ;; This function calls:
 45759 ;;		Nothing
 45760 ;; This function is called by:
 45761 ;;		_SYSTEM_Initialize
 45762 ;; This function uses a reentrant model
 45763 ;;
 45764                           
 45765                           	psect	text173
 45766  001454                     __ptext173:
 45767                           	opt callstack 0
 45768  001454                     _PIN_MANAGER_Initialize:
 45769                           	opt callstack 14
 45770                           
 45771                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 45772                           
 45773                           ; BSR set to: 57
 45774                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45775                           ;incstack = 0
 45776  001454  0E07               	movlw	7
 45777  001456  6EBE               	movwf	190,c	;volatile
 45778                           
 45779                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 45780  001458  6ABD               	clrf	189,c	;volatile
 45781                           
 45782                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 45783  00145A  6ABA               	clrf	186,c	;volatile
 45784                           
 45785                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x23;
 45786  00145C  0E23               	movlw	35
 45787  00145E  6EBF               	movwf	191,c	;volatile
 45788                           
 45789                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 45790  001460  6ABB               	clrf	187,c	;volatile
 45791                           
 45792                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 45793  001462  0E07               	movlw	7
 45794  001464  6EBC               	movwf	188,c	;volatile
 45795                           
 45796                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 45797  001466  6AC6               	clrf	198,c	;volatile
 45798                           
 45799                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0C;
 45800  001468  0E0C               	movlw	12
 45801  00146A  6EC7               	movwf	199,c	;volatile
 45802                           
 45803                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 45804  00146C  68C2               	setf	194,c	;volatile
 45805                           
 45806                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 45807  00146E  0EBF               	movlw	191
 45808  001470  6EC3               	movwf	195,c	;volatile
 45809                           
 45810                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 45811  001472  0E90               	movlw	144
 45812  001474  6EC4               	movwf	196,c	;volatile
 45813                           
 45814                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 45815  001476  0E0C               	movlw	12
 45816  001478  6EC5               	movwf	197,c	;volatile
 45817                           
 45818                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 45819  00147A  013A               	movlb	58	; () banked
 45820  00147C  6B70               	clrf	112,b	;volatile
 45821                           
 45822                           ; BSR set to: 58
 45823                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 45824  00147E  6B60               	clrf	96,b	;volatile
 45825                           
 45826                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 45827  001480  0E3C               	movlw	60
 45828  001482  6F50               	movwf	80,b	;volatile
 45829                           
 45830                           ; BSR set to: 58
 45831                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 45832  001484  6B80               	clrf	128,b	;volatile
 45833                           
 45834                           ; BSR set to: 58
 45835                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 45836  001486  6B90               	clrf	144,b	;volatile
 45837                           
 45838                           ; BSR set to: 58
 45839                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 45840  001488  6940               	setf	64,b	;volatile
 45841                           
 45842                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 45843  00148A  0E0C               	movlw	12
 45844  00148C  6F71               	movwf	113,b	;volatile
 45845                           
 45846                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0C;
 45847  00148E  0E0C               	movlw	12
 45848  001490  6F91               	movwf	145,b	;volatile
 45849                           
 45850                           ; BSR set to: 58
 45851                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 45852  001492  6B81               	clrf	129,b	;volatile
 45853                           
 45854                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 45855  001494  0E83               	movlw	131
 45856  001496  6F51               	movwf	81,b	;volatile
 45857                           
 45858                           ; BSR set to: 58
 45859                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 45860  001498  6B41               	clrf	65,b	;volatile
 45861                           
 45862                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 45863  00149A  0E97               	movlw	151
 45864  00149C  6F61               	movwf	97,b	;volatile
 45865                           
 45866                           ; BSR set to: 58
 45867                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 45868  00149E  6B82               	clrf	130,b	;volatile
 45869                           
 45870                           ; BSR set to: 58
 45871                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 45872  0014A0  6B92               	clrf	146,b	;volatile
 45873                           
 45874                           ; BSR set to: 58
 45875                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 45876  0014A2  6B42               	clrf	66,b	;volatile
 45877                           
 45878                           ; BSR set to: 58
 45879                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 45880  0014A4  6B52               	clrf	82,b	;volatile
 45881                           
 45882                           ; BSR set to: 58
 45883                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 45884  0014A6  6B62               	clrf	98,b	;volatile
 45885                           
 45886                           ; BSR set to: 58
 45887                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 45888  0014A8  6B72               	clrf	114,b	;volatile
 45889                           
 45890                           ; BSR set to: 58
 45891                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 45892  0014AA  6943               	setf	67,b	;volatile
 45893                           
 45894                           ; BSR set to: 58
 45895                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 45896  0014AC  6953               	setf	83,b	;volatile
 45897                           
 45898                           ; BSR set to: 58
 45899                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 45900  0014AE  6963               	setf	99,b	;volatile
 45901                           
 45902                           ; BSR set to: 58
 45903                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 45904  0014B0  6973               	setf	115,b	;volatile
 45905                           
 45906                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 45907  0014B2  0E07               	movlw	7
 45908  0014B4  6F83               	movwf	131,b	;volatile
 45909                           
 45910                           ; BSR set to: 58
 45911                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 45912  0014B6  6993               	setf	147,b	;volatile
 45913                           
 45914                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 45915  0014B8  0E0F               	movlw	15
 45916  0014BA  6FE8               	movwf	232,b	;volatile
 45917                           
 45918                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 45919  0014BC  0E13               	movlw	19
 45920  0014BE  6FDE               	movwf	222,b	;volatile
 45921                           
 45922                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 45923  0014C0  0E16               	movlw	22
 45924  0014C2  6F0E               	movwf	14,b	;volatile
 45925                           
 45926                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 45927  0014C4  0E1E               	movlw	30
 45928  0014C6  6F13               	movwf	19,b	;volatile
 45929                           
 45930                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 45931  0014C8  0E08               	movlw	8
 45932  0014CA  6FC0               	movwf	192,b	;volatile
 45933                           
 45934                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 45935  0014CC  0E10               	movlw	16
 45936  0014CE  6F19               	movwf	25,b	;volatile
 45937                           
 45938                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 45939  0014D0  0E09               	movlw	9
 45940  0014D2  6FC1               	movwf	193,b	;volatile
 45941                           
 45942                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 45943  0014D4  0E1F               	movlw	31
 45944  0014D6  6F15               	movwf	21,b	;volatile
 45945                           
 45946                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 45947  0014D8  0E13               	movlw	19
 45948  0014DA  6F16               	movwf	22,b	;volatile
 45949                           
 45950                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 45951  0014DC  0E17               	movlw	23
 45952  0014DE  6FE5               	movwf	229,b	;volatile
 45953                           
 45954                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 45955  0014E0  0E14               	movlw	20
 45956  0014E2  6FDF               	movwf	223,b	;volatile
 45957                           
 45958                           ; BSR set to: 58
 45959                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 45960  0014E4  0012               	return		;funcret
 45961  0014E6                     __end_of_PIN_MANAGER_Initialize:
 45962                           	opt callstack 0
 45963                           
 45964 ;; *************** function _OSCILLATOR_Initialize *****************
 45965 ;; Defined at:
 45966 ;;		line 73 in file "mcc_generated_files/mcc.c"
 45967 ;; Parameters:    Size  Location     Type
 45968 ;;		None
 45969 ;; Auto vars:     Size  Location     Type
 45970 ;;		None
 45971 ;; Return value:  Size  Location     Type
 45972 ;;                  1  [STACK] void 
 45973 ;; Registers used:
 45974 ;;		wreg, status,2
 45975 ;; Tracked objects:
 45976 ;;		On entry : 3F/3A
 45977 ;;		On exit  : 3F/39
 45978 ;;		Unchanged: 0/0
 45979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45984 ;;Total ram usage:        0 bytes
 45985 ;; Hardware stack levels used:    1
 45986 ;; Hardware stack levels required when called:   15
 45987 ;; This function calls:
 45988 ;;		Nothing
 45989 ;; This function is called by:
 45990 ;;		_SYSTEM_Initialize
 45991 ;; This function uses a reentrant model
 45992 ;;
 45993                           
 45994                           	psect	text174
 45995  002E9C                     __ptext174:
 45996                           	opt callstack 0
 45997  002E9C                     _OSCILLATOR_Initialize:
 45998                           	opt callstack 14
 45999                           
 46000                           ;mcc_generated_files/mcc.c: 76:     OSCCON1 = 0x20;
 46001                           
 46002                           ; BSR set to: 58
 46003                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46004                           ;incstack = 0
 46005  002E9C  0E20               	movlw	32
 46006  002E9E  0139               	movlb	57	; () banked
 46007  002EA0  6FD9               	movwf	217,b	;volatile
 46008                           
 46009                           ; BSR set to: 57
 46010                           ;mcc_generated_files/mcc.c: 78:     OSCCON3 = 0x00;
 46011  002EA2  6BDB               	clrf	219,b	;volatile
 46012                           
 46013                           ; BSR set to: 57
 46014                           ;mcc_generated_files/mcc.c: 80:     OSCEN = 0x00;
 46015  002EA4  6BDD               	clrf	221,b	;volatile
 46016                           
 46017                           ;mcc_generated_files/mcc.c: 82:     OSCFRQ = 0x02;
 46018  002EA6  0E02               	movlw	2
 46019  002EA8  6FDF               	movwf	223,b	;volatile
 46020                           
 46021                           ; BSR set to: 57
 46022                           ;mcc_generated_files/mcc.c: 84:     OSCTUNE = 0x00;
 46023  002EAA  6BDE               	clrf	222,b	;volatile
 46024  002EAC                     l171:
 46025                           
 46026                           ; BSR set to: 57
 46027                           ;mcc_generated_files/mcc.c: 86:     while(PLLR == 0)
 46028  002EAC  B1DC               	btfsc	220,0,b	;volatile
 46029  002EAE  0012               	return	
 46030  002EB0  D7FD               	goto	l171
 46031  002EB2                     __end_of_OSCILLATOR_Initialize:
 46032                           	opt callstack 0
 46033                           
 46034 ;; *************** function _INTERRUPT_Initialize *****************
 46035 ;; Defined at:
 46036 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 46037 ;; Parameters:    Size  Location     Type
 46038 ;;		None
 46039 ;; Auto vars:     Size  Location     Type
 46040 ;;  state           1  [STACK] _Bool 
 46041 ;; Return value:  Size  Location     Type
 46042 ;;                  1  [STACK] void 
 46043 ;; Registers used:
 46044 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 46045 ;; Tracked objects:
 46046 ;;		On entry : 0/0
 46047 ;;		On exit  : 3F/39
 46048 ;;		Unchanged: 0/0
 46049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46054 ;;Total ram usage:        0 bytes
 46055 ;; Hardware stack levels used:    1
 46056 ;; Hardware stack levels required when called:   15
 46057 ;; This function calls:
 46058 ;;		Nothing
 46059 ;; This function is called by:
 46060 ;;		_SYSTEM_Initialize
 46061 ;; This function uses a reentrant model
 46062 ;;
 46063                           
 46064                           	psect	text175
 46065  001BF8                     __ptext175:
 46066                           	opt callstack 0
 46067  001BF8                     _INTERRUPT_Initialize:
 46068                           	opt callstack 0
 46069                           
 46070                           ; BSR set to: 57
 46071                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46072  001BF8  52E6               	movf	postinc1,f,c
 46073                           
 46074                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 46075                           
 46076                           ;incstack = 0
 46077  001BFA  8AD2               	bsf	210,5,c	;volatile
 46078                           
 46079                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 46080  001BFC  AED2               	btfss	16338,7,c	;volatile
 46081  001BFE  D003               	goto	u12510
 46082  001C00  6A35               	clrf	(btemp+11)^0,c
 46083  001C02  2A35               	incf	(btemp+11)^0,f,c
 46084  001C04  D001               	goto	u12528
 46085  001C06                     u12510:
 46086  001C06  6A35               	clrf	(btemp+11)^0,c
 46087  001C08                     u12528:
 46088                           
 46089                           ;stkvar	_state @ sp[(-1)+0]
 46090  001C08  0EFF               	movlw	-1
 46091  001C0A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 46092                           
 46093                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 46094  001C10  9ED2               	bcf	16338,7,c	;volatile
 46095                           
 46096                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 46097  001C12  0E55               	movlw	85
 46098  001C14  6ED4               	movwf	212,c	;volatile
 46099                           
 46100                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 46101  001C16  0EAA               	movlw	170
 46102  001C18  6ED4               	movwf	212,c	;volatile
 46103                           
 46104                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 46105  001C1A  90D4               	bcf	212,0,c	;volatile
 46106                           
 46107                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 46108  001C1C  0138               	movlb	56	; () banked
 46109  001C1E  6B9F               	clrf	159,b	;volatile
 46110                           
 46111                           ; BSR set to: 56
 46112                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 46113  001C20  6B9E               	clrf	158,b	;volatile
 46114                           
 46115                           ; BSR set to: 56
 46116                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 46117  001C22  0E08               	movlw	8
 46118  001C24  6F9D               	movwf	157,b	;volatile
 46119                           
 46120                           ; BSR set to: 56
 46121                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 46122  001C26  0E55               	movlw	85
 46123  001C28  6ED4               	movwf	212,c	;volatile
 46124                           
 46125                           ; BSR set to: 56
 46126                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 46127  001C2A  0EAA               	movlw	170
 46128  001C2C  6ED4               	movwf	212,c	;volatile
 46129                           
 46130                           ; BSR set to: 56
 46131                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 46132  001C2E  80D4               	bsf	212,0,c	;volatile
 46133                           
 46134                           ; BSR set to: 56
 46135                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 46136                           ;stkvar	_state @ sp[(-1)+0]
 46137  001C30  0EFF               	movlw	-1
 46138  001C32  B0E3               	btfsc	plusw1,0,c
 46139  001C34  D002               	bra	u12535
 46140  001C36  9ED2               	bcf	16338,7,c	;volatile
 46141  001C38  D001               	bra	u12536
 46142  001C3A                     u12535:
 46143  001C3A  8ED2               	bsf	16338,7,c	;volatile
 46144  001C3C                     u12536:
 46145                           
 46146                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 46147  001C3C  0139               	movlb	57	; () banked
 46148  001C3E  8782               	bsf	130,3,b	;volatile
 46149                           
 46150                           ; BSR set to: 57
 46151                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 46152  001C40  8382               	bsf	130,1,b	;volatile
 46153                           
 46154                           ; BSR set to: 57
 46155                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 46156  001C42  8182               	bsf	130,0,b	;volatile
 46157                           
 46158                           ; BSR set to: 57
 46159                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 46160  001C44  8582               	bsf	130,2,b	;volatile
 46161                           
 46162                           ; BSR set to: 57
 46163                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 46164  001C46  8786               	bsf	134,3,b	;volatile
 46165                           
 46166                           ; BSR set to: 57
 46167                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 46168  001C48  8586               	bsf	134,2,b	;volatile
 46169                           
 46170                           ; BSR set to: 57
 46171                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 46172  001C4A  8783               	bsf	131,3,b	;volatile
 46173                           
 46174                           ; BSR set to: 57
 46175                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 46176  001C4C  8181               	bsf	129,0,b	;volatile
 46177                           
 46178                           ; BSR set to: 57
 46179                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 46180  001C4E  9185               	bcf	133,0,b	;volatile
 46181                           
 46182                           ; BSR set to: 57
 46183                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 46184  001C50  8189               	bsf	137,0,b	;volatile
 46185                           
 46186                           ; BSR set to: 57
 46187                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 46188  001C52  9D88               	bcf	136,6,b	;volatile
 46189                           
 46190                           ; BSR set to: 57
 46191                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR1bits.ADIP = 1;
 46192  001C54  8581               	bsf	129,2,b	;volatile
 46193                           
 46194                           ; BSR set to: 57
 46195                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADTIP = 1;
 46196  001C56  8781               	bsf	129,3,b	;volatile
 46197                           
 46198                           ; BSR set to: 57
 46199                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR6bits.TMR3IP = 0;
 46200  001C58  9D86               	bcf	134,6,b	;volatile
 46201                           
 46202                           ; BSR set to: 57
 46203                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 46204  001C5A  52E5               	movf	postdec1,f,c
 46205  001C5C  0012               	return		;funcret
 46206  001C5E                     __end_of_INTERRUPT_Initialize:
 46207                           	opt callstack 0
 46208                           
 46209 ;; *************** function _FVR_Initialize *****************
 46210 ;; Defined at:
 46211 ;;		line 58 in file "mcc_generated_files/fvr.c"
 46212 ;; Parameters:    Size  Location     Type
 46213 ;;		None
 46214 ;; Auto vars:     Size  Location     Type
 46215 ;;		None
 46216 ;; Return value:  Size  Location     Type
 46217 ;;                  1  [STACK] void 
 46218 ;; Registers used:
 46219 ;;		wreg, status,2
 46220 ;; Tracked objects:
 46221 ;;		On entry : 3F/39
 46222 ;;		On exit  : 3F/3E
 46223 ;;		Unchanged: 0/0
 46224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46229 ;;Total ram usage:        0 bytes
 46230 ;; Hardware stack levels used:    1
 46231 ;; Hardware stack levels required when called:   15
 46232 ;; This function calls:
 46233 ;;		Nothing
 46234 ;; This function is called by:
 46235 ;;		_SYSTEM_Initialize
 46236 ;; This function uses a reentrant model
 46237 ;;
 46238                           
 46239                           	psect	text176
 46240  002FDA                     __ptext176:
 46241                           	opt callstack 0
 46242  002FDA                     _FVR_Initialize:
 46243                           	opt callstack 14
 46244                           
 46245                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 46246                           
 46247                           ; BSR set to: 57
 46248                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46249                           ;incstack = 0
 46250  002FDA  0EAF               	movlw	175
 46251  002FDC  013E               	movlb	62	; () banked
 46252  002FDE  6FC1               	movwf	193,b	;volatile
 46253                           
 46254                           ; BSR set to: 62
 46255                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 46256  002FE0  0012               	return		;funcret
 46257  002FE2                     __end_of_FVR_Initialize:
 46258                           	opt callstack 0
 46259                           
 46260 ;; *************** function _EXT_INT_Initialize *****************
 46261 ;; Defined at:
 46262 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 46263 ;; Parameters:    Size  Location     Type
 46264 ;;		None
 46265 ;; Auto vars:     Size  Location     Type
 46266 ;;		None
 46267 ;; Return value:  Size  Location     Type
 46268 ;;                  1  [STACK] void 
 46269 ;; Registers used:
 46270 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 46271 ;; Tracked objects:
 46272 ;;		On entry : 3F/3F
 46273 ;;		On exit  : 3F/39
 46274 ;;		Unchanged: 0/0
 46275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46280 ;;Total ram usage:        0 bytes
 46281 ;; Hardware stack levels used:    1
 46282 ;; Hardware stack levels required when called:   16
 46283 ;; This function calls:
 46284 ;;		_INT0_SetInterruptHandler
 46285 ;;		_INT1_SetInterruptHandler
 46286 ;; This function is called by:
 46287 ;;		_SYSTEM_Initialize
 46288 ;; This function uses a reentrant model
 46289 ;;
 46290                           
 46291                           	psect	text177
 46292  002780                     __ptext177:
 46293                           	opt callstack 0
 46294  002780                     _EXT_INT_Initialize:
 46295                           	opt callstack 13
 46296                           
 46297                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 46298                           
 46299                           ; BSR set to: 62
 46300                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46301                           ;incstack = 0
 46302  002780  0139               	movlb	57	; () banked
 46303  002782  91A1               	bcf	161,0,b	;volatile
 46304                           
 46305                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 46306  002784  90D2               	bcf	210,0,c	;volatile
 46307                           
 46308                           ; BSR set to: 57
 46309                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 46310  002786  0E12               	movlw	low _INT0_DefaultInterruptHandler
 46311  002788  6EE6               	movwf	postinc1,c
 46312  00278A  0E30               	movlw	high _INT0_DefaultInterruptHandler
 46313  00278C  6EE6               	movwf	postinc1,c
 46314  00278E  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 46315  002790  6EE6               	movwf	postinc1,c
 46316  002792  EC75  F015         	call	_INT0_SetInterruptHandler	;wreg free
 46317                           
 46318                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 46319  002796  0139               	movlb	57	; () banked
 46320  002798  8191               	bsf	145,0,b	;volatile
 46321                           
 46322                           ; BSR set to: 57
 46323                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 46324  00279A  91A5               	bcf	165,0,b	;volatile
 46325                           
 46326                           ; BSR set to: 57
 46327                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 46328  00279C  92D2               	bcf	210,1,c	;volatile
 46329                           
 46330                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 46331  00279E  0E0E               	movlw	low _INT1_DefaultInterruptHandler
 46332  0027A0  6EE6               	movwf	postinc1,c
 46333  0027A2  0E30               	movlw	high _INT1_DefaultInterruptHandler
 46334  0027A4  6EE6               	movwf	postinc1,c
 46335  0027A6  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 46336  0027A8  6EE6               	movwf	postinc1,c
 46337  0027AA  EC61  F015         	call	_INT1_SetInterruptHandler	;wreg free
 46338                           
 46339                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 46340  0027AE  0139               	movlb	57	; () banked
 46341  0027B0  8195               	bsf	149,0,b	;volatile
 46342                           
 46343                           ; BSR set to: 57
 46344                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 46345  0027B2  0012               	return		;funcret
 46346  0027B4                     __end_of_EXT_INT_Initialize:
 46347                           	opt callstack 0
 46348                           
 46349 ;; *************** function _INT1_SetInterruptHandler *****************
 46350 ;; Defined at:
 46351 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 46352 ;; Parameters:    Size  Location     Type
 46353 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 46354 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 46355 ;; Auto vars:     Size  Location     Type
 46356 ;;		None
 46357 ;; Return value:  Size  Location     Type
 46358 ;;                  1  [STACK] void 
 46359 ;; Registers used:
 46360 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 46361 ;; Tracked objects:
 46362 ;;		On entry : 3F/39
 46363 ;;		On exit  : 0/0
 46364 ;;		Unchanged: 0/0
 46365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46370 ;;Total ram usage:        0 bytes
 46371 ;; Hardware stack levels used:    1
 46372 ;; Hardware stack levels required when called:   15
 46373 ;; This function calls:
 46374 ;;		Nothing
 46375 ;; This function is called by:
 46376 ;;		_EXT_INT_Initialize
 46377 ;;		_start_switch_handler
 46378 ;; This function uses a reentrant model
 46379 ;;
 46380                           
 46381                           	psect	text178
 46382  002AC2                     __ptext178:
 46383                           	opt callstack 0
 46384  002AC2                     _INT1_SetInterruptHandler:
 46385                           	opt callstack 14
 46386                           
 46387                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 46388                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 46389                           
 46390                           ; BSR set to: 57
 46391                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46392                           ;incstack = 0
 46393  002AC2  50E1               	movf	fsr1l,w,c
 46394  002AC4  0FFD               	addlw	-3
 46395  002AC6  6ED9               	movwf	fsr2l,c
 46396  002AC8  50E2               	movf	fsr1h,w,c
 46397  002ACA  6EDA               	movwf	fsr2h,c
 46398  002ACC  0EFF               	movlw	255
 46399  002ACE  22DA               	addwfc	fsr2h,f,c
 46400  002AD0  006F FF78  F0B0    	movff	postinc2,_INT1_InterruptHandler
 46401  002AD6  006F FF78  F0B1    	movff	postinc2,_INT1_InterruptHandler+1
 46402  002ADC  006F FF74  F0B2    	movff	postdec2,_INT1_InterruptHandler+2
 46403                           
 46404                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 46405  002AE2  52E5               	movf	postdec1,f,c
 46406  002AE4  52E5               	movf	postdec1,f,c
 46407  002AE6  52E5               	movf	postdec1,f,c
 46408  002AE8  0012               	return		;funcret
 46409  002AEA                     __end_of_INT1_SetInterruptHandler:
 46410                           	opt callstack 0
 46411                           
 46412 ;; *************** function _INT0_SetInterruptHandler *****************
 46413 ;; Defined at:
 46414 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 46415 ;; Parameters:    Size  Location     Type
 46416 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 46417 ;;		 -> INT0_DefaultInterruptHandler(1), 
 46418 ;; Auto vars:     Size  Location     Type
 46419 ;;		None
 46420 ;; Return value:  Size  Location     Type
 46421 ;;                  1  [STACK] void 
 46422 ;; Registers used:
 46423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 46424 ;; Tracked objects:
 46425 ;;		On entry : 3F/39
 46426 ;;		On exit  : 0/0
 46427 ;;		Unchanged: 0/0
 46428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46433 ;;Total ram usage:        0 bytes
 46434 ;; Hardware stack levels used:    1
 46435 ;; Hardware stack levels required when called:   15
 46436 ;; This function calls:
 46437 ;;		Nothing
 46438 ;; This function is called by:
 46439 ;;		_EXT_INT_Initialize
 46440 ;; This function uses a reentrant model
 46441 ;;
 46442                           
 46443                           	psect	text179
 46444  002AEA                     __ptext179:
 46445                           	opt callstack 0
 46446  002AEA                     _INT0_SetInterruptHandler:
 46447                           	opt callstack 13
 46448                           
 46449                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 46450                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 46451                           
 46452                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46453                           ;incstack = 0
 46454  002AEA  50E1               	movf	fsr1l,w,c
 46455  002AEC  0FFD               	addlw	-3
 46456  002AEE  6ED9               	movwf	fsr2l,c
 46457  002AF0  50E2               	movf	fsr1h,w,c
 46458  002AF2  6EDA               	movwf	fsr2h,c
 46459  002AF4  0EFF               	movlw	255
 46460  002AF6  22DA               	addwfc	fsr2h,f,c
 46461  002AF8  006F FF78  F0B3    	movff	postinc2,_INT0_InterruptHandler
 46462  002AFE  006F FF78  F0B4    	movff	postinc2,_INT0_InterruptHandler+1
 46463  002B04  006F FF74  F0B5    	movff	postdec2,_INT0_InterruptHandler+2
 46464                           
 46465                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 46466  002B0A  52E5               	movf	postdec1,f,c
 46467  002B0C  52E5               	movf	postdec1,f,c
 46468  002B0E  52E5               	movf	postdec1,f,c
 46469  002B10  0012               	return		;funcret
 46470  002B12                     __end_of_INT0_SetInterruptHandler:
 46471                           	opt callstack 0
 46472                           
 46473 ;; *************** function _DMA2_Initialize *****************
 46474 ;; Defined at:
 46475 ;;		line 61 in file "mcc_generated_files/dma2.c"
 46476 ;; Parameters:    Size  Location     Type
 46477 ;;		None
 46478 ;; Auto vars:     Size  Location     Type
 46479 ;;		None
 46480 ;; Return value:  Size  Location     Type
 46481 ;;                  1  [STACK] void 
 46482 ;; Registers used:
 46483 ;;		wreg, status,2
 46484 ;; Tracked objects:
 46485 ;;		On entry : 3F/3D
 46486 ;;		On exit  : 3F/3B
 46487 ;;		Unchanged: 0/0
 46488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46493 ;;Total ram usage:        0 bytes
 46494 ;; Hardware stack levels used:    1
 46495 ;; Hardware stack levels required when called:   15
 46496 ;; This function calls:
 46497 ;;		Nothing
 46498 ;; This function is called by:
 46499 ;;		_SYSTEM_Initialize
 46500 ;; This function uses a reentrant model
 46501 ;;
 46502                           
 46503                           	psect	text180
 46504  001F5C                     __ptext180:
 46505                           	opt callstack 0
 46506  001F5C                     _DMA2_Initialize:
 46507                           	opt callstack 14
 46508                           
 46509                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 46510                           
 46511                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46512                           ;incstack = 0
 46513  001F5C  0E00               	movlw	0
 46514  001F5E  013B               	movlb	59	; () banked
 46515  001F60  6FD9               	movwf	217,b	;volatile
 46516  001F62  0E10               	movlw	16
 46517  001F64  6FDA               	movwf	218,b	;volatile
 46518  001F66  0E00               	movlw	0
 46519  001F68  6FDB               	movwf	219,b	;volatile
 46520                           
 46521                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 46522  001F6A  0E3F               	movlw	63
 46523  001F6C  6FD1               	movwf	209,b	;volatile
 46524  001F6E  0EBB               	movlw	187
 46525  001F70  6FD0               	movwf	208,b	;volatile
 46526                           
 46527                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 46528  001F72  0E03               	movlw	3
 46529  001F74  6FDD               	movwf	221,b	;volatile
 46530                           
 46531                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 46532  001F76  0E00               	movlw	0
 46533  001F78  6FD8               	movwf	216,b	;volatile
 46534  001F7A  0E01               	movlw	1
 46535  001F7C  6FD7               	movwf	215,b	;volatile
 46536                           
 46537                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 46538  001F7E  0E00               	movlw	0
 46539  001F80  6FCF               	movwf	207,b	;volatile
 46540  001F82  0E01               	movlw	1
 46541  001F84  6FCE               	movwf	206,b	;volatile
 46542                           
 46543                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 46544  001F86  0E1C               	movlw	28
 46545  001F88  6FDF               	movwf	223,b	;volatile
 46546                           
 46547                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 46548  001F8A  0E3D               	movlw	61
 46549  001F8C  6FDE               	movwf	222,b	;volatile
 46550                           
 46551                           ; BSR set to: 59
 46552                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 46553  001F8E  0139               	movlb	57	; () banked
 46554  001F90  97A5               	bcf	165,3,b	;volatile
 46555                           
 46556                           ; BSR set to: 57
 46557                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 46558  001F92  95A5               	bcf	165,2,b	;volatile
 46559                           
 46560                           ; BSR set to: 57
 46561                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 46562  001F94  9BA5               	bcf	165,5,b	;volatile
 46563                           
 46564                           ; BSR set to: 57
 46565                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 46566  001F96  99A5               	bcf	165,4,b	;volatile
 46567                           
 46568                           ; BSR set to: 57
 46569                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 46570  001F98  9795               	bcf	149,3,b	;volatile
 46571                           
 46572                           ; BSR set to: 57
 46573                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 46574  001F9A  9595               	bcf	149,2,b	;volatile
 46575                           
 46576                           ; BSR set to: 57
 46577                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 46578  001F9C  9B95               	bcf	149,5,b	;volatile
 46579                           
 46580                           ; BSR set to: 57
 46581                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 46582  001F9E  9995               	bcf	149,4,b	;volatile
 46583  001FA0  9ED2               	bcf	16338,7,c	;# 
 46584  001FA2  0139               	banksel	14831	;# 
 46585  001FA4  0E55               	movlw	85	;# 
 46586  001FA6  6FEF               	movwf	14831,b	;# 
 46587  001FA8  0EAA               	movlw	170	;# 
 46588  001FAA  6FEF               	movwf	14831,b	;# 
 46589  001FAC  81EF               	bsf	14831,0,b	;# 
 46590  001FAE  8ED2               	bsf	16338,7,c	;# 
 46591                           
 46592                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 46593  001FB0  013B               	movlb	59	; () banked
 46594  001FB2  6BDC               	clrf	220,b	;volatile
 46595                           
 46596                           ; BSR set to: 59
 46597                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 46598  001FB4  0012               	return		;funcret
 46599  001FB6                     __end_of_DMA2_Initialize:
 46600                           	opt callstack 0
 46601                           
 46602 ;; *************** function _DMA1_Initialize *****************
 46603 ;; Defined at:
 46604 ;;		line 86 in file "mcc_generated_files/dma1.c"
 46605 ;; Parameters:    Size  Location     Type
 46606 ;;		None
 46607 ;; Auto vars:     Size  Location     Type
 46608 ;;		None
 46609 ;; Return value:  Size  Location     Type
 46610 ;;                  1  [STACK] void 
 46611 ;; Registers used:
 46612 ;;		wreg, status,2
 46613 ;; Tracked objects:
 46614 ;;		On entry : 3F/3B
 46615 ;;		On exit  : 3F/3B
 46616 ;;		Unchanged: 0/0
 46617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46622 ;;Total ram usage:        0 bytes
 46623 ;; Hardware stack levels used:    1
 46624 ;; Hardware stack levels required when called:   15
 46625 ;; This function calls:
 46626 ;;		Nothing
 46627 ;; This function is called by:
 46628 ;;		_SYSTEM_Initialize
 46629 ;; This function uses a reentrant model
 46630 ;;
 46631                           
 46632                           	psect	text181
 46633  0019EA                     __ptext181:
 46634                           	opt callstack 0
 46635  0019EA                     _DMA1_Initialize:
 46636                           	opt callstack 14
 46637                           
 46638                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 46639                           
 46640                           ; BSR set to: 59
 46641                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46642                           ;incstack = 0
 46643  0019EA  0E00               	movlw	0
 46644  0019EC  013B               	movlb	59	; () banked
 46645  0019EE  6FF9               	movwf	249,b	;volatile
 46646  0019F0  0E10               	movlw	16
 46647  0019F2  6FFA               	movwf	250,b	;volatile
 46648  0019F4  0E00               	movlw	0
 46649  0019F6  6FFB               	movwf	251,b	;volatile
 46650                           
 46651                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 46652  0019F8  0E3D               	movlw	61
 46653  0019FA  6FF1               	movwf	241,b	;volatile
 46654  0019FC  0E11               	movlw	17
 46655  0019FE  6FF0               	movwf	240,b	;volatile
 46656                           
 46657                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 46658  001A00  0E03               	movlw	3
 46659  001A02  6FFD               	movwf	253,b	;volatile
 46660                           
 46661                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 46662  001A04  0E00               	movlw	0
 46663  001A06  6FF8               	movwf	248,b	;volatile
 46664  001A08  0E01               	movlw	1
 46665  001A0A  6FF7               	movwf	247,b	;volatile
 46666                           
 46667                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 46668  001A0C  0E00               	movlw	0
 46669  001A0E  6FEF               	movwf	239,b	;volatile
 46670  001A10  0E01               	movlw	1
 46671  001A12  6FEE               	movwf	238,b	;volatile
 46672                           
 46673                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 46674  001A14  0E15               	movlw	21
 46675  001A16  6FFF               	movwf	255,b	;volatile
 46676                           
 46677                           ; BSR set to: 59
 46678                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 46679  001A18  6BFE               	clrf	254,b	;volatile
 46680                           
 46681                           ; BSR set to: 59
 46682                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 46683  001A1A  0139               	movlb	57	; () banked
 46684  001A1C  93A2               	bcf	162,1,b	;volatile
 46685                           
 46686                           ; BSR set to: 57
 46687                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 46688  001A1E  91A2               	bcf	162,0,b	;volatile
 46689                           
 46690                           ; BSR set to: 57
 46691                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 46692  001A20  97A2               	bcf	162,3,b	;volatile
 46693                           
 46694                           ; BSR set to: 57
 46695                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 46696  001A22  95A2               	bcf	162,2,b	;volatile
 46697                           
 46698                           ; BSR set to: 57
 46699                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 46700  001A24  8392               	bsf	146,1,b	;volatile
 46701                           
 46702                           ; BSR set to: 57
 46703                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 46704  001A26  8192               	bsf	146,0,b	;volatile
 46705                           
 46706                           ; BSR set to: 57
 46707                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 46708  001A28  8792               	bsf	146,3,b	;volatile
 46709                           
 46710                           ; BSR set to: 57
 46711                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 46712  001A2A  8592               	bsf	146,2,b	;volatile
 46713                           
 46714                           ; BSR set to: 57
 46715                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 46716  001A2C  6BF1               	clrf	241,b	;volatile
 46717                           
 46718                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 46719  001A2E  0E01               	movlw	1
 46720  001A30  6FF2               	movwf	242,b	;volatile
 46721                           
 46722                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 46723  001A32  0E04               	movlw	4
 46724  001A34  6FF3               	movwf	243,b	;volatile
 46725                           
 46726                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 46727  001A36  0E02               	movlw	2
 46728  001A38  6FF4               	movwf	244,b	;volatile
 46729                           
 46730                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 46731  001A3A  0E03               	movlw	3
 46732  001A3C  6FF7               	movwf	247,b	;volatile
 46733  001A3E  9ED2               	bcf	16338,7,c	;# 
 46734  001A40  0139               	banksel	14831	;# 
 46735  001A42  0E55               	movlw	85	;# 
 46736  001A44  6FEF               	movwf	14831,b	;# 
 46737  001A46  0EAA               	movlw	170	;# 
 46738  001A48  6FEF               	movwf	14831,b	;# 
 46739  001A4A  81EF               	bsf	14831,0,b	;# 
 46740  001A4C  8ED2               	bsf	16338,7,c	;# 
 46741                           
 46742                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 46743  001A4E  013B               	movlb	59	; () banked
 46744  001A50  6BFC               	clrf	252,b	;volatile
 46745                           
 46746                           ; BSR set to: 59
 46747                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 46748  001A52  0012               	return		;funcret
 46749  001A54                     __end_of_DMA1_Initialize:
 46750                           	opt callstack 0
 46751                           
 46752 ;; *************** function _CRC_Initialize *****************
 46753 ;; Defined at:
 46754 ;;		line 76 in file "mcc_generated_files/crc.c"
 46755 ;; Parameters:    Size  Location     Type
 46756 ;;		None
 46757 ;; Auto vars:     Size  Location     Type
 46758 ;;  seed            2  [STACK] unsigned short 
 46759 ;;  poly            2  [STACK] unsigned short 
 46760 ;; Return value:  Size  Location     Type
 46761 ;;                  1  [STACK] void 
 46762 ;; Registers used:
 46763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 46764 ;; Tracked objects:
 46765 ;;		On entry : 0/39
 46766 ;;		On exit  : 3F/0
 46767 ;;		Unchanged: 0/0
 46768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46773 ;;Total ram usage:        0 bytes
 46774 ;; Hardware stack levels used:    1
 46775 ;; Hardware stack levels required when called:   15
 46776 ;; This function calls:
 46777 ;;		Nothing
 46778 ;; This function is called by:
 46779 ;;		_SYSTEM_Initialize
 46780 ;;		_read_cal_data
 46781 ;;		_write_cal_data
 46782 ;; This function uses a reentrant model
 46783 ;;
 46784                           
 46785                           	psect	text182
 46786  0014E6                     __ptext182:
 46787                           	opt callstack 0
 46788  0014E6                     _CRC_Initialize:
 46789                           	opt callstack 0
 46790                           
 46791                           ; BSR set to: 59
 46792                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46793  0014E6  52E6               	movf	postinc1,f,c
 46794  0014E8  52E6               	movf	postinc1,f,c
 46795  0014EA  52E6               	movf	postinc1,f,c
 46796  0014EC  52E6               	movf	postinc1,f,c
 46797                           
 46798                           ;mcc_generated_files/crc.c: 78:     uint16_t poly;;mcc_generated_files/crc.c: 79:     ui
      +                          nt16_t seed;;mcc_generated_files/crc.c: 82:     CRCCON0 = 0x80;
 46799                           
 46800                           ;incstack = 0
 46801  0014EE  0E80               	movlw	128
 46802  0014F0  0139               	movlb	57	; () banked
 46803  0014F2  6F68               	movwf	104,b	;volatile
 46804                           
 46805                           ;mcc_generated_files/crc.c: 84:     CRCCON1 = (0 << 4) | (7);
 46806  0014F4  0E07               	movlw	7
 46807  0014F6  6F69               	movwf	105,b	;volatile
 46808                           
 46809                           ; BSR set to: 57
 46810                           ;mcc_generated_files/crc.c: 86:     CRCACCL = 0x00;
 46811  0014F8  6B62               	clrf	98,b	;volatile
 46812                           
 46813                           ; BSR set to: 57
 46814                           ;mcc_generated_files/crc.c: 88:     CRCACCH = 0x00;
 46815  0014FA  6B63               	clrf	99,b	;volatile
 46816                           
 46817                           ; BSR set to: 57
 46818                           ;mcc_generated_files/crc.c: 90:     SCANCON0 = 0x00;
 46819  0014FC  6B7C               	clrf	124,b	;volatile
 46820                           
 46821                           ; BSR set to: 57
 46822                           ;mcc_generated_files/crc.c: 92:     SCANLADRU = 0x00;
 46823  0014FE  6B78               	clrf	120,b	;volatile
 46824                           
 46825                           ; BSR set to: 57
 46826                           ;mcc_generated_files/crc.c: 94:     SCANLADRH = 0x00;
 46827  001500  6B77               	clrf	119,b	;volatile
 46828                           
 46829                           ; BSR set to: 57
 46830                           ;mcc_generated_files/crc.c: 96:     SCANLADRL = 0x00;
 46831  001502  6B76               	clrf	118,b	;volatile
 46832                           
 46833                           ;mcc_generated_files/crc.c: 98:     SCANHADRU = 0x3F;
 46834  001504  0E3F               	movlw	63
 46835  001506  6F7B               	movwf	123,b	;volatile
 46836                           
 46837                           ; BSR set to: 57
 46838                           ;mcc_generated_files/crc.c: 100:     SCANHADRH = 0xFF;
 46839  001508  697A               	setf	122,b	;volatile
 46840                           
 46841                           ; BSR set to: 57
 46842                           ;mcc_generated_files/crc.c: 102:     SCANHADRL = 0xFF;
 46843  00150A  6979               	setf	121,b	;volatile
 46844                           
 46845                           ; BSR set to: 57
 46846                           ;mcc_generated_files/crc.c: 104:     SCANTRIG = 0x00;
 46847  00150C  6B7D               	clrf	125,b	;volatile
 46848                           
 46849                           ; BSR set to: 57
 46850                           ;mcc_generated_files/crc.c: 106:     poly = 213;
 46851  00150E  0ED5               	movlw	213
 46852  001510  6E34               	movwf	(btemp+10)^0,c
 46853  001512  0E00               	movlw	0
 46854  001514  6E35               	movwf	(btemp+11)^0,c
 46855                           
 46856                           ;stkvar	_poly @ sp[(-4)+2]
 46857  001516  0EFE               	movlw	-2
 46858  001518  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 46859  00151E  0EFF               	movlw	-1
 46860  001520  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 46861                           
 46862                           ; BSR set to: 57
 46863                           ;mcc_generated_files/crc.c: 107:     CRCXORH = poly >> 8;
 46864                           ;stkvar	_poly @ sp[(-4)+2]
 46865  001526  0EFF               	movlw	255
 46866  001528  24E1               	addwf	fsr1l,w,c
 46867  00152A  6ED9               	movwf	fsr2l,c
 46868  00152C  0EFF               	movlw	255
 46869  00152E  20E2               	addwfc	fsr1h,w,c
 46870  001530  6EDA               	movwf	fsr2h,c
 46871  001532  50DF               	movf	indf2,w,c
 46872  001534  6F67               	movwf	103,b	;volatile
 46873                           
 46874                           ; BSR set to: 57
 46875                           ;mcc_generated_files/crc.c: 108:     CRCXORL = poly;
 46876  001536  0ED5               	movlw	213
 46877  001538  6F66               	movwf	102,b	;volatile
 46878                           
 46879                           ; BSR set to: 57
 46880                           ;mcc_generated_files/crc.c: 110:     seed = 0;
 46881                           ;stkvar	_seed @ sp[(-4)+0]
 46882  00153A  0EFC               	movlw	-4
 46883  00153C  6AE3               	clrf	plusw1,c
 46884  00153E  0EFD               	movlw	-3
 46885  001540  6AE3               	clrf	plusw1,c
 46886                           
 46887                           ; BSR set to: 57
 46888                           ;mcc_generated_files/crc.c: 112:     CRCACCH = seed >> 8;
 46889                           ;stkvar	_seed @ sp[(-4)+0]
 46890  001542  0EFD               	movlw	253
 46891  001544  24E1               	addwf	fsr1l,w,c
 46892  001546  6ED9               	movwf	fsr2l,c
 46893  001548  0EFF               	movlw	255
 46894  00154A  20E2               	addwfc	fsr1h,w,c
 46895  00154C  6EDA               	movwf	fsr2h,c
 46896  00154E  50DF               	movf	indf2,w,c
 46897  001550  6F63               	movwf	99,b	;volatile
 46898                           
 46899                           ; BSR set to: 57
 46900                           ;mcc_generated_files/crc.c: 113:     CRCACCL = seed;
 46901  001552  6B62               	clrf	98,b	;volatile
 46902                           
 46903                           ; BSR set to: 57
 46904                           ;mcc_generated_files/crc.c: 115:     crcObj.dataWidth = (uint8_t)(CRCCON1bits.DLEN + 1);
 46905  001554  3969               	swapf	105,w,b	;volatile
 46906  001556  0B0F               	andlw	15
 46907  001558  6E35               	movwf	(btemp+11)^0,c
 46908  00155A  2835               	incf	(btemp+11)^0,w,c
 46909  00155C  0100               	movlb	0	; () banked
 46910  00155E  6FE2               	movwf	_crcObj& (0+255),b
 46911                           
 46912                           ; BSR set to: 0
 46913                           ;mcc_generated_files/crc.c: 116:     crcObj.polyWidth = (uint8_t)(CRCCON1bits.PLEN + 1);
 46914  001560  0139               	movlb	57	; () banked
 46915  001562  5169               	movf	105,w,b	;volatile
 46916  001564  0B0F               	andlw	15
 46917  001566  6E35               	movwf	(btemp+11)^0,c
 46918  001568  2835               	incf	(btemp+11)^0,w,c
 46919  00156A  0100               	movlb	0	; () banked
 46920  00156C  6FE3               	movwf	(_crcObj+1)& (0+255),b
 46921                           
 46922                           ; BSR set to: 0
 46923                           ; _CRC_Initialize: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 46924  00156E  52E5               	movf	postdec1,f,c
 46925  001570  52E5               	movf	postdec1,f,c
 46926  001572  52E5               	movf	postdec1,f,c
 46927  001574  52E5               	movf	postdec1,f,c
 46928  001576  0012               	return		;funcret
 46929  001578                     __end_of_CRC_Initialize:
 46930                           	opt callstack 0
 46931                           
 46932 ;; *************** function _CLKREF_Initialize *****************
 46933 ;; Defined at:
 46934 ;;		line 58 in file "mcc_generated_files/clkref.c"
 46935 ;; Parameters:    Size  Location     Type
 46936 ;;		None
 46937 ;; Auto vars:     Size  Location     Type
 46938 ;;		None
 46939 ;; Return value:  Size  Location     Type
 46940 ;;                  1  [STACK] void 
 46941 ;; Registers used:
 46942 ;;		wreg, status,2
 46943 ;; Tracked objects:
 46944 ;;		On entry : 3F/3B
 46945 ;;		On exit  : 3F/3C
 46946 ;;		Unchanged: 0/0
 46947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46952 ;;Total ram usage:        0 bytes
 46953 ;; Hardware stack levels used:    1
 46954 ;; Hardware stack levels required when called:   15
 46955 ;; This function calls:
 46956 ;;		Nothing
 46957 ;; This function is called by:
 46958 ;;		_SYSTEM_Initialize
 46959 ;; This function uses a reentrant model
 46960 ;;
 46961                           
 46962                           	psect	text183
 46963  002F82                     __ptext183:
 46964                           	opt callstack 0
 46965  002F82                     _CLKREF_Initialize:
 46966                           	opt callstack 14
 46967                           
 46968                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 46969                           
 46970                           ; BSR set to: 0
 46971                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46972                           ;incstack = 0
 46973  002F82  013C               	movlb	60	; () banked
 46974  002F84  6BE6               	clrf	230,b	;volatile
 46975                           
 46976                           ; BSR set to: 60
 46977                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 46978  002F86  0E94               	movlw	148
 46979  002F88  6FE5               	movwf	229,b	;volatile
 46980                           
 46981                           ; BSR set to: 60
 46982                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 46983  002F8A  0012               	return		;funcret
 46984  002F8C                     __end_of_CLKREF_Initialize:
 46985                           	opt callstack 0
 46986                           
 46987 ;; *************** function _ADCC_Initialize *****************
 46988 ;; Defined at:
 46989 ;;		line 65 in file "mcc_generated_files/adcc.c"
 46990 ;; Parameters:    Size  Location     Type
 46991 ;;		None
 46992 ;; Auto vars:     Size  Location     Type
 46993 ;;		None
 46994 ;; Return value:  Size  Location     Type
 46995 ;;                  1  [STACK] void 
 46996 ;; Registers used:
 46997 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 46998 ;; Tracked objects:
 46999 ;;		On entry : 3F/0
 47000 ;;		On exit  : 0/0
 47001 ;;		Unchanged: 0/0
 47002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47007 ;;Total ram usage:        0 bytes
 47008 ;; Hardware stack levels used:    1
 47009 ;; Hardware stack levels required when called:   16
 47010 ;; This function calls:
 47011 ;;		_ADCC_SetADIInterruptHandler
 47012 ;;		_ADCC_SetADTIInterruptHandler
 47013 ;; This function is called by:
 47014 ;;		_SYSTEM_Initialize
 47015 ;; This function uses a reentrant model
 47016 ;;
 47017                           
 47018                           	psect	text184
 47019  001A54                     __ptext184:
 47020                           	opt callstack 0
 47021  001A54                     _ADCC_Initialize:
 47022                           	opt callstack 13
 47023                           
 47024                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 47025                           
 47026                           ; BSR set to: 60
 47027                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47028                           ;incstack = 0
 47029  001A54  013E               	movlb	62	; () banked
 47030  001A56  6BDE               	clrf	222,b	;volatile
 47031                           
 47032                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 47033  001A58  6BDF               	clrf	223,b	;volatile
 47034                           
 47035                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 47036  001A5A  6BE0               	clrf	224,b	;volatile
 47037                           
 47038                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 47039  001A5C  6BE1               	clrf	225,b	;volatile
 47040                           
 47041                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 47042  001A5E  6BE4               	clrf	228,b	;volatile
 47043                           
 47044                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 47045  001A60  6BE5               	clrf	229,b	;volatile
 47046                           
 47047                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 47048  001A62  6BEA               	clrf	234,b	;volatile
 47049                           
 47050                           ; BSR set to: 62
 47051                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 47052  001A64  0E40               	movlw	64
 47053  001A66  6FEC               	movwf	236,b	;volatile
 47054                           
 47055                           ; BSR set to: 62
 47056                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 47057  001A68  6BF1               	clrf	241,b	;volatile
 47058                           
 47059                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 47060  001A6A  0E20               	movlw	32
 47061  001A6C  6FF3               	movwf	243,b	;volatile
 47062                           
 47063                           ; BSR set to: 62
 47064                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 47065  001A6E  6BF4               	clrf	244,b	;volatile
 47066                           
 47067                           ; BSR set to: 62
 47068                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 47069  001A70  6BF5               	clrf	245,b	;volatile
 47070                           
 47071                           ; BSR set to: 62
 47072                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 47073  001A72  6BF6               	clrf	246,b	;volatile
 47074                           
 47075                           ; BSR set to: 62
 47076                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 47077  001A74  6BF7               	clrf	247,b	;volatile
 47078                           
 47079                           ; BSR set to: 62
 47080                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 47081  001A76  6BF9               	clrf	249,b	;volatile
 47082                           
 47083                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 47084  001A78  0E5B               	movlw	91
 47085  001A7A  6FFA               	movwf	250,b	;volatile
 47086                           
 47087                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 47088  001A7C  0E27               	movlw	39
 47089  001A7E  6FFB               	movwf	251,b	;volatile
 47090                           
 47091                           ; BSR set to: 62
 47092                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 47093  001A80  6BFC               	clrf	252,b	;volatile
 47094                           
 47095                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 47096  001A82  0E02               	movlw	2
 47097  001A84  6FFD               	movwf	253,b	;volatile
 47098                           
 47099                           ; BSR set to: 62
 47100                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 47101  001A86  6BFE               	clrf	254,b	;volatile
 47102                           
 47103                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 47104  001A88  0E07               	movlw	7
 47105  001A8A  6FFF               	movwf	255,b	;volatile
 47106                           
 47107                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 47108  001A8C  0E84               	movlw	132
 47109  001A8E  6FF8               	movwf	248,b	;volatile
 47110                           
 47111                           ; BSR set to: 62
 47112                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 47113  001A90  0139               	movlb	57	; () banked
 47114  001A92  95A1               	bcf	161,2,b	;volatile
 47115                           
 47116                           ; BSR set to: 57
 47117                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 47118  001A94  8591               	bsf	145,2,b	;volatile
 47119                           
 47120                           ; BSR set to: 57
 47121                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 47122  001A96  0E14               	movlw	low _ADCC_DefaultInterruptHandler
 47123  001A98  6EE6               	movwf	postinc1,c
 47124  001A9A  0E30               	movlw	high _ADCC_DefaultInterruptHandler
 47125  001A9C  6EE6               	movwf	postinc1,c
 47126  001A9E  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 47127  001AA0  6EE6               	movwf	postinc1,c
 47128  001AA2  EC9D  F015         	call	_ADCC_SetADIInterruptHandler	;wreg free
 47129                           
 47130                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 47131  001AA6  0139               	movlb	57	; () banked
 47132  001AA8  97A1               	bcf	161,3,b	;volatile
 47133                           
 47134                           ; BSR set to: 57
 47135                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 47136  001AAA  8791               	bsf	145,3,b	;volatile
 47137                           
 47138                           ; BSR set to: 57
 47139                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 47140  001AAC  0E14               	movlw	low _ADCC_DefaultInterruptHandler
 47141  001AAE  6EE6               	movwf	postinc1,c
 47142  001AB0  0E30               	movlw	high _ADCC_DefaultInterruptHandler
 47143  001AB2  6EE6               	movwf	postinc1,c
 47144  001AB4  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 47145  001AB6  6EE6               	movwf	postinc1,c
 47146  001AB8  EC89  F015         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 47147                           
 47148                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 47149  001ABC  0012               	return		;funcret
 47150  001ABE                     __end_of_ADCC_Initialize:
 47151                           	opt callstack 0
 47152                           
 47153 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 47154 ;; Defined at:
 47155 ;;		line 336 in file "mcc_generated_files/adcc.c"
 47156 ;; Parameters:    Size  Location     Type
 47157 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 47158 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 47159 ;; Auto vars:     Size  Location     Type
 47160 ;;		None
 47161 ;; Return value:  Size  Location     Type
 47162 ;;                  1  [STACK] void 
 47163 ;; Registers used:
 47164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 47165 ;; Tracked objects:
 47166 ;;		On entry : 0/1
 47167 ;;		On exit  : 0/0
 47168 ;;		Unchanged: 0/0
 47169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47174 ;;Total ram usage:        0 bytes
 47175 ;; Hardware stack levels used:    1
 47176 ;; Hardware stack levels required when called:   15
 47177 ;; This function calls:
 47178 ;;		Nothing
 47179 ;; This function is called by:
 47180 ;;		_ADCC_Initialize
 47181 ;;		_start_adc_scan
 47182 ;; This function uses a reentrant model
 47183 ;;
 47184                           
 47185                           	psect	text185
 47186  002B12                     __ptext185:
 47187                           	opt callstack 0
 47188  002B12                     _ADCC_SetADTIInterruptHandler:
 47189                           	opt callstack 14
 47190                           
 47191                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 47192                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 47193                           
 47194                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47195                           ;incstack = 0
 47196  002B12  50E1               	movf	fsr1l,w,c
 47197  002B14  0FFD               	addlw	-3
 47198  002B16  6ED9               	movwf	fsr2l,c
 47199  002B18  50E2               	movf	fsr1h,w,c
 47200  002B1A  6EDA               	movwf	fsr2h,c
 47201  002B1C  0EFF               	movlw	255
 47202  002B1E  22DA               	addwfc	fsr2h,f,c
 47203  002B20  006F FF78  F0A1    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 47204  002B26  006F FF78  F0A2    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 47205  002B2C  006F FF74  F0A3    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 47206                           
 47207                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 47208  002B32  52E5               	movf	postdec1,f,c
 47209  002B34  52E5               	movf	postdec1,f,c
 47210  002B36  52E5               	movf	postdec1,f,c
 47211  002B38  0012               	return		;funcret
 47212  002B3A                     __end_of_ADCC_SetADTIInterruptHandler:
 47213                           	opt callstack 0
 47214                           
 47215 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 47216 ;; Defined at:
 47217 ;;		line 323 in file "mcc_generated_files/adcc.c"
 47218 ;; Parameters:    Size  Location     Type
 47219 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 47220 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 47221 ;; Auto vars:     Size  Location     Type
 47222 ;;		None
 47223 ;; Return value:  Size  Location     Type
 47224 ;;                  1  [STACK] void 
 47225 ;; Registers used:
 47226 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 47227 ;; Tracked objects:
 47228 ;;		On entry : 7/1
 47229 ;;		On exit  : 0/0
 47230 ;;		Unchanged: 0/0
 47231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47236 ;;Total ram usage:        0 bytes
 47237 ;; Hardware stack levels used:    1
 47238 ;; Hardware stack levels required when called:   15
 47239 ;; This function calls:
 47240 ;;		Nothing
 47241 ;; This function is called by:
 47242 ;;		_ADCC_Initialize
 47243 ;;		_start_adc_scan
 47244 ;; This function uses a reentrant model
 47245 ;;
 47246                           
 47247                           	psect	text186
 47248  002B3A                     __ptext186:
 47249                           	opt callstack 0
 47250  002B3A                     _ADCC_SetADIInterruptHandler:
 47251                           	opt callstack 14
 47252                           
 47253                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 47254                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 47255                           
 47256                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47257                           ;incstack = 0
 47258  002B3A  50E1               	movf	fsr1l,w,c
 47259  002B3C  0FFD               	addlw	-3
 47260  002B3E  6ED9               	movwf	fsr2l,c
 47261  002B40  50E2               	movf	fsr1h,w,c
 47262  002B42  6EDA               	movwf	fsr2h,c
 47263  002B44  0EFF               	movlw	255
 47264  002B46  22DA               	addwfc	fsr2h,f,c
 47265  002B48  006F FF78  F0A4    	movff	postinc2,_ADCC_ADI_InterruptHandler
 47266  002B4E  006F FF78  F0A5    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 47267  002B54  006F FF74  F0A6    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 47268                           
 47269                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 47270  002B5A  52E5               	movf	postdec1,f,c
 47271  002B5C  52E5               	movf	postdec1,f,c
 47272  002B5E  52E5               	movf	postdec1,f,c
 47273  002B60  0012               	return		;funcret
 47274  002B62                     __end_of_ADCC_SetADIInterruptHandler:
 47275                           	opt callstack 0
 47276                           
 47277 ;; *************** function _INT1_ISR *****************
 47278 ;; Defined at:
 47279 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 47280 ;; Parameters:    Size  Location     Type
 47281 ;;		None
 47282 ;; Auto vars:     Size  Location     Type
 47283 ;;		None
 47284 ;; Return value:  Size  Location     Type
 47285 ;;                  1    wreg      void 
 47286 ;; Registers used:
 47287 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 47288 ;; Tracked objects:
 47289 ;;		On entry : 0/0
 47290 ;;		On exit  : 0/0
 47291 ;;		Unchanged: 0/0
 47292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47295 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47296 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47297 ;;Total ram usage:        4 bytes
 47298 ;; Hardware stack levels used:    1
 47299 ;; Hardware stack levels required when called:    5
 47300 ;; This function calls:
 47301 ;;		_INT1_CallBack
 47302 ;; This function is called by:
 47303 ;;		Interrupt level 1
 47304 ;; This function uses a non-reentrant model
 47305 ;;
 47306                           
 47307                           	psect	text187
 47308  002554                     __ptext187:
 47309                           	opt callstack 0
 47310  002554                     _INT1_ISR:
 47311                           	opt callstack 12
 47312                           
 47313                           ;incstack = 0
 47314  002554  006F FF60  F007    	movff	status,??_INT1_ISR
 47315  00255A  0060  F0A8  F008   	movff	btemp,??_INT1_ISR+1
 47316  002560  0060  F0D0  F009   	movff	btemp+10,??_INT1_ISR+2
 47317  002566  0060  F0D4  F00A   	movff	btemp+11,??_INT1_ISR+3
 47318  00256C  EE16  F196         	lfsr	1,___intlo_sp
 47319                           
 47320                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 47321  002570  0139               	movlb	57	; () banked
 47322  002572  91A5               	bcf	165,0,b	;volatile
 47323                           
 47324                           ; BSR set to: 57
 47325                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 47326  002574  EC00  F016         	call	_INT1_CallBack	;wreg free
 47327  002578  0060  F028  F035   	movff	??_INT1_ISR+3,btemp+11
 47328  00257E  0060  F024  F034   	movff	??_INT1_ISR+2,btemp+10
 47329  002584  0060  F020  F02A   	movff	??_INT1_ISR+1,btemp
 47330  00258A  0060  F01F  FFD8   	movff	??_INT1_ISR,status
 47331  002590  0011               	retfie		f
 47332  002592                     __end_of_INT1_ISR:
 47333                           	opt callstack 0
 47334                           
 47335 ;; *************** function _INT1_CallBack *****************
 47336 ;; Defined at:
 47337 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 47338 ;; Parameters:    Size  Location     Type
 47339 ;;		None
 47340 ;; Auto vars:     Size  Location     Type
 47341 ;;		None
 47342 ;; Return value:  Size  Location     Type
 47343 ;;                  1  [STACK] void 
 47344 ;; Registers used:
 47345 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 47346 ;; Tracked objects:
 47347 ;;		On entry : 3F/39
 47348 ;;		On exit  : 0/0
 47349 ;;		Unchanged: 0/0
 47350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47355 ;;Total ram usage:        0 bytes
 47356 ;; Hardware stack levels used:    1
 47357 ;; Hardware stack levels required when called:    4
 47358 ;; This function calls:
 47359 ;;		Absolute function
 47360 ;;		_INT1_DefaultInterruptHandler
 47361 ;;		_switch_handler
 47362 ;; This function is called by:
 47363 ;;		_INT1_ISR
 47364 ;; This function uses a reentrant model
 47365 ;;
 47366                           
 47367                           	psect	text188
 47368  002C00                     __ptext188:
 47369                           	opt callstack 0
 47370  002C00                     _INT1_CallBack:
 47371                           	opt callstack 12
 47372                           
 47373                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 47374                           
 47375                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47376                           ;incstack = 0
 47377  002C00  0100               	movlb	0	; () banked
 47378  002C02  51B0               	movf	_INT1_InterruptHandler& (0+255),w,b
 47379  002C04  11B1               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 47380  002C06  11B2               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 47381  002C08  B4D8               	btfsc	status,2,c
 47382  002C0A  0012               	return	
 47383                           
 47384                           ; BSR set to: 0
 47385                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 47386  002C0C  D801               	call	u1327_28
 47387  002C0E  0012               	return	
 47388  002C10                     u1327_28:
 47389  002C10  0005               	push	
 47390  002C12  6EFA               	movwf	pclath,c
 47391  002C14  51B0               	movf	_INT1_InterruptHandler& (0+255),w,b
 47392  002C16  6EFD               	movwf	tosl,c
 47393  002C18  51B1               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 47394  002C1A  6EFE               	movwf	tosh,c
 47395  002C1C  51B2               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 47396  002C1E  6EFF               	movwf	tosu,c
 47397  002C20  50FA               	movf	pclath,w,c
 47398  002C22  0012               	return		;indir
 47399  002C24                     __end_of_INT1_CallBack:
 47400                           	opt callstack 0
 47401                           
 47402 ;; *************** function _INT1_DefaultInterruptHandler *****************
 47403 ;; Defined at:
 47404 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 47405 ;; Parameters:    Size  Location     Type
 47406 ;;		None
 47407 ;; Auto vars:     Size  Location     Type
 47408 ;;		None
 47409 ;; Return value:  Size  Location     Type
 47410 ;;                  1  [STACK] void 
 47411 ;; Registers used:
 47412 ;;		None
 47413 ;; Tracked objects:
 47414 ;;		On entry : 3F/0
 47415 ;;		On exit  : 0/0
 47416 ;;		Unchanged: 0/0
 47417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47422 ;;Total ram usage:        0 bytes
 47423 ;; Hardware stack levels used:    1
 47424 ;; Hardware stack levels required when called:    3
 47425 ;; This function calls:
 47426 ;;		Nothing
 47427 ;; This function is called by:
 47428 ;;		_EXT_INT_Initialize
 47429 ;;		_INT1_CallBack
 47430 ;; This function uses a reentrant model
 47431 ;;
 47432                           
 47433                           	psect	text189
 47434  00300E                     __ptext189:
 47435                           	opt callstack 0
 47436  00300E                     _INT1_DefaultInterruptHandler:
 47437                           	opt callstack 12
 47438                           
 47439                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 47440                           
 47441                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47442                           ;incstack = 0
 47443  00300E  0012               	return		;funcret
 47444  003010                     __end_of_INT1_DefaultInterruptHandler:
 47445                           	opt callstack 0
 47446                           
 47447 ;; *************** function _switch_handler *****************
 47448 ;; Defined at:
 47449 ;;		line 58 in file "dio.c"
 47450 ;; Parameters:    Size  Location     Type
 47451 ;;		None
 47452 ;; Auto vars:     Size  Location     Type
 47453 ;;  i               1  [STACK] unsigned char 
 47454 ;;  sw_value        1  [STACK] unsigned char 
 47455 ;; Return value:  Size  Location     Type
 47456 ;;                  1  [STACK] void 
 47457 ;; Registers used:
 47458 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 47459 ;; Tracked objects:
 47460 ;;		On entry : 3F/0
 47461 ;;		On exit  : 0/0
 47462 ;;		Unchanged: 0/0
 47463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47468 ;;Total ram usage:        0 bytes
 47469 ;; Hardware stack levels used:    1
 47470 ;; Hardware stack levels required when called:    3
 47471 ;; This function calls:
 47472 ;;		Nothing
 47473 ;; This function is called by:
 47474 ;;		_start_switch_handler
 47475 ;;		_INT1_CallBack
 47476 ;; This function uses a reentrant model
 47477 ;;
 47478                           
 47479                           	psect	text190
 47480  01F5F6                     __ptext190:
 47481                           	opt callstack 0
 47482  01F5F6                     _switch_handler:
 47483                           	opt callstack 0
 47484                           
 47485                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47486  01F5F6  52E6               	movf	postinc1,f,c
 47487  01F5F8  52E6               	movf	postinc1,f,c
 47488                           
 47489                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 47490                           ;stkvar	_i @ sp[(-2)+0]
 47491                           
 47492                           ;incstack = 0
 47493  01F5FA  0EFE               	movlw	-2
 47494  01F5FC  6AE3               	clrf	plusw1,c
 47495  01F5FE  9ABF               	bcf	191,5,c	;volatile
 47496                           
 47497                           ;dio.c: 72:  __nop();
 47498  01F600  F000               	nop	
 47499                           
 47500                           ;dio.c: 73:  __nop();
 47501  01F602  F000               	nop	
 47502                           
 47503                           ;dio.c: 74:  __nop();
 47504  01F604  F000               	nop	
 47505                           
 47506                           ;dio.c: 75:  __nop();
 47507  01F606  F000               	nop	
 47508                           
 47509                           ;dio.c: 76:  __nop();
 47510  01F608  F000               	nop	
 47511                           
 47512                           ;dio.c: 77:  __nop();
 47513  01F60A  F000               	nop	
 47514  01F60C  D016               	goto	l13855
 47515  01F60E                     l13841:
 47516                           
 47517                           ;dio.c: 82:    sw_value = PORTFbits.RF3;
 47518  01F60E  A6CF               	btfss	207,3,c	;volatile
 47519  01F610  D00E               	goto	u1293_20
 47520  01F612  D00A               	goto	u1293_21
 47521  01F614                     u1291_28:
 47522                           
 47523                           ;stkvar	_sw_value @ sp[(-2)+1]
 47524  01F614  0EFF               	movlw	-1
 47525  01F616  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 47526                           
 47527                           ;dio.c: 83:    break;
 47528  01F61C  D027               	goto	l13857
 47529  01F61E                     l13843:
 47530                           
 47531                           ;dio.c: 85:    sw_value = PORTFbits.RF2;
 47532  01F61E  A4CF               	btfss	207,2,c	;volatile
 47533  01F620  D006               	goto	u1293_20
 47534  01F622  D002               	goto	u1293_21
 47535  01F624                     l13845:
 47536                           
 47537                           ;dio.c: 88:    sw_value = PORTDbits.RD3;
 47538  01F624  A6CD               	btfss	205,3,c	;volatile
 47539  01F626  D003               	goto	u1293_20
 47540  01F628                     u1293_21:
 47541  01F628  6A35               	clrf	(btemp+11)^0,c
 47542  01F62A  2A35               	incf	(btemp+11)^0,f,c
 47543  01F62C  D7F3               	goto	u1291_28
 47544  01F62E                     u1293_20:
 47545  01F62E  6A35               	clrf	(btemp+11)^0,c
 47546  01F630  D7F1               	goto	u1291_28
 47547  01F632                     l13847:
 47548                           
 47549                           ;dio.c: 91:    sw_value = 1;
 47550                           ;stkvar	_sw_value @ sp[(-2)+1]
 47551  01F632  0EFF               	movlw	-1
 47552  01F634  6AE3               	clrf	plusw1,c
 47553  01F636  2AE3               	incf	plusw1,f,c
 47554                           
 47555                           ;dio.c: 92:    break;
 47556  01F638  D019               	goto	l13857
 47557  01F63A                     l13855:
 47558                           
 47559                           ;stkvar	_i @ sp[(-2)+0]
 47560  01F63A  0EFE               	movlw	-2
 47561  01F63C  50E3               	movf	plusw1,w,c
 47562  01F63E  6E34               	movwf	(btemp+10)^0,c
 47563  01F640  6A35               	clrf	(btemp+11)^0,c
 47564                           
 47565                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 47566                           ; Switch size 1, requested type "simple"
 47567                           ; Number of cases is 1, Range of values is 0 to 0
 47568                           ; switch strategies available:
 47569                           ; Name         Instructions Cycles
 47570                           ; simple_byte            4     3 (average)
 47571                           ;	Chosen strategy is simple_byte
 47572  01F642  5035               	movf	(btemp+11)^0,w,c
 47573  01F644  0A00               	xorlw	0	; case 0
 47574  01F646  A4D8               	btfss	status,2,c
 47575  01F648  D7F4               	goto	l13847
 47576                           
 47577                           ; Switch size 1, requested type "simple"
 47578                           ; Number of cases is 5, Range of values is 0 to 4
 47579                           ; switch strategies available:
 47580                           ; Name         Instructions Cycles
 47581                           ; simple_byte           16     9 (average)
 47582                           ;	Chosen strategy is simple_byte
 47583  01F64A  5034               	movf	(btemp+10)^0,w,c
 47584  01F64C  0A00               	xorlw	0	; case 0
 47585  01F64E  B4D8               	btfsc	status,2,c
 47586  01F650  D7F0               	goto	l13847
 47587  01F652  0A01               	xorlw	1	; case 1
 47588  01F654  B4D8               	btfsc	status,2,c
 47589  01F656  D7ED               	goto	l13847
 47590  01F658  0A03               	xorlw	3	; case 2
 47591  01F65A  B4D8               	btfsc	status,2,c
 47592  01F65C  D7E0               	goto	l13843
 47593  01F65E  0A01               	xorlw	1	; case 3
 47594  01F660  B4D8               	btfsc	status,2,c
 47595  01F662  D7D5               	goto	l13841
 47596  01F664  0A07               	xorlw	7	; case 4
 47597  01F666  B4D8               	btfsc	status,2,c
 47598  01F668  D7DD               	goto	l13845
 47599  01F66A  D7E3               	goto	l13847
 47600  01F66C                     l13857:
 47601                           
 47602                           ;dio.c: 102:   if (sw_value) {
 47603                           ;stkvar	_sw_value @ sp[(-2)+1]
 47604  01F66C  0EFF               	movlw	-1
 47605  01F66E  50E3               	movf	plusw1,w,c
 47606  01F670  B4D8               	btfsc	status,2,c
 47607  01F672  D018               	goto	l13863
 47608                           
 47609                           ;dio.c: 103:    if (S.button[i].sw == SW_ON) {
 47610                           ;stkvar	_i @ sp[(-2)+0]
 47611  01F674  0EFE               	movlw	-2
 47612  01F676  50E3               	movf	plusw1,w,c
 47613  01F678  0D05               	mullw	5
 47614  01F67A  0EA4               	movlw	low _S
 47615  01F67C  24F3               	addwf	243,w,c
 47616  01F67E  6ED9               	movwf	fsr2l,c
 47617  01F680  0E01               	movlw	high _S
 47618  01F682  20F4               	addwfc	prodh,w,c
 47619  01F684  6EDA               	movwf	fsr2h,c
 47620  01F686  04DE               	decf	postinc2,w,c
 47621  01F688  A4D8               	btfss	status,2,c
 47622  01F68A  D049               	goto	l13871
 47623                           
 47624                           ;dio.c: 104:     S.button[i].sw = SW_OFF;
 47625                           ;stkvar	_i @ sp[(-2)+0]
 47626  01F68C  0EFE               	movlw	-2
 47627  01F68E  50E3               	movf	plusw1,w,c
 47628  01F690  0D05               	mullw	5
 47629  01F692  0EA4               	movlw	low _S
 47630  01F694  24F3               	addwf	243,w,c
 47631  01F696  6ED9               	movwf	fsr2l,c
 47632  01F698  0E01               	movlw	high _S
 47633  01F69A  20F4               	addwfc	prodh,w,c
 47634  01F69C  6EDA               	movwf	fsr2h,c
 47635  01F69E  0E00               	movlw	0
 47636  01F6A0  6EDF               	movwf	indf2,c
 47637  01F6A2  D03D               	goto	l13871
 47638  01F6A4                     l13863:
 47639                           
 47640                           ;dio.c: 107:    if (S.button[i].sw == SW_OFF) {
 47641                           ;stkvar	_i @ sp[(-2)+0]
 47642  01F6A4  0EFE               	movlw	-2
 47643  01F6A6  50E3               	movf	plusw1,w,c
 47644  01F6A8  0D05               	mullw	5
 47645  01F6AA  0EA4               	movlw	low _S
 47646  01F6AC  24F3               	addwf	243,w,c
 47647  01F6AE  6ED9               	movwf	fsr2l,c
 47648  01F6B0  0E01               	movlw	high _S
 47649  01F6B2  20F4               	addwfc	prodh,w,c
 47650  01F6B4  6EDA               	movwf	fsr2h,c
 47651  01F6B6  50DF               	movf	indf2,w,c
 47652  01F6B8  A4D8               	btfss	status,2,c
 47653  01F6BA  D031               	goto	l13871
 47654                           
 47655                           ;dio.c: 108:     S.button[i].sw = SW_ON;
 47656                           ;stkvar	_i @ sp[(-2)+0]
 47657  01F6BC  0EFE               	movlw	-2
 47658  01F6BE  50E3               	movf	plusw1,w,c
 47659  01F6C0  0D05               	mullw	5
 47660  01F6C2  0EA4               	movlw	low _S
 47661  01F6C4  24F3               	addwf	243,w,c
 47662  01F6C6  6ED9               	movwf	fsr2l,c
 47663  01F6C8  0E01               	movlw	high _S
 47664  01F6CA  20F4               	addwfc	prodh,w,c
 47665  01F6CC  6EDA               	movwf	fsr2h,c
 47666  01F6CE  0E01               	movlw	1
 47667  01F6D0  6EDF               	movwf	indf2,c
 47668                           
 47669                           ;dio.c: 109:     S.button[i].count = V.timerint_count;
 47670  01F6D2  EE20  F2B8         	lfsr	2,_V+177	;volatile
 47671                           
 47672                           ;stkvar	_i @ sp[(-2)+0]
 47673  01F6D6  0EFE               	movlw	-2
 47674  01F6D8  50E3               	movf	plusw1,w,c
 47675  01F6DA  0D05               	mullw	5
 47676  01F6DC  0EA5               	movlw	low (_S+1)
 47677  01F6DE  24F3               	addwf	243,w,c
 47678  01F6E0  6EE9               	movwf	fsr0l,c
 47679  01F6E2  0E01               	movlw	high (_S+1)
 47680  01F6E4  20F4               	addwfc	prodh,w,c
 47681  01F6E6  6EEA               	movwf	fsr0h,c
 47682  01F6E8  006F FF7B FFEE     	movff	postinc2,postinc0
 47683  01F6EE  006F FF7B FFEE     	movff	postinc2,postinc0
 47684  01F6F4  006F FF7B FFEE     	movff	postinc2,postinc0
 47685  01F6FA  006F FF7B FFEE     	movff	postinc2,postinc0
 47686                           
 47687                           ;dio.c: 110:     S.sw_bitmap |= 1 << i;
 47688                           ;stkvar	_i @ sp[(-2)+0]
 47689  01F700  0EFE               	movlw	-2
 47690  01F702  006F FF8C  F035    	movff	plusw1,btemp+11
 47691  01F708  0E01               	movlw	1
 47692  01F70A  6E34               	movwf	(btemp+10)^0,c
 47693  01F70C  2A35               	incf	(btemp+11)^0,f,c
 47694  01F70E  D002               	goto	u1297_24
 47695  01F710                     u1297_25:
 47696  01F710  90D8               	bcf	status,0,c
 47697  01F712  3634               	rlcf	(btemp+10)^0,f,c
 47698  01F714                     u1297_24:
 47699  01F714  2E35               	decfsz	(btemp+11)^0,f,c
 47700  01F716  D7FC               	goto	u1297_25
 47701  01F718  5034               	movf	(btemp+10)^0,w,c
 47702  01F71A  0101               	movlb	1	; () banked
 47703  01F71C  13CC               	iorwf	(_S+40)& (0+255),f,b	;volatile
 47704  01F71E                     l13871:
 47705                           
 47706                           ;dio.c: 113:  } while (++i < 6);
 47707                           ;stkvar	_i @ sp[(-2)+0]
 47708  01F71E  0EFE               	movlw	-2
 47709  01F720  2AE3               	incf	plusw1,f,c
 47710  01F722  0EFE               	movlw	-2
 47711  01F724  006F FF8C  F02A    	movff	plusw1,btemp
 47712  01F72A  0E05               	movlw	5
 47713  01F72C  642A               	cpfsgt	btemp^0,c
 47714  01F72E  D785               	goto	l13855
 47715                           
 47716                           ;dio.c: 122:  do { LATFbits.LATF5 = 1; } while(0);
 47717  01F730  8ABF               	bsf	191,5,c	;volatile
 47718                           
 47719                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 47720  01F732  52E5               	movf	postdec1,f,c
 47721  01F734  52E5               	movf	postdec1,f,c
 47722  01F736  0012               	return		;funcret
 47723  01F738                     __end_of_switch_handler:
 47724                           	opt callstack 0
 47725                           
 47726 ;; *************** function _TMR5_ISR *****************
 47727 ;; Defined at:
 47728 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 47729 ;; Parameters:    Size  Location     Type
 47730 ;;		None
 47731 ;; Auto vars:     Size  Location     Type
 47732 ;;		None
 47733 ;; Return value:  Size  Location     Type
 47734 ;;                  1    wreg      void 
 47735 ;; Registers used:
 47736 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, prodl,
      + prodh
 47737 ;; Tracked objects:
 47738 ;;		On entry : 0/0
 47739 ;;		On exit  : 3F/0
 47740 ;;		Unchanged: 0/0
 47741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47744 ;;      Temps:         31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47745 ;;      Totals:        31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47746 ;;Total ram usage:       31 bytes
 47747 ;; Hardware stack levels used:    1
 47748 ;; Hardware stack levels required when called:    9
 47749 ;; This function calls:
 47750 ;;		_TMR5_CallBack
 47751 ;;		_TMR5_WriteTimer
 47752 ;; This function is called by:
 47753 ;;		Interrupt level 1
 47754 ;; This function uses a non-reentrant model
 47755 ;;
 47756                           
 47757                           	psect	text191
 47758  01E028                     __ptext191:
 47759                           	opt callstack 0
 47760  01E028                     _TMR5_ISR:
 47761                           	opt callstack 8
 47762                           
 47763                           ;incstack = 0
 47764  01E028  006F FF60  F00D    	movff	status,??_TMR5_ISR+2
 47765  01E02E  0060  F0A8  F00E   	movff	btemp,??_TMR5_ISR+3
 47766  01E034  0060  F0AC  F00F   	movff	btemp+1,??_TMR5_ISR+4
 47767  01E03A  0060  F0B0  F010   	movff	btemp+2,??_TMR5_ISR+5
 47768  01E040  0060  F0B4  F011   	movff	btemp+3,??_TMR5_ISR+6
 47769  01E046  0060  F0B8  F012   	movff	btemp+4,??_TMR5_ISR+7
 47770  01E04C  0060  F0BC  F013   	movff	btemp+5,??_TMR5_ISR+8
 47771  01E052  0060  F0C0  F014   	movff	btemp+6,??_TMR5_ISR+9
 47772  01E058  0060  F0C4  F015   	movff	btemp+7,??_TMR5_ISR+10
 47773  01E05E  0060  F0C8  F016   	movff	btemp+8,??_TMR5_ISR+11
 47774  01E064  0060  F0CC  F017   	movff	btemp+9,??_TMR5_ISR+12
 47775  01E06A  0060  F0D0  F018   	movff	btemp+10,??_TMR5_ISR+13
 47776  01E070  0060  F0D4  F019   	movff	btemp+11,??_TMR5_ISR+14
 47777  01E076  0060  F0E8  F01A   	movff	btemp+16,??_TMR5_ISR+15
 47778  01E07C  0060  F0EC  F01B   	movff	btemp+17,??_TMR5_ISR+16
 47779  01E082  0060  F0F0  F01C   	movff	btemp+18,??_TMR5_ISR+17
 47780  01E088  0060  F0F4  F01D   	movff	btemp+19,??_TMR5_ISR+18
 47781  01E08E  0060  F0F8  F01E   	movff	btemp+20,??_TMR5_ISR+19
 47782  01E094  0060  F0FC  F01F   	movff	btemp+21,??_TMR5_ISR+20
 47783  01E09A  0060  F100  F020   	movff	btemp+22,??_TMR5_ISR+21
 47784  01E0A0  0060  F104  F021   	movff	btemp+23,??_TMR5_ISR+22
 47785  01E0A6  0060  F108  F022   	movff	btemp+24,??_TMR5_ISR+23
 47786  01E0AC  0060  F10C  F023   	movff	btemp+25,??_TMR5_ISR+24
 47787  01E0B2  0060  F110  F024   	movff	btemp+26,??_TMR5_ISR+25
 47788  01E0B8  0060  F114  F025   	movff	btemp+27,??_TMR5_ISR+26
 47789  01E0BE  0060  F118  F026   	movff	btemp+28,??_TMR5_ISR+27
 47790  01E0C4  0060  F11C  F027   	movff	btemp+29,??_TMR5_ISR+28
 47791  01E0CA  0060  F120  F028   	movff	btemp+30,??_TMR5_ISR+29
 47792  01E0D0  0060  F124  F029   	movff	btemp+31,??_TMR5_ISR+30
 47793  01E0D6  EE16  F196         	lfsr	1,___intlo_sp
 47794                           
 47795                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 47796  01E0DA  0139               	movlb	57	; () banked
 47797  01E0DC  9DA8               	bcf	168,6,b	;volatile
 47798                           
 47799                           ; BSR set to: 57
 47800                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 47801  01E0DE  0060  F313  FFE6   	movff	_timer5ReloadVal,postinc1
 47802  01E0E4  0060  F317  FFE6   	movff	_timer5ReloadVal+1,postinc1
 47803  01E0EA  EC69  F012         	call	_TMR5_WriteTimer	;wreg free
 47804                           
 47805                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 47806  01E0EE  0102               	movlb	2	; () banked
 47807  01E0F0  51AE               	movf	(_V+167)& (0+255),w,b	;volatile
 47808  01E0F2  6E0B               	movwf	??_TMR5_ISR^0,c
 47809  01E0F4  6A0C               	clrf	(??_TMR5_ISR+1)^0,c
 47810  01E0F6  0E05               	movlw	5
 47811  01E0F8  260B               	addwf	??_TMR5_ISR^0,f,c
 47812  01E0FA  0E00               	movlw	0
 47813  01E0FC  220C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 47814  01E0FE  0100               	movlb	0	; () banked
 47815  01E100  4BC2               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 47816  01E102  2BC3               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 47817  01E104  500B               	movf	??_TMR5_ISR^0,w,c
 47818  01E106  5DC2               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 47819  01E108  500C               	movf	(??_TMR5_ISR+1)^0,w,c
 47820  01E10A  59C3               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 47821  01E10C  A0D8               	btfss	status,0,c
 47822  01E10E  D005               	goto	i1l1021
 47823                           
 47824                           ; BSR set to: 0
 47825                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 47826  01E110  EC12  F016         	call	_TMR5_CallBack	;wreg free
 47827                           
 47828                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 47829  01E114  0100               	movlb	0	; () banked
 47830  01E116  6BC2               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 47831  01E118  6BC3               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 47832  01E11A                     i1l1021:
 47833                           
 47834                           ; BSR set to: 0
 47835  01E11A  0060  F0A4  F049   	movff	??_TMR5_ISR+30,btemp+31
 47836  01E120  0060  F0A0  F048   	movff	??_TMR5_ISR+29,btemp+30
 47837  01E126  0060  F09C  F047   	movff	??_TMR5_ISR+28,btemp+29
 47838  01E12C  0060  F098  F046   	movff	??_TMR5_ISR+27,btemp+28
 47839  01E132  0060  F094  F045   	movff	??_TMR5_ISR+26,btemp+27
 47840  01E138  0060  F090  F044   	movff	??_TMR5_ISR+25,btemp+26
 47841  01E13E  0060  F08C  F043   	movff	??_TMR5_ISR+24,btemp+25
 47842  01E144  0060  F088  F042   	movff	??_TMR5_ISR+23,btemp+24
 47843  01E14A  0060  F084  F041   	movff	??_TMR5_ISR+22,btemp+23
 47844  01E150  0060  F080  F040   	movff	??_TMR5_ISR+21,btemp+22
 47845  01E156  0060  F07C  F03F   	movff	??_TMR5_ISR+20,btemp+21
 47846  01E15C  0060  F078  F03E   	movff	??_TMR5_ISR+19,btemp+20
 47847  01E162  0060  F074  F03D   	movff	??_TMR5_ISR+18,btemp+19
 47848  01E168  0060  F070  F03C   	movff	??_TMR5_ISR+17,btemp+18
 47849  01E16E  0060  F06C  F03B   	movff	??_TMR5_ISR+16,btemp+17
 47850  01E174  0060  F068  F03A   	movff	??_TMR5_ISR+15,btemp+16
 47851  01E17A  0060  F064  F035   	movff	??_TMR5_ISR+14,btemp+11
 47852  01E180  0060  F060  F034   	movff	??_TMR5_ISR+13,btemp+10
 47853  01E186  0060  F05C  F033   	movff	??_TMR5_ISR+12,btemp+9
 47854  01E18C  0060  F058  F032   	movff	??_TMR5_ISR+11,btemp+8
 47855  01E192  0060  F054  F031   	movff	??_TMR5_ISR+10,btemp+7
 47856  01E198  0060  F050  F030   	movff	??_TMR5_ISR+9,btemp+6
 47857  01E19E  0060  F04C  F02F   	movff	??_TMR5_ISR+8,btemp+5
 47858  01E1A4  0060  F048  F02E   	movff	??_TMR5_ISR+7,btemp+4
 47859  01E1AA  0060  F044  F02D   	movff	??_TMR5_ISR+6,btemp+3
 47860  01E1B0  0060  F040  F02C   	movff	??_TMR5_ISR+5,btemp+2
 47861  01E1B6  0060  F03C  F02B   	movff	??_TMR5_ISR+4,btemp+1
 47862  01E1BC  0060  F038  F02A   	movff	??_TMR5_ISR+3,btemp
 47863  01E1C2  0060  F037  FFD8   	movff	??_TMR5_ISR+2,status
 47864  01E1C8  0011               	retfie		f
 47865  01E1CA                     __end_of_TMR5_ISR:
 47866                           	opt callstack 0
 47867                           
 47868 ;; *************** function _TMR5_WriteTimer *****************
 47869 ;; Defined at:
 47870 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 47871 ;; Parameters:    Size  Location     Type
 47872 ;;  timerVal        2  [STACK] unsigned short 
 47873 ;; Auto vars:     Size  Location     Type
 47874 ;;		None
 47875 ;; Return value:  Size  Location     Type
 47876 ;;                  1  [STACK] void 
 47877 ;; Registers used:
 47878 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 47879 ;; Tracked objects:
 47880 ;;		On entry : 3F/39
 47881 ;;		On exit  : 0/0
 47882 ;;		Unchanged: 0/0
 47883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47888 ;;Total ram usage:        0 bytes
 47889 ;; Hardware stack levels used:    1
 47890 ;; Hardware stack levels required when called:    3
 47891 ;; This function calls:
 47892 ;;		Nothing
 47893 ;; This function is called by:
 47894 ;;		_TMR5_ISR
 47895 ;; This function uses a reentrant model
 47896 ;;
 47897                           
 47898                           	psect	text192
 47899  0024D2                     __ptext192:
 47900                           	opt callstack 0
 47901  0024D2                     _TMR5_WriteTimer:
 47902                           	opt callstack 13
 47903                           
 47904                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 47905                           
 47906                           ; BSR set to: 0
 47907                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47908                           ;incstack = 0
 47909  0024D2  A49A               	btfss	154,2,c	;volatile
 47910  0024D4  D00F               	goto	l14083
 47911                           
 47912                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 47913  0024D6  909A               	bcf	154,0,c	;volatile
 47914                           
 47915                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 47916                           ;stkvar	_timerVal @ sp[(0)+-2]
 47917  0024D8  0EFF               	movlw	255
 47918  0024DA  24E1               	addwf	fsr1l,w,c
 47919  0024DC  6ED9               	movwf	fsr2l,c
 47920  0024DE  0EFF               	movlw	255
 47921  0024E0  20E2               	addwfc	fsr1h,w,c
 47922  0024E2  6EDA               	movwf	fsr2h,c
 47923  0024E4  50DF               	movf	indf2,w,c
 47924  0024E6  6E99               	movwf	153,c	;volatile
 47925                           
 47926                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 47927                           ;stkvar	_timerVal @ sp[(0)+-2]
 47928  0024E8  0EFE               	movlw	-2
 47929  0024EA  006F FF8F FF98     	movff	plusw1,16280	;volatile
 47930                           
 47931                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 47932  0024F0  809A               	bsf	154,0,c	;volatile
 47933                           
 47934                           ;mcc_generated_files/tmr5.c: 144:  } else {
 47935  0024F2  D00C               	goto	l1004
 47936  0024F4                     l14083:
 47937                           
 47938                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 47939                           ;stkvar	_timerVal @ sp[(0)+-2]
 47940  0024F4  0EFF               	movlw	255
 47941  0024F6  24E1               	addwf	fsr1l,w,c
 47942  0024F8  6ED9               	movwf	fsr2l,c
 47943  0024FA  0EFF               	movlw	255
 47944  0024FC  20E2               	addwfc	fsr1h,w,c
 47945  0024FE  6EDA               	movwf	fsr2h,c
 47946  002500  50DF               	movf	indf2,w,c
 47947  002502  6E99               	movwf	153,c	;volatile
 47948                           
 47949                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 47950                           ;stkvar	_timerVal @ sp[(0)+-2]
 47951  002504  0EFE               	movlw	-2
 47952  002506  006F FF8F FF98     	movff	plusw1,16280	;volatile
 47953  00250C                     l1004:
 47954                           
 47955                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 47956  00250C  52E5               	movf	postdec1,f,c
 47957  00250E  52E5               	movf	postdec1,f,c
 47958  002510  0012               	return		;funcret
 47959  002512                     __end_of_TMR5_WriteTimer:
 47960                           	opt callstack 0
 47961                           
 47962 ;; *************** function _TMR5_CallBack *****************
 47963 ;; Defined at:
 47964 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 47965 ;; Parameters:    Size  Location     Type
 47966 ;;		None
 47967 ;; Auto vars:     Size  Location     Type
 47968 ;;		None
 47969 ;; Return value:  Size  Location     Type
 47970 ;;                  1  [STACK] void 
 47971 ;; Registers used:
 47972 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, prodl,
      + prodh
 47973 ;; Tracked objects:
 47974 ;;		On entry : 3F/0
 47975 ;;		On exit  : 0/0
 47976 ;;		Unchanged: 0/0
 47977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47982 ;;Total ram usage:        0 bytes
 47983 ;; Hardware stack levels used:    1
 47984 ;; Hardware stack levels required when called:    8
 47985 ;; This function calls:
 47986 ;;		Absolute function
 47987 ;;		_TMR5_DefaultInterruptHandler
 47988 ;; This function is called by:
 47989 ;;		_TMR5_ISR
 47990 ;; This function uses a reentrant model
 47991 ;;
 47992                           
 47993                           	psect	text193
 47994  002C24                     __ptext193:
 47995                           	opt callstack 0
 47996  002C24                     _TMR5_CallBack:
 47997                           	opt callstack 8
 47998                           
 47999                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 48000                           
 48001                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48002                           ;incstack = 0
 48003  002C24  0100               	movlb	0	; () banked
 48004  002C26  519B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 48005  002C28  119C               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 48006  002C2A  119D               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 48007  002C2C  B4D8               	btfsc	status,2,c
 48008  002C2E  0012               	return	
 48009                           
 48010                           ; BSR set to: 0
 48011                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 48012  002C30  D801               	call	u1336_28
 48013  002C32  0012               	return	
 48014  002C34                     u1336_28:
 48015  002C34  0005               	push	
 48016  002C36  6EFA               	movwf	pclath,c
 48017  002C38  519B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 48018  002C3A  6EFD               	movwf	tosl,c
 48019  002C3C  519C               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 48020  002C3E  6EFE               	movwf	tosh,c
 48021  002C40  519D               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 48022  002C42  6EFF               	movwf	tosu,c
 48023  002C44  50FA               	movf	pclath,w,c
 48024  002C46  0012               	return		;indir
 48025  002C48                     __end_of_TMR5_CallBack:
 48026                           	opt callstack 0
 48027                           
 48028 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 48029 ;; Defined at:
 48030 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 48031 ;; Parameters:    Size  Location     Type
 48032 ;;		None
 48033 ;; Auto vars:     Size  Location     Type
 48034 ;;		None
 48035 ;; Return value:  Size  Location     Type
 48036 ;;                  1  [STACK] void 
 48037 ;; Registers used:
 48038 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, prodl, prodh
 48039 ;; Tracked objects:
 48040 ;;		On entry : 3F/0
 48041 ;;		On exit  : 0/0
 48042 ;;		Unchanged: 0/0
 48043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48048 ;;Total ram usage:        0 bytes
 48049 ;; Hardware stack levels used:    1
 48050 ;; Hardware stack levels required when called:    7
 48051 ;; This function calls:
 48052 ;;		_check_day_time
 48053 ;; This function is called by:
 48054 ;;		_TMR5_Initialize
 48055 ;;		_TMR5_CallBack
 48056 ;; This function uses a reentrant model
 48057 ;;
 48058                           
 48059                           	psect	text194
 48060  002640                     __ptext194:
 48061                           	opt callstack 0
 48062  002640                     _TMR5_DefaultInterruptHandler:
 48063                           	opt callstack 8
 48064                           
 48065                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 48066                           
 48067                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48068                           ;incstack = 0
 48069  002640  A0BE               	btfss	190,0,c	;volatile
 48070  002642  D002               	goto	u1257_20
 48071  002644  0E01               	movlw	1
 48072  002646  D001               	goto	u1257_26
 48073  002648                     u1257_20:
 48074  002648  0E00               	movlw	0
 48075  00264A                     u1257_26:
 48076  00264A  0AFF               	xorlw	255
 48077  00264C  6E35               	movwf	(btemp+11)^0,c
 48078  00264E  50BE               	movf	190,w,c	;volatile
 48079  002650  1835               	xorwf	(btemp+11)^0,w,c
 48080  002652  0BFE               	andlw	-2
 48081  002654  1835               	xorwf	(btemp+11)^0,w,c
 48082  002656  6EBE               	movwf	190,c	;volatile
 48083                           
 48084                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 48085  002658  0E01               	movlw	1
 48086  00265A  0102               	movlb	2	; () banked
 48087  00265C  27B8               	addwf	(_V+177)& (0+255),f,b	;volatile
 48088  00265E  0E00               	movlw	0
 48089  002660  23B9               	addwfc	(_V+178)& (0+255),f,b	;volatile
 48090  002662  23BA               	addwfc	(_V+179)& (0+255),f,b	;volatile
 48091  002664  23BB               	addwfc	(_V+180)& (0+255),f,b	;volatile
 48092                           
 48093                           ; BSR set to: 2
 48094                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 48095  002666  0E01               	movlw	1
 48096  002668  2788               	addwf	(_V+129)& (0+255),f,b	;volatile
 48097  00266A  0E00               	movlw	0
 48098  00266C  2389               	addwfc	(_V+130)& (0+255),f,b	;volatile
 48099  00266E  238A               	addwfc	(_V+131)& (0+255),f,b	;volatile
 48100  002670  238B               	addwfc	(_V+132)& (0+255),f,b	;volatile
 48101                           
 48102                           ; BSR set to: 2
 48103                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 48104  002672  ECA8  F0D1         	call	_check_day_time	;wreg free
 48105                           
 48106                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 48107  002676  0012               	return		;funcret
 48108  002678                     __end_of_TMR5_DefaultInterruptHandler:
 48109                           	opt callstack 0
 48110                           
 48111 ;; *************** function _check_day_time *****************
 48112 ;; Defined at:
 48113 ;;		line 167 in file "mbmc.c"
 48114 ;; Parameters:    Size  Location     Type
 48115 ;;		None
 48116 ;; Auto vars:     Size  Location     Type
 48117 ;;  light           4  [STACK] float 
 48118 ;; Return value:  Size  Location     Type
 48119 ;;                  1  [STACK] _Bool 
 48120 ;; Registers used:
 48121 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, prodl, prodh
 48122 ;; Tracked objects:
 48123 ;;		On entry : 3F/2
 48124 ;;		On exit  : 0/0
 48125 ;;		Unchanged: 0/0
 48126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48131 ;;Total ram usage:        0 bytes
 48132 ;; Hardware stack levels used:    1
 48133 ;; Hardware stack levels required when called:    6
 48134 ;; This function calls:
 48135 ;;		___flge
 48136 ;;		_conv_raw_result
 48137 ;;		_get_ac_charger_relay
 48138 ;;		_set_ac_charger_relay
 48139 ;;		_time
 48140 ;; This function is called by:
 48141 ;;		_TMR5_DefaultInterruptHandler
 48142 ;; This function uses a reentrant model
 48143 ;;
 48144                           
 48145                           	psect	text195
 48146  01A350                     __ptext195:
 48147                           	opt callstack 0
 48148  01A350                     _check_day_time:
 48149                           	opt callstack 0
 48150                           
 48151                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48152  01A350  52E6               	movf	postinc1,f,c
 48153  01A352  52E6               	movf	postinc1,f,c
 48154  01A354  52E6               	movf	postinc1,f,c
 48155  01A356  52E6               	movf	postinc1,f,c
 48156                           
 48157                           ;mbmc.c: 169:  static uint8_t day_delay = 0;;mbmc.c: 170:  float light;;mbmc.c: 172:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 48158                           
 48159                           ;incstack = 0
 48160  01A358  0E00               	movlw	0
 48161  01A35A  6EE6               	movwf	postinc1,c
 48162  01A35C  0E0D               	movlw	13
 48163  01A35E  6EE6               	movwf	postinc1,c
 48164  01A360  EC00  F0C9         	call	_conv_raw_result	;wreg free
 48165                           
 48166                           ;stkvar	_light @ sp[(-4)+0]
 48167  01A364  0EFC               	movlw	-4
 48168  01A366  0060  F0AB  FFE3   	movff	btemp,plusw1
 48169  01A36C  0EFD               	movlw	-3
 48170  01A36E  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 48171  01A374  0EFE               	movlw	-2
 48172  01A376  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 48173  01A37C  0EFF               	movlw	-1
 48174  01A37E  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 48175                           
 48176                           ;mbmc.c: 176:  if (C.day_update) {
 48177  01A384  EE22  F237         	lfsr	2,_C+312	;volatile
 48178  01A388  50DE               	movf	postinc2,w,c
 48179  01A38A  10DE               	iorwf	postinc2,w,c
 48180  01A38C  10DE               	iorwf	postinc2,w,c
 48181  01A38E  10DE               	iorwf	postinc2,w,c
 48182  01A390  B4D8               	btfsc	status,2,c
 48183  01A392  D068               	goto	l12801
 48184                           
 48185                           ;mbmc.c: 177:   if (time(((void*)0)) >= C.day_update) {
 48186  01A394  0062  F8DC  F032   	movff	_C+312,btemp+8	;volatile
 48187  01A39A  0062  F8E0  F033   	movff	_C+313,btemp+9	;volatile
 48188  01A3A0  0062  F8E4  F034   	movff	_C+314,btemp+10	;volatile
 48189  01A3A6  0062  F8E8  F035   	movff	_C+315,btemp+11	;volatile
 48190  01A3AC  5032               	movf	(btemp+8)^0,w,c
 48191  01A3AE  6E3A               	movwf	(btemp+16)^0,c
 48192  01A3B0  5033               	movf	(btemp+9)^0,w,c
 48193  01A3B2  6E3B               	movwf	(btemp+17)^0,c
 48194  01A3B4  5034               	movf	(btemp+10)^0,w,c
 48195  01A3B6  6E3C               	movwf	(btemp+18)^0,c
 48196  01A3B8  5035               	movf	(btemp+11)^0,w,c
 48197  01A3BA  6E3D               	movwf	(btemp+19)^0,c
 48198  01A3BC  6A3E               	clrf	(btemp+20)^0,c
 48199  01A3BE  6A3F               	clrf	(btemp+21)^0,c
 48200  01A3C0  6A40               	clrf	(btemp+22)^0,c
 48201  01A3C2  6A41               	clrf	(btemp+23)^0,c
 48202  01A3C4  0E00               	movlw	0
 48203  01A3C6  6EE6               	movwf	postinc1,c
 48204  01A3C8  0E00               	movlw	0
 48205  01A3CA  6EE6               	movwf	postinc1,c
 48206  01A3CC  EC25  F00F         	call	_time	;wreg free
 48207  01A3D0  52E5               	movf	postdec1,f,c
 48208  01A3D2  006F FF9C  F049    	movff	indf1,btemp+31
 48209  01A3D8  52E5               	movf	postdec1,f,c
 48210  01A3DA  006F FF9C  F048    	movff	indf1,btemp+30
 48211  01A3E0  52E5               	movf	postdec1,f,c
 48212  01A3E2  006F FF9C  F047    	movff	indf1,btemp+29
 48213  01A3E8  52E5               	movf	postdec1,f,c
 48214  01A3EA  006F FF9C  F046    	movff	indf1,btemp+28
 48215  01A3F0  52E5               	movf	postdec1,f,c
 48216  01A3F2  006F FF9C  F045    	movff	indf1,btemp+27
 48217  01A3F8  52E5               	movf	postdec1,f,c
 48218  01A3FA  006F FF9C  F044    	movff	indf1,btemp+26
 48219  01A400  52E5               	movf	postdec1,f,c
 48220  01A402  006F FF9C  F043    	movff	indf1,btemp+25
 48221  01A408  52E5               	movf	postdec1,f,c
 48222  01A40A  006F FF9C  F042    	movff	indf1,btemp+24
 48223  01A410  503A               	movf	(btemp+16)^0,w,c
 48224  01A412  5C42               	subwf	(btemp+24)^0,w,c
 48225  01A414  503B               	movf	(btemp+17)^0,w,c
 48226  01A416  5843               	subwfb	(btemp+25)^0,w,c
 48227  01A418  503C               	movf	(btemp+18)^0,w,c
 48228  01A41A  5844               	subwfb	(btemp+26)^0,w,c
 48229  01A41C  503D               	movf	(btemp+19)^0,w,c
 48230  01A41E  5845               	subwfb	(btemp+27)^0,w,c
 48231  01A420  503E               	movf	(btemp+20)^0,w,c
 48232  01A422  5846               	subwfb	(btemp+28)^0,w,c
 48233  01A424  503F               	movf	(btemp+21)^0,w,c
 48234  01A426  5847               	subwfb	(btemp+29)^0,w,c
 48235  01A428  5040               	movf	(btemp+22)^0,w,c
 48236  01A42A  5848               	subwfb	(btemp+30)^0,w,c
 48237  01A42C  5049               	movf	(btemp+31)^0,w,c
 48238  01A42E  0A80               	xorlw	128
 48239  01A430  6E2A               	movwf	btemp^0,c
 48240  01A432  5041               	movf	(btemp+23)^0,w,c
 48241  01A434  0A80               	xorlw	128
 48242  01A436  582A               	subwfb	btemp^0,w,c
 48243  01A438  A0D8               	btfss	status,0,c
 48244  01A43A  D014               	goto	l12801
 48245                           
 48246                           ; BSR set to: 57
 48247                           ;mbmc.c: 178:    C.day_update = 0;
 48248  01A43C  0E00               	movlw	0
 48249  01A43E  006F FFA0  FA37    	movff	wreg,_C+312	;volatile
 48250  01A444  0E00               	movlw	0
 48251  01A446  006F FFA0  FA38    	movff	wreg,_C+313	;volatile
 48252  01A44C  0E00               	movlw	0
 48253  01A44E  006F FFA0  FA39    	movff	wreg,_C+314	;volatile
 48254  01A454  0E00               	movlw	0
 48255  01A456  006F FFA0  FA3A    	movff	wreg,_C+315	;volatile
 48256                           
 48257                           ;mbmc.c: 179:    C.dupdate = 1;
 48258  01A45C  0E01               	movlw	1
 48259  01A45E  006F FFA0  FA2E    	movff	wreg,_C+303	;volatile
 48260  01A464                     l12801:
 48261                           
 48262                           ;mbmc.c: 183:  if (!day_delay++ && V.system_stable) {
 48263  01A464  2A51               	incf	check_day_time@day_delay^0,f,c
 48264  01A466  0451               	decf	check_day_time@day_delay^0,w,c
 48265  01A468  A4D8               	btfss	status,2,c
 48266  01A46A  D123               	goto	l2214
 48267  01A46C  0102               	movlb	2	; () banked
 48268  01A46E  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 48269  01A470  B4D8               	btfsc	status,2,c
 48270  01A472  D11F               	goto	l2214
 48271                           
 48272                           ; BSR set to: 2
 48273                           ;mbmc.c: 184:   if (C.soc > 3) {
 48274  01A474  EE22  F1B5         	lfsr	2,_C+182	;volatile
 48275  01A478  0E01               	movlw	1
 48276  01A47A  50DB               	movf	plusw2,w,c
 48277  01A47C  E104               	bnz	u1223_20
 48278  01A47E  0E04               	movlw	4
 48279  01A480  5CDE               	subwf	postinc2,w,c
 48280  01A482  A0D8               	btfss	status,0,c
 48281  01A484  D0ED               	goto	l12835
 48282  01A486                     u1223_20:
 48283                           
 48284                           ; BSR set to: 2
 48285                           ;mbmc.c: 185:    if (!C.day) {
 48286  01A486  EE22  F22D         	lfsr	2,_C+302	;volatile
 48287  01A48A  50DF               	movf	indf2,w,c
 48288  01A48C  A4D8               	btfss	status,2,c
 48289  01A48E  D065               	goto	l12821
 48290                           
 48291                           ; BSR set to: 2
 48292                           ;mbmc.c: 186:     if (light > 22.0) {
 48293                           ;stkvar	_light @ sp[(-4)+0]
 48294  01A490  0EFC               	movlw	-4
 48295  01A492  006F FF8F FFE6     	movff	plusw1,postinc1
 48296  01A498  006F FF8F FFE6     	movff	plusw1,postinc1
 48297  01A49E  006F FF8F FFE6     	movff	plusw1,postinc1
 48298  01A4A4  006F FF8F FFE6     	movff	plusw1,postinc1
 48299  01A4AA  0E00               	movlw	0
 48300  01A4AC  6EE6               	movwf	postinc1,c
 48301  01A4AE  0E00               	movlw	0
 48302  01A4B0  6EE6               	movwf	postinc1,c
 48303  01A4B2  0EB0               	movlw	176
 48304  01A4B4  6EE6               	movwf	postinc1,c
 48305  01A4B6  0E41               	movlw	65
 48306  01A4B8  6EE6               	movwf	postinc1,c
 48307  01A4BA  ECE9  F0F6         	call	___flge	;wreg free
 48308  01A4BE  B02A               	btfsc	btemp& (0+255),0,c
 48309  01A4C0  D0F8               	goto	l2214
 48310                           
 48311                           ;mbmc.c: 187:      C.day = 1;
 48312  01A4C2  0E01               	movlw	1
 48313  01A4C4  006F FFA0  FA2D    	movff	wreg,_C+302	;volatile
 48314                           
 48315                           ;mbmc.c: 188:      C.day_start = time(((void*)0));
 48316  01A4CA  0E00               	movlw	0
 48317  01A4CC  6EE6               	movwf	postinc1,c
 48318  01A4CE  0E00               	movlw	0
 48319  01A4D0  6EE6               	movwf	postinc1,c
 48320  01A4D2  EC25  F00F         	call	_time	;wreg free
 48321  01A4D6  52E5               	movf	postdec1,f,c
 48322  01A4D8  006F FF9C  F041    	movff	indf1,btemp+23
 48323  01A4DE  52E5               	movf	postdec1,f,c
 48324  01A4E0  006F FF9C  F040    	movff	indf1,btemp+22
 48325  01A4E6  52E5               	movf	postdec1,f,c
 48326  01A4E8  006F FF9C  F03F    	movff	indf1,btemp+21
 48327  01A4EE  52E5               	movf	postdec1,f,c
 48328  01A4F0  006F FF9C  F03E    	movff	indf1,btemp+20
 48329  01A4F6  52E5               	movf	postdec1,f,c
 48330  01A4F8  006F FF9C  F03D    	movff	indf1,btemp+19
 48331  01A4FE  52E5               	movf	postdec1,f,c
 48332  01A500  006F FF9C  F03C    	movff	indf1,btemp+18
 48333  01A506  52E5               	movf	postdec1,f,c
 48334  01A508  006F FF9C  F03B    	movff	indf1,btemp+17
 48335  01A50E  52E5               	movf	postdec1,f,c
 48336  01A510  006F FF9C  F03A    	movff	indf1,btemp+16
 48337  01A516  0060  F0E8  F032   	movff	btemp+16,btemp+8
 48338  01A51C  0060  F0EC  F033   	movff	btemp+17,btemp+9
 48339  01A522  0060  F0F0  F034   	movff	btemp+18,btemp+10
 48340  01A528  0060  F0F4  F035   	movff	btemp+19,btemp+11
 48341  01A52E  0060  F0C8  FA2F   	movff	btemp+8,_C+304	;volatile
 48342  01A534  0060  F0CC  FA30   	movff	btemp+9,_C+305	;volatile
 48343  01A53A  0060  F0D0  FA31   	movff	btemp+10,_C+306	;volatile
 48344  01A540  0060  F0D4  FA32   	movff	btemp+11,_C+307	;volatile
 48345                           
 48346                           ; BSR set to: 57
 48347                           ;mbmc.c: 189:      if (get_ac_charger_relay()) {
 48348  01A546  ECAB  F017         	call	_get_ac_charger_relay	;wreg free
 48349  01A54A  502A               	movf	btemp^0,w,c
 48350  01A54C  B4D8               	btfsc	status,2,c
 48351  01A54E  D0B5               	goto	l2210
 48352                           
 48353                           ;mbmc.c: 190:       set_ac_charger_relay(0);
 48354  01A550  0E00               	movlw	0
 48355  01A552  6EE6               	movwf	postinc1,c
 48356  01A554  EC95  F017         	call	_set_ac_charger_relay	;wreg free
 48357  01A558  D0B0               	goto	l2210
 48358  01A55A                     l12821:
 48359                           
 48360                           ; BSR set to: 2
 48361                           ;mbmc.c: 195:     if (light < 12.0) {
 48362  01A55A  0E00               	movlw	0
 48363  01A55C  6EE6               	movwf	postinc1,c
 48364  01A55E  0E00               	movlw	0
 48365  01A560  6EE6               	movwf	postinc1,c
 48366  01A562  0E40               	movlw	64
 48367  01A564  6EE6               	movwf	postinc1,c
 48368  01A566  0E41               	movlw	65
 48369  01A568  6EE6               	movwf	postinc1,c
 48370                           
 48371                           ;stkvar	_light @ sp[(-8)+0]
 48372  01A56A  0EF8               	movlw	-8
 48373  01A56C  006F FF8F FFE6     	movff	plusw1,postinc1
 48374  01A572  006F FF8F FFE6     	movff	plusw1,postinc1
 48375  01A578  006F FF8F FFE6     	movff	plusw1,postinc1
 48376  01A57E  006F FF8F FFE6     	movff	plusw1,postinc1
 48377  01A584  ECE9  F0F6         	call	___flge	;wreg free
 48378  01A588  B02A               	btfsc	btemp& (0+255),0,c
 48379  01A58A  D093               	goto	l2214
 48380                           
 48381                           ;mbmc.c: 196:      C.day = 0;
 48382  01A58C  0E00               	movlw	0
 48383  01A58E  006F FFA0  FA2D    	movff	wreg,_C+302	;volatile
 48384                           
 48385                           ;mbmc.c: 197:      C.day_end = time(((void*)0));
 48386  01A594  0E00               	movlw	0
 48387  01A596  6EE6               	movwf	postinc1,c
 48388  01A598  0E00               	movlw	0
 48389  01A59A  6EE6               	movwf	postinc1,c
 48390  01A59C  EC25  F00F         	call	_time	;wreg free
 48391  01A5A0  52E5               	movf	postdec1,f,c
 48392  01A5A2  006F FF9C  F041    	movff	indf1,btemp+23
 48393  01A5A8  52E5               	movf	postdec1,f,c
 48394  01A5AA  006F FF9C  F040    	movff	indf1,btemp+22
 48395  01A5B0  52E5               	movf	postdec1,f,c
 48396  01A5B2  006F FF9C  F03F    	movff	indf1,btemp+21
 48397  01A5B8  52E5               	movf	postdec1,f,c
 48398  01A5BA  006F FF9C  F03E    	movff	indf1,btemp+20
 48399  01A5C0  52E5               	movf	postdec1,f,c
 48400  01A5C2  006F FF9C  F03D    	movff	indf1,btemp+19
 48401  01A5C8  52E5               	movf	postdec1,f,c
 48402  01A5CA  006F FF9C  F03C    	movff	indf1,btemp+18
 48403  01A5D0  52E5               	movf	postdec1,f,c
 48404  01A5D2  006F FF9C  F03B    	movff	indf1,btemp+17
 48405  01A5D8  52E5               	movf	postdec1,f,c
 48406  01A5DA  006F FF9C  F03A    	movff	indf1,btemp+16
 48407  01A5E0  0060  F0E8  F032   	movff	btemp+16,btemp+8
 48408  01A5E6  0060  F0EC  F033   	movff	btemp+17,btemp+9
 48409  01A5EC  0060  F0F0  F034   	movff	btemp+18,btemp+10
 48410  01A5F2  0060  F0F4  F035   	movff	btemp+19,btemp+11
 48411  01A5F8  0060  F0C8  FA33   	movff	btemp+8,_C+308	;volatile
 48412  01A5FE  0060  F0CC  FA34   	movff	btemp+9,_C+309	;volatile
 48413  01A604  0060  F0D0  FA35   	movff	btemp+10,_C+310	;volatile
 48414  01A60A  0060  F0D4  FA36   	movff	btemp+11,_C+311	;volatile
 48415                           
 48416                           ; BSR set to: 57
 48417                           ;mbmc.c: 198:      C.day_update = C.day_end + 14400;
 48418  01A610  EE22  F233         	lfsr	2,_C+308	;volatile
 48419  01A614  0E40               	movlw	64
 48420  01A616  24DE               	addwf	postinc2,w,c
 48421  01A618  6E32               	movwf	(btemp+8)^0,c
 48422  01A61A  0E38               	movlw	56
 48423  01A61C  20DE               	addwfc	postinc2,w,c
 48424  01A61E  6E33               	movwf	(btemp+9)^0,c
 48425  01A620  0E00               	movlw	0
 48426  01A622  20DE               	addwfc	postinc2,w,c
 48427  01A624  6E34               	movwf	(btemp+10)^0,c
 48428  01A626  0E00               	movlw	0
 48429  01A628  20DE               	addwfc	postinc2,w,c
 48430  01A62A  6E35               	movwf	(btemp+11)^0,c
 48431  01A62C  0060  F0C8  FA37   	movff	btemp+8,_C+312	;volatile
 48432  01A632  0060  F0CC  FA38   	movff	btemp+9,_C+313	;volatile
 48433  01A638  0060  F0D0  FA39   	movff	btemp+10,_C+314	;volatile
 48434  01A63E  0060  F0D4  FA3A   	movff	btemp+11,_C+315	;volatile
 48435                           
 48436                           ; BSR set to: 57
 48437                           ;mbmc.c: 202:      if ((C.soc < 20)) {
 48438  01A644  EE22  F1B5         	lfsr	2,_C+182	;volatile
 48439  01A648  0E01               	movlw	1
 48440  01A64A  50DB               	movf	plusw2,w,c
 48441  01A64C  E136               	bnz	l2210
 48442  01A64E  0E14               	movlw	20
 48443  01A650  5CDE               	subwf	postinc2,w,c
 48444  01A652  B0D8               	btfsc	status,0,c
 48445  01A654  D032               	goto	l2210
 48446                           
 48447                           ; BSR set to: 57
 48448                           ;mbmc.c: 203:       set_ac_charger_relay(1);
 48449  01A656  0E01               	movlw	1
 48450  01A658  6EE6               	movwf	postinc1,c
 48451  01A65A  EC95  F017         	call	_set_ac_charger_relay	;wreg free
 48452  01A65E  D02D               	goto	l2210
 48453  01A660                     l12835:
 48454                           
 48455                           ; BSR set to: 2
 48456                           ;mbmc.c: 209:    if (C.p_pv < C.p_inverter) {
 48457  01A660  EE22  F177         	lfsr	2,_C+120	;volatile
 48458  01A664  006F FF7B FFE6     	movff	postinc2,postinc1
 48459  01A66A  006F FF7B FFE6     	movff	postinc2,postinc1
 48460  01A670  006F FF7B FFE6     	movff	postinc2,postinc1
 48461  01A676  006F FF7B FFE6     	movff	postinc2,postinc1
 48462  01A67C  EE22  F17B         	lfsr	2,_C+124	;volatile
 48463  01A680  006F FF7B FFE6     	movff	postinc2,postinc1
 48464  01A686  006F FF7B FFE6     	movff	postinc2,postinc1
 48465  01A68C  006F FF7B FFE6     	movff	postinc2,postinc1
 48466  01A692  006F FF7B FFE6     	movff	postinc2,postinc1
 48467  01A698  ECE9  F0F6         	call	___flge	;wreg free
 48468  01A69C  B02A               	btfsc	btemp& (0+255),0,c
 48469  01A69E  D009               	goto	l2214
 48470                           
 48471                           ;mbmc.c: 210:     if (!get_ac_charger_relay()) {
 48472  01A6A0  ECAB  F017         	call	_get_ac_charger_relay	;wreg free
 48473  01A6A4  502A               	movf	btemp^0,w,c
 48474  01A6A6  A4D8               	btfss	status,2,c
 48475  01A6A8  D004               	goto	l2214
 48476                           
 48477                           ;mbmc.c: 211:      set_ac_charger_relay(1);
 48478  01A6AA  0E01               	movlw	1
 48479  01A6AC  6EE6               	movwf	postinc1,c
 48480  01A6AE  EC95  F017         	call	_set_ac_charger_relay	;wreg free
 48481  01A6B2                     l2214:
 48482                           
 48483                           ;mbmc.c: 216:  if (day_delay >= 240)
 48484  01A6B2  0EEF               	movlw	239
 48485  01A6B4  6451               	cpfsgt	check_day_time@day_delay^0,c
 48486  01A6B6  D001               	goto	l2210
 48487                           
 48488                           ;mbmc.c: 217:   day_delay = 0;
 48489  01A6B8  6A51               	clrf	check_day_time@day_delay^0,c
 48490  01A6BA                     l2210:
 48491                           
 48492                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 48493  01A6BA  52E5               	movf	postdec1,f,c
 48494  01A6BC  52E5               	movf	postdec1,f,c
 48495  01A6BE  52E5               	movf	postdec1,f,c
 48496  01A6C0  52E5               	movf	postdec1,f,c
 48497  01A6C2  0012               	return		;funcret
 48498  01A6C4                     __end_of_check_day_time:
 48499                           	opt callstack 0
 48500                           
 48501 ;; *************** function _set_ac_charger_relay *****************
 48502 ;; Defined at:
 48503 ;;		line 136 in file "mbmc.c"
 48504 ;; Parameters:    Size  Location     Type
 48505 ;;  mode            1  [STACK] const _Bool 
 48506 ;; Auto vars:     Size  Location     Type
 48507 ;;		None
 48508 ;; Return value:  Size  Location     Type
 48509 ;;                  1  [STACK] void 
 48510 ;; Registers used:
 48511 ;;		wreg, fsr1l, fsr1h
 48512 ;; Tracked objects:
 48513 ;;		On entry : 0/39
 48514 ;;		On exit  : 0/0
 48515 ;;		Unchanged: 0/0
 48516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48521 ;;Total ram usage:        0 bytes
 48522 ;; Hardware stack levels used:    1
 48523 ;; Hardware stack levels required when called:    3
 48524 ;; This function calls:
 48525 ;;		Nothing
 48526 ;; This function is called by:
 48527 ;;		_check_day_time
 48528 ;; This function uses a reentrant model
 48529 ;;
 48530                           
 48531                           	psect	text196
 48532  002F2A                     __ptext196:
 48533                           	opt callstack 0
 48534  002F2A                     _set_ac_charger_relay:
 48535                           	opt callstack 10
 48536                           
 48537                           ;mbmc.c: 136: void set_ac_charger_relay(const _Bool mode);mbmc.c: 137: {;mbmc.c: 138:  L
      +                          ATDbits.LATD6 = mode;
 48538                           ;stkvar	_mode @ sp[(0)+-1]
 48539                           
 48540                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48541                           ;incstack = 0
 48542  002F2A  0EFF               	movlw	-1
 48543  002F2C  B0E3               	btfsc	plusw1,0,c
 48544  002F2E  D002               	bra	u1183_25
 48545  002F30  9CBD               	bcf	189,6,c	;volatile
 48546  002F32  D001               	bra	u1183_26
 48547  002F34                     u1183_25:
 48548  002F34  8CBD               	bsf	189,6,c	;volatile
 48549  002F36                     u1183_26:
 48550                           
 48551                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 48552  002F36  52E5               	movf	postdec1,f,c
 48553  002F38  0012               	return		;funcret
 48554  002F3A                     __end_of_set_ac_charger_relay:
 48555                           	opt callstack 0
 48556                           
 48557 ;; *************** function _get_ac_charger_relay *****************
 48558 ;; Defined at:
 48559 ;;		line 141 in file "mbmc.c"
 48560 ;; Parameters:    Size  Location     Type
 48561 ;;		None
 48562 ;; Auto vars:     Size  Location     Type
 48563 ;;		None
 48564 ;; Return value:  Size  Location     Type
 48565 ;;                  1  [STACK] _Bool 
 48566 ;; Registers used:
 48567 ;;		btemp
 48568 ;; Tracked objects:
 48569 ;;		On entry : 0/39
 48570 ;;		On exit  : 0/0
 48571 ;;		Unchanged: 0/0
 48572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48577 ;;Total ram usage:        0 bytes
 48578 ;; Hardware stack levels used:    1
 48579 ;; Hardware stack levels required when called:    3
 48580 ;; This function calls:
 48581 ;;		Nothing
 48582 ;; This function is called by:
 48583 ;;		_check_day_time
 48584 ;;		_calc_bsoc
 48585 ;; This function uses a reentrant model
 48586 ;;
 48587                           
 48588                           	psect	text197
 48589  002F56                     __ptext197:
 48590                           	opt callstack 0
 48591  002F56                     _get_ac_charger_relay:
 48592                           	opt callstack 11
 48593                           
 48594                           ;mbmc.c: 143:  return LATDbits.LATD6;
 48595                           
 48596                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48597                           ;incstack = 0
 48598  002F56  ACBD               	btfss	189,6,c	;volatile
 48599  002F58  D003               	goto	u1246_20
 48600  002F5A  6A2A               	clrf	btemp^0,c
 48601  002F5C  2A2A               	incf	btemp^0,f,c
 48602  002F5E  0012               	return	
 48603  002F60                     u1246_20:
 48604  002F60  6A2A               	clrf	btemp^0,c
 48605                           
 48606                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 48607  002F62  0012               	return		;funcret
 48608  002F64                     __end_of_get_ac_charger_relay:
 48609                           	opt callstack 0
 48610                           
 48611 ;; *************** function _TMR3_ISR *****************
 48612 ;; Defined at:
 48613 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 48614 ;; Parameters:    Size  Location     Type
 48615 ;;		None
 48616 ;; Auto vars:     Size  Location     Type
 48617 ;;		None
 48618 ;; Return value:  Size  Location     Type
 48619 ;;                  1    wreg      void 
 48620 ;; Registers used:
 48621 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 48622 ;; Tracked objects:
 48623 ;;		On entry : 0/0
 48624 ;;		On exit  : 3F/0
 48625 ;;		Unchanged: 0/0
 48626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48629 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48630 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48631 ;;Total ram usage:       25 bytes
 48632 ;; Hardware stack levels used:    1
 48633 ;; Hardware stack levels required when called:   14
 48634 ;; This function calls:
 48635 ;;		_TMR3_CallBack
 48636 ;;		_TMR3_WriteTimer
 48637 ;; This function is called by:
 48638 ;;		Interrupt level 1
 48639 ;; This function uses a non-reentrant model
 48640 ;;
 48641                           
 48642                           	psect	text198
 48643  01EF34                     __ptext198:
 48644                           	opt callstack 0
 48645  01EF34                     _TMR3_ISR:
 48646                           	opt callstack 3
 48647                           
 48648                           ;incstack = 0
 48649  01EF34  006F FF60  F0E5    	movff	status,??_TMR3_ISR
 48650  01EF3A  006F FFD8  F0E6    	movff	tblptrl,??_TMR3_ISR+1
 48651  01EF40  006F FFDC  F0E7    	movff	tblptrh,??_TMR3_ISR+2
 48652  01EF46  006F FFE0  F0E8    	movff	tblptru,??_TMR3_ISR+3
 48653  01EF4C  006F FFD4  F0E9    	movff	tablat,??_TMR3_ISR+4
 48654  01EF52  0060  F0A8  F0EA   	movff	btemp,??_TMR3_ISR+5
 48655  01EF58  0060  F0AC  F0EB   	movff	btemp+1,??_TMR3_ISR+6
 48656  01EF5E  0060  F0B0  F0EC   	movff	btemp+2,??_TMR3_ISR+7
 48657  01EF64  0060  F0B4  F0ED   	movff	btemp+3,??_TMR3_ISR+8
 48658  01EF6A  0060  F0B8  F0EE   	movff	btemp+4,??_TMR3_ISR+9
 48659  01EF70  0060  F0BC  F0EF   	movff	btemp+5,??_TMR3_ISR+10
 48660  01EF76  0060  F0C0  F0F0   	movff	btemp+6,??_TMR3_ISR+11
 48661  01EF7C  0060  F0C4  F0F1   	movff	btemp+7,??_TMR3_ISR+12
 48662  01EF82  0060  F0C8  F0F2   	movff	btemp+8,??_TMR3_ISR+13
 48663  01EF88  0060  F0CC  F0F3   	movff	btemp+9,??_TMR3_ISR+14
 48664  01EF8E  0060  F0D0  F0F4   	movff	btemp+10,??_TMR3_ISR+15
 48665  01EF94  0060  F0D4  F0F5   	movff	btemp+11,??_TMR3_ISR+16
 48666  01EF9A  0060  F0E8  F0F6   	movff	btemp+16,??_TMR3_ISR+17
 48667  01EFA0  0060  F0EC  F0F7   	movff	btemp+17,??_TMR3_ISR+18
 48668  01EFA6  0060  F0F0  F0F8   	movff	btemp+18,??_TMR3_ISR+19
 48669  01EFAC  0060  F0F4  F0F9   	movff	btemp+19,??_TMR3_ISR+20
 48670  01EFB2  0060  F0F8  F0FA   	movff	btemp+20,??_TMR3_ISR+21
 48671  01EFB8  0060  F0FC  F0FB   	movff	btemp+21,??_TMR3_ISR+22
 48672  01EFBE  0060  F100  F0FC   	movff	btemp+22,??_TMR3_ISR+23
 48673  01EFC4  0060  F104  F0FD   	movff	btemp+23,??_TMR3_ISR+24
 48674  01EFCA  EE16  F196         	lfsr	1,___intlo_sp
 48675                           
 48676                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 48677  01EFCE  0139               	movlb	57	; () banked
 48678  01EFD0  9DA6               	bcf	166,6,b	;volatile
 48679                           
 48680                           ; BSR set to: 57
 48681                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 48682  01EFD2  0060  F303  FFE6   	movff	_timer3ReloadVal,postinc1
 48683  01EFD8  0060  F307  FFE6   	movff	_timer3ReloadVal+1,postinc1
 48684  01EFDE  EC89  F012         	call	_TMR3_WriteTimer	;wreg free
 48685                           
 48686                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 48687  01EFE2  0100               	movlb	0	; () banked
 48688  01EFE4  4BBE               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 48689  01EFE6  2BBF               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 48690  01EFE8  51BF               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 48691  01EFEA  E104               	bnz	i1u1724_20
 48692  01EFEC  0E28               	movlw	40
 48693  01EFEE  5DBE               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 48694  01EFF0  A0D8               	btfss	status,0,c
 48695  01EFF2  D005               	goto	i1l1209
 48696  01EFF4                     i1u1724_20:
 48697                           
 48698                           ; BSR set to: 0
 48699                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 48700  01EFF4  EC24  F016         	call	_TMR3_CallBack	;wreg free
 48701                           
 48702                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 48703  01EFF8  0100               	movlb	0	; () banked
 48704  01EFFA  6BBE               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 48705  01EFFC  6BBF               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 48706  01EFFE                     i1l1209:
 48707                           
 48708                           ; BSR set to: 0
 48709  01EFFE  0060  F3F4  F041   	movff	??_TMR3_ISR+24,btemp+23
 48710  01F004  0060  F3F0  F040   	movff	??_TMR3_ISR+23,btemp+22
 48711  01F00A  0060  F3EC  F03F   	movff	??_TMR3_ISR+22,btemp+21
 48712  01F010  0060  F3E8  F03E   	movff	??_TMR3_ISR+21,btemp+20
 48713  01F016  0060  F3E4  F03D   	movff	??_TMR3_ISR+20,btemp+19
 48714  01F01C  0060  F3E0  F03C   	movff	??_TMR3_ISR+19,btemp+18
 48715  01F022  0060  F3DC  F03B   	movff	??_TMR3_ISR+18,btemp+17
 48716  01F028  0060  F3D8  F03A   	movff	??_TMR3_ISR+17,btemp+16
 48717  01F02E  0060  F3D4  F035   	movff	??_TMR3_ISR+16,btemp+11
 48718  01F034  0060  F3D0  F034   	movff	??_TMR3_ISR+15,btemp+10
 48719  01F03A  0060  F3CC  F033   	movff	??_TMR3_ISR+14,btemp+9
 48720  01F040  0060  F3C8  F032   	movff	??_TMR3_ISR+13,btemp+8
 48721  01F046  0060  F3C4  F031   	movff	??_TMR3_ISR+12,btemp+7
 48722  01F04C  0060  F3C0  F030   	movff	??_TMR3_ISR+11,btemp+6
 48723  01F052  0060  F3BC  F02F   	movff	??_TMR3_ISR+10,btemp+5
 48724  01F058  0060  F3B8  F02E   	movff	??_TMR3_ISR+9,btemp+4
 48725  01F05E  0060  F3B4  F02D   	movff	??_TMR3_ISR+8,btemp+3
 48726  01F064  0060  F3B0  F02C   	movff	??_TMR3_ISR+7,btemp+2
 48727  01F06A  0060  F3AC  F02B   	movff	??_TMR3_ISR+6,btemp+1
 48728  01F070  0060  F3A8  F02A   	movff	??_TMR3_ISR+5,btemp
 48729  01F076  0060  F3A7  FFF5   	movff	??_TMR3_ISR+4,tablat
 48730  01F07C  0060  F3A3  FFF8   	movff	??_TMR3_ISR+3,tblptru
 48731  01F082  0060  F39F  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 48732  01F088  0060  F39B  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 48733  01F08E  0060  F397  FFD8   	movff	??_TMR3_ISR,status
 48734  01F094  0011               	retfie		f
 48735  01F096                     __end_of_TMR3_ISR:
 48736                           	opt callstack 0
 48737                           
 48738 ;; *************** function _TMR3_WriteTimer *****************
 48739 ;; Defined at:
 48740 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 48741 ;; Parameters:    Size  Location     Type
 48742 ;;  timerVal        2  [STACK] unsigned short 
 48743 ;; Auto vars:     Size  Location     Type
 48744 ;;		None
 48745 ;; Return value:  Size  Location     Type
 48746 ;;                  1  [STACK] void 
 48747 ;; Registers used:
 48748 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 48749 ;; Tracked objects:
 48750 ;;		On entry : 3F/39
 48751 ;;		On exit  : 0/0
 48752 ;;		Unchanged: 0/0
 48753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48758 ;;Total ram usage:        0 bytes
 48759 ;; Hardware stack levels used:    1
 48760 ;; Hardware stack levels required when called:    3
 48761 ;; This function calls:
 48762 ;;		Nothing
 48763 ;; This function is called by:
 48764 ;;		_TMR3_ISR
 48765 ;; This function uses a reentrant model
 48766 ;;
 48767                           
 48768                           	psect	text199
 48769  002512                     __ptext199:
 48770                           	opt callstack 0
 48771  002512                     _TMR3_WriteTimer:
 48772                           	opt callstack 13
 48773                           
 48774                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 48775                           
 48776                           ; BSR set to: 0
 48777                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48778                           ;incstack = 0
 48779  002512  A4A6               	btfss	166,2,c	;volatile
 48780  002514  D00F               	goto	l14101
 48781                           
 48782                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 48783  002516  90A6               	bcf	166,0,c	;volatile
 48784                           
 48785                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 48786                           ;stkvar	_timerVal @ sp[(0)+-2]
 48787  002518  0EFF               	movlw	255
 48788  00251A  24E1               	addwf	fsr1l,w,c
 48789  00251C  6ED9               	movwf	fsr2l,c
 48790  00251E  0EFF               	movlw	255
 48791  002520  20E2               	addwfc	fsr1h,w,c
 48792  002522  6EDA               	movwf	fsr2h,c
 48793  002524  50DF               	movf	indf2,w,c
 48794  002526  6EA5               	movwf	165,c	;volatile
 48795                           
 48796                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 48797                           ;stkvar	_timerVal @ sp[(0)+-2]
 48798  002528  0EFE               	movlw	-2
 48799  00252A  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 48800                           
 48801                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 48802  002530  80A6               	bsf	166,0,c	;volatile
 48803                           
 48804                           ;mcc_generated_files/tmr3.c: 141:     }
 48805  002532  D00C               	goto	l1192
 48806  002534                     l14101:
 48807                           
 48808                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 48809                           ;stkvar	_timerVal @ sp[(0)+-2]
 48810  002534  0EFF               	movlw	255
 48811  002536  24E1               	addwf	fsr1l,w,c
 48812  002538  6ED9               	movwf	fsr2l,c
 48813  00253A  0EFF               	movlw	255
 48814  00253C  20E2               	addwfc	fsr1h,w,c
 48815  00253E  6EDA               	movwf	fsr2h,c
 48816  002540  50DF               	movf	indf2,w,c
 48817  002542  6EA5               	movwf	165,c	;volatile
 48818                           
 48819                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 48820                           ;stkvar	_timerVal @ sp[(0)+-2]
 48821  002544  0EFE               	movlw	-2
 48822  002546  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 48823  00254C                     l1192:
 48824                           
 48825                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 48826  00254C  52E5               	movf	postdec1,f,c
 48827  00254E  52E5               	movf	postdec1,f,c
 48828  002550  0012               	return		;funcret
 48829  002552                     __end_of_TMR3_WriteTimer:
 48830                           	opt callstack 0
 48831                           
 48832 ;; *************** function _TMR3_CallBack *****************
 48833 ;; Defined at:
 48834 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 48835 ;; Parameters:    Size  Location     Type
 48836 ;;		None
 48837 ;; Auto vars:     Size  Location     Type
 48838 ;;		None
 48839 ;; Return value:  Size  Location     Type
 48840 ;;                  1  [STACK] void 
 48841 ;; Registers used:
 48842 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 48843 ;; Tracked objects:
 48844 ;;		On entry : 3F/0
 48845 ;;		On exit  : 0/0
 48846 ;;		Unchanged: 0/0
 48847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48852 ;;Total ram usage:        0 bytes
 48853 ;; Hardware stack levels used:    1
 48854 ;; Hardware stack levels required when called:   13
 48855 ;; This function calls:
 48856 ;;		Absolute function
 48857 ;;		_TMR3_DefaultInterruptHandler
 48858 ;;		_calc_bsoc
 48859 ;; This function is called by:
 48860 ;;		_TMR3_ISR
 48861 ;; This function uses a reentrant model
 48862 ;;
 48863                           
 48864                           	psect	text200
 48865  002C48                     __ptext200:
 48866                           	opt callstack 0
 48867  002C48                     _TMR3_CallBack:
 48868                           	opt callstack 3
 48869                           
 48870                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 48871                           
 48872                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48873                           ;incstack = 0
 48874  002C48  0100               	movlb	0	; () banked
 48875  002C4A  5198               	movf	_TMR3_InterruptHandler& (0+255),w,b
 48876  002C4C  1199               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 48877  002C4E  119A               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 48878  002C50  B4D8               	btfsc	status,2,c
 48879  002C52  0012               	return	
 48880                           
 48881                           ; BSR set to: 0
 48882                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 48883  002C54  D801               	call	u1696_28
 48884  002C56  0012               	return	
 48885  002C58                     u1696_28:
 48886  002C58  0005               	push	
 48887  002C5A  6EFA               	movwf	pclath,c
 48888  002C5C  5198               	movf	_TMR3_InterruptHandler& (0+255),w,b
 48889  002C5E  6EFD               	movwf	tosl,c
 48890  002C60  5199               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 48891  002C62  6EFE               	movwf	tosh,c
 48892  002C64  519A               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 48893  002C66  6EFF               	movwf	tosu,c
 48894  002C68  50FA               	movf	pclath,w,c
 48895  002C6A  0012               	return		;indir
 48896  002C6C                     __end_of_TMR3_CallBack:
 48897                           	opt callstack 0
 48898                           
 48899 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 48900 ;; Defined at:
 48901 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 48902 ;; Parameters:    Size  Location     Type
 48903 ;;		None
 48904 ;; Auto vars:     Size  Location     Type
 48905 ;;		None
 48906 ;; Return value:  Size  Location     Type
 48907 ;;                  1  [STACK] void 
 48908 ;; Registers used:
 48909 ;;		None
 48910 ;; Tracked objects:
 48911 ;;		On entry : 3F/0
 48912 ;;		On exit  : 0/0
 48913 ;;		Unchanged: 0/0
 48914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48919 ;;Total ram usage:        0 bytes
 48920 ;; Hardware stack levels used:    1
 48921 ;; Hardware stack levels required when called:    3
 48922 ;; This function calls:
 48923 ;;		Nothing
 48924 ;; This function is called by:
 48925 ;;		_TMR3_Initialize
 48926 ;;		_TMR3_CallBack
 48927 ;; This function uses a reentrant model
 48928 ;;
 48929                           
 48930                           	psect	text201
 48931  003010                     __ptext201:
 48932                           	opt callstack 0
 48933  003010                     _TMR3_DefaultInterruptHandler:
 48934                           	opt callstack 12
 48935                           
 48936                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 48937                           
 48938                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48939                           ;incstack = 0
 48940  003010  0012               	return		;funcret
 48941  003012                     __end_of_TMR3_DefaultInterruptHandler:
 48942                           	opt callstack 0
 48943                           
 48944 ;; *************** function _calc_bsoc *****************
 48945 ;; Defined at:
 48946 ;;		line 39 in file "bsoc.c"
 48947 ;; Parameters:    Size  Location     Type
 48948 ;;		None
 48949 ;; Auto vars:     Size  Location     Type
 48950 ;;  adj             4  [STACK] float 
 48951 ;;  log_ptr         2  [STACK] PTR unsigned char 
 48952 ;;		 -> port_data(512), 
 48953 ;; Return value:  Size  Location     Type
 48954 ;;                  1  [STACK] void 
 48955 ;; Registers used:
 48956 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 48957 ;; Tracked objects:
 48958 ;;		On entry : 3F/0
 48959 ;;		On exit  : 6/2
 48960 ;;		Unchanged: 0/0
 48961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48966 ;;Total ram usage:        0 bytes
 48967 ;; Hardware stack levels used:    1
 48968 ;; Hardware stack levels required when called:   12
 48969 ;; This function calls:
 48970 ;;		_StartTimer
 48971 ;;		___asfladd
 48972 ;;		___fldiv
 48973 ;;		___flge
 48974 ;;		___flmul
 48975 ;;		___flneg
 48976 ;;		___fltol
 48977 ;;		_fabsf
 48978 ;;		_get_ac_charger_relay
 48979 ;;		_port_data_dma_ptr
 48980 ;;		_send_port_data_dma
 48981 ;;		_sprintf
 48982 ;;		_strlen
 48983 ;; This function is called by:
 48984 ;;		_init_bsoc
 48985 ;;		_TMR3_CallBack
 48986 ;; This function uses a reentrant model
 48987 ;;
 48988                           
 48989                           	psect	text202
 48990  01544C                     __ptext202:
 48991                           	opt callstack 0
 48992  01544C                     _calc_bsoc:
 48993                           	opt callstack 0
 48994                           
 48995                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48996  01544C  0E06               	movlw	6
 48997  01544E  26E1               	addwf	fsr1l,f,c
 48998  015450  0E00               	movlw	0
 48999  015452  22E2               	addwfc	fsr1h,f,c
 49000                           
 49001                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 49002                           
 49003                           ;incstack = 0
 49004  015454  0E00               	movlw	0
 49005  015456  6E32               	movwf	(btemp+8)^0,c
 49006  015458  0E00               	movlw	0
 49007  01545A  6E33               	movwf	(btemp+9)^0,c
 49008  01545C  0E80               	movlw	128
 49009  01545E  6E34               	movwf	(btemp+10)^0,c
 49010  015460  0E3F               	movlw	63
 49011  015462  6E35               	movwf	(btemp+11)^0,c
 49012                           
 49013                           ;stkvar	_adj @ sp[(-6)+0]
 49014  015464  0EFA               	movlw	-6
 49015  015466  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 49016  01546C  0EFB               	movlw	-5
 49017  01546E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 49018  015474  0EFC               	movlw	-4
 49019  015476  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 49020  01547C  0EFD               	movlw	-3
 49021  01547E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 49022  015484  82BE               	bsf	190,1,c	;volatile
 49023                           
 49024                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 49025  015486  0E00               	movlw	0
 49026  015488  6EE6               	movwf	postinc1,c
 49027  01548A  0E00               	movlw	0
 49028  01548C  6EE6               	movwf	postinc1,c
 49029  01548E  0E61               	movlw	97
 49030  015490  6EE6               	movwf	postinc1,c
 49031  015492  0E45               	movlw	69
 49032  015494  6EE6               	movwf	postinc1,c
 49033  015496  EE22  F143         	lfsr	2,_C+68	;volatile
 49034  01549A  006F FF7B FFE6     	movff	postinc2,postinc1
 49035  0154A0  006F FF7B FFE6     	movff	postinc2,postinc1
 49036  0154A6  006F FF7B FFE6     	movff	postinc2,postinc1
 49037  0154AC  006F FF7B FFE6     	movff	postinc2,postinc1
 49038  0154B2  ECB8  F0C3         	call	___fldiv	;wreg free
 49039  0154B6  0060  F0AB  FFE6   	movff	btemp,postinc1
 49040  0154BC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49041  0154C2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49042  0154C8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49043  0154CE  0E8F               	movlw	low (_C+144)
 49044  0154D0  6EE6               	movwf	postinc1,c
 49045  0154D2  0E09               	movlw	high (_C+144)
 49046  0154D4  6EE6               	movwf	postinc1,c
 49047  0154D6  EC80  F00C         	call	___asfladd	;wreg free
 49048                           
 49049                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 49050  0154DA  EE22  F18F         	lfsr	2,_C+144	;volatile
 49051  0154DE  006F FF7B FFE6     	movff	postinc2,postinc1
 49052  0154E4  006F FF7B FFE6     	movff	postinc2,postinc1
 49053  0154EA  006F FF7B FFE6     	movff	postinc2,postinc1
 49054  0154F0  006F FF7B FFE6     	movff	postinc2,postinc1
 49055  0154F6  EE22  F18B         	lfsr	2,_C+140	;volatile
 49056  0154FA  006F FF7B FFE6     	movff	postinc2,postinc1
 49057  015500  006F FF7B FFE6     	movff	postinc2,postinc1
 49058  015506  006F FF7B FFE6     	movff	postinc2,postinc1
 49059  01550C  006F FF7B FFE6     	movff	postinc2,postinc1
 49060  015512  ECE9  F0F6         	call	___flge	;wreg free
 49061  015516  B02A               	btfsc	btemp& (0+255),0,c
 49062  015518  D00E               	goto	l17233
 49063                           
 49064                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 49065  01551A  EE22  F18B         	lfsr	2,_C+140	;volatile
 49066  01551E  006F FF78  F98F    	movff	postinc2,_C+144	;volatile
 49067  015524  006F FF78  F990    	movff	postinc2,_C+145	;volatile
 49068  01552A  006F FF78  F991    	movff	postinc2,_C+146	;volatile
 49069  015530  006F FF74  F992    	movff	postdec2,_C+147	;volatile
 49070  015536                     l17233:
 49071                           
 49072                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 49073  015536  0ECD               	movlw	205
 49074  015538  6EE6               	movwf	postinc1,c
 49075  01553A  0ECC               	movlw	204
 49076  01553C  6EE6               	movwf	postinc1,c
 49077  01553E  0ECC               	movlw	204
 49078  015540  6EE6               	movwf	postinc1,c
 49079  015542  0E3D               	movlw	61
 49080  015544  6EE6               	movwf	postinc1,c
 49081  015546  EE22  F18F         	lfsr	2,_C+144	;volatile
 49082  01554A  006F FF7B FFE6     	movff	postinc2,postinc1
 49083  015550  006F FF7B FFE6     	movff	postinc2,postinc1
 49084  015556  006F FF7B FFE6     	movff	postinc2,postinc1
 49085  01555C  006F FF7B FFE6     	movff	postinc2,postinc1
 49086  015562  ECE9  F0F6         	call	___flge	;wreg free
 49087  015566  B02A               	btfsc	btemp& (0+255),0,c
 49088  015568  D010               	goto	l17237
 49089                           
 49090                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 49091  01556A  0ECD               	movlw	205
 49092  01556C  006F FFA0  F98F    	movff	wreg,_C+144	;volatile
 49093  015572  0ECC               	movlw	204
 49094  015574  006F FFA0  F990    	movff	wreg,_C+145	;volatile
 49095  01557A  0ECC               	movlw	204
 49096  01557C  006F FFA0  F991    	movff	wreg,_C+146	;volatile
 49097  015582  0E3D               	movlw	61
 49098  015584  006F FFA0  F992    	movff	wreg,_C+147	;volatile
 49099  01558A                     l17237:
 49100                           
 49101                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 49102  01558A  EE22  F143         	lfsr	2,_C+68	;volatile
 49103  01558E  006F FF7B FFE6     	movff	postinc2,postinc1
 49104  015594  006F FF7B FFE6     	movff	postinc2,postinc1
 49105  01559A  006F FF7B FFE6     	movff	postinc2,postinc1
 49106  0155A0  006F FF7B FFE6     	movff	postinc2,postinc1
 49107  0155A6  0E0A               	movlw	10
 49108  0155A8  6EE6               	movwf	postinc1,c
 49109  0155AA  0ED7               	movlw	215
 49110  0155AC  6EE6               	movwf	postinc1,c
 49111  0155AE  0E23               	movlw	35
 49112  0155B0  6EE6               	movwf	postinc1,c
 49113  0155B2  0E3C               	movlw	60
 49114  0155B4  6EE6               	movwf	postinc1,c
 49115  0155B6  ECE9  F0F6         	call	___flge	;wreg free
 49116  0155BA  B02A               	btfsc	btemp& (0+255),0,c
 49117  0155BC  D01C               	goto	l17241
 49118                           
 49119                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 49120  0155BE  0062  F714  F032   	movff	_C+198,btemp+8	;volatile
 49121  0155C4  0062  F718  F033   	movff	_C+199,btemp+9	;volatile
 49122  0155CA  0062  F71C  F034   	movff	_C+200,btemp+10	;volatile
 49123  0155D0  0062  F720  F035   	movff	_C+201,btemp+11	;volatile
 49124                           
 49125                           ;stkvar	_adj @ sp[(-6)+0]
 49126  0155D6  0EFA               	movlw	-6
 49127  0155D8  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 49128  0155DE  0EFB               	movlw	-5
 49129  0155E0  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 49130  0155E6  0EFC               	movlw	-4
 49131  0155E8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 49132  0155EE  0EFD               	movlw	-3
 49133  0155F0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 49134  0155F6                     l17241:
 49135                           
 49136                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 49137  0155F6  0E0A               	movlw	10
 49138  0155F8  6EE6               	movwf	postinc1,c
 49139  0155FA  0ED7               	movlw	215
 49140  0155FC  6EE6               	movwf	postinc1,c
 49141  0155FE  0E23               	movlw	35
 49142  015600  6EE6               	movwf	postinc1,c
 49143  015602  0E3C               	movlw	60
 49144  015604  6EE6               	movwf	postinc1,c
 49145  015606  EE22  F143         	lfsr	2,_C+68	;volatile
 49146  01560A  006F FF7B FFE6     	movff	postinc2,postinc1
 49147  015610  006F FF7B FFE6     	movff	postinc2,postinc1
 49148  015616  006F FF7B FFE6     	movff	postinc2,postinc1
 49149  01561C  006F FF7B FFE6     	movff	postinc2,postinc1
 49150  015622  ECE9  F0F6         	call	___flge	;wreg free
 49151  015626  B02A               	btfsc	btemp& (0+255),0,c
 49152  015628  D01C               	goto	l17245
 49153                           
 49154                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 49155  01562A  0062  F704  F032   	movff	_C+194,btemp+8	;volatile
 49156  015630  0062  F708  F033   	movff	_C+195,btemp+9	;volatile
 49157  015636  0062  F70C  F034   	movff	_C+196,btemp+10	;volatile
 49158  01563C  0062  F710  F035   	movff	_C+197,btemp+11	;volatile
 49159                           
 49160                           ;stkvar	_adj @ sp[(-6)+0]
 49161  015642  0EFA               	movlw	-6
 49162  015644  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 49163  01564A  0EFB               	movlw	-5
 49164  01564C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 49165  015652  0EFC               	movlw	-4
 49166  015654  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 49167  01565A  0EFD               	movlw	-3
 49168  01565C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 49169  015662                     l17245:
 49170                           
 49171                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 49172  015662  0E00               	movlw	0
 49173  015664  6EE6               	movwf	postinc1,c
 49174  015666  0E00               	movlw	0
 49175  015668  6EE6               	movwf	postinc1,c
 49176  01566A  0E61               	movlw	97
 49177  01566C  6EE6               	movwf	postinc1,c
 49178  01566E  0E45               	movlw	69
 49179  015670  6EE6               	movwf	postinc1,c
 49180                           
 49181                           ;stkvar	_adj @ sp[(-10)+0]
 49182  015672  0EF6               	movlw	-10
 49183  015674  006F FF8F FFE6     	movff	plusw1,postinc1
 49184  01567A  006F FF8F FFE6     	movff	plusw1,postinc1
 49185  015680  006F FF8F FFE6     	movff	plusw1,postinc1
 49186  015686  006F FF8F FFE6     	movff	plusw1,postinc1
 49187  01568C  EE22  F143         	lfsr	2,_C+68	;volatile
 49188  015690  006F FF7B FFE6     	movff	postinc2,postinc1
 49189  015696  006F FF7B FFE6     	movff	postinc2,postinc1
 49190  01569C  006F FF7B FFE6     	movff	postinc2,postinc1
 49191  0156A2  006F FF7B FFE6     	movff	postinc2,postinc1
 49192  0156A8  EC67  F0B8         	call	___flmul	;wreg free
 49193  0156AC  0060  F0AB  FFE6   	movff	btemp,postinc1
 49194  0156B2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49195  0156B8  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49196  0156BE  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49197  0156C4  ECB8  F0C3         	call	___fldiv	;wreg free
 49198  0156C8  0060  F0AB  FFE6   	movff	btemp,postinc1
 49199  0156CE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49200  0156D4  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49201  0156DA  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49202  0156E0  0E8F               	movlw	low (_C+144)
 49203  0156E2  6EE6               	movwf	postinc1,c
 49204  0156E4  0E09               	movlw	high (_C+144)
 49205  0156E6  6EE6               	movwf	postinc1,c
 49206  0156E8  EC80  F00C         	call	___asfladd	;wreg free
 49207                           
 49208                           ;bsoc.c: 59:  C.dynamic_ah_adj = C.dynamic_ah;
 49209  0156EC  EE22  F18F         	lfsr	2,_C+144	;volatile
 49210  0156F0  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
 49211  0156F6  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
 49212  0156FC  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
 49213  015702  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
 49214                           
 49215                           ;bsoc.c: 60:  if (C.dynamic_ah_adj > (C.bank_ah))
 49216  015708  EE22  F19B         	lfsr	2,_C+156	;volatile
 49217  01570C  006F FF7B FFE6     	movff	postinc2,postinc1
 49218  015712  006F FF7B FFE6     	movff	postinc2,postinc1
 49219  015718  006F FF7B FFE6     	movff	postinc2,postinc1
 49220  01571E  006F FF7B FFE6     	movff	postinc2,postinc1
 49221  015724  EE22  F18B         	lfsr	2,_C+140	;volatile
 49222  015728  006F FF7B FFE6     	movff	postinc2,postinc1
 49223  01572E  006F FF7B FFE6     	movff	postinc2,postinc1
 49224  015734  006F FF7B FFE6     	movff	postinc2,postinc1
 49225  01573A  006F FF7B FFE6     	movff	postinc2,postinc1
 49226  015740  ECE9  F0F6         	call	___flge	;wreg free
 49227  015744  B02A               	btfsc	btemp& (0+255),0,c
 49228  015746  D00E               	goto	l17253
 49229                           
 49230                           ;bsoc.c: 61:   C.dynamic_ah_adj = C.bank_ah;
 49231  015748  EE22  F18B         	lfsr	2,_C+140	;volatile
 49232  01574C  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
 49233  015752  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
 49234  015758  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
 49235  01575E  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
 49236  015764                     l17253:
 49237                           
 49238                           ;bsoc.c: 62:  if (C.dynamic_ah_adj < 0.1)
 49239  015764  0ECD               	movlw	205
 49240  015766  6EE6               	movwf	postinc1,c
 49241  015768  0ECC               	movlw	204
 49242  01576A  6EE6               	movwf	postinc1,c
 49243  01576C  0ECC               	movlw	204
 49244  01576E  6EE6               	movwf	postinc1,c
 49245  015770  0E3D               	movlw	61
 49246  015772  6EE6               	movwf	postinc1,c
 49247  015774  EE22  F19B         	lfsr	2,_C+156	;volatile
 49248  015778  006F FF7B FFE6     	movff	postinc2,postinc1
 49249  01577E  006F FF7B FFE6     	movff	postinc2,postinc1
 49250  015784  006F FF7B FFE6     	movff	postinc2,postinc1
 49251  01578A  006F FF7B FFE6     	movff	postinc2,postinc1
 49252  015790  ECE9  F0F6         	call	___flge	;wreg free
 49253  015794  B02A               	btfsc	btemp& (0+255),0,c
 49254  015796  D010               	goto	l17257
 49255                           
 49256                           ;bsoc.c: 63:   C.dynamic_ah_adj = 0.1;
 49257  015798  0ECD               	movlw	205
 49258  01579A  006F FFA0  F99B    	movff	wreg,_C+156	;volatile
 49259  0157A0  0ECC               	movlw	204
 49260  0157A2  006F FFA0  F99C    	movff	wreg,_C+157	;volatile
 49261  0157A8  0ECC               	movlw	204
 49262  0157AA  006F FFA0  F99D    	movff	wreg,_C+158	;volatile
 49263  0157B0  0E3D               	movlw	61
 49264  0157B2  006F FFA0  F99E    	movff	wreg,_C+159	;volatile
 49265  0157B8                     l17257:
 49266                           
 49267                           ;bsoc.c: 66:  C.pv_ah += (C.c_pv / 3600.0);
 49268  0157B8  0E00               	movlw	0
 49269  0157BA  6EE6               	movwf	postinc1,c
 49270  0157BC  0E00               	movlw	0
 49271  0157BE  6EE6               	movwf	postinc1,c
 49272  0157C0  0E61               	movlw	97
 49273  0157C2  6EE6               	movwf	postinc1,c
 49274  0157C4  0E45               	movlw	69
 49275  0157C6  6EE6               	movwf	postinc1,c
 49276  0157C8  EE22  F147         	lfsr	2,_C+72	;volatile
 49277  0157CC  006F FF7B FFE6     	movff	postinc2,postinc1
 49278  0157D2  006F FF7B FFE6     	movff	postinc2,postinc1
 49279  0157D8  006F FF7B FFE6     	movff	postinc2,postinc1
 49280  0157DE  006F FF7B FFE6     	movff	postinc2,postinc1
 49281  0157E4  ECB8  F0C3         	call	___fldiv	;wreg free
 49282  0157E8  0060  F0AB  FFE6   	movff	btemp,postinc1
 49283  0157EE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49284  0157F4  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49285  0157FA  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49286  015800  0E93               	movlw	low (_C+148)
 49287  015802  6EE6               	movwf	postinc1,c
 49288  015804  0E09               	movlw	high (_C+148)
 49289  015806  6EE6               	movwf	postinc1,c
 49290  015808  EC80  F00C         	call	___asfladd	;wreg free
 49291                           
 49292                           ;bsoc.c: 67:  C.pvkw += (C.p_pv / 3600.0);
 49293  01580C  0E00               	movlw	0
 49294  01580E  6EE6               	movwf	postinc1,c
 49295  015810  0E00               	movlw	0
 49296  015812  6EE6               	movwf	postinc1,c
 49297  015814  0E61               	movlw	97
 49298  015816  6EE6               	movwf	postinc1,c
 49299  015818  0E45               	movlw	69
 49300  01581A  6EE6               	movwf	postinc1,c
 49301  01581C  EE22  F17B         	lfsr	2,_C+124	;volatile
 49302  015820  006F FF7B FFE6     	movff	postinc2,postinc1
 49303  015826  006F FF7B FFE6     	movff	postinc2,postinc1
 49304  01582C  006F FF7B FFE6     	movff	postinc2,postinc1
 49305  015832  006F FF7B FFE6     	movff	postinc2,postinc1
 49306  015838  ECB8  F0C3         	call	___fldiv	;wreg free
 49307  01583C  0060  F0AB  FFE6   	movff	btemp,postinc1
 49308  015842  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49309  015848  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49310  01584E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49311  015854  0EA7               	movlw	low (_C+168)
 49312  015856  6EE6               	movwf	postinc1,c
 49313  015858  0E09               	movlw	high (_C+168)
 49314  01585A  6EE6               	movwf	postinc1,c
 49315  01585C  EC80  F00C         	call	___asfladd	;wreg free
 49316                           
 49317                           ;bsoc.c: 68:  C.invkw += (C.p_inverter / 3600.0);
 49318  015860  0E00               	movlw	0
 49319  015862  6EE6               	movwf	postinc1,c
 49320  015864  0E00               	movlw	0
 49321  015866  6EE6               	movwf	postinc1,c
 49322  015868  0E61               	movlw	97
 49323  01586A  6EE6               	movwf	postinc1,c
 49324  01586C  0E45               	movlw	69
 49325  01586E  6EE6               	movwf	postinc1,c
 49326  015870  EE22  F177         	lfsr	2,_C+120	;volatile
 49327  015874  006F FF7B FFE6     	movff	postinc2,postinc1
 49328  01587A  006F FF7B FFE6     	movff	postinc2,postinc1
 49329  015880  006F FF7B FFE6     	movff	postinc2,postinc1
 49330  015886  006F FF7B FFE6     	movff	postinc2,postinc1
 49331  01588C  ECB8  F0C3         	call	___fldiv	;wreg free
 49332  015890  0060  F0AB  FFE6   	movff	btemp,postinc1
 49333  015896  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49334  01589C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49335  0158A2  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49336  0158A8  0EAB               	movlw	low (_C+172)
 49337  0158AA  6EE6               	movwf	postinc1,c
 49338  0158AC  0E09               	movlw	high (_C+172)
 49339  0158AE  6EE6               	movwf	postinc1,c
 49340  0158B0  EC80  F00C         	call	___asfladd	;wreg free
 49341                           
 49342                           ;bsoc.c: 69:  C.loadkw += (C.p_load / 3600.0);
 49343  0158B4  0E00               	movlw	0
 49344  0158B6  6EE6               	movwf	postinc1,c
 49345  0158B8  0E00               	movlw	0
 49346  0158BA  6EE6               	movwf	postinc1,c
 49347  0158BC  0E61               	movlw	97
 49348  0158BE  6EE6               	movwf	postinc1,c
 49349  0158C0  0E45               	movlw	69
 49350  0158C2  6EE6               	movwf	postinc1,c
 49351  0158C4  EE22  F173         	lfsr	2,_C+116	;volatile
 49352  0158C8  006F FF7B FFE6     	movff	postinc2,postinc1
 49353  0158CE  006F FF7B FFE6     	movff	postinc2,postinc1
 49354  0158D4  006F FF7B FFE6     	movff	postinc2,postinc1
 49355  0158DA  006F FF7B FFE6     	movff	postinc2,postinc1
 49356  0158E0  ECB8  F0C3         	call	___fldiv	;wreg free
 49357  0158E4  0060  F0AB  FFE6   	movff	btemp,postinc1
 49358  0158EA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49359  0158F0  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49360  0158F6  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49361  0158FC  0EAF               	movlw	low (_C+176)
 49362  0158FE  6EE6               	movwf	postinc1,c
 49363  015900  0E09               	movlw	high (_C+176)
 49364  015902  6EE6               	movwf	postinc1,c
 49365  015904  EC80  F00C         	call	___asfladd	;wreg free
 49366                           
 49367                           ;bsoc.c: 70:  if (C.p_bat > 0.0)
 49368  015908  EE22  F17F         	lfsr	2,_C+128	;volatile
 49369  01590C  006F FF7B FFE6     	movff	postinc2,postinc1
 49370  015912  006F FF7B FFE6     	movff	postinc2,postinc1
 49371  015918  006F FF7B FFE6     	movff	postinc2,postinc1
 49372  01591E  006F FF7B FFE6     	movff	postinc2,postinc1
 49373  015924  0E00               	movlw	0
 49374  015926  6EE6               	movwf	postinc1,c
 49375  015928  0E00               	movlw	0
 49376  01592A  6EE6               	movwf	postinc1,c
 49377  01592C  0E00               	movlw	0
 49378  01592E  6EE6               	movwf	postinc1,c
 49379  015930  0E00               	movlw	0
 49380  015932  6EE6               	movwf	postinc1,c
 49381  015934  ECE9  F0F6         	call	___flge	;wreg free
 49382  015938  B02A               	btfsc	btemp& (0+255),0,c
 49383  01593A  D02A               	goto	l17263
 49384                           
 49385                           ;bsoc.c: 71:   C.bkwi += (C.p_bat / 3600.0);
 49386  01593C  0E00               	movlw	0
 49387  01593E  6EE6               	movwf	postinc1,c
 49388  015940  0E00               	movlw	0
 49389  015942  6EE6               	movwf	postinc1,c
 49390  015944  0E61               	movlw	97
 49391  015946  6EE6               	movwf	postinc1,c
 49392  015948  0E45               	movlw	69
 49393  01594A  6EE6               	movwf	postinc1,c
 49394  01594C  EE22  F17F         	lfsr	2,_C+128	;volatile
 49395  015950  006F FF7B FFE6     	movff	postinc2,postinc1
 49396  015956  006F FF7B FFE6     	movff	postinc2,postinc1
 49397  01595C  006F FF7B FFE6     	movff	postinc2,postinc1
 49398  015962  006F FF7B FFE6     	movff	postinc2,postinc1
 49399  015968  ECB8  F0C3         	call	___fldiv	;wreg free
 49400  01596C  0060  F0AB  FFE6   	movff	btemp,postinc1
 49401  015972  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49402  015978  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49403  01597E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49404  015984  0E9F               	movlw	low (_C+160)
 49405  015986  6EE6               	movwf	postinc1,c
 49406  015988  0E09               	movlw	high (_C+160)
 49407  01598A  6EE6               	movwf	postinc1,c
 49408  01598C  EC80  F00C         	call	___asfladd	;wreg free
 49409  015990                     l17263:
 49410                           
 49411                           ;bsoc.c: 72:  if (C.p_bat < 0.0)
 49412  015990  EE22  F17F         	lfsr	2,_C+128	;volatile
 49413  015994  0E03               	movlw	3
 49414  015996  AEDB               	btfss	plusw2,7,c
 49415  015998  D038               	goto	l17267
 49416                           
 49417                           ;bsoc.c: 73:   C.bkwo += fabsf(C.p_bat / 3600.0);
 49418  01599A  0E00               	movlw	0
 49419  01599C  6EE6               	movwf	postinc1,c
 49420  01599E  0E00               	movlw	0
 49421  0159A0  6EE6               	movwf	postinc1,c
 49422  0159A2  0E61               	movlw	97
 49423  0159A4  6EE6               	movwf	postinc1,c
 49424  0159A6  0E45               	movlw	69
 49425  0159A8  6EE6               	movwf	postinc1,c
 49426  0159AA  EE22  F17F         	lfsr	2,_C+128	;volatile
 49427  0159AE  006F FF7B FFE6     	movff	postinc2,postinc1
 49428  0159B4  006F FF7B FFE6     	movff	postinc2,postinc1
 49429  0159BA  006F FF7B FFE6     	movff	postinc2,postinc1
 49430  0159C0  006F FF7B FFE6     	movff	postinc2,postinc1
 49431  0159C6  ECB8  F0C3         	call	___fldiv	;wreg free
 49432  0159CA  0060  F0AB  FFE6   	movff	btemp,postinc1
 49433  0159D0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49434  0159D6  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49435  0159DC  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49436  0159E2  ECBE  F006         	call	_fabsf	;wreg free
 49437  0159E6  0060  F0AB  FFE6   	movff	btemp,postinc1
 49438  0159EC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49439  0159F2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49440  0159F8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49441  0159FE  0EA3               	movlw	low (_C+164)
 49442  015A00  6EE6               	movwf	postinc1,c
 49443  015A02  0E09               	movlw	high (_C+164)
 49444  015A04  6EE6               	movwf	postinc1,c
 49445  015A06  EC80  F00C         	call	___asfladd	;wreg free
 49446  015A0A                     l17267:
 49447                           
 49448                           ;bsoc.c: 75:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 49449  015A0A  0E00               	movlw	0
 49450  015A0C  6EE6               	movwf	postinc1,c
 49451  015A0E  0E00               	movlw	0
 49452  015A10  6EE6               	movwf	postinc1,c
 49453  015A12  0EC8               	movlw	200
 49454  015A14  6EE6               	movwf	postinc1,c
 49455  015A16  0E42               	movlw	66
 49456  015A18  6EE6               	movwf	postinc1,c
 49457  015A1A  EE22  F18B         	lfsr	2,_C+140	;volatile
 49458  015A1E  006F FF7B FFE6     	movff	postinc2,postinc1
 49459  015A24  006F FF7B FFE6     	movff	postinc2,postinc1
 49460  015A2A  006F FF7B FFE6     	movff	postinc2,postinc1
 49461  015A30  006F FF7B FFE6     	movff	postinc2,postinc1
 49462  015A36  EE22  F19B         	lfsr	2,_C+156	;volatile
 49463  015A3A  006F FF7B FFE6     	movff	postinc2,postinc1
 49464  015A40  006F FF7B FFE6     	movff	postinc2,postinc1
 49465  015A46  006F FF7B FFE6     	movff	postinc2,postinc1
 49466  015A4C  006F FF7B FFE6     	movff	postinc2,postinc1
 49467  015A52  ECB8  F0C3         	call	___fldiv	;wreg free
 49468  015A56  0060  F0AB  FFE6   	movff	btemp,postinc1
 49469  015A5C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49470  015A62  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49471  015A68  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49472  015A6E  EC67  F0B8         	call	___flmul	;wreg free
 49473  015A72  0060  F0AB  FFE6   	movff	btemp,postinc1
 49474  015A78  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49475  015A7E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49476  015A84  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49477  015A8A  EC7D  F0F5         	call	___fltol	;wreg free
 49478  015A8E  0060  F0A8  F034   	movff	btemp,btemp+10
 49479  015A94  0060  F0AC  F035   	movff	btemp+1,btemp+11
 49480  015A9A  0E01               	movlw	1
 49481  015A9C  2634               	addwf	(btemp+10)^0,f,c
 49482  015A9E  0E00               	movlw	0
 49483  015AA0  2235               	addwfc	(btemp+11)^0,f,c
 49484  015AA2  0060  F0D0  F9B5   	movff	btemp+10,_C+182	;volatile
 49485  015AA8  0060  F0D4  F9B6   	movff	btemp+11,_C+183	;volatile
 49486                           
 49487                           ;bsoc.c: 76:  if (C.soc > 100)
 49488  015AAE  EE22  F1B5         	lfsr	2,_C+182	;volatile
 49489  015AB2  0E01               	movlw	1
 49490  015AB4  50DB               	movf	plusw2,w,c
 49491  015AB6  E104               	bnz	u1689_20
 49492  015AB8  0E65               	movlw	101
 49493  015ABA  5CDE               	subwf	postinc2,w,c
 49494  015ABC  A0D8               	btfss	status,0,c
 49495  015ABE  D008               	goto	l17273
 49496  015AC0                     u1689_20:
 49497                           
 49498                           ;bsoc.c: 77:   C.soc = 100;
 49499  015AC0  0E64               	movlw	100
 49500  015AC2  006F FFA0  F9B5    	movff	wreg,_C+182	;volatile
 49501  015AC8  0E00               	movlw	0
 49502  015ACA  006F FFA0  F9B6    	movff	wreg,_C+183	;volatile
 49503  015AD0                     l17273:
 49504                           
 49505                           ;bsoc.c: 79:  if (C.c_bat < 0.0) {
 49506  015AD0  EE22  F143         	lfsr	2,_C+68	;volatile
 49507  015AD4  0E03               	movlw	3
 49508  015AD6  AEDB               	btfss	plusw2,7,c
 49509  015AD8  D047               	goto	l2371
 49510                           
 49511                           ;bsoc.c: 80:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 49512  015ADA  EE22  F143         	lfsr	2,_C+68	;volatile
 49513  015ADE  006F FF7B FFE6     	movff	postinc2,postinc1
 49514  015AE4  006F FF7B FFE6     	movff	postinc2,postinc1
 49515  015AEA  006F FF7B FFE6     	movff	postinc2,postinc1
 49516  015AF0  006F FF7B FFE6     	movff	postinc2,postinc1
 49517  015AF6  EE22  F19B         	lfsr	2,_C+156	;volatile
 49518  015AFA  006F FF7B FFE6     	movff	postinc2,postinc1
 49519  015B00  006F FF7B FFE6     	movff	postinc2,postinc1
 49520  015B06  006F FF7B FFE6     	movff	postinc2,postinc1
 49521  015B0C  006F FF7B FFE6     	movff	postinc2,postinc1
 49522  015B12  ECB8  F0C3         	call	___fldiv	;wreg free
 49523  015B16  0060  F0AB  FFE6   	movff	btemp,postinc1
 49524  015B1C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49525  015B22  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49526  015B28  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49527  015B2E  ECCD  F010         	call	___flneg	;wreg free
 49528  015B32  0060  F0AB  FFE6   	movff	btemp,postinc1
 49529  015B38  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49530  015B3E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49531  015B44  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49532  015B4A  EC7D  F0F5         	call	___fltol	;wreg free
 49533  015B4E  0060  F0A8  F034   	movff	btemp,btemp+10
 49534  015B54  0060  F0AC  F035   	movff	btemp+1,btemp+11
 49535  015B5A  0060  F0D0  F9B3   	movff	btemp+10,_C+180	;volatile
 49536  015B60  0060  F0D4  F9B4   	movff	btemp+11,_C+181	;volatile
 49537                           
 49538                           ;bsoc.c: 81:  } else {
 49539  015B66  D008               	goto	l17277
 49540  015B68                     l2371:
 49541                           
 49542                           ;bsoc.c: 82:   C.runtime = 99;
 49543  015B68  0E63               	movlw	99
 49544  015B6A  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
 49545  015B70  0E00               	movlw	0
 49546  015B72  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
 49547  015B78                     l17277:
 49548                           
 49549                           ;bsoc.c: 84:  if (C.runtime > 99)
 49550  015B78  EE22  F1B3         	lfsr	2,_C+180	;volatile
 49551  015B7C  0E01               	movlw	1
 49552  015B7E  50DB               	movf	plusw2,w,c
 49553  015B80  E104               	bnz	u1691_20
 49554  015B82  0E64               	movlw	100
 49555  015B84  5CDE               	subwf	postinc2,w,c
 49556  015B86  A0D8               	btfss	status,0,c
 49557  015B88  D008               	goto	l17281
 49558  015B8A                     u1691_20:
 49559                           
 49560                           ;bsoc.c: 85:   C.runtime = 99;
 49561  015B8A  0E63               	movlw	99
 49562  015B8C  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
 49563  015B92  0E00               	movlw	0
 49564  015B94  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
 49565  015B9A                     l17281:
 49566                           
 49567                           ;bsoc.c: 87:  V.lowint_count++;
 49568  015B9A  0E01               	movlw	1
 49569  015B9C  0102               	movlb	2	; () banked
 49570  015B9E  27B4               	addwf	(_V+173)& (0+255),f,b	;volatile
 49571  015BA0  0E00               	movlw	0
 49572  015BA2  23B5               	addwfc	(_V+174)& (0+255),f,b	;volatile
 49573  015BA4  23B6               	addwfc	(_V+175)& (0+255),f,b	;volatile
 49574  015BA6  23B7               	addwfc	(_V+176)& (0+255),f,b	;volatile
 49575                           
 49576                           ;bsoc.c: 89:  if (!log_update_wait++ && V.system_stable) {
 49577  015BA8  2A50               	incf	calc_bsoc@log_update_wait^0,f,c
 49578  015BAA  0450               	decf	calc_bsoc@log_update_wait^0,w,c
 49579  015BAC  A4D8               	btfss	status,2,c
 49580  015BAE  D177               	goto	l17293
 49581                           
 49582                           ; BSR set to: 2
 49583  015BB0  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 49584  015BB2  B4D8               	btfsc	status,2,c
 49585  015BB4  D174               	goto	l17293
 49586                           
 49587                           ; BSR set to: 2
 49588                           ;bsoc.c: 90:   log_ptr = port_data_dma_ptr();
 49589  015BB6  ECC6  F017         	call	_port_data_dma_ptr	;wreg free
 49590                           
 49591                           ;stkvar	_log_ptr @ sp[(-6)+4]
 49592  015BBA  0EFF               	movlw	-1
 49593  015BBC  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 49594  015BC2  0EFE               	movlw	-2
 49595  015BC4  0060  F0AB  FFE3   	movff	btemp,plusw1
 49596                           
 49597                           ;bsoc.c: 91:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 49598  015BCA  EE22  F1C1         	lfsr	2,_C+194	;volatile
 49599  015BCE  006F FF7B FFE6     	movff	postinc2,postinc1
 49600  015BD4  006F FF7B FFE6     	movff	postinc2,postinc1
 49601  015BDA  006F FF7B FFE6     	movff	postinc2,postinc1
 49602  015BE0  006F FF7B FFE6     	movff	postinc2,postinc1
 49603  015BE6  EE22  F1C5         	lfsr	2,_C+198	;volatile
 49604  015BEA  006F FF7B FFE6     	movff	postinc2,postinc1
 49605  015BF0  006F FF7B FFE6     	movff	postinc2,postinc1
 49606  015BF6  006F FF7B FFE6     	movff	postinc2,postinc1
 49607  015BFC  006F FF7B FFE6     	movff	postinc2,postinc1
 49608  015C02  EE22  F19B         	lfsr	2,_C+156	;volatile
 49609  015C06  006F FF7B FFE6     	movff	postinc2,postinc1
 49610  015C0C  006F FF7B FFE6     	movff	postinc2,postinc1
 49611  015C12  006F FF7B FFE6     	movff	postinc2,postinc1
 49612  015C18  006F FF7B FFE6     	movff	postinc2,postinc1
 49613  015C1E  EE22  F233         	lfsr	2,_C+308	;volatile
 49614  015C22  006F FF7B FFE6     	movff	postinc2,postinc1
 49615  015C28  006F FF7B FFE6     	movff	postinc2,postinc1
 49616  015C2E  006F FF7B FFE6     	movff	postinc2,postinc1
 49617  015C34  006F FF7B FFE6     	movff	postinc2,postinc1
 49618  015C3A  EE22  F22F         	lfsr	2,_C+304	;volatile
 49619  015C3E  006F FF7B FFE6     	movff	postinc2,postinc1
 49620  015C44  006F FF7B FFE6     	movff	postinc2,postinc1
 49621  015C4A  006F FF7B FFE6     	movff	postinc2,postinc1
 49622  015C50  006F FF7B FFE6     	movff	postinc2,postinc1
 49623  015C56  EE22  F22D         	lfsr	2,_C+302	;volatile
 49624  015C5A  50DF               	movf	indf2,w,c
 49625  015C5C  6EE6               	movwf	postinc1,c
 49626  015C5E  0E00               	movlw	0
 49627  015C60  6EE6               	movwf	postinc1,c
 49628  015C62  ECAB  F017         	call	_get_ac_charger_relay	;wreg free
 49629  015C66  502A               	movf	btemp^0,w,c
 49630  015C68  6EE6               	movwf	postinc1,c
 49631  015C6A  0E00               	movlw	0
 49632  015C6C  6EE6               	movwf	postinc1,c
 49633  015C6E  EE22  F167         	lfsr	2,_C+104	;volatile
 49634  015C72  006F FF7B FFE6     	movff	postinc2,postinc1
 49635  015C78  006F FF7B FFE6     	movff	postinc2,postinc1
 49636  015C7E  006F FF7B FFE6     	movff	postinc2,postinc1
 49637  015C84  006F FF7B FFE6     	movff	postinc2,postinc1
 49638  015C8A  EE22  F187         	lfsr	2,_C+136	;volatile
 49639  015C8E  006F FF7B FFE6     	movff	postinc2,postinc1
 49640  015C94  006F FF7B FFE6     	movff	postinc2,postinc1
 49641  015C9A  006F FF7B FFE6     	movff	postinc2,postinc1
 49642  015CA0  006F FF7B FFE6     	movff	postinc2,postinc1
 49643  015CA6  EE22  F1B3         	lfsr	2,_C+180	;volatile
 49644  015CAA  006F FF78  F034    	movff	postinc2,btemp+10
 49645  015CB0  006F FF74  F035    	movff	postdec2,btemp+11
 49646  015CB6  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 49647  015CBC  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 49648  015CC2  EE22  F1B5         	lfsr	2,_C+182	;volatile
 49649  015CC6  006F FF78  F034    	movff	postinc2,btemp+10
 49650  015CCC  006F FF74  F035    	movff	postdec2,btemp+11
 49651  015CD2  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 49652  015CD8  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 49653  015CDE  EE22  F193         	lfsr	2,_C+148	;volatile
 49654  015CE2  006F FF7B FFE6     	movff	postinc2,postinc1
 49655  015CE8  006F FF7B FFE6     	movff	postinc2,postinc1
 49656  015CEE  006F FF7B FFE6     	movff	postinc2,postinc1
 49657  015CF4  006F FF7B FFE6     	movff	postinc2,postinc1
 49658  015CFA  EE22  F18F         	lfsr	2,_C+144	;volatile
 49659  015CFE  006F FF7B FFE6     	movff	postinc2,postinc1
 49660  015D04  006F FF7B FFE6     	movff	postinc2,postinc1
 49661  015D0A  006F FF7B FFE6     	movff	postinc2,postinc1
 49662  015D10  006F FF7B FFE6     	movff	postinc2,postinc1
 49663  015D16  EE22  F177         	lfsr	2,_C+120	;volatile
 49664  015D1A  006F FF7B FFE6     	movff	postinc2,postinc1
 49665  015D20  006F FF7B FFE6     	movff	postinc2,postinc1
 49666  015D26  006F FF7B FFE6     	movff	postinc2,postinc1
 49667  015D2C  006F FF7B FFE6     	movff	postinc2,postinc1
 49668  015D32  EE22  F173         	lfsr	2,_C+116	;volatile
 49669  015D36  006F FF7B FFE6     	movff	postinc2,postinc1
 49670  015D3C  006F FF7B FFE6     	movff	postinc2,postinc1
 49671  015D42  006F FF7B FFE6     	movff	postinc2,postinc1
 49672  015D48  006F FF7B FFE6     	movff	postinc2,postinc1
 49673  015D4E  EE22  F17B         	lfsr	2,_C+124	;volatile
 49674  015D52  006F FF7B FFE6     	movff	postinc2,postinc1
 49675  015D58  006F FF7B FFE6     	movff	postinc2,postinc1
 49676  015D5E  006F FF7B FFE6     	movff	postinc2,postinc1
 49677  015D64  006F FF7B FFE6     	movff	postinc2,postinc1
 49678  015D6A  EE22  F17F         	lfsr	2,_C+128	;volatile
 49679  015D6E  006F FF7B FFE6     	movff	postinc2,postinc1
 49680  015D74  006F FF7B FFE6     	movff	postinc2,postinc1
 49681  015D7A  006F FF7B FFE6     	movff	postinc2,postinc1
 49682  015D80  006F FF7B FFE6     	movff	postinc2,postinc1
 49683  015D86  EE22  F147         	lfsr	2,_C+72	;volatile
 49684  015D8A  006F FF7B FFE6     	movff	postinc2,postinc1
 49685  015D90  006F FF7B FFE6     	movff	postinc2,postinc1
 49686  015D96  006F FF7B FFE6     	movff	postinc2,postinc1
 49687  015D9C  006F FF7B FFE6     	movff	postinc2,postinc1
 49688  015DA2  EE22  F143         	lfsr	2,_C+68	;volatile
 49689  015DA6  006F FF7B FFE6     	movff	postinc2,postinc1
 49690  015DAC  006F FF7B FFE6     	movff	postinc2,postinc1
 49691  015DB2  006F FF7B FFE6     	movff	postinc2,postinc1
 49692  015DB8  006F FF7B FFE6     	movff	postinc2,postinc1
 49693  015DBE  EE22  F163         	lfsr	2,_C+100	;volatile
 49694  015DC2  006F FF7B FFE6     	movff	postinc2,postinc1
 49695  015DC8  006F FF7B FFE6     	movff	postinc2,postinc1
 49696  015DCE  006F FF7B FFE6     	movff	postinc2,postinc1
 49697  015DD4  006F FF7B FFE6     	movff	postinc2,postinc1
 49698  015DDA  EE22  F14B         	lfsr	2,_C+76	;volatile
 49699  015DDE  006F FF7B FFE6     	movff	postinc2,postinc1
 49700  015DE4  006F FF7B FFE6     	movff	postinc2,postinc1
 49701  015DEA  006F FF7B FFE6     	movff	postinc2,postinc1
 49702  015DF0  006F FF7B FFE6     	movff	postinc2,postinc1
 49703  015DF6  EE22  F14F         	lfsr	2,_C+80	;volatile
 49704  015DFA  006F FF7B FFE6     	movff	postinc2,postinc1
 49705  015E00  006F FF7B FFE6     	movff	postinc2,postinc1
 49706  015E06  006F FF7B FFE6     	movff	postinc2,postinc1
 49707  015E0C  006F FF7B FFE6     	movff	postinc2,postinc1
 49708  015E12  EE22  F153         	lfsr	2,_C+84	;volatile
 49709  015E16  006F FF7B FFE6     	movff	postinc2,postinc1
 49710  015E1C  006F FF7B FFE6     	movff	postinc2,postinc1
 49711  015E22  006F FF7B FFE6     	movff	postinc2,postinc1
 49712  015E28  006F FF7B FFE6     	movff	postinc2,postinc1
 49713  015E2E  0060  FA23  FFE6   	movff	_V+129,postinc1
 49714  015E34  0060  FA27  FFE6   	movff	_V+130,postinc1
 49715  015E3A  0060  FA2B  FFE6   	movff	_V+131,postinc1
 49716  015E40  0060  FA2F  FFE6   	movff	_V+132,postinc1
 49717  015E46  0E32               	movlw	50
 49718  015E48  6EE6               	movwf	postinc1,c
 49719  015E4A  0E00               	movlw	0
 49720  015E4C  6EE6               	movwf	postinc1,c
 49721  015E4E  0E63               	movlw	low STR_103
 49722  015E50  6EE6               	movwf	postinc1,c
 49723  015E52  0EF9               	movlw	high STR_103
 49724  015E54  6EE6               	movwf	postinc1,c
 49725                           
 49726                           ;stkvar	_log_ptr @ sp[(-98)+4]
 49727  015E56  0EA2               	movlw	-94
 49728  015E58  006F FF8F FFE6     	movff	plusw1,postinc1
 49729  015E5E  006F FF8F FFE6     	movff	plusw1,postinc1
 49730  015E64  0E5E               	movlw	94
 49731  015E66  6EE6               	movwf	postinc1,c
 49732  015E68  EC5B  F000         	call	_sprintf	;wreg free
 49733                           
 49734                           ; BSR set to: 0
 49735                           ;bsoc.c: 98:   StartTimer(TMR_DISPLAY, 125);
 49736  015E6C  0E7D               	movlw	125
 49737  015E6E  6EE6               	movwf	postinc1,c
 49738  015E70  0E00               	movlw	0
 49739  015E72  6EE6               	movwf	postinc1,c
 49740  015E74  0E0A               	movlw	10
 49741  015E76  6EE6               	movwf	postinc1,c
 49742  015E78  EC49  F012         	call	_StartTimer	;wreg free
 49743                           
 49744                           ;bsoc.c: 99:   send_port_data_dma(strlen((char*) log_ptr));
 49745                           ;stkvar	_log_ptr @ sp[(-6)+4]
 49746  015E7C  0EFE               	movlw	-2
 49747  015E7E  006F FF8F FFE6     	movff	plusw1,postinc1
 49748  015E84  006F FF8F FFE6     	movff	plusw1,postinc1
 49749  015E8A  EC65  F008         	call	_strlen	;wreg free
 49750  015E8E  0060  F0AB  FFE6   	movff	btemp,postinc1
 49751  015E94  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49752  015E9A  EC2F  F010         	call	_send_port_data_dma	;wreg free
 49753  015E9E                     l17293:
 49754                           
 49755                           ;bsoc.c: 101:  if (log_update_wait >= 10)
 49756  015E9E  0E09               	movlw	9
 49757  015EA0  6450               	cpfsgt	calc_bsoc@log_update_wait^0,c
 49758  015EA2  D001               	goto	l2375
 49759                           
 49760                           ;bsoc.c: 102:   log_update_wait = 0;
 49761  015EA4  6A50               	clrf	calc_bsoc@log_update_wait^0,c
 49762  015EA6                     l2375:
 49763                           
 49764                           ;bsoc.c: 104:  C.update = 0;
 49765  015EA6  0E00               	movlw	0
 49766  015EA8  006F FFA0  F9B7    	movff	wreg,_C+184	;volatile
 49767                           
 49768                           ;bsoc.c: 106:  do { LATEbits.LATE1 = 0; } while(0);
 49769  015EAE  92BE               	bcf	190,1,c	;volatile
 49770                           
 49771                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 49772  015EB0  0EFA               	movlw	250
 49773  015EB2  26E1               	addwf	fsr1l,f,c
 49774  015EB4  0EFF               	movlw	255
 49775  015EB6  22E2               	addwfc	fsr1h,f,c
 49776  015EB8  0012               	return		;funcret
 49777  015EBA                     __end_of_calc_bsoc:
 49778                           	opt callstack 0
 49779                           
 49780 ;; *************** function _send_port_data_dma *****************
 49781 ;; Defined at:
 49782 ;;		line 397 in file "eadog.c"
 49783 ;; Parameters:    Size  Location     Type
 49784 ;;  dsize           2  [STACK] unsigned short 
 49785 ;; Auto vars:     Size  Location     Type
 49786 ;;		None
 49787 ;; Return value:  Size  Location     Type
 49788 ;;                  1  [STACK] void 
 49789 ;; Registers used:
 49790 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 49791 ;; Tracked objects:
 49792 ;;		On entry : 0/0
 49793 ;;		On exit  : 3F/3B
 49794 ;;		Unchanged: 0/0
 49795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49800 ;;Total ram usage:        0 bytes
 49801 ;; Hardware stack levels used:    1
 49802 ;; Hardware stack levels required when called:    3
 49803 ;; This function calls:
 49804 ;;		Nothing
 49805 ;; This function is called by:
 49806 ;;		_calc_bsoc
 49807 ;; This function uses a reentrant model
 49808 ;;
 49809                           
 49810                           	psect	text203
 49811  00205E                     __ptext203:
 49812                           	opt callstack 0
 49813  00205E                     _send_port_data_dma:
 49814                           	opt callstack 11
 49815                           
 49816                           ;eadog.c: 397: void send_port_data_dma(uint16_t dsize);eadog.c: 398: {;eadog.c: 399:  if
      +                           (dsize > 512)
 49817                           ;stkvar	_dsize @ sp[(0)+-2]
 49818                           
 49819                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49820                           ;incstack = 0
 49821  00205E  0EFE               	movlw	-2
 49822  002060  04E3               	decf	plusw1,w,c
 49823  002062  0EFF               	movlw	-1
 49824  002064  006F FF8C  F02A    	movff	plusw1,btemp
 49825  00206A  0E02               	movlw	2
 49826  00206C  5A2A               	subwfb	btemp^0,f,c
 49827  00206E  A0D8               	btfss	status,0,c
 49828  002070  D00C               	goto	l12987
 49829                           
 49830                           ;eadog.c: 400:   dsize = 512;
 49831  002072  0E00               	movlw	0
 49832  002074  6E34               	movwf	(btemp+10)^0,c
 49833  002076  0E02               	movlw	2
 49834  002078  6E35               	movwf	(btemp+11)^0,c
 49835                           
 49836                           ;stkvar	_dsize @ sp[(0)+-2]
 49837  00207A  0EFE               	movlw	-2
 49838  00207C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 49839  002082  0EFF               	movlw	-1
 49840  002084  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 49841  00208A                     l12987:
 49842                           
 49843                           ;eadog.c: 402:  DMA2CON0bits.EN = 0;
 49844  00208A  013B               	movlb	59	; () banked
 49845  00208C  9FDC               	bcf	220,7,b	;volatile
 49846                           
 49847                           ; BSR set to: 59
 49848                           ;eadog.c: 403:  DMA2SSZ = dsize;
 49849                           ;stkvar	_dsize @ sp[(0)+-2]
 49850  00208E  0EFE               	movlw	-2
 49851  002090  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 49852  002096  0EFF               	movlw	-1
 49853  002098  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 49854                           
 49855                           ; BSR set to: 59
 49856                           ;eadog.c: 404:  DMA2DSZ = 1;
 49857  00209E  0E00               	movlw	0
 49858  0020A0  6FCF               	movwf	207,b	;volatile
 49859  0020A2  0E01               	movlw	1
 49860  0020A4  6FCE               	movwf	206,b	;volatile
 49861                           
 49862                           ; BSR set to: 59
 49863                           ;eadog.c: 405:  DMA2CON0bits.EN = 1;
 49864  0020A6  8FDC               	bsf	220,7,b	;volatile
 49865                           
 49866                           ; BSR set to: 59
 49867                           ;eadog.c: 406:  DMA2CON0bits.DMA2SIRQEN = 1;
 49868  0020A8  8DDC               	bsf	220,6,b	;volatile
 49869                           
 49870                           ; BSR set to: 59
 49871                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 49872  0020AA  52E5               	movf	postdec1,f,c
 49873  0020AC  52E5               	movf	postdec1,f,c
 49874  0020AE  0012               	return		;funcret
 49875  0020B0                     __end_of_send_port_data_dma:
 49876                           	opt callstack 0
 49877                           
 49878 ;; *************** function _port_data_dma_ptr *****************
 49879 ;; Defined at:
 49880 ;;		line 412 in file "eadog.c"
 49881 ;; Parameters:    Size  Location     Type
 49882 ;;		None
 49883 ;; Auto vars:     Size  Location     Type
 49884 ;;		None
 49885 ;; Return value:  Size  Location     Type
 49886 ;;                  2  [STACK] PTR unsigned char 
 49887 ;; Registers used:
 49888 ;;		wreg, status,2, status,0, btemp, btemp+1
 49889 ;; Tracked objects:
 49890 ;;		On entry : 3F/2
 49891 ;;		On exit  : 0/0
 49892 ;;		Unchanged: 0/0
 49893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49898 ;;Total ram usage:        0 bytes
 49899 ;; Hardware stack levels used:    1
 49900 ;; Hardware stack levels required when called:    3
 49901 ;; This function calls:
 49902 ;;		Nothing
 49903 ;; This function is called by:
 49904 ;;		_calc_bsoc
 49905 ;; This function uses a reentrant model
 49906 ;;
 49907                           
 49908                           	psect	text204
 49909  002F8C                     __ptext204:
 49910                           	opt callstack 0
 49911  002F8C                     _port_data_dma_ptr:
 49912                           	opt callstack 11
 49913                           
 49914                           ;eadog.c: 414:  return port_data;
 49915                           
 49916                           ; BSR set to: 59
 49917                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49918                           ;incstack = 0
 49919  002F8C  0EFF               	movlw	low _port_data
 49920  002F8E  6E2A               	movwf	btemp^0,c
 49921  002F90  0E06               	movlw	high _port_data
 49922  002F92  6E2B               	movwf	(btemp+1)^0,c
 49923                           
 49924                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 49925  002F94  0012               	return		;funcret
 49926  002F96                     __end_of_port_data_dma_ptr:
 49927                           	opt callstack 0
 49928                           
 49929 ;; *************** function ___asfladd *****************
 49930 ;; Defined at:
 49931 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 49932 ;; Parameters:    Size  Location     Type
 49933 ;;  f1p             2  [STACK] PTR 
 49934 ;;		 -> C(320), 
 49935 ;;  f2              4  [STACK] PTR 
 49936 ;; Auto vars:     Size  Location     Type
 49937 ;;		None
 49938 ;; Return value:  Size  Location     Type
 49939 ;;                  4  [STACK] PTR 
 49940 ;; Registers used:
 49941 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 49942 ;; Tracked objects:
 49943 ;;		On entry : 0/0
 49944 ;;		On exit  : 0/0
 49945 ;;		Unchanged: 0/0
 49946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49951 ;;Total ram usage:        0 bytes
 49952 ;; Hardware stack levels used:    1
 49953 ;; Hardware stack levels required when called:    4
 49954 ;; This function calls:
 49955 ;;		___fladd
 49956 ;; This function is called by:
 49957 ;;		_calc_bsoc
 49958 ;; This function uses a reentrant model
 49959 ;;
 49960                           
 49961                           	psect	text205
 49962  001900                     __ptext205:
 49963                           	opt callstack 0
 49964  001900                     ___asfladd:
 49965                           	opt callstack 10
 49966                           
 49967                           ;	Return value of ___asfladd is never used
 49968                           ;stkvar	_f2 @ sp[(0)+-6]
 49969                           
 49970                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49971                           ;incstack = 0
 49972  001900  0EFA               	movlw	-6
 49973  001902  006F FF8F FFE6     	movff	plusw1,postinc1
 49974  001908  006F FF8F FFE6     	movff	plusw1,postinc1
 49975  00190E  006F FF8F FFE6     	movff	plusw1,postinc1
 49976  001914  006F FF8F FFE6     	movff	plusw1,postinc1
 49977                           
 49978                           ;stkvar	_f1p @ sp[(-4)+-2]
 49979  00191A  0EFA               	movlw	-6
 49980  00191C  006F FF8F FFD9     	movff	plusw1,fsr2l
 49981  001922  0EFB               	movlw	-5
 49982  001924  006F FF8F FFDA     	movff	plusw1,fsr2h
 49983  00192A  006F FF7B FFE6     	movff	postinc2,postinc1
 49984  001930  006F FF7B FFE6     	movff	postinc2,postinc1
 49985  001936  006F FF7B FFE6     	movff	postinc2,postinc1
 49986  00193C  006F FF7B FFE6     	movff	postinc2,postinc1
 49987  001942  EC7C  F0BC         	call	___fladd	;wreg free
 49988                           
 49989                           ;stkvar	_f1p @ sp[(0)+-2]
 49990  001946  0EFE               	movlw	-2
 49991  001948  006F FF8F FFD9     	movff	plusw1,fsr2l
 49992  00194E  0EFF               	movlw	-1
 49993  001950  006F FF8F FFDA     	movff	plusw1,fsr2h
 49994  001956  0060  F0AB  FFDE   	movff	btemp,postinc2
 49995  00195C  0060  F0AF  FFDE   	movff	btemp+1,postinc2
 49996  001962  0060  F0B3  FFDE   	movff	btemp+2,postinc2
 49997  001968  0060  F0B7  FFDE   	movff	btemp+3,postinc2
 49998                           
 49999                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 50000  00196E  0EFA               	movlw	250
 50001  001970  26E1               	addwf	fsr1l,f,c
 50002  001972  0EFF               	movlw	255
 50003  001974  22E2               	addwfc	fsr1h,f,c
 50004  001976  0012               	return		;funcret
 50005  001978                     __end_of___asfladd:
 50006                           	opt callstack 0
 50007                           
 50008 ;; *************** function _INT0_ISR *****************
 50009 ;; Defined at:
 50010 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 50011 ;; Parameters:    Size  Location     Type
 50012 ;;		None
 50013 ;; Auto vars:     Size  Location     Type
 50014 ;;		None
 50015 ;; Return value:  Size  Location     Type
 50016 ;;                  1    wreg      void 
 50017 ;; Registers used:
 50018 ;;		wreg, status,2, status,0, pclath, tosl
 50019 ;; Tracked objects:
 50020 ;;		On entry : 0/0
 50021 ;;		On exit  : 0/0
 50022 ;;		Unchanged: 0/0
 50023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50028 ;;Total ram usage:        0 bytes
 50029 ;; Hardware stack levels used:    1
 50030 ;; Hardware stack levels required when called:    2
 50031 ;; This function calls:
 50032 ;;		_INT0_CallBack
 50033 ;; This function is called by:
 50034 ;;		Interrupt level 2
 50035 ;; This function uses a non-reentrant model
 50036 ;;
 50037                           
 50038                           	psect	text206
 50039  002F64                     __ptext206:
 50040                           	opt callstack 0
 50041  002F64                     _INT0_ISR:
 50042                           	opt callstack 3
 50043                           
 50044                           ;incstack = 0
 50045  002F64  EE14  F32C         	lfsr	1,___inthi_sp
 50046                           
 50047                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 50048  002F68  0139               	movlb	57	; () banked
 50049  002F6A  91A1               	bcf	161,0,b	;volatile
 50050                           
 50051                           ; BSR set to: 57
 50052                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 50053  002F6C  EC36  F016         	call	_INT0_CallBack	;wreg free
 50054  002F70  0011               	retfie		f
 50055  002F72                     __end_of_INT0_ISR:
 50056                           	opt callstack 0
 50057                           
 50058 ;; *************** function _INT0_CallBack *****************
 50059 ;; Defined at:
 50060 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 50061 ;; Parameters:    Size  Location     Type
 50062 ;;		None
 50063 ;; Auto vars:     Size  Location     Type
 50064 ;;		None
 50065 ;; Return value:  Size  Location     Type
 50066 ;;                  1  [STACK] void 
 50067 ;; Registers used:
 50068 ;;		wreg, status,2, status,0, pclath, tosl
 50069 ;; Tracked objects:
 50070 ;;		On entry : 3F/39
 50071 ;;		On exit  : 0/0
 50072 ;;		Unchanged: 0/0
 50073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50078 ;;Total ram usage:        0 bytes
 50079 ;; Hardware stack levels used:    1
 50080 ;; Hardware stack levels required when called:    1
 50081 ;; This function calls:
 50082 ;;		Absolute function
 50083 ;;		_INT0_DefaultInterruptHandler
 50084 ;; This function is called by:
 50085 ;;		_INT0_ISR
 50086 ;; This function uses a reentrant model
 50087 ;;
 50088                           
 50089                           	psect	text207
 50090  002C6C                     __ptext207:
 50091                           	opt callstack 0
 50092  002C6C                     _INT0_CallBack:
 50093                           	opt callstack 3
 50094                           
 50095                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 50096                           
 50097                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50098                           ;incstack = 0
 50099  002C6C  0100               	movlb	0	; () banked
 50100  002C6E  51B3               	movf	_INT0_InterruptHandler& (0+255),w,b
 50101  002C70  11B4               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 50102  002C72  11B5               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 50103  002C74  B4D8               	btfsc	status,2,c
 50104  002C76  0012               	return	
 50105                           
 50106                           ; BSR set to: 0
 50107                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 50108  002C78  D801               	call	u1325_48
 50109  002C7A  0012               	return	
 50110  002C7C                     u1325_48:
 50111  002C7C  0005               	push	
 50112  002C7E  6EFA               	movwf	pclath,c
 50113  002C80  51B3               	movf	_INT0_InterruptHandler& (0+255),w,b
 50114  002C82  6EFD               	movwf	tosl,c
 50115  002C84  51B4               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 50116  002C86  6EFE               	movwf	tosh,c
 50117  002C88  51B5               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 50118  002C8A  6EFF               	movwf	tosu,c
 50119  002C8C  50FA               	movf	pclath,w,c
 50120  002C8E  0012               	return		;indir
 50121  002C90                     __end_of_INT0_CallBack:
 50122                           	opt callstack 0
 50123                           
 50124 ;; *************** function _INT0_DefaultInterruptHandler *****************
 50125 ;; Defined at:
 50126 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 50127 ;; Parameters:    Size  Location     Type
 50128 ;;		None
 50129 ;; Auto vars:     Size  Location     Type
 50130 ;;		None
 50131 ;; Return value:  Size  Location     Type
 50132 ;;                  1  [STACK] void 
 50133 ;; Registers used:
 50134 ;;		None
 50135 ;; Tracked objects:
 50136 ;;		On entry : 3F/0
 50137 ;;		On exit  : 0/0
 50138 ;;		Unchanged: 0/0
 50139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50144 ;;Total ram usage:        0 bytes
 50145 ;; Hardware stack levels used:    1
 50146 ;; This function calls:
 50147 ;;		Nothing
 50148 ;; This function is called by:
 50149 ;;		_EXT_INT_Initialize
 50150 ;;		_INT0_CallBack
 50151 ;; This function uses a reentrant model
 50152 ;;
 50153                           
 50154                           	psect	text208
 50155  003012                     __ptext208:
 50156                           	opt callstack 0
 50157  003012                     _INT0_DefaultInterruptHandler:
 50158                           	opt callstack 3
 50159                           
 50160                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 50161                           
 50162                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50163                           ;incstack = 0
 50164  003012  0012               	return		;funcret
 50165  003014                     __end_of_INT0_DefaultInterruptHandler:
 50166                           	opt callstack 0
 50167                           
 50168 ;; *************** function _Default_ISR *****************
 50169 ;; Defined at:
 50170 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 50171 ;; Parameters:    Size  Location     Type
 50172 ;;		None
 50173 ;; Auto vars:     Size  Location     Type
 50174 ;;		None
 50175 ;; Return value:  Size  Location     Type
 50176 ;;                  1    wreg      void 
 50177 ;; Registers used:
 50178 ;;		None
 50179 ;; Tracked objects:
 50180 ;;		On entry : 0/0
 50181 ;;		On exit  : 0/0
 50182 ;;		Unchanged: 0/0
 50183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50188 ;;Total ram usage:        0 bytes
 50189 ;; Hardware stack levels used:    1
 50190 ;; This function calls:
 50191 ;;		Nothing
 50192 ;; This function is called by:
 50193 ;;		Interrupt level 2
 50194 ;; This function uses a non-reentrant model
 50195 ;;
 50196                           
 50197                           	psect	text209
 50198  003008                     __ptext209:
 50199                           	opt callstack 0
 50200  003008                     _Default_ISR:
 50201                           	opt callstack 5
 50202                           
 50203                           ;incstack = 0
 50204  003008  EE14  F32C         	lfsr	1,___inthi_sp
 50205  00300C  0011               	retfie		f
 50206  00300E                     __end_of_Default_ISR:
 50207                           	opt callstack 0
 50208                           
 50209 ;; *************** function _ADCC_ISR *****************
 50210 ;; Defined at:
 50211 ;;		line 314 in file "mcc_generated_files/adcc.c"
 50212 ;; Parameters:    Size  Location     Type
 50213 ;;		None
 50214 ;; Auto vars:     Size  Location     Type
 50215 ;;		None
 50216 ;; Return value:  Size  Location     Type
 50217 ;;                  1    wreg      void 
 50218 ;; Registers used:
 50219 ;;		wreg, status,2, status,0, pclath, tosl
 50220 ;; Tracked objects:
 50221 ;;		On entry : 0/0
 50222 ;;		On exit  : 0/0
 50223 ;;		Unchanged: 0/0
 50224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50229 ;;Total ram usage:        0 bytes
 50230 ;; Hardware stack levels used:    1
 50231 ;; Hardware stack levels required when called:    1
 50232 ;; This function calls:
 50233 ;;		Absolute function
 50234 ;;		_ADCC_DefaultInterruptHandler
 50235 ;;		_adc_int_handler
 50236 ;; This function is called by:
 50237 ;;		Interrupt level 2
 50238 ;; This function uses a non-reentrant model
 50239 ;;
 50240                           
 50241                           	psect	text210
 50242  002900                     __ptext210:
 50243                           	opt callstack 0
 50244  002900                     _ADCC_ISR:
 50245                           	opt callstack 4
 50246                           
 50247                           ;incstack = 0
 50248  002900  EE14  F32C         	lfsr	1,___inthi_sp
 50249                           
 50250                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 50251  002904  0139               	movlb	57	; () banked
 50252  002906  95A1               	bcf	161,2,b	;volatile
 50253                           
 50254                           ; BSR set to: 57
 50255                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 50256  002908  0100               	movlb	0	; () banked
 50257  00290A  51A4               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 50258  00290C  11A5               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 50259  00290E  11A6               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 50260  002910  B4D8               	btfsc	status,2,c
 50261  002912  0011               	retfie		f
 50262                           
 50263                           ; BSR set to: 0
 50264                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 50265  002914  D801               	call	i2u1396_48
 50266  002916  0011               	retfie		f
 50267  002918                     i2u1396_48:
 50268  002918  0005               	push	
 50269  00291A  6EFA               	movwf	pclath,c
 50270  00291C  51A4               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 50271  00291E  6EFD               	movwf	tosl,c
 50272  002920  51A5               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 50273  002922  6EFE               	movwf	tosh,c
 50274  002924  51A6               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 50275  002926  6EFF               	movwf	tosu,c
 50276  002928  50FA               	movf	pclath,w,c
 50277  00292A  0012               	return		;indir
 50278  00292C                     __end_of_ADCC_ISR:
 50279                           	opt callstack 0
 50280                           
 50281 ;; *************** function _adc_int_t_handler *****************
 50282 ;; Defined at:
 50283 ;;		line 183 in file "daq.c"
 50284 ;; Parameters:    Size  Location     Type
 50285 ;;		None
 50286 ;; Auto vars:     Size  Location     Type
 50287 ;;		None
 50288 ;; Return value:  Size  Location     Type
 50289 ;;                  1  [STACK] void 
 50290 ;; Registers used:
 50291 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 50292 ;; Tracked objects:
 50293 ;;		On entry : 3F/0
 50294 ;;		On exit  : 0/0
 50295 ;;		Unchanged: 0/0
 50296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50301 ;;Total ram usage:        0 bytes
 50302 ;; Hardware stack levels used:    1
 50303 ;; Hardware stack levels required when called:    1
 50304 ;; This function calls:
 50305 ;;		_ADCC_DischargeSampleCapacitor
 50306 ;;		_ADCC_StartConversion
 50307 ;; This function is called by:
 50308 ;;		_start_adc_scan
 50309 ;;		_ADCC_ThresholdISR
 50310 ;; This function uses a reentrant model
 50311 ;;
 50312                           
 50313                           	psect	text211
 50314  001708                     __ptext211:
 50315                           	opt callstack 0
 50316  001708                     _adc_int_t_handler:
 50317                           	opt callstack 3
 50318                           
 50319                           ;daq.c: 188:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 50320                           
 50321                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50322                           ;incstack = 0
 50323  001708  013E               	movlb	62	; () banked
 50324  00170A  51E6               	movf	230,w,b	;volatile
 50325  00170C  006F FB9C  F02A    	movff	16103,btemp	;volatile
 50326  001712  6A2B               	clrf	(btemp+1)^0,c
 50327  001714  0060  F0A8  F02B   	movff	btemp,btemp+1
 50328  00171A  6A2A               	clrf	btemp^0,c
 50329  00171C  262A               	addwf	btemp^0,f,c
 50330  00171E  0E00               	movlw	0
 50331  001720  222B               	addwfc	(btemp+1)^0,f,c
 50332  001722  0101               	movlb	1	; () banked
 50333  001724  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 50334  001726  0D02               	mullw	2
 50335  001728  0E00               	movlw	low _R
 50336  00172A  24F3               	addwf	243,w,c
 50337  00172C  6ED9               	movwf	fsr2l,c
 50338  00172E  0E01               	movlw	high _R
 50339  001730  20F4               	addwfc	prodh,w,c
 50340  001732  6EDA               	movwf	fsr2h,c
 50341  001734  0060  F0AB  FFDE   	movff	btemp,postinc2
 50342  00173A  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 50343  001740                     l14799:
 50344                           
 50345                           ;daq.c: 190:   if (++R.scan_index > 0XD) {
 50346  001740  0101               	movlb	1	; () banked
 50347  001742  2B32               	incf	(_R+50)& (0+255),f,b	;volatile
 50348  001744  0E0D               	movlw	13
 50349  001746  6532               	cpfsgt	(_R+50)& (0+255),b	;volatile
 50350  001748  D003               	goto	l14805
 50351                           
 50352                           ; BSR set to: 1
 50353                           ;daq.c: 191:    R.done = 1;
 50354  00174A  0E01               	movlw	1
 50355  00174C  6F35               	movwf	(_R+53)& (0+255),b	;volatile
 50356  00174E  0012               	return	
 50357  001750                     l14805:
 50358                           
 50359                           ; BSR set to: 1
 50360                           ;daq.c: 197:  } while (!((R.scan_select >> R.scan_index) &0x1));
 50361  001750  0060  F4C8  F035   	movff	_R+50,btemp+11	;volatile
 50362  001756  EE20  F133         	lfsr	2,_R+51	;volatile
 50363  00175A  006F FF78  F032    	movff	postinc2,btemp+8
 50364  001760  006F FF74  F033    	movff	postdec2,btemp+9
 50365  001766  2A35               	incf	(btemp+11)^0,f,c
 50366  001768  D003               	goto	u1393_44
 50367  00176A                     u1393_45:
 50368  00176A  90D8               	bcf	status,0,c
 50369  00176C  3233               	rrcf	(btemp+9)^0,f,c
 50370  00176E  3232               	rrcf	(btemp+8)^0,f,c
 50371  001770                     u1393_44:
 50372  001770  2E35               	decfsz	(btemp+11)^0,f,c
 50373  001772  D7FB               	goto	u1393_45
 50374  001774  A032               	btfss	(btemp+8)^0,0,c
 50375  001776  D7E4               	goto	l14799
 50376                           
 50377                           ;daq.c: 198:  ADCC_DischargeSampleCapacitor();
 50378  001778  ECE1  F017         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 50379                           
 50380                           ; BSR set to: 62
 50381                           ;daq.c: 199:  ADCC_StartConversion(R.scan_index & 0xf);
 50382  00177C  0101               	movlb	1	; () banked
 50383  00177E  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 50384  001780  0B0F               	andlw	15
 50385  001782  6EE6               	movwf	postinc1,c
 50386  001784  EC6C  F017         	call	_ADCC_StartConversion	;wreg free
 50387                           
 50388                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 50389  001788  0012               	return		;funcret
 50390  00178A                     __end_of_adc_int_t_handler:
 50391                           	opt callstack 0
 50392                           
 50393 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 50394 ;; Defined at:
 50395 ;;		line 339 in file "mcc_generated_files/adcc.c"
 50396 ;; Parameters:    Size  Location     Type
 50397 ;;		None
 50398 ;; Auto vars:     Size  Location     Type
 50399 ;;		None
 50400 ;; Return value:  Size  Location     Type
 50401 ;;                  1  [STACK] void 
 50402 ;; Registers used:
 50403 ;;		None
 50404 ;; Tracked objects:
 50405 ;;		On entry : 3F/0
 50406 ;;		On exit  : 0/0
 50407 ;;		Unchanged: 0/0
 50408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50413 ;;Total ram usage:        0 bytes
 50414 ;; Hardware stack levels used:    1
 50415 ;; This function calls:
 50416 ;;		Nothing
 50417 ;; This function is called by:
 50418 ;;		_ADCC_Initialize
 50419 ;;		_ADCC_ISR
 50420 ;;		_ADCC_ThresholdISR
 50421 ;; This function uses a reentrant model
 50422 ;;
 50423                           
 50424                           	psect	text212
 50425  003014                     __ptext212:
 50426                           	opt callstack 0
 50427  003014                     _ADCC_DefaultInterruptHandler:
 50428                           	opt callstack 4
 50429                           
 50430                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 50431                           
 50432                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50433                           ;incstack = 0
 50434  003014  0012               	return		;funcret
 50435  003016                     __end_of_ADCC_DefaultInterruptHandler:
 50436                           	opt callstack 0
 50437                           
 50438 ;; *************** function _adc_int_handler *****************
 50439 ;; Defined at:
 50440 ;;		line 173 in file "daq.c"
 50441 ;; Parameters:    Size  Location     Type
 50442 ;;		None
 50443 ;; Auto vars:     Size  Location     Type
 50444 ;;		None
 50445 ;; Return value:  Size  Location     Type
 50446 ;;                  1  [STACK] void 
 50447 ;; Registers used:
 50448 ;;		None
 50449 ;; Tracked objects:
 50450 ;;		On entry : 3F/0
 50451 ;;		On exit  : 0/0
 50452 ;;		Unchanged: 0/0
 50453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50458 ;;Total ram usage:        0 bytes
 50459 ;; Hardware stack levels used:    1
 50460 ;; This function calls:
 50461 ;;		Nothing
 50462 ;; This function is called by:
 50463 ;;		_start_adc_scan
 50464 ;;		_ADCC_ISR
 50465 ;; This function uses a reentrant model
 50466 ;;
 50467                           
 50468                           	psect	text213
 50469  003016                     __ptext213:
 50470                           	opt callstack 0
 50471  003016                     _adc_int_handler:
 50472                           	opt callstack 4
 50473                           
 50474                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 50475                           
 50476                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50477                           ;incstack = 0
 50478  003016  0012               	return		;funcret
 50479  003018                     __end_of_adc_int_handler:
 50480                           	opt callstack 0
 50481                           
 50482 ;; *************** function _ADCC_ThresholdISR *****************
 50483 ;; Defined at:
 50484 ;;		line 327 in file "mcc_generated_files/adcc.c"
 50485 ;; Parameters:    Size  Location     Type
 50486 ;;		None
 50487 ;; Auto vars:     Size  Location     Type
 50488 ;;		None
 50489 ;; Return value:  Size  Location     Type
 50490 ;;                  1    wreg      void 
 50491 ;; Registers used:
 50492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 50493 ;; Tracked objects:
 50494 ;;		On entry : 0/0
 50495 ;;		On exit  : 0/0
 50496 ;;		Unchanged: 0/0
 50497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50500 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50501 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50502 ;;Total ram usage:        5 bytes
 50503 ;; Hardware stack levels used:    1
 50504 ;; Hardware stack levels required when called:    2
 50505 ;; This function calls:
 50506 ;;		Absolute function
 50507 ;;		_ADCC_DefaultInterruptHandler
 50508 ;;		_adc_int_t_handler
 50509 ;; This function is called by:
 50510 ;;		Interrupt level 2
 50511 ;; This function uses a non-reentrant model
 50512 ;;
 50513                           
 50514                           	psect	text214
 50515  001AC0                     __ptext214:
 50516                           	opt callstack 0
 50517  001AC0                     _ADCC_ThresholdISR:
 50518                           	opt callstack 3
 50519                           
 50520                           ;incstack = 0
 50521  001AC0  0060  F0A8  F001   	movff	btemp,??_ADCC_ThresholdISR
 50522  001AC6  0060  F0AC  F002   	movff	btemp+1,??_ADCC_ThresholdISR+1
 50523  001ACC  0060  F0C8  F003   	movff	btemp+8,??_ADCC_ThresholdISR+2
 50524  001AD2  0060  F0CC  F004   	movff	btemp+9,??_ADCC_ThresholdISR+3
 50525  001AD8  0060  F0D4  F005   	movff	btemp+11,??_ADCC_ThresholdISR+4
 50526  001ADE  EE14  F32C         	lfsr	1,___inthi_sp
 50527                           
 50528                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 50529  001AE2  0139               	movlb	57	; () banked
 50530  001AE4  97A1               	bcf	161,3,b	;volatile
 50531                           
 50532                           ; BSR set to: 57
 50533                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 50534  001AE6  0100               	movlb	0	; () banked
 50535  001AE8  51A1               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 50536  001AEA  11A2               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 50537  001AEC  11A3               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 50538  001AEE  B4D8               	btfsc	status,2,c
 50539  001AF0  D00C               	goto	i2u1398_49
 50540                           
 50541                           ; BSR set to: 0
 50542                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 50543  001AF2  D801               	call	i2u1398_48
 50544  001AF4  D00A               	goto	i2u1398_49
 50545  001AF6                     i2u1398_48:
 50546  001AF6  0005               	push	
 50547  001AF8  6EFA               	movwf	pclath,c
 50548  001AFA  51A1               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 50549  001AFC  6EFD               	movwf	tosl,c
 50550  001AFE  51A2               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 50551  001B00  6EFE               	movwf	tosh,c
 50552  001B02  51A3               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 50553  001B04  6EFF               	movwf	tosu,c
 50554  001B06  50FA               	movf	pclath,w,c
 50555  001B08  0012               	return		;indir
 50556  001B0A                     i2u1398_49:
 50557  001B0A  0060  F014  F035   	movff	??_ADCC_ThresholdISR+4,btemp+11
 50558  001B10  0060  F010  F033   	movff	??_ADCC_ThresholdISR+3,btemp+9
 50559  001B16  0060  F00C  F032   	movff	??_ADCC_ThresholdISR+2,btemp+8
 50560  001B1C  0060  F008  F02B   	movff	??_ADCC_ThresholdISR+1,btemp+1
 50561  001B22  0060  F004  F02A   	movff	??_ADCC_ThresholdISR,btemp
 50562  001B28  0011               	retfie		f
 50563  001B2A                     __end_of_ADCC_ThresholdISR:
 50564                           	opt callstack 0
 50565                           
 50566 ;; *************** function _UART1_rx_vect_isr *****************
 50567 ;; Defined at:
 50568 ;;		line 181 in file "mcc_generated_files/uart1.c"
 50569 ;; Parameters:    Size  Location     Type
 50570 ;;		None
 50571 ;; Auto vars:     Size  Location     Type
 50572 ;;		None
 50573 ;; Return value:  Size  Location     Type
 50574 ;;                  1    wreg      void 
 50575 ;; Registers used:
 50576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 50577 ;; Tracked objects:
 50578 ;;		On entry : 0/0
 50579 ;;		On exit  : 0/0
 50580 ;;		Unchanged: 0/0
 50581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50586 ;;Total ram usage:        0 bytes
 50587 ;; Hardware stack levels used:    1
 50588 ;; Hardware stack levels required when called:    1
 50589 ;; This function calls:
 50590 ;;		Absolute function
 50591 ;;		_UART1_Receive_ISR
 50592 ;; This function is called by:
 50593 ;;		Interrupt level 2
 50594 ;; This function uses a non-reentrant model
 50595 ;;
 50596                           
 50597                           	psect	text215
 50598  002B64                     __ptext215:
 50599                           	opt callstack 0
 50600  002B64                     _UART1_rx_vect_isr:
 50601                           	opt callstack 4
 50602                           
 50603                           ;incstack = 0
 50604  002B64  EE14  F32C         	lfsr	1,___inthi_sp
 50605                           
 50606                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 50607  002B68  0100               	movlb	0	; () banked
 50608  002B6A  51A7               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 50609  002B6C  11A8               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 50610  002B6E  11A9               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 50611  002B70  B4D8               	btfsc	status,2,c
 50612  002B72  0011               	retfie		f
 50613                           
 50614                           ; BSR set to: 0
 50615                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 50616  002B74  D801               	call	i2u1400_48
 50617  002B76  0011               	retfie		f
 50618  002B78                     i2u1400_48:
 50619  002B78  0005               	push	
 50620  002B7A  6EFA               	movwf	pclath,c
 50621  002B7C  51A7               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 50622  002B7E  6EFD               	movwf	tosl,c
 50623  002B80  51A8               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 50624  002B82  6EFE               	movwf	tosh,c
 50625  002B84  51A9               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 50626  002B86  6EFF               	movwf	tosu,c
 50627  002B88  50FA               	movf	pclath,w,c
 50628  002B8A  0012               	return		;indir
 50629  002B8C                     __end_of_UART1_rx_vect_isr:
 50630                           	opt callstack 0
 50631                           
 50632 ;; *************** function _UART1_Receive_ISR *****************
 50633 ;; Defined at:
 50634 ;;		line 192 in file "mcc_generated_files/uart1.c"
 50635 ;; Parameters:    Size  Location     Type
 50636 ;;		None
 50637 ;; Auto vars:     Size  Location     Type
 50638 ;;		None
 50639 ;; Return value:  Size  Location     Type
 50640 ;;                  1  [STACK] void 
 50641 ;; Registers used:
 50642 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 50643 ;; Tracked objects:
 50644 ;;		On entry : 3F/0
 50645 ;;		On exit  : 3F/0
 50646 ;;		Unchanged: 0/0
 50647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50652 ;;Total ram usage:        0 bytes
 50653 ;; Hardware stack levels used:    1
 50654 ;; This function calls:
 50655 ;;		Nothing
 50656 ;; This function is called by:
 50657 ;;		_UART1_Initialize
 50658 ;;		_UART1_rx_vect_isr
 50659 ;; This function uses a reentrant model
 50660 ;;
 50661                           
 50662                           	psect	text216
 50663  002D1A                     __ptext216:
 50664                           	opt callstack 0
 50665  002D1A                     _UART1_Receive_ISR:
 50666                           	opt callstack 4
 50667                           
 50668                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 50669                           
 50670                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50671                           ;incstack = 0
 50672  002D1A  0ED6               	movlw	low _uart1RxBuffer
 50673  002D1C  2457               	addwf	_uart1RxHead^0,w,c	;volatile
 50674  002D1E  6ED9               	movwf	fsr2l,c
 50675  002D20  6ADA               	clrf	fsr2h,c
 50676  002D22  0E02               	movlw	high _uart1RxBuffer
 50677  002D24  22DA               	addwfc	fsr2h,f,c
 50678  002D26  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 50679  002D2C  2A57               	incf	_uart1RxHead^0,f,c	;volatile
 50680                           
 50681                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 50682  002D2E  0E07               	movlw	7
 50683  002D30  6457               	cpfsgt	_uart1RxHead^0,c
 50684  002D32  D001               	goto	l14045
 50685                           
 50686                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 50687  002D34  6A57               	clrf	_uart1RxHead^0,c	;volatile
 50688  002D36                     l14045:
 50689                           
 50690                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 50691  002D36  0100               	movlb	0	; () banked
 50692  002D38  2BD0               	incf	_uart1RxCount& (0+255),f,b	;volatile
 50693                           
 50694                           ; BSR set to: 0
 50695                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 50696  002D3A  0012               	return		;funcret
 50697  002D3C                     __end_of_UART1_Receive_ISR:
 50698                           	opt callstack 0
 50699                           
 50700 ;; *************** function _UART2_tx_vect_isr *****************
 50701 ;; Defined at:
 50702 ;;		line 195 in file "mcc_generated_files/uart2.c"
 50703 ;; Parameters:    Size  Location     Type
 50704 ;;		None
 50705 ;; Auto vars:     Size  Location     Type
 50706 ;;		None
 50707 ;; Return value:  Size  Location     Type
 50708 ;;                  1    wreg      void 
 50709 ;; Registers used:
 50710 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 50711 ;; Tracked objects:
 50712 ;;		On entry : 0/0
 50713 ;;		On exit  : 0/0
 50714 ;;		Unchanged: 0/0
 50715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50720 ;;Total ram usage:        0 bytes
 50721 ;; Hardware stack levels used:    1
 50722 ;; Hardware stack levels required when called:    1
 50723 ;; This function calls:
 50724 ;;		Absolute function
 50725 ;;		_UART2_Transmit_ISR
 50726 ;; This function is called by:
 50727 ;;		Interrupt level 2
 50728 ;; This function uses a non-reentrant model
 50729 ;;
 50730                           
 50731                           	psect	text217
 50732  002B8C                     __ptext217:
 50733                           	opt callstack 0
 50734  002B8C                     _UART2_tx_vect_isr:
 50735                           	opt callstack 4
 50736                           
 50737                           ; BSR set to: 0
 50738                           ;incstack = 0
 50739  002B8C  EE14  F32C         	lfsr	1,___inthi_sp
 50740                           
 50741                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 50742  002B90  0100               	movlb	0	; () banked
 50743  002B92  51AA               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 50744  002B94  11AB               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 50745  002B96  11AC               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 50746  002B98  B4D8               	btfsc	status,2,c
 50747  002B9A  0011               	retfie		f
 50748                           
 50749                           ; BSR set to: 0
 50750                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 50751  002B9C  D801               	call	i2u1402_48
 50752  002B9E  0011               	retfie		f
 50753  002BA0                     i2u1402_48:
 50754  002BA0  0005               	push	
 50755  002BA2  6EFA               	movwf	pclath,c
 50756  002BA4  51AA               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 50757  002BA6  6EFD               	movwf	tosl,c
 50758  002BA8  51AB               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 50759  002BAA  6EFE               	movwf	tosh,c
 50760  002BAC  51AC               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 50761  002BAE  6EFF               	movwf	tosu,c
 50762  002BB0  50FA               	movf	pclath,w,c
 50763  002BB2  0012               	return		;indir
 50764  002BB4                     __end_of_UART2_tx_vect_isr:
 50765                           	opt callstack 0
 50766                           
 50767 ;; *************** function _UART2_Transmit_ISR *****************
 50768 ;; Defined at:
 50769 ;;		line 213 in file "mcc_generated_files/uart2.c"
 50770 ;; Parameters:    Size  Location     Type
 50771 ;;		None
 50772 ;; Auto vars:     Size  Location     Type
 50773 ;;		None
 50774 ;; Return value:  Size  Location     Type
 50775 ;;                  1  [STACK] void 
 50776 ;; Registers used:
 50777 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 50778 ;; Tracked objects:
 50779 ;;		On entry : 3F/0
 50780 ;;		On exit  : 3B/39
 50781 ;;		Unchanged: 0/0
 50782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50787 ;;Total ram usage:        0 bytes
 50788 ;; Hardware stack levels used:    1
 50789 ;; This function calls:
 50790 ;;		Nothing
 50791 ;; This function is called by:
 50792 ;;		_UART2_Initialize
 50793 ;;		_UART2_tx_vect_isr
 50794 ;; This function uses a reentrant model
 50795 ;;
 50796                           
 50797                           	psect	text218
 50798  00292C                     __ptext218:
 50799                           	opt callstack 0
 50800  00292C                     _UART2_Transmit_ISR:
 50801                           	opt callstack 4
 50802                           
 50803                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 50804                           
 50805                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50806                           ;incstack = 0
 50807  00292C  0E40               	movlw	64
 50808  00292E  6055               	cpfslt	_uart2TxBufferRemaining^0,c
 50809  002930  D010               	goto	l675
 50810                           
 50811                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 50812  002932  0E00               	movlw	low _uart2TxBuffer
 50813  002934  2456               	addwf	_uart2TxTail^0,w,c	;volatile
 50814  002936  6ED9               	movwf	fsr2l,c
 50815  002938  6ADA               	clrf	fsr2h,c
 50816  00293A  0E04               	movlw	high _uart2TxBuffer
 50817  00293C  22DA               	addwfc	fsr2h,f,c
 50818  00293E  50DF               	movf	indf2,w,c
 50819  002940  013D               	movlb	61	; () banked
 50820  002942  6FD2               	movwf	210,b	;volatile
 50821                           
 50822                           ; BSR set to: 61
 50823  002944  2A56               	incf	_uart2TxTail^0,f,c	;volatile
 50824                           
 50825                           ; BSR set to: 61
 50826                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 50827  002946  0E3F               	movlw	63
 50828  002948  6456               	cpfsgt	_uart2TxTail^0,c
 50829  00294A  D001               	goto	l14057
 50830                           
 50831                           ; BSR set to: 61
 50832                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 50833  00294C  6A56               	clrf	_uart2TxTail^0,c	;volatile
 50834  00294E                     l14057:
 50835                           
 50836                           ; BSR set to: 61
 50837                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 50838  00294E  2A55               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 50839                           
 50840                           ;mcc_generated_files/uart2.c: 224:     }
 50841  002950  0012               	return	
 50842  002952                     l675:
 50843                           
 50844                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 50845  002952  0139               	movlb	57	; () banked
 50846  002954  9796               	bcf	150,3,b	;volatile
 50847                           
 50848                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 50849  002956  0012               	return		;funcret
 50850  002958                     __end_of_UART2_Transmit_ISR:
 50851                           	opt callstack 0
 50852                           
 50853 ;; *************** function _UART2_rx_vect_isr *****************
 50854 ;; Defined at:
 50855 ;;		line 203 in file "mcc_generated_files/uart2.c"
 50856 ;; Parameters:    Size  Location     Type
 50857 ;;		None
 50858 ;; Auto vars:     Size  Location     Type
 50859 ;;		None
 50860 ;; Return value:  Size  Location     Type
 50861 ;;                  1    wreg      void 
 50862 ;; Registers used:
 50863 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 50864 ;; Tracked objects:
 50865 ;;		On entry : 0/0
 50866 ;;		On exit  : 0/0
 50867 ;;		Unchanged: 0/0
 50868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50873 ;;Total ram usage:        0 bytes
 50874 ;; Hardware stack levels used:    1
 50875 ;; Hardware stack levels required when called:    1
 50876 ;; This function calls:
 50877 ;;		Absolute function
 50878 ;;		_UART2_Receive_ISR
 50879 ;; This function is called by:
 50880 ;;		Interrupt level 2
 50881 ;; This function uses a non-reentrant model
 50882 ;;
 50883                           
 50884                           	psect	text219
 50885  002BB4                     __ptext219:
 50886                           	opt callstack 0
 50887  002BB4                     _UART2_rx_vect_isr:
 50888                           	opt callstack 4
 50889                           
 50890                           ;incstack = 0
 50891  002BB4  EE14  F32C         	lfsr	1,___inthi_sp
 50892                           
 50893                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 50894  002BB8  0100               	movlb	0	; () banked
 50895  002BBA  51AD               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 50896  002BBC  11AE               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 50897  002BBE  11AF               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 50898  002BC0  B4D8               	btfsc	status,2,c
 50899  002BC2  0011               	retfie		f
 50900                           
 50901                           ; BSR set to: 0
 50902                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 50903  002BC4  D801               	call	i2u1404_48
 50904  002BC6  0011               	retfie		f
 50905  002BC8                     i2u1404_48:
 50906  002BC8  0005               	push	
 50907  002BCA  6EFA               	movwf	pclath,c
 50908  002BCC  51AD               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 50909  002BCE  6EFD               	movwf	tosl,c
 50910  002BD0  51AE               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 50911  002BD2  6EFE               	movwf	tosh,c
 50912  002BD4  51AF               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 50913  002BD6  6EFF               	movwf	tosu,c
 50914  002BD8  50FA               	movf	pclath,w,c
 50915  002BDA  0012               	return		;indir
 50916  002BDC                     __end_of_UART2_rx_vect_isr:
 50917                           	opt callstack 0
 50918                           
 50919 ;; *************** function _UART2_Receive_ISR *****************
 50920 ;; Defined at:
 50921 ;;		line 233 in file "mcc_generated_files/uart2.c"
 50922 ;; Parameters:    Size  Location     Type
 50923 ;;		None
 50924 ;; Auto vars:     Size  Location     Type
 50925 ;;		None
 50926 ;; Return value:  Size  Location     Type
 50927 ;;                  1  [STACK] void 
 50928 ;; Registers used:
 50929 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 50930 ;; Tracked objects:
 50931 ;;		On entry : 3F/0
 50932 ;;		On exit  : 3F/0
 50933 ;;		Unchanged: 0/0
 50934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50939 ;;Total ram usage:        0 bytes
 50940 ;; Hardware stack levels used:    1
 50941 ;; This function calls:
 50942 ;;		Nothing
 50943 ;; This function is called by:
 50944 ;;		_UART2_Initialize
 50945 ;;		_UART2_rx_vect_isr
 50946 ;; This function uses a reentrant model
 50947 ;;
 50948                           
 50949                           	psect	text220
 50950  002D5C                     __ptext220:
 50951                           	opt callstack 0
 50952  002D5C                     _UART2_Receive_ISR:
 50953                           	opt callstack 4
 50954                           
 50955                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 50956                           
 50957                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50958                           ;incstack = 0
 50959  002D5C  0E00               	movlw	low _uart2RxBuffer
 50960  002D5E  2454               	addwf	_uart2RxHead^0,w,c	;volatile
 50961  002D60  6ED9               	movwf	fsr2l,c
 50962  002D62  6ADA               	clrf	fsr2h,c
 50963  002D64  0E06               	movlw	high _uart2RxBuffer
 50964  002D66  22DA               	addwfc	fsr2h,f,c
 50965  002D68  006F F743 FFDF     	movff	15824,indf2	;volatile
 50966  002D6E  2A54               	incf	_uart2RxHead^0,f,c	;volatile
 50967                           
 50968                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 50969  002D70  2854               	incf	_uart2RxHead^0,w,c
 50970  002D72  B4D8               	btfsc	status,2,c
 50971                           
 50972                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 50973  002D74  6A54               	clrf	_uart2RxHead^0,c	;volatile
 50974                           
 50975                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 50976  002D76  0100               	movlb	0	; () banked
 50977  002D78  2BCD               	incf	_uart2RxCount& (0+255),f,b	;volatile
 50978                           
 50979                           ; BSR set to: 0
 50980                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 50981  002D7A  0012               	return		;funcret
 50982  002D7C                     __end_of_UART2_Receive_ISR:
 50983                           	opt callstack 0
 50984                           
 50985 ;; *************** function _TMR6_ISR *****************
 50986 ;; Defined at:
 50987 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 50988 ;; Parameters:    Size  Location     Type
 50989 ;;		None
 50990 ;; Auto vars:     Size  Location     Type
 50991 ;;		None
 50992 ;; Return value:  Size  Location     Type
 50993 ;;                  1    wreg      void 
 50994 ;; Registers used:
 50995 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 50996 ;; Tracked objects:
 50997 ;;		On entry : 0/0
 50998 ;;		On exit  : 0/0
 50999 ;;		Unchanged: 0/0
 51000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 51001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51003 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51004 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51005 ;;Total ram usage:        1 bytes
 51006 ;; Hardware stack levels used:    1
 51007 ;; Hardware stack levels required when called:    2
 51008 ;; This function calls:
 51009 ;;		_TMR6_CallBack
 51010 ;; This function is called by:
 51011 ;;		Interrupt level 2
 51012 ;; This function uses a non-reentrant model
 51013 ;;
 51014                           
 51015                           	psect	text221
 51016  002E10                     __ptext221:
 51017                           	opt callstack 0
 51018  002E10                     _TMR6_ISR:
 51019                           	opt callstack 3
 51020                           
 51021                           ; BSR set to: 0
 51022                           ;incstack = 0
 51023  002E10  0060  F0A8  F006   	movff	btemp,??_TMR6_ISR
 51024  002E16  EE14  F32C         	lfsr	1,___inthi_sp
 51025                           
 51026                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 51027  002E1A  0139               	movlb	57	; () banked
 51028  002E1C  91A9               	bcf	169,0,b	;volatile
 51029                           
 51030                           ; BSR set to: 57
 51031                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 51032  002E1E  EC48  F016         	call	_TMR6_CallBack	;wreg free
 51033  002E22  0060  F018  F02A   	movff	??_TMR6_ISR,btemp
 51034  002E28  0011               	retfie		f
 51035  002E2A                     __end_of_TMR6_ISR:
 51036                           	opt callstack 0
 51037                           
 51038 ;; *************** function _TMR6_CallBack *****************
 51039 ;; Defined at:
 51040 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 51041 ;; Parameters:    Size  Location     Type
 51042 ;;		None
 51043 ;; Auto vars:     Size  Location     Type
 51044 ;;		None
 51045 ;; Return value:  Size  Location     Type
 51046 ;;                  1  [STACK] void 
 51047 ;; Registers used:
 51048 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 51049 ;; Tracked objects:
 51050 ;;		On entry : 3F/39
 51051 ;;		On exit  : 0/0
 51052 ;;		Unchanged: 0/0
 51053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 51054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51058 ;;Total ram usage:        0 bytes
 51059 ;; Hardware stack levels used:    1
 51060 ;; Hardware stack levels required when called:    1
 51061 ;; This function calls:
 51062 ;;		Absolute function
 51063 ;;		_TMR6_DefaultInterruptHandler
 51064 ;; This function is called by:
 51065 ;;		_TMR6_ISR
 51066 ;; This function uses a reentrant model
 51067 ;;
 51068                           
 51069                           	psect	text222
 51070  002C90                     __ptext222:
 51071                           	opt callstack 0
 51072  002C90                     _TMR6_CallBack:
 51073                           	opt callstack 3
 51074                           
 51075                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 51076                           
 51077                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 51078                           ;incstack = 0
 51079  002C90  0100               	movlb	0	; () banked
 51080  002C92  519E               	movf	_TMR6_InterruptHandler& (0+255),w,b
 51081  002C94  119F               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 51082  002C96  11A0               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 51083  002C98  B4D8               	btfsc	status,2,c
 51084  002C9A  0012               	return	
 51085                           
 51086                           ; BSR set to: 0
 51087                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 51088  002C9C  D801               	call	u1333_48
 51089  002C9E  0012               	return	
 51090  002CA0                     u1333_48:
 51091  002CA0  0005               	push	
 51092  002CA2  6EFA               	movwf	pclath,c
 51093  002CA4  519E               	movf	_TMR6_InterruptHandler& (0+255),w,b
 51094  002CA6  6EFD               	movwf	tosl,c
 51095  002CA8  519F               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 51096  002CAA  6EFE               	movwf	tosh,c
 51097  002CAC  51A0               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 51098  002CAE  6EFF               	movwf	tosu,c
 51099  002CB0  50FA               	movf	pclath,w,c
 51100  002CB2  0012               	return		;indir
 51101  002CB4                     __end_of_TMR6_CallBack:
 51102                           	opt callstack 0
 51103                           
 51104 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 51105 ;; Defined at:
 51106 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 51107 ;; Parameters:    Size  Location     Type
 51108 ;;		None
 51109 ;; Auto vars:     Size  Location     Type
 51110 ;;  i               1  [STACK] unsigned char 
 51111 ;; Return value:  Size  Location     Type
 51112 ;;                  1  [STACK] void 
 51113 ;; Registers used:
 51114 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 51115 ;; Tracked objects:
 51116 ;;		On entry : 3F/0
 51117 ;;		On exit  : 0/0
 51118 ;;		Unchanged: 0/0
 51119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 51120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51124 ;;Total ram usage:        0 bytes
 51125 ;; Hardware stack levels used:    1
 51126 ;; This function calls:
 51127 ;;		Nothing
 51128 ;; This function is called by:
 51129 ;;		_TMR6_Initialize
 51130 ;;		_TMR6_CallBack
 51131 ;; This function uses a reentrant model
 51132 ;;
 51133                           
 51134                           	psect	text223
 51135  00214C                     __ptext223:
 51136                           	opt callstack 0
 51137  00214C                     _TMR6_DefaultInterruptHandler:
 51138                           	opt callstack 0
 51139                           
 51140                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 51141  00214C  52E6               	movf	postinc1,f,c
 51142                           
 51143                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 51144                           ;stkvar	_i @ sp[(-1)+0]
 51145                           
 51146                           ;incstack = 0
 51147  00214E  0EFF               	movlw	-1
 51148  002150  6AE3               	clrf	plusw1,c
 51149  002152                     l13423:
 51150                           
 51151                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 51152                           ;stkvar	_i @ sp[(-1)+0]
 51153  002152  0EFF               	movlw	-1
 51154  002154  50E3               	movf	plusw1,w,c
 51155  002156  0D02               	mullw	2
 51156  002158  0EBC               	movlw	low _tickCount
 51157  00215A  24F3               	addwf	243,w,c
 51158  00215C  6ED9               	movwf	fsr2l,c
 51159  00215E  0E02               	movlw	high _tickCount
 51160  002160  20F4               	addwfc	prodh,w,c
 51161  002162  6EDA               	movwf	fsr2h,c
 51162  002164  50DE               	movf	postinc2,w,c
 51163  002166  10DE               	iorwf	postinc2,w,c
 51164  002168  B4D8               	btfsc	status,2,c
 51165  00216A  D00C               	goto	l13427
 51166                           
 51167                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 51168                           ;stkvar	_i @ sp[(-1)+0]
 51169  00216C  0EFF               	movlw	-1
 51170  00216E  50E3               	movf	plusw1,w,c
 51171  002170  0D02               	mullw	2
 51172  002172  0EBC               	movlw	low _tickCount
 51173  002174  24F3               	addwf	243,w,c
 51174  002176  6ED9               	movwf	fsr2l,c
 51175  002178  0E02               	movlw	high _tickCount
 51176  00217A  20F4               	addwfc	prodh,w,c
 51177  00217C  6EDA               	movwf	fsr2h,c
 51178  00217E  06DE               	decf	postinc2,f,c
 51179  002180  0E00               	movlw	0
 51180  002182  5ADD               	subwfb	postdec2,f,c
 51181  002184                     l13427:
 51182                           
 51183                           ;mcc_generated_files/tmr6.c: 207:  }
 51184                           ;stkvar	_i @ sp[(-1)+0]
 51185  002184  0EFF               	movlw	-1
 51186  002186  2AE3               	incf	plusw1,f,c
 51187                           
 51188                           ;stkvar	_i @ sp[(-1)+0]
 51189  002188  0EFF               	movlw	-1
 51190  00218A  006F FF8C  F02A    	movff	plusw1,btemp
 51191  002190  0E0C               	movlw	12
 51192  002192  642A               	cpfsgt	btemp^0,c
 51193  002194  D7DE               	goto	l13423
 51194                           
 51195                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 51196  002196  52E5               	movf	postdec1,f,c
 51197  002198  0012               	return		;funcret
 51198  00219A                     __end_of_TMR6_DefaultInterruptHandler:
 51199                           	opt callstack 0
 51200                           
 51201 ;; *************** function _DMA1_DMASCNT_ISR *****************
 51202 ;; Defined at:
 51203 ;;		line 126 in file "mcc_generated_files/dma1.c"
 51204 ;; Parameters:    Size  Location     Type
 51205 ;;		None
 51206 ;; Auto vars:     Size  Location     Type
 51207 ;;		None
 51208 ;; Return value:  Size  Location     Type
 51209 ;;                  1    wreg      void 
 51210 ;; Registers used:
 51211 ;;		None
 51212 ;; Tracked objects:
 51213 ;;		On entry : 0/0
 51214 ;;		On exit  : 3F/0
 51215 ;;		Unchanged: 0/0
 51216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 51217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51221 ;;Total ram usage:        0 bytes
 51222 ;; Hardware stack levels used:    1
 51223 ;; This function calls:
 51224 ;;		Nothing
 51225 ;; This function is called by:
 51226 ;;		Interrupt level 2
 51227 ;; This function uses a non-reentrant model
 51228 ;;
 51229                           
 51230                           	psect	text224
 51231  002F74                     __ptext224:
 51232                           	opt callstack 0
 51233  002F74                     _DMA1_DMASCNT_ISR:
 51234                           	opt callstack 5
 51235                           
 51236                           ;incstack = 0
 51237  002F74  EE14  F32C         	lfsr	1,___inthi_sp
 51238                           
 51239                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 51240  002F78  0139               	movlb	57	; () banked
 51241  002F7A  91A2               	bcf	162,0,b	;volatile
 51242                           
 51243                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 51244  002F7C  0100               	movlb	0	; () banked
 51245  002F7E  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 51246                           
 51247                           ; BSR set to: 0
 51248  002F80  0011               	retfie		f
 51249  002F82                     __end_of_DMA1_DMASCNT_ISR:
 51250                           	opt callstack 0
 51251                           
 51252 ;; *************** function _DMA1_DMADCNT_ISR *****************
 51253 ;; Defined at:
 51254 ;;		line 133 in file "mcc_generated_files/dma1.c"
 51255 ;; Parameters:    Size  Location     Type
 51256 ;;		None
 51257 ;; Auto vars:     Size  Location     Type
 51258 ;;		None
 51259 ;; Return value:  Size  Location     Type
 51260 ;;                  1    wreg      void 
 51261 ;; Registers used:
 51262 ;;		None
 51263 ;; Tracked objects:
 51264 ;;		On entry : 0/0
 51265 ;;		On exit  : 3F/39
 51266 ;;		Unchanged: 0/0
 51267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 51268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51272 ;;Total ram usage:        0 bytes
 51273 ;; Hardware stack levels used:    1
 51274 ;; This function calls:
 51275 ;;		Nothing
 51276 ;; This function is called by:
 51277 ;;		Interrupt level 2
 51278 ;; This function uses a non-reentrant model
 51279 ;;
 51280                           
 51281                           	psect	text225
 51282  002F98                     __ptext225:
 51283                           	opt callstack 0
 51284  002F98                     _DMA1_DMADCNT_ISR:
 51285                           	opt callstack 5
 51286                           
 51287                           ; BSR set to: 0
 51288                           ;incstack = 0
 51289  002F98  EE14  F32C         	lfsr	1,___inthi_sp
 51290                           
 51291                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 51292  002F9C  0139               	movlb	57	; () banked
 51293  002F9E  93A2               	bcf	162,1,b	;volatile
 51294                           
 51295                           ; BSR set to: 57
 51296  002FA0  0011               	retfie		f
 51297  002FA2                     __end_of_DMA1_DMADCNT_ISR:
 51298                           	opt callstack 0
 51299                           
 51300 ;; *************** function _DMA1_DMAA_ISR *****************
 51301 ;; Defined at:
 51302 ;;		line 143 in file "mcc_generated_files/dma1.c"
 51303 ;; Parameters:    Size  Location     Type
 51304 ;;		None
 51305 ;; Auto vars:     Size  Location     Type
 51306 ;;		None
 51307 ;; Return value:  Size  Location     Type
 51308 ;;                  1    wreg      void 
 51309 ;; Registers used:
 51310 ;;		None
 51311 ;; Tracked objects:
 51312 ;;		On entry : 0/0
 51313 ;;		On exit  : 3F/39
 51314 ;;		Unchanged: 0/0
 51315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 51316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51320 ;;Total ram usage:        0 bytes
 51321 ;; Hardware stack levels used:    1
 51322 ;; This function calls:
 51323 ;;		Nothing
 51324 ;; This function is called by:
 51325 ;;		Interrupt level 2
 51326 ;; This function uses a non-reentrant model
 51327 ;;
 51328                           
 51329                           	psect	text226
 51330  002FA4                     __ptext226:
 51331                           	opt callstack 0
 51332  002FA4                     _DMA1_DMAA_ISR:
 51333                           	opt callstack 5
 51334                           
 51335                           ; BSR set to: 57
 51336                           ;incstack = 0
 51337  002FA4  EE14  F32C         	lfsr	1,___inthi_sp
 51338                           
 51339                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 51340  002FA8  0139               	movlb	57	; () banked
 51341  002FAA  97A2               	bcf	162,3,b	;volatile
 51342                           
 51343                           ; BSR set to: 57
 51344  002FAC  0011               	retfie		f
 51345  002FAE                     __end_of_DMA1_DMAA_ISR:
 51346                           	opt callstack 0
 51347                           
 51348 ;; *************** function _DMA1_DMAOR_ISR *****************
 51349 ;; Defined at:
 51350 ;;		line 154 in file "mcc_generated_files/dma1.c"
 51351 ;; Parameters:    Size  Location     Type
 51352 ;;		None
 51353 ;; Auto vars:     Size  Location     Type
 51354 ;;		None
 51355 ;; Return value:  Size  Location     Type
 51356 ;;                  1    wreg      void 
 51357 ;; Registers used:
 51358 ;;		None
 51359 ;; Tracked objects:
 51360 ;;		On entry : 0/0
 51361 ;;		On exit  : 3F/39
 51362 ;;		Unchanged: 0/0
 51363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 51364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51368 ;;Total ram usage:        0 bytes
 51369 ;; Hardware stack levels used:    1
 51370 ;; This function calls:
 51371 ;;		Nothing
 51372 ;; This function is called by:
 51373 ;;		Interrupt level 2
 51374 ;; This function uses a non-reentrant model
 51375 ;;
 51376                           
 51377                           	psect	text227
 51378  002FB0                     __ptext227:
 51379                           	opt callstack 0
 51380  002FB0                     _DMA1_DMAOR_ISR:
 51381                           	opt callstack 5
 51382                           
 51383                           ; BSR set to: 57
 51384                           ;incstack = 0
 51385  002FB0  EE14  F32C         	lfsr	1,___inthi_sp
 51386                           
 51387                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 51388  002FB4  0139               	movlb	57	; () banked
 51389  002FB6  95A2               	bcf	162,2,b	;volatile
 51390                           
 51391                           ; BSR set to: 57
 51392  002FB8  0011               	retfie		f
 51393  002FBA                     __end_of_DMA1_DMAOR_ISR:
 51394                           	opt callstack 0
 51395                           
 51396                           ;
 51397                           ; Interrupt Vector Table @ 0x8
 51398                           ;
 51399                           
 51400                           	psect	ivt0x8
 51401  000008                     __pivt0x8:
 51402                           	opt callstack 0
 51403  000008                     ivt0x8_base:
 51404                           	opt callstack 0
 51405                           
 51406                           ; Vector 0 : SWINT
 51407  000008  0C02               	dw	_Default_ISR shr (0+2)
 51408                           
 51409                           ; Vector 1 : HLVD
 51410  00000A  0C02               	dw	_Default_ISR shr (0+2)
 51411                           
 51412                           ; Vector 2 : OSF
 51413  00000C  0C02               	dw	_Default_ISR shr (0+2)
 51414                           
 51415                           ; Vector 3 : CSW
 51416  00000E  0C02               	dw	_Default_ISR shr (0+2)
 51417                           
 51418                           ; Vector 4 : NVM
 51419  000010  0C02               	dw	_Default_ISR shr (0+2)
 51420                           
 51421                           ; Vector 5 : SCAN
 51422  000012  0C02               	dw	_Default_ISR shr (0+2)
 51423                           
 51424                           ; Vector 6 : CRC
 51425  000014  0C02               	dw	_Default_ISR shr (0+2)
 51426                           
 51427                           ; Vector 7 : IOC
 51428  000016  0C02               	dw	_Default_ISR shr (0+2)
 51429                           
 51430                           ; Vector 8 : INT0
 51431  000018  0BD9               	dw	_INT0_ISR shr (0+2)
 51432                           
 51433                           ; Vector 9 : ZCD
 51434  00001A  0C02               	dw	_Default_ISR shr (0+2)
 51435                           
 51436                           ; Vector 10 : AD
 51437  00001C  0A40               	dw	_ADCC_ISR shr (0+2)
 51438                           
 51439                           ; Vector 11 : ADT
 51440  00001E  06B0               	dw	_ADCC_ThresholdISR shr (0+2)
 51441                           
 51442                           ; Vector 12 : CMP1
 51443  000020  0C02               	dw	_Default_ISR shr (0+2)
 51444                           
 51445                           ; Vector 13 : SMT1
 51446  000022  0C02               	dw	_Default_ISR shr (0+2)
 51447                           
 51448                           ; Vector 14 : SMT1PRA
 51449  000024  0C02               	dw	_Default_ISR shr (0+2)
 51450                           
 51451                           ; Vector 15 : SMT1PRW
 51452  000026  0C02               	dw	_Default_ISR shr (0+2)
 51453                           
 51454                           ; Vector 16 : DMA1SCNT
 51455  000028  0BDD               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 51456                           
 51457                           ; Vector 17 : DMA1DCNT
 51458  00002A  0BE6               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 51459                           
 51460                           ; Vector 18 : DMA1OR
 51461  00002C  0BEC               	dw	_DMA1_DMAOR_ISR shr (0+2)
 51462                           
 51463                           ; Vector 19 : DMA1A
 51464  00002E  0BE9               	dw	_DMA1_DMAA_ISR shr (0+2)
 51465                           
 51466                           ; Vector 20 : SPI1RX
 51467  000030  0C02               	dw	_Default_ISR shr (0+2)
 51468                           
 51469                           ; Vector 21 : SPI1TX
 51470  000032  0C02               	dw	_Default_ISR shr (0+2)
 51471                           
 51472                           ; Vector 22 : SPI1
 51473  000034  0C02               	dw	_Default_ISR shr (0+2)
 51474                           
 51475                           ; Vector 23 : I2C1RX
 51476  000036  0C02               	dw	_Default_ISR shr (0+2)
 51477                           
 51478                           ; Vector 24 : I2C1TX
 51479  000038  0C02               	dw	_Default_ISR shr (0+2)
 51480                           
 51481                           ; Vector 25 : I2C1
 51482  00003A  0C02               	dw	_Default_ISR shr (0+2)
 51483                           
 51484                           ; Vector 26 : I2C1E
 51485  00003C  0C02               	dw	_Default_ISR shr (0+2)
 51486                           
 51487                           ; Vector 27 : U1RX
 51488  00003E  0AD9               	dw	_UART1_rx_vect_isr shr (0+2)
 51489                           
 51490                           ; Vector 28 : U1TX
 51491  000040  0C02               	dw	_Default_ISR shr (0+2)
 51492                           
 51493                           ; Vector 29 : U1E
 51494  000042  0C02               	dw	_Default_ISR shr (0+2)
 51495                           
 51496                           ; Vector 30 : U1
 51497  000044  0C02               	dw	_Default_ISR shr (0+2)
 51498                           
 51499                           ; Vector 31 : TMR0
 51500  000046  0C02               	dw	_Default_ISR shr (0+2)
 51501                           
 51502                           ; Vector 32 : TMR1
 51503  000048  0C02               	dw	_Default_ISR shr (0+2)
 51504                           
 51505                           ; Vector 33 : TMR1G
 51506  00004A  0C02               	dw	_Default_ISR shr (0+2)
 51507                           
 51508                           ; Vector 34 : TMR2
 51509  00004C  0C02               	dw	_Default_ISR shr (0+2)
 51510                           
 51511                           ; Vector 35 : CCP1
 51512  00004E  0C02               	dw	_Default_ISR shr (0+2)
 51513                           
 51514                           ; Vector 36 : Undefined
 51515  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 51516                           
 51517                           ; Vector 37 : NCO1
 51518  000052  0C02               	dw	_Default_ISR shr (0+2)
 51519                           
 51520                           ; Vector 38 : CWG1
 51521  000054  0C02               	dw	_Default_ISR shr (0+2)
 51522                           
 51523                           ; Vector 39 : CLC1
 51524  000056  0C02               	dw	_Default_ISR shr (0+2)
 51525                           
 51526                           ; Vector 40 : INT1
 51527  000058  0955               	dw	_INT1_ISR shr (0+2)
 51528                           
 51529                           ; Vector 41 : CMP2
 51530  00005A  0C02               	dw	_Default_ISR shr (0+2)
 51531                           
 51532                           ; Vector 42 : DMA2SCNT
 51533  00005C  0C02               	dw	_Default_ISR shr (0+2)
 51534                           
 51535                           ; Vector 43 : DMA2DCNT
 51536  00005E  0C02               	dw	_Default_ISR shr (0+2)
 51537                           
 51538                           ; Vector 44 : DMA2OR
 51539  000060  0C02               	dw	_Default_ISR shr (0+2)
 51540                           
 51541                           ; Vector 45 : DMA2A
 51542  000062  0C02               	dw	_Default_ISR shr (0+2)
 51543                           
 51544                           ; Vector 46 : I2C2RX
 51545  000064  0C02               	dw	_Default_ISR shr (0+2)
 51546                           
 51547                           ; Vector 47 : I2C2TX
 51548  000066  0C02               	dw	_Default_ISR shr (0+2)
 51549                           
 51550                           ; Vector 48 : I2C2
 51551  000068  0C02               	dw	_Default_ISR shr (0+2)
 51552                           
 51553                           ; Vector 49 : I2C2E
 51554  00006A  0C02               	dw	_Default_ISR shr (0+2)
 51555                           
 51556                           ; Vector 50 : U2RX
 51557  00006C  0AED               	dw	_UART2_rx_vect_isr shr (0+2)
 51558                           
 51559                           ; Vector 51 : U2TX
 51560  00006E  0AE3               	dw	_UART2_tx_vect_isr shr (0+2)
 51561                           
 51562                           ; Vector 52 : U2E
 51563  000070  0C02               	dw	_Default_ISR shr (0+2)
 51564                           
 51565                           ; Vector 53 : U2
 51566  000072  0C02               	dw	_Default_ISR shr (0+2)
 51567                           
 51568                           ; Vector 54 : TMR3
 51569  000074  7BCD               	dw	_TMR3_ISR shr (0+2)
 51570                           
 51571                           ; Vector 55 : TMR3G
 51572  000076  0C02               	dw	_Default_ISR shr (0+2)
 51573                           
 51574                           ; Vector 56 : TMR4
 51575  000078  0C02               	dw	_Default_ISR shr (0+2)
 51576                           
 51577                           ; Vector 57 : CCP2
 51578  00007A  0C02               	dw	_Default_ISR shr (0+2)
 51579                           
 51580                           ; Vector 58 : Undefined
 51581  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 51582                           
 51583                           ; Vector 59 : CWG2
 51584  00007E  0C02               	dw	_Default_ISR shr (0+2)
 51585                           
 51586                           ; Vector 60 : CLC2
 51587  000080  0C02               	dw	_Default_ISR shr (0+2)
 51588                           
 51589                           ; Vector 61 : INT2
 51590  000082  0C02               	dw	_Default_ISR shr (0+2)
 51591                           
 51592                           ; Vector 62 : Undefined
 51593  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 51594                           
 51595                           ; Vector 63 : Undefined
 51596  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 51597                           
 51598                           ; Vector 64 : Undefined
 51599  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 51600                           
 51601                           ; Vector 65 : Undefined
 51602  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 51603                           
 51604                           ; Vector 66 : Undefined
 51605  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 51606                           
 51607                           ; Vector 67 : Undefined
 51608  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 51609                           
 51610                           ; Vector 68 : Undefined
 51611  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 51612                           
 51613                           ; Vector 69 : Undefined
 51614  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 51615                           
 51616                           ; Vector 70 : TMR5
 51617  000094  780A               	dw	_TMR5_ISR shr (0+2)
 51618                           
 51619                           ; Vector 71 : TMR5G
 51620  000096  0C02               	dw	_Default_ISR shr (0+2)
 51621                           
 51622                           ; Vector 72 : TMR6
 51623  000098  0B84               	dw	_TMR6_ISR shr (0+2)
 51624                           
 51625                           ; Vector 73 : CCP3
 51626  00009A  0C02               	dw	_Default_ISR shr (0+2)
 51627                           
 51628                           ; Vector 74 : CWG3
 51629  00009C  0C02               	dw	_Default_ISR shr (0+2)
 51630                           
 51631                           ; Vector 75 : CLC3
 51632  00009E  0C02               	dw	_Default_ISR shr (0+2)
 51633                           
 51634                           ; Vector 76 : Undefined
 51635  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 51636                           
 51637                           ; Vector 77 : Undefined
 51638  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 51639                           
 51640                           ; Vector 78 : Undefined
 51641  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 51642                           
 51643                           ; Vector 79 : Undefined
 51644  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 51645                           
 51646                           ; Vector 80 : CCP4
 51647  0000A8  0C02               	dw	_Default_ISR shr (0+2)
 51648                           
 51649                           ; Vector 81 : CLC4
 51650  0000AA  0C02               	dw	_Default_ISR shr (0+2)
 51651  0000AC                     ivt0x8_undefint:
 51652                           	opt callstack 0
 51653  0000AC  00FF               	reset	
 51654                           
 51655                           	psect	text228
 51656  000000                     __ptext228:
 51657                           	opt callstack 0
 51658                           
 51659                           	psect	rparam
 51660  0000                     
 51661                           	psect	temp
 51662  00002A                     btemp:
 51663                           	opt callstack 0
 51664  00002A                     	ds	32
 51665  0000                     wtemp0	set	btemp
 51666  0000                     wtemp1	set	btemp+2
 51667  0000                     wtemp2	set	btemp+4
 51668  0000                     wtemp3	set	btemp+6
 51669  0000                     wtemp4	set	btemp+8
 51670  0000                     wtemp5	set	btemp+10
 51671  0000                     wtemp8	set	btemp+1
 51672  0000                     ttemp0	set	btemp
 51673  0000                     ttemp1	set	btemp+3
 51674  0000                     ttemp2	set	btemp+6
 51675  0000                     ttemp3	set	btemp+9
 51676  0000                     ttemp5	set	btemp+1
 51677  0000                     ttemp6	set	btemp+4
 51678  0000                     ttemp7	set	btemp+8
 51679  0000                     ltemp0	set	btemp
 51680  0000                     ltemp1	set	btemp+4
 51681  0000                     ltemp2	set	btemp+8
 51682  0000                     lltemp0	set	btemp
 51683  0000                     lltemp1	set	btemp+8
 51684  0000                     lltemp2	set	btemp+16
 51685  0000                     lltemp3	set	btemp+24
 51686                           tosu	equ	0x3FFF
 51687                           tosh	equ	0x3FFE
 51688                           tosl	equ	0x3FFD
 51689                           stkptr	equ	0x3FFC
 51690                           pclatu	equ	0x3FFB
 51691                           pclath	equ	0x3FFA
 51692                           pcl	equ	0x3FF9
 51693                           tblptru	equ	0x3FF8
 51694                           tblptrh	equ	0x3FF7
 51695                           tblptrl	equ	0x3FF6
 51696                           tablat	equ	0x3FF5
 51697                           prodh	equ	0x3FF4
 51698                           prodl	equ	0x3FF3
 51699                           indf0	equ	0x3FEF
 51700                           postinc0	equ	0x3FEE
 51701                           postdec0	equ	0x3FED
 51702                           preinc0	equ	0x3FEC
 51703                           plusw0	equ	0x3FEB
 51704                           fsr0h	equ	0x3FEA
 51705                           fsr0l	equ	0x3FE9
 51706                           wreg	equ	0x3FE8
 51707                           indf1	equ	0x3FE7
 51708                           postinc1	equ	0x3FE6
 51709                           postdec1	equ	0x3FE5
 51710                           preinc1	equ	0x3FE4
 51711                           plusw1	equ	0x3FE3
 51712                           fsr1h	equ	0x3FE2
 51713                           fsr1l	equ	0x3FE1
 51714                           bsr	equ	0x3FE0
 51715                           indf2	equ	0x3FDF
 51716                           postinc2	equ	0x3FDE
 51717                           postdec2	equ	0x3FDD
 51718                           preinc2	equ	0x3FDC
 51719                           plusw2	equ	0x3FDB
 51720                           fsr2h	equ	0x3FDA
 51721                           fsr2l	equ	0x3FD9
 51722                           status	equ	0x3FD8


Data Sizes:
    Strings     1692
    Constant    588
    Data        1184
    BSS         1775
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     41      55
    BANK0           160     25     158
    BANK1           256      0     253
    BANK2           256      0     230
    BANK3           256      0     247
    BANK4           256      0     219
    BANK5           256      0     134
    BANK6           256      0     255
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_142(CODE[1]), STR_102(CODE[1]), 

    is_leap	PTR int  size(2) Largest target is 2
		 -> F5(STACK[2]), is_leap(STACK[2]), NULL(NULL[0]), 

    sp____tm_to_tzname	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_143(CODE[1]), 

    abbrevs_end	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    oppoff	PTR long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    zonename	PTR PTR const unsigned char  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    offset	PTR long  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    isdst	PTR int  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    rule	PTR const int  size(2) Largest target is 10
		 -> r1(BANK1[10]), r0(BANK1[10]), 

    abbrevs	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    types	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    alt	PTR unsigned int  size(2) Largest target is 2
		 -> alt(STACK[2]), 

    index	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    zi	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    trans	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 4
		 -> __gmt(CODE[4]), 

    z	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    d	PTR unsigned char  size(2) Largest target is 7
		 -> dst_name(BANK1[7]), std_name(BANK1[7]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    rule	PTR int  size(2) Largest target is 10
		 -> r1(BANK1[10]), r0(BANK1[10]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    old_tz	PTR unsigned char  size(2) Largest target is 32
		 -> old_tz_buf(BANK3[32]), 

    __tzname	PTR unsigned char [2] size(2) Largest target is 7
		 -> dst_name(BANK1[7]), std_name(BANK1[7]), NULL(NULL[0]), 

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tm	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_137(CODE[3]), STR_133(CODE[3]), STR_128(CODE[3]), STR_123(CODE[3]), 
		 -> STR_118(CODE[3]), STR_114(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_137(CODE[3]), STR_133(CODE[3]), STR_128(CODE[3]), STR_123(CODE[3]), 
		 -> STR_118(CODE[3]), STR_114(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_103(CODE[127]), STR_101(CODE[3]), STR_100(CODE[3]), 
		 -> STR_99(CODE[21]), STR_98(CODE[21]), STR_97(CODE[21]), STR_96(CODE[21]), 
		 -> STR_95(CODE[21]), STR_94(CODE[21]), STR_93(CODE[26]), STR_92(CODE[15]), 
		 -> STR_91(CODE[15]), STR_90(CODE[15]), STR_89(CODE[15]), STR_88(CODE[10]), 
		 -> STR_87(CODE[10]), STR_86(CODE[19]), STR_85(CODE[19]), STR_82(CODE[3]), 
		 -> STR_81(CODE[14]), STR_80(CODE[28]), STR_79(CODE[28]), STR_78(CODE[28]), 
		 -> STR_77(CODE[22]), STR_76(CODE[22]), STR_75(CODE[22]), STR_74(CODE[22]), 
		 -> STR_73(CODE[22]), STR_72(CODE[22]), STR_71(CODE[22]), STR_70(CODE[22]), 
		 -> STR_69(CODE[22]), STR_68(CODE[19]), STR_67(CODE[21]), STR_66(CODE[21]), 
		 -> STR_65(CODE[21]), STR_64(CODE[22]), STR_63(CODE[22]), STR_62(CODE[22]), 
		 -> STR_61(CODE[22]), STR_60(CODE[22]), STR_59(CODE[22]), STR_58(CODE[22]), 
		 -> STR_57(CODE[22]), STR_56(CODE[22]), STR_55(CODE[21]), STR_54(CODE[22]), 
		 -> STR_53(CODE[22]), STR_52(CODE[22]), STR_51(CODE[22]), STR_50(CODE[22]), 
		 -> STR_49(CODE[22]), STR_48(CODE[24]), STR_47(CODE[24]), STR_46(CODE[24]), 
		 -> STR_45(CODE[30]), STR_44(CODE[24]), STR_43(CODE[24]), STR_42(CODE[23]), 
		 -> STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[23]), STR_32(CODE[23]), STR_31(CODE[23]), STR_30(CODE[18]), 
		 -> STR_29(CODE[17]), STR_28(CODE[17]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[14]), STR_23(CODE[27]), STR_22(CODE[27]), 
		 -> STR_21(CODE[23]), STR_20(CODE[22]), STR_19(CODE[22]), STR_18(CODE[22]), 
		 -> STR_17(CODE[22]), STR_16(CODE[23]), STR_15(CODE[23]), STR_14(CODE[23]), 
		 -> STR_13(CODE[26]), STR_12(CODE[22]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_103(CODE[127]), STR_101(CODE[3]), STR_100(CODE[3]), 
		 -> STR_99(CODE[21]), STR_98(CODE[21]), STR_97(CODE[21]), STR_96(CODE[21]), 
		 -> STR_95(CODE[21]), STR_94(CODE[21]), STR_93(CODE[26]), STR_92(CODE[15]), 
		 -> STR_91(CODE[15]), STR_90(CODE[15]), STR_89(CODE[15]), STR_88(CODE[10]), 
		 -> STR_87(CODE[10]), STR_86(CODE[19]), STR_85(CODE[19]), STR_82(CODE[3]), 
		 -> STR_81(CODE[14]), STR_80(CODE[28]), STR_79(CODE[28]), STR_78(CODE[28]), 
		 -> STR_77(CODE[22]), STR_76(CODE[22]), STR_75(CODE[22]), STR_74(CODE[22]), 
		 -> STR_73(CODE[22]), STR_72(CODE[22]), STR_71(CODE[22]), STR_70(CODE[22]), 
		 -> STR_69(CODE[22]), STR_68(CODE[19]), STR_67(CODE[21]), STR_66(CODE[21]), 
		 -> STR_65(CODE[21]), STR_64(CODE[22]), STR_63(CODE[22]), STR_62(CODE[22]), 
		 -> STR_61(CODE[22]), STR_60(CODE[22]), STR_59(CODE[22]), STR_58(CODE[22]), 
		 -> STR_57(CODE[22]), STR_56(CODE[22]), STR_55(CODE[21]), STR_54(CODE[22]), 
		 -> STR_53(CODE[22]), STR_52(CODE[22]), STR_51(CODE[22]), STR_50(CODE[22]), 
		 -> STR_49(CODE[22]), STR_48(CODE[24]), STR_47(CODE[24]), STR_46(CODE[24]), 
		 -> STR_45(CODE[30]), STR_44(CODE[24]), STR_43(CODE[24]), STR_42(CODE[23]), 
		 -> STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[23]), STR_32(CODE[23]), STR_31(CODE[23]), STR_30(CODE[18]), 
		 -> STR_29(CODE[17]), STR_28(CODE[17]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[14]), STR_23(CODE[27]), STR_22(CODE[27]), 
		 -> STR_21(CODE[23]), STR_20(CODE[22]), STR_19(CODE[22]), STR_18(CODE[22]), 
		 -> STR_17(CODE[22]), STR_16(CODE[23]), STR_15(CODE[23]), STR_14(CODE[23]), 
		 -> STR_13(CODE[26]), STR_12(CODE[22]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 642
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> dbuf(BANK3[80]), spin(CODE[120]), STR_84(CODE[9]), STR_83(CODE[12]), 
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), port_data(BIGRAM[512]), 
		 -> cp(STACK[4]), cb(STACK[4]), STR_3(CODE[5]), V(BANK2[181]), 

    a	PTR const unsigned char  size(2) Largest target is 642
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> dbuf(BANK3[80]), spin(CODE[120]), STR_84(CODE[9]), STR_83(CODE[12]), 
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), port_data(BIGRAM[512]), 
		 -> cp(STACK[4]), cb(STACK[4]), STR_3(CODE[5]), V(BANK2[181]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_109(CODE[4]), STR_108(CODE[4]), STR_105(CODE[4]), STR_104(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_109(CODE[4]), STR_108(CODE[4]), STR_105(CODE[4]), STR_104(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_82(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_103(CODE[127]), STR_101(CODE[3]), STR_100(CODE[3]), STR_99(CODE[21]), 
		 -> STR_98(CODE[21]), STR_97(CODE[21]), STR_96(CODE[21]), STR_95(CODE[21]), 
		 -> STR_94(CODE[21]), STR_93(CODE[26]), STR_92(CODE[15]), STR_91(CODE[15]), 
		 -> STR_90(CODE[15]), STR_89(CODE[15]), STR_88(CODE[10]), STR_87(CODE[10]), 
		 -> STR_86(CODE[19]), STR_85(CODE[19]), STR_81(CODE[14]), STR_80(CODE[28]), 
		 -> STR_79(CODE[28]), STR_78(CODE[28]), STR_77(CODE[22]), STR_76(CODE[22]), 
		 -> STR_75(CODE[22]), STR_74(CODE[22]), STR_73(CODE[22]), STR_72(CODE[22]), 
		 -> STR_71(CODE[22]), STR_70(CODE[22]), STR_69(CODE[22]), STR_68(CODE[19]), 
		 -> STR_67(CODE[21]), STR_66(CODE[21]), STR_65(CODE[21]), STR_64(CODE[22]), 
		 -> STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), STR_60(CODE[22]), 
		 -> STR_59(CODE[22]), STR_58(CODE[22]), STR_57(CODE[22]), STR_56(CODE[22]), 
		 -> STR_55(CODE[21]), STR_54(CODE[22]), STR_53(CODE[22]), STR_52(CODE[22]), 
		 -> STR_51(CODE[22]), STR_50(CODE[22]), STR_49(CODE[22]), STR_48(CODE[24]), 
		 -> STR_47(CODE[24]), STR_46(CODE[24]), STR_45(CODE[30]), STR_44(CODE[24]), 
		 -> STR_43(CODE[24]), STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), 
		 -> STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[23]), 
		 -> STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[23]), STR_32(CODE[23]), 
		 -> STR_31(CODE[23]), STR_30(CODE[18]), STR_29(CODE[17]), STR_28(CODE[17]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[14]), 
		 -> STR_23(CODE[27]), STR_22(CODE[27]), STR_21(CODE[23]), STR_20(CODE[22]), 
		 -> STR_19(CODE[22]), STR_18(CODE[22]), STR_17(CODE[22]), STR_16(CODE[23]), 
		 -> STR_15(CODE[23]), STR_14(CODE[23]), STR_13(CODE[26]), STR_12(CODE[22]), 
		 -> STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S7410_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    sp____localtime_r.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tm	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    t	PTR const long long  size(1) Largest target is 8
		 -> pclock(BANK0[8]), 

    sp__localtime.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    sp____localtime_r	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    t	PTR const long long  size(1) Largest target is 8
		 -> pclock(BANK0[8]), 

    F191.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    s	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_103(CODE[127]), STR_101(CODE[3]), STR_100(CODE[3]), STR_99(CODE[21]), 
		 -> STR_98(CODE[21]), STR_97(CODE[21]), STR_96(CODE[21]), STR_95(CODE[21]), 
		 -> STR_94(CODE[21]), STR_93(CODE[26]), STR_92(CODE[15]), STR_91(CODE[15]), 
		 -> STR_90(CODE[15]), STR_89(CODE[15]), STR_88(CODE[10]), STR_87(CODE[10]), 
		 -> STR_86(CODE[19]), STR_85(CODE[19]), STR_82(CODE[3]), STR_81(CODE[14]), 
		 -> STR_80(CODE[28]), STR_79(CODE[28]), STR_78(CODE[28]), STR_77(CODE[22]), 
		 -> STR_76(CODE[22]), STR_75(CODE[22]), STR_74(CODE[22]), STR_73(CODE[22]), 
		 -> STR_72(CODE[22]), STR_71(CODE[22]), STR_70(CODE[22]), STR_69(CODE[22]), 
		 -> STR_68(CODE[19]), STR_67(CODE[21]), STR_66(CODE[21]), STR_65(CODE[21]), 
		 -> STR_64(CODE[22]), STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), 
		 -> STR_60(CODE[22]), STR_59(CODE[22]), STR_58(CODE[22]), STR_57(CODE[22]), 
		 -> STR_56(CODE[22]), STR_55(CODE[21]), STR_54(CODE[22]), STR_53(CODE[22]), 
		 -> STR_52(CODE[22]), STR_51(CODE[22]), STR_50(CODE[22]), STR_49(CODE[22]), 
		 -> STR_48(CODE[24]), STR_47(CODE[24]), STR_46(CODE[24]), STR_45(CODE[30]), 
		 -> STR_44(CODE[24]), STR_43(CODE[24]), STR_42(CODE[23]), STR_41(CODE[23]), 
		 -> STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[23]), STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[23]), 
		 -> STR_32(CODE[23]), STR_31(CODE[23]), STR_30(CODE[18]), STR_29(CODE[17]), 
		 -> STR_28(CODE[17]), STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), 
		 -> STR_24(CODE[14]), STR_23(CODE[27]), STR_22(CODE[27]), STR_21(CODE[23]), 
		 -> STR_20(CODE[22]), STR_19(CODE[22]), STR_18(CODE[22]), STR_17(CODE[22]), 
		 -> STR_16(CODE[23]), STR_15(CODE[23]), STR_14(CODE[23]), STR_13(CODE[26]), 
		 -> STR_12(CODE[22]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    tim.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tim	PTR const struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_141(CODE[37]), STR_140(CODE[22]), 

    cp	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    f1p	PTR  size(2) Largest target is 320
		 -> C(BIGRAM[320]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_103(CODE[127]), STR_101(CODE[3]), STR_100(CODE[3]), STR_99(CODE[21]), 
		 -> STR_98(CODE[21]), STR_97(CODE[21]), STR_96(CODE[21]), STR_95(CODE[21]), 
		 -> STR_94(CODE[21]), STR_93(CODE[26]), STR_92(CODE[15]), STR_91(CODE[15]), 
		 -> STR_90(CODE[15]), STR_89(CODE[15]), STR_88(CODE[10]), STR_87(CODE[10]), 
		 -> STR_86(CODE[19]), STR_85(CODE[19]), STR_82(CODE[3]), STR_81(CODE[14]), 
		 -> STR_80(CODE[28]), STR_79(CODE[28]), STR_78(CODE[28]), STR_77(CODE[22]), 
		 -> STR_76(CODE[22]), STR_75(CODE[22]), STR_74(CODE[22]), STR_73(CODE[22]), 
		 -> STR_72(CODE[22]), STR_71(CODE[22]), STR_70(CODE[22]), STR_69(CODE[22]), 
		 -> STR_68(CODE[19]), STR_67(CODE[21]), STR_66(CODE[21]), STR_65(CODE[21]), 
		 -> STR_64(CODE[22]), STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), 
		 -> STR_60(CODE[22]), STR_59(CODE[22]), STR_58(CODE[22]), STR_57(CODE[22]), 
		 -> STR_56(CODE[22]), STR_55(CODE[21]), STR_54(CODE[22]), STR_53(CODE[22]), 
		 -> STR_52(CODE[22]), STR_51(CODE[22]), STR_50(CODE[22]), STR_49(CODE[22]), 
		 -> STR_48(CODE[24]), STR_47(CODE[24]), STR_46(CODE[24]), STR_45(CODE[30]), 
		 -> STR_44(CODE[24]), STR_43(CODE[24]), STR_42(CODE[23]), STR_41(CODE[23]), 
		 -> STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[23]), STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[23]), 
		 -> STR_32(CODE[23]), STR_31(CODE[23]), STR_30(CODE[18]), STR_29(CODE[17]), 
		 -> STR_28(CODE[17]), STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), 
		 -> STR_24(CODE[14]), STR_23(CODE[27]), STR_22(CODE[27]), STR_21(CODE[23]), 
		 -> STR_20(CODE[22]), STR_19(CODE[22]), STR_18(CODE[22]), STR_17(CODE[22]), 
		 -> STR_16(CODE[23]), STR_15(CODE[23]), STR_14(CODE[23]), STR_13(CODE[26]), 
		 -> STR_12(CODE[22]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 127
		 -> STR_103(CODE[127]), STR_101(CODE[3]), STR_100(CODE[3]), STR_99(CODE[21]), 
		 -> STR_98(CODE[21]), STR_97(CODE[21]), STR_96(CODE[21]), STR_95(CODE[21]), 
		 -> STR_94(CODE[21]), STR_93(CODE[26]), STR_92(CODE[15]), STR_91(CODE[15]), 
		 -> STR_90(CODE[15]), STR_89(CODE[15]), STR_88(CODE[10]), STR_87(CODE[10]), 
		 -> STR_86(CODE[19]), STR_85(CODE[19]), STR_82(CODE[3]), STR_81(CODE[14]), 
		 -> STR_80(CODE[28]), STR_79(CODE[28]), STR_78(CODE[28]), STR_77(CODE[22]), 
		 -> STR_76(CODE[22]), STR_75(CODE[22]), STR_74(CODE[22]), STR_73(CODE[22]), 
		 -> STR_72(CODE[22]), STR_71(CODE[22]), STR_70(CODE[22]), STR_69(CODE[22]), 
		 -> STR_68(CODE[19]), STR_67(CODE[21]), STR_66(CODE[21]), STR_65(CODE[21]), 
		 -> STR_64(CODE[22]), STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), 
		 -> STR_60(CODE[22]), STR_59(CODE[22]), STR_58(CODE[22]), STR_57(CODE[22]), 
		 -> STR_56(CODE[22]), STR_55(CODE[21]), STR_54(CODE[22]), STR_53(CODE[22]), 
		 -> STR_52(CODE[22]), STR_51(CODE[22]), STR_50(CODE[22]), STR_49(CODE[22]), 
		 -> STR_48(CODE[24]), STR_47(CODE[24]), STR_46(CODE[24]), STR_45(CODE[30]), 
		 -> STR_44(CODE[24]), STR_43(CODE[24]), STR_42(CODE[23]), STR_41(CODE[23]), 
		 -> STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[23]), STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[23]), 
		 -> STR_32(CODE[23]), STR_31(CODE[23]), STR_30(CODE[18]), STR_29(CODE[17]), 
		 -> STR_28(CODE[17]), STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), 
		 -> STR_24(CODE[14]), STR_23(CODE[27]), STR_22(CODE[27]), STR_21(CODE[23]), 
		 -> STR_20(CODE[22]), STR_19(CODE[22]), STR_18(CODE[22]), STR_17(CODE[22]), 
		 -> STR_16(CODE[23]), STR_15(CODE[23]), STR_14(CODE[23]), STR_13(CODE[26]), 
		 -> STR_12(CODE[22]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), STR_84(CODE[9]), 
		 -> STR_83(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), 
		 -> cp(STACK[4]), cb(STACK[4]), STR_3(CODE[5]), V(BANK2[181]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), STR_84(CODE[9]), 
		 -> STR_83(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), 
		 -> cp(STACK[4]), cb(STACK[4]), STR_3(CODE[5]), V(BANK2[181]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> STR_84(CODE[9]), STR_83(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), 
		 -> T(CODE[176]), cp(STACK[4]), cb(STACK[4]), STR_3(CODE[5]), 
		 -> V(BANK2[181]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__hid_input	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    t	PTR long long  size(2) Largest target is 8
		 -> time@current_time(BANK0[8]), NULL(NULL[0]), 

    hist	PTR volatile struct hist_type size(2) Largest target is 320
		 -> C.hist(BIGRAM[97]), C(BIGRAM[320]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 155
		 -> R(BANK1[155]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 155
		 -> r_cal(BANK4[155]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_84(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_83(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), V(BANK2[181]), 

    strPtr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), V(BANK2[181]), 

    sp__hid_display	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__asctime	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    S3418tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    sp__localtime	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    t_mbmc	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1999spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    S1999spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  441697
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                            _asctime
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                 _current_sensor_cal
                    _display_history
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                     _load_hist_data
                          _localtime
                          _lp_filter
                      _mode_lamp_dim
                      _read_cal_data
                            _set_dac
                          _set_dac_a
                          _set_dac_b
                   _set_display_info
                      _set_hist_flag
                 _set_load_relay_one
                 _set_load_relay_two
                           _set_time
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                               _time
                    _update_cal_data
                   _update_hist_data
                         _update_lcd
                      _wait_lcd_done
                     _write_cal_data
 ---------------------------------------------------------------------------------
 (1) _update_hist_data                                     3     0      3      88
 ---------------------------------------------------------------------------------
 (1) _update_cal_data                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_time                                             8     0      8      22
 ---------------------------------------------------------------------------------
 (1) _set_hist_flag                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_dac_b                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (1) _set_dac_a                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (2) _convert_dac_raw                                      4     0      4    1578
                            ___fldiv
                             ___flge
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _set_dac                                              0     0      0      44
                  _SPI1_Exchange8bit
                    _dac_spi_control
 ---------------------------------------------------------------------------------
 (2) _dac_spi_control                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _read_cal_data                                        7     7      0     615
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2      45
 ---------------------------------------------------------------------------------
 (1) _load_hist_data                                       2     2      0    2841
                            ___fldiv
                            ___flmul
                            ___fltol
                         _start_bsoc
                          _stop_bsoc
                               _time
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8435
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         7     3      4     136
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          2     0      2     771
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            2     0      2     237
                         _get_switch
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1    1495
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _display_history                                      0     0      0   83248
                             _WaitMs
                            _asctime
                         _get_switch
                      _get_vterm_ptr
                          _localtime
                            _sprintf
                               _time
                         _update_lcd
 ---------------------------------------------------------------------------------
 (18) _time                                                8     0      8      23
 ---------------------------------------------------------------------------------
 (1) _localtime                                            1     0      1   14641
                      ___localtime_r
 ---------------------------------------------------------------------------------
 (2) ___localtime_r                                        3     0      3   14610
                       ___secs_to_tm
                     ___secs_to_zone
 ---------------------------------------------------------------------------------
 (3) ___secs_to_zone                                      46    28     18   11126
                            ___aodiv
                     ___year_to_secs
                           _do_tzset
                       _rule_to_secs
                         _scan_trans
                          _zi_read32
 ---------------------------------------------------------------------------------
 (4) _scan_trans                                          30    18     12    1990
                          _zi_read32
 ---------------------------------------------------------------------------------
 (4) _zi_read32                                            2     0      2      88
 ---------------------------------------------------------------------------------
 (4) _rule_to_secs                                        30    22      8    3167
                            ___aldiv
                            ___aomod
                             ___lmul
                    ___month_to_secs
                     ___year_to_secs
                      _days_in_month
 ---------------------------------------------------------------------------------
 (5) _days_in_month                                        4     0      4      66
 ---------------------------------------------------------------------------------
 (5) ___year_to_secs                                      24    14     10    1473
                            ___aodiv
                            ___aomod
                             ___lmul
                             ___omul
 ---------------------------------------------------------------------------------
 (5) ___month_to_secs                                      8     4      4      90
 ---------------------------------------------------------------------------------
 (4) _do_tzset                                             2     2      0    2777
                            _getname
                             _getoff
                            _getrule
 ---------------------------------------------------------------------------------
 (5) _getrule                                              6     2      4    1222
                             _getint
                             _getoff
 ---------------------------------------------------------------------------------
 (6) _getoff                                               6     4      2     425
                             _getint
 ---------------------------------------------------------------------------------
 (7) _getint                                               4     2      2     112
 ---------------------------------------------------------------------------------
 (5) _getname                                              6     2      4     663
 ---------------------------------------------------------------------------------
 (3) ___secs_to_tm                                        67    57     10    3174
                            ___aldiv
                            ___almod
                            ___aodiv
                            ___aomod
                             ___lmul
                             ___omul
 ---------------------------------------------------------------------------------
 (6) ___omul                                              24     8     16      92
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8      92
 ---------------------------------------------------------------------------------
 (4) ___almod                                             10     2      8     296
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8     300
 ---------------------------------------------------------------------------------
 (2) _asctime                                              6     4      2    2527
                            ___awdiv
                            ___awmod
                              _put2d
 ---------------------------------------------------------------------------------
 (3) _put2d                                                5     0      5     959
                            ___awdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     2      2     232
 ---------------------------------------------------------------------------------
 (1) _current_sensor_cal                                  17    17      0   69996
                             _WaitMs
                            ___fldiv
                           ___xxtofl
                    _cal_current_10A
                   _cal_current_zero
                     _clear_adc_scan
                       _clear_switch
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                           _spinners
                            _sprintf
                     _start_adc_scan
                         _update_lcd
                     _write_cal_data
 ---------------------------------------------------------------------------------
 (1) _write_cal_data                                       7     7      0     593
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     4     1      3      90
 ---------------------------------------------------------------------------------
 (2) _CRC_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_IsBusy                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_CalculatedResultGet                              7     4      3     209
                   _CRC_ReverseValue
 ---------------------------------------------------------------------------------
 (3) _CRC_ReverseValue                                     6     4      2      94
 ---------------------------------------------------------------------------------
 (2) _CRC_8BitDataWrite                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     415
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (2) _clear_switch                                         1     0      1      66
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _cal_current_zero                                     5     0      5     242
                        _check_range
 ---------------------------------------------------------------------------------
 (2) _cal_current_10A                                     13     0     13     242
                        _check_range
 ---------------------------------------------------------------------------------
 (3) _check_range                                          6     0      6     132
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  132030
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   65731
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (17) _sprintf                                           104    10     94   30659
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   35222
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   34896
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1    1464
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1    1389
                     _ringBufS_flush
                   _ringBufS_put_dma
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31860
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   30434
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   30281
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29889
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2704
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2411
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   14099
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     433
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     445
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2     130
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     335
                    _ADCC_Initialize
                  _CLKREF_Initialize
                     _CRC_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_Initialize                                       4     4      0      92
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     205
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     205
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     205
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                           31    31      0    5544
                                             10 COMRAM    31    31      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0    5454
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0    5454
                     _check_day_time
 ---------------------------------------------------------------------------------
 (17) _check_day_time                                      4     4      0    5454
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
                               _time
 ---------------------------------------------------------------------------------
 (18) _time                                                8     0      8      23
 ---------------------------------------------------------------------------------
 (18) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           25    25      0   36148
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   36058
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           6     6      0   36058
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _sprintf                                           104    10     94   30659
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   30281
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29889
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2704
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2411
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   14099
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     433
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     445
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2     130
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (17) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (17) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (17) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (27) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (27) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _CRC_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _asctime
     ___awdiv
     ___awmod
     _put2d
       ___awdiv
       ___lbmod
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _current_sensor_cal
     _WaitMs
       _StartTimer
       _TimerDone
     ___fldiv
     ___xxtofl
     _cal_current_10A
       _check_range
     _cal_current_zero
       _check_range
     _clear_adc_scan
     _clear_switch
     _get_raw_result
     _get_switch
     _get_vterm_ptr
     _spinners
       _strlen
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _start_adc_scan
       _ADCC_DischargeSampleCapacitor
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
       _ADCC_StartConversion
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _write_cal_data
       _CRC_8BitDataWrite
       _CRC_CalculatedResultGet
         _CRC_ReverseValue
       _CRC_Initialize
       _CRC_IsBusy
       _CRC_Start
       _DATAEE_WriteByte
   _display_history
     _WaitMs
       _StartTimer
       _TimerDone
     _asctime
       ___awdiv
       ___awmod
       _put2d
         ___awdiv
         ___lbmod
     _get_switch
     _get_vterm_ptr
     _localtime
       ___localtime_r
         ___secs_to_tm
           ___aldiv
           ___almod
           ___aodiv
           ___aomod
           ___lmul
           ___omul
         ___secs_to_zone
           ___aodiv
           ___year_to_secs
             ___aodiv
             ___aomod
             ___lmul
             ___omul
           _do_tzset
             _getname
             _getoff
               _getint
             _getrule
               _getint
               _getoff
                 _getint
           _rule_to_secs
             ___aldiv
             ___aomod
             ___lmul
             ___month_to_secs
             ___year_to_secs
               ___aodiv
               ___aomod
               ___lmul
               ___omul
             _days_in_month
           _scan_trans
             _zi_read32
           _zi_read32
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _time
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _wait_lcd_done
         _wdtdelay
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _ringBufS_flush
           _memset
         _ringBufS_put_dma
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _load_hist_data
     ___fldiv
     ___flmul
     ___fltol
     _start_bsoc
     _stop_bsoc
     _time
   _localtime
     ___localtime_r
       ___secs_to_tm
         ___aldiv
         ___almod
         ___aodiv
         ___aomod
         ___lmul
         ___omul
       ___secs_to_zone
         ___aodiv
         ___year_to_secs
           ___aodiv
           ___aomod
           ___lmul
           ___omul
         _do_tzset
           _getname
           _getoff
             _getint
           _getrule
             _getint
             _getoff
               _getint
         _rule_to_secs
           ___aldiv
           ___aomod
           ___lmul
           ___month_to_secs
           ___year_to_secs
             ___aodiv
             ___aomod
             ___lmul
             ___omul
           _days_in_month
         _scan_trans
           _zi_read32
         _zi_read32
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _read_cal_data
     _CRC_8BitDataWrite
     _CRC_CalculatedResultGet
       _CRC_ReverseValue
     _CRC_Initialize
     _CRC_IsBusy
     _CRC_Start
     _DATAEE_ReadByte
   _set_dac
     _SPI1_Exchange8bit
     _dac_spi_control
   _set_dac_a
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_dac_b
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_display_info
     _TimerDone
   _set_hist_flag
   _set_load_relay_one
   _set_load_relay_two
   _set_time
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _time
   _update_cal_data
   _update_hist_data
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _send_lcd_data_dma
         _ringBufS_flush
           _memset
         _ringBufS_put_dma
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _wait_lcd_done
       _wdtdelay
   _wait_lcd_done
     _wdtdelay
   _write_cal_data
     _CRC_8BitDataWrite
     _CRC_CalculatedResultGet
       _CRC_ReverseValue
     _CRC_Initialize
     _CRC_IsBusy
     _CRC_Start
     _DATAEE_WriteByte

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
         _time
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     5C2      69       18.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      86      15       52.3%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      DB      13       85.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F7      11       96.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E6       9       89.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FD       7       98.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      9E       5       98.8%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     29      37       1       87.3%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     60F      58        0.0%
DATA                 0      0     BD1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Feb 18 04:13:12 2020

                         _SPI1_Exchange8bit 2D7C                    __end_of_set_display_info 2DF4  
                                         _C 08FF                                           _D 0A3F  
                                         _H 019B                                           _P 0094  
                                         _R 0100                                           _S 01A4  
                                         _T F823                                           _V 0207  
          __end_of_TMR5_SetInterruptHandler 2A9A                __end_of_start_switch_handler 2D5C  
                               __CFG_CP$OFF 000000                     __size_of_ringBufS_flush 0092  
                           _update_cal_data 1FB6                                          _r0 01E5  
                                        _r1 01DB                                          _bp F94B  
                    __end_of_FVR_Initialize 2FE2                              _check_day_time A350  
                               __CFG_LVP$ON 000000                                         l171 2EAC  
                                       l809 2D8A                                         l675 2952  
                                       l942 1B76                                         _GIE 01FE97  
                                       _abs 2300                                         _pad FE1E  
                                       fsr0 003FE9                                         fsr2 003FD9  
                   __size_of_PMD_Initialize 0014                             _TMR2_Initialize 2E42  
                                       prod 003FF3                                         tosl 003FFD  
                                       wreg 003FE8                     __end_of___month_to_secs 0682  
                             _INT0_CallBack 2C6C                           _update_adc_result 25CE  
                             __CFG_BBEN$OFF 000000                       __size_of_Volts_to_SOC 00BA  
                    __size_of___localtime_r 0244                               _INT1_CallBack 2C00  
                              __CFG_ZCD$OFF 000000                                        l1004 250C  
                                      l2210 A6BA                                        l3003 EF2A  
                                      l2107 187E                                        l2028 18FC  
                                      l2044 0D6A                                        l1500 0FC0  
                                      l2301 D886                                        l2214 A6B2  
                                      l3030 EC62                                        l1271 2ED4  
                                      l1192 254C                                        l1505 1596  
                                      l1282 E9B6                                        l2075 0A8E  
                           _timer3ReloadVal 00C0                                        l2148 E01E  
                                      l2260 20FA                                        l1284 E9BC  
                                      l1524 5442                                        l2069 1326  
                                      l4030 85B0                                        l1625 1F0C  
                                      l2417 BC46                                        l1481 08C8  
                                      l1466 03A4                                        l2371 5B68  
                                      l3315 8CE0                                        l2195 03C2  
                                      l1459 005E                                        l2532 2810  
                                      l2700 488E                                        l2292 F9AA  
                                      l3270 80AA                                        l3422 2340  
                                      l3414 E356                                        l2614 BD34  
                                      l4038 70C4                                        l2375 5EA6  
                                      l3351 78EE                                        l1831 2624  
                                      l1479 08C2                                        l1840 D93E  
                                      l1753 0F78                                        l2561 1C40  
                                      l1841 DA9A                                        l1489 0B90  
                                      l3282 7F3A                                        l2650 9FDA  
                                      l2635 ADB4                                        l3427 FBE4  
                                      l1499 0D96                                        l2476 FE7A  
                                      l1772 26C6                                        l1757 144C  
                                      l2742 0784                                        l3526 CFD8  
                      _ADCC_StartConversion 2ED8                                        l3391 DC98  
                                      l3463 C8F2                                        l3552 FACA  
                                      l2496 979A                                        l2576 20F0  
                                      l1848 F1F2                                        l1888 2DF0  
                                      l3834 16FE                                        l3819 D666  
                                      l1988 96B6                                        l3942 D446  
                                      l3847 167A                                        l3951 C3FE  
                                      l2992 09D0                                        l3858 38E2  
                                      l2996 EE56                                        l3986 C182  
                                      l3978 C09C                                        l9901 7A3E  
                                      l9911 7A94                                        l9913 7AC4  
                                      l9907 7A7E                                        l9919 7AE6  
                                      STR_1 FEF5                                        STR_2 FECB  
                                      STR_3 FFD5                                        STR_4 FEA1  
                                      l9963 7CB6                                        l9883 798E  
                                      STR_5 FB25                                        STR_6 FB25  
                                      l9965 7CC8                                        l9973 7D02  
                                      l9949 7C24                                        l9877 794E  
                                      STR_7 FB25                                        STR_8 FB25  
                                      l9991 7D9E                                        l9959 7C96  
                                      l9895 7A0C                                        l9887 79A4  
                                      STR_9 FB25                                        l9993 7DB0  
                                      l9969 7CD2                                        l9889 79D4  
                                      l9997 7DBA                                        _LATA 003FBA  
                                      _LATB 003FBB                                        _LATC 003FBC  
                                      _LATD 003FBD                                        _LATE 003FBE  
                                      _LATF 003FBF                                        _T2PR 003FAB  
                                      _T6PR 003F93                                        _PMD0 0039C0  
                                      _PMD1 0039C1                                        _PMD2 0039C2  
                                      _PMD3 0039C3                                        _PMD4 0039C4  
                                      _PMD5 0039C5                                        u8010 A8A6  
                                      _PMD6 0039C6                                        _PMD7 0039C7  
                                      u8110 289A                                        u8030 A97E  
                                      u8015 A89C                                        u8120 289C  
                                      u8200 C464                                        u8035 A974  
                                      u7500 7DE2                                        u8220 C4BA  
                                      u9100 21B4                                        u8060 23C4  
                                      u7430 7CFA                                        u9110 EB2C  
                                      u7270 286A                                        u8070 23C6  
                                      u8231 C4C4                                        u8151 F204  
                                      u7600 7F9A                                        u7440 7D1A  
                                      u7408 7C6C                                        u8240 C4FE  
                                      u8400 D1FC                                        u8320 D038  
                                      u9040 09CA                                        u9200 EC42  
                                      u9120 EB40                                        u7280 286C  
                                      u8080 1628                                        u7505 7DD2  
                                      u8250 C530                                        u9130 EB7A  
                                      u8090 162A                                        u7435 7CEA  
                                      u9115 EB22                                        u9211 E816  
                                      u8171 F326                                        u7540 7F0C  
                                      u7380 7C4A                                        u8340 D08E  
                                      u9220 E850                                        u9300 F856  
                                      u7390 7C6A                                        u8270 C60E  
                                      u8350 D0C0                                        u9230 E882  
                                      u7710 283A                                        u7391 7C64  
                                      u9135 EB70                                        u7640 7FF6  
                                      u9320 202A                                        u8360 D0F2  
                                      u7720 283C                                        u9330 204A  
                                      u8290 C660                                        u9250 E960  
                                      u7730 057C                                        u7580 7F80  
                                      u8620 8BFA                                        u8540 8B14  
                                      u8380 D1AA                                        u9180 EC18  
                                      u7900 E348                                        u7645 7FE6  
                                      u7670 8016                                        u8630 8C34  
                                      u7830 2314                                        u9270 F76C  
                                      u8800 7766                                        u8640 8C70  
                                      u7840 E278                                        u9280 F79E  
                                      u8625 8BEA                                        u8730 7278  
                                      u7930 16AC                                        u8580 8B9E  
                                      u7940 16AE                                        u7845 E26E  
                                      u8840 77C2                                        u7960 A77A  
                                      u8745 740C                                        u8850 77FC  
                                      u7890 E346                                        u7970 A7C6  
                                      _PLLR 01CEE0                                        u8755 74D4  
                                      u8860 7842                                        u8845 77B2  
                                      u8765 769C                                        u7885 E328  
                                      u7965 A770                                        u7995 A800  
                                      u7996 A806                                        u7997 A814  
                   __end_of_display_history B972                                        _WPUA 003A41  
                                      _WPUB 003A51                                        _WPUC 003A61  
                                      _WPUD 003A71                                        _WPUE 003A81  
                                      _WPUF 003A91                            __end_of_ADCC_ISR 292C  
                     __size_of___secs_to_tm 10D2                               __CFG_FCMEN$ON 000000  
                              _rule_to_secs 80B4                                        _dbuf 0354  
                        __size_of_CRC_Start 0006                                        _cp_h F95F  
                                      _cp_l F95B                                        _atoi C688  
                                      _ctoa 1578                                        _main 0000  
                                      _dtoa 96BC                                        _nanf 1D88  
                                      _lock 01D3                                        _seed 02DE  
                                      _prec 004C                                        _time 1E4A  
                                      _nout 00BA                                        _spin F8D3  
                                      fsr0h 003FEA                                        fsr1h 003FE2  
                                      indf0 003FEF                                        fsr2h 003FDA  
                                      fsr0l 003FE9                                        indf1 003FE7  
                                      indf2 003FDF                                        fsr1l 003FE1  
                                      fsr2l 003FD9                                        _stoa BC4A  
                                      btemp 002A                                        _utoa AD70  
                                      _xtoa 9F96                      __end_of_check_adc_scan 2FC2  
                             ___fpclassifyf E1CA                                        prodh 003FF4  
                                      prodl 003FF3                                        start 00AE  
                           _timer5ReloadVal 00C4                   __end_of_SPI1_Exchange8bit 2D9A  
                 __size_of_clear_hid_pflags 0066                             _TMR3_Initialize 2272  
               __size_of_set_load_relay_one 0010                 __size_of_set_load_relay_two 0010  
                             __CFG_CSWEN$ON 000000                              _SPI1STATUSbits 003D17  
                         _UART1_rx_vect_isr 2B64                                ___param_bank 000000  
                      display_history@bwait 0053                      __end_of_check_day_time A6C4  
                        ?_UART1_rx_vect_isr 0001                   __size_of_DATAEE_WriteByte 0068  
                          _update_hist_data 180A                            __end_of_INT0_ISR 2F72  
                          __end_of_INT1_ISR 2592              __size_of_OSCILLATOR_Initialize 0016  
                  __end_of_ringBufS_put_dma 0F80               __end_of_OSCILLATOR_Initialize 2EB2  
                                     l10001 7DEC                                       l10013 7EC4  
                                     l10031 7F5C                                       l10023 7F1E  
                                     l10015 7EEA                                       l10033 7F6E  
                                     l10051 7FA8                                       l10037 7F7A  
                                     l10063 8006                                       l10047 7FA2  
                                     l10215 16EE                                       l10073 8032  
                                     l10313 C46A                                       l10403 881C  
                                     l10243 A900                                       l10085 808A  
                                     l10077 804A                                       l10413 88A4  
                                     l10405 884C                                       l10325 C504  
                                     l10173 2330                                       l10253 AA06  
                                     l10245 A950                                       l10229 A7E2  
                                     l10079 805A                                       l10503 8BAC  
                                     l10431 8968                                       l10423 88FA  
                                     l10319 C4BE                                       l10191 E2F8  
                                     l10271 166A                                       l10095 04B2  
                                     l10513 8C20                                       l10425 892A  
                                     l12121 DB96                                       l10337 C5D6  
                                     l10249 A998                                       l10531 8CB4  
                                     l10419 88E4                                       l12131 DBF8  
                                     l12115 DB54                                       l12107 DAE8  
                                     l10187 E2F4                                       l10283 07DA  
                                     l10099 0538                                       l10533 8CC4  
                                     l10525 8C8C                                       l10445 89BC  
                                     l10437 89A2                                       l12117 DB62  
                                     l10373 D172                                       l10365 D0C6  
                                     l10357 D03E                                       l10197 E34E  
                                     l10293 F20C                                       l10519 8C5C  
                                     l10471 8AE8                                       l10463 8A82  
                                     l10455 8A4C                                       l12127 DBC4  
                                     l12119 DB78                                       l13007 17C2  
                                     l10465 8A94                                       l10473 8AEC  
                                     l10393 87C6                                       l12129 DBE2  
                                     l12401 9358                                       l12081 ECEA  
                                     l12073 ECA2                                       l10297 F2B2  
                                     l10643 76FE                                       l10555 7164  
                                     l12139 DC16                                       l14101 2534  
                                     l10661 7774                                       l10637 76E2  
                                     l10573 7232                                       l10557 716A  
                                     l10549 7124                                       l10813 EEA4  
                                     l10485 8B36                                       l12149 DC78  
                                     l12413 946C                                       l12405 943A  
                                     l11541 C6C4                                       l11613 E39A  
                                     l10671 77E8                                       l10647 7724  
                                     l10575 7238                                       l10567 71F2  
                                     l10559 719A                                       l10807 EE14  
                                     l10479 8B1A                                       l10399 8806  
                                     l12431 9684                                       l10681 7858  
                                     l10657 776E                                       l10585 728A  
                                     l10577 7268                                       l10825 EF28  
                                     l10817 EEF2                                       l10489 8B5C  
                                     l12425 95E8                                       l12417 9508  
                                     l11561 C7DE                                       l10833 21B8  
                                     l11625 E3F6                                       l12089 ED56  
                                     l11721 1C86                                       l10691 78B6  
                                     l10675 782E                                       l10499 8BA6  
                                     l10931 204E                                       l11555 C764  
                                     l11539 C6A2                                       l10843 EB4C  
                                     l10915 F81E                                       l10907 F772  
                                     l12355 FF82                                       l12363 FFD4  
                                     l11619 E3C6                                       l11803 657A  
                                     l14045 2D36                                       l11565 C846  
                                     l11557 C77C                                       l11549 C738  
                                     l10861 EBEA                                       l11637 E478  
                                     PRLOCK 0039EF                                       l13423 2152  
                                     l12391 9232                                       l12439 9696  
                                     l11575 C8E2                                       l11559 C7A0  
                                     l10791 0958                                       l11591 D4D8  
                                     l12359 FFC0                                       l10943 D28A  
                                     l11743 5FFE                                       l14057 294E  
                                     l12801 A464                                       l10689 789C  
                                     l12385 9202                                       l12457 29CA  
                                     l11593 D544                                       l10961 D408  
                                     l11817 0658                                       l11753 613A  
                                     l13427 2184                                       l14083 24F4  
                                     l13611 DEA4                                       l10795 099A  
                                     l10867 EBFA                                       l10859 EBCE  
                                     l10883 E856                                       l10947 D2CA  
                                     l11771 63CE                                       l11763 6392  
                                     l11739 5FD4                                       l11747 6104  
                                     l14251 DDD4                                       l12821 A55A  
                                     l10869 EC10                                       l16005 2290  
                                     l16013 22FA                                       l16021 2366  
                                     l10965 D42C                                       l14341 B99E  
                                     l14237 DCEA                                       l13623 DEE4  
                                     l14319 E7E2                                       l10799 09CE  
                                     l10895 E928                                       l11791 64BA  
                                     l11783 6468                                       l14343 B9A4  
                                     l14407 BC0C                                       l13721 263A  
                                     l16041 2510                                       l16113 BCB6  
                                     l11769 63C4                                       l14353 B9E0  
                                     l14409 BC36                                       l14265 DE56  
                                     l14249 DDA0                                       l14257 DE52  
                                     l12835 A660                                       l13619 DED0  
                                     l16211 A004                                       l13635 12CA  
                                     l11779 643A                                       l14339 B98E  
                                     l13803 18D2                                       l13811 FC50  
                                     l16029 2478                                       l16133 BDA6  
                                     l16205 9FCA                                       l17021 1346  
                                     l11797 64E6                                       l11789 64B2  
                                     l14365 BA32                                       l14349 B9D4  
                                     l14277 1FE6                                       l16055 25AC  
                                     l16151 BEC8                                       l16143 BE60  
                                     l17023 1354                                       l17031 1386  
                                     l13647 1300                                       l14359 BA0A  
                                     l13815 FCB2                                       l14287 1820  
                                     l13841 F60E                                       l16057 25C6  
                                     l16137 BDD6                                       l16129 BD6A  
                                     l16241 A196                                       l16225 A0A0  
                                     l16217 A040                                       l17017 1334  
                                     l13681 0A3C                                       l13593 F3A6  
                                     l16321 B2BE                                       l16305 B0FE  
                                     l14385 BAB2                                       l14377 BA8C  
                                     l14369 BA3E                                       l13843 F61E  
                                     l14619 9F88                                       l16067 2668  
                                     l16147 BE8C                                       l16411 3D04  
                                     l17019 133C                                       l13659 20C0  
                                     l17115 0494                                       l12883 EAA8  
                                     l16315 B21A                                       l14299 1858  
                                     l18003 156C                                       l14805 1750  
                                     l13845 F624                                       l15613 FE72  
                                     l16093 2770                                       l16077 26B8  
                                     l16173 AE00                                       l16165 ADA4  
                                     l16421 3D9C                                       l17029 135A  
                                     l14573 0C52                                       l13669 0A06  
                                     l12949 28E6                                       l17109 03E2  
                                     l13597 F41C                                       l17053 FBA4  
                                     l16317 B224                                       l16325 B34A  
                                     l16309 B198                                       l18013 15C2  
                                     l13871 F71E                                       l13863 F6A4  
                                     l13847 F632                                       l13855 F63A  
                                     l15535 F9E0                                       l15623 FF0A  
                                     l15615 FE84                                       l15711 FE04  
                                     l15703 FDD0                                       l16183 AFF6  
                                     l12895 26D0                                       l12879 EA7E  
                                     l17063 CE0A                                       l13767 25EE  
                                     l17215 F944                                       l13791 18BA  
                                     l17241 55F6                                       l17233 5536  
                                     l13857 F66C                                       l15561 1254  
                                     l15609 FE4A                                       l16265 A306  
                                     l16249 A21C                                       l16521 4684  
                                     l16433 3EDC                                       l14569 0C14  
                                     l17401 49C8                                       l16281 C26E  
                                     l17209 F8DE                                       l12987 208A  
                                     l15547 10F0                                       l15619 FEC0  
                                     l15651 F502                                       l15811 1682  
                                     l16507 4508                                       l16371 3A08  
                                     l17083 F0BA                                       l16611 25BC  
                                     l17253 5764                                       l17245 5662  
                                     l17237 558A                                       l15557 1216  
                                     l15549 1112                                       l15725 1596  
                                     l15645 F4E2                                       l15629 088A  
                                     l15901 1B52                                       l16541 4816  
                                     l16453 40EE                                       l16445 4036  
                                     l16429 3E88                                       l16373 3A1E  
                                     l16277 C230                                       l17263 5990  
                                     l15727 15C2                                       l15751 978A  
                                     l15639 F4CC                                       l15903 1B64  
                                     l15823 16C6                                       l15831 171C  
                                     l16535 47BC                                       l16391 3B50  
                                     l16551 483A                                       l15583 B502  
                                     l16279 C248                                       l13983 0BE2  
                                     l17281 5B9A                                       l17273 5AD0  
                                     l17257 57B8                                       l15673 F5DC  
                                     l15665 F5A8                                       l15841 17C0  
                                     l16545 481A                                       l16457 4122  
                                     l16393 3B8A                                       l16369 39CE  
                                     l15577 B444                                       l17441 4CF8  
                                     l16801 11DE                                       l16297 C3DA  
                                     l17267 5A0A                                       l15763 97F2  
                                     l15843 17EC                                       l16395 3BA0  
                                     l13979 0B66                                       l17293 5E9E  
                                     l17277 5B78                                       l15773 9A04  
                                     l15693 FD50                                       l15685 FD26  
                                     l15917 1BCC                                       l15909 1B6A  
                                     l15845 1802                                       l16477 4282  
                                     l15597 B61A                                       l15589 B56C  
                                     l17517 5398                                       l17445 4D06  
                                     l16725 826E                                       l17541 D778  
                                     l17525 D684                                       l14799 1740  
                                     l15759 97D4                                       l15935 1C8E  
                                     l15919 1BD8                                       l16487 4330  
                                     l17463 4DB2                                       l17439 4C50  
                                     l16911 2CC0                                       l16591 C114  
                                     l16583 C082                                       l16743 8626  
                                     l16727 82C2                                       l16831 695E  
                                     l17551 D850                                       l15793 9AB6  
                                     l15689 FD38                                       l15945 1D50  
                                     l15881 1A46                                       l15849 182E  
                                     l16497 4452                                       l16761 0FD8  
                                     l17625 D90E                                       l17393 4966  
                                     l16905 2B84                                       l16585 C0A6  
                                     l16833 697E                                       l15955 1EFC  
                                     l15939 1CC6                                       l15875 196C  
                                     l15859 18D2                                       l15867 1900  
                                     l17459 4D9E                                       l16835 6A74  
                                     l15797 9AF2                                       l15885 1AA8  
                                     l16781 0E56                                       l17389 4950  
                                     l16941 30F0                                       l16933 301C  
                                     l16925 2F48                                       l16837 6A94  
                                     l17901 0B80                                       l15879 19DC  
                                     l16783 0E98                                       l17639 DA36  
                                     l17479 4EB4                                       l16951 318E  
                                     l16919 2EC0                                       l16871 6FBC  
                                     l16847 6D7A                                       l17815 064E  
                                     l17569 19E0                                       l15993 2208  
                                     l15977 20E8                                       l15969 201E  
                                     l15897 1B2A                                       l16793 117A  
                                     l16961 324E                                       l16953 3194  
                                     l16857 6E5A                                       l17593 B95E  
                                     l17761 037C                                       l15979 210A  
                                     l16883 70A8                                       l16875 6FDA  
                                     l17931 11FE                                       l17907 0BA2  
                                     l17827 0728                                       l17851 08CC  
                                     l16965 345A                                       l16893 28D8  
                                     l17853 08FC                                       l17845 08B8  
                                     l17693 0066                                       l17599 B962  
                                     l17935 1260                                       l17919 0CA2  
                                     l17871 0956                                       l17767 03BE  
                                     l17759 0352                                       l17695 007A  
                                     l17687 0040                                       l16985 3672  
                                     l16977 3578                                       l16969 34BA  
                                     l17961 1468                                       l17945 13E2  
                                     l17865 0930                                       l17689 0048  
                                     l17947 140E                                       l17991 1510  
                                     l17975 14C0                                       l17993 1528  
                                     l17985 14FE                             __end_of___aldiv E4F4  
                                     l17999 1546                             __end_of___aodiv C688  
                              _Volts_to_SOC 0B54                                       _ADCAP 003EF5  
                                     _ADACT 003EFE                             __end_of___almod EDD2  
                           __end_of___fladd 80B4                                       _ADCLK 003EFF  
                           __end_of___aomod D220                                       _ADPCH 003EF1  
                           __end_of___fldiv 8CEA                                       _ADREF 003EFD  
                           __end_of___awdiv F5F6                             __end_of___flneg 21E2  
                                     STR_10 FF1F                                       STR_11 FF49  
                                     STR_20 FDB1                                       STR_12 FCEB  
                                     STR_21 FB3A                                       STR_13 FA91  
                                     STR_30 FF84                                       STR_14 FB51  
                                     STR_22 FA41                                       STR_15 FC37  
                                     STR_31 FC20                                       STR_23 FA5C  
                                     STR_24 FF63                                       STR_32 FC09  
                                     STR_40 FB68                                       STR_16 FB23  
                                     STR_25 FE61                                       STR_17 FD17  
                                     STR_33 FBF2                                       STR_41 FB7F  
                             __CFG_WDTE$OFF 000000                                       STR_50 FE35  
                                     STR_18 FD2D                                       STR_26 FD01  
                                     STR_34 FBDB                                       STR_42 FB96  
                                     STR_51 FE35                                       STR_19 FE09  
                                     STR_27 FDC7                                       STR_35 FBC4  
                                     STR_43 FAC3                                       STR_28 FF96  
                                     STR_52 FD9B                                       STR_60 FCD5  
                                     STR_36 FBAD                                       STR_44 FB0B  
                           __end_of___awmod FE1E                                       STR_61 FD85  
                                     STR_53 FD59                                       STR_37 FC7C  
                                     STR_45 FA07                                       STR_70 FCA9  
                                     STR_62 FD9B                                       STR_54 FD43  
                                     STR_38 FC4E                                       STR_46 FAAB  
                                     STR_63 FCD5                                       STR_71 FE4B  
                                     STR_55 FF34                                       STR_39 FC65  
                                     STR_47 FADB                                       STR_80 FA25  
                                     STR_72 FD9B                                       STR_64 FE1F  
                                     STR_56 FDDD                                       STR_48 FAF3  
                                     _ADRPT 003EEC                                       STR_81 FF63  
                                     STR_65 FF0A                                       STR_49 FE35  
                                     STR_73 FCBF                                       STR_57 FCA9  
                                     STR_90 FFA7                                       STR_82 FFFC  
                                     STR_66 FEE0                                       STR_58 FE4B  
                                     STR_74 FD6F                                       STR_75 FD9B  
                                     STR_59 FD9B                                       STR_91 FFA7  
                                     STR_83 FFB6                                       STR_67 FEB6  
                                     STR_76 FCD5                                       STR_92 FFA7  
                                     STR_84 FFCC                                       STR_68 FF71  
                           __end_of___lbmod 1206                                       STR_69 FDDD  
                                     STR_85 FF5E                                       STR_77 FDF3  
                                     STR_93 FA77                                       STR_86 FF5E  
                                     STR_94 FE77                                       STR_78 FA25  
                                     STR_79 FA25                                       STR_87 FFC2  
                                     STR_95 FE8C                                       STR_88 FFC2  
                           __end_of___flmul 78F8                                       STR_89 FFA7  
                           __end_of___flsub 238C                             __end_of___fltol EC6C  
                                     u10500 C88C                                       u11300 EC9C  
                                     u10510 C88E                                       u10600 D63A  
                                     u11320 ECCA                                       u11330 ECE4  
                           __end_of___lodiv E988                                       u10700 E4CA  
                                     u10620 E394                                       u11340 ED06  
                                     u10550 D572                                       u10607 D62C  
                                     u10480 C734                                       u12160 1B36  
                                     u10640 E3C2                                       u11360 ED7E  
                                     u11450 DC0C                                       u10650 E3F0  
                                     _U1P1H 003DED                                       u10811 5F34  
                                     u10660 E412                                       u11380 EDA8  
                                     u10900 6484                                       u10804 1CA4  
                                     _U1P2H 003DEF                                       u12325 2400  
                                     u10557 D564                                       u10805 1C9E  
                                     u12510 1C06                                       u10590 D60C  
                                     _U1P1L 003DEC                                       _U1P3H 003DF1  
                                     _T3CLK 003FA9                                       u11800 954C  
                                     u12440 17BE                                       u11640 FF74  
                                     u12168 1B38                                       u10680 E4A0  
                                     u10920 6558                                       _T2CON 003FAC  
                                     _U1P2L 003DEE                                       u12185 1B86  
                                     u11714 924C                                       u12186 1B88  
                                     u10930 655A                                       _U1P3L 003DF0  
                                     u11715 9246                                       u10595 D606  
                                     u13500 181C                                       u10597 D5F8  
                                     u11645 FF6E                                       u11734 926E  
                                     u15030 1AE4                                       u12710 12C6  
                                     u12374 EA2A                                       u12390 2F16  
                                     u10950 063A                                       _U2P1L 003DD4  
                                     u12535 1C3A                                       u11735 9268  
                                     u12375 EA24                                       u12536 1C3C  
                                     u12528 1C08                                       u15200 1FEE  
                                     u16000 3DF0                                       u10960 2CBA  
                                     u10880 63EA                                       _T3CON 003FA6  
                                     _U2P2L 003DD6                                       u11754 9454  
                                     u14410 FA50                                       u15130 1C1E  
                                     u12730 12FA                                       _U2P3L 003DD8  
                                     u11755 944E                                       u13531 1844  
                                     u12900 2D04                                       u14420 1140  
                                     u15300 24BA                                       u15060 1B38  
                                     u16020 3F64                                       u13460 DE52  
                                     u11774 9522                                       u11694 921C  
                                     u11775 951C                                       u11695 9216  
                                     u13471 1FC0                                       u13551 186E  
                                     _T5CLK 003F9D                                       u12680 DE82  
                                     u16120 455C                                       u12760 0A02  
                                     u17000 4B0E                             __end_of___lomod F878  
                                     u12585 2F04                                       u12906 2D06  
                                     u11794 9544                                       u14610 F5C8  
                                     u15090 1B9C                                       u16050 41DC  
                                     u12754 20EE                                       u17010 4B38  
                                     u12586 2F06                                       u11795 953E  
                                     u14427 1132                                       u12755 20EA  
                                     u12595 2EF4                                       u14540 0904  
                                     u15500 BEEE                                       u16140 470C  
                                     u16060 41DE                                       u12780 0A36  
                                     u12596 2EF6                                       _T2HLT 003FAD  
                                     u17005 4B00                                       u14390 F9D4  
                                     u16310 0FB8                                       u17015 4B2A  
                                     u14800 97C0                                       u15360 268E  
                                     u15520 AD8A                                       u15600 9FB0  
                                     _T5CON 003F9A                                       u14810 9A18  
                                     u14730 96EC                                       u14490 B68E  
                                     u16250 8248                                       u14547 08F6  
                                     u14740 96EE                                       u14660 FD7C  
                                     u15380 2744                                       u15460 BDCC  
                                     u15700 A218                                       u17220 DA86  
                                     u17060 4FFA                                       u16260 825A  
                                     u14821 9A48                                       u14830 9A5E  
                                     u14590 F52E                                       u15390 2746  
                                     u14910 16B0                                       u15470 BE12  
                                     u15710 A238                                       u15630 A098  
                                     u17230 DA88                                       u17070 5024  
                                     u16190 C058                                       u16430 6EEE  
                                     u17310 04D8                                       u14831 9A5C  
                                     u15551 B038                                       u14840 9A72  
                                     u14760 975E                                       u14680 FDF0  
                                     u15560 B04E                                       u15640 A0EC  
                                     u16600 3542                                       _T6CON 003F94  
                                     u15561 B04C                                       u15721 A268  
                                     u15705 A1FA                                       u17065 4FEC  
                                     u14850 9A76                                       u15570 B062  
                                     u15730 A27E                                       u15650 A0EE  
                                     u16610 35F0                                       u17330 0756  
                                     u15731 A27C                                       u17075 5016  
                                     u16611 35EC                                       u14780 9770  
                                     u14940 176A                                       u15580 B066  
                                     u15740 A292                                       u15900 3A8E  
                                     u16460 2874                                       u15820 B202  
                                     u17500 1484                                       u17340 0880  
                                     u15477 BE04                                       u14870 9A8C  
                                     u14950 176C                                       u15750 A296  
                                     u15670 A14C                                       u16470 28C4  
                                     u17350 0882                              __CFG_DEBUG$OFF 000000  
                                     u15680 A14E                                       u16560 318E  
                                     u15840 B34A                                       u16640 CDCA  
                                     u15930 3BE8                                       u15770 C202  
                                     u16650 CE00                                       u16730 F8BA  
                                     u17506 1486                                       u14980 187C  
                                     u15940 3BEA                                       u14990 187E  
                                     u15950 3C10                                       u15880 3A66  
                                     u16808 F988                                       u16760 F920  
                                     u17480 1458                                       u16585 3270  
                                     u15890 3A68                                       u17490 1472  
                                     u16748 F8BC                                       _T6HLT 003F95  
                                     u16790 F986                                       u17486 145A  
                                     u17496 1474                  _ADCC_ADTI_InterruptHandler 00A1  
                                     u16778 F922                                       _T2TMR 003FAA  
                                     _U1UIR 003DF8                                       _T2RST 003FAF  
                                     _U1RXB 003DE8                                       _U2UIR 003DE0  
                                     _U2RXB 003DD0                                       _U2TXB 003DD2  
                                     _T6TMR 003F92                                       _T6RST 003F97  
                       ??_UART1_rx_vect_isr 0006                                       _ISRPR 0039F1  
                                     _OSCEN 0039DD                                       _TMR3H 003FA5  
                                     _TMR5H 003F99                                       _TMR3L 003FA4  
                                     _TMR5L 003F98                   __end_of_update_adc_result 2608  
                                     _TRISA 003FC2                                       _TRISB 003FC3  
                                     _TRISC 003FC4                                       _TRISD 003FC5  
                                     _TRISE 003FC6                                       _TRISF 003FC7  
                               _Default_ISR 3008                         __size_of_CRC_IsBusy 0010  
                   __size_of_clear_adc_scan 0006                          _current_sensor_cal 4898  
         __size_of_TMR3_SetInterruptHandler 0028                                ___secs_to_tm 281A  
         __size_of_TMR6_SetInterruptHandler 0028                             __end_of_asctime 9200  
                             __CFG_WRTB$OFF 000000                            __end_of_TMR3_ISR F096  
                             __CFG_WRTC$OFF 000000                            _cal_current_zero 129E  
                                     ___gmt F953                               __CFG_WRTD$OFF 000000  
                          __end_of_TMR5_ISR E1CA                             __end_of_getname B3AC  
                              _DMA1CON0bits 003BFC                            __end_of_TMR6_ISR 2E2A  
                              _DMA1CON1bits 003BFD                  __size_of_send_lcd_data_dma 0046  
                           _DATAEE_ReadByte 27B4                                       _fabsf 0D7C  
                           __end_of_getrule C408                        __end_of_clear_switch 20FE  
                                     _flags 004E                        __size_of_check_range 0080  
                 __size_of_CRC_ReverseValue 00CE                                       _r_cal 0440  
                  __size_of_calc_model_data 045A                                _DMA2CON0bits 003BDC  
                              _DMA2CON1bits 003BDD                __end_of_get_ac_charger_relay 2F64  
                                     _fputc F9B0                  __size_of_send_lcd_cmd_long 0040  
                           __end_of_isalpha 23D0                                       _fputs 1206  
                           __end_of_isdigit 28A6                             __end_of_ivln2_h F95B  
                                     _put2d FAD4                          __CFG_MCLRE$EXTMCLR 000000  
                                     _srand 26E4                                       _width 004A  
                                     _putch 2DF4                __end_of_set_ac_charger_relay 2F3A  
                           __end_of_islower 2846                             __end_of_isspace 205E  
                  _INT1_SetInterruptHandler 2AC2                             __end_of_set_dac 0D7C  
                           __end_of_isupper 2876                                       pclath 003FFA  
                                     tablat 003FF5                                       ltemp0 002A  
                                     ltemp1 002E                                       ltemp2 0032  
                  __size_of_DMA1_Initialize 006A                                       plusw0 003FEB  
                                     plusw1 003FE3                                       plusw2 003FDB  
                                     ttemp0 002A                                       ttemp1 002D  
                                     ttemp2 0030                                       ttemp3 0033  
                                     ttemp5 002B                                       ttemp6 002E  
                                     ttemp7 0032                                       status 003FD8  
       __end_of_UART1_SetRxInterruptHandler 2A4A                 _UART1_SetRxInterruptHandler 2A22  
                                     wtemp0 002A                                       wtemp1 002C  
                                     wtemp2 002E                                       wtemp3 0030  
                                     wtemp4 0032                                       wtemp5 0034  
                                     wtemp8 002B                             __end_of_sprintf 01C0  
                           __end_of_tolower 1708                             __end_of_strncmp D670  
                           __end_of_toupper 1684                   __size_of_DMA1_DMADCNT_ISR 000A  
                 __end_of_UART1_rx_vect_isr 2B8C                    __size_of_SPI1_Initialize 0016  
                   __end_of_update_cal_data 200C                             _TMR5_Initialize 222A  
                     __end_of_ringBufS_init 29AA                             __initialization 01C0  
                         _UART2_rx_vect_isr 2BB4                               ___localtime_r CD9C  
                              __end_of_cp_h F963                                __end_of_cp_l F95F  
                              __end_of_atoi C8FC                                __end_of_ctoa 1600  
                              __end_of_main 15D6                                __end_of_dtoa 9B3C  
                              __end_of_nanf 1DEA                                __end_of_time 1EA8  
                              __end_of_spin F94B                                __end_of_stoa BF08  
                              __end_of_utoa B0B0                                __end_of_xtoa A350  
                            __CFG_SAFEN$OFF 000000                          ?_UART2_rx_vect_isr 0001  
                   __end_of_TMR2_Initialize 2E5A                    __size_of_cal_current_10A 00BE  
                     __end_of_send_lcd_data 2C00                    __size_of_DMA2_Initialize 005A  
                __end_of_check_enter_button 19EA                           __end_of_CRC_Start 2FEE  
                  _TMR5_SetInterruptHandler 2A72                               __activetblptr 000003  
                 __size_of_DMA1_DMASCNT_ISR 000E                       _TMR3_InterruptHandler 0098  
                         _port_data_dma_ptr 2F8C                          esr_check@esr_state 00C6  
                       ??_UART2_rx_vect_isr 0006                                      INTCON0 003FD2  
      __size_of_UART2_SetRxInterruptHandler 0028                              __CFG_MVECEN$ON 000000  
                           _TMR6_Initialize 2958                             _PWM8_Initialize 2E86  
                          _UART1_Initialize 21E2                           _UART2_tx_vect_isr 2B8C  
                        _UART2_Transmit_ISR 292C                                      _ADACCU 003EEA  
                                    _ADACQH 003EF4                                      _ADACQL 003EF3  
                                    _ADCON0 003EF8                                      _ADCON1 003EF9  
                                    _ADCON2 003EFA                                      _ADCON3 003EFB  
                            _start_adc_scan 1CC2                                      _ADLTHH 003EDF  
                                    _ADLTHL 003EDE                                      STR_102 F9E1  
                                    STR_103 F963                                      STR_112 FFED  
                                    STR_104 FFDA                                      STR_121 FFF0  
                                    STR_105 FFE2                                      STR_114 FFED  
                                    STR_123 FFF0                                      STR_131 FFF9  
                                    STR_116 FFF3                                      STR_108 FFDE  
                                    STR_140 FC93                                      STR_133 FFF9  
                                    STR_109 FFE6                                      STR_141 F9E2  
                                    STR_118 FFF3                                      STR_126 FFF6  
                                    STR_135 FFEA                                      STR_128 FFF6  
                                    STR_137 FFEA                                      _ADPREH 003EF7  
                                    _ADPREL 003EF6                                      _DMA1PR 0039F3  
                                    _DMA2PR 0039F4                                      _ADSTAT 003EFC  
                                    _ADUTHH 003EE1                                      _ADUTHL 003EE0  
                        _PWM8_LoadDutyValue 23D0                                      _ANSELA 003A40  
                                    _ANSELB 003A50                                      _ANSELC 003A60  
                                    _ANSELD 003A70                                      _ANSELE 003A80  
                                    _ANSELF 003A90                          ?_UART2_tx_vect_isr 0001  
                                    _U1CON0 003DF2                                      _U1CON1 003DF3  
                                    _U1CON2 003DF4                                      _T3GATE 003FA8  
                                    _U1BRGH 003DF6                                      _U1FIFO 003DF7  
                                    _T3GCON 003FA7                                      _U2CON0 003DDA  
                                    _U2CON1 003DDB                                      _U1BRGL 003DF5  
                                    _U2CON2 003DDC                                      _U2BRGH 003DDE  
                                    _U2FIFO 003DDF                                      _U2BRGL 003DDD  
                                    _T5GATE 003F9C                                      _T5GCON 003F9B  
                                    _MAINPR 0039F2                                      _RC3PPS 003A13  
                                    _RD1PPS 003A19                                      i1l1021 E11A  
                                    _RB6PPS 003A0E                                      i1l1209 EFFE  
                      _start_switch_handler 2D3C                                      _RC5PPS 003A15  
                                    _ODCONA 003A42                                      _ODCONB 003A52  
                                    _ODCONC 003A62                                      _RC6PPS 003A16  
                                    _ODCOND 003A72                                      _ODCONE 003A82  
                                    _ODCONF 003A92                     __end_of_TMR3_Initialize 22BA  
                            __CFG_WDTCCS$SC 000000                                      _FVRCON 003EC1  
                          _mode_lamp_bright 2F48                                      _SCANPR 0039F7  
                                    _IVTADH 00389E                                      _IVTADL 00389D  
                                    _IVTADU 00389F                __size_of_eaDogM_WriteCommand 000E  
                                    _OSCFRQ 0039DF                                      _NVMDAT 0039E3  
                      __size_of_hid_display 021C                            __end_of___xxtofl DCA2  
     __end_of_ADCC_DischargeSampleCapacitor 2FCA      __size_of_ADCC_DischargeSampleCapacitor 0008  
             _ADCC_DischargeSampleCapacitor 2FC2                    __end_of_send_lcd_cmd_dma 2DB8  
                           _TMR3_WriteTimer 2512                         ??_UART2_tx_vect_isr 0006  
                 __end_of_UART2_rx_vect_isr 2BDC                  __size_of_SPI1_Exchange8bit 001E  
                    __size_of_DMA1_DMAA_ISR 000A                     __size_of___secs_to_zone 08A2  
                            __CFG_XINST$OFF 000000                           _CLKREF_Initialize 2F82  
                          _UART2_Initialize 1DEA                                      _WaitMs 26AE  
                           _conv_raw_result 9200                                _CCPTMRS1bits 003F5F  
      __size_of_ADCC_SetADIInterruptHandler 0028                            __end_of_do_tzset C188  
                                    ___flge EDD2                                      ___fleq 0916  
                                    ___lmul 076C                                      ___omul F1F6  
                         _ADCC_ThresholdISR 1AC0                              __CFG_STVREN$ON 000000  
                                    _crcObj 00E2                              _ringBufS_flush 13C2  
                                    _efgtoa 15D6                                      _getoff D220  
                                    _getint 04A4                                      _floorf A6C4  
                         dac_spi_control@S0 00CB                           dac_spi_control@S1 00CA  
                         dac_spi_control@S2 00C9                           dac_spi_control@SB 00C7  
                         dac_spi_control@SC 00C8                          ?_ADCC_ThresholdISR 0001  
                                    _memset B3AC                                      _pclock 00DA  
                      __size_of_help_button 0038                                      clear_0 0232  
                                    clear_1 0246                                      clear_2 0258  
                                    clear_3 0264                                      clear_4 0270  
                                    clear_5 027C                                      clear_6 0288  
                                    clear_7 0294                                      clear_8 02A0  
                                    _t_mbmc 00BC                   __end_of_port_data_dma_ptr 2F96  
                    __size_of_read_cal_data 01CA                                      _printf 1D26  
                        _eaDogM_WriteString 0F80                     __end_of_DATAEE_ReadByte 27E6  
                                    _strcpy 0842                                   ?_ADCC_ISR 0001  
                                    _strlen 10CA                          __size_of_TimerDone 0028  
                              __pdataBIGRAM 06FF                             _ADCC_Initialize 1A54  
                            _PMD_Initialize 2EB2                  __size_of_update_adc_result 003A  
                 __end_of_UART2_tx_vect_isr 2BB4                            __end_of_set_time 26AE  
                                    lltemp0 002A                                      lltemp1 0032  
                                    lltemp2 003A                                      lltemp3 0042  
                       ??_ADCC_ThresholdISR 0001                      __end_of_start_adc_scan 1D26  
                              __mediumconst F716                                      preinc2 003FDC  
                    __size_of_init_port_dma 0030                                      tblptrh 003FF7  
                                    tblptrl 003FF6                                      tblptru 003FF8  
                          __end_of_wdtdelay 1F5C                            __end_of_spinners 04A4  
                          __end_of_vfprintf 0ED6                                  _StartTimer 2492  
                        __size_of___asfladd 0078                                 localtime@tm 03DF  
             __size_of_INTERRUPT_Initialize 0066                     __end_of_TMR5_Initialize 2272  
                         _SYSTEM_Initialize 20FE                                  ___daylight 00B8  
                                __accesstop 0060                     __end_of__initialization 02B2  
                                 ?_INT0_ISR 0001                                   ?_INT1_ISR 0001  
                      __end_of_display_help 2FDA                        __end_of_display_info 2FD2  
                 __end_of_CLKREF_Initialize 2F8C                               ___rparam_used 000001  
                __size_of_UART1_rx_vect_isr 0028                             _TMR5_WriteTimer 24D2  
                     _set_temp_display_help 2F1A                            _clear_hid_pflags 1B92  
                     __end_of_TMR3_CallBack 2C6C                   __end_of_ADCC_ThresholdISR 1B2A  
                     __end_of_set_hist_flag 2FE8                          __size_of_calc_bsoc 0A6E  
                    __end_of_ringBufS_flush 1454                              __pcstackCOMRAM 0001  
                                ___inthi_sp 132C                                  ___intlo_sp 1996  
                              __pidataBANK1 1026                                __pidataBANK2 0A98  
                             __end_of___gmt F957                 __size_of_send_port_data_dma 0052  
                             __end_of_fabsf 0E2A                                   ?_TMR3_ISR 0001  
                                 ?_TMR5_ISR 0001                                   ?_TMR6_ISR 0001  
                          _DATAEE_WriteByte 1B2A                              ivt0x8_undefint 00AC  
                             __end_of_fputc FAD4                               __end_of_fputs 129E  
                      _get_ac_charger_relay 2F56                               __end_of_put2d FBEE  
                             __end_of_srand 2718                       __end_of_TMR5_CallBack 2C48  
                             __end_of_putch 2E0E                        _set_ac_charger_relay 2F2A  
                   __end_of_PWM8_Initialize 2E9C                     __end_of_TMR6_Initialize 2982  
                         _adc_int_t_handler 1708                      __end_of_PMD_Initialize 2EC6  
                                __end_of_bp F953                                  ___timezone 0070  
                                ??_ADCC_ISR 0001                       __end_of_TMR6_CallBack 2CB4  
                     __size_of_clear_switch 004E                 __size_of_EXT_INT_Initialize 0034  
                  calc_bsoc@log_update_wait 0050                      __size_of_calc_ror_data 0186  
                             _DMA1_DMAA_ISR 2FA4                       TMR3_ISR@CountCallBack 00BE  
                            _clear_adc_scan 2FEE                          __size_of_hid_input 0138  
                        __end_of_CRC_IsBusy 2F1A                      __size_of_mode_lamp_dim 0018  
                          time@current_time 00D2                            _CRC_ReverseValue FF32  
                  _UART2_RxInterruptHandler 00AD                   __end_of_SYSTEM_Initialize 214C  
                           __CFG_PR1WAY$OFF 000000                             __CFG_IVT1WAY$ON 000000  
                   __end_of_TMR3_WriteTimer 2552                                  __pbssBANK0 0060  
                                __pbssBANK1 01A4                                  __pbssBANK2 02BC  
                                __pbssBANK3 0300                                  __pbssBANK4 0400  
                                __pbssBANK5 0500                                  __pbssBANK6 0600  
                  __end_of_update_hist_data 1886                                  _check_help D88C  
                             _read_cal_data DCA2                     __end_of_conv_raw_result 96BC  
                        __size_of_esr_check 02D8                       _INT0_InterruptHandler 00B3  
                                ??_INT0_ISR 0001                                  ??_INT1_ISR 0007  
                     __end_of_days_in_month 1CC2                           __end_of_TimerDone 29D2  
                          _DMA1_DMADCNT_ISR 2F98                             _convert_dac_raw FBEE  
                        __size_of_init_bsoc 0246                  __size_of_UART2_rx_vect_isr 0028  
                                   IVTBASEH 003FD6                                     IVTBASEL 003FD5  
                                   IVTBASEU 003FD7                          __size_of_lp_filter 01BC  
                        __size_of_localtime 0016                               _init_port_dma 27E6  
                     __end_of_wait_lcd_done 2CD6                    __end_of_cal_current_zero 1330  
          __end_of_TMR3_SetInterruptHandler 2AC2                                _clear_switch 20B0  
                           __CFG_PPS1WAY$ON 000000            __end_of_TMR6_SetInterruptHandler 2A72  
                                ??_TMR3_ISR 00E5                     __end_of_ADCC_Initialize 1ABE  
                                ??_TMR5_ISR 000B                   __end_of_adc_int_t_handler 178A  
                                ??_TMR6_ISR 0006                           __end_of___asfladd 1978  
                                   _ADFLTRH 003EE7                                     _ADFLTRL 003EE6  
                                   _DMA1DSA 003BF0                                     _DMA2DSA 003BD0  
                                   _DMA1DSZ 003BEE                                     _DMA2DSZ 003BCE  
                                   _DMA1SSA 003BF9                                     _DMA2SSA 003BD9  
                        __size_of_set_dac_a 0034                          __size_of_set_dac_b 0034  
      __end_of_ADCC_SetADTIInterruptHandler 2B3A       __size_of_ADCC_SetADTIInterruptHandler 0028  
              _ADCC_SetADTIInterruptHandler 2B12                                     _DMA1SSZ 003BF7  
                                   _DMA2SSZ 003BD7                  __size_of_port_data_dma_ptr 000A  
                                   _ADSTPTH 003EE5                                     _ADSTPTL 003EE4  
                                   _CRCACCH 003963                                     _CRCACCL 003962  
                   __size_of_load_hist_data 025A                                     _CRCDATH 003961  
                                   _CRCDATL 003960                           _UART1_Receive_ISR 2D1A  
                                   _CRCCON0 003968                                     _CRCCON1 003969  
                                   _CLKRCLK 003CE6                                     _CLKRCON 003CE5  
                    __end_of_clear_adc_scan 2FF4                                     _CRCXORH 003967  
                                   _CRCXORL 003966                                     u1223_20 A486  
                            ?_DMA1_DMAA_ISR 0001                            _DMA1_DMASCNT_ISR 2F74  
                                   _U1ERRIE 003DFA                          __size_of_set_vterm 001E  
                                   _U1ERRIR 003DF9                                     _U2ERRIE 003DE2  
                                   u1246_20 2F60                                     u1333_48 2CA0  
                                   u1325_48 2C7C                                     _U2ERRIR 003DE1  
                                   u1183_25 2F34                                     u1183_26 2F36  
                                   u1327_28 2C10                                     u1257_20 2648  
                                   u1336_28 2C34                                     u1257_26 264A  
                                   u1291_28 F614                                     u1293_20 F62E  
                                   u1293_21 F628                                     u1297_24 F714  
                                   u1297_25 F710                                     u1393_44 1770  
                                   u1393_45 176A                           _CRC_8BitDataWrite 2EC6  
                                   _INT0PPS 003AC0                         __CFG_PWRTS$PWRT_OFF 000000  
                                   _INT1PPS 003AC1                                ?_Default_ISR 0001  
                                   u1691_20 5B8A                  __size_of_UART2_tx_vect_isr 0028  
                                   u1689_20 5AC0                                     u1696_28 2C58  
                                   _U1RXPPS 003AE5                                     _U2RXPPS 003AE8  
                           _dac_spi_control 1886                                     _OSCCON1 0039D9  
                                   _OSCCON3 0039DB                                     _IVTLOCK 003FD4  
                        __size_of_vfpfcnvrt 0FAC                                     _SPI1CLK 003D1C  
                                   _SPI1RXB 003D10                                     _NVMADRH 0039E1  
                                   _NVMADRL 0039E0                           __end_of_calc_bsoc 5EBA  
                                   _SPI1TXB 003D11                                     _OSCTUNE 0039DE  
                                   _NVMCON2 0039E6                                     _PWM8DCH 003F61  
                                   _PWM8DCL 003F60                                     _PWM8CON 003F62  
                                   _SLRCONA 003A43                                     _SLRCONB 003A53  
                                   _SLRCONC 003A63                                     _SLRCOND 003A73  
                                   _SLRCONE 003A83                                     _SLRCONF 003A93  
                        __size_of_zi_read32 00F6                                  _get_switch 28D4  
                        __size_of_start_lcd 0006                     __size_of___year_to_secs 0972  
                   __end_of_TMR5_WriteTimer 2512                     __size_of_switch_handler 0142  
                        __size_of_stop_bsoc 0006                  __end_of_set_load_relay_one 2F0A  
                __end_of_set_load_relay_two 2EFA           __size_of_INT0_SetInterruptHandler 0028  
                __size_of_CLKREF_Initialize 000A                               _calc_ror_data E682  
                            ___secs_to_zone 682C                     __size_of_DMA1_DMAOR_ISR 000A  
                                   __Hparam 0000                  __size_of_ADCC_ThresholdISR 006A  
                             _mode_lamp_dim 2E2A                                     __Lparam 0000  
                  __end_of_UART1_Initialize 222A                           __end_of_hid_input F9B0  
                           __size_of_WaitMs 0036                                     ___aldiv E360  
                           __size_of___flge 0162                             __size_of___fleq 00C4  
                                   ___aodiv C408                                     ___almod EC6C  
                                   ___fladd 78F8                                     ___aomod CFE0  
                                   ___fldiv 8770                                     ___awdiv F4A8  
                                   ___flneg 219A                             __size_of___lmul 00D6  
                                   ___awmod FD06                             __size_of___omul 015A  
                                   ___lbmod 116C                                     ___flmul 70CE  
                                   ___flsub 2346                                     ___fltol EAFA  
                                   ___lodiv E808                                     ___lomod F738  
                 __end_of_UART1_Receive_ISR 2D3C                             __size_of_efgtoa 1244  
                           __size_of_getoff 0230                             __size_of_getint 00F2  
                           __size_of_floorf 036C                        __end_of_init_display 076C  
                                   __pcinit 01C0                    __end_of_mode_lamp_bright 2F56  
                           __size_of_memset 02EC                    __size_of_adc_int_handler 0002  
                       _eaDogM_WriteCommand 2F3A                                     __ramtop 2000  
                 __end_of_CRC_8BitDataWrite 2ED8                                     __ptext0 0000  
                                   __ptext1 180A                                     __ptext2 1FB6  
                                   __ptext3 1EA8                                     __ptext4 2D3C  
                                   __ptext5 26E4                                     __ptext6 2678  
                                   __ptext7 2FE2                                     __ptext8 2718  
                                   __ptext9 274C                           __end_of_esr_check BC4A  
                         _UART2_Receive_ISR 2D5C                                     _asctime 8CEA  
                           __size_of_printf 0062                                     _getname B0B0  
                           __CFG_WRTAPP$OFF 000000                             __size_of_strcpy 00D4  
                           __size_of_strlen 00A2                                     _getrule C188  
                                   _dst_off 00B6                       _OSCILLATOR_Initialize 2E9C  
                              __size_of_abs 0046                                __size_of_pad 0114  
                         __end_of_init_bsoc CD9C                                     us830999 C672  
                                   _isalpha 238C                                     _isdigit 2876  
                                   us841999 D20E                                     _ivln2_h F957  
                                   us818999 F33A                                     us931999 F868  
                                   us926999 E972                                   _T3CONbits 003FA6  
                                   _mode_sw 00CC                           __end_of_lp_filter E028  
                         __end_of_localtime 2E70                                     _islower 2816  
                                   _isspace 200C                             __CFG_WRTSAF$OFF 000000  
                                _scan_trans 2592                                   _T5CONbits 003F9A  
                                   _set_dac 0CC6                    __end_of_UART2_Initialize 1E4A  
                                   _isupper 2846                                   _CRC_Start 2FE8  
                                _old_tz_buf 03A4                  __size_of_SYSTEM_Initialize 004E  
                                   _sprintf 00B6                                     _tolower 1684  
                     __size_of_display_help 0008                                     _utctime 01D7  
                   __end_of_convert_dac_raw FD06                       __size_of_display_info 0008  
                                   _strncmp D450                                     _toupper 1600  
                      end_of_initialization 02B2                   __size_of_convert_adc_data 00B8  
                                 _SCANHADRH 00397A                                   _SCANHADRL 003979  
                                 _SCANHADRU 00397B                                   _SCANLADRH 003977  
                                 _SCANLADRL 003976                          _check_enter_button 1978  
                                 _SCANLADRU 003978                           __end_of_set_dac_a 2780  
                         __end_of_set_dac_b 274C                      __end_of___secs_to_zone 70CE  
       __end_of_UART2_SetRxInterruptHandler 2A22                 _UART2_SetRxInterruptHandler 29FA  
                                 i1u1724_20 EFF4                                   i2u1400_48 2B78  
                                 i2u1402_48 2BA0                                   i2u1404_48 2BC8  
                   check_day_time@day_delay 0051                           __end_of_set_vterm 2DD6  
                                 i2u1396_48 2918                                   i2u1398_48 1AF6  
                                 i2u1398_49 1B0A                           __end_of_vfpfcnvrt 4898  
                                 _SPI1TCNTL 003D12                                     postdec0 003FED  
                                   postdec1 003FE5                                     postdec2 003FDD  
                                   postinc0 003FEE                                     postinc1 003FE6  
                                   postinc2 003FDE                           __end_of_zi_read32 03AE  
                __size_of_adc_int_t_handler 0082                         __size_of_StartTimer 0040  
                         __end_of_start_lcd 3000                   __end_of_UART2_Receive_ISR 2D7C  
                            wdtdelay@dcount 0090                     __end_of_dac_spi_control 1900  
               __size_of_current_sensor_cal 0BB4                       __CFG_WDTCPS$WDTCPS_31 000000  
                           ??_DMA1_DMAA_ISR 0007                       _INT1_InterruptHandler 00B0  
                                 _PORTBbits 003FCB                           __end_of_stop_bsoc 3006  
                                 _PORTDbits 003FCD                    _TMR3_SetInterruptHandler 2A9A  
                                 _PORTFbits 003FCF                    _TMR6_SetInterruptHandler 2A4A  
                              _display_help 2FD2                       _TMR5_InterruptHandler 009B  
                              _display_info 2FCA        __size_of_UART2_SetTxInterruptHandler 0028  
                  __end_of_clear_hid_pflags 1BF8                           __size_of_ADCC_ISR 002C  
       __end_of_ADCC_SetADIInterruptHandler 2B62                 _ADCC_SetADIInterruptHandler 2B3A  
                                asctime@buf 03C4                                  _update_lcd F096  
                           _calc_model_data 9B3C                      __size_of_ringBufS_init 0028  
                          __CFG_FEXTOSC$ECH 000000                                  _static_soc 1EA8  
                  __end_of_DATAEE_WriteByte 1B92                             _DMA1_Initialize 19EA  
                       __end_of_check_range 180A                                  _start_bsoc 2CF8  
                  __size_of___month_to_secs 00EC                      __size_of_send_lcd_data 0024  
                           _SPI1_Initialize 2E70                       __end_of_get_vterm_ptr 28D4  
                         __size_of_INT0_ISR 000E                           __size_of_INT1_ISR 003E  
                  __size_of_display_history 02DA                    __end_of_CRC_ReverseValue 0000  
                            __end_of_WaitMs 26E4                __end_of_INTERRUPT_Initialize 1C5E  
                                _vterm_dump E4F4                              __end_of___flge EF34  
                            __end_of___fleq 09DA                             _cal_current_10A 09DA  
      __end_of_INT0_DefaultInterruptHandler 3014       __size_of_INT0_DefaultInterruptHandler 0002  
              _INT0_DefaultInterruptHandler 3012                  __size_of_UART1_Receive_ISR 0022  
                           _DMA2_Initialize 1F5C                              __end_of___lmul 0842  
                            __end_of___omul F350                               __pidataBIGRAM AA30  
                            _load_hist_data C8FC                              __end_of_efgtoa 281A  
                __size_of_CRC_8BitDataWrite 0012                           __size_of_TMR3_ISR 0162  
                            __end_of_getoff D450                           __size_of_TMR5_ISR 01A2  
                            __end_of_getint 0596                           __size_of_TMR6_ISR 001A  
                       __size_of_check_help 0212                              __end_of_floorf AA30  
               __size_of_UART2_Transmit_ISR 002C                                  floorf@F524 0074  
                            __end_of_memset B698  __end_of___month_to_secs@secs_through_month F817  
        ___month_to_secs@secs_through_month F7E7                              __end_of_printf 1D88  
                  __end_of_DMA1_DMADCNT_ISR 2FA2                 __size_of_PWM8_LoadDutyValue 0042  
                     __end_of_INT0_CallBack 2C90                              __end_of_strcpy 0916  
                            __end_of_strlen 116C                         start_initialization 01C0  
                   __size_of_write_cal_data 0158        __end_of_TMR5_DefaultInterruptHandler 2678  
     __size_of_TMR5_DefaultInterruptHandler 0038                _TMR5_DefaultInterruptHandler 2640  
           __size_of_PIN_MANAGER_Initialize 0092                                 __end_of_abs 2346  
                     __end_of_INT1_CallBack 2C24                   __size_of_set_display_info 001E  
                               __end_of_pad FF32                        __size_of_Default_ISR 0006  
                   __size_of_CRC_Initialize 0092                              ___year_to_secs 5EBA  
                      __end_of_send_lcd_cmd 2492                              _switch_handler F5F6  
             __size_of_ADCC_StartConversion 0012                                  ivt0x8_base 0008  
                             _uart1RxBuffer 02D6                       __end_of___fpclassifyf E360  
                             _uart2RxBuffer 0600                    __end_of_DMA1_DMASCNT_ISR 2F82  
                             _uart2TxBuffer 0400                              _DMA1_DMAOR_ISR 2FB0  
                       __end_of_hid_display D88C                  __end_of_send_port_data_dma 20B0  
                          __CFG_LPBOREN$OFF 000000                       __size_of_init_display 00EA  
               __size_of_eaDogM_WriteString 00A6             __end_of_CRC_CalculatedResultGet EAFA  
                                 _TimerDone 29AA                               _ringBufS_init 2982  
                    __end_of_load_hist_data CB56                                 __pdataBANK1 0100  
                               __pdataBANK2 0200                  __size_of_UART2_Receive_ISR 0020  
                       __size_of_get_switch 002C                  __end_of_EXT_INT_Initialize 27B4  
                  __size_of_update_cal_data 0056                     __end_of_calc_model_data 9F96  
                             _send_lcd_data 2BDC                         __end_of_help_button 2640  
           __end_of_eaDogM_WriteStringAtPos 13C2                         __end_of_BVSOC_TABLE F7E7  
                                 ___asfladd 1900                        calc_model_data@bcror 0088  
                               __pbssBIGRAM 0A3F                     __end_of_DMA1_Initialize 1A54  
                      calc_model_data@bvror 008C                                 __pbssCOMRAM 004A  
                               _check_range 178A            __end_of_INT0_SetInterruptHandler 2B12  
                    __end_of___year_to_secs 682C                               __pcstackBANK0 00E5  
                  __size_of_TMR2_Initialize 0018                      __size_of_TMR3_CallBack 0024  
                    __end_of_switch_handler F738                                 _CRCCON0bits 003968  
                               _CRCCON1bits 003969                      __size_of_set_hist_flag 0006  
                         __size_of___xxtofl 0204                     __end_of_SPI1_Initialize 2E86  
                  _UART1_RxInterruptHandler 00A7                    _UART2_TxInterruptHandler 00AA  
                                 __end_of_T F8D3                            _convert_adc_data 0C0E  
                                 _calc_bsoc 544C                   __size_of_ringBufS_put_dma 00AA  
                              _init_display 0682                      __end_of_DMA1_DMAOR_ISR 2FBA  
                    __size_of_TMR5_CallBack 0024                           __size_of_do_tzset 0280  
                     _TMR6_InterruptHandler 009E                          calc_ror_data@bcror 0080  
                    __size_of_TMR6_CallBack 0024                     __end_of_cal_current_10A 0A98  
                   __end_of_DMA2_Initialize 1FB6                          calc_ror_data@bvror 0084  
                    _PIN_MANAGER_Initialize 1454                       __end_of___localtime_r CFE0  
                  __size_of_TMR3_Initialize 0048                        __end_of_wait_lcd_set 2FFA  
                       __size_of_scan_trans 003C                               __pmediumconst F716  
                                 __ptext100 AD70                                   __ptext101 F738  
                                 __ptext110 E1CA                                   __ptext102 E808  
                                 __ptext111 EAFA                                   __ptext103 D450  
                                 __ptext200 2C48                                   __ptext120 1578  
                                 __ptext112 219A                                   __ptext104 BC4A  
                                 __ptext201 3010                                   __ptext121 FE1E  
                                 __ptext113 0916                                   __ptext105 15D6  
                                 __ptext210 2900                                   __ptext202 544C  
                                 __ptext130 2DB8                                   __ptext122 10CA  
                                 __ptext114 FD06                                   __ptext106 1684  
                                 __ptext211 1708                                   __ptext203 205E  
                                 __ptext131 2F1A                                   __ptext123 1206  
                                 __ptext115 F4A8                                   __ptext107 2846  
                                 __ptext220 2D5C                                   __ptext212 3014  
                                 __ptext204 2F8C                                   __ptext140 2FD2  
                                 __ptext132 2DD6                                   __ptext124 F9B0  
                                 __ptext116 96BC                                   __ptext108 0842  
                                 __ptext221 2E10                                   __ptext213 3016  
                                 __ptext205 1900                                   __ptext141 1978  
                                 __ptext133 2E2A                                   __ptext125 2DF4  
                                 __ptext117 2300                                   __ptext109 A6C4  
                                 __ptext222 2C90                                   __ptext214 1AC0  
                                 __ptext206 2F64                                   __ptext150 9B3C  
                                 __ptext142 E682                                   __ptext134 2F48  
                                 __ptext126 0ED6                                   __ptext118 CFE0  
                                 __ptext223 214C                                   __ptext215 2B64  
                                 __ptext207 2C6C                                   __ptext151 3000  
                                 __ptext143 0D7C                                   __ptext135 23D0  
                                 __ptext127 C688                                   __ptext119 C408  
                                 __ptext224 2F74                                   __ptext216 2D1A  
                                 __ptext208 3012                                   __ptext160 29FA  
                                 __ptext152 2CF8                                   __ptext144 9200  
                                 __ptext136 2608                                   __ptext128 200C  
                                 __ptext225 2F98                                   __ptext217 2B8C  
                                 __ptext209 3008                                   __ptext161 21E2  
                                 __ptext153 DE6C                                   __ptext145 1D88  
                                 __ptext137 29AA                                   __ptext129 2876  
                                 __ptext226 2FA4                                   __ptext218 292C  
                                 __ptext170 2E70                                   __ptext162 2A22  
                                 __ptext154 2346                                   __ptext146 2CD6  
                                 __ptext138 2492                                   __ptext227 2FB0  
                                 __ptext219 2BB4                                   __ptext171 2E86  
                                 __ptext163 2958                                   __ptext155 78F8  
                                 __ptext147 DA9E                                   __ptext139 2FCA  
                                 __ptext228 0000                                   __ptext180 1F5C  
                                 __ptext172 2EB2                                   __ptext164 2A4A  
                                 __ptext156 70CE                                   __ptext148 8770  
                                 __ptext181 19EA                                   __ptext173 1454  
                                 __ptext165 222A                                   __ptext157 20FE  
                                 __ptext149 EDD2                                   __ptext190 F5F6  
                                 __ptext182 14E6                                   __ptext174 2E9C  
                                 __ptext166 2A72                                   __ptext158 1DEA  
                                 __ptext191 E028                                   __ptext183 2F82  
                                 __ptext175 1BF8                                   __ptext167 2272  
                                 __ptext159 29D2                                   __ptext192 24D2  
                                 __ptext184 1A54                                   __ptext176 2FDA  
                                 __ptext168 2A9A                                   __ptext193 2C24  
                                 __ptext185 2B12                                   __ptext177 2780  
                                 __ptext169 2E42                                   __ptext194 2640  
                                 __ptext186 2B3A                                   __ptext178 2AC2  
                                 __ptext195 A350                                   __ptext187 2554  
                                 __ptext179 2AEA                                   __ptext196 2F2A  
                                 __ptext188 2C00                                   __ptext197 2F56  
                                 __ptext189 300E                                   __ptext198 EF34  
                                 __ptext199 2512                           __size_of_set_time 0036  
                                 _hid_input F878                          __end_of_StartTimer 24D2  
                        _set_load_relay_one 2EFA                          _set_load_relay_two 2EEA  
                         __size_of_wdtdelay 005A                           __size_of_spinners 00F6  
                         __size_of_vfprintf 00AC                                    _ADCC_ISR 2900  
                    __CFG_BBSIZE$BBSIZE_512 000000                                   fabsf@F463 0078  
                    __size_of_days_in_month 0064                                    _DMA1CON0 003BFC  
                                  _DMA1CON1 003BFD                                    _DMA1AIRQ 003BFE  
                                  _DMA2CON0 003BDC                                    _DMA2CON1 003BDD  
                                  _DMA2AIRQ 003BDE                                    _DMA1SIRQ 003BFF  
                                  _DMA2SIRQ 003BDF                                   _esr_check B972  
                   __size_of_get_raw_result 0022                              __size_of_fabsf 00AE  
                                 _init_bsoc CB56                      __size_of_wait_lcd_done 0022  
                            __size_of_fputc 0124                                    _T2CLKCON 003FAE  
                            __size_of_fputs 0098                    __size_of_DATAEE_ReadByte 0032  
                            __size_of_put2d 011A                                   _lp_filter DE6C  
                                 _localtime 2E5A                                 _hid_display D670  
                            __size_of_srand 0034                              __size_of_putch 001A  
                      _INTERRUPT_Initialize 1BF8                                    _T6CLKCON 003F96  
             __size_of_start_switch_handler 0020                             ?_DMA1_DMAOR_ISR 0001  
                                  _INT0_ISR 2F64                                    _INT1_ISR 2554  
                                  _LATCbits 003FBC                                    _LATDbits 003FBD  
                                  _LATEbits 003FBE                                    _LATFbits 003FBF  
         __size_of_INT1_SetInterruptHandler 0028                                    _SCANCON0 00397C  
                                  _IPR1bits 003981                                    _IPR2bits 003982  
                                  _PIE1bits 003991                                    _IPR3bits 003983  
                                  _SCANTRIG 00397D                                    _PIE2bits 003992  
                                  _IPR5bits 003985                                    _PIE3bits 003993  
                                 _tickCount 02BC                                    _IPR6bits 003986  
                                  _PIE5bits 003995                                    _IPR8bits 003988  
                                  _PIE6bits 003996                                    _IPR9bits 003989  
                                  _PIE8bits 003998                         __CFG_BORV$VBOR_2P45 000000  
                                  _PIE9bits 003999                                _SPI1CON0bits 003D14  
                              _SPI1CON1bits 003D15                                   _set_dac_a 274C  
                                 _set_dac_b 2718                                   _ring_buf1 0543  
                                 _ring_buf2 0500                                    _PIR0bits 0039A0  
                                  _PIR1bits 0039A1                                    _PIR2bits 0039A2  
                                  _SPI1BAUD 003D19                                    _PIR4bits 0039A4  
                                  _SPI1CON0 003D14                                    _SPI1CON1 003D15  
                                  _SPI1CON2 003D16                               _TMR3_CallBack 2C48  
                                  _PIR5bits 0039A5                                    _PIR6bits 0039A6  
                                  _PIR8bits 0039A8                                    _PIR9bits 0039A9  
                  __size_of_TMR5_Initialize 0048                               _set_hist_flag 2FE2  
                                 _set_vterm 2DB8                         __size_of_update_lcd 0160  
                               _help_button 2608                                    _TMR3_ISR EF34  
                               _BVSOC_TABLE F717                                    _TMR5_ISR E028  
                                  _TMR6_ISR 2E10          __end_of___secs_to_tm@days_in_month F823  
                ___secs_to_tm@days_in_month F817                                   _port_data 06FF  
                       __size_of_static_soc 005A                                   _vfpfcnvrt 38EC  
                              _SPI1INTFbits 003D1A                         __size_of_start_bsoc 0022  
                             _TMR5_CallBack 2C24                                  _ADCON0bits 003EF8  
                                 _zi_read32 02B8                          __end_of_check_help DA9E  
                                 _start_lcd 2FFA                     __size_of_FVR_Initialize 0008  
                 __size_of_send_lcd_cmd_dma 001E                               _TMR6_CallBack 2C90  
                            _write_cal_data F350                       __size_of_send_lcd_cmd 0040  
         __size_of_TMR5_SetInterruptHandler 0028                                   _stop_bsoc 3000  
                          _set_display_info 2DD6                    __size_of_PWM8_Initialize 0016  
                  __size_of_TMR6_Initialize 002A                              _CRC_Initialize 14E6  
                               _INTCON0bits 003FD2                                   copy_data0 01D4  
                                 copy_data1 01FA                                   copy_data2 021C  
          __size_of_CRC_CalculatedResultGet 0172                    _INT0_SetInterruptHandler 2AEA  
                       __size_of_vterm_dump 018E         __end_of_UART2_SetTxInterruptHandler 29FA  
               _UART2_SetTxInterruptHandler 29D2                               _days_in_month 1C5E  
                              _uart1RxCount 00D0                                _uart2RxCount 00CD  
                                  __Hrparam 0000            __size_of_eaDogM_WriteStringAtPos 0092  
                   __CFG_RSTOSC$EXTOSC_4PLL 000000                    __size_of_TMR3_WriteTimer 0040  
                                  __Lrparam 0000                     __size_of_check_adc_scan 0008  
                        __CFG_BOREN$SBORDIS 000000                  __end_of_current_sensor_cal 544C  
                  __size_of_conv_raw_result 04BC                               _wait_lcd_done 2CB4  
                              _send_lcd_cmd 2452                            __size_of___aldiv 0194  
                          __size_of___aodiv 0280                            __size_of___almod 0166  
                          __size_of___fladd 07BC               __size_of_get_ac_charger_relay 000E  
                          __size_of___aomod 0240                             _adc_int_handler 3016  
                          __size_of___fldiv 057A                            __size_of___awdiv 014E  
                          __size_of___flneg 0048                            __size_of___awmod 0118  
                          __size_of___lbmod 009A                            __size_of___flmul 082A  
                          __size_of___flsub 0046                            __size_of___fltol 0172  
                          __size_of___lodiv 0180                            __size_of___lomod 0140  
             __size_of_set_ac_charger_relay 0010                          __end_of_get_switch 2900  
                      __end_of_rule_to_secs 8770                     __size_of_check_day_time 0374  
                    __end_of_write_cal_data F4A8                       __end_of_DMA1_DMAA_ISR 2FAE  
                        ___fpclassifyf@F463 007C        __size_of_UART1_SetRxInterruptHandler 0028  
                          __size_of_asctime 0516                                    ___tzname 006C  
                          __size_of_getname 02FC                             lp_filter@smooth 0300  
                                  ___xxtofl DA9E                      __end_of_CRC_Initialize 1578  
                         ?_DMA1_DMADCNT_ISR 0001                            __size_of_getrule 0280  
               __size_of_check_enter_button 0072                    __size_of_ADCC_Initialize 006A  
               __end_of_eaDogM_WriteCommand 2F48                            __size_of_isalpha 0044  
                          __size_of_isdigit 0030                                    __pivt0x8 0008  
                          __size_of_islower 0030                            __size_of_isspace 0052  
                        ??_DMA1_DMADCNT_ISR 0007                            __size_of_set_dac 00B6  
                                  __ptext10 FBEE                                    __ptext11 0CC6  
                                  __ptext20 2452                                    __ptext12 1886  
                                  __ptext21 2D7C                                    __ptext13 DCA2  
                                  __ptext30 2EEA                                    __ptext22 2982  
                                  __ptext14 27B4                                    __ptext31 2EFA  
                                  __ptext23 CB56                                    __ptext15 C8FC  
                                  __ptext40 80B4                                    __ptext32 2F3A  
                                  __ptext24 0B54                                    __ptext16 27E6  
                                  __ptext41 1C5E                                    __ptext33 B698  
                                  __ptext25 D670                                    __ptext17 0682  
                                  __ptext50 F1F6                                    __ptext42 5EBA  
                                  __ptext34 1E4A                                    __ptext26 F878  
                                  __ptext18 2BDC                                    __ptext51 076C  
                                  __ptext43 0596                                    __ptext35 2E5A  
                                  __ptext27 B972                                    __ptext19 2412  
                                  __ptext60 2FE8                                    __ptext52 EC6C  
                                  __ptext44 BF08                                    __ptext36 CD9C  
                                  __ptext28 25CE                                    __ptext61 2F0A  
                                  __ptext53 E360                                    __ptext45 C188  
                                  __ptext37 682C                                    __ptext29 2FBA  
                                  __ptext70 20B0                                    __ptext62 E988  
                                  __ptext54 8CEA                                    __ptext46 D220  
                                  __ptext38 2592                                    __ptext71 2FEE  
                                  __ptext63 FF32                                    __ptext55 FAD4  
                                  __ptext47 04A4                                    __ptext39 02B8  
                                  __ptext80 28A6                                    __ptext72 129E  
                                  __ptext64 2EC6                                    __ptext56 116C  
                                  __ptext48 B0B0                                    __ptext81 26AE  
                                  __ptext73 09DA                                    __ptext65 1CC2  
                                  __ptext57 4898                                    __ptext49 281A  
                                  __ptext90 2FFA                                    __ptext82 F096  
                                  __ptext74 178A                                    __ptext66 2ED8  
                                  __ptext58 F350                                    __ptext91 13C2  
                                  __ptext83 1330                                    __ptext75 0C0E  
                                  __ptext67 2FC2                                    __ptext59 1B2A  
                                  __ptext92 B3AC                                    __ptext84 2D9A  
                                  __ptext76 1B92                                    __ptext68 03AE  
                                  __ptext93 1D26                                    __ptext85 2CB4  
                                  __ptext77 D88C                                    __ptext69 28D4  
                                  __ptext94 0E2A                                    __ptext86 1F02  
                                  __ptext78 E4F4                                    __ptext95 38EC  
                                  __ptext87 22BA                                    __ptext79 00B6  
                                  __ptext96 9F96                                    __ptext88 0F80  
                                  __ptext97 1600                                    __ptext89 2FF4  
                                  __ptext98 2816                                    __ptext99 238C  
                          __size_of_isupper 0030                                    _do_tzset BF08  
                     __end_of_read_cal_data DE6C                            __size_of_sprintf 010A  
                          __size_of_tolower 0084                                    us1168999 1E9A  
                                  us1541999 BC5C                                    us1630999 875A  
                          __size_of_strncmp 0220                            __size_of_toupper 0084  
                                  us1472999 96D6                                    us1553999 ADD6  
                                  us1562999 A016                            _ringBufS_put_dma 0ED6  
                                  _dst_name 01EF                        __end_of_Volts_to_SOC 0C0E  
                             __size_of_atoi 0274                               __size_of_ctoa 0088  
                             __size_of_main 15D6                               __size_of_dtoa 0480  
                             __size_of_nanf 0062                       __size_of_wait_lcd_set 0006  
                             __size_of_time 005E                               __size_of_stoa 02BE  
                             __size_of_utoa 0340                               __size_of_xtoa 03BA  
                       dac_spi_control@init 0052                                  _CRC_IsBusy 2F0A  
                      __CFG_WDTCWS$WDTCWS_7 000000                           ?_DMA1_DMASCNT_ISR 0001  
                     __end_of_init_port_dma 2816                                 _IVTLOCKbits 003FD4  
                      __end_of___secs_to_tm 38EC                    __size_of_TMR5_WriteTimer 0040  
                                  _set_time 2678                   _ADCC_ADI_InterruptHandler 00A4  
                                 stoa@F1166 0200                          ??_DMA1_DMASCNT_ISR 0007  
              __end_of_ADCC_StartConversion 2EEA                          __end_of_scan_trans 25CE  
                                  _spi_link 0060                                    _std_name 01F6  
                                  _wdtdelay 1F02                  __end_of_UART2_Transmit_ISR 2958  
                                  _spinners 03AE                                    _vfprintf 0E2A  
                  __end_of_convert_adc_data 0CC6                   __size_of_update_hist_data 007C  
                __end_of_PWM8_LoadDutyValue 2412        __end_of_TMR3_DefaultInterruptHandler 3012  
     __size_of_TMR3_DefaultInterruptHandler 0002                _TMR3_DefaultInterruptHandler 3010  
      __end_of_INT1_DefaultInterruptHandler 3010       __size_of_INT1_DefaultInterruptHandler 0002  
              _INT1_DefaultInterruptHandler 300E                          _send_port_data_dma 205E  
                             ??_Default_ISR 0001                                 _uart1RxHead 0057  
                    __size_of_get_vterm_ptr 002E                                 _uart2RxHead 0054  
                               _uart1RxTail 00D1                              _get_raw_result 2CD6  
                               _NVMCON1bits 0039E5                                 _uart2TxHead 00CF  
                               _uart2RxTail 00CE                                   spinners@s 01CD  
                               _uart2TxTail 0056                   __size_of_cal_current_zero 0092  
                              _wait_lcd_set 2FF4                          _EXT_INT_Initialize 2780  
      __end_of_TMR6_DefaultInterruptHandler 219A       __size_of_TMR6_DefaultInterruptHandler 004E  
              _TMR6_DefaultInterruptHandler 214C                           _send_lcd_data_dma 22BA  
      __end_of_ADCC_DefaultInterruptHandler 3016       __size_of_ADCC_DefaultInterruptHandler 0002  
              _ADCC_DefaultInterruptHandler 3014                                    intlevel1 0000  
                                  intlevel2 0000                             ___month_to_secs 0596  
                         _send_lcd_cmd_long 2412              __size_of_set_temp_display_help 0010  
             __end_of_set_temp_display_help 2F2A                       __end_of_calc_ror_data E808  
                         __CFG_CLKOUTEN$OFF 000000                  __end_of_eaDogM_WriteString 1026  
                     __end_of_mode_lamp_dim 2E42                     __end_of_adc_int_handler 3018  
                  __size_of_convert_dac_raw 0118                             _display_history B698  
                    __size_of_INT0_CallBack 0024                                  _SPI1SCKPPS 003ADE  
                                _SPI1SDIPPS 003ADF                      __size_of_INT1_CallBack 0024  
                        __end_of_update_lcd F1F6                      _uart2TxBufferRemaining 0055  
                        __end_of_static_soc 1F02                          __end_of_start_bsoc 2D1A  
                            _FVR_Initialize 2FDA                      __end_of_get_raw_result 2CF8  
                          _send_lcd_cmd_dma 2D9A                      __size_of___fpclassifyf 0196  
                     TMR5_ISR@CountCallBack 00C2            __end_of_INT1_SetInterruptHandler 2AEA  
                 __size_of_UART1_Initialize 0048                    __size_of_dac_spi_control 007A  
                 __end_of_send_lcd_data_dma 2300                            ??_DMA1_DMAOR_ISR 0007  
                   _CRC_CalculatedResultGet E988                   __end_of_send_lcd_cmd_long 2452  
                   __size_of_start_adc_scan 0064                         __end_of_Default_ISR 300E  
            __end_of_PIN_MANAGER_Initialize 14E6                   __size_of_mode_lamp_bright 000E  
                        __end_of_vterm_dump E682                     _eaDogM_WriteStringAtPos 1330  
                             _get_vterm_ptr 28A6                              _check_adc_scan 2FBA  
                 __size_of_UART2_Initialize 0060                       __size_of_rule_to_secs 06BC  
